

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 12 18:24:46 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=4,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=4,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=4,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=4,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=4,class=CODE,delta=1
   178                           	psect	text154,global,reloc=4,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=4,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=4,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=4,class=CODE,delta=1
   193                           	psect	text169,global,reloc=4,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=4,class=CODE,delta=1
   196                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   197                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   198                           	psect	text172,global,reloc=4,class=CODE,delta=1
   199                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   200                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   201  0000                     
   202                           ; Version 2.10
   203                           ; Generated 31/07/2019 GMT
   204                           ; 
   205                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   206                           ; All rights reserved.
   207                           ; 
   208                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   209                           ; 
   210                           ; Redistribution and use in source and binary forms, with or without modification, are
   211                           ; permitted provided that the following conditions are met:
   212                           ; 
   213                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   214                           ;        conditions and the following disclaimer.
   215                           ; 
   216                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   217                           ;        of conditions and the following disclaimer in the documentation and/or other
   218                           ;        materials provided with the distribution.
   219                           ; 
   220                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   221                           ;        software without specific prior written permission.
   222                           ; 
   223                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   224                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   225                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   226                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   227                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   228                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   229                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   230                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   231                           ; 
   232                           ; 
   233                           ; Code-generator required, PIC18F57K42 Definitions
   234                           ; 
   235                           ; SFR Addresses
   236  0000                     
   237 ;;_k	offset	0
   238 ;;_j	offset	1
   239 ;;_i	offset	2
   240 ;;_inp_index	offset	3
   241 ;;_mode	offset	4
   242 ;;_i_ror	offset	5
   243 ;;_s	offset=-2 (param)
   244 ;;_cmd	offset=-1 (param)
   245 ;;_cmd	offset=-1 (param)
   246 ;;_data	offset=-1 (param)
   247 ;;__this	offset=-2 (param)
   248 ;;_cvoltage	offset=-4 (param)
   249 ;;_h	offset=-1 (param)
   250 ;;_h	offset=-1 (param)
   251 ;;_i	offset=-1 (param)
   252 ;;_channel	offset=-1 (param)
   253 ;;_mode	offset=-1 (param)
   254 ;;_mode	offset=-1 (param)
   255 ;;_cmd	offset=-1 (param)
   256 ;;_i	offset	0
   257 ;;_h	offset=-1 (param)
   258 ;;_flipper	offset=-1 (param)
   259 ;;_f	offset	0
   260 ;;_ap	offset	6
   261 ;;_s	offset=-3 (param)
   262 ;;_fmt	offset=-5 (param)
   263 ;;_line	offset=-1 (param)
   264 ;;_vterm	offset=-2 (param)
   265 ;;_numMilliseconds	offset=-2 (param)
   266 ;;_vterm	offset=-1 (param)
   267 ;;_r	offset=-1 (param)
   268 ;;_c	offset=-2 (param)
   269 ;;_strPtr	offset=-4 (param)
   270 ;;_strPtr	offset=-1 (param)
   271 ;;_delay	offset=-4 (param)
   272 ;;_strPtr	offset=-2 (param)
   273 ;;__this	offset=-2 (param)
   274 ;;_clearBuffer	offset=-3 (param)
   275 ;;_s	offset	0
   276 ;;_k	offset	2
   277 ;;_dest	offset=-2 (param)
   278 ;;_c	offset=-4 (param)
   279 ;;_n	offset=-6 (param)
   280 ;;_ap	offset	0
   281 ;;_fmt	offset=-3 (param)
   282 ;;_cfmt	offset	0
   283 ;;_fp	offset=-2 (param)
   284 ;;_fmt	offset=-4 (param)
   285 ;;_ap	offset=-6 (param)
   286 ;;_vfpfcnvrt$5339	offset	0
   287 ;;_vfpfcnvrt$5350	offset	2
   288 ;;_vfpfcnvrt$5338	offset	4
   289 ;;_llu	offset	6
   290 ;;_ll	offset	14
   291 ;;_f	offset	22
   292 ;;_ct	offset	26
   293 ;;_cp	offset	29
   294 ;;_c	offset	31
   295 ;;_fp	offset=-2 (param)
   296 ;;_fmt	offset=-4 (param)
   297 ;;_ap	offset=-6 (param)
   298 ;;_xtoa$5324	offset	0
   299 ;;_xtoa$5323	offset	2
   300 ;;_n	offset	4
   301 ;;_c	offset	12
   302 ;;_i	offset	14
   303 ;;_w	offset	16
   304 ;;_p	offset	18
   305 ;;_fp	offset=-2 (param)
   306 ;;_d	offset=-10 (param)
   307 ;;_x	offset=-11 (param)
   308 ;;_toupper$6130	offset	0
   309 ;;_c	offset=-2 (param)
   310 ;;_c	offset=-2 (param)
   311 ;;_c	offset=-2 (param)
   312 ;;_n	offset	0
   313 ;;_i	offset	8
   314 ;;_w	offset	10
   315 ;;_p	offset	12
   316 ;;_fp	offset=-2 (param)
   317 ;;_d	offset=-10 (param)
   318 ;;_counter	offset	0
   319 ;;_dividend	offset=-8 (param)
   320 ;;_divisor	offset=-16 (param)
   321 ;;_quotient	offset	0
   322 ;;_counter	offset	8
   323 ;;_dividend	offset=-8 (param)
   324 ;;_divisor	offset=-16 (param)
   325 ;;_r	offset	0
   326 ;;_l	offset	2
   327 ;;__l	offset=-2 (param)
   328 ;;__r	offset=-4 (param)
   329 ;;_n	offset=-6 (param)
   330 ;;_nuls	offset	0
   331 ;;_l	offset	7
   332 ;;_p	offset	9
   333 ;;_cp	offset	11
   334 ;;_w	offset	13
   335 ;;_i	offset	15
   336 ;;_fp	offset=-2 (param)
   337 ;;_s	offset=-4 (param)
   338 ;;_efgtoa$5296	offset	0
   339 ;;_efgtoa$5295	offset	2
   340 ;;_efgtoa$5294	offset	4
   341 ;;_efgtoa$5290	offset	6
   342 ;;_efgtoa$5286	offset	8
   343 ;;_efgtoa$5285	offset	10
   344 ;;_u	offset	12
   345 ;;_g	offset	16
   346 ;;_l	offset	20
   347 ;;_h	offset	24
   348 ;;_ou	offset	28
   349 ;;_n	offset	32
   350 ;;_e	offset	34
   351 ;;_i	offset	36
   352 ;;_w	offset	38
   353 ;;_p	offset	40
   354 ;;_sign	offset	42
   355 ;;_d	offset	44
   356 ;;_ne	offset	46
   357 ;;_m	offset	48
   358 ;;_pp	offset	50
   359 ;;_t	offset	52
   360 ;;_mode	offset	54
   361 ;;_nmode	offset	55
   362 ;;_fp	offset=-2 (param)
   363 ;;_f	offset=-6 (param)
   364 ;;_c	offset=-7 (param)
   365 ;;_tolower$6115	offset	0
   366 ;;_c	offset=-2 (param)
   367 ;;_c	offset=-2 (param)
   368 ;;_d	offset	0
   369 ;;_s	offset	2
   370 ;;_dest	offset=-2 (param)
   371 ;;_src	offset=-4 (param)
   372 ;;_u	offset	0
   373 ;;_m	offset	4
   374 ;;_e	offset	8
   375 ;;_x	offset=-4 (param)
   376 ;;_u	offset	0
   377 ;;_e	offset	4
   378 ;;_x	offset=-4 (param)
   379 ;;_exp1	offset	0
   380 ;;_sign1	offset	1
   381 ;;_f1	offset=-4 (param)
   382 ;;_f1	offset=-4 (param)
   383 ;;_ff1	offset=-4 (param)
   384 ;;_ff2	offset=-8 (param)
   385 ;;_sign	offset	0
   386 ;;_counter	offset	1
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_quotient	offset	0
   390 ;;_sign	offset	2
   391 ;;_counter	offset	3
   392 ;;_dividend	offset=-2 (param)
   393 ;;_divisor	offset=-4 (param)
   394 ;;_dtoa$5262	offset	0
   395 ;;_n	offset	2
   396 ;;_i	offset	10
   397 ;;_s	offset	12
   398 ;;_w	offset	14
   399 ;;_p	offset	16
   400 ;;_fp	offset=-2 (param)
   401 ;;_d	offset=-10 (param)
   402 ;;_a	offset=-2 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	8
   409 ;;_counter	offset	9
   410 ;;_dividend	offset=-8 (param)
   411 ;;_divisor	offset=-16 (param)
   412 ;;_w	offset	0
   413 ;;_fp	offset=-2 (param)
   414 ;;_c	offset=-3 (param)
   415 ;;_w	offset	0
   416 ;;_i	offset	2
   417 ;;_fp	offset=-2 (param)
   418 ;;_buf	offset=-4 (param)
   419 ;;_p	offset=-6 (param)
   420 ;;_a	offset	0
   421 ;;_s	offset=-2 (param)
   422 ;;_i	offset	0
   423 ;;_c	offset	2
   424 ;;_s	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-2 (param)
   427 ;;_fp	offset=-4 (param)
   428 ;;_c	offset=-1 (param)
   429 ;;__this	offset=-2 (param)
   430 ;;_c	offset=-3 (param)
   431 ;;_atoi$5846	offset	0
   432 ;;_atoi$5844	offset	2
   433 ;;_atoi$5845	offset	4
   434 ;;_n	offset	5
   435 ;;_neg	offset	7
   436 ;;_s	offset=-2 (param)
   437 ;;_isspace$5895	offset	0
   438 ;;_c	offset=-2 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_vterm	offset=-1 (param)
   441 ;;_new_response_info	offset=-1 (param)
   442 ;;_new_response_info	offset=-1 (param)
   443 ;;_level	offset=-2 (param)
   444 ;;_dutyValue	offset=-2 (param)
   445 ;;_timer	offset=-1 (param)
   446 ;;_timer	offset=-1 (param)
   447 ;;_count	offset=-3 (param)
   448 ;;_h	offset=-1 (param)
   449 ;;_u	offset	0
   450 ;;_x	offset=-4 (param)
   451 ;;_chan	offset=-1 (param)
   452 ;;_to_what	offset=-2 (param)
   453 ;;_u	offset	0
   454 ;;_s	offset=-2 (param)
   455 ;;_index	offset=-1 (param)
   456 ;;_arg	offset	0
   457 ;;_exp	offset	4
   458 ;;_sign	offset=-1 (param)
   459 ;;_val	offset=-5 (param)
   460 ;;_grs	offset	0
   461 ;;_rem	offset	4
   462 ;;_new_exp	offset	8
   463 ;;_aexp	offset	10
   464 ;;_bexp	offset	11
   465 ;;_sign	offset	12
   466 ;;_b	offset=-4 (param)
   467 ;;_a	offset=-8 (param)
   468 ;;_ff1	offset=-4 (param)
   469 ;;_ff2	offset=-8 (param)
   470 ;;_lp_speed	offset	0
   471 ;;_new	offset=-4 (param)
   472 ;;_bn	offset=-5 (param)
   473 ;;_slow	offset=-6 (param)
   474 ;;_b	offset=-4 (param)
   475 ;;_a	offset=-8 (param)
   476 ;;_grs	offset	0
   477 ;;_bexp	offset	1
   478 ;;_aexp	offset	2
   479 ;;_signs	offset	3
   480 ;;_b	offset=-4 (param)
   481 ;;_a	offset=-8 (param)
   482 ;;_prod	offset	0
   483 ;;_grs	offset	4
   484 ;;_temp	offset	8
   485 ;;_bexp	offset	10
   486 ;;_aexp	offset	11
   487 ;;_sign	offset	12
   488 ;;_b	offset=-4 (param)
   489 ;;_a	offset=-8 (param)
   490 ;;_InterruptHandler	offset=-3 (param)
   491 ;;_InterruptHandler	offset=-3 (param)
   492 ;;_InterruptHandler	offset=-3 (param)
   493 ;;_InterruptHandler	offset=-3 (param)
   494 ;;_InterruptHandler	offset=-3 (param)
   495 ;;_InterruptHandler	offset=-3 (param)
   496 ;;_state	offset	0
   497 ;;_InterruptHandler	offset=-3 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_i	offset	0
   502 ;;_sw_value	offset	1
   503 ;;_timerVal	offset=-2 (param)
   504 ;;_timerVal	offset=-2 (param)
   505 ;;_log_ptr	offset	0
   506 ;;_f	offset	0
   507 ;;_ap	offset	6
   508 ;;_s	offset=-3 (param)
   509 ;;_fmt	offset=-5 (param)
   510 ;;_cfmt	offset	0
   511 ;;_fp	offset=-2 (param)
   512 ;;_fmt	offset=-4 (param)
   513 ;;_ap	offset=-6 (param)
   514 ;;_vfpfcnvrt$5339	offset	0
   515 ;;_vfpfcnvrt$5350	offset	2
   516 ;;_vfpfcnvrt$5338	offset	4
   517 ;;_llu	offset	6
   518 ;;_ll	offset	14
   519 ;;_f	offset	22
   520 ;;_ct	offset	26
   521 ;;_cp	offset	29
   522 ;;_c	offset	31
   523 ;;_fp	offset=-2 (param)
   524 ;;_fmt	offset=-4 (param)
   525 ;;_ap	offset=-6 (param)
   526 ;;_xtoa$5324	offset	0
   527 ;;_xtoa$5323	offset	2
   528 ;;_n	offset	4
   529 ;;_c	offset	12
   530 ;;_i	offset	14
   531 ;;_w	offset	16
   532 ;;_p	offset	18
   533 ;;_fp	offset=-2 (param)
   534 ;;_d	offset=-10 (param)
   535 ;;_x	offset=-11 (param)
   536 ;;_toupper$6130	offset	0
   537 ;;_c	offset=-2 (param)
   538 ;;_c	offset=-2 (param)
   539 ;;_c	offset=-2 (param)
   540 ;;_n	offset	0
   541 ;;_i	offset	8
   542 ;;_w	offset	10
   543 ;;_p	offset	12
   544 ;;_fp	offset=-2 (param)
   545 ;;_d	offset=-10 (param)
   546 ;;_counter	offset	0
   547 ;;_dividend	offset=-8 (param)
   548 ;;_divisor	offset=-16 (param)
   549 ;;_quotient	offset	0
   550 ;;_counter	offset	8
   551 ;;_dividend	offset=-8 (param)
   552 ;;_divisor	offset=-16 (param)
   553 ;;_r	offset	0
   554 ;;_l	offset	2
   555 ;;__l	offset=-2 (param)
   556 ;;__r	offset=-4 (param)
   557 ;;_n	offset=-6 (param)
   558 ;;_nuls	offset	0
   559 ;;_l	offset	7
   560 ;;_p	offset	9
   561 ;;_cp	offset	11
   562 ;;_w	offset	13
   563 ;;_i	offset	15
   564 ;;_fp	offset=-2 (param)
   565 ;;_s	offset=-4 (param)
   566 ;;_efgtoa$5296	offset	0
   567 ;;_efgtoa$5295	offset	2
   568 ;;_efgtoa$5294	offset	4
   569 ;;_efgtoa$5290	offset	6
   570 ;;_efgtoa$5286	offset	8
   571 ;;_efgtoa$5285	offset	10
   572 ;;_u	offset	12
   573 ;;_g	offset	16
   574 ;;_l	offset	20
   575 ;;_h	offset	24
   576 ;;_ou	offset	28
   577 ;;_n	offset	32
   578 ;;_e	offset	34
   579 ;;_i	offset	36
   580 ;;_w	offset	38
   581 ;;_p	offset	40
   582 ;;_sign	offset	42
   583 ;;_d	offset	44
   584 ;;_ne	offset	46
   585 ;;_m	offset	48
   586 ;;_pp	offset	50
   587 ;;_t	offset	52
   588 ;;_mode	offset	54
   589 ;;_nmode	offset	55
   590 ;;_fp	offset=-2 (param)
   591 ;;_f	offset=-6 (param)
   592 ;;_c	offset=-7 (param)
   593 ;;_tolower$6115	offset	0
   594 ;;_c	offset=-2 (param)
   595 ;;_c	offset=-2 (param)
   596 ;;_d	offset	0
   597 ;;_s	offset	2
   598 ;;_dest	offset=-2 (param)
   599 ;;_src	offset=-4 (param)
   600 ;;_u	offset	0
   601 ;;_m	offset	4
   602 ;;_e	offset	8
   603 ;;_x	offset=-4 (param)
   604 ;;_u	offset	0
   605 ;;_e	offset	4
   606 ;;_x	offset=-4 (param)
   607 ;;_exp1	offset	0
   608 ;;_sign1	offset	1
   609 ;;_f1	offset=-4 (param)
   610 ;;_b	offset=-4 (param)
   611 ;;_a	offset=-8 (param)
   612 ;;_grs	offset	0
   613 ;;_bexp	offset	1
   614 ;;_aexp	offset	2
   615 ;;_signs	offset	3
   616 ;;_b	offset=-4 (param)
   617 ;;_a	offset=-8 (param)
   618 ;;_f1	offset=-4 (param)
   619 ;;_prod	offset	0
   620 ;;_grs	offset	4
   621 ;;_temp	offset	8
   622 ;;_bexp	offset	10
   623 ;;_aexp	offset	11
   624 ;;_sign	offset	12
   625 ;;_b	offset=-4 (param)
   626 ;;_a	offset=-8 (param)
   627 ;;_ff1	offset=-4 (param)
   628 ;;_ff2	offset=-8 (param)
   629 ;;_ff1	offset=-4 (param)
   630 ;;_ff2	offset=-8 (param)
   631 ;;_grs	offset	0
   632 ;;_rem	offset	4
   633 ;;_new_exp	offset	8
   634 ;;_aexp	offset	10
   635 ;;_bexp	offset	11
   636 ;;_sign	offset	12
   637 ;;_b	offset=-4 (param)
   638 ;;_a	offset=-8 (param)
   639 ;;_sign	offset	0
   640 ;;_counter	offset	1
   641 ;;_dividend	offset=-2 (param)
   642 ;;_divisor	offset=-4 (param)
   643 ;;_quotient	offset	0
   644 ;;_sign	offset	2
   645 ;;_counter	offset	3
   646 ;;_dividend	offset=-2 (param)
   647 ;;_divisor	offset=-4 (param)
   648 ;;_dtoa$5262	offset	0
   649 ;;_n	offset	2
   650 ;;_i	offset	10
   651 ;;_s	offset	12
   652 ;;_w	offset	14
   653 ;;_p	offset	16
   654 ;;_fp	offset=-2 (param)
   655 ;;_d	offset=-10 (param)
   656 ;;_a	offset=-2 (param)
   657 ;;_sign	offset	0
   658 ;;_counter	offset	1
   659 ;;_dividend	offset=-8 (param)
   660 ;;_divisor	offset=-16 (param)
   661 ;;_quotient	offset	0
   662 ;;_sign	offset	8
   663 ;;_counter	offset	9
   664 ;;_dividend	offset=-8 (param)
   665 ;;_divisor	offset=-16 (param)
   666 ;;_w	offset	0
   667 ;;_fp	offset=-2 (param)
   668 ;;_c	offset=-3 (param)
   669 ;;_w	offset	0
   670 ;;_i	offset	2
   671 ;;_fp	offset=-2 (param)
   672 ;;_buf	offset=-4 (param)
   673 ;;_p	offset=-6 (param)
   674 ;;_a	offset	0
   675 ;;_s	offset=-2 (param)
   676 ;;_i	offset	0
   677 ;;_c	offset	2
   678 ;;_s	offset=-2 (param)
   679 ;;_fp	offset=-4 (param)
   680 ;;_c	offset=-2 (param)
   681 ;;_fp	offset=-4 (param)
   682 ;;_c	offset=-1 (param)
   683 ;;__this	offset=-2 (param)
   684 ;;_c	offset=-3 (param)
   685 ;;_atoi$5846	offset	0
   686 ;;_atoi$5844	offset	2
   687 ;;_atoi$5845	offset	4
   688 ;;_n	offset	5
   689 ;;_neg	offset	7
   690 ;;_s	offset=-2 (param)
   691 ;;_isspace$5895	offset	0
   692 ;;_c	offset=-2 (param)
   693 ;;_c	offset=-2 (param)
   694 ;;_dsize	offset=-2 (param)
   695 ;;_timer	offset=-1 (param)
   696 ;;_count	offset=-3 (param)
   697 ;;_channel	offset=-1 (param)
   698 ;;_i	offset	0
   699                           
   700                           	psect	idataBIGRAM
   701  017424                     __pidataBIGRAM:
   702                           	opt callstack 0
   703                           
   704                           ;initializer for _port_data
   705  017424  FF                 	db	255
   706  017425  00                 	db	0
   707  017426  FF                 	db	255
   708  017427  00                 	db	0
   709  017428  FF                 	db	255
   710  017429  00                 	db	0
   711  01742A  FF                 	db	255
   712  01742B  00                 	db	0
   713  01742C  FF                 	db	255
   714  01742D  00                 	db	0
   715  01742E  FF                 	db	255
   716  01742F  00                 	db	0
   717  017430  FF                 	db	255
   718  017431  00                 	db	0
   719  017432  FF                 	db	255
   720  017433  00                 	db	0
   721  017434  00                 	db	0
   722  017435  00                 	db	0
   723  017436  00                 	db	0
   724  017437  00                 	db	0
   725  017438  00                 	db	0
   726  017439  00                 	db	0
   727  01743A  00                 	db	0
   728  01743B  00                 	db	0
   729  01743C  00                 	db	0
   730  01743D  00                 	db	0
   731  01743E  00                 	db	0
   732  01743F  00                 	db	0
   733  017440  00                 	db	0
   734  017441  00                 	db	0
   735  017442  00                 	db	0
   736  017443  00                 	db	0
   737  017444  00                 	db	0
   738  017445  00                 	db	0
   739  017446  00                 	db	0
   740  017447  00                 	db	0
   741  017448  00                 	db	0
   742  017449  00                 	db	0
   743  01744A  00                 	db	0
   744  01744B  00                 	db	0
   745  01744C  00                 	db	0
   746  01744D  00                 	db	0
   747  01744E  00                 	db	0
   748  01744F  00                 	db	0
   749  017450  00                 	db	0
   750  017451  00                 	db	0
   751  017452  00                 	db	0
   752  017453  00                 	db	0
   753  017454  00                 	db	0
   754  017455  00                 	db	0
   755  017456  00                 	db	0
   756  017457  00                 	db	0
   757  017458  00                 	db	0
   758  017459  00                 	db	0
   759  01745A  00                 	db	0
   760  01745B  00                 	db	0
   761  01745C  00                 	db	0
   762  01745D  00                 	db	0
   763  01745E  00                 	db	0
   764  01745F  00                 	db	0
   765  017460  00                 	db	0
   766  017461  00                 	db	0
   767  017462  00                 	db	0
   768  017463  00                 	db	0
   769  017464  00                 	db	0
   770  017465  00                 	db	0
   771  017466  00                 	db	0
   772  017467  00                 	db	0
   773  017468  00                 	db	0
   774  017469  00                 	db	0
   775  01746A  00                 	db	0
   776  01746B  00                 	db	0
   777  01746C  00                 	db	0
   778  01746D  00                 	db	0
   779  01746E  00                 	db	0
   780  01746F  00                 	db	0
   781  017470  00                 	db	0
   782  017471  00                 	db	0
   783  017472  00                 	db	0
   784  017473  00                 	db	0
   785  017474  00                 	db	0
   786  017475  00                 	db	0
   787  017476  00                 	db	0
   788  017477  00                 	db	0
   789  017478  00                 	db	0
   790  017479  00                 	db	0
   791  01747A  00                 	db	0
   792  01747B  00                 	db	0
   793  01747C  00                 	db	0
   794  01747D  00                 	db	0
   795  01747E  00                 	db	0
   796  01747F  00                 	db	0
   797  017480  00                 	db	0
   798  017481  00                 	db	0
   799  017482  00                 	db	0
   800  017483  00                 	db	0
   801  017484  00                 	db	0
   802  017485  00                 	db	0
   803  017486  00                 	db	0
   804  017487  00                 	db	0
   805  017488  00                 	db	0
   806  017489  00                 	db	0
   807  01748A  00                 	db	0
   808  01748B  00                 	db	0
   809  01748C  00                 	db	0
   810  01748D  00                 	db	0
   811  01748E  00                 	db	0
   812  01748F  00                 	db	0
   813  017490  00                 	db	0
   814  017491  00                 	db	0
   815  017492  00                 	db	0
   816  017493  00                 	db	0
   817  017494  00                 	db	0
   818  017495  00                 	db	0
   819  017496  00                 	db	0
   820  017497  00                 	db	0
   821  017498  00                 	db	0
   822  017499  00                 	db	0
   823  01749A  00                 	db	0
   824  01749B  00                 	db	0
   825  01749C  00                 	db	0
   826  01749D  00                 	db	0
   827  01749E  00                 	db	0
   828  01749F  00                 	db	0
   829  0174A0  00                 	db	0
   830  0174A1  00                 	db	0
   831  0174A2  00                 	db	0
   832  0174A3  00                 	db	0
   833  0174A4  00                 	db	0
   834  0174A5  00                 	db	0
   835  0174A6  00                 	db	0
   836  0174A7  00                 	db	0
   837  0174A8  00                 	db	0
   838  0174A9  00                 	db	0
   839  0174AA  00                 	db	0
   840  0174AB  00                 	db	0
   841  0174AC  00                 	db	0
   842  0174AD  00                 	db	0
   843  0174AE  00                 	db	0
   844  0174AF  00                 	db	0
   845  0174B0  00                 	db	0
   846  0174B1  00                 	db	0
   847  0174B2  00                 	db	0
   848  0174B3  00                 	db	0
   849  0174B4  00                 	db	0
   850  0174B5  00                 	db	0
   851  0174B6  00                 	db	0
   852  0174B7  00                 	db	0
   853  0174B8  00                 	db	0
   854  0174B9  00                 	db	0
   855  0174BA  00                 	db	0
   856  0174BB  00                 	db	0
   857  0174BC  00                 	db	0
   858  0174BD  00                 	db	0
   859  0174BE  00                 	db	0
   860  0174BF  00                 	db	0
   861  0174C0  00                 	db	0
   862  0174C1  00                 	db	0
   863  0174C2  00                 	db	0
   864  0174C3  00                 	db	0
   865  0174C4  00                 	db	0
   866  0174C5  00                 	db	0
   867  0174C6  00                 	db	0
   868  0174C7  00                 	db	0
   869  0174C8  00                 	db	0
   870  0174C9  00                 	db	0
   871  0174CA  00                 	db	0
   872  0174CB  00                 	db	0
   873  0174CC  00                 	db	0
   874  0174CD  00                 	db	0
   875  0174CE  00                 	db	0
   876  0174CF  00                 	db	0
   877  0174D0  00                 	db	0
   878  0174D1  00                 	db	0
   879  0174D2  00                 	db	0
   880  0174D3  00                 	db	0
   881  0174D4  00                 	db	0
   882  0174D5  00                 	db	0
   883  0174D6  00                 	db	0
   884  0174D7  00                 	db	0
   885  0174D8  00                 	db	0
   886  0174D9  00                 	db	0
   887  0174DA  00                 	db	0
   888  0174DB  00                 	db	0
   889  0174DC  00                 	db	0
   890  0174DD  00                 	db	0
   891  0174DE  00                 	db	0
   892  0174DF  00                 	db	0
   893  0174E0  00                 	db	0
   894  0174E1  00                 	db	0
   895  0174E2  00                 	db	0
   896  0174E3  00                 	db	0
   897  0174E4  00                 	db	0
   898  0174E5  00                 	db	0
   899  0174E6  00                 	db	0
   900  0174E7  00                 	db	0
   901  0174E8  00                 	db	0
   902  0174E9  00                 	db	0
   903  0174EA  00                 	db	0
   904  0174EB  00                 	db	0
   905  0174EC  00                 	db	0
   906  0174ED  00                 	db	0
   907  0174EE  00                 	db	0
   908  0174EF  00                 	db	0
   909  0174F0  00                 	db	0
   910  0174F1  00                 	db	0
   911  0174F2  00                 	db	0
   912  0174F3  00                 	db	0
   913  0174F4  00                 	db	0
   914  0174F5  00                 	db	0
   915  0174F6  00                 	db	0
   916  0174F7  00                 	db	0
   917  0174F8  00                 	db	0
   918  0174F9  00                 	db	0
   919  0174FA  00                 	db	0
   920  0174FB  00                 	db	0
   921  0174FC  00                 	db	0
   922  0174FD  00                 	db	0
   923  0174FE  00                 	db	0
   924  0174FF  00                 	db	0
   925  017500  00                 	db	0
   926  017501  00                 	db	0
   927  017502  00                 	db	0
   928  017503  00                 	db	0
   929  017504  00                 	db	0
   930  017505  00                 	db	0
   931  017506  00                 	db	0
   932  017507  00                 	db	0
   933  017508  00                 	db	0
   934  017509  00                 	db	0
   935  01750A  00                 	db	0
   936  01750B  00                 	db	0
   937  01750C  00                 	db	0
   938  01750D  00                 	db	0
   939  01750E  00                 	db	0
   940  01750F  00                 	db	0
   941  017510  00                 	db	0
   942  017511  00                 	db	0
   943  017512  00                 	db	0
   944  017513  00                 	db	0
   945  017514  00                 	db	0
   946  017515  00                 	db	0
   947  017516  00                 	db	0
   948  017517  00                 	db	0
   949  017518  00                 	db	0
   950  017519  00                 	db	0
   951  01751A  00                 	db	0
   952  01751B  00                 	db	0
   953  01751C  00                 	db	0
   954  01751D  00                 	db	0
   955  01751E  00                 	db	0
   956  01751F  00                 	db	0
   957  017520  00                 	db	0
   958  017521  00                 	db	0
   959  017522  00                 	db	0
   960  017523  00                 	db	0
   961  017524  00                 	db	0
   962  017525  00                 	db	0
   963  017526  00                 	db	0
   964  017527  00                 	db	0
   965  017528  00                 	db	0
   966  017529  00                 	db	0
   967  01752A  00                 	db	0
   968  01752B  00                 	db	0
   969  01752C  00                 	db	0
   970  01752D  00                 	db	0
   971  01752E  00                 	db	0
   972  01752F  00                 	db	0
   973  017530  00                 	db	0
   974  017531  00                 	db	0
   975  017532  00                 	db	0
   976  017533  00                 	db	0
   977  017534  00                 	db	0
   978  017535  00                 	db	0
   979  017536  00                 	db	0
   980  017537  00                 	db	0
   981  017538  00                 	db	0
   982  017539  00                 	db	0
   983  01753A  00                 	db	0
   984  01753B  00                 	db	0
   985  01753C  00                 	db	0
   986  01753D  00                 	db	0
   987  01753E  00                 	db	0
   988  01753F  00                 	db	0
   989  017540  00                 	db	0
   990  017541  00                 	db	0
   991  017542  00                 	db	0
   992  017543  00                 	db	0
   993  017544  00                 	db	0
   994  017545  00                 	db	0
   995  017546  00                 	db	0
   996  017547  00                 	db	0
   997  017548  00                 	db	0
   998  017549  00                 	db	0
   999  01754A  00                 	db	0
  1000  01754B  00                 	db	0
  1001  01754C  00                 	db	0
  1002  01754D  00                 	db	0
  1003  01754E  00                 	db	0
  1004  01754F  00                 	db	0
  1005  017550  00                 	db	0
  1006  017551  00                 	db	0
  1007  017552  00                 	db	0
  1008  017553  00                 	db	0
  1009  017554  00                 	db	0
  1010  017555  00                 	db	0
  1011  017556  00                 	db	0
  1012  017557  00                 	db	0
  1013  017558  00                 	db	0
  1014  017559  00                 	db	0
  1015  01755A  00                 	db	0
  1016  01755B  00                 	db	0
  1017  01755C  00                 	db	0
  1018  01755D  00                 	db	0
  1019  01755E  00                 	db	0
  1020  01755F  00                 	db	0
  1021  017560  00                 	db	0
  1022  017561  00                 	db	0
  1023  017562  00                 	db	0
  1024  017563  00                 	db	0
  1025  017564  00                 	db	0
  1026  017565  00                 	db	0
  1027  017566  00                 	db	0
  1028  017567  00                 	db	0
  1029  017568  00                 	db	0
  1030  017569  00                 	db	0
  1031  01756A  00                 	db	0
  1032  01756B  00                 	db	0
  1033  01756C  00                 	db	0
  1034  01756D  00                 	db	0
  1035  01756E  00                 	db	0
  1036  01756F  00                 	db	0
  1037  017570  00                 	db	0
  1038  017571  00                 	db	0
  1039  017572  00                 	db	0
  1040  017573  00                 	db	0
  1041  017574  00                 	db	0
  1042  017575  00                 	db	0
  1043  017576  00                 	db	0
  1044  017577  00                 	db	0
  1045  017578  00                 	db	0
  1046  017579  00                 	db	0
  1047  01757A  00                 	db	0
  1048  01757B  00                 	db	0
  1049  01757C  00                 	db	0
  1050  01757D  00                 	db	0
  1051  01757E  00                 	db	0
  1052  01757F  00                 	db	0
  1053  017580  00                 	db	0
  1054  017581  00                 	db	0
  1055  017582  00                 	db	0
  1056  017583  00                 	db	0
  1057  017584  00                 	db	0
  1058  017585  00                 	db	0
  1059  017586  00                 	db	0
  1060  017587  00                 	db	0
  1061  017588  00                 	db	0
  1062  017589  00                 	db	0
  1063  01758A  00                 	db	0
  1064  01758B  00                 	db	0
  1065  01758C  00                 	db	0
  1066  01758D  00                 	db	0
  1067  01758E  00                 	db	0
  1068  01758F  00                 	db	0
  1069  017590  00                 	db	0
  1070  017591  00                 	db	0
  1071  017592  00                 	db	0
  1072  017593  00                 	db	0
  1073  017594  00                 	db	0
  1074  017595  00                 	db	0
  1075  017596  00                 	db	0
  1076  017597  00                 	db	0
  1077  017598  00                 	db	0
  1078  017599  00                 	db	0
  1079  01759A  00                 	db	0
  1080  01759B  00                 	db	0
  1081  01759C  00                 	db	0
  1082  01759D  00                 	db	0
  1083  01759E  00                 	db	0
  1084  01759F  00                 	db	0
  1085  0175A0  00                 	db	0
  1086  0175A1  00                 	db	0
  1087  0175A2  00                 	db	0
  1088  0175A3  00                 	db	0
  1089  0175A4  00                 	db	0
  1090  0175A5  00                 	db	0
  1091  0175A6  00                 	db	0
  1092  0175A7  00                 	db	0
  1093  0175A8  00                 	db	0
  1094  0175A9  00                 	db	0
  1095  0175AA  00                 	db	0
  1096  0175AB  00                 	db	0
  1097  0175AC  00                 	db	0
  1098  0175AD  00                 	db	0
  1099  0175AE  00                 	db	0
  1100  0175AF  00                 	db	0
  1101  0175B0  00                 	db	0
  1102  0175B1  00                 	db	0
  1103  0175B2  00                 	db	0
  1104  0175B3  00                 	db	0
  1105  0175B4  00                 	db	0
  1106  0175B5  00                 	db	0
  1107  0175B6  00                 	db	0
  1108  0175B7  00                 	db	0
  1109  0175B8  00                 	db	0
  1110  0175B9  00                 	db	0
  1111  0175BA  00                 	db	0
  1112  0175BB  00                 	db	0
  1113  0175BC  00                 	db	0
  1114  0175BD  00                 	db	0
  1115  0175BE  00                 	db	0
  1116  0175BF  00                 	db	0
  1117  0175C0  00                 	db	0
  1118  0175C1  00                 	db	0
  1119  0175C2  00                 	db	0
  1120  0175C3  00                 	db	0
  1121  0175C4  00                 	db	0
  1122  0175C5  00                 	db	0
  1123  0175C6  00                 	db	0
  1124  0175C7  00                 	db	0
  1125  0175C8  00                 	db	0
  1126  0175C9  00                 	db	0
  1127  0175CA  00                 	db	0
  1128  0175CB  00                 	db	0
  1129  0175CC  00                 	db	0
  1130  0175CD  00                 	db	0
  1131  0175CE  00                 	db	0
  1132  0175CF  00                 	db	0
  1133  0175D0  00                 	db	0
  1134  0175D1  00                 	db	0
  1135  0175D2  00                 	db	0
  1136  0175D3  00                 	db	0
  1137  0175D4  00                 	db	0
  1138  0175D5  00                 	db	0
  1139  0175D6  00                 	db	0
  1140  0175D7  00                 	db	0
  1141  0175D8  00                 	db	0
  1142  0175D9  00                 	db	0
  1143  0175DA  00                 	db	0
  1144  0175DB  00                 	db	0
  1145  0175DC  00                 	db	0
  1146  0175DD  00                 	db	0
  1147  0175DE  00                 	db	0
  1148  0175DF  00                 	db	0
  1149  0175E0  00                 	db	0
  1150  0175E1  00                 	db	0
  1151  0175E2  00                 	db	0
  1152  0175E3  00                 	db	0
  1153  0175E4  00                 	db	0
  1154  0175E5  00                 	db	0
  1155  0175E6  00                 	db	0
  1156  0175E7  00                 	db	0
  1157  0175E8  00                 	db	0
  1158  0175E9  00                 	db	0
  1159  0175EA  00                 	db	0
  1160  0175EB  00                 	db	0
  1161  0175EC  00                 	db	0
  1162  0175ED  00                 	db	0
  1163  0175EE  00                 	db	0
  1164  0175EF  00                 	db	0
  1165  0175F0  00                 	db	0
  1166  0175F1  00                 	db	0
  1167  0175F2  00                 	db	0
  1168  0175F3  00                 	db	0
  1169  0175F4  00                 	db	0
  1170  0175F5  00                 	db	0
  1171  0175F6  00                 	db	0
  1172  0175F7  00                 	db	0
  1173  0175F8  00                 	db	0
  1174  0175F9  00                 	db	0
  1175  0175FA  00                 	db	0
  1176  0175FB  00                 	db	0
  1177  0175FC  00                 	db	0
  1178  0175FD  00                 	db	0
  1179  0175FE  00                 	db	0
  1180  0175FF  00                 	db	0
  1181  017600  00                 	db	0
  1182  017601  00                 	db	0
  1183  017602  00                 	db	0
  1184  017603  00                 	db	0
  1185  017604  00                 	db	0
  1186  017605  00                 	db	0
  1187  017606  00                 	db	0
  1188  017607  00                 	db	0
  1189  017608  00                 	db	0
  1190  017609  00                 	db	0
  1191  01760A  00                 	db	0
  1192  01760B  00                 	db	0
  1193  01760C  00                 	db	0
  1194  01760D  00                 	db	0
  1195  01760E  00                 	db	0
  1196  01760F  00                 	db	0
  1197  017610  00                 	db	0
  1198  017611  00                 	db	0
  1199  017612  00                 	db	0
  1200  017613  00                 	db	0
  1201  017614  00                 	db	0
  1202  017615  00                 	db	0
  1203  017616  00                 	db	0
  1204  017617  00                 	db	0
  1205  017618  00                 	db	0
  1206  017619  00                 	db	0
  1207  01761A  00                 	db	0
  1208  01761B  00                 	db	0
  1209  01761C  00                 	db	0
  1210  01761D  00                 	db	0
  1211  01761E  00                 	db	0
  1212  01761F  00                 	db	0
  1213  017620  00                 	db	0
  1214  017621  00                 	db	0
  1215  017622  00                 	db	0
  1216  017623  00                 	db	0
  1217                           
  1218                           	psect	idataBANK0
  1219  01A724                     __pidataBANK0:
  1220                           	opt callstack 0
  1221                           
  1222                           ;initializer for _R
  1223  01A724  0000               	dw	0
  1224  01A726  0000               	dw	0
  1225  01A728  0000               	dw	0
  1226  01A72A  0000               	dw	0
  1227  01A72C  0000               	dw	0
  1228  01A72E  0000               	dw	0
  1229  01A730  0000               	dw	0
  1230  01A732  0000               	dw	0
  1231  01A734  0000               	dw	0
  1232  01A736  0000               	dw	0
  1233  01A738  0000               	dw	0
  1234  01A73A  0000               	dw	0
  1235  01A73C  0000               	dw	0
  1236  01A73E  0000               	dw	0
  1237  01A740  0000               	dw	0
  1238  01A742  0000               	dw	0
  1239  01A744  0F67               	dw	3943
  1240  01A746  0F8F               	dw	3983
  1241  01A748  00                 	db	0
  1242  01A749  0000               	dw	0
  1243  01A74B  00                 	db	0
  1244                           
  1245                           ;initializer for stoa@F1166
  1246  01A74C  28                 	db	40
  1247  01A74D  6E                 	db	110
  1248  01A74E  75                 	db	117
  1249  01A74F  6C                 	db	108
  1250  01A750  6C                 	db	108
  1251  01A751  29                 	db	41
  1252  01A752  00                 	db	0
  1253                           
  1254                           ;initializer for _H
  1255  01A753  00                 	db	0
  1256  01A754  00                 	db	0
  1257  01A755  01                 	db	1
  1258  01A756  00                 	db	0
  1259  01A757  01                 	db	1
  1260  01A758  00                 	db	0
  1261  01A759  00                 	db	0
  1262                           
  1263                           	psect	idataBANK1
  1264  01905C                     __pidataBANK1:
  1265                           	opt callstack 0
  1266                           
  1267                           ;initializer for _C
  1268  01905C  0000               	dw	0
  1269  01905E  0000               	dw	0
  1270  019060  0000               	dw	0
  1271  019062  0000               	dw	0
  1272  019064  0000               	dw	0
  1273  019066  0000               	dw	0
  1274  019068  0000               	dw	0
  1275  01906A  0000               	dw	0
  1276  01906C  0000               	dw	0
  1277  01906E  0000               	dw	0
  1278  019070  0000               	dw	0
  1279  019072  0000               	dw	0
  1280  019074  0000               	dw	0
  1281  019076  0000               	dw	0
  1282  019078  0000               	dw	0
  1283  01907A  0000               	dw	0
  1284  01907C  0000               	dw	0
  1285  01907E  0000               	dw	0
  1286  019080  0000               	dw	0
  1287  019082  0000               	dw	0
  1288  019084  0000               	dw	0
  1289  019086  0000               	dw	0
  1290  019088  0000               	dw	0
  1291  01908A  0000               	dw	0
  1292  01908C  0000               	dw	0
  1293  01908E  0000               	dw	0
  1294  019090  0000               	dw	0
  1295  019092  0000               	dw	0
  1296  019094  0000               	dw	0
  1297  019096  0000               	dw	0
  1298  019098  0000               	dw	0
  1299  01909A  0000               	dw	0
  1300  01909C  0000               	dw	0
  1301  01909E  0000               	dw	0
  1302  0190A0  0000               	dw	0
  1303  0190A2  0000               	dw	0
  1304  0190A4  0000               	dw	0
  1305  0190A6  0000               	dw	0
  1306  0190A8  0000               	dw	0
  1307  0190AA  0000               	dw	0
  1308  0190AC  0000               	dw	0
  1309  0190AE  0000               	dw	0
  1310  0190B0  0000               	dw	0
  1311  0190B2  0000               	dw	0
  1312  0190B4  0000               	dw	0
  1313  0190B6  0000               	dw	0
  1314  0190B8  0000               	dw	0
  1315  0190BA  0000               	dw	0
  1316  0190BC  0000               	dw	0
  1317  0190BE  0000               	dw	0
  1318  0190C0  0000               	dw	0
  1319  0190C2  0000               	dw	0
  1320  0190C4  0000               	dw	0
  1321  0190C6  0000               	dw	0
  1322  0190C8  0000               	dw	0
  1323  0190CA  0000               	dw	0
  1324  0190CC  0000               	dw	0
  1325  0190CE  0000               	dw	0
  1326  0190D0  0000               	dw	0
  1327  0190D2  0000               	dw	0
  1328  0190D4  0000               	dw	0
  1329  0190D6  0000               	dw	0
  1330  0190D8  0000               	dw	0
  1331  0190DA  0000               	dw	0
  1332  0190DC  0000               	dw	0
  1333  0190DE  0000               	dw	0
  1334  0190E0  0000               	dw	0
  1335  0190E2  0000               	dw	0
  1336  0190E4  0000               	dw	0
  1337  0190E6  42FA               	dw	17146
  1338  0190E8  00                 	db	0
  1339  0190E9  00                 	db	0
  1340  0190EA  00                 	db	0
  1341  0190EB  00                 	db	0
  1342  0190EC  00                 	db	0
  1343  0190ED  00                 	db	0
  1344  0190EE  00                 	db	0
  1345  0190EF  00                 	db	0
  1346  0190F0  00                 	db	0
  1347  0190F1  00                 	db	0
  1348  0190F2  00                 	db	0
  1349  0190F3  00                 	db	0
  1350  0190F4  00                 	db	0
  1351  0190F5  00                 	db	0
  1352  0190F6  00                 	db	0
  1353  0190F7  00                 	db	0
  1354  0190F8  00                 	db	0
  1355  0190F9  00                 	db	0
  1356  0190FA  00                 	db	0
  1357  0190FB  00                 	db	0
  1358  0190FC  00                 	db	0
  1359  0190FD  00                 	db	0
  1360  0190FE  00                 	db	0
  1361  0190FF  00                 	db	0
  1362  019100  00                 	db	0
  1363  019101  00                 	db	0
  1364  019102  00                 	db	0
  1365  019103  00                 	db	0
  1366  019104  00                 	db	0
  1367  019105  00                 	db	0
  1368  019106  00                 	db	0
  1369  019107  00                 	db	0
  1370  019108  00                 	db	0
  1371  019109  00                 	db	0
  1372  01910A  00                 	db	0
  1373  01910B  00                 	db	0
  1374  01910C  00                 	db	0
  1375  01910D  00                 	db	0
  1376  01910E  00                 	db	0
  1377  01910F  00                 	db	0
  1378  019110  00                 	db	0
  1379  019111  00                 	db	0
  1380  019112  00                 	db	0
  1381  019113  00                 	db	0
  1382  019114  00                 	db	0
  1383  019115  00                 	db	0
  1384  019116  00                 	db	0
  1385  019117  00                 	db	0
  1386  019118  00                 	db	0
  1387  019119  00                 	db	0
  1388  01911A  00                 	db	0
  1389  01911B  00                 	db	0
  1390  01911C  00                 	db	0
  1391  01911D  00                 	db	0
  1392  01911E  00                 	db	0
  1393  01911F  00                 	db	0
  1394  019120  00                 	db	0
  1395  019121  00                 	db	0
  1396  019122  00                 	db	0
  1397  019123  00                 	db	0
  1398  019124  00                 	db	0
  1399  019125  00                 	db	0
  1400  019126  00                 	db	0
  1401  019127  00                 	db	0
  1402  019128  00                 	db	0
  1403  019129  00                 	db	0
  1404  01912A  00                 	db	0
  1405  01912B  00                 	db	0
  1406  01912C  00                 	db	0
  1407  01912D  00                 	db	0
  1408  01912E  00                 	db	0
  1409  01912F  00                 	db	0
  1410  019130  00                 	db	0
  1411  019131  00                 	db	0
  1412  019132  00                 	db	0
  1413  019133  00                 	db	0
  1414  019134  00                 	db	0
  1415  019135  00                 	db	0
  1416  019136  00                 	db	0
  1417  019137  00                 	db	0
  1418  019138  00                 	db	0
  1419  019139  00                 	db	0
  1420  01913A  00                 	db	0
  1421  01913B  00                 	db	0
  1422  01913C  00                 	db	0
  1423  01913D  00                 	db	0
  1424  01913E  00                 	db	0
  1425  01913F  00                 	db	0
  1426  019140  00                 	db	0
  1427  019141  00                 	db	0
  1428  019142  00                 	db	0
  1429  019143  00                 	db	0
  1430  019144  00                 	db	0
  1431  019145  00                 	db	0
  1432  019146  00                 	db	0
  1433  019147  00                 	db	0
  1434  019148  00                 	db	0
  1435  019149  00                 	db	0
  1436  01914A  00                 	db	0
  1437  01914B  00                 	db	0
  1438  01914C  00                 	db	0
  1439  01914D  00                 	db	0
  1440  01914E  00                 	db	0
  1441                           
  1442                           	psect	idataBANK2
  1443  0193D2                     __pidataBANK2:
  1444                           	opt callstack 0
  1445                           
  1446                           ;initializer for _V
  1447  0193D2  00                 	db	0
  1448  0193D3  00                 	db	0
  1449  0193D4  00                 	db	0
  1450  0193D5  00                 	db	0
  1451  0193D6  00                 	db	0
  1452  0193D7  00                 	db	0
  1453  0193D8  00                 	db	0
  1454  0193D9  00                 	db	0
  1455  0193DA  00                 	db	0
  1456  0193DB  00                 	db	0
  1457  0193DC  00                 	db	0
  1458  0193DD  00                 	db	0
  1459  0193DE  00                 	db	0
  1460  0193DF  00                 	db	0
  1461  0193E0  00                 	db	0
  1462  0193E1  00                 	db	0
  1463  0193E2  00                 	db	0
  1464  0193E3  00                 	db	0
  1465  0193E4  00                 	db	0
  1466  0193E5  00                 	db	0
  1467  0193E6  00                 	db	0
  1468  0193E7  00                 	db	0
  1469  0193E8  00                 	db	0
  1470  0193E9  00                 	db	0
  1471  0193EA  00                 	db	0
  1472  0193EB  00                 	db	0
  1473  0193EC  00                 	db	0
  1474  0193ED  00                 	db	0
  1475  0193EE  00                 	db	0
  1476  0193EF  00                 	db	0
  1477  0193F0  00                 	db	0
  1478  0193F1  00                 	db	0
  1479  0193F2  00                 	db	0
  1480  0193F3  00                 	db	0
  1481  0193F4  00                 	db	0
  1482  0193F5  00                 	db	0
  1483  0193F6  00                 	db	0
  1484  0193F7  00                 	db	0
  1485  0193F8  00                 	db	0
  1486  0193F9  00                 	db	0
  1487  0193FA  00                 	db	0
  1488  0193FB  00                 	db	0
  1489  0193FC  00                 	db	0
  1490  0193FD  00                 	db	0
  1491  0193FE  00                 	db	0
  1492  0193FF  00                 	db	0
  1493  019400  00                 	db	0
  1494  019401  00                 	db	0
  1495  019402  00                 	db	0
  1496  019403  00                 	db	0
  1497  019404  00                 	db	0
  1498  019405  00                 	db	0
  1499  019406  00                 	db	0
  1500  019407  00                 	db	0
  1501  019408  00                 	db	0
  1502  019409  00                 	db	0
  1503  01940A  00                 	db	0
  1504  01940B  00                 	db	0
  1505  01940C  00                 	db	0
  1506  01940D  00                 	db	0
  1507  01940E  00                 	db	0
  1508  01940F  00                 	db	0
  1509  019410  00                 	db	0
  1510  019411  00                 	db	0
  1511  019412  00                 	db	0
  1512  019413  00                 	db	0
  1513  019414  00                 	db	0
  1514  019415  00                 	db	0
  1515  019416  00                 	db	0
  1516  019417  00                 	db	0
  1517  019418  00                 	db	0
  1518  019419  00                 	db	0
  1519  01941A  00                 	db	0
  1520  01941B  00                 	db	0
  1521  01941C  00                 	db	0
  1522  01941D  00                 	db	0
  1523  01941E  00                 	db	0
  1524  01941F  00                 	db	0
  1525  019420  00                 	db	0
  1526  019421  00                 	db	0
  1527  019422  00                 	db	0
  1528  019423  00                 	db	0
  1529  019424  00                 	db	0
  1530  019425  00                 	db	0
  1531  019426  00                 	db	0
  1532  019427  00                 	db	0
  1533  019428  00                 	db	0
  1534  019429  00                 	db	0
  1535  01942A  00                 	db	0
  1536  01942B  00                 	db	0
  1537  01942C  00                 	db	0
  1538  01942D  00                 	db	0
  1539  01942E  00                 	db	0
  1540  01942F  00                 	db	0
  1541  019430  00                 	db	0
  1542  019431  00                 	db	0
  1543  019432  00                 	db	0
  1544  019433  00                 	db	0
  1545  019434  00                 	db	0
  1546  019435  00                 	db	0
  1547  019436  00                 	db	0
  1548  019437  00                 	db	0
  1549  019438  00                 	db	0
  1550  019439  00                 	db	0
  1551  01943A  00                 	db	0
  1552  01943B  00                 	db	0
  1553  01943C  00                 	db	0
  1554  01943D  00                 	db	0
  1555  01943E  00                 	db	0
  1556  01943F  00                 	db	0
  1557  019440  00                 	db	0
  1558  019441  00                 	db	0
  1559  019442  00                 	db	0
  1560  019443  00                 	db	0
  1561  019444  00                 	db	0
  1562  019445  00                 	db	0
  1563  019446  00                 	db	0
  1564  019447  00                 	db	0
  1565  019448  00                 	db	0
  1566  019449  00                 	db	0
  1567  01944A  00                 	db	0
  1568  01944B  00                 	db	0
  1569  01944C  00                 	db	0
  1570  01944D  00                 	db	0
  1571  01944E  00                 	db	0
  1572  01944F  00                 	db	0
  1573  019450  00                 	db	0
  1574  019451  00                 	db	0
  1575  019452  00                 	db	0
  1576  019453  0000               	dw	0
  1577  019455  0000               	dw	0
  1578  019457  0000               	dw	0
  1579  019459  0000               	dw	0
  1580  01945B  00                 	db	0
  1581  01945C  00                 	db	0
  1582  01945D  00                 	db	0
  1583  01945E  00                 	db	0
  1584  01945F  00                 	db	0
  1585  019460  00                 	db	0
  1586  019461  0000               	dw	0
  1587  019463  0000               	dw	0
  1588  019465  0000               	dw	0
  1589  019467  0000               	dw	0
  1590  019469  0000               	dw	0
  1591  01946B  0000               	dw	0
  1592  01946D  00                 	db	0
  1593  01946E  00                 	db	0
  1594  01946F  00                 	db	0
  1595  019470  00                 	db	0
  1596  019471  00                 	db	0
  1597  019472  00                 	db	0
  1598  019473  00                 	db	0
  1599  019474  00                 	db	0
  1600  019475  00                 	db	0
  1601  019476  00                 	db	0
  1602  019477  0000               	dw	0
  1603  019479  0000               	dw	0
  1604  01947B  2D                 	db	45
  1605  01947C  00                 	db	0
  1606  01947D  00                 	db	0
  1607  01947E  0000               	dw	0
  1608  019480  0000               	dw	0
  1609  019482  0000               	dw	0
  1610  019484  0000               	dw	0
  1611  019486  0000               	dw	0
  1612  019488  0000               	dw	0
  1613  01948A  0000               	dw	0
  1614  01948C  0000               	dw	0
  1615                           
  1616                           	psect	mediumconst
  1617  00FBB8                     __pmediumconst:
  1618                           	opt callstack 0
  1619  00FBB8  00                 	db	0
  1620  00FBB9                     _BVSOC_TABLE:
  1621                           	opt callstack 0
  1622  00FBB9  59D8               	dw	23000
  1623  00FBBB  0000               	dw	0
  1624  00FBBD  0005               	dw	5
  1625  00FBBF  0000               	dw	0
  1626  00FBC1  5B68               	dw	23400
  1627  00FBC3  0000               	dw	0
  1628  00FBC5  000A               	dw	10
  1629  00FBC7  0000               	dw	0
  1630  00FBC9  5C30               	dw	23600
  1631  00FBCB  0000               	dw	0
  1632  00FBCD  0014               	dw	20
  1633  00FBCF  0000               	dw	0
  1634  00FBD1  5E38               	dw	24120
  1635  00FBD3  0000               	dw	0
  1636  00FBD5  0019               	dw	25
  1637  00FBD7  0000               	dw	0
  1638  00FBD9  5E88               	dw	24200
  1639  00FBDB  0000               	dw	0
  1640  00FBDD  001E               	dw	30
  1641  00FBDF  0000               	dw	0
  1642  00FBE1  5F78               	dw	24440
  1643  00FBE3  0000               	dw	0
  1644  00FBE5  0028               	dw	40
  1645  00FBE7  0000               	dw	0
  1646  00FBE9  5FDC               	dw	24540
  1647  00FBEB  0000               	dw	0
  1648  00FBED  002D               	dw	45
  1649  00FBEF  0000               	dw	0
  1650  00FBF1  6018               	dw	24600
  1651  00FBF3  0000               	dw	0
  1652  00FBF5  0032               	dw	50
  1653  00FBF7  0000               	dw	0
  1654  00FBF9  6046               	dw	24646
  1655  00FBFB  0000               	dw	0
  1656  00FBFD  0035               	dw	53
  1657  00FBFF  0000               	dw	0
  1658  00FC01  607C               	dw	24700
  1659  00FC03  0000               	dw	0
  1660  00FC05  0037               	dw	55
  1661  00FC07  0000               	dw	0
  1662  00FC09  60AE               	dw	24750
  1663  00FC0B  0000               	dw	0
  1664  00FC0D  0039               	dw	57
  1665  00FC0F  0000               	dw	0
  1666  00FC11  60E0               	dw	24800
  1667  00FC13  0000               	dw	0
  1668  00FC15  003C               	dw	60
  1669  00FC17  0000               	dw	0
  1670  00FC19  6112               	dw	24850
  1671  00FC1B  0000               	dw	0
  1672  00FC1D  003F               	dw	63
  1673  00FC1F  0000               	dw	0
  1674  00FC21  615D               	dw	24925
  1675  00FC23  0000               	dw	0
  1676  00FC25  0043               	dw	67
  1677  00FC27  0000               	dw	0
  1678  00FC29  61A8               	dw	25000
  1679  00FC2B  0000               	dw	0
  1680  00FC2D  0046               	dw	70
  1681  00FC2F  0000               	dw	0
  1682  00FC31  61BC               	dw	25020
  1683  00FC33  0000               	dw	0
  1684  00FC35  0048               	dw	72
  1685  00FC37  0000               	dw	0
  1686  00FC39  61D0               	dw	25040
  1687  00FC3B  0000               	dw	0
  1688  00FC3D  004B               	dw	75
  1689  00FC3F  0000               	dw	0
  1690  00FC41  61DA               	dw	25050
  1691  00FC43  0000               	dw	0
  1692  00FC45  0050               	dw	80
  1693  00FC47  0000               	dw	0
  1694  00FC49  61E4               	dw	25060
  1695  00FC4B  0000               	dw	0
  1696  00FC4D  0055               	dw	85
  1697  00FC4F  0000               	dw	0
  1698  00FC51  61F8               	dw	25080
  1699  00FC53  0000               	dw	0
  1700  00FC55  005A               	dw	90
  1701  00FC57  0000               	dw	0
  1702  00FC59  6208               	dw	25096
  1703  00FC5B  0000               	dw	0
  1704  00FC5D  005C               	dw	92
  1705  00FC5F  0000               	dw	0
  1706  00FC61  6222               	dw	25122
  1707  00FC63  0000               	dw	0
  1708  00FC65  005D               	dw	93
  1709  00FC67  0000               	dw	0
  1710  00FC69  6234               	dw	25140
  1711  00FC6B  0000               	dw	0
  1712  00FC6D  005F               	dw	95
  1713  00FC6F  0000               	dw	0
  1714  00FC71  6248               	dw	25160
  1715  00FC73  0000               	dw	0
  1716  00FC75  0061               	dw	97
  1717  00FC77  0000               	dw	0
  1718  00FC79  625C               	dw	25180
  1719  00FC7B  0000               	dw	0
  1720  00FC7D  0064               	dw	100
  1721  00FC7F  0000               	dw	0
  1722  00FC81  6784               	dw	26500
  1723  00FC83  0000               	dw	0
  1724  00FC85  0062               	dw	98
  1725  00FC87  0000               	dw	0
  1726  00FC89                     __end_of_BVSOC_TABLE:
  1727                           	opt callstack 0
  1728  00FC89                     _T:
  1729                           	opt callstack 0
  1730  00FC89  63                 	db	99
  1731  00FC8A  6F                 	db	111
  1732  00FC8B  6D                 	db	109
  1733  00FC8C  6D                 	db	109
  1734  00FC8D  61                 	db	97
  1735  00FC8E  6E                 	db	110
  1736  00FC8F  64                 	db	100
  1737  00FC90  73                 	db	115
  1738  00FC91  20                 	db	32
  1739  00FC92  31                 	db	49
  1740  00FC93  00                 	db	0
  1741  00FC94  00                 	db	0
  1742  00FC95  00                 	db	0
  1743  00FC96  00                 	db	0
  1744  00FC97  00                 	db	0
  1745  00FC98  00                 	db	0
  1746  00FC99  00                 	db	0
  1747  00FC9A  00                 	db	0
  1748  00FC9B  64                 	db	100
  1749  00FC9C  69                 	db	105
  1750  00FC9D  73                 	db	115
  1751  00FC9E  70                 	db	112
  1752  00FC9F  6C                 	db	108
  1753  00FCA0  61                 	db	97
  1754  00FCA1  79                 	db	121
  1755  00FCA2  73                 	db	115
  1756  00FCA3  20                 	db	32
  1757  00FCA4  31                 	db	49
  1758  00FCA5  00                 	db	0
  1759  00FCA6  00                 	db	0
  1760  00FCA7  00                 	db	0
  1761  00FCA8  00                 	db	0
  1762  00FCA9  00                 	db	0
  1763  00FCAA  00                 	db	0
  1764  00FCAB  00                 	db	0
  1765  00FCAC  00                 	db	0
  1766  00FCAD  63                 	db	99
  1767  00FCAE  6F                 	db	111
  1768  00FCAF  6D                 	db	109
  1769  00FCB0  6D                 	db	109
  1770  00FCB1  61                 	db	97
  1771  00FCB2  6E                 	db	110
  1772  00FCB3  64                 	db	100
  1773  00FCB4  73                 	db	115
  1774  00FCB5  20                 	db	32
  1775  00FCB6  32                 	db	50
  1776  00FCB7  00                 	db	0
  1777  00FCB8  00                 	db	0
  1778  00FCB9  00                 	db	0
  1779  00FCBA  00                 	db	0
  1780  00FCBB  00                 	db	0
  1781  00FCBC  00                 	db	0
  1782  00FCBD  00                 	db	0
  1783  00FCBE  00                 	db	0
  1784  00FCBF  64                 	db	100
  1785  00FCC0  69                 	db	105
  1786  00FCC1  73                 	db	115
  1787  00FCC2  70                 	db	112
  1788  00FCC3  6C                 	db	108
  1789  00FCC4  61                 	db	97
  1790  00FCC5  79                 	db	121
  1791  00FCC6  73                 	db	115
  1792  00FCC7  20                 	db	32
  1793  00FCC8  32                 	db	50
  1794  00FCC9  00                 	db	0
  1795  00FCCA  00                 	db	0
  1796  00FCCB  00                 	db	0
  1797  00FCCC  00                 	db	0
  1798  00FCCD  00                 	db	0
  1799  00FCCE  00                 	db	0
  1800  00FCCF  00                 	db	0
  1801  00FCD0  00                 	db	0
  1802  00FCD1  63                 	db	99
  1803  00FCD2  6F                 	db	111
  1804  00FCD3  6D                 	db	109
  1805  00FCD4  6D                 	db	109
  1806  00FCD5  61                 	db	97
  1807  00FCD6  6E                 	db	110
  1808  00FCD7  64                 	db	100
  1809  00FCD8  73                 	db	115
  1810  00FCD9  20                 	db	32
  1811  00FCDA  33                 	db	51
  1812  00FCDB  00                 	db	0
  1813  00FCDC  00                 	db	0
  1814  00FCDD  00                 	db	0
  1815  00FCDE  00                 	db	0
  1816  00FCDF  00                 	db	0
  1817  00FCE0  00                 	db	0
  1818  00FCE1  00                 	db	0
  1819  00FCE2  00                 	db	0
  1820  00FCE3  64                 	db	100
  1821  00FCE4  69                 	db	105
  1822  00FCE5  73                 	db	115
  1823  00FCE6  70                 	db	112
  1824  00FCE7  6C                 	db	108
  1825  00FCE8  61                 	db	97
  1826  00FCE9  79                 	db	121
  1827  00FCEA  73                 	db	115
  1828  00FCEB  20                 	db	32
  1829  00FCEC  33                 	db	51
  1830  00FCED  00                 	db	0
  1831  00FCEE  00                 	db	0
  1832  00FCEF  00                 	db	0
  1833  00FCF0  00                 	db	0
  1834  00FCF1  00                 	db	0
  1835  00FCF2  00                 	db	0
  1836  00FCF3  00                 	db	0
  1837  00FCF4  00                 	db	0
  1838  00FCF5  63                 	db	99
  1839  00FCF6  6F                 	db	111
  1840  00FCF7  6D                 	db	109
  1841  00FCF8  6D                 	db	109
  1842  00FCF9  61                 	db	97
  1843  00FCFA  6E                 	db	110
  1844  00FCFB  64                 	db	100
  1845  00FCFC  73                 	db	115
  1846  00FCFD  20                 	db	32
  1847  00FCFE  34                 	db	52
  1848  00FCFF  00                 	db	0
  1849  00FD00  00                 	db	0
  1850  00FD01  00                 	db	0
  1851  00FD02  00                 	db	0
  1852  00FD03  00                 	db	0
  1853  00FD04  00                 	db	0
  1854  00FD05  00                 	db	0
  1855  00FD06  00                 	db	0
  1856  00FD07  64                 	db	100
  1857  00FD08  69                 	db	105
  1858  00FD09  73                 	db	115
  1859  00FD0A  70                 	db	112
  1860  00FD0B  6C                 	db	108
  1861  00FD0C  61                 	db	97
  1862  00FD0D  79                 	db	121
  1863  00FD0E  73                 	db	115
  1864  00FD0F  20                 	db	32
  1865  00FD10  34                 	db	52
  1866  00FD11  00                 	db	0
  1867  00FD12  00                 	db	0
  1868  00FD13  00                 	db	0
  1869  00FD14  00                 	db	0
  1870  00FD15  00                 	db	0
  1871  00FD16  00                 	db	0
  1872  00FD17  00                 	db	0
  1873  00FD18  00                 	db	0
  1874  00FD19                     __end_of_T:
  1875                           	opt callstack 0
  1876  00FD19  0000               	dw	0
  1877  00FD1B  3F80               	dw	16256
  1878  00FD1D  0000               	dw	0
  1879  00FD1F  3FC0               	dw	16320
  1880  00FD21                     __end_of_bp:
  1881                           	opt callstack 0
  1882  00FD21  AA00               	dw	43520
  1883  00FD23  3FB8               	dw	16312
  1884  00FD25                     __end_of_ivln2_h:
  1885                           	opt callstack 0
  1886  00FD25  23C6               	dw	9158
  1887  00FD27  B8F6               	dw	47350
  1888  00FD29                     __end_of_cp_l:
  1889                           	opt callstack 0
  1890  00FD29  4000               	dw	16384
  1891  00FD2B  3F76               	dw	16246
  1892  00FD2D                     __end_of_cp_h:
  1893                           	opt callstack 0
  1894  0000                     _IVTADL	set	14493
  1895  0000                     _IVTADH	set	14494
  1896  0000                     _IVTADU	set	14495
  1897  0000                     _PIR6bits	set	14758
  1898  0000                     _PIR4bits	set	14756
  1899  0000                     _PIE8bits	set	14744
  1900  0000                     _PIR8bits	set	14760
  1901  0000                     _SCANPR	set	14839
  1902  0000                     _DMA2PR	set	14836
  1903  0000                     _DMA1PR	set	14835
  1904  0000                     _MAINPR	set	14834
  1905  0000                     _ISRPR	set	14833
  1906  0000                     _PIE2bits	set	14738
  1907  0000                     _PIR2bits	set	14754
  1908  0000                     _PIE9bits	set	14745
  1909  0000                     _PIR9bits	set	14761
  1910  0000                     _PIE6bits	set	14742
  1911  0000                     _PIE3bits	set	14739
  1912  0000                     _PMD7	set	14791
  1913  0000                     _PMD6	set	14790
  1914  0000                     _PMD5	set	14789
  1915  0000                     _PMD4	set	14788
  1916  0000                     _PMD3	set	14787
  1917  0000                     _PMD2	set	14786
  1918  0000                     _PMD1	set	14785
  1919  0000                     _PMD0	set	14784
  1920  0000                     _OSCTUNE	set	14814
  1921  0000                     _OSCFRQ	set	14815
  1922  0000                     _OSCEN	set	14813
  1923  0000                     _OSCCON3	set	14811
  1924  0000                     _OSCCON1	set	14809
  1925  0000                     _IPR8bits	set	14728
  1926  0000                     _IPR9bits	set	14729
  1927  0000                     _IPR5bits	set	14725
  1928  0000                     _IPR1bits	set	14721
  1929  0000                     _IPR3bits	set	14723
  1930  0000                     _IPR6bits	set	14726
  1931  0000                     _IPR2bits	set	14722
  1932  0000                     _PIE5bits	set	14741
  1933  0000                     _PIE1bits	set	14737
  1934  0000                     _PIR5bits	set	14757
  1935  0000                     _PIR1bits	set	14753
  1936  0000                     _PLLR	set	118496
  1937  0000                     _SPI1SDIPPS	set	15071
  1938  0000                     _U1RXPPS	set	15077
  1939  0000                     _RC6PPS	set	14870
  1940  0000                     _RC5PPS	set	14869
  1941  0000                     _INT1PPS	set	15041
  1942  0000                     _RD1PPS	set	14873
  1943  0000                     _INT0PPS	set	15040
  1944  0000                     _RC3PPS	set	14867
  1945  0000                     _RB6PPS	set	14862
  1946  0000                     _SPI1SCKPPS	set	15070
  1947  0000                     _U2RXPPS	set	15080
  1948  0000                     _SLRCONF	set	14995
  1949  0000                     _SLRCONE	set	14979
  1950  0000                     _SLRCOND	set	14963
  1951  0000                     _SLRCONC	set	14947
  1952  0000                     _SLRCONB	set	14931
  1953  0000                     _SLRCONA	set	14915
  1954  0000                     _ODCOND	set	14962
  1955  0000                     _ODCONC	set	14946
  1956  0000                     _ODCONB	set	14930
  1957  0000                     _ODCONA	set	14914
  1958  0000                     _ODCONF	set	14994
  1959  0000                     _ODCONE	set	14978
  1960  0000                     _WPUC	set	14945
  1961  0000                     _WPUA	set	14913
  1962  0000                     _WPUB	set	14929
  1963  0000                     _WPUE	set	14977
  1964  0000                     _WPUF	set	14993
  1965  0000                     _WPUD	set	14961
  1966  0000                     _ANSELA	set	14912
  1967  0000                     _ANSELF	set	14992
  1968  0000                     _ANSELE	set	14976
  1969  0000                     _ANSELB	set	14928
  1970  0000                     _ANSELC	set	14944
  1971  0000                     _ANSELD	set	14960
  1972  0000                     _DMA2SSA	set	15321
  1973  0000                     _DMA1SSA	set	15353
  1974  0000                     _DMA2DSZ	set	15310
  1975  0000                     _DMA2SSZ	set	15319
  1976  0000                     _DMA2DSA	set	15312
  1977  0000                     _DMA1DSZ	set	15342
  1978  0000                     _DMA1SSZ	set	15351
  1979  0000                     _DMA1DSA	set	15344
  1980  0000                     _DMA2CON0bits	set	15324
  1981  0000                     _DMA2CON1bits	set	15325
  1982  0000                     _DMA1CON0bits	set	15356
  1983  0000                     _DMA1CON1bits	set	15357
  1984  0000                     _DMA2CON0	set	15324
  1985  0000                     _DMA2AIRQ	set	15326
  1986  0000                     _DMA2SIRQ	set	15327
  1987  0000                     _DMA2CON1	set	15325
  1988  0000                     _DMA1CON0	set	15356
  1989  0000                     _DMA1AIRQ	set	15358
  1990  0000                     _DMA1SIRQ	set	15359
  1991  0000                     _DMA1CON1	set	15357
  1992  0000                     _CLKRCON	set	15589
  1993  0000                     _CLKRCLK	set	15590
  1994  0000                     _SPI1INTFbits	set	15642
  1995  0000                     _SPI1RXB	set	15632
  1996  0000                     _SPI1TXB	set	15633
  1997  0000                     _SPI1TCNTL	set	15634
  1998  0000                     _SPI1CON0	set	15636
  1999  0000                     _SPI1CLK	set	15644
  2000  0000                     _SPI1BAUD	set	15641
  2001  0000                     _SPI1CON2	set	15638
  2002  0000                     _SPI1CON1	set	15637
  2003  0000                     _U2RXB	set	15824
  2004  0000                     _U2TXB	set	15826
  2005  0000                     _U2ERRIE	set	15842
  2006  0000                     _U2ERRIR	set	15841
  2007  0000                     _U2UIR	set	15840
  2008  0000                     _U2FIFO	set	15839
  2009  0000                     _U2BRGH	set	15838
  2010  0000                     _U2BRGL	set	15837
  2011  0000                     _U2CON2	set	15836
  2012  0000                     _U2CON1	set	15835
  2013  0000                     _U2CON0	set	15834
  2014  0000                     _U2P3L	set	15832
  2015  0000                     _U2P2L	set	15830
  2016  0000                     _U2P1L	set	15828
  2017  0000                     _U1RXB	set	15848
  2018  0000                     _U1ERRIE	set	15866
  2019  0000                     _U1ERRIR	set	15865
  2020  0000                     _U1UIR	set	15864
  2021  0000                     _U1FIFO	set	15863
  2022  0000                     _U1BRGH	set	15862
  2023  0000                     _U1BRGL	set	15861
  2024  0000                     _U1CON2	set	15860
  2025  0000                     _U1CON1	set	15859
  2026  0000                     _U1CON0	set	15858
  2027  0000                     _U1P3H	set	15857
  2028  0000                     _U1P3L	set	15856
  2029  0000                     _U1P2H	set	15855
  2030  0000                     _U1P2L	set	15854
  2031  0000                     _U1P1H	set	15853
  2032  0000                     _U1P1L	set	15852
  2033  0000                     _FVRCON	set	16065
  2034  0000                     _ADFLTRL	set	16102
  2035  0000                     _ADFLTRH	set	16103
  2036  0000                     _ADCON0bits	set	16120
  2037  0000                     _ADCON0	set	16120
  2038  0000                     _ADCLK	set	16127
  2039  0000                     _ADACT	set	16126
  2040  0000                     _ADREF	set	16125
  2041  0000                     _ADSTAT	set	16124
  2042  0000                     _ADCON3	set	16123
  2043  0000                     _ADCON2	set	16122
  2044  0000                     _ADCON1	set	16121
  2045  0000                     _ADPREH	set	16119
  2046  0000                     _ADPREL	set	16118
  2047  0000                     _ADCAP	set	16117
  2048  0000                     _ADACQH	set	16116
  2049  0000                     _ADACQL	set	16115
  2050  0000                     _ADPCH	set	16113
  2051  0000                     _ADRPT	set	16108
  2052  0000                     _ADACCU	set	16106
  2053  0000                     _ADSTPTH	set	16101
  2054  0000                     _ADSTPTL	set	16100
  2055  0000                     _ADUTHH	set	16097
  2056  0000                     _ADUTHL	set	16096
  2057  0000                     _ADLTHH	set	16095
  2058  0000                     _ADLTHL	set	16094
  2059  0000                     _CCPTMRS1bits	set	16223
  2060  0000                     _PORTFbits	set	16335
  2061  0000                     _LATCbits	set	16316
  2062  0000                     _LATDbits	set	16317
  2063  0000                     _PORTBbits	set	16331
  2064  0000                     _T3CONbits	set	16294
  2065  0000                     _T3CON	set	16294
  2066  0000                     _TMR3L	set	16292
  2067  0000                     _TMR3H	set	16293
  2068  0000                     _T3CLK	set	16297
  2069  0000                     _T3GATE	set	16296
  2070  0000                     _T3GCON	set	16295
  2071  0000                     _T2CON	set	16300
  2072  0000                     _T2TMR	set	16298
  2073  0000                     _T2PR	set	16299
  2074  0000                     _T2RST	set	16303
  2075  0000                     _T2HLT	set	16301
  2076  0000                     _T2CLKCON	set	16302
  2077  0000                     _PWM8DCL	set	16224
  2078  0000                     _PWM8DCH	set	16225
  2079  0000                     _PWM8CON	set	16226
  2080  0000                     _LATEbits	set	16318
  2081  0000                     _T5CONbits	set	16282
  2082  0000                     _T5CON	set	16282
  2083  0000                     _TMR5L	set	16280
  2084  0000                     _TMR5H	set	16281
  2085  0000                     _T5CLK	set	16285
  2086  0000                     _T5GATE	set	16284
  2087  0000                     _T5GCON	set	16283
  2088  0000                     _T6CON	set	16276
  2089  0000                     _T6TMR	set	16274
  2090  0000                     _T6PR	set	16275
  2091  0000                     _T6RST	set	16279
  2092  0000                     _T6HLT	set	16277
  2093  0000                     _T6CLKCON	set	16278
  2094  0000                     _TRISD	set	16325
  2095  0000                     _TRISC	set	16324
  2096  0000                     _TRISB	set	16323
  2097  0000                     _TRISA	set	16322
  2098  0000                     _TRISF	set	16327
  2099  0000                     _TRISE	set	16326
  2100  0000                     _LATC	set	16316
  2101  0000                     _LATB	set	16315
  2102  0000                     _LATF	set	16319
  2103  0000                     _LATA	set	16314
  2104  0000                     _LATD	set	16317
  2105  0000                     _LATE	set	16318
  2106  0000                     _IVTLOCKbits	set	16340
  2107  0000                     _IVTLOCK	set	16340
  2108  0000                     _INTCON0bits	set	16338
  2109  0000                     _GIE	set	130711
  2110  00FD2D                     STR_55:
  2111                           
  2112                           ; BSR set to: 57
  2113  00FD2D  20                 	db	32
  2114  00FD2E  25                 	db	37
  2115  00FD2F  6C                 	db	108	;'l'
  2116  00FD30  75                 	db	117	;'u'
  2117  00FD31  2C                 	db	44
  2118  00FD32  25                 	db	37
  2119  00FD33  34                 	db	52	;'4'
  2120  00FD34  2E                 	db	46
  2121  00FD35  34                 	db	52	;'4'
  2122  00FD36  66                 	db	102	;'f'
  2123  00FD37  2C                 	db	44
  2124  00FD38  25                 	db	37
  2125  00FD39  34                 	db	52	;'4'
  2126  00FD3A  2E                 	db	46
  2127  00FD3B  34                 	db	52	;'4'
  2128  00FD3C  66                 	db	102	;'f'
  2129  00FD3D  2C                 	db	44
  2130  00FD3E  25                 	db	37
  2131  00FD3F  34                 	db	52	;'4'
  2132  00FD40  2E                 	db	46
  2133  00FD41  34                 	db	52	;'4'
  2134  00FD42  66                 	db	102	;'f'
  2135  00FD43  2C                 	db	44
  2136  00FD44  25                 	db	37
  2137  00FD45  34                 	db	52	;'4'
  2138  00FD46  2E                 	db	46
  2139  00FD47  34                 	db	52	;'4'
  2140  00FD48  66                 	db	102	;'f'
  2141  00FD49  2C                 	db	44
  2142  00FD4A  25                 	db	37
  2143  00FD4B  34                 	db	52	;'4'
  2144  00FD4C  2E                 	db	46
  2145  00FD4D  33                 	db	51	;'3'
  2146  00FD4E  66                 	db	102	;'f'
  2147  00FD4F  2C                 	db	44
  2148  00FD50  25                 	db	37
  2149  00FD51  34                 	db	52	;'4'
  2150  00FD52  2E                 	db	46
  2151  00FD53  33                 	db	51	;'3'
  2152  00FD54  66                 	db	102	;'f'
  2153  00FD55  2C                 	db	44
  2154  00FD56  25                 	db	37
  2155  00FD57  34                 	db	52	;'4'
  2156  00FD58  2E                 	db	46
  2157  00FD59  33                 	db	51	;'3'
  2158  00FD5A  66                 	db	102	;'f'
  2159  00FD5B  2C                 	db	44
  2160  00FD5C  25                 	db	37
  2161  00FD5D  34                 	db	52	;'4'
  2162  00FD5E  2E                 	db	46
  2163  00FD5F  33                 	db	51	;'3'
  2164  00FD60  66                 	db	102	;'f'
  2165  00FD61  2C                 	db	44
  2166  00FD62  25                 	db	37
  2167  00FD63  34                 	db	52	;'4'
  2168  00FD64  2E                 	db	46
  2169  00FD65  33                 	db	51	;'3'
  2170  00FD66  66                 	db	102	;'f'
  2171  00FD67  2C                 	db	44
  2172  00FD68  25                 	db	37
  2173  00FD69  34                 	db	52	;'4'
  2174  00FD6A  2E                 	db	46
  2175  00FD6B  33                 	db	51	;'3'
  2176  00FD6C  66                 	db	102	;'f'
  2177  00FD6D  2C                 	db	44
  2178  00FD6E  25                 	db	37
  2179  00FD6F  34                 	db	52	;'4'
  2180  00FD70  2E                 	db	46
  2181  00FD71  33                 	db	51	;'3'
  2182  00FD72  64                 	db	100	;'d'
  2183  00FD73  2C                 	db	44
  2184  00FD74  25                 	db	37
  2185  00FD75  34                 	db	52	;'4'
  2186  00FD76  2E                 	db	46
  2187  00FD77  33                 	db	51	;'3'
  2188  00FD78  64                 	db	100	;'d'
  2189  00FD79  2C                 	db	44
  2190  00FD7A  25                 	db	37
  2191  00FD7B  32                 	db	50	;'2'
  2192  00FD7C  2E                 	db	46
  2193  00FD7D  36                 	db	54	;'6'
  2194  00FD7E  66                 	db	102	;'f'
  2195  00FD7F  0D                 	db	13
  2196  00FD80  0A                 	db	10
  2197  00FD81  00                 	db	0
  2198  00FD82                     STR_16:
  2199                           
  2200                           ; BSR set to: 57
  2201  00FD82  52                 	db	82	;'R'
  2202  00FD83  31                 	db	49	;'1'
  2203  00FD84  20                 	db	32
  2204  00FD85  25                 	db	37
  2205  00FD86  32                 	db	50	;'2'
  2206  00FD87  2E                 	db	46
  2207  00FD88  33                 	db	51	;'3'
  2208  00FD89  66                 	db	102	;'f'
  2209  00FD8A  20                 	db	32
  2210  00FD8B  25                 	db	37
  2211  00FD8C  33                 	db	51	;'3'
  2212  00FD8D  2E                 	db	46
  2213  00FD8E  34                 	db	52	;'4'
  2214  00FD8F  66                 	db	102	;'f'
  2215  00FD90  20                 	db	32
  2216  00FD91  20                 	db	32
  2217  00FD92  20                 	db	32
  2218  00FD93  20                 	db	32
  2219  00FD94  20                 	db	32
  2220  00FD95  20                 	db	32
  2221  00FD96  20                 	db	32
  2222  00FD97  20                 	db	32
  2223  00FD98  20                 	db	32
  2224  00FD99  20                 	db	32
  2225  00FD9A  20                 	db	32
  2226  00FD9B  00                 	db	0
  2227  00FD9C                     STR_17:
  2228                           
  2229                           ; BSR set to: 57
  2230  00FD9C  52                 	db	82	;'R'
  2231  00FD9D  32                 	db	50	;'2'
  2232  00FD9E  20                 	db	32
  2233  00FD9F  25                 	db	37
  2234  00FDA0  32                 	db	50	;'2'
  2235  00FDA1  2E                 	db	46
  2236  00FDA2  33                 	db	51	;'3'
  2237  00FDA3  66                 	db	102	;'f'
  2238  00FDA4  20                 	db	32
  2239  00FDA5  25                 	db	37
  2240  00FDA6  33                 	db	51	;'3'
  2241  00FDA7  2E                 	db	46
  2242  00FDA8  34                 	db	52	;'4'
  2243  00FDA9  66                 	db	102	;'f'
  2244  00FDAA  20                 	db	32
  2245  00FDAB  20                 	db	32
  2246  00FDAC  20                 	db	32
  2247  00FDAD  20                 	db	32
  2248  00FDAE  20                 	db	32
  2249  00FDAF  20                 	db	32
  2250  00FDB0  20                 	db	32
  2251  00FDB1  20                 	db	32
  2252  00FDB2  20                 	db	32
  2253  00FDB3  20                 	db	32
  2254  00FDB4  20                 	db	32
  2255  00FDB5  00                 	db	0
  2256  00FDB6                     
  2257                           ; BSR set to: 57
  2258  00FDB6  20                 	db	32
  2259  00FDB7  4D                 	db	77	;'M'
  2260  00FDB8  65                 	db	101	;'e'
  2261  00FDB9  73                 	db	115	;'s'
  2262  00FDBA  67                 	db	103	;'g'
  2263  00FDBB  20                 	db	32
  2264  00FDBC  25                 	db	37
  2265  00FDBD  64                 	db	100	;'d'
  2266  00FDBE  20                 	db	32
  2267  00FDBF  53                 	db	83	;'S'
  2268  00FDC0  74                 	db	116	;'t'
  2269  00FDC1  61                 	db	97	;'a'
  2270  00FDC2  63                 	db	99	;'c'
  2271  00FDC3  6B                 	db	107	;'k'
  2272  00FDC4  20                 	db	32
  2273  00FDC5  25                 	db	37
  2274  00FDC6  64                 	db	100	;'d'
  2275  00FDC7  20                 	db	32
  2276  00FDC8  20                 	db	32
  2277  00FDC9  20                 	db	32
  2278  00FDCA  20                 	db	32
  2279  00FDCB  20                 	db	32
  2280  00FDCC  20                 	db	32
  2281  00FDCD  00                 	db	0
  2282  00FDCE                     STR_15:
  2283                           
  2284                           ; BSR set to: 57
  2285  00FDCE  45                 	db	69	;'E'
  2286  00FDCF  53                 	db	83	;'S'
  2287  00FDD0  52                 	db	82	;'R'
  2288  00FDD1  20                 	db	32
  2289  00FDD2  20                 	db	32
  2290  00FDD3  25                 	db	37
  2291  00FDD4  32                 	db	50	;'2'
  2292  00FDD5  2E                 	db	46
  2293  00FDD6  36                 	db	54	;'6'
  2294  00FDD7  66                 	db	102	;'f'
  2295  00FDD8  20                 	db	32
  2296  00FDD9  20                 	db	32
  2297  00FDDA  20                 	db	32
  2298  00FDDB  20                 	db	32
  2299  00FDDC  20                 	db	32
  2300  00FDDD  20                 	db	32
  2301  00FDDE  20                 	db	32
  2302  00FDDF  20                 	db	32
  2303  00FDE0  20                 	db	32
  2304  00FDE1  20                 	db	32
  2305  00FDE2  20                 	db	32
  2306  00FDE3  00                 	db	0
  2307  00FDE4                     STR_10:
  2308                           
  2309                           ; BSR set to: 57
  2310  00FDE4  53                 	db	83	;'S'
  2311  00FDE5  74                 	db	116	;'t'
  2312  00FDE6  61                 	db	97	;'a'
  2313  00FDE7  74                 	db	116	;'t'
  2314  00FDE8  69                 	db	105	;'i'
  2315  00FDE9  63                 	db	99	;'c'
  2316  00FDEA  20                 	db	32
  2317  00FDEB  53                 	db	83	;'S'
  2318  00FDEC  4F                 	db	79	;'O'
  2319  00FDED  43                 	db	67	;'C'
  2320  00FDEE  20                 	db	32
  2321  00FDEF  25                 	db	37
  2322  00FDF0  64                 	db	100	;'d'
  2323  00FDF1  20                 	db	32
  2324  00FDF2  20                 	db	32
  2325  00FDF3  20                 	db	32
  2326  00FDF4  20                 	db	32
  2327  00FDF5  20                 	db	32
  2328  00FDF6  20                 	db	32
  2329  00FDF7  20                 	db	32
  2330  00FDF8  20                 	db	32
  2331  00FDF9  00                 	db	0
  2332  00FDFA                     STR_9:
  2333                           
  2334                           ; BSR set to: 57
  2335  00FDFA  53                 	db	83	;'S'
  2336  00FDFB  20                 	db	32
  2337  00FDFC  53                 	db	83	;'S'
  2338  00FDFD  4F                 	db	79	;'O'
  2339  00FDFE  43                 	db	67	;'C'
  2340  00FDFF  20                 	db	32
  2341  00FE00  25                 	db	37
  2342  00FE01  64                 	db	100	;'d'
  2343  00FE02  20                 	db	32
  2344  00FE03  25                 	db	37
  2345  00FE04  32                 	db	50	;'2'
  2346  00FE05  2E                 	db	46
  2347  00FE06  34                 	db	52	;'4'
  2348  00FE07  66                 	db	102	;'f'
  2349  00FE08  20                 	db	32
  2350  00FE09  20                 	db	32
  2351  00FE0A  20                 	db	32
  2352  00FE0B  20                 	db	32
  2353  00FE0C  20                 	db	32
  2354  00FE0D  20                 	db	32
  2355  00FE0E  20                 	db	32
  2356  00FE0F  00                 	db	0
  2357  00FE10                     STR_11:
  2358                           
  2359                           ; BSR set to: 57
  2360  00FE10  42                 	db	66	;'B'
  2361  00FE11  61                 	db	97	;'a'
  2362  00FE12  74                 	db	116	;'t'
  2363  00FE13  74                 	db	116	;'t'
  2364  00FE14  65                 	db	101	;'e'
  2365  00FE15  72                 	db	114	;'r'
  2366  00FE16  79                 	db	121	;'y'
  2367  00FE17  20                 	db	32
  2368  00FE18  41                 	db	65	;'A'
  2369  00FE19  68                 	db	104	;'h'
  2370  00FE1A  20                 	db	32
  2371  00FE1B  25                 	db	37
  2372  00FE1C  33                 	db	51	;'3'
  2373  00FE1D  2E                 	db	46
  2374  00FE1E  32                 	db	50	;'2'
  2375  00FE1F  66                 	db	102	;'f'
  2376  00FE20  20                 	db	32
  2377  00FE21  20                 	db	32
  2378  00FE22  20                 	db	32
  2379  00FE23  20                 	db	32
  2380  00FE24  20                 	db	32
  2381  00FE25  00                 	db	0
  2382  00FE26                     STR_28:
  2383                           
  2384                           ; BSR set to: 57
  2385  00FE26  42                 	db	66	;'B'
  2386  00FE27  41                 	db	65	;'A'
  2387  00FE28  48                 	db	72	;'H'
  2388  00FE29  20                 	db	32
  2389  00FE2A  25                 	db	37
  2390  00FE2B  33                 	db	51	;'3'
  2391  00FE2C  2E                 	db	46
  2392  00FE2D  32                 	db	50	;'2'
  2393  00FE2E  66                 	db	102	;'f'
  2394  00FE2F  20                 	db	32
  2395  00FE30  50                 	db	80	;'P'
  2396  00FE31  25                 	db	37
  2397  00FE32  33                 	db	51	;'3'
  2398  00FE33  2E                 	db	46
  2399  00FE34  32                 	db	50	;'2'
  2400  00FE35  66                 	db	102	;'f'
  2401  00FE36  20                 	db	32
  2402  00FE37  20                 	db	32
  2403  00FE38  20                 	db	32
  2404  00FE39  00                 	db	0
  2405  00FE3A                     STR_48:
  2406                           
  2407                           ; BSR set to: 57
  2408  00FE3A  20                 	db	32
  2409  00FE3B  20                 	db	32
  2410  00FE3C  20                 	db	32
  2411  00FE3D  20                 	db	32
  2412  00FE3E  20                 	db	32
  2413  00FE3F  20                 	db	32
  2414  00FE40  20                 	db	32
  2415  00FE41  20                 	db	32
  2416  00FE42  20                 	db	32
  2417  00FE43  20                 	db	32
  2418  00FE44  20                 	db	32
  2419  00FE45  20                 	db	32
  2420  00FE46  20                 	db	32
  2421  00FE47  20                 	db	32
  2422  00FE48  20                 	db	32
  2423  00FE49  20                 	db	32
  2424  00FE4A  20                 	db	32
  2425  00FE4B  20                 	db	32
  2426  00FE4C  00                 	db	0
  2427  00FE4D                     STR_38:
  2428                           
  2429                           ; BSR set to: 57
  2430  00FE4D  48                 	db	72	;'H'
  2431  00FE4E  45                 	db	69	;'E'
  2432  00FE4F  4C                 	db	76	;'L'
  2433  00FE50  50                 	db	80	;'P'
  2434  00FE51  20                 	db	32
  2435  00FE52  25                 	db	37
  2436  00FE53  73                 	db	115	;'s'
  2437  00FE54  20                 	db	32
  2438  00FE55  20                 	db	32
  2439  00FE56  20                 	db	32
  2440  00FE57  20                 	db	32
  2441  00FE58  20                 	db	32
  2442  00FE59  20                 	db	32
  2443  00FE5A  20                 	db	32
  2444  00FE5B  20                 	db	32
  2445  00FE5C  20                 	db	32
  2446  00FE5D  20                 	db	32
  2447  00FE5E  20                 	db	32
  2448  00FE5F  00                 	db	0
  2449  00FE60                     
  2450                           ; BSR set to: 57
  2451  00FE60  44                 	db	68	;'D'
  2452  00FE61  49                 	db	73	;'I'
  2453  00FE62  53                 	db	83	;'S'
  2454  00FE63  50                 	db	80	;'P'
  2455  00FE64  4C                 	db	76	;'L'
  2456  00FE65  41                 	db	65	;'A'
  2457  00FE66  59                 	db	89	;'Y'
  2458  00FE67  20                 	db	32
  2459  00FE68  25                 	db	37
  2460  00FE69  73                 	db	115	;'s'
  2461  00FE6A  20                 	db	32
  2462  00FE6B  20                 	db	32
  2463  00FE6C  20                 	db	32
  2464  00FE6D  20                 	db	32
  2465  00FE6E  20                 	db	32
  2466  00FE6F  20                 	db	32
  2467  00FE70  20                 	db	32
  2468  00FE71  20                 	db	32
  2469  00FE72  00                 	db	0
  2470  00FE73                     STR_29:
  2471                           
  2472                           ; BSR set to: 57
  2473  00FE73  53                 	db	83	;'S'
  2474  00FE74  4F                 	db	79	;'O'
  2475  00FE75  43                 	db	67	;'C'
  2476  00FE76  20                 	db	32
  2477  00FE77  25                 	db	37
  2478  00FE78  64                 	db	100	;'d'
  2479  00FE79  20                 	db	32
  2480  00FE7A  52                 	db	82	;'R'
  2481  00FE7B  55                 	db	85	;'U'
  2482  00FE7C  4E                 	db	78	;'N'
  2483  00FE7D  20                 	db	32
  2484  00FE7E  25                 	db	37
  2485  00FE7F  64                 	db	100	;'d'
  2486  00FE80  20                 	db	32
  2487  00FE81  20                 	db	32
  2488  00FE82  20                 	db	32
  2489  00FE83  20                 	db	32
  2490  00FE84  20                 	db	32
  2491  00FE85  00                 	db	0
  2492  00FE86                     STR_21:
  2493                           
  2494                           ; BSR set to: 57
  2495  00FE86  50                 	db	80	;'P'
  2496  00FE87  56                 	db	86	;'V'
  2497  00FE88  20                 	db	32
  2498  00FE89  20                 	db	32
  2499  00FE8A  20                 	db	32
  2500  00FE8B  50                 	db	80	;'P'
  2501  00FE8C  57                 	db	87	;'W'
  2502  00FE8D  52                 	db	82	;'R'
  2503  00FE8E  20                 	db	32
  2504  00FE8F  25                 	db	37
  2505  00FE90  33                 	db	51	;'3'
  2506  00FE91  2E                 	db	46
  2507  00FE92  32                 	db	50	;'2'
  2508  00FE93  66                 	db	102	;'f'
  2509  00FE94  20                 	db	32
  2510  00FE95  20                 	db	32
  2511  00FE96  20                 	db	32
  2512  00FE97  20                 	db	32
  2513  00FE98  00                 	db	0
  2514  00FE99                     STR_23:
  2515                           
  2516                           ; BSR set to: 57
  2517  00FE99  49                 	db	73	;'I'
  2518  00FE9A  4E                 	db	78	;'N'
  2519  00FE9B  56                 	db	86	;'V'
  2520  00FE9C  20                 	db	32
  2521  00FE9D  20                 	db	32
  2522  00FE9E  50                 	db	80	;'P'
  2523  00FE9F  57                 	db	87	;'W'
  2524  00FEA0  52                 	db	82	;'R'
  2525  00FEA1  20                 	db	32
  2526  00FEA2  25                 	db	37
  2527  00FEA3  33                 	db	51	;'3'
  2528  00FEA4  2E                 	db	46
  2529  00FEA5  32                 	db	50	;'2'
  2530  00FEA6  66                 	db	102	;'f'
  2531  00FEA7  20                 	db	32
  2532  00FEA8  20                 	db	32
  2533  00FEA9  20                 	db	32
  2534  00FEAA  20                 	db	32
  2535  00FEAB  00                 	db	0
  2536  00FEAC                     STR_22:
  2537                           
  2538                           ; BSR set to: 57
  2539  00FEAC  4C                 	db	76	;'L'
  2540  00FEAD  4F                 	db	79	;'O'
  2541  00FEAE  41                 	db	65	;'A'
  2542  00FEAF  44                 	db	68	;'D'
  2543  00FEB0  20                 	db	32
  2544  00FEB1  50                 	db	80	;'P'
  2545  00FEB2  57                 	db	87	;'W'
  2546  00FEB3  52                 	db	82	;'R'
  2547  00FEB4  20                 	db	32
  2548  00FEB5  25                 	db	37
  2549  00FEB6  33                 	db	51	;'3'
  2550  00FEB7  2E                 	db	46
  2551  00FEB8  32                 	db	50	;'2'
  2552  00FEB9  66                 	db	102	;'f'
  2553  00FEBA  20                 	db	32
  2554  00FEBB  20                 	db	32
  2555  00FEBC  20                 	db	32
  2556  00FEBD  20                 	db	32
  2557  00FEBE  00                 	db	0
  2558  00FEBF                     STR_27:
  2559                           
  2560                           ; BSR set to: 57
  2561  00FEBF  42                 	db	66	;'B'
  2562  00FEC0  41                 	db	65	;'A'
  2563  00FEC1  54                 	db	84	;'T'
  2564  00FEC2  54                 	db	84	;'T'
  2565  00FEC3  20                 	db	32
  2566  00FEC4  50                 	db	80	;'P'
  2567  00FEC5  57                 	db	87	;'W'
  2568  00FEC6  52                 	db	82	;'R'
  2569  00FEC7  20                 	db	32
  2570  00FEC8  25                 	db	37
  2571  00FEC9  33                 	db	51	;'3'
  2572  00FECA  2E                 	db	46
  2573  00FECB  32                 	db	50	;'2'
  2574  00FECC  66                 	db	102	;'f'
  2575  00FECD  20                 	db	32
  2576  00FECE  20                 	db	32
  2577  00FECF  20                 	db	32
  2578  00FED0  20                 	db	32
  2579  00FED1  00                 	db	0
  2580  00FED2                     STR_25:
  2581                           
  2582                           ; BSR set to: 57
  2583  00FED2  42                 	db	66	;'B'
  2584  00FED3  56                 	db	86	;'V'
  2585  00FED4  20                 	db	32
  2586  00FED5  25                 	db	37
  2587  00FED6  32                 	db	50	;'2'
  2588  00FED7  2E                 	db	46
  2589  00FED8  32                 	db	50	;'2'
  2590  00FED9  66                 	db	102	;'f'
  2591  00FEDA  20                 	db	32
  2592  00FEDB  42                 	db	66	;'B'
  2593  00FEDC  41                 	db	65	;'A'
  2594  00FEDD  20                 	db	32
  2595  00FEDE  25                 	db	37
  2596  00FEDF  32                 	db	50	;'2'
  2597  00FEE0  2E                 	db	46
  2598  00FEE1  32                 	db	50	;'2'
  2599  00FEE2  66                 	db	102	;'f'
  2600  00FEE3  20                 	db	32
  2601  00FEE4  00                 	db	0
  2602  00FEE5                     STR_26:
  2603                           
  2604                           ; BSR set to: 57
  2605  00FEE5  43                 	db	67	;'C'
  2606  00FEE6  56                 	db	86	;'V'
  2607  00FEE7  20                 	db	32
  2608  00FEE8  25                 	db	37
  2609  00FEE9  32                 	db	50	;'2'
  2610  00FEEA  2E                 	db	46
  2611  00FEEB  32                 	db	50	;'2'
  2612  00FEEC  66                 	db	102	;'f'
  2613  00FEED  20                 	db	32
  2614  00FEEE  4C                 	db	76	;'L'
  2615  00FEEF  41                 	db	65	;'A'
  2616  00FEF0  20                 	db	32
  2617  00FEF1  25                 	db	37
  2618  00FEF2  32                 	db	50	;'2'
  2619  00FEF3  2E                 	db	46
  2620  00FEF4  32                 	db	50	;'2'
  2621  00FEF5  66                 	db	102	;'f'
  2622  00FEF6  20                 	db	32
  2623  00FEF7  00                 	db	0
  2624  00FEF8                     STR_24:
  2625                           
  2626                           ; BSR set to: 57
  2627  00FEF8  50                 	db	80	;'P'
  2628  00FEF9  56                 	db	86	;'V'
  2629  00FEFA  20                 	db	32
  2630  00FEFB  25                 	db	37
  2631  00FEFC  32                 	db	50	;'2'
  2632  00FEFD  2E                 	db	46
  2633  00FEFE  32                 	db	50	;'2'
  2634  00FEFF  66                 	db	102	;'f'
  2635  00FF00  20                 	db	32
  2636  00FF01  50                 	db	80	;'P'
  2637  00FF02  41                 	db	65	;'A'
  2638  00FF03  20                 	db	32
  2639  00FF04  25                 	db	37
  2640  00FF05  32                 	db	50	;'2'
  2641  00FF06  2E                 	db	46
  2642  00FF07  32                 	db	50	;'2'
  2643  00FF08  66                 	db	102	;'f'
  2644  00FF09  20                 	db	32
  2645  00FF0A  00                 	db	0
  2646  00FF0B                     STR_8:
  2647                           
  2648                           ; BSR set to: 57
  2649  00FF0B  42                 	db	66	;'B'
  2650  00FF0C  56                 	db	86	;'V'
  2651  00FF0D  20                 	db	32
  2652  00FF0E  25                 	db	37
  2653  00FF0F  32                 	db	50	;'2'
  2654  00FF10  2E                 	db	46
  2655  00FF11  34                 	db	52	;'4'
  2656  00FF12  66                 	db	102	;'f'
  2657  00FF13  20                 	db	32
  2658  00FF14  20                 	db	32
  2659  00FF15  20                 	db	32
  2660  00FF16  20                 	db	32
  2661  00FF17  20                 	db	32
  2662  00FF18  20                 	db	32
  2663  00FF19  20                 	db	32
  2664  00FF1A  20                 	db	32
  2665  00FF1B  20                 	db	32
  2666  00FF1C  00                 	db	0
  2667  00FF1D                     STR_4:
  2668                           
  2669                           ; BSR set to: 57
  2670  00FF1D  20                 	db	32
  2671  00FF1E  4E                 	db	78	;'N'
  2672  00FF1F  53                 	db	83	;'S'
  2673  00FF20  41                 	db	65	;'A'
  2674  00FF21  53                 	db	83	;'S'
  2675  00FF22  50                 	db	80	;'P'
  2676  00FF23  4F                 	db	79	;'O'
  2677  00FF24  4F                 	db	79	;'O'
  2678  00FF25  4B                 	db	75	;'K'
  2679  00FF26  20                 	db	32
  2680  00FF27  20                 	db	32
  2681  00FF28  20                 	db	32
  2682  00FF29  20                 	db	32
  2683  00FF2A  20                 	db	32
  2684  00FF2B  20                 	db	32
  2685  00FF2C  20                 	db	32
  2686  00FF2D  00                 	db	0
  2687  00FF2E                     STR_12:
  2688                           
  2689                           ; BSR set to: 57
  2690  00FF2E  42                 	db	66	;'B'
  2691  00FF2F  61                 	db	97	;'a'
  2692  00FF30  74                 	db	116	;'t'
  2693  00FF31  74                 	db	116	;'t'
  2694  00FF32  65                 	db	101	;'e'
  2695  00FF33  72                 	db	114	;'r'
  2696  00FF34  79                 	db	121	;'y'
  2697  00FF35  20                 	db	32
  2698  00FF36  45                 	db	69	;'E'
  2699  00FF37  53                 	db	83	;'S'
  2700  00FF38  52                 	db	82	;'R'
  2701  00FF39  20                 	db	32
  2702  00FF3A  20                 	db	32
  2703  00FF3B  20                 	db	32
  2704  00FF3C  20                 	db	32
  2705  00FF3D  20                 	db	32
  2706  00FF3E  00                 	db	0
  2707  00FF3F                     STR_13:
  2708                           
  2709                           ; BSR set to: 57
  2710  00FF3F  43                 	db	67	;'C'
  2711  00FF40  61                 	db	97	;'a'
  2712  00FF41  6C                 	db	108	;'l'
  2713  00FF42  63                 	db	99	;'c'
  2714  00FF43  75                 	db	117	;'u'
  2715  00FF44  6C                 	db	108	;'l'
  2716  00FF45  61                 	db	97	;'a'
  2717  00FF46  74                 	db	116	;'t'
  2718  00FF47  69                 	db	105	;'i'
  2719  00FF48  6F                 	db	111	;'o'
  2720  00FF49  6E                 	db	110	;'n'
  2721  00FF4A  20                 	db	32
  2722  00FF4B  20                 	db	32
  2723  00FF4C  20                 	db	32
  2724  00FF4D  20                 	db	32
  2725  00FF4E  20                 	db	32
  2726  00FF4F  00                 	db	0
  2727  00FF50                     STR_1:
  2728                           
  2729                           ; BSR set to: 57
  2730  00FF50  20                 	db	32
  2731  00FF51  4D                 	db	77	;'M'
  2732  00FF52  42                 	db	66	;'B'
  2733  00FF53  4D                 	db	77	;'M'
  2734  00FF54  43                 	db	67	;'C'
  2735  00FF55  20                 	db	32
  2736  00FF56  53                 	db	83	;'S'
  2737  00FF57  4F                 	db	79	;'O'
  2738  00FF58  4C                 	db	76	;'L'
  2739  00FF59  41                 	db	65	;'A'
  2740  00FF5A  52                 	db	82	;'R'
  2741  00FF5B  4D                 	db	77	;'M'
  2742  00FF5C  4F                 	db	79	;'O'
  2743  00FF5D  4E                 	db	78	;'N'
  2744  00FF5E  20                 	db	32
  2745  00FF5F  20                 	db	32
  2746  00FF60  00                 	db	0
  2747  00FF61                     STR_20:
  2748                           
  2749                           ; BSR set to: 57
  2750  00FF61  25                 	db	37
  2751  00FF62  64                 	db	100	;'d'
  2752  00FF63  20                 	db	32
  2753  00FF64  25                 	db	37
  2754  00FF65  32                 	db	50	;'2'
  2755  00FF66  2E                 	db	46
  2756  00FF67  34                 	db	52	;'4'
  2757  00FF68  66                 	db	102	;'f'
  2758  00FF69  2C                 	db	44
  2759  00FF6A  20                 	db	32
  2760  00FF6B  25                 	db	37
  2761  00FF6C  64                 	db	100	;'d'
  2762  00FF6D  20                 	db	32
  2763  00FF6E  20                 	db	32
  2764  00FF6F  20                 	db	32
  2765  00FF70  23                 	db	35
  2766  00FF71  00                 	db	0
  2767  00FF72                     STR_14:
  2768                           
  2769                           ; BSR set to: 57
  2770  00FF72  43                 	db	67	;'C'
  2771  00FF73  68                 	db	104	;'h'
  2772  00FF74  65                 	db	101	;'e'
  2773  00FF75  63                 	db	99	;'c'
  2774  00FF76  6B                 	db	107	;'k'
  2775  00FF77  20                 	db	32
  2776  00FF78  33                 	db	51	;'3'
  2777  00FF79  30                 	db	48	;'0'
  2778  00FF7A  20                 	db	32
  2779  00FF7B  73                 	db	115	;'s'
  2780  00FF7C  65                 	db	101	;'e'
  2781  00FF7D  63                 	db	99	;'c'
  2782  00FF7E  6F                 	db	111	;'o'
  2783  00FF7F  6E                 	db	110	;'n'
  2784  00FF80  64                 	db	100	;'d'
  2785  00FF81  73                 	db	115	;'s'
  2786  00FF82  00                 	db	0
  2787  00FF83                     STR_18:
  2788                           
  2789                           ; BSR set to: 57
  2790  00FF83  25                 	db	37
  2791  00FF84  64                 	db	100	;'d'
  2792  00FF85  20                 	db	32
  2793  00FF86  25                 	db	37
  2794  00FF87  32                 	db	50	;'2'
  2795  00FF88  2E                 	db	46
  2796  00FF89  34                 	db	52	;'4'
  2797  00FF8A  66                 	db	102	;'f'
  2798  00FF8B  20                 	db	32
  2799  00FF8C  20                 	db	32
  2800  00FF8D  20                 	db	32
  2801  00FF8E  25                 	db	37
  2802  00FF8F  64                 	db	100	;'d'
  2803  00FF90  20                 	db	32
  2804  00FF91  20                 	db	32
  2805  00FF92  00                 	db	0
  2806  00FF93                     STR_42:
  2807                           
  2808                           ; BSR set to: 57
  2809  00FF93  76                 	db	118	;'v'
  2810  00FF94  74                 	db	116	;'t'
  2811  00FF95  65                 	db	101	;'e'
  2812  00FF96  72                 	db	114	;'r'
  2813  00FF97  6D                 	db	109	;'m'
  2814  00FF98  20                 	db	32
  2815  00FF99  25                 	db	37
  2816  00FF9A  78                 	db	120	;'x'
  2817  00FF9B  3A                 	db	58	;':'
  2818  00FF9C  25                 	db	37
  2819  00FF9D  78                 	db	120	;'x'
  2820  00FF9E  20                 	db	32
  2821  00FF9F  20                 	db	32
  2822  00FFA0  20                 	db	32
  2823  00FFA1  00                 	db	0
  2824  00FFA2                     STR_2:
  2825                           
  2826                           ; BSR set to: 57
  2827  00FFA2  20                 	db	32
  2828  00FFA3  56                 	db	86	;'V'
  2829  00FFA4  65                 	db	101	;'e'
  2830  00FFA5  72                 	db	114	;'r'
  2831  00FFA6  73                 	db	115	;'s'
  2832  00FFA7  69                 	db	105	;'i'
  2833  00FFA8  6F                 	db	111	;'o'
  2834  00FFA9  6E                 	db	110	;'n'
  2835  00FFAA  20                 	db	32
  2836  00FFAB  25                 	db	37
  2837  00FFAC  73                 	db	115	;'s'
  2838  00FFAD  20                 	db	32
  2839  00FFAE  20                 	db	32
  2840  00FFAF  20                 	db	32
  2841  00FFB0  00                 	db	0
  2842  00FFB1                     STR_36:
  2843                           
  2844                           ; BSR set to: 57
  2845  00FFB1  44                 	db	68	;'D'
  2846  00FFB2  65                 	db	101	;'e'
  2847  00FFB3  63                 	db	99	;'c'
  2848  00FFB4  20                 	db	32
  2849  00FFB5  31                 	db	49	;'1'
  2850  00FFB6  32                 	db	50	;'2'
  2851  00FFB7  20                 	db	32
  2852  00FFB8  32                 	db	50	;'2'
  2853  00FFB9  30                 	db	48	;'0'
  2854  00FFBA  31                 	db	49	;'1'
  2855  00FFBB  39                 	db	57	;'9'
  2856  00FFBC  00                 	db	0
  2857  00FFBD                     STR_40:
  2858                           
  2859                           ; BSR set to: 57
  2860  00FFBD  25                 	db	37
  2861  00FFBE  73                 	db	115	;'s'
  2862  00FFBF  20                 	db	32
  2863  00FFC0  20                 	db	32
  2864  00FFC1  20                 	db	32
  2865  00FFC2  20                 	db	32
  2866  00FFC3  20                 	db	32
  2867  00FFC4  20                 	db	32
  2868  00FFC5  20                 	db	32
  2869  00FFC6  00                 	db	0
  2870  00FFC7                     STR_37:
  2871                           
  2872                           ; BSR set to: 57
  2873  00FFC7  31                 	db	49	;'1'
  2874  00FFC8  30                 	db	48	;'0'
  2875  00FFC9  3A                 	db	58	;':'
  2876  00FFCA  30                 	db	48	;'0'
  2877  00FFCB  33                 	db	51	;'3'
  2878  00FFCC  3A                 	db	58	;':'
  2879  00FFCD  30                 	db	48	;'0'
  2880  00FFCE  38                 	db	56	;'8'
  2881  00FFCF  00                 	db	0
  2882  00FFD0                     STR_3:
  2883                           
  2884                           ; BSR set to: 57
  2885  00FFD0  31                 	db	49	;'1'
  2886  00FFD1  2E                 	db	46
  2887  00FFD2  30                 	db	48	;'0'
  2888  00FFD3  30                 	db	48	;'0'
  2889  00FFD4  33                 	db	51	;'3'
  2890  00FFD5  00                 	db	0
  2891  00FFD6                     STR_56:
  2892                           
  2893                           ; BSR set to: 57
  2894  00FFD6  49                 	db	73	;'I'
  2895  00FFD7  4E                 	db	78	;'N'
  2896  00FFD8  46                 	db	70	;'F'
  2897  00FFD9  00                 	db	0
  2898  00FFDA                     STR_60:
  2899                           
  2900                           ; BSR set to: 57
  2901  00FFDA  4E                 	db	78	;'N'
  2902  00FFDB  41                 	db	65	;'A'
  2903  00FFDC  4E                 	db	78	;'N'
  2904  00FFDD  00                 	db	0
  2905  00FFDE                     STR_57:
  2906                           
  2907                           ; BSR set to: 57
  2908  00FFDE  69                 	db	105	;'i'
  2909  00FFDF  6E                 	db	110	;'n'
  2910  00FFE0  66                 	db	102	;'f'
  2911  00FFE1  00                 	db	0
  2912  00FFE2                     STR_61:
  2913                           
  2914                           ; BSR set to: 57
  2915  00FFE2  6E                 	db	110	;'n'
  2916  00FFE3  61                 	db	97	;'a'
  2917  00FFE4  6E                 	db	110	;'n'
  2918  00FFE5  00                 	db	0
  2919  00FFE6                     STR_87:
  2920                           
  2921                           ; BSR set to: 57
  2922  00FFE6  6C                 	db	108	;'l'
  2923  00FFE7  58                 	db	88	;'X'
  2924  00FFE8  00                 	db	0
  2925  00FFE9                     STR_64:
  2926                           
  2927                           ; BSR set to: 57
  2928  00FFE9  6C                 	db	108	;'l'
  2929  00FFEA  64                 	db	100	;'d'
  2930  00FFEB  00                 	db	0
  2931  00FFEC                     STR_73:
  2932                           
  2933                           ; BSR set to: 57
  2934  00FFEC  6C                 	db	108	;'l'
  2935  00FFED  66                 	db	102	;'f'
  2936  00FFEE  00                 	db	0
  2937  00FFEF                     STR_68:
  2938                           
  2939                           ; BSR set to: 57
  2940  00FFEF  6C                 	db	108	;'l'
  2941  00FFF0  69                 	db	105	;'i'
  2942  00FFF1  00                 	db	0
  2943  00FFF2                     STR_78:
  2944                           
  2945                           ; BSR set to: 57
  2946  00FFF2  6C                 	db	108	;'l'
  2947  00FFF3  75                 	db	117	;'u'
  2948  00FFF4  00                 	db	0
  2949  00FFF5                     STR_83:
  2950                           
  2951                           ; BSR set to: 57
  2952  00FFF5  6C                 	db	108	;'l'
  2953  00FFF6  78                 	db	120	;'x'
  2954  00FFF7  00                 	db	0
  2955  00FFF8                     STR_34:
  2956                           
  2957                           ; BSR set to: 57
  2958  00FFF8  25                 	db	37
  2959  00FFF9  63                 	db	99	;'c'
  2960  00FFFA  00                 	db	0
  2961  00FFFB                     STR_33:
  2962                           
  2963                           ; BSR set to: 57
  2964  00FFFB  25                 	db	37
  2965  00FFFC  73                 	db	115	;'s'
  2966  00FFFD  00                 	db	0
  2967  0000                     
  2968                           ; #config settings
  2969  00FFFE  00                 	db	0	; dummy byte at the end
  2970  0000                     
  2971                           	psect	cinit
  2972  018E58                     __pcinit:
  2973                           	opt callstack 0
  2974  018E58                     start_initialization:
  2975                           	opt callstack 0
  2976  018E58                     __initialization:
  2977                           	opt callstack 0
  2978                           
  2979                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2980                           ; load TBLPTR registers with __pidataBIGRAM
  2981  018E58  0E24               	movlw	low __pidataBIGRAM
  2982  018E5A  6EF6               	movwf	tblptrl,c
  2983  018E5C  0E74               	movlw	high __pidataBIGRAM
  2984  018E5E  6EF7               	movwf	tblptrh,c
  2985  018E60  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2986  018E62  6EF8               	movwf	tblptru,c
  2987  018E64  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2988  018E68  EE20 F200          	lfsr	2,512
  2989  018E6C                     copy_data0:
  2990  018E6C  0009               	tblrd		*+
  2991  018E6E  006F FFD7 FFEE     	movff	tablat,postinc0
  2992  018E74  50DD               	movf	postdec2,w,c
  2993  018E76  50D9               	movf	fsr2l,w,c
  2994  018E78  E1F9               	bnz	copy_data0
  2995  018E7A  50DA               	movf	fsr2h,w,c
  2996  018E7C  E1F7               	bnz	copy_data0
  2997                           
  2998                           ; Initialize objects allocated to BANK2 (188 bytes)
  2999                           ; load TBLPTR registers with __pidataBANK2
  3000  018E7E  0ED2               	movlw	low __pidataBANK2
  3001  018E80  6EF6               	movwf	tblptrl,c
  3002  018E82  0E93               	movlw	high __pidataBANK2
  3003  018E84  6EF7               	movwf	tblptrh,c
  3004  018E86  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3005  018E88  6EF8               	movwf	tblptru,c
  3006  018E8A  EE00  F200         	lfsr	0,__pdataBANK2
  3007  018E8E  EE20 F0BC          	lfsr	2,188
  3008  018E92                     copy_data1:
  3009  018E92  0009               	tblrd		*+
  3010  018E94  006F FFD7 FFEE     	movff	tablat,postinc0
  3011  018E9A  50DD               	movf	postdec2,w,c
  3012  018E9C  50D9               	movf	fsr2l,w,c
  3013  018E9E  E1F9               	bnz	copy_data1
  3014                           
  3015                           ; Initialize objects allocated to BANK1 (243 bytes)
  3016                           ; load TBLPTR registers with __pidataBANK1
  3017  018EA0  0E5C               	movlw	low __pidataBANK1
  3018  018EA2  6EF6               	movwf	tblptrl,c
  3019  018EA4  0E90               	movlw	high __pidataBANK1
  3020  018EA6  6EF7               	movwf	tblptrh,c
  3021  018EA8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3022  018EAA  6EF8               	movwf	tblptru,c
  3023  018EAC  EE00  F100         	lfsr	0,__pdataBANK1
  3024  018EB0  EE20 F0F3          	lfsr	2,243
  3025  018EB4                     copy_data2:
  3026  018EB4  0009               	tblrd		*+
  3027  018EB6  006F FFD7 FFEE     	movff	tablat,postinc0
  3028  018EBC  50DD               	movf	postdec2,w,c
  3029  018EBE  50D9               	movf	fsr2l,w,c
  3030  018EC0  E1F9               	bnz	copy_data2
  3031                           
  3032                           ; Initialize objects allocated to BANK0 (54 bytes)
  3033                           ; load TBLPTR registers with __pidataBANK0
  3034  018EC2  0E24               	movlw	low __pidataBANK0
  3035  018EC4  6EF6               	movwf	tblptrl,c
  3036  018EC6  0EA7               	movlw	high __pidataBANK0
  3037  018EC8  6EF7               	movwf	tblptrh,c
  3038  018ECA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3039  018ECC  6EF8               	movwf	tblptru,c
  3040  018ECE  EE00  F0C6         	lfsr	0,__pdataBANK0
  3041  018ED2  EE20 F036          	lfsr	2,54
  3042  018ED6                     copy_data3:
  3043  018ED6  0009               	tblrd		*+
  3044  018ED8  006F FFD7 FFEE     	movff	tablat,postinc0
  3045  018EDE  50DD               	movf	postdec2,w,c
  3046  018EE0  50D9               	movf	fsr2l,w,c
  3047  018EE2  E1F9               	bnz	copy_data3
  3048                           
  3049                           ; Clear objects allocated to BIGRAM (290 bytes)
  3050  018EE4  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3051  018EE8  EE20 F122          	lfsr	2,290
  3052  018EEC                     clear_0:
  3053  018EEC  6AEE               	clrf	postinc0,c
  3054  018EEE  50DD               	movf	postdec2,w,c
  3055  018EF0  50D9               	movf	fsr2l,w,c
  3056  018EF2  E1FC               	bnz	clear_0
  3057  018EF4  50DA               	movf	fsr2h,w,c
  3058  018EF6  E1FA               	bnz	clear_0
  3059                           
  3060                           ; Clear objects allocated to BANK5 (255 bytes)
  3061  018EF8  EE01  F100         	lfsr	0,__pbssBANK5
  3062  018EFC  EE20 F0FF          	lfsr	2,255
  3063  018F00                     clear_1:
  3064  018F00  6AEE               	clrf	postinc0,c
  3065  018F02  50DD               	movf	postdec2,w,c
  3066  018F04  50D9               	movf	fsr2l,w,c
  3067  018F06  E1FC               	bnz	clear_1
  3068  018F08  50DA               	movf	fsr2h,w,c
  3069  018F0A  E1FA               	bnz	clear_1
  3070                           
  3071                           ; Clear objects allocated to BANK4 (134 bytes)
  3072  018F0C  EE01  F000         	lfsr	0,__pbssBANK4
  3073  018F10  0E86               	movlw	134
  3074  018F12                     clear_2:
  3075  018F12  6AEE               	clrf	postinc0,c
  3076  018F14  06E8               	decf	wreg,f,c
  3077  018F16  E1FD               	bnz	clear_2
  3078                           
  3079                           ; Clear objects allocated to BANK3 (228 bytes)
  3080  018F18  EE00  F300         	lfsr	0,__pbssBANK3
  3081  018F1C  0EE4               	movlw	228
  3082  018F1E                     clear_3:
  3083  018F1E  6AEE               	clrf	postinc0,c
  3084  018F20  06E8               	decf	wreg,f,c
  3085  018F22  E1FD               	bnz	clear_3
  3086                           
  3087                           ; Clear objects allocated to BANK2 (65 bytes)
  3088  018F24  EE00  F2BC         	lfsr	0,__pbssBANK2
  3089  018F28  0E41               	movlw	65
  3090  018F2A                     clear_4:
  3091  018F2A  6AEE               	clrf	postinc0,c
  3092  018F2C  06E8               	decf	wreg,f,c
  3093  018F2E  E1FD               	bnz	clear_4
  3094                           
  3095                           ; Clear objects allocated to BANK0 (102 bytes)
  3096  018F30  EE00  F060         	lfsr	0,__pbssBANK0
  3097  018F34  0E66               	movlw	102
  3098  018F36                     clear_5:
  3099  018F36  6AEE               	clrf	postinc0,c
  3100  018F38  06E8               	decf	wreg,f,c
  3101  018F3A  E1FD               	bnz	clear_5
  3102                           
  3103                           ; Clear objects allocated to COMRAM (23 bytes)
  3104  018F3C  EE00  F021         	lfsr	0,__pbssCOMRAM
  3105  018F40  0E17               	movlw	23
  3106  018F42                     clear_6:
  3107  018F42  6AEE               	clrf	postinc0,c
  3108  018F44  06E8               	decf	wreg,f,c
  3109  018F46  E1FD               	bnz	clear_6
  3110                           
  3111                           ;
  3112                           ; Setup IVTBASE
  3113                           ;
  3114  018F48  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3115  018F4A  6ED5               	movwf	213,c
  3116  018F4C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3117  018F4E  6ED6               	movwf	214,c
  3118  018F50  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3119  018F52  6ED7               	movwf	215,c
  3120  018F54                     end_of_initialization:
  3121                           	opt callstack 0
  3122  018F54                     __end_of__initialization:
  3123                           	opt callstack 0
  3124  018F54  0100               	movlb	0
  3125  018F56  EFF8  F090         	goto	_main	;jump to C main() function
  3126                           
  3127                           	psect	bssCOMRAM
  3128  000021                     __pbssCOMRAM:
  3129                           	opt callstack 0
  3130  000021                     _width:
  3131                           	opt callstack 0
  3132  000021                     	ds	2
  3133  000023                     _prec:
  3134                           	opt callstack 0
  3135  000023                     	ds	2
  3136  000025                     _flags:
  3137                           	opt callstack 0
  3138  000025                     	ds	2
  3139  000027                     _timer3ReloadVal:
  3140                           	opt callstack 0
  3141  000027                     	ds	2
  3142  000029                     TMR5_ISR@CountCallBack:
  3143                           	opt callstack 0
  3144  000029                     	ds	2
  3145  00002B                     _timer5ReloadVal:
  3146                           	opt callstack 0
  3147  00002B                     	ds	2
  3148  00002D                     Volts_to_SOC@slot:
  3149                           	opt callstack 0
  3150  00002D                     	ds	1
  3151  00002E                     _mode_sw:
  3152                           	opt callstack 0
  3153  00002E                     	ds	1
  3154  00002F                     _uart2RxCount:
  3155                           	opt callstack 0
  3156  00002F                     	ds	1
  3157  000030                     _uart2RxTail:
  3158                           	opt callstack 0
  3159  000030                     	ds	1
  3160  000031                     _uart2RxHead:
  3161                           	opt callstack 0
  3162  000031                     	ds	1
  3163  000032                     _uart2TxBufferRemaining:
  3164                           	opt callstack 0
  3165  000032                     	ds	1
  3166  000033                     _uart2TxTail:
  3167                           	opt callstack 0
  3168  000033                     	ds	1
  3169  000034                     _uart2TxHead:
  3170                           	opt callstack 0
  3171  000034                     	ds	1
  3172  000035                     _uart1RxCount:
  3173                           	opt callstack 0
  3174  000035                     	ds	1
  3175  000036                     _uart1RxTail:
  3176                           	opt callstack 0
  3177  000036                     	ds	1
  3178  000037                     _uart1RxHead:
  3179                           	opt callstack 0
  3180  000037                     	ds	1
  3181                           
  3182                           	psect	bssBANK0
  3183  000060                     __pbssBANK0:
  3184                           	opt callstack 0
  3185  000060                     _spi_link:
  3186                           	opt callstack 0
  3187  000060                     	ds	12
  3188  00006C                     _uart1RxBuffer:
  3189                           	opt callstack 0
  3190  00006C                     	ds	8
  3191  000074                     floorf@F524:
  3192                           	opt callstack 0
  3193  000074                     	ds	4
  3194  000078                     fabsf@F463:
  3195                           	opt callstack 0
  3196  000078                     	ds	4
  3197  00007C                     ___fpclassifyf@F463:
  3198                           	opt callstack 0
  3199  00007C                     	ds	4
  3200  000080                     calc_ror_data@bcror:
  3201                           	opt callstack 0
  3202  000080                     	ds	4
  3203  000084                     calc_ror_data@bvror:
  3204                           	opt callstack 0
  3205  000084                     	ds	4
  3206  000088                     calc_model_data@bcror:
  3207                           	opt callstack 0
  3208  000088                     	ds	4
  3209  00008C                     calc_model_data@bvror:
  3210                           	opt callstack 0
  3211  00008C                     	ds	4
  3212  000090                     _utctime:
  3213                           	opt callstack 0
  3214  000090                     	ds	4
  3215  000094                     wdtdelay@dcount:
  3216                           	opt callstack 0
  3217  000094                     	ds	4
  3218  000098                     _P:
  3219                           	opt callstack 0
  3220  000098                     	ds	4
  3221  00009C                     _TMR3_InterruptHandler:
  3222                           	opt callstack 0
  3223  00009C                     	ds	3
  3224  00009F                     _TMR5_InterruptHandler:
  3225                           	opt callstack 0
  3226  00009F                     	ds	3
  3227  0000A2                     _TMR6_InterruptHandler:
  3228                           	opt callstack 0
  3229  0000A2                     	ds	3
  3230  0000A5                     _ADCC_ADTI_InterruptHandler:
  3231                           	opt callstack 0
  3232  0000A5                     	ds	3
  3233  0000A8                     _ADCC_ADI_InterruptHandler:
  3234                           	opt callstack 0
  3235  0000A8                     	ds	3
  3236  0000AB                     _UART1_RxInterruptHandler:
  3237                           	opt callstack 0
  3238  0000AB                     	ds	3
  3239  0000AE                     _UART2_TxInterruptHandler:
  3240                           	opt callstack 0
  3241  0000AE                     	ds	3
  3242  0000B1                     _UART2_RxInterruptHandler:
  3243                           	opt callstack 0
  3244  0000B1                     	ds	3
  3245  0000B4                     _INT1_InterruptHandler:
  3246                           	opt callstack 0
  3247  0000B4                     	ds	3
  3248  0000B7                     _INT0_InterruptHandler:
  3249                           	opt callstack 0
  3250  0000B7                     	ds	3
  3251  0000BA                     _nout:
  3252                           	opt callstack 0
  3253  0000BA                     	ds	2
  3254  0000BC                     TMR3_ISR@CountCallBack:
  3255                           	opt callstack 0
  3256  0000BC                     	ds	2
  3257  0000BE                     _seed:
  3258                           	opt callstack 0
  3259  0000BE                     	ds	8
  3260                           
  3261                           	psect	dataBANK0
  3262  0000C6                     __pdataBANK0:
  3263                           	opt callstack 0
  3264  0000C6                     _R:
  3265                           	opt callstack 0
  3266  0000C6                     	ds	40
  3267  0000EE                     stoa@F1166:
  3268                           	opt callstack 0
  3269  0000EE                     	ds	7
  3270  0000F5                     _H:
  3271                           	opt callstack 0
  3272  0000F5                     	ds	7
  3273                           
  3274                           	psect	dataBANK1
  3275  000100                     __pdataBANK1:
  3276                           	opt callstack 0
  3277  000100                     _C:
  3278                           	opt callstack 0
  3279  000100                     	ds	243
  3280                           
  3281                           	psect	bssBANK2
  3282  0002BC                     __pbssBANK2:
  3283                           	opt callstack 0
  3284  0002BC                     _S:
  3285                           	opt callstack 0
  3286  0002BC                     	ds	41
  3287  0002E5                     _tickCount:
  3288                           	opt callstack 0
  3289  0002E5                     	ds	24
  3290                           
  3291                           	psect	dataBANK2
  3292  000200                     __pdataBANK2:
  3293                           	opt callstack 0
  3294  000200                     _V:
  3295                           	opt callstack 0
  3296  000200                     	ds	188
  3297                           
  3298                           	psect	bssBANK3
  3299  000300                     __pbssBANK3:
  3300                           	opt callstack 0
  3301  000300                     lp_filter@smooth:
  3302                           	opt callstack 0
  3303  000300                     	ds	84
  3304  000354                     _uart2TxBuffer:
  3305                           	opt callstack 0
  3306  000354                     	ds	64
  3307  000394                     _dbuf:
  3308                           	opt callstack 0
  3309  000394                     	ds	80
  3310                           
  3311                           	psect	bssBANK4
  3312  000400                     __pbssBANK4:
  3313                           	opt callstack 0
  3314  000400                     _ring_buf2:
  3315                           	opt callstack 0
  3316  000400                     	ds	67
  3317  000443                     _ring_buf1:
  3318                           	opt callstack 0
  3319  000443                     	ds	67
  3320                           
  3321                           	psect	bssBANK5
  3322  000500                     __pbssBANK5:
  3323                           	opt callstack 0
  3324  000500                     _uart2RxBuffer:
  3325                           	opt callstack 0
  3326  000500                     	ds	255
  3327                           
  3328                           	psect	bssBIGRAM
  3329  0007FF                     __pbssBIGRAM:
  3330                           	opt callstack 0
  3331  0007FF                     _D:
  3332                           	opt callstack 0
  3333  0007FF                     	ds	290
  3334                           
  3335                           	psect	dataBIGRAM
  3336  0005FF                     __pdataBIGRAM:
  3337                           	opt callstack 0
  3338  0005FF                     _port_data:
  3339                           	opt callstack 0
  3340  0005FF                     	ds	512
  3341                           
  3342                           	psect	cstackBANK3
  3343  0003E4                     __pcstackBANK3:
  3344                           	opt callstack 0
  3345  0003E4                     ??_TMR3_ISR:
  3346                           
  3347                           ; 1 bytes @ 0x0
  3348  0003E4                     	ds	25
  3349                           
  3350                           	psect	cstackCOMRAM
  3351  000038                     __pcstackCOMRAM:
  3352                           	opt callstack 0
  3353  000038                     ??_ADCC_ThresholdISR:
  3354  000038                     
  3355                           ; 1 bytes @ 0x0
  3356  000038                     	ds	5
  3357  00003D                     ??_TMR6_ISR:
  3358                           
  3359                           ; 1 bytes @ 0x5
  3360  00003D                     	ds	1
  3361  00003E                     ??_INT1_ISR:
  3362  00003E                     
  3363                           ; 1 bytes @ 0x6
  3364  00003E                     	ds	4
  3365  000042                     ??_TMR5_ISR:
  3366                           
  3367                           ; 1 bytes @ 0xA
  3368  000042                     	ds	4
  3369                           
  3370 ;;
  3371 ;;Main: autosize = 6, tempsize = 0, incstack = 0, save=0
  3372 ;;
  3373 ;; *************** function _main *****************
  3374 ;; Defined at:
  3375 ;;		line 174 in file "main.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  k               1  [STACK] unsigned char 
  3380 ;;  j               1  [STACK] unsigned char 
  3381 ;;  i               1  [STACK] unsigned char 
  3382 ;;  inp_index       1  [STACK] unsigned char 
  3383 ;;  mode            1  [STACK] enum E17013
  3384 ;;  i_ror           1  [STACK] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1  [STACK] void 
  3387 ;; Registers used:
  3388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels required when called:   28
  3400 ;; This function calls:
  3401 ;;		_SYSTEM_Initialize
  3402 ;;		_StartTimer
  3403 ;;		_TimerDone
  3404 ;;		_WaitMs
  3405 ;;		___flge
  3406 ;;		_calc_model_data
  3407 ;;		_calc_ror_data
  3408 ;;		_check_adc_scan
  3409 ;;		_check_enter_button
  3410 ;;		_check_help
  3411 ;;		_clear_adc_scan
  3412 ;;		_clear_hid_pflags
  3413 ;;		_conv_raw_result
  3414 ;;		_convert_adc_data
  3415 ;;		_eaDogM_WriteCommand
  3416 ;;		_esr_check
  3417 ;;		_get_raw_result
  3418 ;;		_get_switch
  3419 ;;		_get_vterm_ptr
  3420 ;;		_hid_display
  3421 ;;		_init_bsoc
  3422 ;;		_init_display
  3423 ;;		_init_port_dma
  3424 ;;		_lp_filter
  3425 ;;		_mode_lamp_dim
  3426 ;;		_set_display_info
  3427 ;;		_set_load_relay_one
  3428 ;;		_set_load_relay_two
  3429 ;;		_set_vterm
  3430 ;;		_sprintf
  3431 ;;		_srand
  3432 ;;		_start_adc_scan
  3433 ;;		_start_switch_handler
  3434 ;;		_static_soc
  3435 ;;		_update_lcd
  3436 ;; This function is called by:
  3437 ;;		Startup code after reset
  3438 ;; This function uses a reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text0
  3442  0121F0                     __ptext0:
  3443                           	opt callstack 0
  3444  0121F0                     _main:
  3445                           	opt callstack 0
  3446                           
  3447                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3448  0121F0  0E06               	movlw	6
  3449  0121F2  26E1               	addwf	fsr1l,f,c
  3450  0121F4  0E00               	movlw	0
  3451  0121F6  22E2               	addwfc	fsr1h,f,c
  3452                           
  3453                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3454                           ;stkvar	_inp_index @ sp[(-6)+3]
  3455                           
  3456                           ;incstack = 0
  3457  0121F8  0EFD               	movlw	-3
  3458  0121FA  6AE3               	clrf	plusw1,c
  3459                           
  3460                           ;stkvar	_i @ sp[(-6)+2]
  3461  0121FC  0EFC               	movlw	-4
  3462  0121FE  6AE3               	clrf	plusw1,c
  3463                           
  3464                           ;stkvar	_j @ sp[(-6)+1]
  3465  012200  0EFB               	movlw	-5
  3466  012202  6AE3               	clrf	plusw1,c
  3467  012204  2AE3               	incf	plusw1,f,c
  3468                           
  3469                           ;stkvar	_k @ sp[(-6)+0]
  3470  012206  0EFA               	movlw	-6
  3471  012208  6AE3               	clrf	plusw1,c
  3472  01220A  82E3               	bsf	plusw1,1,c
  3473                           
  3474                           ;main.c: 180:  SYSTEM_Initialize();
  3475  01220C  EC7F  F0D1         	call	_SYSTEM_Initialize	;wreg free
  3476                           
  3477                           ; BSR set to: 60
  3478                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3479  012210  8ED2               	bsf	210,7,c	;volatile
  3480                           
  3481                           ; BSR set to: 60
  3482                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3483  012212  8CD2               	bsf	210,6,c	;volatile
  3484                           
  3485                           ; BSR set to: 60
  3486                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3487  012214  0102               	movlb	2	; () banked
  3488  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3489                           
  3490                           ; BSR set to: 2
  3491                           ;main.c: 193:  WaitMs(300);
  3492  012218  0E2C               	movlw	44
  3493  01221A  6EE6               	movwf	postinc1,c
  3494  01221C  0E01               	movlw	1
  3495  01221E  6EE6               	movwf	postinc1,c
  3496  012220  ECAD  F0D3         	call	_WaitMs	;wreg free
  3497                           
  3498                           ;main.c: 194:  if (PORTBbits.RB0) {
  3499  012224  A0CB               	btfss	203,0,c	;volatile
  3500  012226  D004               	goto	l12270
  3501                           
  3502                           ;main.c: 195:   mode = UI_STATE_HOST;
  3503                           ;stkvar	_mode @ sp[(-6)+4]
  3504  012228  0EFE               	movlw	-2
  3505  01222A  6AE3               	clrf	plusw1,c
  3506  01222C  2AE3               	incf	plusw1,f,c
  3507                           
  3508                           ;main.c: 196:  } else {
  3509  01222E  D004               	goto	l12272
  3510  012230                     l12270:
  3511                           
  3512                           ;main.c: 197:   mode = UI_STATE_LOG;
  3513                           ;stkvar	_mode @ sp[(-6)+4]
  3514  012230  0EFE               	movlw	-2
  3515  012232  6AE3               	clrf	plusw1,c
  3516  012234  80E3               	bsf	plusw1,0,c
  3517  012236  82E3               	bsf	plusw1,1,c	;indir
  3518  012238                     l12272:
  3519                           
  3520                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3521                           ;stkvar	_mode @ sp[(-6)+4]
  3522  012238  0EFE               	movlw	-2
  3523  01223A  04E3               	decf	plusw1,w,c
  3524  01223C  A4D8               	btfss	status,2,c
  3525  01223E  D007               	goto	l1318
  3526                           
  3527                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3528  012240  80BD               	bsf	189,0,c	;volatile
  3529                           
  3530                           ;main.c: 202:   V.mode_pwm = 70;
  3531  012242  0E00               	movlw	0
  3532  012244  0102               	movlb	2	; () banked
  3533  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3534  012248  0E46               	movlw	70
  3535  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3536                           
  3537                           ;main.c: 203:  } else {
  3538  01224C  D004               	goto	l12276
  3539  01224E                     l1318:
  3540  01224E  90BD               	bcf	189,0,c	;volatile
  3541                           
  3542                           ;main.c: 205:   V.mode_pwm = 0;
  3543  012250  0102               	movlb	2	; () banked
  3544  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3545  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3546  012256                     l12276:
  3547                           
  3548                           ; BSR set to: 2
  3549                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3550  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3551  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3552  012262  EC75  F0D7         	call	_mode_lamp_dim	;wreg free
  3553  012266  D278               	goto	l12386
  3554  012268                     l12278:
  3555                           
  3556                           ; BSR set to: 2
  3557                           ;main.c: 215:    init_port_dma();
  3558  012268  EC31  F0D4         	call	_init_port_dma	;wreg free
  3559                           
  3560                           ; BSR set to: 59
  3561                           ;main.c: 217:    init_display();
  3562  01226C  ECA8  F0C8         	call	_init_display	;wreg free
  3563                           
  3564                           ; BSR set to: 61
  3565                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3566  012270  0E0C               	movlw	12
  3567  012272  6EE6               	movwf	postinc1,c
  3568  012274  ECD9  F0D7         	call	_eaDogM_WriteCommand	;wreg free
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;main.c: 222:    set_load_relay_one(1);
  3572  012278  0E01               	movlw	1
  3573  01227A  6EE6               	movwf	postinc1,c
  3574  01227C  ECC9  F0D7         	call	_set_load_relay_one	;wreg free
  3575                           
  3576                           ;main.c: 223:    set_load_relay_two(1);
  3577  012280  0E01               	movlw	1
  3578  012282  6EE6               	movwf	postinc1,c
  3579  012284  ECC1  F0D7         	call	_set_load_relay_two	;wreg free
  3580                           
  3581                           ;main.c: 225:    V.ui_state = mode;
  3582                           ;stkvar	_mode @ sp[(-6)+4]
  3583  012288  0EFE               	movlw	-2
  3584  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3585                           
  3586                           ;main.c: 226:    srand(1957);
  3587  012290  0EA5               	movlw	165
  3588  012292  6EE6               	movwf	postinc1,c
  3589  012294  0E07               	movlw	7
  3590  012296  6EE6               	movwf	postinc1,c
  3591  012298  ECE3  F0D3         	call	_srand	;wreg free
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;main.c: 227:    set_vterm(0);
  3595  01229C  0E00               	movlw	0
  3596  01229E  6EE6               	movwf	postinc1,c
  3597  0122A0  EC02  F0D7         	call	_set_vterm	;wreg free
  3598                           
  3599                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3600  0122A4  0E50               	movlw	low STR_1
  3601  0122A6  6EE6               	movwf	postinc1,c
  3602  0122A8  0EFF               	movlw	high STR_1
  3603  0122AA  6EE6               	movwf	postinc1,c
  3604  0122AC  0E00               	movlw	0
  3605  0122AE  6EE6               	movwf	postinc1,c
  3606  0122B0  0E00               	movlw	0
  3607  0122B2  6EE6               	movwf	postinc1,c
  3608  0122B4  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3609  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3610  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3611  0122C4  0E04               	movlw	4
  3612  0122C6  6EE6               	movwf	postinc1,c
  3613  0122C8  ECA7  F0C6         	call	_sprintf	;wreg free
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.003");
  3617  0122CC  0ED0               	movlw	low STR_3
  3618  0122CE  6EE6               	movwf	postinc1,c
  3619  0122D0  0EFF               	movlw	high STR_3
  3620  0122D2  6EE6               	movwf	postinc1,c
  3621  0122D4  0EA2               	movlw	low STR_2
  3622  0122D6  6EE6               	movwf	postinc1,c
  3623  0122D8  0EFF               	movlw	high STR_2
  3624  0122DA  6EE6               	movwf	postinc1,c
  3625  0122DC  0E00               	movlw	0
  3626  0122DE  6EE6               	movwf	postinc1,c
  3627  0122E0  0E01               	movlw	1
  3628  0122E2  6EE6               	movwf	postinc1,c
  3629  0122E4  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3630  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3631  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3632  0122F4  0E06               	movlw	6
  3633  0122F6  6EE6               	movwf	postinc1,c
  3634  0122F8  ECA7  F0C6         	call	_sprintf	;wreg free
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3638  0122FC  0E1D               	movlw	low STR_4
  3639  0122FE  6EE6               	movwf	postinc1,c
  3640  012300  0EFF               	movlw	high STR_4
  3641  012302  6EE6               	movwf	postinc1,c
  3642  012304  0E00               	movlw	0
  3643  012306  6EE6               	movwf	postinc1,c
  3644  012308  0E02               	movlw	2
  3645  01230A  6EE6               	movwf	postinc1,c
  3646  01230C  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3647  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3648  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3649  01231C  0E04               	movlw	4
  3650  01231E  6EE6               	movwf	postinc1,c
  3651  012320  ECA7  F0C6         	call	_sprintf	;wreg free
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;main.c: 231:    sprintf(get_vterm_ptr(0, 2), "                ");
  3655  012324  0E3C               	movlw	low (STR_48+2)
  3656  012326  6EE6               	movwf	postinc1,c
  3657  012328  0EFE               	movlw	high (STR_48+2)
  3658  01232A  6EE6               	movwf	postinc1,c
  3659  01232C  0E02               	movlw	2
  3660  01232E  6EE6               	movwf	postinc1,c
  3661  012330  0E00               	movlw	0
  3662  012332  6EE6               	movwf	postinc1,c
  3663  012334  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3664  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3665  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3666  012344  0E04               	movlw	4
  3667  012346  6EE6               	movwf	postinc1,c
  3668  012348  ECA7  F0C6         	call	_sprintf	;wreg free
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 232:    sprintf(get_vterm_ptr(1, 2), "                ");
  3672  01234C  0E3C               	movlw	low (STR_48+2)
  3673  01234E  6EE6               	movwf	postinc1,c
  3674  012350  0EFE               	movlw	high (STR_48+2)
  3675  012352  6EE6               	movwf	postinc1,c
  3676  012354  0E02               	movlw	2
  3677  012356  6EE6               	movwf	postinc1,c
  3678  012358  0E01               	movlw	1
  3679  01235A  6EE6               	movwf	postinc1,c
  3680  01235C  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3681  012360  0060  F007  FFE6   	movff	btemp,postinc1
  3682  012366  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3683  01236C  0E04               	movlw	4
  3684  01236E  6EE6               	movwf	postinc1,c
  3685  012370  ECA7  F0C6         	call	_sprintf	;wreg free
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;main.c: 233:    sprintf(get_vterm_ptr(2, 2), "                ");
  3689  012374  0E3C               	movlw	low (STR_48+2)
  3690  012376  6EE6               	movwf	postinc1,c
  3691  012378  0EFE               	movlw	high (STR_48+2)
  3692  01237A  6EE6               	movwf	postinc1,c
  3693  01237C  0E02               	movlw	2
  3694  01237E  6EE6               	movwf	postinc1,c
  3695  012380  0E02               	movlw	2
  3696  012382  6EE6               	movwf	postinc1,c
  3697  012384  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3698  012388  0060  F007  FFE6   	movff	btemp,postinc1
  3699  01238E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3700  012394  0E04               	movlw	4
  3701  012396  6EE6               	movwf	postinc1,c
  3702  012398  ECA7  F0C6         	call	_sprintf	;wreg free
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;main.c: 234:    update_lcd(0);
  3706  01239C  0E00               	movlw	0
  3707  01239E  6EE6               	movwf	postinc1,c
  3708  0123A0  EC1F  F0C6         	call	_update_lcd	;wreg free
  3709                           
  3710                           ;main.c: 235:    WaitMs(1000);
  3711  0123A4  0EE8               	movlw	232
  3712  0123A6  6EE6               	movwf	postinc1,c
  3713  0123A8  0E03               	movlw	3
  3714  0123AA  6EE6               	movwf	postinc1,c
  3715  0123AC  ECAD  F0D3         	call	_WaitMs	;wreg free
  3716                           
  3717                           ;main.c: 236:    StartTimer(TMR_DISPLAY, 250);
  3718  0123B0  0EFA               	movlw	250
  3719  0123B2  6EE6               	movwf	postinc1,c
  3720  0123B4  0E00               	movlw	0
  3721  0123B6  6EE6               	movwf	postinc1,c
  3722  0123B8  0E0A               	movlw	10
  3723  0123BA  6EE6               	movwf	postinc1,c
  3724  0123BC  ECBA  F0D2         	call	_StartTimer	;wreg free
  3725                           
  3726                           ;main.c: 237:    StartTimer(TMR_ADC, 200);
  3727  0123C0  0EC8               	movlw	200
  3728  0123C2  6EE6               	movwf	postinc1,c
  3729  0123C4  0E00               	movlw	0
  3730  0123C6  6EE6               	movwf	postinc1,c
  3731  0123C8  0E01               	movlw	1
  3732  0123CA  6EE6               	movwf	postinc1,c
  3733  0123CC  ECBA  F0D2         	call	_StartTimer	;wreg free
  3734                           
  3735                           ;main.c: 238:    StartTimer(TMR_INFO, 3000);
  3736  0123D0  0EB8               	movlw	184
  3737  0123D2  6EE6               	movwf	postinc1,c
  3738  0123D4  0E0B               	movlw	11
  3739  0123D6  6EE6               	movwf	postinc1,c
  3740  0123D8  0E07               	movlw	7
  3741  0123DA  6EE6               	movwf	postinc1,c
  3742  0123DC  ECBA  F0D2         	call	_StartTimer	;wreg free
  3743                           
  3744                           ;main.c: 239:    StartTimer(TMR_FLIPPER, 1500);
  3745  0123E0  0EDC               	movlw	220
  3746  0123E2  6EE6               	movwf	postinc1,c
  3747  0123E4  0E05               	movlw	5
  3748  0123E6  6EE6               	movwf	postinc1,c
  3749  0123E8  0E0B               	movlw	11
  3750  0123EA  6EE6               	movwf	postinc1,c
  3751  0123EC  ECBA  F0D2         	call	_StartTimer	;wreg free
  3752                           
  3753                           ;main.c: 240:    StartTimer(TMR_HELPDIS, 3000);
  3754  0123F0  0EB8               	movlw	184
  3755  0123F2  6EE6               	movwf	postinc1,c
  3756  0123F4  0E0B               	movlw	11
  3757  0123F6  6EE6               	movwf	postinc1,c
  3758  0123F8  0E09               	movlw	9
  3759  0123FA  6EE6               	movwf	postinc1,c
  3760  0123FC  ECBA  F0D2         	call	_StartTimer	;wreg free
  3761                           
  3762                           ;main.c: 242:    start_adc_scan();
  3763  012400  EC92  F0CF         	call	_start_adc_scan	;wreg free
  3764                           
  3765                           ;main.c: 243:    start_switch_handler();
  3766  012404  ECE3  F0D6         	call	_start_switch_handler	;wreg free
  3767                           
  3768                           ; BSR set to: 57
  3769                           ;main.c: 244:    WaitMs(1000);
  3770  012408  0EE8               	movlw	232
  3771  01240A  6EE6               	movwf	postinc1,c
  3772  01240C  0E03               	movlw	3
  3773  01240E  6EE6               	movwf	postinc1,c
  3774  012410  ECAD  F0D3         	call	_WaitMs	;wreg free
  3775                           
  3776                           ;main.c: 249:    i_ror = 1;
  3777                           ;stkvar	_i_ror @ sp[(-6)+5]
  3778  012414  0EFF               	movlw	-1
  3779  012416  6AE3               	clrf	plusw1,c
  3780  012418  2AE3               	incf	plusw1,f,c
  3781  01241A                     l12328:
  3782                           
  3783                           ;main.c: 251:     calc_ror_data();
  3784  01241A  EC6E  F0BE         	call	_calc_ror_data	;wreg free
  3785                           
  3786                           ;main.c: 252:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  3787  01241E  0E00               	movlw	0
  3788  012420  6EE6               	movwf	postinc1,c
  3789  012422  0E04               	movlw	4
  3790  012424  6EE6               	movwf	postinc1,c
  3791  012426  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  3792  01242A  0060  F007  FFE6   	movff	btemp,postinc1
  3793  012430  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3794  012436  0060  F00F  FFE6   	movff	btemp+2,postinc1
  3795  01243C  0060  F013  FFE6   	movff	btemp+3,postinc1
  3796  012442  0E0B               	movlw	low STR_8
  3797  012444  6EE6               	movwf	postinc1,c
  3798  012446  0EFF               	movlw	high STR_8
  3799  012448  6EE6               	movwf	postinc1,c
  3800  01244A  0E00               	movlw	0
  3801  01244C  6EE6               	movwf	postinc1,c
  3802  01244E  0E01               	movlw	1
  3803  012450  6EE6               	movwf	postinc1,c
  3804  012452  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3805  012456  0060  F007  FFE6   	movff	btemp,postinc1
  3806  01245C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3807  012462  0E08               	movlw	8
  3808  012464  6EE6               	movwf	postinc1,c
  3809  012466  ECA7  F0C6         	call	_sprintf	;wreg free
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;main.c: 253:     sprintf(get_vterm_ptr(2, 0), "S SOC %d %2.4f       ", i_ror, C.bv_ror)
      +                          ;
  3813  01246A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3814  012470  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3815  012476  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3816  01247C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3817                           
  3818                           ;stkvar	_i_ror @ sp[(-10)+5]
  3819  012482  0EFB               	movlw	-5
  3820  012484  50E3               	movf	plusw1,w,c
  3821  012486  6EE6               	movwf	postinc1,c
  3822  012488  0E00               	movlw	0
  3823  01248A  6EE6               	movwf	postinc1,c
  3824  01248C  0EFA               	movlw	low STR_9
  3825  01248E  6EE6               	movwf	postinc1,c
  3826  012490  0EFD               	movlw	high STR_9
  3827  012492  6EE6               	movwf	postinc1,c
  3828  012494  0E00               	movlw	0
  3829  012496  6EE6               	movwf	postinc1,c
  3830  012498  0E02               	movlw	2
  3831  01249A  6EE6               	movwf	postinc1,c
  3832  01249C  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3833  0124A0  0060  F007  FFE6   	movff	btemp,postinc1
  3834  0124A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3835  0124AC  0E0A               	movlw	10
  3836  0124AE  6EE6               	movwf	postinc1,c
  3837  0124B0  ECA7  F0C6         	call	_sprintf	;wreg free
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;main.c: 254:     update_lcd(0);
  3841  0124B4  0E00               	movlw	0
  3842  0124B6  6EE6               	movwf	postinc1,c
  3843  0124B8  EC1F  F0C6         	call	_update_lcd	;wreg free
  3844                           
  3845                           ;main.c: 255:     WaitMs(2000);
  3846  0124BC  0ED0               	movlw	208
  3847  0124BE  6EE6               	movwf	postinc1,c
  3848  0124C0  0E07               	movlw	7
  3849  0124C2  6EE6               	movwf	postinc1,c
  3850  0124C4  ECAD  F0D3         	call	_WaitMs	;wreg free
  3851                           
  3852                           ;main.c: 256:     clear_adc_scan();
  3853  0124C8  EC27  F0D8         	call	_clear_adc_scan	;wreg free
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;main.c: 257:     start_adc_scan();
  3857  0124CC  EC92  F0CF         	call	_start_adc_scan	;wreg free
  3858                           
  3859                           ;main.c: 258:     WaitMs(500);
  3860  0124D0  0EF4               	movlw	244
  3861  0124D2  6EE6               	movwf	postinc1,c
  3862  0124D4  0E01               	movlw	1
  3863  0124D6  6EE6               	movwf	postinc1,c
  3864  0124D8  ECAD  F0D3         	call	_WaitMs	;wreg free
  3865                           
  3866                           ;main.c: 259:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  3867                           ;stkvar	_i_ror @ sp[(-6)+5]
  3868  0124DC  0EFF               	movlw	-1
  3869  0124DE  006F FF8C  F00C    	movff	plusw1,btemp+11
  3870  0124E4  2A0C               	incf	(btemp+11)^0,f,c
  3871  0124E6  0060  F033  FFE3   	movff	btemp+11,plusw1
  3872  0124EC  060C               	decf	(btemp+11)^0,f,c
  3873  0124EE  0E1E               	movlw	30
  3874  0124F0  600C               	cpfslt	(btemp+11)^0,c
  3875  0124F2  D018               	goto	u11810
  3876  0124F4  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3877  0124FA  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3878  012500  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3879  012506  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3880  01250C  0E42               	movlw	66
  3881  01250E  6EE6               	movwf	postinc1,c
  3882  012510  0E60               	movlw	96
  3883  012512  6EE6               	movwf	postinc1,c
  3884  012514  0E65               	movlw	101
  3885  012516  6EE6               	movwf	postinc1,c
  3886  012518  0E3C               	movlw	60
  3887  01251A  6EE6               	movwf	postinc1,c
  3888  01251C  EC99  F0C0         	call	___flge	;wreg free
  3889  012520  A001               	btfss	btemp& (0+255),0,c
  3890  012522  D77B               	goto	l12328
  3891  012524                     u11810:
  3892                           
  3893                           ;main.c: 261:    static_soc();
  3894  012524  EC54  F0D6         	call	_static_soc	;wreg free
  3895                           
  3896                           ; BSR set to: 1
  3897                           ;main.c: 262:    init_bsoc();
  3898  012528  ECE1  F0BF         	call	_init_bsoc	;wreg free
  3899                           
  3900                           ;main.c: 263:    set_load_relay_one(0);
  3901  01252C  0E00               	movlw	0
  3902  01252E  6EE6               	movwf	postinc1,c
  3903  012530  ECC9  F0D7         	call	_set_load_relay_one	;wreg free
  3904                           
  3905                           ;main.c: 264:    set_load_relay_two(0);
  3906  012534  0E00               	movlw	0
  3907  012536  6EE6               	movwf	postinc1,c
  3908  012538  ECC1  F0D7         	call	_set_load_relay_two	;wreg free
  3909                           
  3910                           ;main.c: 265:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  3911  01253C  0060  F6AB  FFE6   	movff	_C+170,postinc1
  3912  012542  0060  F6AF  FFE6   	movff	_C+171,postinc1
  3913  012548  0EE4               	movlw	low STR_10
  3914  01254A  6EE6               	movwf	postinc1,c
  3915  01254C  0EFD               	movlw	high STR_10
  3916  01254E  6EE6               	movwf	postinc1,c
  3917  012550  0E00               	movlw	0
  3918  012552  6EE6               	movwf	postinc1,c
  3919  012554  0E00               	movlw	0
  3920  012556  6EE6               	movwf	postinc1,c
  3921  012558  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3922  01255C  0060  F007  FFE6   	movff	btemp,postinc1
  3923  012562  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3924  012568  0E06               	movlw	6
  3925  01256A  6EE6               	movwf	postinc1,c
  3926  01256C  ECA7  F0C6         	call	_sprintf	;wreg free
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;main.c: 266:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  3930  012570  0060  F633  FFE6   	movff	_C+140,postinc1
  3931  012576  0060  F637  FFE6   	movff	_C+141,postinc1
  3932  01257C  0060  F63B  FFE6   	movff	_C+142,postinc1
  3933  012582  0060  F63F  FFE6   	movff	_C+143,postinc1
  3934  012588  0E10               	movlw	low STR_11
  3935  01258A  6EE6               	movwf	postinc1,c
  3936  01258C  0EFE               	movlw	high STR_11
  3937  01258E  6EE6               	movwf	postinc1,c
  3938  012590  0E00               	movlw	0
  3939  012592  6EE6               	movwf	postinc1,c
  3940  012594  0E01               	movlw	1
  3941  012596  6EE6               	movwf	postinc1,c
  3942  012598  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3943  01259C  0060  F007  FFE6   	movff	btemp,postinc1
  3944  0125A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3945  0125A8  0E08               	movlw	8
  3946  0125AA  6EE6               	movwf	postinc1,c
  3947  0125AC  ECA7  F0C6         	call	_sprintf	;wreg free
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;main.c: 267:    update_lcd(0);
  3951  0125B0  0E00               	movlw	0
  3952  0125B2  6EE6               	movwf	postinc1,c
  3953  0125B4  EC1F  F0C6         	call	_update_lcd	;wreg free
  3954                           
  3955                           ;main.c: 268:    WaitMs(2000);
  3956  0125B8  0ED0               	movlw	208
  3957  0125BA  6EE6               	movwf	postinc1,c
  3958  0125BC  0E07               	movlw	7
  3959  0125BE  6EE6               	movwf	postinc1,c
  3960  0125C0  ECAD  F0D3         	call	_WaitMs	;wreg free
  3961                           
  3962                           ;main.c: 269:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  3963  0125C4  0E2E               	movlw	low STR_12
  3964  0125C6  6EE6               	movwf	postinc1,c
  3965  0125C8  0EFF               	movlw	high STR_12
  3966  0125CA  6EE6               	movwf	postinc1,c
  3967  0125CC  0E00               	movlw	0
  3968  0125CE  6EE6               	movwf	postinc1,c
  3969  0125D0  0E00               	movlw	0
  3970  0125D2  6EE6               	movwf	postinc1,c
  3971  0125D4  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3972  0125D8  0060  F007  FFE6   	movff	btemp,postinc1
  3973  0125DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3974  0125E4  0E04               	movlw	4
  3975  0125E6  6EE6               	movwf	postinc1,c
  3976  0125E8  ECA7  F0C6         	call	_sprintf	;wreg free
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;main.c: 270:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  3980  0125EC  0E3F               	movlw	low STR_13
  3981  0125EE  6EE6               	movwf	postinc1,c
  3982  0125F0  0EFF               	movlw	high STR_13
  3983  0125F2  6EE6               	movwf	postinc1,c
  3984  0125F4  0E00               	movlw	0
  3985  0125F6  6EE6               	movwf	postinc1,c
  3986  0125F8  0E01               	movlw	1
  3987  0125FA  6EE6               	movwf	postinc1,c
  3988  0125FC  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  3989  012600  0060  F007  FFE6   	movff	btemp,postinc1
  3990  012606  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3991  01260C  0E04               	movlw	4
  3992  01260E  6EE6               	movwf	postinc1,c
  3993  012610  ECA7  F0C6         	call	_sprintf	;wreg free
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;main.c: 271:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  3997  012614  0E72               	movlw	low STR_14
  3998  012616  6EE6               	movwf	postinc1,c
  3999  012618  0EFF               	movlw	high STR_14
  4000  01261A  6EE6               	movwf	postinc1,c
  4001  01261C  0E00               	movlw	0
  4002  01261E  6EE6               	movwf	postinc1,c
  4003  012620  0E02               	movlw	2
  4004  012622  6EE6               	movwf	postinc1,c
  4005  012624  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4006  012628  0060  F007  FFE6   	movff	btemp,postinc1
  4007  01262E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4008  012634  0E04               	movlw	4
  4009  012636  6EE6               	movwf	postinc1,c
  4010  012638  ECA7  F0C6         	call	_sprintf	;wreg free
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;main.c: 272:    update_lcd(0);
  4014  01263C  0E00               	movlw	0
  4015  01263E  6EE6               	movwf	postinc1,c
  4016  012640  EC1F  F0C6         	call	_update_lcd	;wreg free
  4017                           
  4018                           ;main.c: 273:    esr_check();
  4019  012644  EC12  F0BB         	call	_esr_check	;wreg free
  4020                           
  4021                           ;main.c: 274:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4022  012648  0060  F613  FFE6   	movff	_C+132,postinc1
  4023  01264E  0060  F617  FFE6   	movff	_C+133,postinc1
  4024  012654  0060  F61B  FFE6   	movff	_C+134,postinc1
  4025  01265A  0060  F61F  FFE6   	movff	_C+135,postinc1
  4026  012660  0ECE               	movlw	low STR_15
  4027  012662  6EE6               	movwf	postinc1,c
  4028  012664  0EFD               	movlw	high STR_15
  4029  012666  6EE6               	movwf	postinc1,c
  4030  012668  0E00               	movlw	0
  4031  01266A  6EE6               	movwf	postinc1,c
  4032  01266C  0E00               	movlw	0
  4033  01266E  6EE6               	movwf	postinc1,c
  4034  012670  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4035  012674  0060  F007  FFE6   	movff	btemp,postinc1
  4036  01267A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4037  012680  0E08               	movlw	8
  4038  012682  6EE6               	movwf	postinc1,c
  4039  012684  ECA7  F0C6         	call	_sprintf	;wreg free
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;main.c: 275:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4043  012688  0060  F77F  FFE6   	movff	_C+223,postinc1
  4044  01268E  0060  F783  FFE6   	movff	_C+224,postinc1
  4045  012694  0060  F787  FFE6   	movff	_C+225,postinc1
  4046  01269A  0060  F78B  FFE6   	movff	_C+226,postinc1
  4047  0126A0  0060  F7AF  FFE6   	movff	_C+235,postinc1
  4048  0126A6  0060  F7B3  FFE6   	movff	_C+236,postinc1
  4049  0126AC  0060  F7B7  FFE6   	movff	_C+237,postinc1
  4050  0126B2  0060  F7BB  FFE6   	movff	_C+238,postinc1
  4051  0126B8  0E82               	movlw	low STR_16
  4052  0126BA  6EE6               	movwf	postinc1,c
  4053  0126BC  0EFD               	movlw	high STR_16
  4054  0126BE  6EE6               	movwf	postinc1,c
  4055  0126C0  0E00               	movlw	0
  4056  0126C2  6EE6               	movwf	postinc1,c
  4057  0126C4  0E01               	movlw	1
  4058  0126C6  6EE6               	movwf	postinc1,c
  4059  0126C8  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4060  0126CC  0060  F007  FFE6   	movff	btemp,postinc1
  4061  0126D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4062  0126D8  0E0C               	movlw	12
  4063  0126DA  6EE6               	movwf	postinc1,c
  4064  0126DC  ECA7  F0C6         	call	_sprintf	;wreg free
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;main.c: 276:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4068  0126E0  0060  F78F  FFE6   	movff	_C+227,postinc1
  4069  0126E6  0060  F793  FFE6   	movff	_C+228,postinc1
  4070  0126EC  0060  F797  FFE6   	movff	_C+229,postinc1
  4071  0126F2  0060  F79B  FFE6   	movff	_C+230,postinc1
  4072  0126F8  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4073  0126FE  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4074  012704  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4075  01270A  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4076  012710  0E9C               	movlw	low STR_17
  4077  012712  6EE6               	movwf	postinc1,c
  4078  012714  0EFD               	movlw	high STR_17
  4079  012716  6EE6               	movwf	postinc1,c
  4080  012718  0E00               	movlw	0
  4081  01271A  6EE6               	movwf	postinc1,c
  4082  01271C  0E02               	movlw	2
  4083  01271E  6EE6               	movwf	postinc1,c
  4084  012720  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4085  012724  0060  F007  FFE6   	movff	btemp,postinc1
  4086  01272A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4087  012730  0E0C               	movlw	12
  4088  012732  6EE6               	movwf	postinc1,c
  4089  012734  ECA7  F0C6         	call	_sprintf	;wreg free
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;main.c: 277:    update_lcd(0);
  4093  012738  0E00               	movlw	0
  4094  01273A  6EE6               	movwf	postinc1,c
  4095  01273C  EC1F  F0C6         	call	_update_lcd	;wreg free
  4096                           
  4097                           ;main.c: 278:    WaitMs(5000);
  4098  012740  0E88               	movlw	136
  4099  012742  6EE6               	movwf	postinc1,c
  4100  012744  0E13               	movlw	19
  4101  012746  6EE6               	movwf	postinc1,c
  4102  012748  ECAD  F0D3         	call	_WaitMs	;wreg free
  4103                           
  4104                           ;main.c: 279:    break;
  4105  01274C  D01C               	goto	l12388
  4106  01274E                     l1330:
  4107                           
  4108                           ; BSR set to: 2
  4109                           ;main.c: 285:    P.SYSTEM_STABLE = 1;
  4110  01274E  0100               	movlb	0	; () banked
  4111  012750  8199               	bsf	(_P+1)& (0+255),0,b	;volatile
  4112                           
  4113                           ;main.c: 286:    break;
  4114  012752  D019               	goto	l12388
  4115  012754                     l1332:
  4116                           
  4117                           ; BSR set to: 2
  4118                           ;main.c: 289:    V.ui_state = UI_STATE_INIT;
  4119  012754  6B00               	clrf	_V& (0+255),b	;volatile
  4120                           
  4121                           ;main.c: 290:    break;
  4122  012756  D017               	goto	l12388
  4123  012758                     l12386:
  4124  012758  0102               	movlb	2	; () banked
  4125  01275A  5100               	movf	_V& (0+255),w,b	;volatile
  4126  01275C  6E0B               	movwf	(btemp+10)^0,c
  4127  01275E  6A0C               	clrf	(btemp+11)^0,c
  4128                           
  4129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4130                           ; Switch size 1, requested type "simple"
  4131                           ; Number of cases is 1, Range of values is 0 to 0
  4132                           ; switch strategies available:
  4133                           ; Name         Instructions Cycles
  4134                           ; simple_byte            4     3 (average)
  4135                           ;	Chosen strategy is simple_byte
  4136  012760  500C               	movf	(btemp+11)^0,w,c
  4137  012762  0A00               	xorlw	0	; case 0
  4138  012764  A4D8               	btfss	status,2,c
  4139  012766  D7F6               	goto	l1332
  4140                           
  4141                           ; BSR set to: 2
  4142                           ; Switch size 1, requested type "simple"
  4143                           ; Number of cases is 5, Range of values is 0 to 5
  4144                           ; switch strategies available:
  4145                           ; Name         Instructions Cycles
  4146                           ; simple_byte           16     9 (average)
  4147                           ;	Chosen strategy is simple_byte
  4148  012768  500B               	movf	(btemp+10)^0,w,c
  4149  01276A  0A00               	xorlw	0	; case 0
  4150  01276C  B4D8               	btfsc	status,2,c
  4151  01276E  D57C               	goto	l12278
  4152  012770  0A01               	xorlw	1	; case 1
  4153  012772  B4D8               	btfsc	status,2,c
  4154  012774  D008               	goto	l12388
  4155  012776  0A02               	xorlw	2	; case 3
  4156  012778  B4D8               	btfsc	status,2,c
  4157  01277A  D005               	goto	l12388
  4158  01277C  0A07               	xorlw	7	; case 4
  4159  01277E  B4D8               	btfsc	status,2,c
  4160  012780  D7E6               	goto	l1330
  4161  012782  0A01               	xorlw	1	; case 5
  4162  012784  D7E7               	goto	l1332
  4163  012786                     l12388:
  4164                           
  4165                           ;main.c: 293:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4166  012786  0E01               	movlw	1
  4167  012788  6EE6               	movwf	postinc1,c
  4168  01278A  EC3B  F0D5         	call	_TimerDone	;wreg free
  4169  01278E  5001               	movf	btemp^0,w,c
  4170  012790  B4D8               	btfsc	status,2,c
  4171  012792  D013               	goto	l12400
  4172  012794  EC17  F0D8         	call	_check_adc_scan	;wreg free
  4173  012798  5001               	movf	btemp^0,w,c
  4174  01279A  B4D8               	btfsc	status,2,c
  4175  01279C  D00E               	goto	l12400
  4176                           
  4177                           ;main.c: 297:    convert_adc_data();
  4178  01279E  EC47  F0CA         	call	_convert_adc_data	;wreg free
  4179                           
  4180                           ;main.c: 301:    clear_adc_scan();
  4181  0127A2  EC27  F0D8         	call	_clear_adc_scan	;wreg free
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;main.c: 302:    start_adc_scan();
  4185  0127A6  EC92  F0CF         	call	_start_adc_scan	;wreg free
  4186                           
  4187                           ;main.c: 303:    StartTimer(TMR_ADC, 200);
  4188  0127AA  0EC8               	movlw	200
  4189  0127AC  6EE6               	movwf	postinc1,c
  4190  0127AE  0E00               	movlw	0
  4191  0127B0  6EE6               	movwf	postinc1,c
  4192  0127B2  0E01               	movlw	1
  4193  0127B4  6EE6               	movwf	postinc1,c
  4194  0127B6  ECBA  F0D2         	call	_StartTimer	;wreg free
  4195  0127BA                     l12400:
  4196                           
  4197                           ;main.c: 310:   if (TimerDone(TMR_DISPLAY)) {
  4198                           
  4199                           ;main.c: 306:   if (V.ticks) {
  4200  0127BA  0E0A               	movlw	10
  4201  0127BC  6EE6               	movwf	postinc1,c
  4202  0127BE  EC3B  F0D5         	call	_TimerDone	;wreg free
  4203  0127C2  5001               	movf	btemp^0,w,c
  4204  0127C4  B4D8               	btfsc	status,2,c
  4205  0127C6  D27F               	goto	l12442
  4206                           
  4207                           ;main.c: 311:    if (TimerDone(TMR_HELPDIS)) {
  4208  0127C8  0E09               	movlw	9
  4209  0127CA  6EE6               	movwf	postinc1,c
  4210  0127CC  EC3B  F0D5         	call	_TimerDone	;wreg free
  4211  0127D0  5001               	movf	btemp^0,w,c
  4212  0127D2  B4D8               	btfsc	status,2,c
  4213  0127D4  D004               	goto	l12408
  4214                           
  4215                           ;main.c: 312:     set_display_info(DIS_STR);
  4216  0127D6  0E00               	movlw	0
  4217  0127D8  6EE6               	movwf	postinc1,c
  4218  0127DA  EC11  F0D7         	call	_set_display_info	;wreg free
  4219  0127DE                     l12408:
  4220                           
  4221                           ;main.c: 314:    calc_model_data();
  4222  0127DE  EC61  F0AB         	call	_calc_model_data	;wreg free
  4223                           
  4224                           ; BSR set to: 1
  4225                           ;main.c: 321:     hid_display(&H);
  4226                           
  4227                           ;main.c: 316:    if (0) {
  4228  0127E2  0EF5               	movlw	_H& (0+255)
  4229  0127E4  6EE6               	movwf	postinc1,c
  4230  0127E6  ECAD  F0C7         	call	_hid_display	;wreg free
  4231                           
  4232                           ;main.c: 322:     switch (H.hid_display) {
  4233  0127EA  D248               	goto	l12434
  4234  0127EC                     l1340:
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;main.c: 324:      V.calib = 0;
  4238  0127EC  0102               	movlb	2	; () banked
  4239  0127EE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4240                           
  4241                           ; BSR set to: 2
  4242                           ;main.c: 325:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4243  0127F0  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4244  0127F6  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4245  0127FC  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4246  012802  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4247  012808  0E86               	movlw	low STR_21
  4248  01280A  6EE6               	movwf	postinc1,c
  4249  01280C  0EFE               	movlw	high STR_21
  4250  01280E  6EE6               	movwf	postinc1,c
  4251  012810  0E00               	movlw	0
  4252  012812  6EE6               	movwf	postinc1,c
  4253  012814  0E00               	movlw	0
  4254  012816  6EE6               	movwf	postinc1,c
  4255  012818  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4256  01281C  0060  F007  FFE6   	movff	btemp,postinc1
  4257  012822  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4258  012828  0E08               	movlw	8
  4259  01282A  6EE6               	movwf	postinc1,c
  4260  01282C  ECA7  F0C6         	call	_sprintf	;wreg free
  4261                           
  4262                           ;main.c: 326:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4263  012830  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4264  012836  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4265  01283C  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4266  012842  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4267  012848  0EAC               	movlw	low STR_22
  4268  01284A  6EE6               	movwf	postinc1,c
  4269  01284C  0EFE               	movlw	high STR_22
  4270  01284E  6EE6               	movwf	postinc1,c
  4271  012850  0E00               	movlw	0
  4272  012852  6EE6               	movwf	postinc1,c
  4273  012854  0E01               	movlw	1
  4274  012856  6EE6               	movwf	postinc1,c
  4275  012858  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4276  01285C  0060  F007  FFE6   	movff	btemp,postinc1
  4277  012862  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4278  012868  0E08               	movlw	8
  4279  01286A  6EE6               	movwf	postinc1,c
  4280  01286C  ECA7  F0C6         	call	_sprintf	;wreg free
  4281                           
  4282                           ;main.c: 327:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4283  012870  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4284  012876  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4285  01287C  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4286  012882  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4287  012888  0E99               	movlw	low STR_23
  4288  01288A  6EE6               	movwf	postinc1,c
  4289  01288C  0EFE               	movlw	high STR_23
  4290  01288E  6EE6               	movwf	postinc1,c
  4291  012890  0E00               	movlw	0
  4292  012892  6EE6               	movwf	postinc1,c
  4293  012894  0E02               	movlw	2
  4294  012896  6EE6               	movwf	postinc1,c
  4295  012898  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4296  01289C  0060  F007  FFE6   	movff	btemp,postinc1
  4297  0128A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4298  0128A8  0E08               	movlw	8
  4299  0128AA  6EE6               	movwf	postinc1,c
  4300  0128AC  ECA7  F0C6         	call	_sprintf	;wreg free
  4301                           
  4302                           ;main.c: 328:      break;
  4303  0128B0  D1FA               	goto	l12436
  4304  0128B2                     l1342:
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;main.c: 330:      V.calib = 0;
  4308  0128B2  0102               	movlb	2	; () banked
  4309  0128B4  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4310                           
  4311                           ; BSR set to: 2
  4312                           ;main.c: 331:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4313  0128B6  0060  F413  FFE6   	movff	_C+4,postinc1
  4314  0128BC  0060  F417  FFE6   	movff	_C+5,postinc1
  4315  0128C2  0060  F41B  FFE6   	movff	_C+6,postinc1
  4316  0128C8  0060  F41F  FFE6   	movff	_C+7,postinc1
  4317  0128CE  0060  F453  FFE6   	movff	_C+20,postinc1
  4318  0128D4  0060  F457  FFE6   	movff	_C+21,postinc1
  4319  0128DA  0060  F45B  FFE6   	movff	_C+22,postinc1
  4320  0128E0  0060  F45F  FFE6   	movff	_C+23,postinc1
  4321  0128E6  0EF8               	movlw	low STR_24
  4322  0128E8  6EE6               	movwf	postinc1,c
  4323  0128EA  0EFE               	movlw	high STR_24
  4324  0128EC  6EE6               	movwf	postinc1,c
  4325  0128EE  0E00               	movlw	0
  4326  0128F0  6EE6               	movwf	postinc1,c
  4327  0128F2  0E00               	movlw	0
  4328  0128F4  6EE6               	movwf	postinc1,c
  4329  0128F6  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4330  0128FA  0060  F007  FFE6   	movff	btemp,postinc1
  4331  012900  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4332  012906  0E0C               	movlw	12
  4333  012908  6EE6               	movwf	postinc1,c
  4334  01290A  ECA7  F0C6         	call	_sprintf	;wreg free
  4335                           
  4336                           ;main.c: 332:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4337  01290E  0060  F403  FFE6   	movff	_C,postinc1
  4338  012914  0060  F407  FFE6   	movff	_C+1,postinc1
  4339  01291A  0060  F40B  FFE6   	movff	_C+2,postinc1
  4340  012920  0060  F40F  FFE6   	movff	_C+3,postinc1
  4341  012926  0060  F443  FFE6   	movff	_C+16,postinc1
  4342  01292C  0060  F447  FFE6   	movff	_C+17,postinc1
  4343  012932  0060  F44B  FFE6   	movff	_C+18,postinc1
  4344  012938  0060  F44F  FFE6   	movff	_C+19,postinc1
  4345  01293E  0ED2               	movlw	low STR_25
  4346  012940  6EE6               	movwf	postinc1,c
  4347  012942  0EFE               	movlw	high STR_25
  4348  012944  6EE6               	movwf	postinc1,c
  4349  012946  0E00               	movlw	0
  4350  012948  6EE6               	movwf	postinc1,c
  4351  01294A  0E01               	movlw	1
  4352  01294C  6EE6               	movwf	postinc1,c
  4353  01294E  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4354  012952  0060  F007  FFE6   	movff	btemp,postinc1
  4355  012958  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4356  01295E  0E0C               	movlw	12
  4357  012960  6EE6               	movwf	postinc1,c
  4358  012962  ECA7  F0C6         	call	_sprintf	;wreg free
  4359                           
  4360                           ;main.c: 333:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4361  012966  0060  F503  FFE6   	movff	_C+64,postinc1
  4362  01296C  0060  F507  FFE6   	movff	_C+65,postinc1
  4363  012972  0060  F50B  FFE6   	movff	_C+66,postinc1
  4364  012978  0060  F50F  FFE6   	movff	_C+67,postinc1
  4365  01297E  0060  F423  FFE6   	movff	_C+8,postinc1
  4366  012984  0060  F427  FFE6   	movff	_C+9,postinc1
  4367  01298A  0060  F42B  FFE6   	movff	_C+10,postinc1
  4368  012990  0060  F42F  FFE6   	movff	_C+11,postinc1
  4369  012996  0EE5               	movlw	low STR_26
  4370  012998  6EE6               	movwf	postinc1,c
  4371  01299A  0EFE               	movlw	high STR_26
  4372  01299C  6EE6               	movwf	postinc1,c
  4373  01299E  0E00               	movlw	0
  4374  0129A0  6EE6               	movwf	postinc1,c
  4375  0129A2  0E02               	movlw	2
  4376  0129A4  6EE6               	movwf	postinc1,c
  4377  0129A6  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4378  0129AA  0060  F007  FFE6   	movff	btemp,postinc1
  4379  0129B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4380  0129B6  0E0C               	movlw	12
  4381  0129B8  6EE6               	movwf	postinc1,c
  4382  0129BA  ECA7  F0C6         	call	_sprintf	;wreg free
  4383                           
  4384                           ;main.c: 334:      break;
  4385  0129BE  D173               	goto	l12436
  4386  0129C0                     l1343:
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;main.c: 336:      V.calib = 0;
  4390  0129C0  0102               	movlb	2	; () banked
  4391  0129C2  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4392                           
  4393                           ; BSR set to: 2
  4394                           ;main.c: 337:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  4395  0129C4  0060  F5F3  FFE6   	movff	_C+124,postinc1
  4396  0129CA  0060  F5F7  FFE6   	movff	_C+125,postinc1
  4397  0129D0  0060  F5FB  FFE6   	movff	_C+126,postinc1
  4398  0129D6  0060  F5FF  FFE6   	movff	_C+127,postinc1
  4399  0129DC  0EBF               	movlw	low STR_27
  4400  0129DE  6EE6               	movwf	postinc1,c
  4401  0129E0  0EFE               	movlw	high STR_27
  4402  0129E2  6EE6               	movwf	postinc1,c
  4403  0129E4  0E00               	movlw	0
  4404  0129E6  6EE6               	movwf	postinc1,c
  4405  0129E8  0E00               	movlw	0
  4406  0129EA  6EE6               	movwf	postinc1,c
  4407  0129EC  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4408  0129F0  0060  F007  FFE6   	movff	btemp,postinc1
  4409  0129F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4410  0129FC  0E08               	movlw	8
  4411  0129FE  6EE6               	movwf	postinc1,c
  4412  012A00  ECA7  F0C6         	call	_sprintf	;wreg free
  4413                           
  4414                           ;main.c: 338:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4415  012A04  0060  F643  FFE6   	movff	_C+144,postinc1
  4416  012A0A  0060  F647  FFE6   	movff	_C+145,postinc1
  4417  012A10  0060  F64B  FFE6   	movff	_C+146,postinc1
  4418  012A16  0060  F64F  FFE6   	movff	_C+147,postinc1
  4419  012A1C  0060  F633  FFE6   	movff	_C+140,postinc1
  4420  012A22  0060  F637  FFE6   	movff	_C+141,postinc1
  4421  012A28  0060  F63B  FFE6   	movff	_C+142,postinc1
  4422  012A2E  0060  F63F  FFE6   	movff	_C+143,postinc1
  4423  012A34  0E26               	movlw	low STR_28
  4424  012A36  6EE6               	movwf	postinc1,c
  4425  012A38  0EFE               	movlw	high STR_28
  4426  012A3A  6EE6               	movwf	postinc1,c
  4427  012A3C  0E00               	movlw	0
  4428  012A3E  6EE6               	movwf	postinc1,c
  4429  012A40  0E01               	movlw	1
  4430  012A42  6EE6               	movwf	postinc1,c
  4431  012A44  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4432  012A48  0060  F007  FFE6   	movff	btemp,postinc1
  4433  012A4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4434  012A54  0E0C               	movlw	12
  4435  012A56  6EE6               	movwf	postinc1,c
  4436  012A58  ECA7  F0C6         	call	_sprintf	;wreg free
  4437                           
  4438                           ;main.c: 339:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  4439  012A5C  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4440  012A62  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4441  012A68  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4442  012A6E  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4443  012A74  0E73               	movlw	low STR_29
  4444  012A76  6EE6               	movwf	postinc1,c
  4445  012A78  0EFE               	movlw	high STR_29
  4446  012A7A  6EE6               	movwf	postinc1,c
  4447  012A7C  0E00               	movlw	0
  4448  012A7E  6EE6               	movwf	postinc1,c
  4449  012A80  0E02               	movlw	2
  4450  012A82  6EE6               	movwf	postinc1,c
  4451  012A84  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4452  012A88  0060  F007  FFE6   	movff	btemp,postinc1
  4453  012A8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4454  012A94  0E08               	movlw	8
  4455  012A96  6EE6               	movwf	postinc1,c
  4456  012A98  ECA7  F0C6         	call	_sprintf	;wreg free
  4457                           
  4458                           ;main.c: 340:      break;
  4459  012A9C  D104               	goto	l12436
  4460  012A9E                     l12420:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;main.c: 342:      if (!V.calib) {
  4464  012A9E  0102               	movlb	2	; () banked
  4465  012AA0  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4466  012AA2  A4D8               	btfss	status,2,c
  4467  012AA4  D02D               	goto	l12424
  4468                           
  4469                           ; BSR set to: 2
  4470                           ;main.c: 343:       lp_filter(0.0, i, -1);
  4471  012AA6  0EFF               	movlw	255
  4472  012AA8  6EE6               	movwf	postinc1,c
  4473                           
  4474                           ;stkvar	_i @ sp[(-7)+2]
  4475  012AAA  0EFB               	movlw	-5
  4476  012AAC  50E3               	movf	plusw1,w,c
  4477  012AAE  6EE6               	movwf	postinc1,c
  4478  012AB0  0E00               	movlw	0
  4479  012AB2  6EE6               	movwf	postinc1,c
  4480  012AB4  0E00               	movlw	0
  4481  012AB6  6EE6               	movwf	postinc1,c
  4482  012AB8  0E00               	movlw	0
  4483  012ABA  6EE6               	movwf	postinc1,c
  4484  012ABC  0E00               	movlw	0
  4485  012ABE  6EE6               	movwf	postinc1,c
  4486  012AC0  EC05  F0BC         	call	_lp_filter	;wreg free
  4487                           
  4488                           ;main.c: 344:       lp_filter(0.0, j, -1);
  4489  012AC4  0EFF               	movlw	255
  4490  012AC6  6EE6               	movwf	postinc1,c
  4491                           
  4492                           ;stkvar	_j @ sp[(-7)+1]
  4493  012AC8  0EFA               	movlw	-6
  4494  012ACA  50E3               	movf	plusw1,w,c
  4495  012ACC  6EE6               	movwf	postinc1,c
  4496  012ACE  0E00               	movlw	0
  4497  012AD0  6EE6               	movwf	postinc1,c
  4498  012AD2  0E00               	movlw	0
  4499  012AD4  6EE6               	movwf	postinc1,c
  4500  012AD6  0E00               	movlw	0
  4501  012AD8  6EE6               	movwf	postinc1,c
  4502  012ADA  0E00               	movlw	0
  4503  012ADC  6EE6               	movwf	postinc1,c
  4504  012ADE  EC05  F0BC         	call	_lp_filter	;wreg free
  4505                           
  4506                           ;main.c: 345:       lp_filter(0.0, k, -1);
  4507  012AE2  0EFF               	movlw	255
  4508  012AE4  6EE6               	movwf	postinc1,c
  4509                           
  4510                           ;stkvar	_k @ sp[(-7)+0]
  4511  012AE6  0EF9               	movlw	-7
  4512  012AE8  50E3               	movf	plusw1,w,c
  4513  012AEA  6EE6               	movwf	postinc1,c
  4514  012AEC  0E00               	movlw	0
  4515  012AEE  6EE6               	movwf	postinc1,c
  4516  012AF0  0E00               	movlw	0
  4517  012AF2  6EE6               	movwf	postinc1,c
  4518  012AF4  0E00               	movlw	0
  4519  012AF6  6EE6               	movwf	postinc1,c
  4520  012AF8  0E00               	movlw	0
  4521  012AFA  6EE6               	movwf	postinc1,c
  4522  012AFC  EC05  F0BC         	call	_lp_filter	;wreg free
  4523  012B00                     l12424:
  4524                           
  4525                           ;main.c: 347:      V.calib = 1;
  4526  012B00  0E01               	movlw	1
  4527  012B02  0102               	movlb	2	; () banked
  4528  012B04  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4529                           
  4530                           ; BSR set to: 2
  4531                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4532  012B06  0E02               	movlw	2
  4533  012B08  6EE6               	movwf	postinc1,c
  4534  012B0A  ECA8  F0D4         	call	_get_switch	;wreg free
  4535  012B0E  5001               	movf	btemp^0,w,c
  4536  012B10  6EE6               	movwf	postinc1,c
  4537  012B12  0E00               	movlw	0
  4538  012B14  6EE6               	movwf	postinc1,c
  4539                           
  4540                           ;stkvar	_i @ sp[(-8)+2]
  4541  012B16  0EFA               	movlw	-6
  4542  012B18  50E3               	movf	plusw1,w,c
  4543  012B1A  0D04               	mullw	4
  4544  012B1C  0E00               	movlw	low _C
  4545  012B1E  24F3               	addwf	243,w,c
  4546  012B20  6ED9               	movwf	fsr2l,c
  4547  012B22  0E01               	movlw	high _C
  4548  012B24  20F4               	addwfc	prodh,w,c
  4549  012B26  6EDA               	movwf	fsr2h,c
  4550  012B28  006F FF7B FFE6     	movff	postinc2,postinc1
  4551  012B2E  006F FF7B FFE6     	movff	postinc2,postinc1
  4552  012B34  006F FF7B FFE6     	movff	postinc2,postinc1
  4553  012B3A  006F FF7B FFE6     	movff	postinc2,postinc1
  4554                           
  4555                           ;stkvar	_i @ sp[(-12)+2]
  4556  012B40  0EF6               	movlw	-10
  4557  012B42  50E3               	movf	plusw1,w,c
  4558  012B44  6EE6               	movwf	postinc1,c
  4559  012B46  EC20  F0D7         	call	_get_raw_result	;wreg free
  4560  012B4A  0060  F007  FFE6   	movff	btemp,postinc1
  4561  012B50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4562  012B56  0E83               	movlw	low STR_18
  4563  012B58  6EE6               	movwf	postinc1,c
  4564  012B5A  0EFF               	movlw	high STR_18
  4565  012B5C  6EE6               	movwf	postinc1,c
  4566  012B5E  0E00               	movlw	0
  4567  012B60  6EE6               	movwf	postinc1,c
  4568  012B62  0E00               	movlw	0
  4569  012B64  6EE6               	movwf	postinc1,c
  4570  012B66  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4571  012B6A  0060  F007  FFE6   	movff	btemp,postinc1
  4572  012B70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4573  012B76  0E0C               	movlw	12
  4574  012B78  6EE6               	movwf	postinc1,c
  4575  012B7A  ECA7  F0C6         	call	_sprintf	;wreg free
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4579  012B7E  0E03               	movlw	3
  4580  012B80  6EE6               	movwf	postinc1,c
  4581  012B82  ECA8  F0D4         	call	_get_switch	;wreg free
  4582  012B86  5001               	movf	btemp^0,w,c
  4583  012B88  6EE6               	movwf	postinc1,c
  4584  012B8A  0E00               	movlw	0
  4585  012B8C  6EE6               	movwf	postinc1,c
  4586                           
  4587                           ;stkvar	_j @ sp[(-8)+1]
  4588  012B8E  0EF9               	movlw	-7
  4589  012B90  50E3               	movf	plusw1,w,c
  4590  012B92  0D04               	mullw	4
  4591  012B94  0E00               	movlw	low _C
  4592  012B96  24F3               	addwf	243,w,c
  4593  012B98  6ED9               	movwf	fsr2l,c
  4594  012B9A  0E01               	movlw	high _C
  4595  012B9C  20F4               	addwfc	prodh,w,c
  4596  012B9E  6EDA               	movwf	fsr2h,c
  4597  012BA0  006F FF7B FFE6     	movff	postinc2,postinc1
  4598  012BA6  006F FF7B FFE6     	movff	postinc2,postinc1
  4599  012BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  4600  012BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  4601                           
  4602                           ;stkvar	_j @ sp[(-12)+1]
  4603  012BB8  0EF5               	movlw	-11
  4604  012BBA  50E3               	movf	plusw1,w,c
  4605  012BBC  6EE6               	movwf	postinc1,c
  4606  012BBE  EC20  F0D7         	call	_get_raw_result	;wreg free
  4607  012BC2  0060  F007  FFE6   	movff	btemp,postinc1
  4608  012BC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4609  012BCE  0E83               	movlw	low STR_18
  4610  012BD0  6EE6               	movwf	postinc1,c
  4611  012BD2  0EFF               	movlw	high STR_18
  4612  012BD4  6EE6               	movwf	postinc1,c
  4613  012BD6  0E00               	movlw	0
  4614  012BD8  6EE6               	movwf	postinc1,c
  4615  012BDA  0E01               	movlw	1
  4616  012BDC  6EE6               	movwf	postinc1,c
  4617  012BDE  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4618  012BE2  0060  F007  FFE6   	movff	btemp,postinc1
  4619  012BE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4620  012BEE  0E0C               	movlw	12
  4621  012BF0  6EE6               	movwf	postinc1,c
  4622  012BF2  ECA7  F0C6         	call	_sprintf	;wreg free
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4626                           ;stkvar	_inp_index @ sp[(-6)+3]
  4627  012BF6  0EFD               	movlw	-3
  4628  012BF8  50E3               	movf	plusw1,w,c
  4629  012BFA  6E0B               	movwf	(btemp+10)^0,c
  4630  012BFC  6A0C               	clrf	(btemp+11)^0,c
  4631  012BFE  0E01               	movlw	1
  4632  012C00  260B               	addwf	(btemp+10)^0,f,c
  4633  012C02  0E00               	movlw	0
  4634  012C04  220C               	addwfc	(btemp+11)^0,f,c
  4635  012C06  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4636  012C0C  0060  F033  FFE6   	movff	btemp+11,postinc1
  4637                           
  4638                           ;stkvar	_k @ sp[(-8)+0]
  4639  012C12  0EF8               	movlw	-8
  4640  012C14  50E3               	movf	plusw1,w,c
  4641  012C16  0D04               	mullw	4
  4642  012C18  0E00               	movlw	low _C
  4643  012C1A  24F3               	addwf	243,w,c
  4644  012C1C  6ED9               	movwf	fsr2l,c
  4645  012C1E  0E01               	movlw	high _C
  4646  012C20  20F4               	addwfc	prodh,w,c
  4647  012C22  6EDA               	movwf	fsr2h,c
  4648  012C24  006F FF7B FFE6     	movff	postinc2,postinc1
  4649  012C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  4650  012C30  006F FF7B FFE6     	movff	postinc2,postinc1
  4651  012C36  006F FF7B FFE6     	movff	postinc2,postinc1
  4652                           
  4653                           ;stkvar	_k @ sp[(-12)+0]
  4654  012C3C  0EF4               	movlw	-12
  4655  012C3E  50E3               	movf	plusw1,w,c
  4656  012C40  6EE6               	movwf	postinc1,c
  4657  012C42  EC20  F0D7         	call	_get_raw_result	;wreg free
  4658  012C46  0060  F007  FFE6   	movff	btemp,postinc1
  4659  012C4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4660  012C52  0E61               	movlw	low STR_20
  4661  012C54  6EE6               	movwf	postinc1,c
  4662  012C56  0EFF               	movlw	high STR_20
  4663  012C58  6EE6               	movwf	postinc1,c
  4664  012C5A  0E00               	movlw	0
  4665  012C5C  6EE6               	movwf	postinc1,c
  4666  012C5E  0E02               	movlw	2
  4667  012C60  6EE6               	movwf	postinc1,c
  4668  012C62  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  4669  012C66  0060  F007  FFE6   	movff	btemp,postinc1
  4670  012C6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4671  012C72  0E0C               	movlw	12
  4672  012C74  6EE6               	movwf	postinc1,c
  4673  012C76  ECA7  F0C6         	call	_sprintf	;wreg free
  4674                           
  4675                           ;main.c: 351:      break;
  4676  012C7A  D015               	goto	l12436
  4677  012C7C                     l12434:
  4678  012C7C  0100               	movlb	0	; () banked
  4679  012C7E  51F5               	movf	_H& (0+255),w,b
  4680  012C80  6E0B               	movwf	(btemp+10)^0,c
  4681  012C82  6A0C               	clrf	(btemp+11)^0,c
  4682                           
  4683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4684                           ; Switch size 1, requested type "simple"
  4685                           ; Number of cases is 1, Range of values is 0 to 0
  4686                           ; switch strategies available:
  4687                           ; Name         Instructions Cycles
  4688                           ; simple_byte            4     3 (average)
  4689                           ;	Chosen strategy is simple_byte
  4690  012C84  500C               	movf	(btemp+11)^0,w,c
  4691  012C86  0A00               	xorlw	0	; case 0
  4692  012C88  A4D8               	btfss	status,2,c
  4693  012C8A  D00D               	goto	l12436
  4694                           
  4695                           ; BSR set to: 0
  4696                           ; Switch size 1, requested type "simple"
  4697                           ; Number of cases is 4, Range of values is 0 to 3
  4698                           ; switch strategies available:
  4699                           ; Name         Instructions Cycles
  4700                           ; simple_byte           13     7 (average)
  4701                           ;	Chosen strategy is simple_byte
  4702  012C8C  500B               	movf	(btemp+10)^0,w,c
  4703  012C8E  0A00               	xorlw	0	; case 0
  4704  012C90  B4D8               	btfsc	status,2,c
  4705  012C92  D60F               	goto	l1342
  4706  012C94  0A01               	xorlw	1	; case 1
  4707  012C96  B4D8               	btfsc	status,2,c
  4708  012C98  D5A9               	goto	l1340
  4709  012C9A  0A03               	xorlw	3	; case 2
  4710  012C9C  B4D8               	btfsc	status,2,c
  4711  012C9E  D690               	goto	l1343
  4712  012CA0  0A01               	xorlw	1	; case 3
  4713  012CA2  B4D8               	btfsc	status,2,c
  4714  012CA4  D6FC               	goto	l12420
  4715  012CA6                     l12436:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;main.c: 355:     clear_hid_pflags(&H);
  4719  012CA6  0EF5               	movlw	_H& (0+255)
  4720  012CA8  6EE6               	movwf	postinc1,c
  4721  012CAA  EC66  F0D6         	call	_clear_hid_pflags	;wreg free
  4722                           
  4723                           ;main.c: 357:    StartTimer(TMR_DISPLAY, 250);
  4724  012CAE  0EFA               	movlw	250
  4725  012CB0  6EE6               	movwf	postinc1,c
  4726  012CB2  0E00               	movlw	0
  4727  012CB4  6EE6               	movwf	postinc1,c
  4728  012CB6  0E0A               	movlw	10
  4729  012CB8  6EE6               	movwf	postinc1,c
  4730  012CBA  ECBA  F0D2         	call	_StartTimer	;wreg free
  4731                           
  4732                           ;main.c: 358:    update_lcd(0);
  4733  012CBE  0E00               	movlw	0
  4734  012CC0  6EE6               	movwf	postinc1,c
  4735  012CC2  EC1F  F0C6         	call	_update_lcd	;wreg free
  4736  012CC6                     l12442:
  4737                           
  4738                           ;main.c: 364:   check_help(V.flipper);
  4739  012CC6  0102               	movlb	2	; () banked
  4740  012CC8  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4741  012CCA  6EE6               	movwf	postinc1,c
  4742  012CCC  EC07  F0B8         	call	_check_help	;wreg free
  4743                           
  4744                           ;main.c: 366:   if (check_enter_button(&H)) {
  4745  012CD0  0EF5               	movlw	_H& (0+255)
  4746  012CD2  6EE6               	movwf	postinc1,c
  4747  012CD4  ECDA  F0D2         	call	_check_enter_button	;wreg free
  4748  012CD8  5001               	movf	btemp^0,w,c
  4749  012CDA  B4D8               	btfsc	status,2,c
  4750  012CDC  D062               	goto	l1347
  4751                           
  4752                           ;main.c: 367:    V.calib = 0;
  4753  012CDE  0102               	movlb	2	; () banked
  4754  012CE0  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4755                           
  4756                           ; BSR set to: 2
  4757                           ;main.c: 368:    inp_index += 3;
  4758                           ;stkvar	_inp_index @ sp[(-6)+3]
  4759  012CE2  0EFD               	movlw	-3
  4760  012CE4  006F FF8C  F001    	movff	plusw1,btemp
  4761  012CEA  0E03               	movlw	3
  4762  012CEC  2601               	addwf	btemp^0,f,c
  4763  012CEE  0EFD               	movlw	-3
  4764  012CF0  0060  F007  FFE3   	movff	btemp,plusw1
  4765                           
  4766                           ;main.c: 369:    if (inp_index > 9)
  4767                           ;stkvar	_inp_index @ sp[(-6)+3]
  4768  012CF6  0EFD               	movlw	-3
  4769  012CF8  006F FF8C  F001    	movff	plusw1,btemp
  4770  012CFE  0E09               	movlw	9
  4771  012D00  6401               	cpfsgt	btemp^0,c
  4772  012D02  D03A               	goto	l12470
  4773                           
  4774                           ; BSR set to: 2
  4775                           ;main.c: 370:     inp_index = 0;
  4776                           ;stkvar	_inp_index @ sp[(-6)+3]
  4777  012D04  0EFD               	movlw	-3
  4778  012D06  6AE3               	clrf	plusw1,c
  4779  012D08  D037               	goto	l12470
  4780  012D0A                     l12452:
  4781                           
  4782                           ; BSR set to: 2
  4783                           ;main.c: 373:     i = C_BATT;
  4784                           ;stkvar	_i @ sp[(-6)+2]
  4785  012D0A  0EFC               	movlw	-4
  4786  012D0C  6AE3               	clrf	plusw1,c
  4787                           
  4788                           ; BSR set to: 2
  4789                           ;main.c: 374:     j = C_PV;
  4790                           ;stkvar	_j @ sp[(-6)+1]
  4791  012D0E  0EFB               	movlw	-5
  4792  012D10  6AE3               	clrf	plusw1,c
  4793  012D12  2AE3               	incf	plusw1,f,c
  4794                           
  4795                           ; BSR set to: 2
  4796                           ;main.c: 375:     k = V_CC;
  4797                           ;stkvar	_k @ sp[(-6)+0]
  4798  012D14  0EFA               	movlw	-6
  4799  012D16  6AE3               	clrf	plusw1,c
  4800  012D18  82E3               	bsf	plusw1,1,c
  4801                           
  4802                           ;main.c: 376:     break;
  4803  012D1A  D043               	goto	l1347
  4804  012D1C                     l12458:
  4805                           
  4806                           ; BSR set to: 2
  4807                           ;main.c: 378:     i = V_BAT;
  4808                           ;stkvar	_i @ sp[(-6)+2]
  4809  012D1C  0EFC               	movlw	-4
  4810  012D1E  6AE3               	clrf	plusw1,c
  4811  012D20  84E3               	bsf	plusw1,2,c
  4812                           
  4813                           ;main.c: 379:     j = V_PV;
  4814                           ;stkvar	_j @ sp[(-6)+1]
  4815  012D22  0EFB               	movlw	-5
  4816  012D24  6AE3               	clrf	plusw1,c
  4817  012D26  80E3               	bsf	plusw1,0,c
  4818  012D28  84E3               	bsf	plusw1,2,c	;indir
  4819                           
  4820                           ;main.c: 380:     k = V_CBUS;
  4821                           ;stkvar	_k @ sp[(-6)+0]
  4822  012D2A  0EFA               	movlw	-6
  4823  012D2C  6AE3               	clrf	plusw1,c
  4824  012D2E  82E3               	bsf	plusw1,1,c
  4825  012D30  84E3               	bsf	plusw1,2,c	;indir
  4826                           
  4827                           ;main.c: 381:     break;
  4828  012D32  D037               	goto	l1347
  4829  012D34                     l12460:
  4830                           
  4831                           ; BSR set to: 2
  4832                           ;main.c: 383:     i = V_BBAT;
  4833                           ;stkvar	_i @ sp[(-6)+2]
  4834  012D34  0EFC               	movlw	-4
  4835  012D36  6AE3               	clrf	plusw1,c
  4836  012D38  82E3               	bsf	plusw1,1,c
  4837  012D3A  86E3               	bsf	plusw1,3,c	;indir
  4838                           
  4839                           ; BSR set to: 2
  4840                           ;main.c: 384:     j = V_TEMP;
  4841  012D3C  0E0B               	movlw	11
  4842  012D3E  6E0C               	movwf	(btemp+11)^0,c
  4843                           
  4844                           ;stkvar	_j @ sp[(-6)+1]
  4845  012D40  0EFB               	movlw	-5
  4846  012D42  0060  F033  FFE3   	movff	btemp+11,plusw1
  4847                           
  4848                           ; BSR set to: 2
  4849                           ;main.c: 385:     k = V_INVERTER;
  4850                           ;stkvar	_k @ sp[(-6)+0]
  4851  012D48  0EFA               	movlw	-6
  4852  012D4A  6AE3               	clrf	plusw1,c
  4853  012D4C  84E3               	bsf	plusw1,2,c
  4854  012D4E  86E3               	bsf	plusw1,3,c	;indir
  4855                           
  4856                           ;main.c: 386:     break;
  4857  012D50  D028               	goto	l1347
  4858  012D52                     l12466:
  4859                           
  4860                           ; BSR set to: 2
  4861                           ;main.c: 388:     i = channel_ANB5;
  4862  012D52  0E0D               	movlw	13
  4863  012D54  6E0C               	movwf	(btemp+11)^0,c
  4864                           
  4865                           ;stkvar	_i @ sp[(-6)+2]
  4866  012D56  0EFC               	movlw	-4
  4867  012D58  0060  F033  FFE3   	movff	btemp+11,plusw1
  4868                           
  4869                           ;main.c: 389:     j = channel_ANB5;
  4870  012D5E  0E0D               	movlw	13
  4871  012D60  6E0C               	movwf	(btemp+11)^0,c
  4872                           
  4873                           ;stkvar	_j @ sp[(-6)+1]
  4874  012D62  0EFB               	movlw	-5
  4875  012D64  0060  F033  FFE3   	movff	btemp+11,plusw1
  4876                           
  4877                           ;main.c: 390:     k = channel_ANB5;
  4878  012D6A  0E0D               	movlw	13
  4879  012D6C  6E0C               	movwf	(btemp+11)^0,c
  4880                           
  4881                           ;stkvar	_k @ sp[(-6)+0]
  4882  012D6E  0EFA               	movlw	-6
  4883  012D70  0060  F033  FFE3   	movff	btemp+11,plusw1
  4884                           
  4885                           ;main.c: 391:     break;
  4886  012D76  D015               	goto	l1347
  4887  012D78                     l12470:
  4888                           
  4889                           ; BSR set to: 2
  4890                           ;stkvar	_inp_index @ sp[(-6)+3]
  4891  012D78  0EFD               	movlw	-3
  4892  012D7A  50E3               	movf	plusw1,w,c
  4893  012D7C  6E0B               	movwf	(btemp+10)^0,c
  4894  012D7E  6A0C               	clrf	(btemp+11)^0,c
  4895                           
  4896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4897                           ; Switch size 1, requested type "simple"
  4898                           ; Number of cases is 1, Range of values is 0 to 0
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte            4     3 (average)
  4902                           ;	Chosen strategy is simple_byte
  4903  012D80  500C               	movf	(btemp+11)^0,w,c
  4904  012D82  0A00               	xorlw	0	; case 0
  4905  012D84  A4D8               	btfss	status,2,c
  4906  012D86  D00D               	goto	l1347
  4907                           
  4908                           ; BSR set to: 2
  4909                           ; Switch size 1, requested type "simple"
  4910                           ; Number of cases is 4, Range of values is 0 to 9
  4911                           ; switch strategies available:
  4912                           ; Name         Instructions Cycles
  4913                           ; simple_byte           13     7 (average)
  4914                           ;	Chosen strategy is simple_byte
  4915  012D88  500B               	movf	(btemp+10)^0,w,c
  4916  012D8A  0A00               	xorlw	0	; case 0
  4917  012D8C  B4D8               	btfsc	status,2,c
  4918  012D8E  D7BD               	goto	l12452
  4919  012D90  0A03               	xorlw	3	; case 3
  4920  012D92  B4D8               	btfsc	status,2,c
  4921  012D94  D7C3               	goto	l12458
  4922  012D96  0A05               	xorlw	5	; case 6
  4923  012D98  B4D8               	btfsc	status,2,c
  4924  012D9A  D7CC               	goto	l12460
  4925  012D9C  0A0F               	xorlw	15	; case 9
  4926  012D9E  B4D8               	btfsc	status,2,c
  4927  012DA0  D7D8               	goto	l12466
  4928  012DA2                     l1347:
  4929                           
  4930                           ;main.c: 400:   if (V.set_sequ) {
  4931  012DA2  0102               	movlb	2	; () banked
  4932  012DA4  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4933  012DA6  D4D8               	goto	l12386
  4934                           
  4935                           ; BSR set to: 2
  4936                           ;main.c: 401:    if (TimerDone(TMR_INFO)) {
  4937  012DA8  0E07               	movlw	7
  4938  012DAA  6EE6               	movwf	postinc1,c
  4939  012DAC  EC3B  F0D5         	call	_TimerDone	;wreg free
  4940  012DB0  5001               	movf	btemp^0,w,c
  4941  012DB2  B4D8               	btfsc	status,2,c
  4942  012DB4  D00B               	goto	l12480
  4943                           
  4944                           ;main.c: 402:     V.set_sequ = 0;
  4945  012DB6  0102               	movlb	2	; () banked
  4946  012DB8  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4947                           
  4948                           ; BSR set to: 2
  4949                           ;main.c: 403:     set_vterm(0);
  4950  012DBA  0E00               	movlw	0
  4951  012DBC  6EE6               	movwf	postinc1,c
  4952  012DBE  EC02  F0D7         	call	_set_vterm	;wreg free
  4953                           
  4954                           ;main.c: 404:     update_lcd(0);
  4955  012DC2  0E00               	movlw	0
  4956  012DC4  6EE6               	movwf	postinc1,c
  4957  012DC6  EC1F  F0C6         	call	_update_lcd	;wreg free
  4958                           
  4959                           ;main.c: 405:    } else {
  4960  012DCA  D4C6               	goto	l12386
  4961  012DCC                     l12480:
  4962                           
  4963                           ;main.c: 406:     set_vterm(2);
  4964  012DCC  0E02               	movlw	2
  4965  012DCE  6EE6               	movwf	postinc1,c
  4966  012DD0  EC02  F0D7         	call	_set_vterm	;wreg free
  4967                           
  4968                           ;main.c: 407:     update_lcd(2);
  4969  012DD4  0E02               	movlw	2
  4970  012DD6  6EE6               	movwf	postinc1,c
  4971  012DD8  EC1F  F0C6         	call	_update_lcd	;wreg free
  4972  012DDC  D4BD               	goto	l12386
  4973  012DDE                     __end_of_main:
  4974                           	opt callstack 0
  4975                           
  4976 ;; *************** function _static_soc *****************
  4977 ;; Defined at:
  4978 ;;		line 105 in file "mbmc.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;		None
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;		None
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1  [STACK] void 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 3F/1
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4996 ;;Total ram usage:        0 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:   15
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_main
  5003 ;; This function uses a reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text1
  5007  01ACA8                     __ptext1:
  5008                           	opt callstack 0
  5009  01ACA8                     _static_soc:
  5010                           	opt callstack 15
  5011                           
  5012                           ;mbmc.c: 107:  C.runtime = 120;
  5013                           
  5014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5015                           ;incstack = 0
  5016  01ACA8  0E00               	movlw	0
  5017  01ACAA  0101               	movlb	1	; () banked
  5018  01ACAC  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
  5019  01ACAE  0E78               	movlw	120
  5020  01ACB0  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
  5021                           
  5022                           ;mbmc.c: 108:  C.soc = 100;
  5023  01ACB2  0E00               	movlw	0
  5024  01ACB4  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
  5025  01ACB6  0E64               	movlw	100
  5026  01ACB8  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
  5027                           
  5028                           ; BSR set to: 1
  5029                           ;mbmc.c: 109:  C.dynamic_ah = C.bank_ah;
  5030  01ACBA  C188  F18C         	movff	_C+136,_C+140	;volatile
  5031  01ACBE  C189  F18D         	movff	_C+137,_C+141	;volatile
  5032  01ACC2  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5033  01ACC6  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5034                           
  5035                           ; BSR set to: 1
  5036                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5037  01ACCA  0012               	return		;funcret
  5038  01ACCC                     __end_of_static_soc:
  5039                           	opt callstack 0
  5040                           
  5041 ;; *************** function _start_switch_handler *****************
  5042 ;; Defined at:
  5043 ;;		line 119 in file "dio.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1  [STACK] void 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5052 ;; Tracked objects:
  5053 ;;		On entry : 1/0
  5054 ;;		On exit  : 3F/39
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:   16
  5064 ;; This function calls:
  5065 ;;		_INT1_SetInterruptHandler
  5066 ;; This function is called by:
  5067 ;;		_main
  5068 ;; This function uses a reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text2
  5072  01ADC6                     __ptext2:
  5073                           	opt callstack 0
  5074  01ADC6                     _start_switch_handler:
  5075                           	opt callstack 14
  5076                           
  5077                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  5078                           
  5079                           ; BSR set to: 1
  5080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5081                           ;incstack = 0
  5082  01ADC6  0139               	movlb	57	; () banked
  5083  01ADC8  9195               	bcf	149,0,b	;volatile
  5084                           
  5085                           ; BSR set to: 57
  5086                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  5087  01ADCA  0E84               	movlw	low _switch_handler
  5088  01ADCC  6EE6               	movwf	postinc1,c
  5089  01ADCE  0E86               	movlw	high _switch_handler
  5090  01ADD0  6EE6               	movwf	postinc1,c
  5091  01ADD2  0E01               	movlw	low (_switch_handler shr (0+16))
  5092  01ADD4  6EE6               	movwf	postinc1,c
  5093  01ADD6  ECC7  F0D5         	call	_INT1_SetInterruptHandler	;wreg free
  5094                           
  5095                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  5096  01ADDA  0E02               	movlw	2
  5097  01ADDC  0102               	movlb	2	; () banked
  5098  01ADDE  6FDF               	movwf	(_S+35)& (0+255),b	;volatile
  5099                           
  5100                           ; BSR set to: 2
  5101                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  5102  01ADE0  0139               	movlb	57	; () banked
  5103  01ADE2  8195               	bsf	149,0,b	;volatile
  5104                           
  5105                           ; BSR set to: 57
  5106                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5107  01ADE4  0012               	return		;funcret
  5108  01ADE6                     __end_of_start_switch_handler:
  5109                           	opt callstack 0
  5110                           
  5111 ;; *************** function _srand *****************
  5112 ;; Defined at:
  5113 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  s               2  [STACK] unsigned int 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1  [STACK] void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 3F/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5131 ;;Total ram usage:        0 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:   15
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_main
  5138 ;; This function uses a reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text3
  5142  01A7C6                     __ptext3:
  5143                           	opt callstack 0
  5144  01A7C6                     _srand:
  5145                           	opt callstack 15
  5146                           
  5147                           ;stkvar	_s @ sp[(0)+-2]
  5148                           
  5149                           ; BSR set to: 57
  5150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5151                           ;incstack = 0
  5152  01A7C6  0EFE               	movlw	-2
  5153  01A7C8  50E3               	movf	plusw1,w,c
  5154  01A7CA  0FFF               	addlw	255
  5155  01A7CC  6E0B               	movwf	(btemp+10)^0,c
  5156  01A7CE  0EFF               	movlw	-1
  5157  01A7D0  006F FF8C  F00C    	movff	plusw1,btemp+11
  5158  01A7D6  0EFF               	movlw	255
  5159  01A7D8  220C               	addwfc	(btemp+11)^0,f,c
  5160  01A7DA  0060  F02C  F0BE   	movff	btemp+10,_seed
  5161  01A7E0  0060  F030  F0BF   	movff	btemp+11,_seed+1
  5162  01A7E6  0100               	movlb	0	; () banked
  5163  01A7E8  6BC0               	clrf	(_seed+2)& (0+255),b
  5164  01A7EA  6BC1               	clrf	(_seed+3)& (0+255),b
  5165  01A7EC  6BC2               	clrf	(_seed+4)& (0+255),b
  5166  01A7EE  6BC3               	clrf	(_seed+5)& (0+255),b
  5167  01A7F0  6BC4               	clrf	(_seed+6)& (0+255),b
  5168  01A7F2  6BC5               	clrf	(_seed+7)& (0+255),b
  5169                           
  5170                           ; BSR set to: 0
  5171                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5172  01A7F4  52E5               	movf	postdec1,f,c
  5173  01A7F6  52E5               	movf	postdec1,f,c
  5174  01A7F8  0012               	return		;funcret
  5175  01A7FA                     __end_of_srand:
  5176                           	opt callstack 0
  5177                           
  5178 ;; *************** function _init_port_dma *****************
  5179 ;; Defined at:
  5180 ;;		line 90 in file "eadog.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1  [STACK] void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/2
  5191 ;;		On exit  : 3F/3B
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5198 ;;Total ram usage:        0 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:   15
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_main
  5205 ;; This function uses a reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text4
  5209  01A862                     __ptext4:
  5210                           	opt callstack 0
  5211  01A862                     _init_port_dma:
  5212                           	opt callstack 15
  5213                           
  5214                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5215                           
  5216                           ; BSR set to: 0
  5217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5218                           ;incstack = 0
  5219  01A862  0E3F               	movlw	-193
  5220  01A864  013B               	movlb	59	; () banked
  5221  01A866  17DD               	andwf	221,f,b	;volatile
  5222                           
  5223                           ; BSR set to: 59
  5224                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5225  01A868  9BDD               	bcf	221,5,b	;volatile
  5226                           
  5227                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5228  01A86A  51DD               	movf	221,w,b	;volatile
  5229  01A86C  0BF9               	andlw	-7
  5230  01A86E  0902               	iorlw	2
  5231  01A870  6FDD               	movwf	221,b	;volatile
  5232                           
  5233                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5234  01A872  0EE7               	movlw	-25
  5235  01A874  17DD               	andwf	221,f,b	;volatile
  5236                           
  5237                           ; BSR set to: 59
  5238                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5239  01A876  81DD               	bsf	221,0,b	;volatile
  5240                           
  5241                           ; BSR set to: 59
  5242                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5243  01A878  9DDC               	bcf	220,6,b	;volatile
  5244                           
  5245                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5246  01A87A  0E3D               	movlw	61
  5247  01A87C  6FD1               	movwf	209,b	;volatile
  5248  01A87E  0EEA               	movlw	234
  5249  01A880  6FD0               	movwf	208,b	;volatile
  5250                           
  5251                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5252  01A882  0EFF               	movlw	low _port_data
  5253  01A884  6FD9               	movwf	217,b	;volatile
  5254  01A886  0E05               	movlw	high _port_data
  5255  01A888  6FDA               	movwf	218,b	;volatile
  5256  01A88A  0E00               	movlw	low (_port_data shr (0+16))
  5257  01A88C  6FDB               	movwf	219,b	;volatile
  5258                           
  5259                           ; BSR set to: 59
  5260                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5261  01A88E  9BDC               	bcf	220,5,b	;volatile
  5262                           
  5263                           ; BSR set to: 59
  5264                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5265  01A890  0012               	return		;funcret
  5266  01A892                     __end_of_init_port_dma:
  5267                           	opt callstack 0
  5268                           
  5269 ;; *************** function _init_display *****************
  5270 ;; Defined at:
  5271 ;;		line 38 in file "eadog.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;		None
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1  [STACK] void 
  5278 ;; Registers used:
  5279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5280 ;; Tracked objects:
  5281 ;;		On entry : 3F/3B
  5282 ;;		On exit  : 3F/3D
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5289 ;;Total ram usage:        0 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:   17
  5292 ;; This function calls:
  5293 ;;		_ringBufS_init
  5294 ;;		_send_lcd_cmd
  5295 ;;		_send_lcd_cmd_long
  5296 ;;		_wdtdelay
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text5
  5303  019150                     __ptext5:
  5304                           	opt callstack 0
  5305  019150                     _init_display:
  5306                           	opt callstack 13
  5307                           
  5308                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5309                           
  5310                           ; BSR set to: 59
  5311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5312                           ;incstack = 0
  5313  019150  0E43               	movlw	low _ring_buf1
  5314  019152  0100               	movlb	0	; () banked
  5315  019154  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5316  019156  0E04               	movlw	high _ring_buf1
  5317  019158  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5318                           
  5319                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5320  01915A  0E00               	movlw	low _ring_buf2
  5321  01915C  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5322  01915E  0E04               	movlw	high _ring_buf2
  5323  019160  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5327  019162  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  5328  019168  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  5329  01916E  EC27  F0D5         	call	_ringBufS_init	;wreg free
  5330                           
  5331                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5332  019172  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  5333  019178  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  5334  01917E  EC27  F0D5         	call	_ringBufS_init	;wreg free
  5335                           
  5336                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5337  019182  84BE               	bsf	190,2,c	;volatile
  5338  019184  84BC               	bsf	188,2,c	;volatile
  5339                           
  5340                           ;eadog.c: 59:  wdtdelay(350000);
  5341  019186  0E30               	movlw	48
  5342  019188  6EE6               	movwf	postinc1,c
  5343  01918A  0E57               	movlw	87
  5344  01918C  6EE6               	movwf	postinc1,c
  5345  01918E  0E05               	movlw	5
  5346  019190  6EE6               	movwf	postinc1,c
  5347  019192  0E00               	movlw	0
  5348  019194  6EE6               	movwf	postinc1,c
  5349  019196  EC55  F0D0         	call	_wdtdelay	;wreg free
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5353  01919A  0E39               	movlw	57
  5354  01919C  6EE6               	movwf	postinc1,c
  5355  01919E  EC13  F0D5         	call	_send_lcd_cmd	;wreg free
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5359  0191A2  0E1D               	movlw	29
  5360  0191A4  6EE6               	movwf	postinc1,c
  5361  0191A6  EC13  F0D5         	call	_send_lcd_cmd	;wreg free
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5365  0191AA  0E50               	movlw	80
  5366  0191AC  6EE6               	movwf	postinc1,c
  5367  0191AE  EC13  F0D5         	call	_send_lcd_cmd	;wreg free
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5371  0191B2  0E6C               	movlw	108
  5372  0191B4  6EE6               	movwf	postinc1,c
  5373  0191B6  EC13  F0D5         	call	_send_lcd_cmd	;wreg free
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5377  0191BA  0E76               	movlw	118
  5378  0191BC  6EE6               	movwf	postinc1,c
  5379  0191BE  EC13  F0D5         	call	_send_lcd_cmd	;wreg free
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5383  0191C2  0E38               	movlw	56
  5384  0191C4  6EE6               	movwf	postinc1,c
  5385  0191C6  ECFF  F0D4         	call	_send_lcd_cmd_long	;wreg free
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5389  0191CA  0E0F               	movlw	15
  5390  0191CC  6EE6               	movwf	postinc1,c
  5391  0191CE  EC13  F0D5         	call	_send_lcd_cmd	;wreg free
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5395  0191D2  0E01               	movlw	1
  5396  0191D4  6EE6               	movwf	postinc1,c
  5397  0191D6  ECFF  F0D4         	call	_send_lcd_cmd_long	;wreg free
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5401  0191DA  0E02               	movlw	2
  5402  0191DC  6EE6               	movwf	postinc1,c
  5403  0191DE  EC13  F0D5         	call	_send_lcd_cmd	;wreg free
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5407  0191E2  0E06               	movlw	6
  5408  0191E4  6EE6               	movwf	postinc1,c
  5409  0191E6  EC13  F0D5         	call	_send_lcd_cmd	;wreg free
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;eadog.c: 70:  wdtdelay(30);
  5413  0191EA  0E1E               	movlw	30
  5414  0191EC  6EE6               	movwf	postinc1,c
  5415  0191EE  0E00               	movlw	0
  5416  0191F0  6EE6               	movwf	postinc1,c
  5417  0191F2  0E00               	movlw	0
  5418  0191F4  6EE6               	movwf	postinc1,c
  5419  0191F6  0E00               	movlw	0
  5420  0191F8  6EE6               	movwf	postinc1,c
  5421  0191FA  EC55  F0D0         	call	_wdtdelay	;wreg free
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5425  0191FE  0E02               	movlw	2
  5426  019200  013D               	movlb	61	; () banked
  5427  019202  6F16               	movwf	22,b	;volatile
  5428                           
  5429                           ; BSR set to: 61
  5430                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5431  019204  0E40               	movlw	64
  5432  019206  6F15               	movwf	21,b	;volatile
  5433                           
  5434                           ; BSR set to: 61
  5435                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5436  019208  0E83               	movlw	131
  5437  01920A  6F14               	movwf	20,b	;volatile
  5438                           
  5439                           ; BSR set to: 61
  5440                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5441  01920C  931A               	bcf	26,1,b	;volatile
  5442                           
  5443                           ; BSR set to: 61
  5444                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5445  01920E  0E3F               	movlw	-193
  5446  019210  013B               	movlb	59	; () banked
  5447  019212  17FD               	andwf	253,f,b	;volatile
  5448                           
  5449                           ; BSR set to: 59
  5450                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5451  019214  9BFD               	bcf	253,5,b	;volatile
  5452                           
  5453                           ; BSR set to: 59
  5454                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5455  019216  51FD               	movf	253,w,b	;volatile
  5456  019218  0BF9               	andlw	-7
  5457  01921A  0902               	iorlw	2
  5458  01921C  6FFD               	movwf	253,b	;volatile
  5459                           
  5460                           ; BSR set to: 59
  5461                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5462  01921E  0EE7               	movlw	-25
  5463  019220  17FD               	andwf	253,f,b	;volatile
  5464                           
  5465                           ; BSR set to: 59
  5466                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5467  019222  81FD               	bsf	253,0,b	;volatile
  5468                           
  5469                           ; BSR set to: 59
  5470                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5471  019224  0E43               	movlw	low _ring_buf1
  5472  019226  6FF9               	movwf	249,b	;volatile
  5473  019228  0E04               	movlw	high _ring_buf1
  5474  01922A  6FFA               	movwf	250,b	;volatile
  5475  01922C  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5476  01922E  6FFB               	movwf	251,b	;volatile
  5477                           
  5478                           ; BSR set to: 59
  5479                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5480  019230  9BFC               	bcf	252,5,b	;volatile
  5481                           
  5482                           ; BSR set to: 59
  5483                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5484  019232  013D               	movlb	61	; () banked
  5485  019234  831A               	bsf	26,1,b	;volatile
  5486                           
  5487                           ; BSR set to: 61
  5488                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5489  019236  94BE               	bcf	190,2,c	;volatile
  5490                           
  5491                           ; BSR set to: 61
  5492                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5493  019238  0012               	return		;funcret
  5494  01923A                     __end_of_init_display:
  5495                           	opt callstack 0
  5496                           
  5497 ;; *************** function _send_lcd_cmd_long *****************
  5498 ;; Defined at:
  5499 ;;		line 129 in file "eadog.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  cmd             1  [STACK] const unsigned char 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1  [STACK] void 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5508 ;; Tracked objects:
  5509 ;;		On entry : 3F/0
  5510 ;;		On exit  : 3F/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5517 ;;Total ram usage:        0 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:   16
  5520 ;; This function calls:
  5521 ;;		_SPI1_Exchange8bit
  5522 ;;		_wdtdelay
  5523 ;; This function is called by:
  5524 ;;		_init_display
  5525 ;; This function uses a reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text6
  5529  01A9FE                     __ptext6:
  5530                           	opt callstack 0
  5531  01A9FE                     _send_lcd_cmd_long:
  5532                           	opt callstack 13
  5533                           
  5534                           ; BSR set to: 61
  5535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5536                           ;incstack = 0
  5537                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5538  01A9FE  92BC               	bcf	188,1,c	;volatile
  5539                           
  5540                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5541  01AA00  94BC               	bcf	188,2,c	;volatile
  5542                           
  5543                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5544                           ;stkvar	_cmd @ sp[(0)+-1]
  5545  01AA02  0EFF               	movlw	-1
  5546  01AA04  50E3               	movf	plusw1,w,c
  5547  01AA06  6EE6               	movwf	postinc1,c
  5548  01AA08  ECF3  F0D6         	call	_SPI1_Exchange8bit	;wreg free
  5549                           
  5550                           ; BSR set to: 57
  5551                           ;eadog.c: 134:  wdtdelay(800);
  5552  01AA0C  0E20               	movlw	32
  5553  01AA0E  6EE6               	movwf	postinc1,c
  5554  01AA10  0E03               	movlw	3
  5555  01AA12  6EE6               	movwf	postinc1,c
  5556  01AA14  0E00               	movlw	0
  5557  01AA16  6EE6               	movwf	postinc1,c
  5558  01AA18  0E00               	movlw	0
  5559  01AA1A  6EE6               	movwf	postinc1,c
  5560  01AA1C  EC55  F0D0         	call	_wdtdelay	;wreg free
  5561                           
  5562                           ; BSR set to: 0
  5563  01AA20  82BC               	bsf	188,1,c	;volatile
  5564                           
  5565                           ; BSR set to: 0
  5566                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5567  01AA22  52E5               	movf	postdec1,f,c
  5568  01AA24  0012               	return		;funcret
  5569  01AA26                     __end_of_send_lcd_cmd_long:
  5570                           	opt callstack 0
  5571                           
  5572 ;; *************** function _send_lcd_cmd *****************
  5573 ;; Defined at:
  5574 ;;		line 117 in file "eadog.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  cmd             1  [STACK] const unsigned char 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1  [STACK] void 
  5581 ;; Registers used:
  5582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5583 ;; Tracked objects:
  5584 ;;		On entry : 3F/0
  5585 ;;		On exit  : 3F/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5592 ;;Total ram usage:        0 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; Hardware stack levels required when called:   16
  5595 ;; This function calls:
  5596 ;;		_SPI1_Exchange8bit
  5597 ;;		_wdtdelay
  5598 ;; This function is called by:
  5599 ;;		_init_display
  5600 ;; This function uses a reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text7
  5604  01AA26                     __ptext7:
  5605                           	opt callstack 0
  5606  01AA26                     _send_lcd_cmd:
  5607                           	opt callstack 13
  5608                           
  5609                           ; BSR set to: 0
  5610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5611                           ;incstack = 0
  5612                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5613  01AA26  92BC               	bcf	188,1,c	;volatile
  5614                           
  5615                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5616  01AA28  94BC               	bcf	188,2,c	;volatile
  5617                           
  5618                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5619                           ;stkvar	_cmd @ sp[(0)+-1]
  5620  01AA2A  0EFF               	movlw	-1
  5621  01AA2C  50E3               	movf	plusw1,w,c
  5622  01AA2E  6EE6               	movwf	postinc1,c
  5623  01AA30  ECF3  F0D6         	call	_SPI1_Exchange8bit	;wreg free
  5624                           
  5625                           ; BSR set to: 57
  5626                           ;eadog.c: 122:  wdtdelay(30);
  5627  01AA34  0E1E               	movlw	30
  5628  01AA36  6EE6               	movwf	postinc1,c
  5629  01AA38  0E00               	movlw	0
  5630  01AA3A  6EE6               	movwf	postinc1,c
  5631  01AA3C  0E00               	movlw	0
  5632  01AA3E  6EE6               	movwf	postinc1,c
  5633  01AA40  0E00               	movlw	0
  5634  01AA42  6EE6               	movwf	postinc1,c
  5635  01AA44  EC55  F0D0         	call	_wdtdelay	;wreg free
  5636                           
  5637                           ; BSR set to: 0
  5638  01AA48  82BC               	bsf	188,1,c	;volatile
  5639                           
  5640                           ; BSR set to: 0
  5641                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5642  01AA4A  52E5               	movf	postdec1,f,c
  5643  01AA4C  0012               	return		;funcret
  5644  01AA4E                     __end_of_send_lcd_cmd:
  5645                           	opt callstack 0
  5646                           
  5647 ;; *************** function _SPI1_Exchange8bit *****************
  5648 ;; Defined at:
  5649 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  data            1  [STACK] unsigned char 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1  [STACK] unsigned char 
  5656 ;; Registers used:
  5657 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 3F/39
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:   15
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_send_lcd_cmd
  5674 ;;		_send_lcd_cmd_long
  5675 ;; This function uses a reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text8
  5679  01ADE6                     __ptext8:
  5680                           	opt callstack 0
  5681  01ADE6                     _SPI1_Exchange8bit:
  5682                           	opt callstack 13
  5683                           
  5684                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5685                           
  5686                           ; BSR set to: 0
  5687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5688                           ;incstack = 0
  5689  01ADE6  0E01               	movlw	1
  5690  01ADE8  013D               	movlb	61	; () banked
  5691  01ADEA  6F12               	movwf	18,b	;volatile
  5692                           
  5693                           ; BSR set to: 61
  5694                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5695                           ;stkvar	_data @ sp[(0)+-1]
  5696  01ADEC  0EFF               	movlw	-1
  5697  01ADEE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5698  01ADF4                     l807:
  5699                           
  5700                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5701  01ADF4  0139               	movlb	57	; () banked
  5702  01ADF6  A9A2               	btfss	162,4,b	;volatile
  5703  01ADF8  D7FD               	goto	l807
  5704                           
  5705                           ; BSR set to: 57
  5706                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5707  01ADFA  006F F440  F001    	movff	15632,btemp	;volatile
  5708                           
  5709                           ; BSR set to: 57
  5710                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5711  01AE00  52E5               	movf	postdec1,f,c
  5712  01AE02  0012               	return		;funcret
  5713  01AE04                     __end_of_SPI1_Exchange8bit:
  5714                           	opt callstack 0
  5715                           
  5716 ;; *************** function _ringBufS_init *****************
  5717 ;; Defined at:
  5718 ;;		line 22 in file "ringbufs.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  _this           2  [STACK] PTR volatile struct ring
  5721 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1  [STACK] void 
  5726 ;; Registers used:
  5727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:   16
  5740 ;; This function calls:
  5741 ;;		_memset
  5742 ;; This function is called by:
  5743 ;;		_init_display
  5744 ;; This function uses a reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text9
  5748  01AA4E                     __ptext9:
  5749                           	opt callstack 0
  5750  01AA4E                     _ringBufS_init:
  5751                           	opt callstack 13
  5752                           
  5753                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5754                           
  5755                           ; BSR set to: 57
  5756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5757                           ;incstack = 0
  5758  01AA4E  0E43               	movlw	67
  5759  01AA50  6EE6               	movwf	postinc1,c
  5760  01AA52  0E00               	movlw	0
  5761  01AA54  6EE6               	movwf	postinc1,c
  5762  01AA56  0E00               	movlw	0
  5763  01AA58  6EE6               	movwf	postinc1,c
  5764  01AA5A  0E00               	movlw	0
  5765  01AA5C  6EE6               	movwf	postinc1,c
  5766                           
  5767                           ;stkvar	__this @ sp[(-4)+-2]
  5768  01AA5E  0EFA               	movlw	-6
  5769  01AA60  006F FF8F FFE6     	movff	plusw1,postinc1
  5770  01AA66  006F FF8F FFE6     	movff	plusw1,postinc1
  5771  01AA6C  EC88  F0B0         	call	_memset	;wreg free
  5772                           
  5773                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5774  01AA70  52E5               	movf	postdec1,f,c
  5775  01AA72  52E5               	movf	postdec1,f,c
  5776  01AA74  0012               	return		;funcret
  5777  01AA76                     __end_of_ringBufS_init:
  5778                           	opt callstack 0
  5779                           
  5780 ;; *************** function _init_bsoc *****************
  5781 ;; Defined at:
  5782 ;;		line 88 in file "bsoc.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;		None
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;		None
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1  [STACK] void 
  5789 ;; Registers used:
  5790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5791 ;; Tracked objects:
  5792 ;;		On entry : 3F/1
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5800 ;;Total ram usage:        0 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:   18
  5803 ;; This function calls:
  5804 ;;		_TMR3_SetInterruptHandler
  5805 ;;		_Volts_to_SOC
  5806 ;;		___fldiv
  5807 ;;		___flmul
  5808 ;;		___fltol
  5809 ;;		___xxtofl
  5810 ;;		_conv_raw_result
  5811 ;; This function is called by:
  5812 ;;		_main
  5813 ;; This function uses a reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text10
  5817  017FC2                     __ptext10:
  5818                           	opt callstack 0
  5819  017FC2                     _init_bsoc:
  5820                           	opt callstack 12
  5821                           
  5822                           ;bsoc.c: 93:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5823                           
  5824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5825                           ;incstack = 0
  5826  017FC2  0E00               	movlw	0
  5827  017FC4  6EE6               	movwf	postinc1,c
  5828  017FC6  0E00               	movlw	0
  5829  017FC8  6EE6               	movwf	postinc1,c
  5830  017FCA  0E7A               	movlw	122
  5831  017FCC  6EE6               	movwf	postinc1,c
  5832  017FCE  0E44               	movlw	68
  5833  017FD0  6EE6               	movwf	postinc1,c
  5834  017FD2  0E00               	movlw	0
  5835  017FD4  6EE6               	movwf	postinc1,c
  5836  017FD6  0E04               	movlw	4
  5837  017FD8  6EE6               	movwf	postinc1,c
  5838  017FDA  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  5839  017FDE  0060  F007  FFE6   	movff	btemp,postinc1
  5840  017FE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5841  017FEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5842  017FF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  5843  017FF6  EC28  F0BF         	call	___fltol	;wreg free
  5844  017FFA  0060  F007  FFE6   	movff	btemp,postinc1
  5845  018000  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5846  018006  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5847  01800C  0060  F013  FFE6   	movff	btemp+3,postinc1
  5848  018012  0E00               	movlw	0
  5849  018014  6EE6               	movwf	postinc1,c
  5850  018016  EC10  F0B9         	call	___xxtofl	;wreg free
  5851  01801A  0060  F007  FFE6   	movff	btemp,postinc1
  5852  018020  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5853  018026  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5854  01802C  0060  F013  FFE6   	movff	btemp+3,postinc1
  5855  018032  ECEF  F096         	call	___flmul	;wreg free
  5856  018036  0060  F007  FFE6   	movff	btemp,postinc1
  5857  01803C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5858  018042  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5859  018048  0060  F013  FFE6   	movff	btemp+3,postinc1
  5860  01804E  EC28  F0BF         	call	___fltol	;wreg free
  5861  018052  0060  F007  FFE6   	movff	btemp,postinc1
  5862  018058  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5863  01805E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5864  018064  0060  F013  FFE6   	movff	btemp+3,postinc1
  5865  01806A  EC95  F0CC         	call	_Volts_to_SOC	;wreg free
  5866  01806E  0060  F004  F1AA   	movff	btemp,_C+170	;volatile
  5867  018074  0060  F008  F1AB   	movff	btemp+1,_C+171	;volatile
  5868                           
  5869                           ;bsoc.c: 94:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5870  01807A  0060  F623  FFE6   	movff	_C+136,postinc1
  5871  018080  0060  F627  FFE6   	movff	_C+137,postinc1
  5872  018086  0060  F62B  FFE6   	movff	_C+138,postinc1
  5873  01808C  0060  F62F  FFE6   	movff	_C+139,postinc1
  5874  018092  0E00               	movlw	0
  5875  018094  6EE6               	movwf	postinc1,c
  5876  018096  0E00               	movlw	0
  5877  018098  6EE6               	movwf	postinc1,c
  5878  01809A  0EC8               	movlw	200
  5879  01809C  6EE6               	movwf	postinc1,c
  5880  01809E  0E42               	movlw	66
  5881  0180A0  6EE6               	movwf	postinc1,c
  5882  0180A2  0101               	movlb	1	; () banked
  5883  0180A4  51AA               	movf	(_C+170)& (0+255),w,b	;volatile
  5884  0180A6  6E09               	movwf	(btemp+8)^0,c
  5885  0180A8  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
  5886  0180AA  6E0A               	movwf	(btemp+9)^0,c
  5887  0180AC  6A0B               	clrf	(btemp+10)^0,c
  5888  0180AE  6A0C               	clrf	(btemp+11)^0,c
  5889  0180B0  0060  F027  FFE6   	movff	btemp+8,postinc1
  5890  0180B6  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5891  0180BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5892  0180C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  5893  0180C8  0E00               	movlw	0
  5894  0180CA  6EE6               	movwf	postinc1,c
  5895  0180CC  EC10  F0B9         	call	___xxtofl	;wreg free
  5896  0180D0  0060  F007  FFE6   	movff	btemp,postinc1
  5897  0180D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5898  0180DC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5899  0180E2  0060  F013  FFE6   	movff	btemp+3,postinc1
  5900  0180E8  EC31  F0A2         	call	___fldiv	;wreg free
  5901  0180EC  0060  F007  FFE6   	movff	btemp,postinc1
  5902  0180F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5903  0180F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5904  0180FE  0060  F013  FFE6   	movff	btemp+3,postinc1
  5905  018104  ECEF  F096         	call	___flmul	;wreg free
  5906  018108  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  5907  01810E  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  5908  018114  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  5909  01811A  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  5910                           
  5911                           ;bsoc.c: 95:  TMR3_SetInterruptHandler(calc_bsoc);
  5912  018120  0EC4               	movlw	low _calc_bsoc
  5913  018122  6EE6               	movwf	postinc1,c
  5914  018124  0E3D               	movlw	high _calc_bsoc
  5915  018126  6EE6               	movwf	postinc1,c
  5916  018128  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5917  01812A  6EE6               	movwf	postinc1,c
  5918  01812C  ECB3  F0D5         	call	_TMR3_SetInterruptHandler	;wreg free
  5919                           
  5920                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5921  018130  0012               	return		;funcret
  5922  018132                     __end_of_init_bsoc:
  5923                           	opt callstack 0
  5924                           
  5925 ;; *************** function _Volts_to_SOC *****************
  5926 ;; Defined at:
  5927 ;;		line 152 in file "bsoc.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  cvoltage        4  [STACK] unsigned long 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;		None
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  2  [STACK] unsigned short 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/1
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5945 ;;Total ram usage:        0 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:   15
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_init_bsoc
  5952 ;; This function uses a reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text11
  5956  01992A                     __ptext11:
  5957                           	opt callstack 0
  5958  01992A                     _Volts_to_SOC:
  5959                           	opt callstack 14
  5960                           
  5961                           ;bsoc.c: 152: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 153: {;bsoc.c: 154:  stat
      +                          ic uint8_t slot;;bsoc.c: 156:  C.soc = 0;
  5962                           
  5963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5964                           ;incstack = 0
  5965  01992A  0101               	movlb	1	; () banked
  5966  01992C  6BAA               	clrf	(_C+170)& (0+255),b	;volatile
  5967  01992E  6BAB               	clrf	(_C+171)& (0+255),b	;volatile
  5968                           
  5969                           ;bsoc.c: 157:  for (slot = 0; slot < 26; slot++) {
  5970  019930  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5971  019932                     l10142:
  5972                           
  5973                           ;bsoc.c: 158:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5974                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5975  019932  502D               	movf	Volts_to_SOC@slot^0,w,c
  5976  019934  0D08               	mullw	8
  5977  019936  0EB9               	movlw	low _BVSOC_TABLE
  5978  019938  24F3               	addwf	243,w,c
  5979  01993A  6EF6               	movwf	tblptrl,c
  5980  01993C  0EFB               	movlw	high _BVSOC_TABLE
  5981  01993E  20F4               	addwfc	244,w,c
  5982  019940  6EF7               	movwf	tblptrh,c
  5983  019942                     	if	1	;There are 3 active tblptr bytes
  5984  019942  6AF8               	clrf	tblptru,c
  5985  019944  0E00               	movlw	low (__mediumconst shr (0+16))
  5986  019946  22F8               	addwfc	tblptru,f,c
  5987  019948                     	endif
  5988  019948  0EFC               	movlw	-4
  5989  01994A  50E3               	movf	plusw1,w,c
  5990  01994C  0009               	tblrd		*+
  5991  01994E  5CF5               	subwf	tablat,w,c
  5992  019950  0EFD               	movlw	-3
  5993  019952  50E3               	movf	plusw1,w,c
  5994  019954  0009               	tblrd		*+
  5995  019956  58F5               	subwfb	tablat,w,c
  5996  019958  0EFE               	movlw	-2
  5997  01995A  50E3               	movf	plusw1,w,c
  5998  01995C  0009               	tblrd		*+
  5999  01995E  58F5               	subwfb	tablat,w,c
  6000  019960  0EFF               	movlw	-1
  6001  019962  50E3               	movf	plusw1,w,c
  6002  019964  0009               	tblrd		*+
  6003  019966  58F5               	subwfb	tablat,w,c
  6004  019968  B0D8               	btfsc	status,0,c
  6005  01996A  D017               	goto	l10146
  6006                           
  6007                           ;bsoc.c: 159:    C.soc = BVSOC_TABLE[slot][1];
  6008  01996C  502D               	movf	Volts_to_SOC@slot^0,w,c
  6009  01996E  0D08               	mullw	8
  6010  019970  0E04               	movlw	4
  6011  019972  26F3               	addwf	243,f,c
  6012  019974  0E00               	movlw	0
  6013  019976  22F4               	addwfc	244,f,c
  6014  019978  0EB9               	movlw	low _BVSOC_TABLE
  6015  01997A  24F3               	addwf	243,w,c
  6016  01997C  6EF6               	movwf	tblptrl,c
  6017  01997E  0EFB               	movlw	high _BVSOC_TABLE
  6018  019980  20F4               	addwfc	244,w,c
  6019  019982  6EF7               	movwf	tblptrh,c
  6020  019984                     	if	1	;There are 3 active tblptr bytes
  6021  019984  6AF8               	clrf	tblptru,c
  6022  019986  0E00               	movlw	low (__mediumconst shr (0+16))
  6023  019988  22F8               	addwfc	tblptru,f,c
  6024  01998A                     	endif
  6025  01998A  0009               	tblrd		*+
  6026  01998C  006F FFD4  F1AA    	movff	tablat,_C+170	;volatile
  6027  019992  000A               	tblrd		*-
  6028  019994  006F FFD4  F1AB    	movff	tablat,_C+171	;volatile
  6029  01999A                     l10146:
  6030                           
  6031                           ;bsoc.c: 161:  }
  6032  01999A  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  6033  01999C  0E19               	movlw	25
  6034  01999E  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  6035  0199A0  D7C8               	goto	l10142
  6036                           
  6037                           ;bsoc.c: 163:  return C.soc;
  6038  0199A2  EE20  F1AA         	lfsr	2,_C+170	;volatile
  6039  0199A6  006F FF78  F001    	movff	postinc2,btemp
  6040  0199AC  006F FF74  F002    	movff	postdec2,btemp+1
  6041                           
  6042                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6043  0199B2  52E5               	movf	postdec1,f,c
  6044  0199B4  52E5               	movf	postdec1,f,c
  6045  0199B6  52E5               	movf	postdec1,f,c
  6046  0199B8  52E5               	movf	postdec1,f,c
  6047  0199BA  0012               	return		;funcret
  6048  0199BC                     __end_of_Volts_to_SOC:
  6049                           	opt callstack 0
  6050                           
  6051 ;; *************** function _hid_display *****************
  6052 ;; Defined at:
  6053 ;;		line 17 in file "hid.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  h               1  [STACK] PTR struct H_data
  6056 ;;		 -> H(7), 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1  [STACK] PTR struct H_data
  6061 ;; Registers used:
  6062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6063 ;; Tracked objects:
  6064 ;;		On entry : 3F/1
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6072 ;;Total ram usage:        0 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:   17
  6075 ;; This function calls:
  6076 ;;		_hid_input
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text12
  6083  018F5A                     __ptext12:
  6084                           	opt callstack 0
  6085  018F5A                     _hid_display:
  6086                           	opt callstack 13
  6087                           
  6088                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6089                           ;stkvar	_h @ sp[(0)+-1]
  6090                           
  6091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6092                           ;incstack = 0
  6093  018F5A  0EFF               	movlw	-1
  6094  018F5C  50E3               	movf	plusw1,w,c
  6095  018F5E  6EE6               	movwf	postinc1,c
  6096  018F60  EC70  F0CD         	call	_hid_input	;wreg free
  6097                           
  6098                           ;hid.c: 21:  switch (h->h_state) {
  6099  018F64  D066               	goto	l10478
  6100  018F66                     l10456:
  6101                           
  6102                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6103                           ;stkvar	_h @ sp[(0)+-1]
  6104  018F66  0EFF               	movlw	-1
  6105  018F68  50E3               	movf	plusw1,w,c
  6106  018F6A  6ED9               	movwf	fsr2l,c
  6107  018F6C  6ADA               	clrf	fsr2h,c
  6108  018F6E  0E01               	movlw	1
  6109  018F70  26D9               	addwf	fsr2l,f,c
  6110  018F72  0E01               	movlw	1
  6111  018F74  6EDF               	movwf	indf2,c
  6112                           
  6113                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6114                           ;stkvar	_h @ sp[(0)+-1]
  6115  018F76  0EFF               	movlw	-1
  6116  018F78  50E3               	movf	plusw1,w,c
  6117  018F7A  6ED9               	movwf	fsr2l,c
  6118  018F7C  6ADA               	clrf	fsr2h,c
  6119  018F7E  0E00               	movlw	0
  6120  018F80  6EDF               	movwf	indf2,c
  6121                           
  6122                           ;hid.c: 25:   h->wait_enter = 1;
  6123                           ;stkvar	_h @ sp[(0)+-1]
  6124  018F82  0EFF               	movlw	-1
  6125  018F84  50E3               	movf	plusw1,w,c
  6126  018F86  6ED9               	movwf	fsr2l,c
  6127  018F88  6ADA               	clrf	fsr2h,c
  6128  018F8A  0E04               	movlw	4
  6129  018F8C  26D9               	addwf	fsr2l,f,c
  6130  018F8E  0E01               	movlw	1
  6131  018F90  6EDF               	movwf	indf2,c
  6132                           
  6133                           ;hid.c: 26:   h->wait_select = 1;
  6134                           ;stkvar	_h @ sp[(0)+-1]
  6135  018F92  0EFF               	movlw	-1
  6136  018F94  50E3               	movf	plusw1,w,c
  6137  018F96  6ED9               	movwf	fsr2l,c
  6138  018F98  6ADA               	clrf	fsr2h,c
  6139  018F9A  0E02               	movlw	2
  6140  018F9C  26D9               	addwf	fsr2l,f,c
  6141  018F9E  0E01               	movlw	1
  6142  018FA0  6EDF               	movwf	indf2,c
  6143                           
  6144                           ;hid.c: 27:   h->select_p = SW_OFF;
  6145                           ;stkvar	_h @ sp[(0)+-1]
  6146  018FA2  0EFF               	movlw	-1
  6147  018FA4  50E3               	movf	plusw1,w,c
  6148  018FA6  6ED9               	movwf	fsr2l,c
  6149  018FA8  6ADA               	clrf	fsr2h,c
  6150  018FAA  0E03               	movlw	3
  6151  018FAC  26D9               	addwf	fsr2l,f,c
  6152  018FAE  0E00               	movlw	0
  6153  018FB0  6EDF               	movwf	indf2,c
  6154                           
  6155                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6156                           ;stkvar	_h @ sp[(0)+-1]
  6157  018FB2  0EFF               	movlw	-1
  6158  018FB4  50E3               	movf	plusw1,w,c
  6159  018FB6  6ED9               	movwf	fsr2l,c
  6160  018FB8  6ADA               	clrf	fsr2h,c
  6161  018FBA  0E05               	movlw	5
  6162  018FBC  26D9               	addwf	fsr2l,f,c
  6163  018FBE  0E00               	movlw	0
  6164  018FC0  D036               	goto	L1
  6165  018FC2                     l10468:
  6166                           
  6167                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6168                           ;stkvar	_h @ sp[(0)+-1]
  6169  018FC2  0EFF               	movlw	-1
  6170  018FC4  50E3               	movf	plusw1,w,c
  6171  018FC6  6ED9               	movwf	fsr2l,c
  6172  018FC8  6ADA               	clrf	fsr2h,c
  6173  018FCA  0E02               	movlw	2
  6174  018FCC  26D9               	addwf	fsr2l,f,c
  6175  018FCE  50DF               	movf	indf2,w,c
  6176  018FD0  A4D8               	btfss	status,2,c
  6177  018FD2  D042               	goto	l1916
  6178                           
  6179                           ;stkvar	_h @ sp[(0)+-1]
  6180  018FD4  0EFF               	movlw	-1
  6181  018FD6  50E3               	movf	plusw1,w,c
  6182  018FD8  6ED9               	movwf	fsr2l,c
  6183  018FDA  6ADA               	clrf	fsr2h,c
  6184  018FDC  0E03               	movlw	3
  6185  018FDE  26D9               	addwf	fsr2l,f,c
  6186  018FE0  50DF               	movf	indf2,w,c
  6187  018FE2  A4D8               	btfss	status,2,c
  6188  018FE4  D039               	goto	l1916
  6189                           
  6190                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6191                           ;stkvar	_h @ sp[(0)+-1]
  6192  018FE6  0EFF               	movlw	-1
  6193  018FE8  50E3               	movf	plusw1,w,c
  6194  018FEA  6ED9               	movwf	fsr2l,c
  6195  018FEC  6ADA               	clrf	fsr2h,c
  6196  018FEE  0E06               	movlw	6
  6197  018FF0  26D9               	addwf	fsr2l,f,c
  6198                           
  6199                           ;stkvar	_h @ sp[(0)+-1]
  6200  018FF2  0EFF               	movlw	-1
  6201  018FF4  50E3               	movf	plusw1,w,c
  6202  018FF6  6EE9               	movwf	fsr0l,c
  6203  018FF8  6AEA               	clrf	fsr0h,c
  6204  018FFA  0E06               	movlw	6
  6205  018FFC  26E9               	addwf	fsr0l,f,c
  6206  018FFE  2AEF               	incf	indf0,f,c
  6207  019000  50EF               	movf	indf0,w,c
  6208  019002  0B03               	andlw	3
  6209  019004  6EDF               	movwf	indf2,c
  6210                           
  6211                           ;hid.c: 34:    h->hid_display = h->sequence;
  6212                           ;stkvar	_h @ sp[(0)+-1]
  6213  019006  0EFF               	movlw	-1
  6214  019008  50E3               	movf	plusw1,w,c
  6215  01900A  6ED9               	movwf	fsr2l,c
  6216  01900C  6ADA               	clrf	fsr2h,c
  6217  01900E  0E06               	movlw	6
  6218  019010  26D9               	addwf	fsr2l,f,c
  6219                           
  6220                           ;stkvar	_h @ sp[(0)+-1]
  6221  019012  0EFF               	movlw	-1
  6222  019014  50E3               	movf	plusw1,w,c
  6223  019016  6EE9               	movwf	fsr0l,c
  6224  019018  6AEA               	clrf	fsr0h,c
  6225  01901A  006F FF7F FFEF     	movff	indf2,indf0
  6226                           
  6227                           ;hid.c: 35:    h->wait_select = 1;
  6228                           ;stkvar	_h @ sp[(0)+-1]
  6229  019020  0EFF               	movlw	-1
  6230  019022  50E3               	movf	plusw1,w,c
  6231  019024  6ED9               	movwf	fsr2l,c
  6232  019026  6ADA               	clrf	fsr2h,c
  6233  019028  0E02               	movlw	2
  6234  01902A  26D9               	addwf	fsr2l,f,c
  6235  01902C  0E01               	movlw	1
  6236  01902E                     L1:
  6237  01902E  6EDF               	movwf	indf2,c
  6238  019030  D013               	goto	l1916
  6239  019032                     l10478:
  6240                           
  6241                           ;stkvar	_h @ sp[(0)+-1]
  6242  019032  0EFF               	movlw	-1
  6243  019034  50E3               	movf	plusw1,w,c
  6244  019036  6ED9               	movwf	fsr2l,c
  6245  019038  6ADA               	clrf	fsr2h,c
  6246  01903A  0E01               	movlw	1
  6247  01903C  26D9               	addwf	fsr2l,f,c
  6248  01903E  50DF               	movf	indf2,w,c
  6249  019040  6E0B               	movwf	(btemp+10)^0,c
  6250  019042  6A0C               	clrf	(btemp+11)^0,c
  6251                           
  6252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6253                           ; Switch size 1, requested type "simple"
  6254                           ; Number of cases is 1, Range of values is 0 to 0
  6255                           ; switch strategies available:
  6256                           ; Name         Instructions Cycles
  6257                           ; simple_byte            4     3 (average)
  6258                           ;	Chosen strategy is simple_byte
  6259  019044  500C               	movf	(btemp+11)^0,w,c
  6260  019046  0A00               	xorlw	0	; case 0
  6261  019048  A4D8               	btfss	status,2,c
  6262  01904A  D7BB               	goto	l10468
  6263                           
  6264                           ; Switch size 1, requested type "simple"
  6265                           ; Number of cases is 2, Range of values is 0 to 1
  6266                           ; switch strategies available:
  6267                           ; Name         Instructions Cycles
  6268                           ; simple_byte            7     4 (average)
  6269                           ;	Chosen strategy is simple_byte
  6270  01904C  500B               	movf	(btemp+10)^0,w,c
  6271  01904E  0A00               	xorlw	0	; case 0
  6272  019050  B4D8               	btfsc	status,2,c
  6273  019052  D789               	goto	l10456
  6274  019054  0A01               	xorlw	1	; case 1
  6275  019056  D7B5               	goto	l10468
  6276  019058                     l1916:
  6277                           
  6278                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6279  019058  52E5               	movf	postdec1,f,c
  6280  01905A  0012               	return		;funcret
  6281  01905C                     __end_of_hid_display:
  6282                           	opt callstack 0
  6283                           
  6284 ;; *************** function _hid_input *****************
  6285 ;; Defined at:
  6286 ;;		line 3 in file "hid.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  h               1  [STACK] PTR struct H_data
  6289 ;;		 -> H(7), 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1  [STACK] PTR struct H_data
  6294 ;; Registers used:
  6295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/1
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6305 ;;Total ram usage:        0 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:   16
  6308 ;; This function calls:
  6309 ;;		_get_switch
  6310 ;; This function is called by:
  6311 ;;		_hid_display
  6312 ;; This function uses a reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text13
  6316  019AE0                     __ptext13:
  6317                           	opt callstack 0
  6318  019AE0                     _hid_input:
  6319                           	opt callstack 13
  6320                           
  6321                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6322                           
  6323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6324                           ;incstack = 0
  6325  019AE0  0E02               	movlw	2
  6326  019AE2  6EE6               	movwf	postinc1,c
  6327  019AE4  ECA8  F0D4         	call	_get_switch	;wreg free
  6328  019AE8  5001               	movf	btemp^0,w,c
  6329  019AEA  B4D8               	btfsc	status,2,c
  6330  019AEC  D01C               	goto	l10074
  6331                           
  6332                           ;hid.c: 6:   h->wait_select = 0;
  6333                           ;stkvar	_h @ sp[(0)+-1]
  6334  019AEE  0EFF               	movlw	-1
  6335  019AF0  50E3               	movf	plusw1,w,c
  6336  019AF2  6ED9               	movwf	fsr2l,c
  6337  019AF4  6ADA               	clrf	fsr2h,c
  6338  019AF6  0E02               	movlw	2
  6339  019AF8  26D9               	addwf	fsr2l,f,c
  6340  019AFA  0E00               	movlw	0
  6341  019AFC  6EDF               	movwf	indf2,c
  6342                           
  6343                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6344  019AFE  0E02               	movlw	2
  6345  019B00  6EE6               	movwf	postinc1,c
  6346  019B02  ECA8  F0D4         	call	_get_switch	;wreg free
  6347  019B06  5001               	movf	btemp^0,w,c
  6348  019B08  B4D8               	btfsc	status,2,c
  6349  019B0A  D003               	goto	u9260
  6350  019B0C  6A0C               	clrf	(btemp+11)^0,c
  6351  019B0E  2A0C               	incf	(btemp+11)^0,f,c
  6352  019B10  D001               	goto	u9278
  6353  019B12                     u9260:
  6354  019B12  6A0C               	clrf	(btemp+11)^0,c
  6355  019B14                     u9278:
  6356                           
  6357                           ;stkvar	_h @ sp[(0)+-1]
  6358  019B14  0EFF               	movlw	-1
  6359  019B16  50E3               	movf	plusw1,w,c
  6360  019B18  6ED9               	movwf	fsr2l,c
  6361  019B1A  6ADA               	clrf	fsr2h,c
  6362  019B1C  0E03               	movlw	3
  6363  019B1E  26D9               	addwf	fsr2l,f,c
  6364  019B20  0060  F033  FFDF   	movff	btemp+11,indf2
  6365  019B26                     l10074:
  6366                           
  6367                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6368  019B26  0E03               	movlw	3
  6369  019B28  6EE6               	movwf	postinc1,c
  6370  019B2A  ECA8  F0D4         	call	_get_switch	;wreg free
  6371  019B2E  5001               	movf	btemp^0,w,c
  6372  019B30  B4D8               	btfsc	status,2,c
  6373  019B32  D01C               	goto	l1907
  6374                           
  6375                           ;hid.c: 11:   h->wait_enter = 0;
  6376                           ;stkvar	_h @ sp[(0)+-1]
  6377  019B34  0EFF               	movlw	-1
  6378  019B36  50E3               	movf	plusw1,w,c
  6379  019B38  6ED9               	movwf	fsr2l,c
  6380  019B3A  6ADA               	clrf	fsr2h,c
  6381  019B3C  0E04               	movlw	4
  6382  019B3E  26D9               	addwf	fsr2l,f,c
  6383  019B40  0E00               	movlw	0
  6384  019B42  6EDF               	movwf	indf2,c
  6385                           
  6386                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6387  019B44  0E03               	movlw	3
  6388  019B46  6EE6               	movwf	postinc1,c
  6389  019B48  ECA8  F0D4         	call	_get_switch	;wreg free
  6390  019B4C  5001               	movf	btemp^0,w,c
  6391  019B4E  B4D8               	btfsc	status,2,c
  6392  019B50  D003               	goto	u9290
  6393  019B52  6A0C               	clrf	(btemp+11)^0,c
  6394  019B54  2A0C               	incf	(btemp+11)^0,f,c
  6395  019B56  D001               	goto	u9308
  6396  019B58                     u9290:
  6397  019B58  6A0C               	clrf	(btemp+11)^0,c
  6398  019B5A                     u9308:
  6399                           
  6400                           ;stkvar	_h @ sp[(0)+-1]
  6401  019B5A  0EFF               	movlw	-1
  6402  019B5C  50E3               	movf	plusw1,w,c
  6403  019B5E  6ED9               	movwf	fsr2l,c
  6404  019B60  6ADA               	clrf	fsr2h,c
  6405  019B62  0E05               	movlw	5
  6406  019B64  26D9               	addwf	fsr2l,f,c
  6407  019B66  0060  F033  FFDF   	movff	btemp+11,indf2
  6408  019B6C                     l1907:
  6409                           
  6410                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6411  019B6C  52E5               	movf	postdec1,f,c
  6412  019B6E  0012               	return		;funcret
  6413  019B70                     __end_of_hid_input:
  6414                           	opt callstack 0
  6415                           
  6416 ;; *************** function _get_switch *****************
  6417 ;; Defined at:
  6418 ;;		line 18 in file "dio.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  i               1  [STACK] unsigned char 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1  [STACK] enum E17021
  6425 ;; Registers used:
  6426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/2
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6436 ;;Total ram usage:        0 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:   15
  6439 ;; This function calls:
  6440 ;;		Nothing
  6441 ;; This function is called by:
  6442 ;;		_main
  6443 ;;		_hid_input
  6444 ;; This function uses a reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text14
  6448  01A950                     __ptext14:
  6449                           	opt callstack 0
  6450  01A950                     _get_switch:
  6451                           	opt callstack 13
  6452                           
  6453                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6454                           ;stkvar	_i @ sp[(0)+-1]
  6455                           
  6456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6457                           ;incstack = 0
  6458  01A950  0EFF               	movlw	-1
  6459  01A952  006F FF8C  F001    	movff	plusw1,btemp
  6460  01A958  0E03               	movlw	3
  6461  01A95A  6401               	cpfsgt	btemp^0,c
  6462  01A95C  D002               	goto	l9338
  6463                           
  6464                           ;dio.c: 21:   return SW_OFF;
  6465  01A95E  0E00               	movlw	0
  6466  01A960  D00A               	goto	L2
  6467  01A962                     l9338:
  6468                           
  6469                           ;dio.c: 23:  return S.button[i].sw;
  6470                           ;stkvar	_i @ sp[(0)+-1]
  6471  01A962  0EFF               	movlw	-1
  6472  01A964  50E3               	movf	plusw1,w,c
  6473  01A966  0D05               	mullw	5
  6474  01A968  0EBC               	movlw	low _S
  6475  01A96A  24F3               	addwf	243,w,c
  6476  01A96C  6ED9               	movwf	fsr2l,c
  6477  01A96E  0E02               	movlw	high _S
  6478  01A970  20F4               	addwfc	prodh,w,c
  6479  01A972  6EDA               	movwf	fsr2h,c
  6480  01A974  50DF               	movf	indf2,w,c
  6481  01A976                     L2:
  6482  01A976  6E01               	movwf	btemp^0,c
  6483                           
  6484                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6485  01A978  52E5               	movf	postdec1,f,c
  6486  01A97A  0012               	return		;funcret
  6487  01A97C                     __end_of_get_switch:
  6488                           	opt callstack 0
  6489                           
  6490 ;; *************** function _esr_check *****************
  6491 ;; Defined at:
  6492 ;;		line 169 in file "bsoc.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  4  [STACK] float 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6510 ;;Total ram usage:        0 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:   18
  6513 ;; This function calls:
  6514 ;;		_WaitMs
  6515 ;;		___fldiv
  6516 ;;		___flsub
  6517 ;;		_conv_raw_result
  6518 ;;		_fabsf
  6519 ;;		_set_load_relay_one
  6520 ;;		_set_load_relay_two
  6521 ;;		_update_adc_result
  6522 ;; This function is called by:
  6523 ;;		_main
  6524 ;; This function uses a reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text15
  6528  017624                     __ptext15:
  6529                           	opt callstack 0
  6530  017624                     _esr_check:
  6531                           	opt callstack 12
  6532                           
  6533                           ;bsoc.c: 171:  set_load_relay_one(0);
  6534                           
  6535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6536                           ;incstack = 0
  6537  017624  0E00               	movlw	0
  6538  017626  6EE6               	movwf	postinc1,c
  6539  017628  ECC9  F0D7         	call	_set_load_relay_one	;wreg free
  6540                           
  6541                           ;bsoc.c: 172:  set_load_relay_two(0);
  6542  01762C  0E00               	movlw	0
  6543  01762E  6EE6               	movwf	postinc1,c
  6544  017630  ECC1  F0D7         	call	_set_load_relay_two	;wreg free
  6545                           
  6546                           ;bsoc.c: 173:  WaitMs(10000);
  6547  017634  0E10               	movlw	16
  6548  017636  6EE6               	movwf	postinc1,c
  6549  017638  0E27               	movlw	39
  6550  01763A  6EE6               	movwf	postinc1,c
  6551  01763C  ECAD  F0D3         	call	_WaitMs	;wreg free
  6552                           
  6553                           ;bsoc.c: 174:  update_adc_result();
  6554  017640  EC59  F0D3         	call	_update_adc_result	;wreg free
  6555                           
  6556                           ;bsoc.c: 175:  C.bv_noload = conv_raw_result(V_BAT, CONV);
  6557  017644  0E00               	movlw	0
  6558  017646  6EE6               	movwf	postinc1,c
  6559  017648  0E04               	movlw	4
  6560  01764A  6EE6               	movwf	postinc1,c
  6561  01764C  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  6562  017650  0060  F004  F1E7   	movff	btemp,_C+231	;volatile
  6563  017656  0060  F008  F1E8   	movff	btemp+1,_C+232	;volatile
  6564  01765C  0060  F00C  F1E9   	movff	btemp+2,_C+233	;volatile
  6565  017662  0060  F010  F1EA   	movff	btemp+3,_C+234	;volatile
  6566                           
  6567                           ;bsoc.c: 177:  set_load_relay_one(1);
  6568  017668  0E01               	movlw	1
  6569  01766A  6EE6               	movwf	postinc1,c
  6570  01766C  ECC9  F0D7         	call	_set_load_relay_one	;wreg free
  6571                           
  6572                           ;bsoc.c: 178:  WaitMs(10000);
  6573  017670  0E10               	movlw	16
  6574  017672  6EE6               	movwf	postinc1,c
  6575  017674  0E27               	movlw	39
  6576  017676  6EE6               	movwf	postinc1,c
  6577  017678  ECAD  F0D3         	call	_WaitMs	;wreg free
  6578                           
  6579                           ;bsoc.c: 179:  update_adc_result();
  6580  01767C  EC59  F0D3         	call	_update_adc_result	;wreg free
  6581                           
  6582                           ;bsoc.c: 180:  C.bv_one_load = conv_raw_result(V_BAT, CONV);
  6583  017680  0E00               	movlw	0
  6584  017682  6EE6               	movwf	postinc1,c
  6585  017684  0E04               	movlw	4
  6586  017686  6EE6               	movwf	postinc1,c
  6587  017688  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  6588  01768C  0060  F004  F1EB   	movff	btemp,_C+235	;volatile
  6589  017692  0060  F008  F1EC   	movff	btemp+1,_C+236	;volatile
  6590  017698  0060  F00C  F1ED   	movff	btemp+2,_C+237	;volatile
  6591  01769E  0060  F010  F1EE   	movff	btemp+3,_C+238	;volatile
  6592                           
  6593                           ;bsoc.c: 181:  C.load_i1 = conv_raw_result(C_BATT, CONV);
  6594  0176A4  0E00               	movlw	0
  6595  0176A6  6EE6               	movwf	postinc1,c
  6596  0176A8  0E00               	movlw	0
  6597  0176AA  6EE6               	movwf	postinc1,c
  6598  0176AC  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  6599  0176B0  0060  F004  F1DF   	movff	btemp,_C+223	;volatile
  6600  0176B6  0060  F008  F1E0   	movff	btemp+1,_C+224	;volatile
  6601  0176BC  0060  F00C  F1E1   	movff	btemp+2,_C+225	;volatile
  6602  0176C2  0060  F010  F1E2   	movff	btemp+3,_C+226	;volatile
  6603                           
  6604                           ;bsoc.c: 183:  set_load_relay_two(1);
  6605  0176C8  0E01               	movlw	1
  6606  0176CA  6EE6               	movwf	postinc1,c
  6607  0176CC  ECC1  F0D7         	call	_set_load_relay_two	;wreg free
  6608                           
  6609                           ;bsoc.c: 184:  WaitMs(10000);
  6610  0176D0  0E10               	movlw	16
  6611  0176D2  6EE6               	movwf	postinc1,c
  6612  0176D4  0E27               	movlw	39
  6613  0176D6  6EE6               	movwf	postinc1,c
  6614  0176D8  ECAD  F0D3         	call	_WaitMs	;wreg free
  6615                           
  6616                           ;bsoc.c: 185:  update_adc_result();
  6617  0176DC  EC59  F0D3         	call	_update_adc_result	;wreg free
  6618                           
  6619                           ;bsoc.c: 186:  C.bv_full_load = conv_raw_result(V_BAT, CONV);
  6620  0176E0  0E00               	movlw	0
  6621  0176E2  6EE6               	movwf	postinc1,c
  6622  0176E4  0E04               	movlw	4
  6623  0176E6  6EE6               	movwf	postinc1,c
  6624  0176E8  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  6625  0176EC  0060  F004  F1EF   	movff	btemp,_C+239	;volatile
  6626  0176F2  0060  F008  F1F0   	movff	btemp+1,_C+240	;volatile
  6627  0176F8  0060  F00C  F1F1   	movff	btemp+2,_C+241	;volatile
  6628  0176FE  0060  F010  F1F2   	movff	btemp+3,_C+242	;volatile
  6629                           
  6630                           ;bsoc.c: 187:  C.load_i2 = conv_raw_result(C_BATT, CONV);
  6631  017704  0E00               	movlw	0
  6632  017706  6EE6               	movwf	postinc1,c
  6633  017708  0E00               	movlw	0
  6634  01770A  6EE6               	movwf	postinc1,c
  6635  01770C  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  6636  017710  0060  F004  F1E3   	movff	btemp,_C+227	;volatile
  6637  017716  0060  F008  F1E4   	movff	btemp+1,_C+228	;volatile
  6638  01771C  0060  F00C  F1E5   	movff	btemp+2,_C+229	;volatile
  6639  017722  0060  F010  F1E6   	movff	btemp+3,_C+230	;volatile
  6640                           
  6641                           ;bsoc.c: 189:  C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2))
      +                          ;
  6642  017728  0060  F78F  FFE6   	movff	_C+227,postinc1
  6643  01772E  0060  F793  FFE6   	movff	_C+228,postinc1
  6644  017734  0060  F797  FFE6   	movff	_C+229,postinc1
  6645  01773A  0060  F79B  FFE6   	movff	_C+230,postinc1
  6646  017740  0060  F77F  FFE6   	movff	_C+223,postinc1
  6647  017746  0060  F783  FFE6   	movff	_C+224,postinc1
  6648  01774C  0060  F787  FFE6   	movff	_C+225,postinc1
  6649  017752  0060  F78B  FFE6   	movff	_C+226,postinc1
  6650  017758  ECEB  F0D1         	call	___flsub	;wreg free
  6651  01775C  0060  F007  FFE6   	movff	btemp,postinc1
  6652  017762  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6653  017768  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6654  01776E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6655  017774  0060  F7BF  FFE6   	movff	_C+239,postinc1
  6656  01777A  0060  F7C3  FFE6   	movff	_C+240,postinc1
  6657  017780  0060  F7C7  FFE6   	movff	_C+241,postinc1
  6658  017786  0060  F7CB  FFE6   	movff	_C+242,postinc1
  6659  01778C  0060  F7AF  FFE6   	movff	_C+235,postinc1
  6660  017792  0060  F7B3  FFE6   	movff	_C+236,postinc1
  6661  017798  0060  F7B7  FFE6   	movff	_C+237,postinc1
  6662  01779E  0060  F7BB  FFE6   	movff	_C+238,postinc1
  6663  0177A4  ECEB  F0D1         	call	___flsub	;wreg free
  6664  0177A8  0060  F007  FFE6   	movff	btemp,postinc1
  6665  0177AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6666  0177B4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6667  0177BA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6668  0177C0  EC31  F0A2         	call	___fldiv	;wreg free
  6669  0177C4  0060  F007  FFE6   	movff	btemp,postinc1
  6670  0177CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6671  0177D0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6672  0177D6  0060  F013  FFE6   	movff	btemp+3,postinc1
  6673  0177DC  ECA3  F0CA         	call	_fabsf	;wreg free
  6674  0177E0  0060  F004  F184   	movff	btemp,_C+132	;volatile
  6675  0177E6  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
  6676  0177EC  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
  6677  0177F2  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
  6678                           
  6679                           ;bsoc.c: 190:  set_load_relay_one(0);
  6680  0177F8  0E00               	movlw	0
  6681  0177FA  6EE6               	movwf	postinc1,c
  6682  0177FC  ECC9  F0D7         	call	_set_load_relay_one	;wreg free
  6683                           
  6684                           ;bsoc.c: 191:  set_load_relay_two(0);
  6685  017800  0E00               	movlw	0
  6686  017802  6EE6               	movwf	postinc1,c
  6687  017804  ECC1  F0D7         	call	_set_load_relay_two	;wreg free
  6688                           
  6689                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6690                           
  6691                           ;bsoc.c: 192:  return C.esr;;	Return value of _esr_check is never used
  6692  017808  0012               	return		;funcret
  6693  01780A                     __end_of_esr_check:
  6694                           	opt callstack 0
  6695                           
  6696 ;; *************** function _update_adc_result *****************
  6697 ;; Defined at:
  6698 ;;		line 71 in file "daq.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1  [STACK] _Bool 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6716 ;;Total ram usage:        0 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:   17
  6719 ;; This function calls:
  6720 ;;		_StartTimer
  6721 ;;		_TimerDone
  6722 ;;		_check_adc_scan
  6723 ;;		_clear_adc_scan
  6724 ;;		_start_adc_scan
  6725 ;; This function is called by:
  6726 ;;		_esr_check
  6727 ;; This function uses a reentrant model
  6728 ;;
  6729                           
  6730                           	psect	text16
  6731  01A6B2                     __ptext16:
  6732                           	opt callstack 0
  6733  01A6B2                     _update_adc_result:
  6734                           	opt callstack 12
  6735                           
  6736                           ;daq.c: 73:  if (R.done) {
  6737                           
  6738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6739                           ;incstack = 0
  6740  01A6B2  0100               	movlb	0	; () banked
  6741  01A6B4  51ED               	movf	(_R+39)& (0+255),w,b	;volatile
  6742  01A6B6  B4D8               	btfsc	status,2,c
  6743  01A6B8  0012               	return	
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;daq.c: 74:   clear_adc_scan();
  6747  01A6BA  EC27  F0D8         	call	_clear_adc_scan	;wreg free
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;daq.c: 75:   start_adc_scan();
  6751  01A6BE  EC92  F0CF         	call	_start_adc_scan	;wreg free
  6752                           
  6753                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  6754  01A6C2  0EC8               	movlw	200
  6755  01A6C4  6EE6               	movwf	postinc1,c
  6756  01A6C6  0E00               	movlw	0
  6757  01A6C8  6EE6               	movwf	postinc1,c
  6758  01A6CA  0E01               	movlw	1
  6759  01A6CC  6EE6               	movwf	postinc1,c
  6760  01A6CE  ECBA  F0D2         	call	_StartTimer	;wreg free
  6761  01A6D2                     l10004:
  6762  01A6D2  0E01               	movlw	1
  6763  01A6D4  6EE6               	movwf	postinc1,c
  6764  01A6D6  EC3B  F0D5         	call	_TimerDone	;wreg free
  6765  01A6DA  5001               	movf	btemp^0,w,c
  6766  01A6DC  A4D8               	btfss	status,2,c
  6767  01A6DE  0012               	return	
  6768  01A6E0  EC17  F0D8         	call	_check_adc_scan	;wreg free
  6769  01A6E4  5001               	movf	btemp^0,w,c
  6770  01A6E6  A4D8               	btfss	status,2,c
  6771  01A6E8  0012               	return	
  6772  01A6EA  D7F3               	goto	l10004
  6773  01A6EC                     __end_of_update_adc_result:
  6774                           	opt callstack 0
  6775                           
  6776 ;; *************** function _start_adc_scan *****************
  6777 ;; Defined at:
  6778 ;;		line 32 in file "daq.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;		None
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1  [STACK] _Bool 
  6785 ;; Registers used:
  6786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 1/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6796 ;;Total ram usage:        0 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:   16
  6799 ;; This function calls:
  6800 ;;		_ADCC_DischargeSampleCapacitor
  6801 ;;		_ADCC_SetADIInterruptHandler
  6802 ;;		_ADCC_SetADTIInterruptHandler
  6803 ;;		_ADCC_StartConversion
  6804 ;; This function is called by:
  6805 ;;		_main
  6806 ;;		_update_adc_result
  6807 ;; This function uses a reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text17
  6811  019F24                     __ptext17:
  6812                           	opt callstack 0
  6813  019F24                     _start_adc_scan:
  6814                           	opt callstack 14
  6815                           
  6816                           ;daq.c: 34:  if (R.done)
  6817                           
  6818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6819                           ;incstack = 0
  6820  019F24  0100               	movlb	0	; () banked
  6821  019F26  51ED               	movf	(_R+39)& (0+255),w,b	;volatile
  6822  019F28  A4D8               	btfss	status,2,c
  6823  019F2A  0012               	return	
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;daq.c: 37:  R.scan_index = 0;
  6827  019F2C  6BEA               	clrf	(_R+36)& (0+255),b	;volatile
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  6831  019F2E  013A               	movlb	58	; () banked
  6832  019F30  5140               	movf	64,w,b	;volatile
  6833  019F32  006E F940  F001    	movff	14928,btemp	;volatile
  6834  019F38  6A02               	clrf	(btemp+1)^0,c
  6835  019F3A  0060  F004  F002   	movff	btemp,btemp+1
  6836  019F40  6A01               	clrf	btemp^0,c
  6837  019F42  2601               	addwf	btemp^0,f,c
  6838  019F44  0E00               	movlw	0
  6839  019F46  2202               	addwfc	(btemp+1)^0,f,c
  6840  019F48  0E77               	movlw	119
  6841  019F4A  1401               	andwf	btemp^0,w,c
  6842  019F4C  0100               	movlb	0	; () banked
  6843  019F4E  6FEB               	movwf	(_R+37)& (0+255),b	;volatile
  6844  019F50  0E3C               	movlw	60
  6845  019F52  1402               	andwf	(btemp+1)^0,w,c
  6846  019F54  6FEC               	movwf	(_R+38)& (0+255),b	;volatile
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  6850  019F56  0E76               	movlw	low _adc_int_handler
  6851  019F58  6EE6               	movwf	postinc1,c
  6852  019F5A  0EB0               	movlw	high _adc_int_handler
  6853  019F5C  6EE6               	movwf	postinc1,c
  6854  019F5E  0E01               	movlw	low (_adc_int_handler shr (0+16))
  6855  019F60  6EE6               	movwf	postinc1,c
  6856  019F62  EC03  F0D6         	call	_ADCC_SetADIInterruptHandler	;wreg free
  6857                           
  6858                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  6859  019F66  0E00               	movlw	low _adc_int_t_handler
  6860  019F68  6EE6               	movwf	postinc1,c
  6861  019F6A  0E9D               	movlw	high _adc_int_t_handler
  6862  019F6C  6EE6               	movwf	postinc1,c
  6863  019F6E  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  6864  019F70  6EE6               	movwf	postinc1,c
  6865  019F72  ECEF  F0D5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  6866                           
  6867                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  6868  019F76  EC13  F0D8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  6869                           
  6870                           ; BSR set to: 62
  6871                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  6872  019F7A  0100               	movlb	0	; () banked
  6873  019F7C  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
  6874  019F7E  0B0F               	andlw	15
  6875  019F80  6EE6               	movwf	postinc1,c
  6876  019F82  ECB8  F0D7         	call	_ADCC_StartConversion	;wreg free
  6877                           
  6878                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6879  019F86  0012               	return		;funcret
  6880  019F88                     __end_of_start_adc_scan:
  6881                           	opt callstack 0
  6882                           
  6883 ;; *************** function _ADCC_StartConversion *****************
  6884 ;; Defined at:
  6885 ;;		line 128 in file "mcc_generated_files/adcc.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  channel         1  [STACK] enum E16136
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1  [STACK] void 
  6892 ;; Registers used:
  6893 ;;		fsr1l, fsr1h
  6894 ;; Tracked objects:
  6895 ;;		On entry : 3F/0
  6896 ;;		On exit  : 3F/3E
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:   15
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_start_adc_scan
  6910 ;;		_adc_int_t_handler
  6911 ;; This function uses a reentrant model
  6912 ;;
  6913                           
  6914                           	psect	text18
  6915  01AF70                     __ptext18:
  6916                           	opt callstack 0
  6917  01AF70                     _ADCC_StartConversion:
  6918                           	opt callstack 0
  6919                           
  6920                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  6921                           ;stkvar	_channel @ sp[(0)+-1]
  6922                           
  6923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6924                           ;incstack = 0
  6925 ;; hardware stack exceeded
  6926  01AF70  0EFF               	movlw	-1
  6927  01AF72  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  6928                           
  6929                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  6930  01AF78  013E               	movlb	62	; () banked
  6931  01AF7A  8FF8               	bsf	248,7,b	;volatile
  6932                           
  6933                           ; BSR set to: 62
  6934                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  6935  01AF7C  81F8               	bsf	248,0,b	;volatile
  6936                           
  6937                           ; BSR set to: 62
  6938                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  6939  01AF7E  52E5               	movf	postdec1,f,c
  6940  01AF80  0012               	return		;funcret
  6941  01AF82                     __end_of_ADCC_StartConversion:
  6942                           	opt callstack 0
  6943                           
  6944 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  6945 ;; Defined at:
  6946 ;;		line 189 in file "mcc_generated_files/adcc.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  1  [STACK] void 
  6953 ;; Registers used:
  6954 ;;		wreg, status,2
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 3F/3E
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6964 ;;Total ram usage:        0 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:   15
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		_start_adc_scan
  6971 ;;		_adc_int_t_handler
  6972 ;; This function uses a reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text19
  6976  01B026                     __ptext19:
  6977                           	opt callstack 0
  6978  01B026                     _ADCC_DischargeSampleCapacitor:
  6979                           	opt callstack 0
  6980                           
  6981                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  6982                           
  6983                           ; BSR set to: 62
  6984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6985                           ;incstack = 0
  6986 ;; hardware stack exceeded
  6987  01B026  0E3B               	movlw	59
  6988  01B028  013E               	movlb	62	; () banked
  6989  01B02A  6FF1               	movwf	241,b	;volatile
  6990                           
  6991                           ; BSR set to: 62
  6992                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  6993  01B02C  0012               	return		;funcret
  6994  01B02E                     __end_of_ADCC_DischargeSampleCapacitor:
  6995                           	opt callstack 0
  6996                           
  6997 ;; *************** function _clear_adc_scan *****************
  6998 ;; Defined at:
  6999 ;;		line 63 in file "daq.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1  [STACK] void 
  7006 ;; Registers used:
  7007 ;;		None
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 3F/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7017 ;;Total ram usage:        0 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:   15
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_main
  7024 ;;		_update_adc_result
  7025 ;; This function uses a reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text20
  7029  01B04E                     __ptext20:
  7030                           	opt callstack 0
  7031  01B04E                     _clear_adc_scan:
  7032                           	opt callstack 13
  7033                           
  7034                           ;daq.c: 65:  R.done = 0;
  7035                           
  7036                           ; BSR set to: 62
  7037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7038                           ;incstack = 0
  7039  01B04E  0100               	movlb	0	; () banked
  7040  01B050  6BED               	clrf	(_R+39)& (0+255),b	;volatile
  7041                           
  7042                           ; BSR set to: 0
  7043                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7044  01B052  0012               	return		;funcret
  7045  01B054                     __end_of_clear_adc_scan:
  7046                           	opt callstack 0
  7047                           
  7048 ;; *************** function _check_adc_scan *****************
  7049 ;; Defined at:
  7050 ;;		line 55 in file "daq.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1  [STACK] _Bool 
  7057 ;; Registers used:
  7058 ;;		btemp
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:   15
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;;		_update_adc_result
  7076 ;; This function uses a reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text21
  7080  01B02E                     __ptext21:
  7081                           	opt callstack 0
  7082  01B02E                     _check_adc_scan:
  7083                           	opt callstack 13
  7084                           
  7085                           ;daq.c: 57:  return R.done;
  7086                           
  7087                           ; BSR set to: 0
  7088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7089                           ;incstack = 0
  7090  01B02E  0060  F3B4  F001   	movff	_R+39,btemp	;volatile
  7091                           
  7092                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7093  01B034  0012               	return		;funcret
  7094  01B036                     __end_of_check_adc_scan:
  7095                           	opt callstack 0
  7096                           
  7097 ;; *************** function _set_load_relay_two *****************
  7098 ;; Defined at:
  7099 ;;		line 117 in file "mbmc.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  mode            1  [STACK] _Bool 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;		None
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1  [STACK] void 
  7106 ;; Registers used:
  7107 ;;		wreg, fsr1l, fsr1h
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7117 ;;Total ram usage:        0 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; Hardware stack levels required when called:   15
  7120 ;; This function calls:
  7121 ;;		Nothing
  7122 ;; This function is called by:
  7123 ;;		_main
  7124 ;;		_esr_check
  7125 ;; This function uses a reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text22
  7129  01AF82                     __ptext22:
  7130                           	opt callstack 0
  7131  01AF82                     _set_load_relay_two:
  7132                           	opt callstack 15
  7133                           
  7134                           ;mbmc.c: 117: void set_load_relay_two(_Bool mode);mbmc.c: 118: {;mbmc.c: 119:  LATDbits.
      +                          LATD5 = mode;
  7135                           ;stkvar	_mode @ sp[(0)+-1]
  7136                           
  7137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7138                           ;incstack = 0
  7139  01AF82  0EFF               	movlw	-1
  7140  01AF84  B0E3               	btfsc	plusw1,0,c
  7141  01AF86  D002               	bra	u8905
  7142  01AF88  9ABD               	bcf	189,5,c	;volatile
  7143  01AF8A  D001               	bra	u8906
  7144  01AF8C                     u8905:
  7145  01AF8C  8ABD               	bsf	189,5,c	;volatile
  7146  01AF8E                     u8906:
  7147                           
  7148                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7149  01AF8E  52E5               	movf	postdec1,f,c
  7150  01AF90  0012               	return		;funcret
  7151  01AF92                     __end_of_set_load_relay_two:
  7152                           	opt callstack 0
  7153                           
  7154 ;; *************** function _set_load_relay_one *****************
  7155 ;; Defined at:
  7156 ;;		line 112 in file "mbmc.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  mode            1  [STACK] _Bool 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1  [STACK] void 
  7163 ;; Registers used:
  7164 ;;		wreg, fsr1l, fsr1h
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7174 ;;Total ram usage:        0 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:   15
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_main
  7181 ;;		_esr_check
  7182 ;; This function uses a reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text23
  7186  01AF92                     __ptext23:
  7187                           	opt callstack 0
  7188  01AF92                     _set_load_relay_one:
  7189                           	opt callstack 15
  7190                           
  7191                           ;mbmc.c: 112: void set_load_relay_one(_Bool mode);mbmc.c: 113: {;mbmc.c: 114:  LATDbits.
      +                          LATD4 = mode;
  7192                           ;stkvar	_mode @ sp[(0)+-1]
  7193                           
  7194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7195                           ;incstack = 0
  7196  01AF92  0EFF               	movlw	-1
  7197  01AF94  B0E3               	btfsc	plusw1,0,c
  7198  01AF96  D002               	bra	u8895
  7199  01AF98  98BD               	bcf	189,4,c	;volatile
  7200  01AF9A  D001               	bra	u8896
  7201  01AF9C                     u8895:
  7202  01AF9C  88BD               	bsf	189,4,c	;volatile
  7203  01AF9E                     u8896:
  7204                           
  7205                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7206  01AF9E  52E5               	movf	postdec1,f,c
  7207  01AFA0  0012               	return		;funcret
  7208  01AFA2                     __end_of_set_load_relay_one:
  7209                           	opt callstack 0
  7210                           
  7211 ;; *************** function _eaDogM_WriteCommand *****************
  7212 ;; Defined at:
  7213 ;;		line 175 in file "eadog.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  cmd             1  [STACK] const unsigned char 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;		None
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  1  [STACK] void 
  7220 ;; Registers used:
  7221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7222 ;; Tracked objects:
  7223 ;;		On entry : 3F/3D
  7224 ;;		On exit  : 3F/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7231 ;;Total ram usage:        0 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:   25
  7234 ;; This function calls:
  7235 ;;		_send_lcd_cmd_dma
  7236 ;; This function is called by:
  7237 ;;		_main
  7238 ;; This function uses a reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text24
  7242  01AFB2                     __ptext24:
  7243                           	opt callstack 0
  7244  01AFB2                     _eaDogM_WriteCommand:
  7245                           	opt callstack 5
  7246                           
  7247                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  7248                           ;stkvar	_cmd @ sp[(0)+-1]
  7249                           
  7250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7251                           ;incstack = 0
  7252  01AFB2  0EFF               	movlw	-1
  7253  01AFB4  50E3               	movf	plusw1,w,c
  7254  01AFB6  6EE6               	movwf	postinc1,c
  7255  01AFB8  ECDD  F0D0         	call	_send_lcd_cmd_dma	;wreg free
  7256                           
  7257                           ; BSR set to: 0
  7258                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7259  01AFBC  52E5               	movf	postdec1,f,c
  7260  01AFBE  0012               	return		;funcret
  7261  01AFC0                     __end_of_eaDogM_WriteCommand:
  7262                           	opt callstack 0
  7263                           
  7264 ;; *************** function _convert_adc_data *****************
  7265 ;; Defined at:
  7266 ;;		line 40 in file "mbmc.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  i               1  [STACK] unsigned char 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1  [STACK] void 
  7273 ;; Registers used:
  7274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7284 ;;Total ram usage:        0 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:   18
  7287 ;; This function calls:
  7288 ;;		_conv_raw_result
  7289 ;;		_lp_filter
  7290 ;; This function is called by:
  7291 ;;		_main
  7292 ;; This function uses a reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text25
  7296  01948E                     __ptext25:
  7297                           	opt callstack 0
  7298  01948E                     _convert_adc_data:
  7299                           	opt callstack 0
  7300                           
  7301                           ; BSR set to: 0
  7302                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7303  01948E  52E6               	movf	postinc1,f,c
  7304                           
  7305                           ;mbmc.c: 42:  uint8_t i = 0;
  7306                           ;stkvar	_i @ sp[(-1)+0]
  7307                           
  7308                           ;incstack = 0
  7309  019490  0EFF               	movlw	-1
  7310  019492  6AE3               	clrf	plusw1,c
  7311  019494                     l10406:
  7312                           
  7313                           ;mbmc.c: 45:   if (V.calib) {
  7314  019494  0102               	movlb	2	; () banked
  7315  019496  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  7316  019498  B4D8               	btfsc	status,2,c
  7317  01949A  D01B               	goto	l10410
  7318                           
  7319                           ; BSR set to: 2
  7320                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  7321  01949C  0E01               	movlw	1
  7322  01949E  6EE6               	movwf	postinc1,c
  7323                           
  7324                           ;stkvar	_i @ sp[(-2)+0]
  7325  0194A0  0EFE               	movlw	-2
  7326  0194A2  50E3               	movf	plusw1,w,c
  7327  0194A4  6EE6               	movwf	postinc1,c
  7328  0194A6  0E01               	movlw	1
  7329  0194A8  6EE6               	movwf	postinc1,c
  7330                           
  7331                           ;stkvar	_i @ sp[(-4)+0]
  7332  0194AA  0EFC               	movlw	-4
  7333  0194AC  50E3               	movf	plusw1,w,c
  7334  0194AE  6EE6               	movwf	postinc1,c
  7335  0194B0  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  7336  0194B4  0060  F007  FFE6   	movff	btemp,postinc1
  7337  0194BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7338  0194C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7339  0194C6  0060  F013  FFE6   	movff	btemp+3,postinc1
  7340  0194CC  EC05  F0BC         	call	_lp_filter	;wreg free
  7341  0194D0  D01A               	goto	L3
  7342  0194D2                     l10410:
  7343                           
  7344                           ; BSR set to: 2
  7345                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  7346  0194D2  0E00               	movlw	0
  7347  0194D4  6EE6               	movwf	postinc1,c
  7348                           
  7349                           ;stkvar	_i @ sp[(-2)+0]
  7350  0194D6  0EFE               	movlw	-2
  7351  0194D8  50E3               	movf	plusw1,w,c
  7352  0194DA  6EE6               	movwf	postinc1,c
  7353  0194DC  0E00               	movlw	0
  7354  0194DE  6EE6               	movwf	postinc1,c
  7355                           
  7356                           ;stkvar	_i @ sp[(-4)+0]
  7357  0194E0  0EFC               	movlw	-4
  7358  0194E2  50E3               	movf	plusw1,w,c
  7359  0194E4  6EE6               	movwf	postinc1,c
  7360  0194E6  ECEE  F0A4         	call	_conv_raw_result	;wreg free
  7361  0194EA  0060  F007  FFE6   	movff	btemp,postinc1
  7362  0194F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7363  0194F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7364  0194FC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7365  019502  EC05  F0BC         	call	_lp_filter	;wreg free
  7366  019506                     L3:
  7367                           
  7368                           ;stkvar	_i @ sp[(-1)+0]
  7369  019506  0EFF               	movlw	-1
  7370  019508  50E3               	movf	plusw1,w,c
  7371  01950A  0D04               	mullw	4
  7372  01950C  0E00               	movlw	low _C
  7373  01950E  24F3               	addwf	243,w,c
  7374  019510  6ED9               	movwf	fsr2l,c
  7375  019512  0E01               	movlw	high _C
  7376  019514  20F4               	addwfc	prodh,w,c
  7377  019516  6EDA               	movwf	fsr2h,c
  7378  019518  0060  F007  FFDE   	movff	btemp,postinc2
  7379  01951E  0060  F00B  FFDE   	movff	btemp+1,postinc2
  7380  019524  0060  F00F  FFDE   	movff	btemp+2,postinc2
  7381  01952A  0060  F013  FFDE   	movff	btemp+3,postinc2
  7382                           
  7383                           ;mbmc.c: 50:  } while (++i < 16);
  7384                           ;stkvar	_i @ sp[(-1)+0]
  7385  019530  0EFF               	movlw	-1
  7386  019532  2AE3               	incf	plusw1,f,c
  7387  019534  0EFF               	movlw	-1
  7388  019536  006F FF8C  F001    	movff	plusw1,btemp
  7389  01953C  0E0F               	movlw	15
  7390  01953E  6401               	cpfsgt	btemp^0,c
  7391  019540  D7A9               	goto	l10406
  7392                           
  7393                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  7394  019542  52E5               	movf	postdec1,f,c
  7395  019544  0012               	return		;funcret
  7396  019546                     __end_of_convert_adc_data:
  7397                           	opt callstack 0
  7398                           
  7399 ;; *************** function _clear_hid_pflags *****************
  7400 ;; Defined at:
  7401 ;;		line 51 in file "hid.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  h               1  [STACK] PTR struct H_data
  7404 ;;		 -> H(7), 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  1  [STACK] void 
  7409 ;; Registers used:
  7410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7411 ;; Tracked objects:
  7412 ;;		On entry : 3F/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7420 ;;Total ram usage:        0 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:   15
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_main
  7427 ;; This function uses a reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text26
  7431  01ACCC                     __ptext26:
  7432                           	opt callstack 0
  7433  01ACCC                     _clear_hid_pflags:
  7434                           	opt callstack 15
  7435                           
  7436                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7437                           ;stkvar	_h @ sp[(0)+-1]
  7438                           
  7439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7440                           ;incstack = 0
  7441  01ACCC  0EFF               	movlw	-1
  7442  01ACCE  50E3               	movf	plusw1,w,c
  7443  01ACD0  6ED9               	movwf	fsr2l,c
  7444  01ACD2  6ADA               	clrf	fsr2h,c
  7445  01ACD4  0E03               	movlw	3
  7446  01ACD6  26D9               	addwf	fsr2l,f,c
  7447  01ACD8  0E00               	movlw	0
  7448  01ACDA  6EDF               	movwf	indf2,c
  7449                           
  7450                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7451                           ;stkvar	_h @ sp[(0)+-1]
  7452  01ACDC  0EFF               	movlw	-1
  7453  01ACDE  50E3               	movf	plusw1,w,c
  7454  01ACE0  6ED9               	movwf	fsr2l,c
  7455  01ACE2  6ADA               	clrf	fsr2h,c
  7456  01ACE4  0E05               	movlw	5
  7457  01ACE6  26D9               	addwf	fsr2l,f,c
  7458  01ACE8  0E00               	movlw	0
  7459  01ACEA  6EDF               	movwf	indf2,c
  7460                           
  7461                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7462  01ACEC  52E5               	movf	postdec1,f,c
  7463  01ACEE  0012               	return		;funcret
  7464  01ACF0                     __end_of_clear_hid_pflags:
  7465                           	opt callstack 0
  7466                           
  7467 ;; *************** function _check_help *****************
  7468 ;; Defined at:
  7469 ;;		line 40 in file "mconfig.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  flipper         1  [STACK] const _Bool 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  estatus         1    0        _Bool 
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1  [STACK] _Bool 
  7476 ;; Registers used:
  7477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7478 ;; Tracked objects:
  7479 ;;		On entry : 3F/2
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7487 ;;Total ram usage:        0 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:   27
  7490 ;; This function calls:
  7491 ;;		_StartTimer
  7492 ;;		_TimerDone
  7493 ;;		_display_help
  7494 ;;		_display_info
  7495 ;;		_get_vterm_ptr
  7496 ;;		_help_button
  7497 ;;		_mode_lamp_bright
  7498 ;;		_mode_lamp_dim
  7499 ;;		_set_display_info
  7500 ;;		_set_temp_display_help
  7501 ;;		_set_vterm
  7502 ;;		_sprintf
  7503 ;;		_update_lcd
  7504 ;;		_vterm_dump
  7505 ;; This function is called by:
  7506 ;;		_main
  7507 ;; This function uses a reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text27
  7511  01700E                     __ptext27:
  7512                           	opt callstack 0
  7513  01700E                     _check_help:
  7514                           	opt callstack 3
  7515                           
  7516                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7517                           
  7518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7519                           ;incstack = 0
  7520  01700E  EC76  F0D3         	call	_help_button	;wreg free
  7521  017012  5001               	movf	btemp^0,w,c
  7522  017014  B4D8               	btfsc	status,2,c
  7523  017016  D0D0               	goto	l12222
  7524  017018  EC1B  F0D8         	call	_display_info	;wreg free
  7525  01701C  0401               	decf	btemp^0,w,c
  7526  01701E  B4D8               	btfsc	status,2,c
  7527  017020  D0CB               	goto	l12222
  7528                           
  7529                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7530  017022  0EDC               	movlw	220
  7531  017024  6EE6               	movwf	postinc1,c
  7532  017026  0E05               	movlw	5
  7533  017028  6EE6               	movwf	postinc1,c
  7534  01702A  0E0B               	movlw	11
  7535  01702C  6EE6               	movwf	postinc1,c
  7536  01702E  ECBA  F0D2         	call	_StartTimer	;wreg free
  7537                           
  7538                           ;mconfig.c: 48:   if (V.debug)
  7539  017032  0102               	movlb	2	; () banked
  7540  017034  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7541                           
  7542                           ; BSR set to: 2
  7543                           ;mconfig.c: 49:    vterm_dump();
  7544  017036  ECE0  F0C3         	call	_vterm_dump	;wreg free
  7545                           
  7546                           ;mconfig.c: 51:   set_vterm(1);
  7547  01703A  0E01               	movlw	1
  7548  01703C  6EE6               	movwf	postinc1,c
  7549  01703E  EC02  F0D7         	call	_set_vterm	;wreg free
  7550                           
  7551                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7552  017042  EC1B  F0D8         	call	_display_info	;wreg free
  7553  017046  5001               	movf	btemp^0,w,c
  7554  017048  6EE6               	movwf	postinc1,c
  7555  01704A  ECD1  F0D7         	call	_set_temp_display_help	;wreg free
  7556                           
  7557                           ; BSR set to: 2
  7558                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7559  01704E  0E01               	movlw	1
  7560  017050  6EE6               	movwf	postinc1,c
  7561  017052  EC11  F0D7         	call	_set_display_info	;wreg free
  7562                           
  7563                           ;mconfig.c: 54:   if (flipper) {
  7564                           ;stkvar	_flipper @ sp[(0)+-1]
  7565  017056  0EFF               	movlw	-1
  7566  017058  50E3               	movf	plusw1,w,c
  7567  01705A  B4D8               	btfsc	status,2,c
  7568  01705C  D019               	goto	l12208
  7569                           
  7570                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7571  01705E  0EB1               	movlw	low STR_36
  7572  017060  6EE6               	movwf	postinc1,c
  7573  017062  0EFF               	movlw	high STR_36
  7574  017064  6EE6               	movwf	postinc1,c
  7575  017066  0E4D               	movlw	low STR_38
  7576  017068  6EE6               	movwf	postinc1,c
  7577  01706A  0EFE               	movlw	high STR_38
  7578  01706C  6EE6               	movwf	postinc1,c
  7579  01706E  0E01               	movlw	1
  7580  017070  6EE6               	movwf	postinc1,c
  7581  017072  0E00               	movlw	0
  7582  017074  6EE6               	movwf	postinc1,c
  7583  017076  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7584  01707A  0060  F007  FFE6   	movff	btemp,postinc1
  7585  017080  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7586  017086  0E06               	movlw	6
  7587  017088  6EE6               	movwf	postinc1,c
  7588  01708A  ECA7  F0C6         	call	_sprintf	;wreg free
  7589                           
  7590                           ;mconfig.c: 56:   } else {
  7591  01708E  D018               	goto	l1655
  7592  017090                     l12208:
  7593                           
  7594                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7595  017090  0EC7               	movlw	low STR_37
  7596  017092  6EE6               	movwf	postinc1,c
  7597  017094  0EFF               	movlw	high STR_37
  7598  017096  6EE6               	movwf	postinc1,c
  7599  017098  0E4D               	movlw	low STR_38
  7600  01709A  6EE6               	movwf	postinc1,c
  7601  01709C  0EFE               	movlw	high STR_38
  7602  01709E  6EE6               	movwf	postinc1,c
  7603  0170A0  0E01               	movlw	1
  7604  0170A2  6EE6               	movwf	postinc1,c
  7605  0170A4  0E00               	movlw	0
  7606  0170A6  6EE6               	movwf	postinc1,c
  7607  0170A8  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7608  0170AC  0060  F007  FFE6   	movff	btemp,postinc1
  7609  0170B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7610  0170B8  0E06               	movlw	6
  7611  0170BA  6EE6               	movwf	postinc1,c
  7612  0170BC  ECA7  F0C6         	call	_sprintf	;wreg free
  7613  0170C0                     l1655:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7617  0170C0  0102               	movlb	2	; () banked
  7618  0170C2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7619  0170C4  32E8               	rrcf	wreg,f,c
  7620  0170C6  32E8               	rrcf	wreg,f,c
  7621  0170C8  0B03               	andlw	3
  7622  0170CA  0D24               	mullw	36
  7623  0170CC  0E12               	movlw	18
  7624  0170CE  26F3               	addwf	243,f,c
  7625  0170D0  0E00               	movlw	0
  7626  0170D2  22F4               	addwfc	244,f,c
  7627  0170D4  0E89               	movlw	low _T
  7628  0170D6  6E0B               	movwf	(btemp+10)^0,c
  7629  0170D8  0EFC               	movlw	high _T
  7630  0170DA  6E0C               	movwf	(btemp+11)^0,c
  7631  0170DC  50F3               	movf	243,w,c
  7632  0170DE  260B               	addwf	(btemp+10)^0,f,c
  7633  0170E0  50F4               	movf	244,w,c
  7634  0170E2  220C               	addwfc	(btemp+11)^0,f,c
  7635  0170E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7636  0170EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  7637  0170F0  0EBD               	movlw	low STR_40
  7638  0170F2  6EE6               	movwf	postinc1,c
  7639  0170F4  0EFF               	movlw	high STR_40
  7640  0170F6  6EE6               	movwf	postinc1,c
  7641  0170F8  0E01               	movlw	1
  7642  0170FA  6EE6               	movwf	postinc1,c
  7643  0170FC  0E01               	movlw	1
  7644  0170FE  6EE6               	movwf	postinc1,c
  7645  017100  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7646  017104  0060  F007  FFE6   	movff	btemp,postinc1
  7647  01710A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7648  017110  0E06               	movlw	6
  7649  017112  6EE6               	movwf	postinc1,c
  7650  017114  ECA7  F0C6         	call	_sprintf	;wreg free
  7651                           
  7652                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7653  017118  0102               	movlb	2	; () banked
  7654  01711A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7655  01711C  32E8               	rrcf	wreg,f,c
  7656  01711E  32E8               	rrcf	wreg,f,c
  7657  017120  0B03               	andlw	3
  7658  017122  0D24               	mullw	36
  7659  017124  0E89               	movlw	low _T
  7660  017126  6E0B               	movwf	(btemp+10)^0,c
  7661  017128  0EFC               	movlw	high _T
  7662  01712A  6E0C               	movwf	(btemp+11)^0,c
  7663  01712C  50F3               	movf	243,w,c
  7664  01712E  260B               	addwf	(btemp+10)^0,f,c
  7665  017130  50F4               	movf	244,w,c
  7666  017132  220C               	addwfc	(btemp+11)^0,f,c
  7667  017134  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7668  01713A  0060  F033  FFE6   	movff	btemp+11,postinc1
  7669  017140  0EBD               	movlw	low STR_40
  7670  017142  6EE6               	movwf	postinc1,c
  7671  017144  0EFF               	movlw	high STR_40
  7672  017146  6EE6               	movwf	postinc1,c
  7673  017148  0E01               	movlw	1
  7674  01714A  6EE6               	movwf	postinc1,c
  7675  01714C  0E02               	movlw	2
  7676  01714E  6EE6               	movwf	postinc1,c
  7677  017150  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7678  017154  0060  F007  FFE6   	movff	btemp,postinc1
  7679  01715A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7680  017160  0E06               	movlw	6
  7681  017162  6EE6               	movwf	postinc1,c
  7682  017164  ECA7  F0C6         	call	_sprintf	;wreg free
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;mconfig.c: 61:   V.help_id++;
  7686  017168  EE20  F29B         	lfsr	2,_V+155	;volatile
  7687  01716C  38DF               	swapf	223,w,c
  7688  01716E  6E0C               	movwf	(btemp+11)^0,c
  7689  017170  320C               	rrcf	(btemp+11)^0,f,c
  7690  017172  300C               	rrcf	(btemp+11)^0,w,c
  7691  017174  0B03               	andlw	3
  7692  017176  6E0C               	movwf	(btemp+11)^0,c
  7693  017178  2A0C               	incf	(btemp+11)^0,f,c
  7694  01717A  3A0C               	swapf	(btemp+11)^0,f,c
  7695  01717C  360C               	rlcf	(btemp+11)^0,f,c
  7696  01717E  360C               	rlcf	(btemp+11)^0,f,c
  7697  017180  50DF               	movf	223,w,c
  7698  017182  180C               	xorwf	(btemp+11)^0,w,c
  7699  017184  0B3F               	andlw	-193
  7700  017186  180C               	xorwf	(btemp+11)^0,w,c
  7701  017188  6EDF               	movwf	223,c
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7705  01718A  0EB8               	movlw	184
  7706  01718C  6EE6               	movwf	postinc1,c
  7707  01718E  0E0B               	movlw	11
  7708  017190  6EE6               	movwf	postinc1,c
  7709  017192  0E09               	movlw	9
  7710  017194  6EE6               	movwf	postinc1,c
  7711  017196  ECBA  F0D2         	call	_StartTimer	;wreg free
  7712                           
  7713                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  7714  01719A  0EB8               	movlw	184
  7715  01719C  6EE6               	movwf	postinc1,c
  7716  01719E  0E0B               	movlw	11
  7717  0171A0  6EE6               	movwf	postinc1,c
  7718  0171A2  0E07               	movlw	7
  7719  0171A4  6EE6               	movwf	postinc1,c
  7720  0171A6  ECBA  F0D2         	call	_StartTimer	;wreg free
  7721                           
  7722                           ;mconfig.c: 64:   mode_lamp_bright();
  7723  0171AA  ECE0  F0D7         	call	_mode_lamp_bright	;wreg free
  7724                           
  7725                           ;mconfig.c: 65:   update_lcd(1);
  7726  0171AE  0E01               	movlw	1
  7727  0171B0  6EE6               	movwf	postinc1,c
  7728  0171B2  EC1F  F0C6         	call	_update_lcd	;wreg free
  7729                           
  7730                           ;mconfig.c: 67:  } else {
  7731  0171B6  D032               	goto	l1656
  7732  0171B8                     l12222:
  7733                           
  7734                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  7735  0171B8  0E09               	movlw	9
  7736  0171BA  6EE6               	movwf	postinc1,c
  7737  0171BC  EC3B  F0D5         	call	_TimerDone	;wreg free
  7738  0171C0  5001               	movf	btemp^0,w,c
  7739  0171C2  B4D8               	btfsc	status,2,c
  7740  0171C4  D02B               	goto	l1656
  7741                           
  7742                           ;mconfig.c: 69:    set_vterm(0);
  7743  0171C6  0E00               	movlw	0
  7744  0171C8  6EE6               	movwf	postinc1,c
  7745  0171CA  EC02  F0D7         	call	_set_vterm	;wreg free
  7746                           
  7747                           ;mconfig.c: 70:    V.help = 0;
  7748  0171CE  0102               	movlb	2	; () banked
  7749  0171D0  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7750                           
  7751                           ; BSR set to: 2
  7752                           ;mconfig.c: 71:    set_display_info(display_help());
  7753  0171D2  EC1F  F0D8         	call	_display_help	;wreg free
  7754  0171D6  5001               	movf	btemp^0,w,c
  7755  0171D8  6EE6               	movwf	postinc1,c
  7756  0171DA  EC11  F0D7         	call	_set_display_info	;wreg free
  7757                           
  7758                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7759  0171DE  0060  FA57  FFE6   	movff	_V+149,postinc1
  7760  0171E4  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7761  0171EA  EC75  F0D7         	call	_mode_lamp_dim	;wreg free
  7762                           
  7763                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  7764  0171EE  0E0B               	movlw	11
  7765  0171F0  6EE6               	movwf	postinc1,c
  7766  0171F2  EC3B  F0D5         	call	_TimerDone	;wreg free
  7767  0171F6  5001               	movf	btemp^0,w,c
  7768  0171F8  B4D8               	btfsc	status,2,c
  7769  0171FA  D010               	goto	l1656
  7770                           
  7771                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  7772  0171FC  0102               	movlb	2	; () banked
  7773  0171FE  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7774  017200  A4D8               	btfss	status,2,c
  7775  017202  D002               	goto	u11750
  7776  017204  0E01               	movlw	1
  7777  017206  D001               	goto	u11760
  7778  017208                     u11750:
  7779  017208  0E00               	movlw	0
  7780  01720A                     u11760:
  7781  01720A  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  7782                           
  7783                           ; BSR set to: 2
  7784                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  7785  01720C  0EDC               	movlw	220
  7786  01720E  6EE6               	movwf	postinc1,c
  7787  017210  0E05               	movlw	5
  7788  017212  6EE6               	movwf	postinc1,c
  7789  017214  0E0B               	movlw	11
  7790  017216  6EE6               	movwf	postinc1,c
  7791  017218  ECBA  F0D2         	call	_StartTimer	;wreg free
  7792  01721C                     l1656:
  7793                           
  7794                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7795  01721C  52E5               	movf	postdec1,f,c
  7796  01721E  0012               	return		;funcret
  7797  017220                     __end_of_check_help:
  7798                           	opt callstack 0
  7799                           
  7800 ;; *************** function _vterm_dump *****************
  7801 ;; Defined at:
  7802 ;;		line 121 in file "mconfig.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;		None
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1  [STACK] void 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7811 ;; Tracked objects:
  7812 ;;		On entry : 3F/2
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7820 ;;Total ram usage:        0 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:   26
  7823 ;; This function calls:
  7824 ;;		_WaitMs
  7825 ;;		_eaDogM_WriteStringAtPos
  7826 ;;		_get_vterm_ptr
  7827 ;;		_sprintf
  7828 ;;		_wait_lcd_done
  7829 ;; This function is called by:
  7830 ;;		_check_help
  7831 ;; This function uses a reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text28
  7835  0187C0                     __ptext28:
  7836                           	opt callstack 0
  7837  0187C0                     _vterm_dump:
  7838                           	opt callstack 3
  7839                           
  7840                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  7841                           
  7842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7843                           ;incstack = 0
  7844  0187C0  0E01               	movlw	1
  7845  0187C2  6EE6               	movwf	postinc1,c
  7846  0187C4  0E00               	movlw	0
  7847  0187C6  6EE6               	movwf	postinc1,c
  7848  0187C8  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7849  0187CC  0060  F007  FFE6   	movff	btemp,postinc1
  7850  0187D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7851  0187D8  0E00               	movlw	0
  7852  0187DA  6EE6               	movwf	postinc1,c
  7853  0187DC  0E00               	movlw	0
  7854  0187DE  6EE6               	movwf	postinc1,c
  7855  0187E0  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7856  0187E4  0060  F007  FFE6   	movff	btemp,postinc1
  7857  0187EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7858  0187F0  0E93               	movlw	low STR_42
  7859  0187F2  6EE6               	movwf	postinc1,c
  7860  0187F4  0EFF               	movlw	high STR_42
  7861  0187F6  6EE6               	movwf	postinc1,c
  7862  0187F8  0E01               	movlw	low (_V+1)
  7863  0187FA  6EE6               	movwf	postinc1,c
  7864  0187FC  0E02               	movlw	high (_V+1)
  7865  0187FE  6EE6               	movwf	postinc1,c
  7866  018800  0E08               	movlw	8
  7867  018802  6EE6               	movwf	postinc1,c
  7868  018804  ECA7  F0C6         	call	_sprintf	;wreg free
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;mconfig.c: 124:  wait_lcd_done();
  7872  018808  EC3E  F0D7         	call	_wait_lcd_done	;wreg free
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  7876  01880C  0E01               	movlw	low (_V+1)
  7877  01880E  6EE6               	movwf	postinc1,c
  7878  018810  0E02               	movlw	high (_V+1)
  7879  018812  6EE6               	movwf	postinc1,c
  7880  018814  0E00               	movlw	0
  7881  018816  6EE6               	movwf	postinc1,c
  7882  018818  0E00               	movlw	0
  7883  01881A  6EE6               	movwf	postinc1,c
  7884  01881C  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  7885                           
  7886                           ; BSR set to: 59
  7887                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  7888  018820  0E01               	movlw	1
  7889  018822  6EE6               	movwf	postinc1,c
  7890  018824  0E01               	movlw	1
  7891  018826  6EE6               	movwf	postinc1,c
  7892  018828  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7893  01882C  0060  F007  FFE6   	movff	btemp,postinc1
  7894  018832  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7895  018838  0E00               	movlw	0
  7896  01883A  6EE6               	movwf	postinc1,c
  7897  01883C  0E01               	movlw	1
  7898  01883E  6EE6               	movwf	postinc1,c
  7899  018840  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7900  018844  0060  F007  FFE6   	movff	btemp,postinc1
  7901  01884A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7902  018850  0E93               	movlw	low STR_42
  7903  018852  6EE6               	movwf	postinc1,c
  7904  018854  0EFF               	movlw	high STR_42
  7905  018856  6EE6               	movwf	postinc1,c
  7906  018858  0E01               	movlw	low (_V+1)
  7907  01885A  6EE6               	movwf	postinc1,c
  7908  01885C  0E02               	movlw	high (_V+1)
  7909  01885E  6EE6               	movwf	postinc1,c
  7910  018860  0E08               	movlw	8
  7911  018862  6EE6               	movwf	postinc1,c
  7912  018864  ECA7  F0C6         	call	_sprintf	;wreg free
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;mconfig.c: 127:  wait_lcd_done();
  7916  018868  EC3E  F0D7         	call	_wait_lcd_done	;wreg free
  7917                           
  7918                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  7919  01886C  0E01               	movlw	low (_V+1)
  7920  01886E  6EE6               	movwf	postinc1,c
  7921  018870  0E02               	movlw	high (_V+1)
  7922  018872  6EE6               	movwf	postinc1,c
  7923  018874  0E00               	movlw	0
  7924  018876  6EE6               	movwf	postinc1,c
  7925  018878  0E01               	movlw	1
  7926  01887A  6EE6               	movwf	postinc1,c
  7927  01887C  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  7928                           
  7929                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7930  018880  0E01               	movlw	1
  7931  018882  6EE6               	movwf	postinc1,c
  7932  018884  0E02               	movlw	2
  7933  018886  6EE6               	movwf	postinc1,c
  7934  018888  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7935  01888C  0060  F007  FFE6   	movff	btemp,postinc1
  7936  018892  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7937  018898  0E00               	movlw	0
  7938  01889A  6EE6               	movwf	postinc1,c
  7939  01889C  0E02               	movlw	2
  7940  01889E  6EE6               	movwf	postinc1,c
  7941  0188A0  EC91  F0D4         	call	_get_vterm_ptr	;wreg free
  7942  0188A4  0060  F007  FFE6   	movff	btemp,postinc1
  7943  0188AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7944  0188B0  0E93               	movlw	low STR_42
  7945  0188B2  6EE6               	movwf	postinc1,c
  7946  0188B4  0EFF               	movlw	high STR_42
  7947  0188B6  6EE6               	movwf	postinc1,c
  7948  0188B8  0E01               	movlw	low (_V+1)
  7949  0188BA  6EE6               	movwf	postinc1,c
  7950  0188BC  0E02               	movlw	high (_V+1)
  7951  0188BE  6EE6               	movwf	postinc1,c
  7952  0188C0  0E08               	movlw	8
  7953  0188C2  6EE6               	movwf	postinc1,c
  7954  0188C4  ECA7  F0C6         	call	_sprintf	;wreg free
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;mconfig.c: 130:  wait_lcd_done();
  7958  0188C8  EC3E  F0D7         	call	_wait_lcd_done	;wreg free
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7962  0188CC  0E01               	movlw	low (_V+1)
  7963  0188CE  6EE6               	movwf	postinc1,c
  7964  0188D0  0E02               	movlw	high (_V+1)
  7965  0188D2  6EE6               	movwf	postinc1,c
  7966  0188D4  0E00               	movlw	0
  7967  0188D6  6EE6               	movwf	postinc1,c
  7968  0188D8  0E02               	movlw	2
  7969  0188DA  6EE6               	movwf	postinc1,c
  7970  0188DC  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  7971                           
  7972                           ; BSR set to: 59
  7973                           ;mconfig.c: 132:  WaitMs(3000);
  7974  0188E0  0EB8               	movlw	184
  7975  0188E2  6EE6               	movwf	postinc1,c
  7976  0188E4  0E0B               	movlw	11
  7977  0188E6  6EE6               	movwf	postinc1,c
  7978  0188E8  ECAD  F0D3         	call	_WaitMs	;wreg free
  7979                           
  7980                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7981  0188EC  0012               	return		;funcret
  7982  0188EE                     __end_of_vterm_dump:
  7983                           	opt callstack 0
  7984                           
  7985 ;; *************** function _sprintf *****************
  7986 ;; Defined at:
  7987 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  s               2  [STACK] PTR unsigned char 
  7990 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  7991 ;;  fmt             2  [STACK] PTR const unsigned char 
  7992 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
  7993 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
  7994 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
  7995 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
  7996 ;;		 -> STR_38(19), STR_32(17), STR_31(16), STR_30(16), 
  7997 ;;		 -> STR_29(19), STR_28(20), STR_27(19), STR_26(19), 
  7998 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
  7999 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
  8000 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
  8001 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
  8002 ;;		 -> STR_9(22), STR_8(18), STR_7(17), STR_6(17), 
  8003 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  f               6  [STACK] struct _IO_FILE
  8006 ;;  ap              2  [STACK] PTR void [1]
  8007 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8008 ;;  ret             2    0        int 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  2  [STACK] int 
  8011 ;; Registers used:
  8012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 3F/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8022 ;;Total ram usage:        0 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; Hardware stack levels required when called:   23
  8025 ;; This function calls:
  8026 ;;		_vfprintf
  8027 ;; This function is called by:
  8028 ;;		_main
  8029 ;;		_check_help
  8030 ;;		_vterm_dump
  8031 ;;		_calc_bsoc
  8032 ;; This function uses a reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text29
  8036  018D4E                     __ptext29:
  8037                           	opt callstack 0
  8038  018D4E                     _sprintf:
  8039                           	opt callstack 0
  8040                           
  8041                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8042  018D4E  0E08               	movlw	8
  8043  018D50  26E1               	addwf	fsr1l,f,c
  8044  018D52  0E00               	movlw	0
  8045  018D54  22E2               	addwfc	fsr1h,f,c
  8046                           
  8047                           ;incstack = 0
  8048 ;; hardware stack exceeded
  8049  018D56  0EFE               	movlw	254
  8050  018D58  6E0B               	movwf	(btemp+10)^0,c
  8051  018D5A  0EFF               	movlw	255
  8052  018D5C  6E0C               	movwf	(btemp+11)^0,c
  8053                           
  8054                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8055  018D5E  0EF5               	movlw	245
  8056  018D60  24E1               	addwf	fsr1l,w,c
  8057  018D62  6E09               	movwf	(btemp+8)^0,c
  8058  018D64  0EFF               	movlw	255
  8059  018D66  20E2               	addwfc	fsr1h,w,c
  8060  018D68  6E0A               	movwf	(btemp+9)^0,c
  8061  018D6A  500B               	movf	(btemp+10)^0,w,c
  8062  018D6C  2609               	addwf	(btemp+8)^0,f,c
  8063  018D6E  500C               	movf	(btemp+11)^0,w,c
  8064  018D70  220A               	addwfc	(btemp+9)^0,f,c
  8065                           
  8066                           ;stkvar	_ap @ sp[(-8)+6]
  8067  018D72  0EFF               	movlw	-1
  8068  018D74  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8069  018D7A  0EFE               	movlw	-2
  8070  018D7C  0060  F027  FFE3   	movff	btemp+8,plusw1
  8071                           
  8072                           ;stkvar	_s @ sp[(-8)+-3]
  8073  018D82  0EF5               	movlw	-11
  8074  018D84  006F FF8C  F00B    	movff	plusw1,btemp+10
  8075  018D8A  0EF6               	movlw	-10
  8076  018D8C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8077                           
  8078                           ;stkvar	_f @ sp[(-8)+0]
  8079  018D92  0EF9               	movlw	-7
  8080  018D94  0060  F033  FFE3   	movff	btemp+11,plusw1
  8081  018D9A  0EF8               	movlw	-8
  8082  018D9C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8083                           
  8084                           ;stkvar	_f @ sp[(-8)+0]
  8085  018DA2  0EFA               	movlw	250
  8086  018DA4  24E1               	addwf	fsr1l,w,c
  8087  018DA6  6ED9               	movwf	fsr2l,c
  8088  018DA8  0EFF               	movlw	255
  8089  018DAA  20E2               	addwfc	fsr1h,w,c
  8090  018DAC  6EDA               	movwf	fsr2h,c
  8091  018DAE  0E00               	movlw	0
  8092  018DB0  6EDE               	movwf	postinc2,c
  8093  018DB2  0E00               	movlw	0
  8094  018DB4  6EDD               	movwf	postdec2,c
  8095                           
  8096                           ;stkvar	_f @ sp[(-8)+0]
  8097  018DB6  0EFC               	movlw	252
  8098  018DB8  24E1               	addwf	fsr1l,w,c
  8099  018DBA  6ED9               	movwf	fsr2l,c
  8100  018DBC  0EFF               	movlw	255
  8101  018DBE  20E2               	addwfc	fsr1h,w,c
  8102  018DC0  6EDA               	movwf	fsr2h,c
  8103  018DC2  0E00               	movlw	0
  8104  018DC4  6EDE               	movwf	postinc2,c
  8105  018DC6  0E00               	movlw	0
  8106  018DC8  6EDD               	movwf	postdec2,c
  8107                           
  8108                           ;stkvar	_ap @ sp[(-8)+6]
  8109  018DCA  0EFE               	movlw	254
  8110  018DCC  24E1               	addwf	fsr1l,w,c
  8111  018DCE  6E01               	movwf	btemp^0,c
  8112  018DD0  0EFF               	movlw	255
  8113  018DD2  20E2               	addwfc	fsr1h,w,c
  8114  018DD4  6E02               	movwf	(btemp+1)^0,c
  8115  018DD6  0060  F007  FFE6   	movff	btemp,postinc1
  8116  018DDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8117                           
  8118                           ;stkvar	_fmt @ sp[(-10)+-5]
  8119  018DE2  0EF1               	movlw	-15
  8120  018DE4  006F FF8F FFE6     	movff	plusw1,postinc1
  8121  018DEA  006F FF8F FFE6     	movff	plusw1,postinc1
  8122                           
  8123                           ;stkvar	_f @ sp[(-12)+0]
  8124  018DF0  0EF4               	movlw	244
  8125  018DF2  24E1               	addwf	fsr1l,w,c
  8126  018DF4  6E01               	movwf	btemp^0,c
  8127  018DF6  0EFF               	movlw	255
  8128  018DF8  20E2               	addwfc	fsr1h,w,c
  8129  018DFA  6E02               	movwf	(btemp+1)^0,c
  8130  018DFC  0060  F007  FFE6   	movff	btemp,postinc1
  8131  018E02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8132  018E08  ECFA  F0CA         	call	_vfprintf	;wreg free
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;stkvar	_f @ sp[(-8)+0]
  8136  018E0C  0EFA               	movlw	250
  8137  018E0E  24E1               	addwf	fsr1l,w,c
  8138  018E10  6ED9               	movwf	fsr2l,c
  8139  018E12  0EFF               	movlw	255
  8140  018E14  20E2               	addwfc	fsr1h,w,c
  8141  018E16  6EDA               	movwf	fsr2h,c
  8142  018E18  006F FF78  F00B    	movff	postinc2,btemp+10
  8143  018E1E  006F FF74  F00C    	movff	postdec2,btemp+11
  8144                           
  8145                           ;stkvar	_s @ sp[(-8)+-3]
  8146  018E24  0EF5               	movlw	-11
  8147  018E26  006F FF8C  F009    	movff	plusw1,btemp+8
  8148  018E2C  0EF6               	movlw	-10
  8149  018E2E  006F FF8C  F00A    	movff	plusw1,btemp+9
  8150  018E34  500B               	movf	(btemp+10)^0,w,c
  8151  018E36  2409               	addwf	(btemp+8)^0,w,c
  8152  018E38  6ED9               	movwf	fsr2l,c
  8153  018E3A  500C               	movf	(btemp+11)^0,w,c
  8154  018E3C  200A               	addwfc	(btemp+9)^0,w,c
  8155  018E3E  6EDA               	movwf	fsr2h,c
  8156  018E40  0E00               	movlw	0
  8157  018E42  6EDF               	movwf	indf2,c
  8158                           
  8159                           ; BSR set to: 0
  8160                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  8161  018E44  0EF8               	movlw	248
  8162  018E46  26E1               	addwf	fsr1l,f,c
  8163  018E48  0EFF               	movlw	255
  8164  018E4A  22E2               	addwfc	fsr1h,f,c
  8165  018E4C  52E5               	movf	postdec1,f,c
  8166  018E4E  50E7               	movf	indf1,w,c
  8167  018E50  5EE1               	subwf	fsr1l,f,c
  8168  018E52  0E00               	movlw	0
  8169  018E54  5AE2               	subwfb	fsr1h,f,c
  8170  018E56  0012               	return		;funcret
  8171  018E58                     __end_of_sprintf:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function _get_vterm_ptr *****************
  8175 ;; Defined at:
  8176 ;;		line 116 in file "mconfig.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  line            1  [STACK] const unsigned char 
  8179 ;;  vterm           1  [STACK] const unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  2  [STACK] PTR unsigned char 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8195 ;;Total ram usage:        0 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:   15
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_main
  8202 ;;		_check_help
  8203 ;;		_vterm_dump
  8204 ;; This function uses a reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text30
  8208  01A922                     __ptext30:
  8209                           	opt callstack 0
  8210  01A922                     _get_vterm_ptr:
  8211                           	opt callstack 15
  8212                           
  8213                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8214                           ;stkvar	_vterm @ sp[(0)+-2]
  8215                           
  8216                           ; BSR set to: 0
  8217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8218                           ;incstack = 0
  8219  01A922  0EFE               	movlw	-2
  8220  01A924  50E3               	movf	plusw1,w,c
  8221  01A926  0B03               	andlw	3
  8222  01A928  0D48               	mullw	72
  8223  01A92A  0EFF               	movlw	low _D
  8224  01A92C  6E01               	movwf	btemp^0,c
  8225  01A92E  0E07               	movlw	high _D
  8226  01A930  6E02               	movwf	(btemp+1)^0,c
  8227  01A932  50F3               	movf	243,w,c
  8228  01A934  2601               	addwf	btemp^0,f,c
  8229  01A936  50F4               	movf	244,w,c
  8230  01A938  2202               	addwfc	(btemp+1)^0,f,c
  8231                           
  8232                           ;stkvar	_line @ sp[(0)+-1]
  8233  01A93A  0EFF               	movlw	-1
  8234  01A93C  50E3               	movf	plusw1,w,c
  8235  01A93E  0B03               	andlw	3
  8236  01A940  0D18               	mullw	24
  8237  01A942  50F3               	movf	243,w,c
  8238  01A944  2601               	addwf	btemp^0,f,c
  8239  01A946  50F4               	movf	244,w,c
  8240  01A948  2202               	addwfc	(btemp+1)^0,f,c
  8241                           
  8242                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8243  01A94A  52E5               	movf	postdec1,f,c
  8244  01A94C  52E5               	movf	postdec1,f,c
  8245  01A94E  0012               	return		;funcret
  8246  01A950                     __end_of_get_vterm_ptr:
  8247                           	opt callstack 0
  8248                           
  8249 ;; *************** function _WaitMs *****************
  8250 ;; Defined at:
  8251 ;;		line 32 in file "timers.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  numMilliseco    2  [STACK] const unsigned short 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1  [STACK] void 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/2
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8269 ;;Total ram usage:        0 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:   16
  8272 ;; This function calls:
  8273 ;;		_StartTimer
  8274 ;;		_TimerDone
  8275 ;; This function is called by:
  8276 ;;		_main
  8277 ;;		_vterm_dump
  8278 ;;		_esr_check
  8279 ;; This function uses a reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text31
  8283  01A75A                     __ptext31:
  8284                           	opt callstack 0
  8285  01A75A                     _WaitMs:
  8286                           	opt callstack 13
  8287                           
  8288                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8289                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8290                           
  8291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8292                           ;incstack = 0
  8293  01A75A  0EFE               	movlw	-2
  8294  01A75C  006F FF8F FFE6     	movff	plusw1,postinc1
  8295  01A762  006F FF8F FFE6     	movff	plusw1,postinc1
  8296  01A768  0E00               	movlw	0
  8297  01A76A  6EE6               	movwf	postinc1,c
  8298  01A76C  ECBA  F0D2         	call	_StartTimer	;wreg free
  8299                           
  8300                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8301  01A770  D005               	goto	l9284
  8302  01A772                     l1587:
  8303                           
  8304                           ;timers.c: 36:   __nop();
  8305  01A772  F000               	nop	
  8306                           
  8307                           ;timers.c: 37:   __nop();
  8308  01A774  F000               	nop	
  8309                           
  8310                           ;timers.c: 38:   __nop();
  8311  01A776  F000               	nop	
  8312                           
  8313                           ;timers.c: 39:   __nop();
  8314  01A778  F000               	nop	
  8315  01A77A  0004               	clrwdt		;# 
  8316  01A77C                     l9284:
  8317                           
  8318                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8319  01A77C  0E00               	movlw	0
  8320  01A77E  6EE6               	movwf	postinc1,c
  8321  01A780  EC3B  F0D5         	call	_TimerDone	;wreg free
  8322  01A784  5001               	movf	btemp^0,w,c
  8323  01A786  B4D8               	btfsc	status,2,c
  8324  01A788  D7F4               	goto	l1587
  8325                           
  8326                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8327  01A78A  52E5               	movf	postdec1,f,c
  8328  01A78C  52E5               	movf	postdec1,f,c
  8329  01A78E  0012               	return		;funcret
  8330  01A790                     __end_of_WaitMs:
  8331                           	opt callstack 0
  8332                           
  8333 ;; *************** function _update_lcd *****************
  8334 ;; Defined at:
  8335 ;;		line 85 in file "mconfig.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  vterm           1  [STACK] unsigned char 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;		None
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1  [STACK] unsigned char 
  8342 ;; Registers used:
  8343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8353 ;;Total ram usage:        0 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; Hardware stack levels required when called:   26
  8356 ;; This function calls:
  8357 ;;		_eaDogM_WriteStringAtPos
  8358 ;;		_wait_lcd_done
  8359 ;; This function is called by:
  8360 ;;		_main
  8361 ;;		_check_help
  8362 ;; This function uses a reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text32
  8366  018C3E                     __ptext32:
  8367                           	opt callstack 0
  8368  018C3E                     _update_lcd:
  8369                           	opt callstack 4
  8370                           
  8371                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8372                           ;stkvar	_vterm @ sp[(0)+-1]
  8373                           
  8374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8375                           ;incstack = 0
  8376  018C3E  0EFF               	movlw	-1
  8377  018C40  006F FF8C  F001    	movff	plusw1,btemp
  8378  018C46  0E03               	movlw	3
  8379  018C48  1601               	andwf	btemp^0,f,c
  8380  018C4A  0EFF               	movlw	-1
  8381  018C4C  0060  F007  FFE3   	movff	btemp,plusw1
  8382                           
  8383                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8384  018C52  EE22  F11F         	lfsr	2,_D+288
  8385  018C56  A0DF               	btfss	indf2,0,c
  8386  018C58  D004               	goto	l12026
  8387                           
  8388                           ;stkvar	_vterm @ sp[(0)+-1]
  8389  018C5A  0EFF               	movlw	-1
  8390  018C5C  50E3               	movf	plusw1,w,c
  8391  018C5E  B4D8               	btfsc	status,2,c
  8392  018C60  D074               	goto	l1663
  8393  018C62                     l12026:
  8394                           
  8395                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8396                           ;stkvar	_vterm @ sp[(0)+-1]
  8397  018C62  0EFF               	movlw	-1
  8398  018C64  50E3               	movf	plusw1,w,c
  8399  018C66  0D48               	mullw	72
  8400  018C68  0E0F               	movlw	low (_D+16)
  8401  018C6A  24F3               	addwf	243,w,c
  8402  018C6C  6ED9               	movwf	fsr2l,c
  8403  018C6E  0E08               	movlw	high (_D+16)
  8404  018C70  20F4               	addwfc	prodh,w,c
  8405  018C72  6EDA               	movwf	fsr2h,c
  8406  018C74  0E00               	movlw	0
  8407  018C76  6EDF               	movwf	indf2,c
  8408                           
  8409                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8410                           ;stkvar	_vterm @ sp[(0)+-1]
  8411  018C78  0EFF               	movlw	-1
  8412  018C7A  50E3               	movf	plusw1,w,c
  8413  018C7C  0D48               	mullw	72
  8414  018C7E  0E27               	movlw	low (_D+40)
  8415  018C80  24F3               	addwf	243,w,c
  8416  018C82  6ED9               	movwf	fsr2l,c
  8417  018C84  0E08               	movlw	high (_D+40)
  8418  018C86  20F4               	addwfc	prodh,w,c
  8419  018C88  6EDA               	movwf	fsr2h,c
  8420  018C8A  0E00               	movlw	0
  8421  018C8C  6EDF               	movwf	indf2,c
  8422                           
  8423                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8424                           ;stkvar	_vterm @ sp[(0)+-1]
  8425  018C8E  0EFF               	movlw	-1
  8426  018C90  50E3               	movf	plusw1,w,c
  8427  018C92  0D48               	mullw	72
  8428  018C94  0E3F               	movlw	low (_D+64)
  8429  018C96  24F3               	addwf	243,w,c
  8430  018C98  6ED9               	movwf	fsr2l,c
  8431  018C9A  0E08               	movlw	high (_D+64)
  8432  018C9C  20F4               	addwfc	prodh,w,c
  8433  018C9E  6EDA               	movwf	fsr2h,c
  8434  018CA0  0E00               	movlw	0
  8435  018CA2  6EDF               	movwf	indf2,c
  8436                           
  8437                           ;mconfig.c: 95:  wait_lcd_done();
  8438  018CA4  EC3E  F0D7         	call	_wait_lcd_done	;wreg free
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8442                           ;stkvar	_vterm @ sp[(0)+-1]
  8443  018CA8  0EFF               	movlw	-1
  8444  018CAA  50E3               	movf	plusw1,w,c
  8445  018CAC  0D48               	mullw	72
  8446  018CAE  0EFF               	movlw	low _D
  8447  018CB0  6E0B               	movwf	(btemp+10)^0,c
  8448  018CB2  0E07               	movlw	high _D
  8449  018CB4  6E0C               	movwf	(btemp+11)^0,c
  8450  018CB6  50F3               	movf	243,w,c
  8451  018CB8  260B               	addwf	(btemp+10)^0,f,c
  8452  018CBA  50F4               	movf	244,w,c
  8453  018CBC  220C               	addwfc	(btemp+11)^0,f,c
  8454  018CBE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8455  018CC4  0060  F033  FFE6   	movff	btemp+11,postinc1
  8456  018CCA  0E00               	movlw	0
  8457  018CCC  6EE6               	movwf	postinc1,c
  8458  018CCE  0E00               	movlw	0
  8459  018CD0  6EE6               	movwf	postinc1,c
  8460  018CD2  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  8461                           
  8462                           ; BSR set to: 59
  8463                           ;mconfig.c: 97:  wait_lcd_done();
  8464  018CD6  EC3E  F0D7         	call	_wait_lcd_done	;wreg free
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8468                           ;stkvar	_vterm @ sp[(0)+-1]
  8469  018CDA  0EFF               	movlw	-1
  8470  018CDC  50E3               	movf	plusw1,w,c
  8471  018CDE  0D48               	mullw	72
  8472  018CE0  0EFF               	movlw	low _D
  8473  018CE2  6E0B               	movwf	(btemp+10)^0,c
  8474  018CE4  0E07               	movlw	high _D
  8475  018CE6  6E0C               	movwf	(btemp+11)^0,c
  8476  018CE8  0E18               	movlw	24
  8477  018CEA  260B               	addwf	(btemp+10)^0,f,c
  8478  018CEC  0E00               	movlw	0
  8479  018CEE  220C               	addwfc	(btemp+11)^0,f,c
  8480  018CF0  50F3               	movf	243,w,c
  8481  018CF2  260B               	addwf	(btemp+10)^0,f,c
  8482  018CF4  50F4               	movf	244,w,c
  8483  018CF6  220C               	addwfc	(btemp+11)^0,f,c
  8484  018CF8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8485  018CFE  0060  F033  FFE6   	movff	btemp+11,postinc1
  8486  018D04  0E00               	movlw	0
  8487  018D06  6EE6               	movwf	postinc1,c
  8488  018D08  0E01               	movlw	1
  8489  018D0A  6EE6               	movwf	postinc1,c
  8490  018D0C  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  8491                           
  8492                           ; BSR set to: 59
  8493                           ;mconfig.c: 99:  wait_lcd_done();
  8494  018D10  EC3E  F0D7         	call	_wait_lcd_done	;wreg free
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8498                           ;stkvar	_vterm @ sp[(0)+-1]
  8499  018D14  0EFF               	movlw	-1
  8500  018D16  50E3               	movf	plusw1,w,c
  8501  018D18  0D48               	mullw	72
  8502  018D1A  0EFF               	movlw	low _D
  8503  018D1C  6E0B               	movwf	(btemp+10)^0,c
  8504  018D1E  0E07               	movlw	high _D
  8505  018D20  6E0C               	movwf	(btemp+11)^0,c
  8506  018D22  0E30               	movlw	48
  8507  018D24  260B               	addwf	(btemp+10)^0,f,c
  8508  018D26  0E00               	movlw	0
  8509  018D28  220C               	addwfc	(btemp+11)^0,f,c
  8510  018D2A  50F3               	movf	243,w,c
  8511  018D2C  260B               	addwf	(btemp+10)^0,f,c
  8512  018D2E  50F4               	movf	244,w,c
  8513  018D30  220C               	addwfc	(btemp+11)^0,f,c
  8514  018D32  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8515  018D38  0060  F033  FFE6   	movff	btemp+11,postinc1
  8516  018D3E  0E00               	movlw	0
  8517  018D40  6EE6               	movwf	postinc1,c
  8518  018D42  0E02               	movlw	2
  8519  018D44  6EE6               	movwf	postinc1,c
  8520  018D46  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  8521  018D4A                     l1663:
  8522                           
  8523                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8524  018D4A  52E5               	movf	postdec1,f,c
  8525  018D4C  0012               	return		;funcret
  8526  018D4E                     __end_of_update_lcd:
  8527                           	opt callstack 0
  8528                           
  8529 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8530 ;; Defined at:
  8531 ;;		line 278 in file "eadog.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  r               1  [STACK] const unsigned char 
  8534 ;;  c               1  [STACK] const unsigned char 
  8535 ;;  strPtr          2  [STACK] PTR unsigned char 
  8536 ;;		 -> D.lcd(288), D(290), V(188), 
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1  [STACK] void 
  8541 ;; Registers used:
  8542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8543 ;; Tracked objects:
  8544 ;;		On entry : 3F/0
  8545 ;;		On exit  : 3F/3B
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used:    1
  8554 ;; Hardware stack levels required when called:   25
  8555 ;; This function calls:
  8556 ;;		_eaDogM_WriteString
  8557 ;;		_send_lcd_cmd_dma
  8558 ;; This function is called by:
  8559 ;;		_update_lcd
  8560 ;;		_vterm_dump
  8561 ;; This function uses a reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text33
  8565  01A790                     __ptext33:
  8566                           	opt callstack 0
  8567  01A790                     _eaDogM_WriteStringAtPos:
  8568                           	opt callstack 4
  8569                           
  8570                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8571                           ;stkvar	_c @ sp[(0)+-2]
  8572                           
  8573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8574                           ;incstack = 0
  8575  01A790  0EFE               	movlw	-2
  8576  01A792  006F FF8C  F00C    	movff	plusw1,btemp+11
  8577                           
  8578                           ;stkvar	_r @ sp[(0)+-1]
  8579  01A798  0EFF               	movlw	-1
  8580  01A79A  50E3               	movf	plusw1,w,c
  8581  01A79C  0D10               	mullw	16
  8582  01A79E  50F3               	movf	243,w,c
  8583  01A7A0  240C               	addwf	(btemp+11)^0,w,c
  8584  01A7A2  0F80               	addlw	128
  8585  01A7A4  6EE6               	movwf	postinc1,c
  8586  01A7A6  ECDD  F0D0         	call	_send_lcd_cmd_dma	;wreg free
  8587                           
  8588                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8589                           ;stkvar	_strPtr @ sp[(0)+-4]
  8590  01A7AA  0EFC               	movlw	-4
  8591  01A7AC  006F FF8F FFE6     	movff	plusw1,postinc1
  8592  01A7B2  006F FF8F FFE6     	movff	plusw1,postinc1
  8593  01A7B8  ECA5  F0CB         	call	_eaDogM_WriteString	;wreg free
  8594                           
  8595                           ; BSR set to: 59
  8596                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8597  01A7BC  52E5               	movf	postdec1,f,c
  8598  01A7BE  52E5               	movf	postdec1,f,c
  8599  01A7C0  52E5               	movf	postdec1,f,c
  8600  01A7C2  52E5               	movf	postdec1,f,c
  8601  01A7C4  0012               	return		;funcret
  8602  01A7C6                     __end_of_eaDogM_WriteStringAtPos:
  8603                           	opt callstack 0
  8604                           
  8605 ;; *************** function _send_lcd_cmd_dma *****************
  8606 ;; Defined at:
  8607 ;;		line 220 in file "eadog.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  strPtr          1  [STACK] unsigned char 
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;		None
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  1  [STACK] void 
  8614 ;; Registers used:
  8615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/3D
  8618 ;;		On exit  : 3F/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8625 ;;Total ram usage:        0 bytes
  8626 ;; Hardware stack levels used:    1
  8627 ;; Hardware stack levels required when called:   24
  8628 ;; This function calls:
  8629 ;;		_printf
  8630 ;;		_ringBufS_flush
  8631 ;;		_start_lcd
  8632 ;;		_wait_lcd_done
  8633 ;;		_wait_lcd_set
  8634 ;; This function is called by:
  8635 ;;		_eaDogM_WriteCommand
  8636 ;;		_eaDogM_WriteStringAtPos
  8637 ;; This function uses a reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text34
  8641  01A1BA                     __ptext34:
  8642                           	opt callstack 0
  8643  01A1BA                     _send_lcd_cmd_dma:
  8644                           	opt callstack 4
  8645                           
  8646                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8647                           
  8648                           ; BSR set to: 59
  8649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8650                           ;incstack = 0
  8651  01A1BA  EC2A  F0D8         	call	_wait_lcd_set	;wreg free
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8655  01A1BE  0E00               	movlw	0
  8656  01A1C0  6EE6               	movwf	postinc1,c
  8657  01A1C2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8658  01A1C8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8659  01A1CE  ECDE  F0CC         	call	_ringBufS_flush	;wreg free
  8660  01A1D2  92BC               	bcf	188,1,c	;volatile
  8661  01A1D4  94BC               	bcf	188,2,c	;volatile
  8662                           
  8663                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  8664  01A1D6  013B               	movlb	59	; () banked
  8665  01A1D8  9FFC               	bcf	252,7,b	;volatile
  8666                           
  8667                           ; BSR set to: 59
  8668                           ;eadog.c: 229:  DMA1SSZ = 1;
  8669  01A1DA  0E00               	movlw	0
  8670  01A1DC  6FF8               	movwf	248,b	;volatile
  8671  01A1DE  0E01               	movlw	1
  8672  01A1E0  6FF7               	movwf	247,b	;volatile
  8673                           
  8674                           ; BSR set to: 59
  8675                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  8676  01A1E2  8FFC               	bsf	252,7,b	;volatile
  8677                           
  8678                           ; BSR set to: 59
  8679                           ;eadog.c: 231:  printf("%c", strPtr);
  8680                           ;stkvar	_strPtr @ sp[(0)+-1]
  8681  01A1E4  0EFF               	movlw	-1
  8682  01A1E6  50E3               	movf	plusw1,w,c
  8683  01A1E8  6EE6               	movwf	postinc1,c
  8684  01A1EA  0E00               	movlw	0
  8685  01A1EC  6EE6               	movwf	postinc1,c
  8686  01A1EE  0EF8               	movlw	low STR_34
  8687  01A1F0  6EE6               	movwf	postinc1,c
  8688  01A1F2  0EFF               	movlw	high STR_34
  8689  01A1F4  6EE6               	movwf	postinc1,c
  8690  01A1F6  0E04               	movlw	4
  8691  01A1F8  6EE6               	movwf	postinc1,c
  8692  01A1FA  ECC4  F0CF         	call	_printf	;wreg free
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;eadog.c: 232:  start_lcd();
  8696  01A1FE  EC2D  F0D8         	call	_start_lcd	;wreg free
  8697                           
  8698                           ; BSR set to: 59
  8699                           ;eadog.c: 233:  wait_lcd_done();
  8700  01A202  EC3E  F0D7         	call	_wait_lcd_done	;wreg free
  8701                           
  8702                           ; BSR set to: 0
  8703  01A206  82BC               	bsf	188,1,c	;volatile
  8704                           
  8705                           ; BSR set to: 0
  8706                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8707  01A208  52E5               	movf	postdec1,f,c
  8708  01A20A  0012               	return		;funcret
  8709  01A20C                     __end_of_send_lcd_cmd_dma:
  8710                           	opt callstack 0
  8711                           
  8712 ;; *************** function _wait_lcd_done *****************
  8713 ;; Defined at:
  8714 ;;		line 156 in file "eadog.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1  [STACK] void 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 3F/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8732 ;;Total ram usage:        0 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:   16
  8735 ;; This function calls:
  8736 ;;		_wdtdelay
  8737 ;; This function is called by:
  8738 ;;		_send_lcd_cmd_dma
  8739 ;;		_update_lcd
  8740 ;;		_vterm_dump
  8741 ;; This function uses a reentrant model
  8742 ;;
  8743                           
  8744                           	psect	text35
  8745  01AE7C                     __ptext35:
  8746                           	opt callstack 0
  8747  01AE7C                     _wait_lcd_done:
  8748                           	opt callstack 13
  8749                           
  8750                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8751                           
  8752                           ; BSR set to: 0
  8753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8754                           ;incstack = 0
  8755  01AE7C  0100               	movlb	0	; () banked
  8756  01AE7E  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  8757  01AE80  D7FD               	goto	_wait_lcd_done
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;eadog.c: 159:  wdtdelay(50);
  8761  01AE82  0E32               	movlw	50
  8762  01AE84  6EE6               	movwf	postinc1,c
  8763  01AE86  0E00               	movlw	0
  8764  01AE88  6EE6               	movwf	postinc1,c
  8765  01AE8A  0E00               	movlw	0
  8766  01AE8C  6EE6               	movwf	postinc1,c
  8767  01AE8E  0E00               	movlw	0
  8768  01AE90  6EE6               	movwf	postinc1,c
  8769  01AE92  EC55  F0D0         	call	_wdtdelay	;wreg free
  8770                           
  8771                           ; BSR set to: 0
  8772                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8773  01AE96  0012               	return		;funcret
  8774  01AE98                     __end_of_wait_lcd_done:
  8775                           	opt callstack 0
  8776                           
  8777 ;; *************** function _wdtdelay *****************
  8778 ;; Defined at:
  8779 ;;		line 23 in file "eadog.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;  delay           4  [STACK] const unsigned long 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1  [STACK] void 
  8786 ;; Registers used:
  8787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 3F/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8797 ;;Total ram usage:        0 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:   15
  8800 ;; This function calls:
  8801 ;;		Nothing
  8802 ;; This function is called by:
  8803 ;;		_init_display
  8804 ;;		_send_lcd_cmd
  8805 ;;		_send_lcd_cmd_long
  8806 ;;		_wait_lcd_done
  8807 ;; This function uses a reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text36
  8811  01A0AA                     __ptext36:
  8812                           	opt callstack 0
  8813  01A0AA                     _wdtdelay:
  8814                           	opt callstack 13
  8815                           
  8816                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  8817                           
  8818                           ; BSR set to: 0
  8819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8820                           ;incstack = 0
  8821  01A0AA  0100               	movlb	0	; () banked
  8822  01A0AC  6B94               	clrf	wdtdelay@dcount& (0+255),b
  8823  01A0AE  6B95               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8824  01A0B0  6B96               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8825  01A0B2  6B97               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8826  01A0B4                     l1428:
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;eadog.c: 28:   __nop();
  8830  01A0B4  F000               	nop	
  8831  01A0B6  0004               	clrwdt		;# 
  8832                           
  8833                           ;eadog.c: 30:  };
  8834  01A0B8  0E01               	movlw	1
  8835  01A0BA  0100               	movlb	0	; () banked
  8836  01A0BC  2794               	addwf	wdtdelay@dcount& (0+255),f,b
  8837  01A0BE  0E00               	movlw	0
  8838  01A0C0  2395               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8839  01A0C2  2396               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8840  01A0C4  2397               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;stkvar	_delay @ sp[(0)+-4]
  8844  01A0C6  0EFC               	movlw	-4
  8845  01A0C8  006F FF8C  F001    	movff	plusw1,btemp
  8846  01A0CE  5194               	movf	wdtdelay@dcount& (0+255),w,b
  8847  01A0D0  5C01               	subwf	btemp^0,w,c
  8848  01A0D2  0EFD               	movlw	-3
  8849  01A0D4  006F FF8C  F001    	movff	plusw1,btemp
  8850  01A0DA  5195               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8851  01A0DC  5801               	subwfb	btemp^0,w,c
  8852  01A0DE  0EFE               	movlw	-2
  8853  01A0E0  006F FF8C  F001    	movff	plusw1,btemp
  8854  01A0E6  5196               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8855  01A0E8  5801               	subwfb	btemp^0,w,c
  8856  01A0EA  0EFF               	movlw	-1
  8857  01A0EC  006F FF8C  F001    	movff	plusw1,btemp
  8858  01A0F2  5197               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8859  01A0F4  5801               	subwfb	btemp^0,w,c
  8860  01A0F6  B0D8               	btfsc	status,0,c
  8861  01A0F8  D7DD               	goto	l1428
  8862                           
  8863                           ; BSR set to: 0
  8864                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8865  01A0FA  52E5               	movf	postdec1,f,c
  8866  01A0FC  52E5               	movf	postdec1,f,c
  8867  01A0FE  52E5               	movf	postdec1,f,c
  8868  01A100  52E5               	movf	postdec1,f,c
  8869  01A102  0012               	return		;funcret
  8870  01A104                     __end_of_wdtdelay:
  8871                           	opt callstack 0
  8872                           
  8873 ;; *************** function _eaDogM_WriteString *****************
  8874 ;; Defined at:
  8875 ;;		line 199 in file "eadog.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  strPtr          2  [STACK] PTR unsigned char 
  8878 ;;		 -> D.lcd(288), D(290), V(188), 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1  [STACK] void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8885 ;; Tracked objects:
  8886 ;;		On entry : 3F/0
  8887 ;;		On exit  : 3F/3B
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8894 ;;Total ram usage:        0 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:   24
  8897 ;; This function calls:
  8898 ;;		_printf
  8899 ;;		_ringBufS_flush
  8900 ;;		_start_lcd
  8901 ;;		_strlen
  8902 ;;		_wait_lcd_set
  8903 ;; This function is called by:
  8904 ;;		_eaDogM_WriteStringAtPos
  8905 ;; This function uses a reentrant model
  8906 ;;
  8907                           
  8908                           	psect	text37
  8909  01974A                     __ptext37:
  8910                           	opt callstack 0
  8911  01974A                     _eaDogM_WriteString:
  8912                           	opt callstack 4
  8913                           
  8914                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  8915                           
  8916                           ; BSR set to: 0
  8917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8918                           ;incstack = 0
  8919  01974A  EC2A  F0D8         	call	_wait_lcd_set	;wreg free
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  8923  01974E  0E00               	movlw	0
  8924  019750  6EE6               	movwf	postinc1,c
  8925  019752  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8926  019758  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8927  01975E  ECDE  F0CC         	call	_ringBufS_flush	;wreg free
  8928  019762  94BC               	bcf	188,2,c	;volatile
  8929                           
  8930                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8931                           ;stkvar	_strPtr @ sp[(0)+-2]
  8932  019764  0EFE               	movlw	-2
  8933  019766  006F FF8F FFE6     	movff	plusw1,postinc1
  8934  01976C  006F FF8F FFE6     	movff	plusw1,postinc1
  8935  019772  ECF8  F0CB         	call	_strlen	;wreg free
  8936  019776  5002               	movf	(btemp+1)^0,w,c
  8937  019778  E104               	bnz	u11560
  8938  01977A  0E41               	movlw	65
  8939  01977C  5C01               	subwf	btemp^0,w,c
  8940  01977E  A0D8               	btfss	status,0,c
  8941  019780  D010               	goto	l11980
  8942  019782                     u11560:
  8943                           
  8944                           ;stkvar	_strPtr @ sp[(0)+-2]
  8945  019782  0EFE               	movlw	-2
  8946  019784  006F FF8C  F00B    	movff	plusw1,btemp+10
  8947  01978A  0EFF               	movlw	-1
  8948  01978C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8949  019792  0E40               	movlw	64
  8950  019794  240B               	addwf	(btemp+10)^0,w,c
  8951  019796  6ED9               	movwf	fsr2l,c
  8952  019798  0E00               	movlw	0
  8953  01979A  200C               	addwfc	(btemp+11)^0,w,c
  8954  01979C  6EDA               	movwf	fsr2h,c
  8955  01979E  0E00               	movlw	0
  8956  0197A0  6EDF               	movwf	indf2,c
  8957  0197A2                     l11980:
  8958                           
  8959                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  8960  0197A2  013B               	movlb	59	; () banked
  8961  0197A4  9FFC               	bcf	252,7,b	;volatile
  8962                           
  8963                           ; BSR set to: 59
  8964                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  8965                           ;stkvar	_strPtr @ sp[(0)+-2]
  8966  0197A6  0EFE               	movlw	-2
  8967  0197A8  006F FF8F FFE6     	movff	plusw1,postinc1
  8968  0197AE  006F FF8F FFE6     	movff	plusw1,postinc1
  8969  0197B4  ECF8  F0CB         	call	_strlen	;wreg free
  8970  0197B8  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8971  0197BE  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8972                           
  8973                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  8974  0197C4  013B               	movlb	59	; () banked
  8975  0197C6  8FFC               	bsf	252,7,b	;volatile
  8976                           
  8977                           ; BSR set to: 59
  8978                           ;eadog.c: 210:  printf("%s", strPtr);
  8979                           ;stkvar	_strPtr @ sp[(0)+-2]
  8980  0197C8  0EFE               	movlw	-2
  8981  0197CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8982  0197D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8983  0197D6  0EFB               	movlw	low STR_33
  8984  0197D8  6EE6               	movwf	postinc1,c
  8985  0197DA  0EFF               	movlw	high STR_33
  8986  0197DC  6EE6               	movwf	postinc1,c
  8987  0197DE  0E04               	movlw	4
  8988  0197E0  6EE6               	movwf	postinc1,c
  8989  0197E2  ECC4  F0CF         	call	_printf	;wreg free
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;eadog.c: 211:  start_lcd();
  8993  0197E6  EC2D  F0D8         	call	_start_lcd	;wreg free
  8994                           
  8995                           ; BSR set to: 59
  8996                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8997  0197EA  52E5               	movf	postdec1,f,c
  8998  0197EC  52E5               	movf	postdec1,f,c
  8999  0197EE  0012               	return		;funcret
  9000  0197F0                     __end_of_eaDogM_WriteString:
  9001                           	opt callstack 0
  9002                           
  9003 ;; *************** function _wait_lcd_set *****************
  9004 ;; Defined at:
  9005 ;;		line 146 in file "eadog.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;		None
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1  [STACK] void 
  9012 ;; Registers used:
  9013 ;;		None
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/3D
  9016 ;;		On exit  : 3F/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9023 ;;Total ram usage:        0 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; Hardware stack levels required when called:   15
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_eaDogM_WriteString
  9030 ;;		_send_lcd_cmd_dma
  9031 ;; This function uses a reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text38
  9035  01B054                     __ptext38:
  9036                           	opt callstack 0
  9037  01B054                     _wait_lcd_set:
  9038                           	opt callstack 12
  9039                           
  9040                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9041                           
  9042                           ; BSR set to: 59
  9043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9044                           ;incstack = 0
  9045  01B054  0100               	movlb	0	; () banked
  9046  01B056  8760               	bsf	_spi_link& (0+255),3,b	;volatile
  9047                           
  9048                           ; BSR set to: 0
  9049                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9050  01B058  0012               	return		;funcret
  9051  01B05A                     __end_of_wait_lcd_set:
  9052                           	opt callstack 0
  9053                           
  9054 ;; *************** function _start_lcd *****************
  9055 ;; Defined at:
  9056 ;;		line 141 in file "eadog.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;		None
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;		None
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1  [STACK] void 
  9063 ;; Registers used:
  9064 ;;		None
  9065 ;; Tracked objects:
  9066 ;;		On entry : 3F/0
  9067 ;;		On exit  : 3F/3B
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9074 ;;Total ram usage:        0 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:   15
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_eaDogM_WriteString
  9081 ;;		_send_lcd_cmd_dma
  9082 ;; This function uses a reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text39
  9086  01B05A                     __ptext39:
  9087                           	opt callstack 0
  9088  01B05A                     _start_lcd:
  9089                           	opt callstack 12
  9090                           
  9091                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9092                           
  9093                           ; BSR set to: 0
  9094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9095                           ;incstack = 0
  9096  01B05A  013B               	movlb	59	; () banked
  9097  01B05C  8DFC               	bsf	252,6,b	;volatile
  9098                           
  9099                           ; BSR set to: 59
  9100                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9101  01B05E  0012               	return		;funcret
  9102  01B060                     __end_of_start_lcd:
  9103                           	opt callstack 0
  9104                           
  9105 ;; *************** function _ringBufS_flush *****************
  9106 ;; Defined at:
  9107 ;;		line 76 in file "ringbufs.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9110 ;;		 -> ring_buf1(67), 
  9111 ;;  clearBuffer     1  [STACK] const char 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1  [STACK] void 
  9116 ;; Registers used:
  9117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9118 ;; Tracked objects:
  9119 ;;		On entry : 3F/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:   16
  9130 ;; This function calls:
  9131 ;;		_memset
  9132 ;; This function is called by:
  9133 ;;		_eaDogM_WriteString
  9134 ;;		_send_lcd_cmd_dma
  9135 ;; This function uses a reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text40
  9139  0199BC                     __ptext40:
  9140                           	opt callstack 0
  9141  0199BC                     _ringBufS_flush:
  9142                           	opt callstack 11
  9143                           
  9144                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9145                           ;stkvar	__this @ sp[(0)+-2]
  9146                           
  9147                           ; BSR set to: 59
  9148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9149                           ;incstack = 0
  9150  0199BC  0EFE               	movlw	-2
  9151  0199BE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9152  0199C4  0EFF               	movlw	-1
  9153  0199C6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9154  0199CC  0E42               	movlw	66
  9155  0199CE  240B               	addwf	(btemp+10)^0,w,c
  9156  0199D0  6ED9               	movwf	fsr2l,c
  9157  0199D2  0E00               	movlw	0
  9158  0199D4  200C               	addwfc	(btemp+11)^0,w,c
  9159  0199D6  6EDA               	movwf	fsr2h,c
  9160  0199D8  0E00               	movlw	0
  9161  0199DA  6EDF               	movwf	indf2,c
  9162                           
  9163                           ;ringbufs.c: 79:  _this->head = 0;
  9164                           ;stkvar	__this @ sp[(0)+-2]
  9165  0199DC  0EFE               	movlw	-2
  9166  0199DE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9167  0199E4  0EFF               	movlw	-1
  9168  0199E6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9169  0199EC  0E40               	movlw	64
  9170  0199EE  240B               	addwf	(btemp+10)^0,w,c
  9171  0199F0  6ED9               	movwf	fsr2l,c
  9172  0199F2  0E00               	movlw	0
  9173  0199F4  200C               	addwfc	(btemp+11)^0,w,c
  9174  0199F6  6EDA               	movwf	fsr2h,c
  9175  0199F8  0E00               	movlw	0
  9176  0199FA  6EDF               	movwf	indf2,c
  9177                           
  9178                           ;ringbufs.c: 80:  _this->tail = 0;
  9179                           ;stkvar	__this @ sp[(0)+-2]
  9180  0199FC  0EFE               	movlw	-2
  9181  0199FE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9182  019A04  0EFF               	movlw	-1
  9183  019A06  006F FF8C  F00C    	movff	plusw1,btemp+11
  9184  019A0C  0E41               	movlw	65
  9185  019A0E  240B               	addwf	(btemp+10)^0,w,c
  9186  019A10  6ED9               	movwf	fsr2l,c
  9187  019A12  0E00               	movlw	0
  9188  019A14  200C               	addwfc	(btemp+11)^0,w,c
  9189  019A16  6EDA               	movwf	fsr2h,c
  9190  019A18  0E00               	movlw	0
  9191  019A1A  6EDF               	movwf	indf2,c
  9192                           
  9193                           ;ringbufs.c: 81:  if (clearBuffer) {
  9194                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9195  019A1C  0EFD               	movlw	-3
  9196  019A1E  50E3               	movf	plusw1,w,c
  9197  019A20  B4D8               	btfsc	status,2,c
  9198  019A22  D011               	goto	l1572
  9199                           
  9200                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9201  019A24  0E40               	movlw	64
  9202  019A26  6EE6               	movwf	postinc1,c
  9203  019A28  0E00               	movlw	0
  9204  019A2A  6EE6               	movwf	postinc1,c
  9205  019A2C  0E00               	movlw	0
  9206  019A2E  6EE6               	movwf	postinc1,c
  9207  019A30  0E00               	movlw	0
  9208  019A32  6EE6               	movwf	postinc1,c
  9209                           
  9210                           ;stkvar	__this @ sp[(-4)+-2]
  9211  019A34  0EFA               	movlw	-6
  9212  019A36  006F FF8F FFE6     	movff	plusw1,postinc1
  9213  019A3C  006F FF8F FFE6     	movff	plusw1,postinc1
  9214  019A42  EC88  F0B0         	call	_memset	;wreg free
  9215  019A46                     l1572:
  9216                           
  9217                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9218  019A46  52E5               	movf	postdec1,f,c
  9219  019A48  52E5               	movf	postdec1,f,c
  9220  019A4A  52E5               	movf	postdec1,f,c
  9221  019A4C  0012               	return		;funcret
  9222  019A4E                     __end_of_ringBufS_flush:
  9223                           	opt callstack 0
  9224                           
  9225 ;; *************** function _memset *****************
  9226 ;; Defined at:
  9227 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  dest            2  [STACK] PTR void 
  9230 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9231 ;;  c               2  [STACK] int 
  9232 ;;  n               2  [STACK] unsigned int 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  s               2  [STACK] PTR unsigned char 
  9235 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9236 ;;  k               2  [STACK] unsigned int 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  2  [STACK] PTR void 
  9239 ;; Registers used:
  9240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9250 ;;Total ram usage:        0 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:   15
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_ringBufS_init
  9257 ;;		_ringBufS_flush
  9258 ;; This function uses a reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text41
  9262  016110                     __ptext41:
  9263                           	opt callstack 0
  9264  016110                     _memset:
  9265                           	opt callstack 0
  9266                           
  9267                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9268  016110  52E6               	movf	postinc1,f,c
  9269  016112  52E6               	movf	postinc1,f,c
  9270  016114  52E6               	movf	postinc1,f,c
  9271  016116  52E6               	movf	postinc1,f,c
  9272                           
  9273                           ;stkvar	_dest @ sp[(-4)+-2]
  9274                           
  9275                           ;incstack = 0
  9276  016118  0EFA               	movlw	-6
  9277  01611A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9278  016120  0EFB               	movlw	-5
  9279  016122  006F FF8C  F00C    	movff	plusw1,btemp+11
  9280                           
  9281                           ;stkvar	_s @ sp[(-4)+0]
  9282  016128  0EFD               	movlw	-3
  9283  01612A  0060  F033  FFE3   	movff	btemp+11,plusw1
  9284  016130  0EFC               	movlw	-4
  9285  016132  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9286                           
  9287                           ;stkvar	_n @ sp[(-4)+-6]
  9288  016138  0EF6               	movlw	-10
  9289  01613A  006F FF8C  F001    	movff	plusw1,btemp
  9290  016140  0EF7               	movlw	-9
  9291  016142  50E3               	movf	plusw1,w,c
  9292  016144  1001               	iorwf	btemp^0,w,c
  9293  016146  B4D8               	btfsc	status,2,c
  9294  016148  D154               	goto	u10170
  9295                           
  9296                           ;stkvar	_c @ sp[(-4)+-4]
  9297                           ;stkvar	_s @ sp[(-4)+0]
  9298  01614A  0EFC               	movlw	-4
  9299  01614C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9300  016152  0EFD               	movlw	-3
  9301  016154  006F FF8F FFDA     	movff	plusw1,fsr2h
  9302  01615A  0EF8               	movlw	-8
  9303  01615C  006F FF8F FFDF     	movff	plusw1,indf2
  9304                           
  9305                           ;stkvar	_c @ sp[(-4)+-4]
  9306                           ;stkvar	_n @ sp[(-4)+-6]
  9307                           ;stkvar	_s @ sp[(-4)+0]
  9308  016162  0EFC               	movlw	-4
  9309  016164  006F FF8C  F00B    	movff	plusw1,btemp+10
  9310  01616A  0EFD               	movlw	-3
  9311  01616C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9312  016172  0EF6               	movlw	-10
  9313  016174  50E3               	movf	plusw1,w,c
  9314  016176  260B               	addwf	(btemp+10)^0,f,c
  9315  016178  0EF7               	movlw	-9
  9316  01617A  50E3               	movf	plusw1,w,c
  9317  01617C  220C               	addwfc	(btemp+11)^0,f,c
  9318  01617E  0EFF               	movlw	255
  9319  016180  240B               	addwf	(btemp+10)^0,w,c
  9320  016182  6ED9               	movwf	fsr2l,c
  9321  016184  0EFF               	movlw	255
  9322  016186  200C               	addwfc	(btemp+11)^0,w,c
  9323  016188  6EDA               	movwf	fsr2h,c
  9324  01618A  0EF8               	movlw	-8
  9325  01618C  006F FF8F FFDF     	movff	plusw1,indf2
  9326                           
  9327                           ;stkvar	_n @ sp[(-4)+-6]
  9328  016192  0EF7               	movlw	-9
  9329  016194  50E3               	movf	plusw1,w,c
  9330  016196  E108               	bnz	l11152
  9331  016198  0EF6               	movlw	-10
  9332  01619A  006F FF8C  F001    	movff	plusw1,btemp
  9333  0161A0  0E03               	movlw	3
  9334  0161A2  5E01               	subwf	btemp^0,f,c
  9335  0161A4  A0D8               	btfss	status,0,c
  9336  0161A6  D125               	goto	u10170
  9337  0161A8                     l11152:
  9338                           
  9339                           ;stkvar	_c @ sp[(-4)+-4]
  9340                           ;stkvar	_s @ sp[(-4)+0]
  9341  0161A8  0EFC               	movlw	-4
  9342  0161AA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9343  0161B0  0EFD               	movlw	-3
  9344  0161B2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9345  0161B8  0E01               	movlw	1
  9346  0161BA  240B               	addwf	(btemp+10)^0,w,c
  9347  0161BC  6ED9               	movwf	fsr2l,c
  9348  0161BE  0E00               	movlw	0
  9349  0161C0  200C               	addwfc	(btemp+11)^0,w,c
  9350  0161C2  6EDA               	movwf	fsr2h,c
  9351  0161C4  0EF8               	movlw	-8
  9352  0161C6  006F FF8F FFDF     	movff	plusw1,indf2
  9353                           
  9354                           ;stkvar	_c @ sp[(-4)+-4]
  9355                           ;stkvar	_s @ sp[(-4)+0]
  9356  0161CC  0EFC               	movlw	-4
  9357  0161CE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9358  0161D4  0EFD               	movlw	-3
  9359  0161D6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9360  0161DC  0E02               	movlw	2
  9361  0161DE  240B               	addwf	(btemp+10)^0,w,c
  9362  0161E0  6ED9               	movwf	fsr2l,c
  9363  0161E2  0E00               	movlw	0
  9364  0161E4  200C               	addwfc	(btemp+11)^0,w,c
  9365  0161E6  6EDA               	movwf	fsr2h,c
  9366  0161E8  0EF8               	movlw	-8
  9367  0161EA  006F FF8F FFDF     	movff	plusw1,indf2
  9368                           
  9369                           ;stkvar	_c @ sp[(-4)+-4]
  9370                           ;stkvar	_n @ sp[(-4)+-6]
  9371                           ;stkvar	_s @ sp[(-4)+0]
  9372  0161F0  0EFC               	movlw	-4
  9373  0161F2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9374  0161F8  0EFD               	movlw	-3
  9375  0161FA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9376  016200  0EF6               	movlw	-10
  9377  016202  50E3               	movf	plusw1,w,c
  9378  016204  260B               	addwf	(btemp+10)^0,f,c
  9379  016206  0EF7               	movlw	-9
  9380  016208  50E3               	movf	plusw1,w,c
  9381  01620A  220C               	addwfc	(btemp+11)^0,f,c
  9382  01620C  0EFE               	movlw	254
  9383  01620E  240B               	addwf	(btemp+10)^0,w,c
  9384  016210  6ED9               	movwf	fsr2l,c
  9385  016212  0EFF               	movlw	255
  9386  016214  200C               	addwfc	(btemp+11)^0,w,c
  9387  016216  6EDA               	movwf	fsr2h,c
  9388  016218  0EF8               	movlw	-8
  9389  01621A  006F FF8F FFDF     	movff	plusw1,indf2
  9390                           
  9391                           ;stkvar	_c @ sp[(-4)+-4]
  9392                           ;stkvar	_n @ sp[(-4)+-6]
  9393                           ;stkvar	_s @ sp[(-4)+0]
  9394  016220  0EFC               	movlw	-4
  9395  016222  006F FF8C  F00B    	movff	plusw1,btemp+10
  9396  016228  0EFD               	movlw	-3
  9397  01622A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9398  016230  0EF6               	movlw	-10
  9399  016232  50E3               	movf	plusw1,w,c
  9400  016234  260B               	addwf	(btemp+10)^0,f,c
  9401  016236  0EF7               	movlw	-9
  9402  016238  50E3               	movf	plusw1,w,c
  9403  01623A  220C               	addwfc	(btemp+11)^0,f,c
  9404  01623C  0EFD               	movlw	253
  9405  01623E  240B               	addwf	(btemp+10)^0,w,c
  9406  016240  6ED9               	movwf	fsr2l,c
  9407  016242  0EFF               	movlw	255
  9408  016244  200C               	addwfc	(btemp+11)^0,w,c
  9409  016246  6EDA               	movwf	fsr2h,c
  9410  016248  0EF8               	movlw	-8
  9411  01624A  006F FF8F FFDF     	movff	plusw1,indf2
  9412                           
  9413                           ;stkvar	_n @ sp[(-4)+-6]
  9414  016250  0EF7               	movlw	-9
  9415  016252  50E3               	movf	plusw1,w,c
  9416  016254  E108               	bnz	l11158
  9417  016256  0EF6               	movlw	-10
  9418  016258  006F FF8C  F001    	movff	plusw1,btemp
  9419  01625E  0E07               	movlw	7
  9420  016260  5E01               	subwf	btemp^0,f,c
  9421  016262  A0D8               	btfss	status,0,c
  9422  016264  D0C6               	goto	u10170
  9423  016266                     l11158:
  9424                           
  9425                           ;stkvar	_c @ sp[(-4)+-4]
  9426                           ;stkvar	_s @ sp[(-4)+0]
  9427  016266  0EFC               	movlw	-4
  9428  016268  006F FF8C  F00B    	movff	plusw1,btemp+10
  9429  01626E  0EFD               	movlw	-3
  9430  016270  006F FF8C  F00C    	movff	plusw1,btemp+11
  9431  016276  0E03               	movlw	3
  9432  016278  240B               	addwf	(btemp+10)^0,w,c
  9433  01627A  6ED9               	movwf	fsr2l,c
  9434  01627C  0E00               	movlw	0
  9435  01627E  200C               	addwfc	(btemp+11)^0,w,c
  9436  016280  6EDA               	movwf	fsr2h,c
  9437  016282  0EF8               	movlw	-8
  9438  016284  006F FF8F FFDF     	movff	plusw1,indf2
  9439                           
  9440                           ;stkvar	_c @ sp[(-4)+-4]
  9441                           ;stkvar	_n @ sp[(-4)+-6]
  9442                           ;stkvar	_s @ sp[(-4)+0]
  9443  01628A  0EFC               	movlw	-4
  9444  01628C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9445  016292  0EFD               	movlw	-3
  9446  016294  006F FF8C  F00C    	movff	plusw1,btemp+11
  9447  01629A  0EF6               	movlw	-10
  9448  01629C  50E3               	movf	plusw1,w,c
  9449  01629E  260B               	addwf	(btemp+10)^0,f,c
  9450  0162A0  0EF7               	movlw	-9
  9451  0162A2  50E3               	movf	plusw1,w,c
  9452  0162A4  220C               	addwfc	(btemp+11)^0,f,c
  9453  0162A6  0EFC               	movlw	252
  9454  0162A8  240B               	addwf	(btemp+10)^0,w,c
  9455  0162AA  6ED9               	movwf	fsr2l,c
  9456  0162AC  0EFF               	movlw	255
  9457  0162AE  200C               	addwfc	(btemp+11)^0,w,c
  9458  0162B0  6EDA               	movwf	fsr2h,c
  9459  0162B2  0EF8               	movlw	-8
  9460  0162B4  006F FF8F FFDF     	movff	plusw1,indf2
  9461                           
  9462                           ;stkvar	_n @ sp[(-4)+-6]
  9463  0162BA  0EF7               	movlw	-9
  9464  0162BC  50E3               	movf	plusw1,w,c
  9465  0162BE  E108               	bnz	l11164
  9466  0162C0  0EF6               	movlw	-10
  9467  0162C2  006F FF8C  F001    	movff	plusw1,btemp
  9468  0162C8  0E09               	movlw	9
  9469  0162CA  5E01               	subwf	btemp^0,f,c
  9470  0162CC  A0D8               	btfss	status,0,c
  9471  0162CE  D091               	goto	u10170
  9472  0162D0                     l11164:
  9473                           
  9474                           ;stkvar	_s @ sp[(-4)+0]
  9475  0162D0  0EFC               	movlw	-4
  9476  0162D2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9477  0162D8  1E0B               	comf	(btemp+10)^0,f,c
  9478  0162DA  0EFD               	movlw	-3
  9479  0162DC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9480  0162E2  1E0C               	comf	(btemp+11)^0,f,c
  9481  0162E4  2A0B               	incf	(btemp+10)^0,f,c
  9482  0162E6  B4D8               	btfsc	status,2,c
  9483  0162E8  2A0C               	incf	(btemp+11)^0,f,c
  9484  0162EA  0E03               	movlw	3
  9485  0162EC  160B               	andwf	(btemp+10)^0,f,c
  9486  0162EE  0E00               	movlw	0
  9487  0162F0  160C               	andwf	(btemp+11)^0,f,c
  9488                           
  9489                           ;stkvar	_k @ sp[(-4)+2]
  9490  0162F2  0EFE               	movlw	-2
  9491  0162F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9492  0162FA  0EFF               	movlw	-1
  9493  0162FC  0060  F033  FFE3   	movff	btemp+11,plusw1
  9494                           
  9495                           ;stkvar	_k @ sp[(-4)+2]
  9496                           ;stkvar	_s @ sp[(-4)+0]
  9497  016302  0EFC               	movlw	-4
  9498  016304  50E3               	movf	plusw1,w,c
  9499  016306  6E01               	movwf	btemp^0,c
  9500  016308  0EFE               	movlw	-2
  9501  01630A  50E3               	movf	plusw1,w,c
  9502  01630C  2601               	addwf	btemp^0,f,c
  9503  01630E  0EFC               	movlw	-4
  9504  016310  0060  F007  FFE3   	movff	btemp,plusw1
  9505  016316  0EFD               	movlw	-3
  9506  016318  50E3               	movf	plusw1,w,c
  9507  01631A  6E01               	movwf	btemp^0,c
  9508  01631C  0EFF               	movlw	-1
  9509  01631E  50E3               	movf	plusw1,w,c
  9510  016320  2201               	addwfc	btemp^0,f,c
  9511  016322  0EFD               	movlw	-3
  9512  016324  0060  F007  FFE3   	movff	btemp,plusw1
  9513                           
  9514                           ;stkvar	_k @ sp[(-4)+2]
  9515                           ;stkvar	_n @ sp[(-4)+-6]
  9516  01632A  0EF6               	movlw	-10
  9517  01632C  50E3               	movf	plusw1,w,c
  9518  01632E  6E01               	movwf	btemp^0,c
  9519  016330  0EFE               	movlw	-2
  9520  016332  50E3               	movf	plusw1,w,c
  9521  016334  5E01               	subwf	btemp^0,f,c
  9522  016336  0EF6               	movlw	-10
  9523  016338  0060  F007  FFE3   	movff	btemp,plusw1
  9524  01633E  0EF7               	movlw	-9
  9525  016340  50E3               	movf	plusw1,w,c
  9526  016342  6E01               	movwf	btemp^0,c
  9527  016344  0EFF               	movlw	-1
  9528  016346  50E3               	movf	plusw1,w,c
  9529  016348  5A01               	subwfb	btemp^0,f,c
  9530  01634A  0EF7               	movlw	-9
  9531  01634C  0060  F007  FFE3   	movff	btemp,plusw1
  9532  016352  0EFC               	movlw	252
  9533  016354  6E0B               	movwf	(btemp+10)^0,c
  9534  016356  0EFF               	movlw	255
  9535  016358  6E0C               	movwf	(btemp+11)^0,c
  9536                           
  9537                           ;stkvar	_n @ sp[(-4)+-6]
  9538  01635A  0EF6               	movlw	-10
  9539  01635C  006F FF8C  F001    	movff	plusw1,btemp
  9540  016362  500B               	movf	(btemp+10)^0,w,c
  9541  016364  1601               	andwf	btemp^0,f,c
  9542  016366  0EF6               	movlw	-10
  9543  016368  0060  F007  FFE3   	movff	btemp,plusw1
  9544  01636E  0EF7               	movlw	-9
  9545  016370  006F FF8C  F001    	movff	plusw1,btemp
  9546  016376  500C               	movf	(btemp+11)^0,w,c
  9547  016378  1601               	andwf	btemp^0,f,c
  9548  01637A  0EF7               	movlw	-9
  9549  01637C  D02E               	goto	L4
  9550  01637E                     l11172:
  9551                           
  9552                           ;stkvar	_c @ sp[(-4)+-4]
  9553                           ;stkvar	_s @ sp[(-4)+0]
  9554  01637E  0EFC               	movlw	-4
  9555  016380  006F FF8F FFD9     	movff	plusw1,fsr2l
  9556  016386  0EFD               	movlw	-3
  9557  016388  006F FF8F FFDA     	movff	plusw1,fsr2h
  9558  01638E  0EF8               	movlw	-8
  9559  016390  006F FF8F FFDF     	movff	plusw1,indf2
  9560                           
  9561                           ;stkvar	_n @ sp[(-4)+-6]
  9562  016396  0EF6               	movlw	-10
  9563  016398  006F FF8C  F001    	movff	plusw1,btemp
  9564  01639E  0E01               	movlw	1
  9565  0163A0  5E01               	subwf	btemp^0,f,c
  9566  0163A2  0EF6               	movlw	-10
  9567  0163A4  0060  F007  FFE3   	movff	btemp,plusw1
  9568  0163AA  0EF7               	movlw	-9
  9569  0163AC  006F FF8C  F001    	movff	plusw1,btemp
  9570  0163B2  0E00               	movlw	0
  9571  0163B4  5A01               	subwfb	btemp^0,f,c
  9572  0163B6  0EF7               	movlw	-9
  9573  0163B8  0060  F007  FFE3   	movff	btemp,plusw1
  9574                           
  9575                           ;stkvar	_s @ sp[(-4)+0]
  9576  0163BE  0EFC               	movlw	-4
  9577  0163C0  50E3               	movf	plusw1,w,c
  9578  0163C2  0F01               	addlw	1
  9579  0163C4  6E01               	movwf	btemp^0,c
  9580  0163C6  0EFC               	movlw	-4
  9581  0163C8  0060  F007  FFE3   	movff	btemp,plusw1
  9582  0163CE  6A01               	clrf	btemp^0,c
  9583  0163D0  0EFD               	movlw	-3
  9584  0163D2  50E3               	movf	plusw1,w,c
  9585  0163D4  2001               	addwfc	btemp^0,w,c
  9586  0163D6  6E01               	movwf	btemp^0,c
  9587  0163D8  0EFD               	movlw	-3
  9588  0163DA                     L4:
  9589  0163DA  0060  F007  FFE3   	movff	btemp,plusw1
  9590                           
  9591                           ;stkvar	_n @ sp[(-4)+-6]
  9592  0163E0  0EF6               	movlw	-10
  9593  0163E2  006F FF8C  F001    	movff	plusw1,btemp
  9594  0163E8  0EF7               	movlw	-9
  9595  0163EA  50E3               	movf	plusw1,w,c
  9596  0163EC  1001               	iorwf	btemp^0,w,c
  9597  0163EE  A4D8               	btfss	status,2,c
  9598  0163F0  D7C6               	goto	l11172
  9599  0163F2                     u10170:
  9600                           
  9601                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9602  0163F2  0EF6               	movlw	246
  9603  0163F4  26E1               	addwf	fsr1l,f,c
  9604  0163F6  0EFF               	movlw	255
  9605  0163F8  22E2               	addwfc	fsr1h,f,c
  9606  0163FA  0012               	return		;funcret
  9607  0163FC                     __end_of_memset:
  9608                           	opt callstack 0
  9609                           
  9610 ;; *************** function _printf *****************
  9611 ;; Defined at:
  9612 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;  fmt             2  [STACK] PTR const unsigned char 
  9615 ;;		 -> STR_35(3), STR_34(3), STR_33(3), 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  ap              2  [STACK] PTR void [1]
  9618 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9619 ;;  ret             2    0        int 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  2  [STACK] int 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9624 ;; Tracked objects:
  9625 ;;		On entry : 3F/3B
  9626 ;;		On exit  : 3F/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9633 ;;Total ram usage:        0 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:   23
  9636 ;; This function calls:
  9637 ;;		_vfprintf
  9638 ;; This function is called by:
  9639 ;;		_eaDogM_WriteString
  9640 ;;		_send_lcd_cmd_dma
  9641 ;; This function uses a reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text42
  9645  019F88                     __ptext42:
  9646                           	opt callstack 0
  9647  019F88                     _printf:
  9648                           	opt callstack 0
  9649                           
  9650                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9651  019F88  52E6               	movf	postinc1,f,c
  9652  019F8A  52E6               	movf	postinc1,f,c
  9653                           
  9654                           ;stkvar	?_printf @ sp[(-2)+-3]
  9655                           
  9656                           ;incstack = 0
  9657  019F8C  0EFB               	movlw	251
  9658  019F8E  24E1               	addwf	fsr1l,w,c
  9659  019F90  6E0B               	movwf	(btemp+10)^0,c
  9660  019F92  0EFF               	movlw	255
  9661  019F94  20E2               	addwfc	fsr1h,w,c
  9662  019F96  6E0C               	movwf	(btemp+11)^0,c
  9663                           
  9664                           ;stkvar	_ap @ sp[(-2)+0]
  9665  019F98  0EFF               	movlw	-1
  9666  019F9A  0060  F033  FFE3   	movff	btemp+11,plusw1
  9667  019FA0  0EFE               	movlw	-2
  9668  019FA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9669                           
  9670                           ;stkvar	_ap @ sp[(-2)+0]
  9671  019FA8  0EFE               	movlw	254
  9672  019FAA  24E1               	addwf	fsr1l,w,c
  9673  019FAC  6E01               	movwf	btemp^0,c
  9674  019FAE  0EFF               	movlw	255
  9675  019FB0  20E2               	addwfc	fsr1h,w,c
  9676  019FB2  6E02               	movwf	(btemp+1)^0,c
  9677  019FB4  0060  F007  FFE6   	movff	btemp,postinc1
  9678  019FBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9679                           
  9680                           ;stkvar	_fmt @ sp[(-4)+-3]
  9681  019FC0  0EF9               	movlw	-7
  9682  019FC2  006F FF8F FFE6     	movff	plusw1,postinc1
  9683  019FC8  006F FF8F FFE6     	movff	plusw1,postinc1
  9684  019FCE  0E00               	movlw	0
  9685  019FD0  6EE6               	movwf	postinc1,c
  9686  019FD2  0E00               	movlw	0
  9687  019FD4  6EE6               	movwf	postinc1,c
  9688  019FD6  ECFA  F0CA         	call	_vfprintf	;wreg free
  9689                           
  9690                           ; BSR set to: 0
  9691                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9692  019FDA  52E5               	movf	postdec1,f,c
  9693  019FDC  52E5               	movf	postdec1,f,c
  9694  019FDE  52E5               	movf	postdec1,f,c
  9695  019FE0  50E7               	movf	indf1,w,c
  9696  019FE2  5EE1               	subwf	fsr1l,f,c
  9697  019FE4  0E00               	movlw	0
  9698  019FE6  5AE2               	subwfb	fsr1h,f,c
  9699  019FE8  0012               	return		;funcret
  9700  019FEA                     __end_of_printf:
  9701                           	opt callstack 0
  9702                           
  9703 ;; *************** function _vfprintf *****************
  9704 ;; Defined at:
  9705 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9708 ;;		 -> f(6), NULL(0), 
  9709 ;;  fmt             2  [STACK] PTR const unsigned char 
  9710 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
  9711 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
  9712 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
  9713 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
  9714 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
  9715 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(19), 
  9716 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
  9717 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
  9718 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
  9719 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
  9720 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(22), 
  9721 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
  9722 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  9723 ;;  ap              2  [STACK] PTR PTR void 
  9724 ;;		 -> ap(2), ap(2), 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;  cfmt            2  [STACK] PTR unsigned char 
  9727 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
  9728 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
  9729 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
  9730 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
  9731 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
  9732 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(19), 
  9733 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
  9734 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
  9735 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
  9736 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
  9737 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(22), 
  9738 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
  9739 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  2  [STACK] int 
  9742 ;; Registers used:
  9743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 3F/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9753 ;;Total ram usage:        0 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:   22
  9756 ;; This function calls:
  9757 ;;		_vfpfcnvrt
  9758 ;; This function is called by:
  9759 ;;		_sprintf
  9760 ;;		_printf
  9761 ;; This function uses a reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text43
  9765  0195F4                     __ptext43:
  9766                           	opt callstack 0
  9767  0195F4                     _vfprintf:
  9768                           	opt callstack 0
  9769                           
  9770                           ; BSR set to: 0
  9771                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9772  0195F4  52E6               	movf	postinc1,f,c
  9773  0195F6  52E6               	movf	postinc1,f,c
  9774                           
  9775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9776                           ;stkvar	_fmt @ sp[(-2)+-4]
  9777                           
  9778                           ;incstack = 0
  9779 ;; hardware stack exceeded
  9780  0195F8  0EFA               	movlw	-6
  9781  0195FA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9782  019600  0EFB               	movlw	-5
  9783  019602  006F FF8C  F00C    	movff	plusw1,btemp+11
  9784                           
  9785                           ;stkvar	_cfmt @ sp[(-2)+0]
  9786  019608  0EFF               	movlw	-1
  9787  01960A  0060  F033  FFE3   	movff	btemp+11,plusw1
  9788  019610  0EFE               	movlw	-2
  9789  019612  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9790                           
  9791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9792  019618  0100               	movlb	0	; () banked
  9793  01961A  6BBA               	clrf	_nout& (0+255),b
  9794  01961C  6BBB               	clrf	(_nout+1)& (0+255),b
  9795                           
  9796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9797  01961E  D021               	goto	l11996
  9798  019620                     l11994:
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9802                           ;stkvar	_ap @ sp[(-2)+-6]
  9803  019620  0EF8               	movlw	-8
  9804  019622  006F FF8F FFE6     	movff	plusw1,postinc1
  9805  019628  006F FF8F FFE6     	movff	plusw1,postinc1
  9806                           
  9807                           ;stkvar	_cfmt @ sp[(-4)+0]
  9808  01962E  0EFC               	movlw	252
  9809  019630  24E1               	addwf	fsr1l,w,c
  9810  019632  6E01               	movwf	btemp^0,c
  9811  019634  0EFF               	movlw	255
  9812  019636  20E2               	addwfc	fsr1h,w,c
  9813  019638  6E02               	movwf	(btemp+1)^0,c
  9814  01963A  0060  F007  FFE6   	movff	btemp,postinc1
  9815  019640  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9816                           
  9817                           ;stkvar	_fp @ sp[(-6)+-2]
  9818  019646  0EF8               	movlw	-8
  9819  019648  006F FF8F FFE6     	movff	plusw1,postinc1
  9820  01964E  006F FF8F FFE6     	movff	plusw1,postinc1
  9821  019654  EC22  F089         	call	_vfpfcnvrt	;wreg free
  9822  019658  5001               	movf	btemp^0,w,c
  9823  01965A  0100               	movlb	0	; () banked
  9824  01965C  27BA               	addwf	_nout& (0+255),f,b
  9825  01965E  5002               	movf	(btemp+1)^0,w,c
  9826  019660  23BB               	addwfc	(_nout+1)& (0+255),f,b
  9827  019662                     l11996:
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9831                           ;stkvar	_cfmt @ sp[(-2)+0]
  9832  019662  50E1               	movf	fsr1l,w,c
  9833  019664  0FFE               	addlw	-2
  9834  019666  6ED9               	movwf	fsr2l,c
  9835  019668  50E2               	movf	fsr1h,w,c
  9836  01966A  6EDA               	movwf	fsr2h,c
  9837  01966C  0EFF               	movlw	255
  9838  01966E  22DA               	addwfc	fsr2h,f,c
  9839  019670  006F FF7B FFF6     	movff	postinc2,tblptrl
  9840  019676  006F FF77 FFF7     	movff	postdec2,tblptrh
  9841  01967C                     	if	0	;tblptru may be non-zero
  9842  01967C                     	endif
  9843  01967C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9844  01967C  0E00               	movlw	low (__mediumconst shr (0+16))
  9845  01967E  6EF8               	movwf	tblptru,c
  9846  019680                     	endif
  9847  019680  0008               	tblrd		*
  9848  019682  50F5               	movf	tablat,w,c
  9849  019684  0900               	iorlw	0
  9850  019686  A4D8               	btfss	status,2,c
  9851  019688  D7CB               	goto	l11994
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9855  01968A  0060  F2E8  F001   	movff	_nout,btemp
  9856  019690  0060  F2EC  F002   	movff	_nout+1,btemp+1
  9857                           
  9858                           ; BSR set to: 0
  9859                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  9860  019696  0EF8               	movlw	248
  9861  019698  26E1               	addwf	fsr1l,f,c
  9862  01969A  0EFF               	movlw	255
  9863  01969C  22E2               	addwfc	fsr1h,f,c
  9864  01969E  0012               	return		;funcret
  9865  0196A0                     __end_of_vfprintf:
  9866                           	opt callstack 0
  9867                           
  9868 ;; *************** function _vfpfcnvrt *****************
  9869 ;; Defined at:
  9870 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9873 ;;		 -> f(6), NULL(0), 
  9874 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9875 ;;		 -> cfmt(2), 
  9876 ;;  ap              2  [STACK] PTR PTR void 
  9877 ;;		 -> ap(2), ap(2), 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;  llu             8  [STACK] unsigned long long 
  9880 ;;  ll              8  [STACK] long long 
  9881 ;;  f               4  [STACK] long long 
  9882 ;;  ct              3  [STACK] unsigned char [3]
  9883 ;;  vp              3    0        PTR void 
  9884 ;;  cp              2  [STACK] PTR unsigned char 
  9885 ;;		 -> ?_printf(2), ?_sprintf(2), STR_37(9), STR_36(12), 
  9886 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
  9887 ;;		 -> V(188), 
  9888 ;;  i               2    0        int 
  9889 ;;  done            2    0        int 
  9890 ;;  c               1  [STACK] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  2  [STACK] int 
  9893 ;; Registers used:
  9894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9904 ;;Total ram usage:        0 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   21
  9907 ;; This function calls:
  9908 ;;		_atoi
  9909 ;;		_ctoa
  9910 ;;		_dtoa
  9911 ;;		_efgtoa
  9912 ;;		_fputc
  9913 ;;		_isdigit
  9914 ;;		_isupper
  9915 ;;		_stoa
  9916 ;;		_strncmp
  9917 ;;		_tolower
  9918 ;;		_utoa
  9919 ;;		_xtoa
  9920 ;; This function is called by:
  9921 ;;		_vfprintf
  9922 ;; This function uses a reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text44
  9926  011244                     __ptext44:
  9927                           	opt callstack 0
  9928  011244                     _vfpfcnvrt:
  9929                           	opt callstack 0
  9930                           
  9931                           ; BSR set to: 0
  9932                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9933  011244  0E20               	movlw	32
  9934  011246  26E1               	addwf	fsr1l,f,c
  9935  011248  0E00               	movlw	0
  9936  01124A  22E2               	addwfc	fsr1h,f,c
  9937                           
  9938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9939                           ;stkvar	_fmt @ sp[(-32)+-4]
  9940                           
  9941                           ;incstack = 0
  9942 ;; hardware stack exceeded
  9943  01124C  0EDC               	movlw	-36
  9944  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9945  011254  0EDD               	movlw	-35
  9946  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9947  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9948  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9949  011268                     	if	0	;tblptru may be non-zero
  9950  011268                     	endif
  9951  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9952  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9953  01126A  6EF8               	movwf	tblptru,c
  9954  01126C                     	endif
  9955  01126C  0008               	tblrd		*
  9956  01126E  50F5               	movf	tablat,w,c
  9957  011270  0A25               	xorlw	37
  9958  011272  A4D8               	btfss	status,2,c
  9959  011274  EFC9  F090         	goto	l11940
  9960                           
  9961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9962                           ;stkvar	_fmt @ sp[(-32)+-4]
  9963  011278  0EDC               	movlw	-36
  9964  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9965  011280  0EDD               	movlw	-35
  9966  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9967  011288  2ADE               	incf	postinc2,f,c
  9968  01128A  0E00               	movlw	0
  9969  01128C  22DD               	addwfc	postdec2,f,c
  9970                           
  9971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9972  01128E  6A21               	clrf	_width^0,c
  9973  011290  6A22               	clrf	(_width+1)^0,c
  9974  011292  6A25               	clrf	_flags^0,c
  9975  011294  6A26               	clrf	(_flags+1)^0,c
  9976                           
  9977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9978  011296  6823               	setf	_prec^0,c
  9979  011298  6824               	setf	(_prec+1)^0,c
  9980                           
  9981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9982                           ;stkvar	_fmt @ sp[(-32)+-4]
  9983  01129A  0EDC               	movlw	-36
  9984  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9985  0112A2  0EDD               	movlw	-35
  9986  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9987  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9988  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9989  0112B6                     	if	0	;tblptru may be non-zero
  9990  0112B6                     	endif
  9991  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9992  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9993  0112B8  6EF8               	movwf	tblptru,c
  9994  0112BA                     	endif
  9995  0112BA  0008               	tblrd		*
  9996  0112BC  50F5               	movf	tablat,w,c
  9997  0112BE  0A2A               	xorlw	42
  9998  0112C0  A4D8               	btfss	status,2,c
  9999  0112C2  D031               	goto	l11758
 10000                           
 10001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 10002                           ;stkvar	_fmt @ sp[(-32)+-4]
 10003  0112C4  0EDC               	movlw	-36
 10004  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10005  0112CC  0EDD               	movlw	-35
 10006  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10007  0112D4  2ADE               	incf	postinc2,f,c
 10008  0112D6  0E00               	movlw	0
 10009  0112D8  22DD               	addwfc	postdec2,f,c
 10010                           
 10011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10012                           ;stkvar	_ap @ sp[(-32)+-6]
 10013  0112DA  0EDA               	movlw	-38
 10014  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10015  0112E2  0EDB               	movlw	-37
 10016  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10017  0112EA  0E02               	movlw	2
 10018  0112EC  5EDE               	subwf	postinc2,f,c
 10019  0112EE  0E00               	movlw	0
 10020  0112F0  5ADD               	subwfb	postdec2,f,c
 10021  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
 10022  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
 10023  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10024  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10025  01130A  006F FF78  F021    	movff	postinc2,_width
 10026  011310  006F FF74  F022    	movff	postdec2,_width+1
 10027                           
 10028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 10029  011316  AE22               	btfss	(_width+1)^0,7,c
 10030  011318  D066               	goto	u11300
 10031                           
 10032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10033  01131A  8025               	bsf	_flags^0,0,c
 10034                           
 10035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10036  01131C  6C21               	negf	_width^0,c
 10037  01131E  1E22               	comf	(_width+1)^0,f,c
 10038  011320  B0D8               	btfsc	status,0,c
 10039  011322  2A22               	incf	(_width+1)^0,f,c
 10040  011324  D060               	goto	u11300
 10041  011326                     l11758:
 10042                           
 10043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10044                           ;stkvar	_fmt @ sp[(-32)+-4]
 10045  011326  0EDC               	movlw	-36
 10046  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10047  01132E  0EDD               	movlw	-35
 10048  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10049  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10050  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10051  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10052  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10053  01134E  EC9D  F0B4         	call	_atoi	;wreg free
 10054  011352  0060  F004  F021   	movff	btemp,_width
 10055  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10056                           
 10057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10058  01135E  D00B               	goto	l11762
 10059  011360                     l11760:
 10060                           
 10061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10062                           ;stkvar	_fmt @ sp[(-32)+-4]
 10063  011360  0EDC               	movlw	-36
 10064  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10065  011368  0EDD               	movlw	-35
 10066  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10067  011370  2ADE               	incf	postinc2,f,c
 10068  011372  0E00               	movlw	0
 10069  011374  22DD               	addwfc	postdec2,f,c
 10070  011376                     l11762:
 10071  011376  0ED0               	movlw	208
 10072  011378  6E0B               	movwf	(btemp+10)^0,c
 10073  01137A  0EFF               	movlw	255
 10074  01137C  6E0C               	movwf	(btemp+11)^0,c
 10075                           
 10076                           ;stkvar	_fmt @ sp[(-32)+-4]
 10077  01137E  0EDC               	movlw	-36
 10078  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10079  011386  0EDD               	movlw	-35
 10080  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10081  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10082  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10083  01139A                     	if	0	;tblptru may be non-zero
 10084  01139A                     	endif
 10085  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10086  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10087  01139C  6EF8               	movwf	tblptru,c
 10088  01139E                     	endif
 10089  01139E  0008               	tblrd		*
 10090  0113A0  50F5               	movf	tablat,w,c
 10091  0113A2  6E09               	movwf	(btemp+8)^0,c
 10092  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10093  0113A6  500B               	movf	(btemp+10)^0,w,c
 10094  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10095  0113AA  500C               	movf	(btemp+11)^0,w,c
 10096  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10097  0113AE  500A               	movf	(btemp+9)^0,w,c
 10098  0113B0  E106               	bnz	u11280
 10099  0113B2  0E0A               	movlw	10
 10100  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10101  0113B6  B0D8               	btfsc	status,0,c
 10102  0113B8  D002               	goto	u11280
 10103  0113BA  0E01               	movlw	1
 10104  0113BC  D001               	goto	u11290
 10105  0113BE                     u11280:
 10106  0113BE  0E00               	movlw	0
 10107  0113C0                     u11290:
 10108  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10109  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10110                           
 10111                           ;stkvar	_vfpfcnvrt$5338 @ sp[(-32)+4]
 10112  0113C4  0EE4               	movlw	-28
 10113  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10114  0113CC  0EE5               	movlw	-27
 10115  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10116                           
 10117                           ;stkvar	_vfpfcnvrt$5338 @ sp[(-32)+4]
 10118  0113D4  0EE4               	movlw	-28
 10119  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10120  0113DC  0EE5               	movlw	-27
 10121  0113DE  50E3               	movf	plusw1,w,c
 10122  0113E0  1001               	iorwf	btemp^0,w,c
 10123  0113E2  A4D8               	btfss	status,2,c
 10124  0113E4  D7BD               	goto	l11760
 10125  0113E6                     u11300:
 10126                           
 10127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10128                           ;stkvar	_fmt @ sp[(-32)+-4]
 10129  0113E6  0EDC               	movlw	-36
 10130  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10131  0113EE  0EDD               	movlw	-35
 10132  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10133  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10134  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10135  011402                     	if	0	;tblptru may be non-zero
 10136  011402                     	endif
 10137  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10138  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10139  011404  6EF8               	movwf	tblptru,c
 10140  011406                     	endif
 10141  011406  0008               	tblrd		*
 10142  011408  50F5               	movf	tablat,w,c
 10143  01140A  0A2E               	xorlw	46
 10144  01140C  A4D8               	btfss	status,2,c
 10145  01140E  D0AC               	goto	u11350
 10146                           
 10147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10148  011410  6A23               	clrf	_prec^0,c
 10149  011412  6A24               	clrf	(_prec+1)^0,c
 10150                           
 10151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10152                           ;stkvar	_fmt @ sp[(-32)+-4]
 10153  011414  0EDC               	movlw	-36
 10154  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10155  01141C  0EDD               	movlw	-35
 10156  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10157  011424  2ADE               	incf	postinc2,f,c
 10158  011426  0E00               	movlw	0
 10159  011428  22DD               	addwfc	postdec2,f,c
 10160                           
 10161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10162                           ;stkvar	_fmt @ sp[(-32)+-4]
 10163  01142A  0EDC               	movlw	-36
 10164  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10165  011432  0EDD               	movlw	-35
 10166  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10167  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10168  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10169  011446                     	if	0	;tblptru may be non-zero
 10170  011446                     	endif
 10171  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10172  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10173  011448  6EF8               	movwf	tblptru,c
 10174  01144A                     	endif
 10175  01144A  0008               	tblrd		*
 10176  01144C  50F5               	movf	tablat,w,c
 10177  01144E  0A2A               	xorlw	42
 10178  011450  A4D8               	btfss	status,2,c
 10179  011452  D02A               	goto	l11780
 10180                           
 10181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10182                           ;stkvar	_fmt @ sp[(-32)+-4]
 10183  011454  0EDC               	movlw	-36
 10184  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10185  01145C  0EDD               	movlw	-35
 10186  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10187  011464  2ADE               	incf	postinc2,f,c
 10188  011466  0E00               	movlw	0
 10189  011468  22DD               	addwfc	postdec2,f,c
 10190                           
 10191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10192                           ;stkvar	_ap @ sp[(-32)+-6]
 10193  01146A  0EDA               	movlw	-38
 10194  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10195  011472  0EDB               	movlw	-37
 10196  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10197  01147A  0E02               	movlw	2
 10198  01147C  5EDE               	subwf	postinc2,f,c
 10199  01147E  0E00               	movlw	0
 10200  011480  5ADD               	subwfb	postdec2,f,c
 10201  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10202  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10203  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10204  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10205  01149A  006F FF78  F023    	movff	postinc2,_prec
 10206  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10207                           
 10208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10209  0114A6  D060               	goto	u11350
 10210  0114A8                     l11780:
 10211                           
 10212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10213                           ;stkvar	_fmt @ sp[(-32)+-4]
 10214  0114A8  0EDC               	movlw	-36
 10215  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10216  0114B0  0EDD               	movlw	-35
 10217  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10218  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10219  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10220  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10221  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10222  0114D0  EC9D  F0B4         	call	_atoi	;wreg free
 10223  0114D4  0060  F004  F023   	movff	btemp,_prec
 10224  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10225                           
 10226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10227  0114E0  D00B               	goto	l11784
 10228  0114E2                     l11782:
 10229                           
 10230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10231                           ;stkvar	_fmt @ sp[(-32)+-4]
 10232  0114E2  0EDC               	movlw	-36
 10233  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10234  0114EA  0EDD               	movlw	-35
 10235  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10236  0114F2  2ADE               	incf	postinc2,f,c
 10237  0114F4  0E00               	movlw	0
 10238  0114F6  22DD               	addwfc	postdec2,f,c
 10239  0114F8                     l11784:
 10240  0114F8  0ED0               	movlw	208
 10241  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10242  0114FC  0EFF               	movlw	255
 10243  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10244                           
 10245                           ;stkvar	_fmt @ sp[(-32)+-4]
 10246  011500  0EDC               	movlw	-36
 10247  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10248  011508  0EDD               	movlw	-35
 10249  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10250  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10251  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10252  01151C                     	if	0	;tblptru may be non-zero
 10253  01151C                     	endif
 10254  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10255  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10256  01151E  6EF8               	movwf	tblptru,c
 10257  011520                     	endif
 10258  011520  0008               	tblrd		*
 10259  011522  50F5               	movf	tablat,w,c
 10260  011524  6E09               	movwf	(btemp+8)^0,c
 10261  011526  6A0A               	clrf	(btemp+9)^0,c
 10262  011528  500B               	movf	(btemp+10)^0,w,c
 10263  01152A  2609               	addwf	(btemp+8)^0,f,c
 10264  01152C  500C               	movf	(btemp+11)^0,w,c
 10265  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10266  011530  500A               	movf	(btemp+9)^0,w,c
 10267  011532  E106               	bnz	u11330
 10268  011534  0E0A               	movlw	10
 10269  011536  5C09               	subwf	(btemp+8)^0,w,c
 10270  011538  B0D8               	btfsc	status,0,c
 10271  01153A  D002               	goto	u11330
 10272  01153C  0E01               	movlw	1
 10273  01153E  D001               	goto	u11340
 10274  011540                     u11330:
 10275  011540  0E00               	movlw	0
 10276  011542                     u11340:
 10277  011542  6E0B               	movwf	(btemp+10)^0,c
 10278  011544  6A0C               	clrf	(btemp+11)^0,c
 10279                           
 10280                           ;stkvar	_vfpfcnvrt$5339 @ sp[(-32)+0]
 10281  011546  0EE0               	movlw	-32
 10282  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10283  01154E  0EE1               	movlw	-31
 10284  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10285                           
 10286                           ;stkvar	_vfpfcnvrt$5339 @ sp[(-32)+0]
 10287  011556  0EE0               	movlw	-32
 10288  011558  006F FF8C  F001    	movff	plusw1,btemp
 10289  01155E  0EE1               	movlw	-31
 10290  011560  50E3               	movf	plusw1,w,c
 10291  011562  1001               	iorwf	btemp^0,w,c
 10292  011564  A4D8               	btfss	status,2,c
 10293  011566  D7BD               	goto	l11782
 10294  011568                     u11350:
 10295                           
 10296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10297                           ;stkvar	_fmt @ sp[(-32)+-4]
 10298  011568  0EDC               	movlw	-36
 10299  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10300  011570  0EDD               	movlw	-35
 10301  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10302  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10303  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10304  011584                     	if	0	;tblptru may be non-zero
 10305  011584                     	endif
 10306  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10307  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10308  011586  6EF8               	movwf	tblptru,c
 10309  011588                     	endif
 10310  011588  0008               	tblrd		*
 10311  01158A  50F5               	movf	tablat,w,c
 10312  01158C  6EE6               	movwf	postinc1,c
 10313  01158E  0E00               	movlw	0
 10314  011590  6EE6               	movwf	postinc1,c
 10315  011592  EC3E  F0CE         	call	_tolower	;wreg free
 10316                           
 10317                           ;stkvar	_ct @ sp[(-32)+26]
 10318  011596  0EFA               	movlw	-6
 10319  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10320                           
 10321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10322                           ;stkvar	_ct @ sp[(-32)+26]
 10323  01159E  0EFA               	movlw	-6
 10324  0115A0  50E3               	movf	plusw1,w,c
 10325  0115A2  B4D8               	btfsc	status,2,c
 10326  0115A4  D05B               	goto	l11800
 10327                           
 10328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10329                           ;stkvar	_ct @ sp[(-32)+26]
 10330  0115A6  0EFB               	movlw	251
 10331  0115A8  24E1               	addwf	fsr1l,w,c
 10332  0115AA  6ED9               	movwf	fsr2l,c
 10333  0115AC  0EFF               	movlw	255
 10334  0115AE  20E2               	addwfc	fsr1h,w,c
 10335  0115B0  6EDA               	movwf	fsr2h,c
 10336                           
 10337                           ;stkvar	_fmt @ sp[(-32)+-4]
 10338  0115B2  0EDC               	movlw	-36
 10339  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10340  0115BA  0EDD               	movlw	-35
 10341  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10342  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10343  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10344  0115CE  0E01               	movlw	1
 10345  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10346  0115D2  0E00               	movlw	0
 10347  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10348  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10349  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10350  0115E2                     	if	0	;tblptru may be non-zero
 10351  0115E2                     	endif
 10352  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10353  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10354  0115E4  6EF8               	movwf	tblptru,c
 10355  0115E6                     	endif
 10356  0115E6  0008               	tblrd		*
 10357  0115E8  50F5               	movf	tablat,w,c
 10358  0115EA  6EE6               	movwf	postinc1,c
 10359  0115EC  0E00               	movlw	0
 10360  0115EE  6EE6               	movwf	postinc1,c
 10361  0115F0  EC3E  F0CE         	call	_tolower	;wreg free
 10362  0115F4  5001               	movf	btemp^0,w,c
 10363  0115F6  6EDF               	movwf	indf2,c
 10364                           
 10365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10366                           ;stkvar	_ct @ sp[(-32)+26]
 10367  0115F8  0EFB               	movlw	251
 10368  0115FA  24E1               	addwf	fsr1l,w,c
 10369  0115FC  6ED9               	movwf	fsr2l,c
 10370  0115FE  0EFF               	movlw	255
 10371  011600  20E2               	addwfc	fsr1h,w,c
 10372  011602  6EDA               	movwf	fsr2h,c
 10373  011604  50DF               	movf	indf2,w,c
 10374  011606  B4D8               	btfsc	status,2,c
 10375  011608  D029               	goto	l11800
 10376                           
 10377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10378                           ;stkvar	_ct @ sp[(-32)+26]
 10379  01160A  0EFC               	movlw	252
 10380  01160C  24E1               	addwf	fsr1l,w,c
 10381  01160E  6ED9               	movwf	fsr2l,c
 10382  011610  0EFF               	movlw	255
 10383  011612  20E2               	addwfc	fsr1h,w,c
 10384  011614  6EDA               	movwf	fsr2h,c
 10385                           
 10386                           ;stkvar	_fmt @ sp[(-32)+-4]
 10387  011616  0EDC               	movlw	-36
 10388  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10389  01161E  0EDD               	movlw	-35
 10390  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10391  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10392  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10393  011632  0E02               	movlw	2
 10394  011634  260B               	addwf	(btemp+10)^0,f,c
 10395  011636  0E00               	movlw	0
 10396  011638  220C               	addwfc	(btemp+11)^0,f,c
 10397  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10398  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10399  011646                     	if	0	;tblptru may be non-zero
 10400  011646                     	endif
 10401  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10402  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10403  011648  6EF8               	movwf	tblptru,c
 10404  01164A                     	endif
 10405  01164A  0008               	tblrd		*
 10406  01164C  50F5               	movf	tablat,w,c
 10407  01164E  6EE6               	movwf	postinc1,c
 10408  011650  0E00               	movlw	0
 10409  011652  6EE6               	movwf	postinc1,c
 10410  011654  EC3E  F0CE         	call	_tolower	;wreg free
 10411  011658  5001               	movf	btemp^0,w,c
 10412  01165A  6EDF               	movwf	indf2,c
 10413  01165C                     l11800:
 10414                           
 10415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10416                           ;stkvar	_fmt @ sp[(-32)+-4]
 10417  01165C  0EDC               	movlw	-36
 10418  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10419  011664  0EDD               	movlw	-35
 10420  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10421  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10422  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10423  011678                     	if	0	;tblptru may be non-zero
 10424  011678                     	endif
 10425  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10426  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10427  01167A  6EF8               	movwf	tblptru,c
 10428  01167C                     	endif
 10429  01167C  0008               	tblrd		*
 10430  01167E  50F5               	movf	tablat,w,c
 10431  011680  0A63               	xorlw	99
 10432  011682  A4D8               	btfss	status,2,c
 10433  011684  D037               	goto	l11810
 10434                           
 10435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10436                           ;stkvar	_fmt @ sp[(-32)+-4]
 10437  011686  0EDC               	movlw	-36
 10438  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10439  01168E  0EDD               	movlw	-35
 10440  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10441  011696  2ADE               	incf	postinc2,f,c
 10442  011698  0E00               	movlw	0
 10443  01169A  22DD               	addwfc	postdec2,f,c
 10444                           
 10445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10446                           ;stkvar	_ap @ sp[(-32)+-6]
 10447  01169C  0EDA               	movlw	-38
 10448  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10449  0116A4  0EDB               	movlw	-37
 10450  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10451  0116AC  0E02               	movlw	2
 10452  0116AE  5EDE               	subwf	postinc2,f,c
 10453  0116B0  0E00               	movlw	0
 10454  0116B2  5ADD               	subwfb	postdec2,f,c
 10455  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10456  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10457  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10458  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10459  0116CC  50DF               	movf	indf2,w,c
 10460  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10461                           
 10462                           ;stkvar	_c @ sp[(-32)+31]
 10463  0116D0  0EFF               	movlw	-1
 10464  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10465                           
 10466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10467                           ;stkvar	_c @ sp[(-32)+31]
 10468  0116D8  0EFF               	movlw	-1
 10469  0116DA  50E3               	movf	plusw1,w,c
 10470  0116DC  6EE6               	movwf	postinc1,c
 10471                           
 10472                           ;stkvar	_fp @ sp[(-33)+-2]
 10473  0116DE  0EDD               	movlw	-35
 10474  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10475  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10476  0116EC  ECB8  F0CD         	call	_ctoa	;wreg free
 10477  0116F0  EFF3  F090         	goto	l2288
 10478  0116F4                     l11810:
 10479                           
 10480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10481                           ;stkvar	_fmt @ sp[(-32)+-4]
 10482  0116F4  0EDC               	movlw	-36
 10483  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10484  0116FC  0EDD               	movlw	-35
 10485  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10486  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 10487  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10488  011710                     	if	0	;tblptru may be non-zero
 10489  011710                     	endif
 10490  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10491  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 10492  011712  6EF8               	movwf	tblptru,c
 10493  011714                     	endif
 10494  011714  0008               	tblrd		*
 10495  011716  50F5               	movf	tablat,w,c
 10496  011718  0A64               	xorlw	100
 10497  01171A  B4D8               	btfsc	status,2,c
 10498  01171C  D015               	goto	u11400
 10499                           
 10500                           ;stkvar	_fmt @ sp[(-32)+-4]
 10501  01171E  0EDC               	movlw	-36
 10502  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 10503  011726  0EDD               	movlw	-35
 10504  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 10505  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10506  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 10507  01173A                     	if	0	;tblptru may be non-zero
 10508  01173A                     	endif
 10509  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10510  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 10511  01173C  6EF8               	movwf	tblptru,c
 10512  01173E                     	endif
 10513  01173E  0008               	tblrd		*
 10514  011740  50F5               	movf	tablat,w,c
 10515  011742  0A69               	xorlw	105
 10516  011744  A4D8               	btfss	status,2,c
 10517  011746  D076               	goto	l11822
 10518  011748                     u11400:
 10519                           
 10520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10521                           ;stkvar	_fmt @ sp[(-32)+-4]
 10522  011748  0EDC               	movlw	-36
 10523  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10524  011750  0EDD               	movlw	-35
 10525  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 10526  011758  2ADE               	incf	postinc2,f,c
 10527  01175A  0E00               	movlw	0
 10528  01175C  22DD               	addwfc	postdec2,f,c
 10529                           
 10530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10531                           ;stkvar	_ap @ sp[(-32)+-6]
 10532  01175E  0EDA               	movlw	-38
 10533  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 10534  011766  0EDB               	movlw	-37
 10535  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 10536  01176E  0E02               	movlw	2
 10537  011770  5EDE               	subwf	postinc2,f,c
 10538  011772  0E00               	movlw	0
 10539  011774  5ADD               	subwfb	postdec2,f,c
 10540  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 10541  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 10542  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10543  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10544  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 10545  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 10546                           
 10547                           ;stkvar	_ll @ sp[(-32)+14]
 10548  01179A  0EEE               	movlw	-18
 10549  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10550  0117A2  0EEF               	movlw	-17
 10551  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10552  0117AA  6A01               	clrf	btemp^0,c
 10553  0117AC  BEE3               	btfsc	plusw1,7,c
 10554  0117AE  6801               	setf	btemp^0,c
 10555  0117B0  0EF0               	movlw	-16
 10556  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 10557  0117B8  0EF1               	movlw	-15
 10558  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 10559  0117C0  0EF2               	movlw	-14
 10560  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 10561  0117C8  0EF3               	movlw	-13
 10562  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 10563  0117D0  0EF4               	movlw	-12
 10564  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 10565  0117D8  0EF5               	movlw	-11
 10566  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 10567  0117E0                     l11818:
 10568                           
 10569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10570                           ;stkvar	_ll @ sp[(-32)+14]
 10571  0117E0  50E1               	movf	fsr1l,w,c
 10572  0117E2  0FEE               	addlw	-18
 10573  0117E4  6ED9               	movwf	fsr2l,c
 10574  0117E6  50E2               	movf	fsr1h,w,c
 10575  0117E8  6EDA               	movwf	fsr2h,c
 10576  0117EA  0EFF               	movlw	255
 10577  0117EC  22DA               	addwfc	fsr2h,f,c
 10578  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 10579  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 10580  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 10581  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 10582  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 10583  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 10584  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 10585  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 10586                           
 10587                           ;stkvar	_fp @ sp[(-40)+-2]
 10588  01181E  0ED6               	movlw	-42
 10589  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 10590  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 10591  01182C  EC44  F0A7         	call	_dtoa	;wreg free
 10592  011830  EFF3  F090         	goto	l2288
 10593  011834                     l11822:
 10594                           
 10595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10596  011834  0E02               	movlw	2
 10597  011836  6EE6               	movwf	postinc1,c
 10598  011838  0E00               	movlw	0
 10599  01183A  6EE6               	movwf	postinc1,c
 10600  01183C  0EE9               	movlw	low STR_64
 10601  01183E  6EE6               	movwf	postinc1,c
 10602  011840  0EFF               	movlw	high STR_64
 10603  011842  6EE6               	movwf	postinc1,c
 10604                           
 10605                           ;stkvar	_fmt @ sp[(-36)+-4]
 10606  011844  0ED8               	movlw	-40
 10607  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 10608  01184C  0ED9               	movlw	-39
 10609  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10610  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 10611  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 10612  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10613  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 10614  01186C  ECF7  F0B6         	call	_strncmp	;wreg free
 10615  011870  5001               	movf	btemp^0,w,c
 10616  011872  1002               	iorwf	(btemp+1)^0,w,c
 10617  011874  B4D8               	btfsc	status,2,c
 10618  011876  D022               	goto	u11420
 10619  011878  0E02               	movlw	2
 10620  01187A  6EE6               	movwf	postinc1,c
 10621  01187C  0E00               	movlw	0
 10622  01187E  6EE6               	movwf	postinc1,c
 10623  011880  0EEF               	movlw	low STR_68
 10624  011882  6EE6               	movwf	postinc1,c
 10625  011884  0EFF               	movlw	high STR_68
 10626  011886  6EE6               	movwf	postinc1,c
 10627                           
 10628                           ;stkvar	_fmt @ sp[(-36)+-4]
 10629  011888  0ED8               	movlw	-40
 10630  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10631  011890  0ED9               	movlw	-39
 10632  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 10633  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10634  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10635  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10636  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10637  0118B0  ECF7  F0B6         	call	_strncmp	;wreg free
 10638  0118B4  5001               	movf	btemp^0,w,c
 10639  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 10640  0118B8  A4D8               	btfss	status,2,c
 10641  0118BA  D069               	goto	l11834
 10642  0118BC                     u11420:
 10643                           
 10644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10645                           ;stkvar	_fmt @ sp[(-32)+-4]
 10646  0118BC  0EDC               	movlw	-36
 10647  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10648  0118C4  0EDD               	movlw	-35
 10649  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10650  0118CC  0E02               	movlw	2
 10651  0118CE  26DE               	addwf	postinc2,f,c
 10652  0118D0  0E00               	movlw	0
 10653  0118D2  22DD               	addwfc	postdec2,f,c
 10654                           
 10655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10656                           ;stkvar	_ap @ sp[(-32)+-6]
 10657  0118D4  0EDA               	movlw	-38
 10658  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10659  0118DC  0EDB               	movlw	-37
 10660  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10661  0118E4  0E04               	movlw	4
 10662  0118E6  5EDE               	subwf	postinc2,f,c
 10663  0118E8  0E00               	movlw	0
 10664  0118EA  5ADD               	subwfb	postdec2,f,c
 10665  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 10666  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 10667  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10668  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10669  011904  006F FF78  F009    	movff	postinc2,btemp+8
 10670  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 10671  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 10672  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 10673  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 10674  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 10675  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 10676  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 10677  011934  6A15               	clrf	(btemp+20)^0,c
 10678  011936  BE14               	btfsc	(btemp+19)^0,7,c
 10679  011938  6815               	setf	(btemp+20)^0,c
 10680  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 10681  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 10682  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 10683                           
 10684                           ;stkvar	_ll @ sp[(-32)+14]
 10685  01194C  0EEE               	movlw	-18
 10686  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 10687  011954  0EEF               	movlw	-17
 10688  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10689  01195C  0EF0               	movlw	-16
 10690  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10691  011964  0EF1               	movlw	-15
 10692  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 10693  01196C  0EF2               	movlw	-14
 10694  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 10695  011974  0EF3               	movlw	-13
 10696  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10697  01197C  0EF4               	movlw	-12
 10698  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10699  011984  0EF5               	movlw	-11
 10700  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 10701  01198C  D729               	goto	l11818
 10702  01198E                     l11834:
 10703                           
 10704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10705                           ;stkvar	_ct @ sp[(-32)+26]
 10706  01198E  0EFA               	movlw	-6
 10707  011990  006F FF8C  F001    	movff	plusw1,btemp
 10708  011996  0E66               	movlw	102
 10709  011998  1801               	xorwf	btemp^0,w,c
 10710  01199A  A4D8               	btfss	status,2,c
 10711  01199C  D06E               	goto	l11846
 10712                           
 10713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 10714                           ;stkvar	_fmt @ sp[(-32)+-4]
 10715  01199E  0EDC               	movlw	-36
 10716  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10717  0119A6  0EDD               	movlw	-35
 10718  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10719  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 10720  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10721  0119BA                     	if	0	;tblptru may be non-zero
 10722  0119BA                     	endif
 10723  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10724  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 10725  0119BC  6EF8               	movwf	tblptru,c
 10726  0119BE                     	endif
 10727                           
 10728                           ;stkvar	_c @ sp[(-32)+31]
 10729  0119BE  0008               	tblrd		*
 10730  0119C0  0EFF               	movlw	-1
 10731  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 10732                           
 10733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 10734                           ;stkvar	_fmt @ sp[(-32)+-4]
 10735  0119C8  0EDC               	movlw	-36
 10736  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10737  0119D0  0EDD               	movlw	-35
 10738  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10739  0119D8  2ADE               	incf	postinc2,f,c
 10740  0119DA  0E00               	movlw	0
 10741  0119DC  22DD               	addwfc	postdec2,f,c
 10742                           
 10743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 10744                           ;stkvar	_ap @ sp[(-32)+-6]
 10745  0119DE  0EDA               	movlw	-38
 10746  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10747  0119E6  0EDB               	movlw	-37
 10748  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10749  0119EE  0E04               	movlw	4
 10750  0119F0  5EDE               	subwf	postinc2,f,c
 10751  0119F2  0E00               	movlw	0
 10752  0119F4  5ADD               	subwfb	postdec2,f,c
 10753  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 10754  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 10755  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10756  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10757  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 10758  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 10759  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 10760  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 10761                           
 10762                           ;stkvar	_f @ sp[(-32)+22]
 10763  011A26  0EF6               	movlw	-10
 10764  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 10765  011A2E  0EF7               	movlw	-9
 10766  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10767  011A36  0EF8               	movlw	-8
 10768  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10769  011A3E  0EF9               	movlw	-7
 10770  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 10771  011A46                     l11842:
 10772                           
 10773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 10774                           ;stkvar	_c @ sp[(-32)+31]
 10775  011A46  0EFF               	movlw	-1
 10776  011A48  50E3               	movf	plusw1,w,c
 10777  011A4A  6EE6               	movwf	postinc1,c
 10778                           
 10779                           ;stkvar	_f @ sp[(-33)+22]
 10780  011A4C  0EF5               	movlw	-11
 10781  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 10782  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 10783  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10784  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 10785                           
 10786                           ;stkvar	_fp @ sp[(-37)+-2]
 10787  011A66  0ED9               	movlw	-39
 10788  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 10789  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10790  011A74  EC00  F080         	call	_efgtoa	;wreg free
 10791  011A78  D3B6               	goto	l2288
 10792  011A7A                     l11846:
 10793                           
 10794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10795  011A7A  0E02               	movlw	2
 10796  011A7C  6EE6               	movwf	postinc1,c
 10797  011A7E  0E00               	movlw	0
 10798  011A80  6EE6               	movwf	postinc1,c
 10799  011A82  0EEC               	movlw	low STR_73
 10800  011A84  6EE6               	movwf	postinc1,c
 10801  011A86  0EFF               	movlw	high STR_73
 10802  011A88  6EE6               	movwf	postinc1,c
 10803                           
 10804                           ;stkvar	_ct @ sp[(-36)+26]
 10805  011A8A  0EF6               	movlw	246
 10806  011A8C  24E1               	addwf	fsr1l,w,c
 10807  011A8E  6E01               	movwf	btemp^0,c
 10808  011A90  0EFF               	movlw	255
 10809  011A92  20E2               	addwfc	fsr1h,w,c
 10810  011A94  6E02               	movwf	(btemp+1)^0,c
 10811  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 10812  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10813  011AA2  ECF7  F0B6         	call	_strncmp	;wreg free
 10814  011AA6  5001               	movf	btemp^0,w,c
 10815  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 10816  011AAA  A4D8               	btfss	status,2,c
 10817  011AAC  D096               	goto	l11866
 10818                           
 10819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10820                           ;stkvar	_fmt @ sp[(-32)+-4]
 10821  011AAE  0EDC               	movlw	-36
 10822  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10823  011AB6  0EDD               	movlw	-35
 10824  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10825  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 10826  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 10827  011ACA  0E01               	movlw	1
 10828  011ACC  260B               	addwf	(btemp+10)^0,f,c
 10829  011ACE  0E00               	movlw	0
 10830  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 10831  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10832  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10833  011ADE                     	if	0	;tblptru may be non-zero
 10834  011ADE                     	endif
 10835  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10836  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 10837  011AE0  6EF8               	movwf	tblptru,c
 10838  011AE2                     	endif
 10839                           
 10840                           ;stkvar	_c @ sp[(-32)+31]
 10841  011AE2  0008               	tblrd		*
 10842  011AE4  0EFF               	movlw	-1
 10843  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 10844  011AEC  0EBF               	movlw	191
 10845  011AEE  6E0B               	movwf	(btemp+10)^0,c
 10846  011AF0  0EFF               	movlw	255
 10847  011AF2  6E0C               	movwf	(btemp+11)^0,c
 10848                           
 10849                           ;stkvar	_fmt @ sp[(-32)+-4]
 10850  011AF4  0EDC               	movlw	-36
 10851  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10852  011AFC  0EDD               	movlw	-35
 10853  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10854  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 10855  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10856  011B10                     	if	0	;tblptru may be non-zero
 10857  011B10                     	endif
 10858  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10859  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 10860  011B12  6EF8               	movwf	tblptru,c
 10861  011B14                     	endif
 10862  011B14  0008               	tblrd		*
 10863  011B16  50F5               	movf	tablat,w,c
 10864  011B18  6E09               	movwf	(btemp+8)^0,c
 10865  011B1A  6A0A               	clrf	(btemp+9)^0,c
 10866  011B1C  500B               	movf	(btemp+10)^0,w,c
 10867  011B1E  2609               	addwf	(btemp+8)^0,f,c
 10868  011B20  500C               	movf	(btemp+11)^0,w,c
 10869  011B22  220A               	addwfc	(btemp+9)^0,f,c
 10870  011B24  500A               	movf	(btemp+9)^0,w,c
 10871  011B26  E106               	bnz	u11450
 10872  011B28  0E1A               	movlw	26
 10873  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 10874  011B2C  B0D8               	btfsc	status,0,c
 10875  011B2E  D002               	goto	u11450
 10876  011B30  0E01               	movlw	1
 10877  011B32  D001               	goto	u11460
 10878  011B34                     u11450:
 10879  011B34  0E00               	movlw	0
 10880  011B36                     u11460:
 10881  011B36  6E0B               	movwf	(btemp+10)^0,c
 10882  011B38  6A0C               	clrf	(btemp+11)^0,c
 10883                           
 10884                           ;stkvar	_vfpfcnvrt$5350 @ sp[(-32)+2]
 10885  011B3A  0EE2               	movlw	-30
 10886  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10887  011B42  0EE3               	movlw	-29
 10888  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 10889                           
 10890                           ;stkvar	_vfpfcnvrt$5350 @ sp[(-32)+2]
 10891  011B4A  0EE2               	movlw	-30
 10892  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 10893  011B52  0EE3               	movlw	-29
 10894  011B54  50E3               	movf	plusw1,w,c
 10895  011B56  1001               	iorwf	btemp^0,w,c
 10896                           
 10897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10898                           ;stkvar	_ap @ sp[(-32)+-6]
 10899                           
 10900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 10901                           
 10902                           ;stkvar	_f @ sp[(-32)+22]
 10903                           
 10904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 10905                           ;stkvar	_ap @ sp[(-32)+-6]
 10906  011B58  0EDA               	movlw	-38
 10907  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10908  011B60  0EDB               	movlw	-37
 10909  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 10910  011B68  0E04               	movlw	4
 10911  011B6A  5EDE               	subwf	postinc2,f,c
 10912  011B6C  0E00               	movlw	0
 10913  011B6E  5ADD               	subwfb	postdec2,f,c
 10914  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 10915  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 10916  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10917  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10918  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 10919  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 10920  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 10921  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 10922                           
 10923                           ;stkvar	_f @ sp[(-32)+22]
 10924  011BA0  0EF6               	movlw	-10
 10925  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 10926  011BA8  0EF7               	movlw	-9
 10927  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10928  011BB0  0EF8               	movlw	-8
 10929  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10930  011BB8  0EF9               	movlw	-7
 10931  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10932                           
 10933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 10934                           ;stkvar	_fmt @ sp[(-32)+-4]
 10935  011BC0  0EDC               	movlw	-36
 10936  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10937  011BC8  0EDD               	movlw	-35
 10938  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10939  011BD0  0E02               	movlw	2
 10940  011BD2  26DE               	addwf	postinc2,f,c
 10941  011BD4  0E00               	movlw	0
 10942  011BD6  22DD               	addwfc	postdec2,f,c
 10943  011BD8  D736               	goto	l11842
 10944  011BDA                     l11866:
 10945                           
 10946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10947                           ;stkvar	_fmt @ sp[(-32)+-4]
 10948  011BDA  0EDC               	movlw	-36
 10949  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10950  011BE2  0EDD               	movlw	-35
 10951  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10952  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10953  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10954  011BF6                     	if	0	;tblptru may be non-zero
 10955  011BF6                     	endif
 10956  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10957  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 10958  011BF8  6EF8               	movwf	tblptru,c
 10959  011BFA                     	endif
 10960  011BFA  0008               	tblrd		*
 10961  011BFC  50F5               	movf	tablat,w,c
 10962  011BFE  0A73               	xorlw	115
 10963  011C00  A4D8               	btfss	status,2,c
 10964  011C02  D042               	goto	l11876
 10965                           
 10966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10967                           ;stkvar	_fmt @ sp[(-32)+-4]
 10968  011C04  0EDC               	movlw	-36
 10969  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 10970  011C0C  0EDD               	movlw	-35
 10971  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10972  011C14  2ADE               	incf	postinc2,f,c
 10973  011C16  0E00               	movlw	0
 10974  011C18  22DD               	addwfc	postdec2,f,c
 10975                           
 10976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10977                           ;stkvar	_ap @ sp[(-32)+-6]
 10978  011C1A  0EDA               	movlw	-38
 10979  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10980  011C22  0EDB               	movlw	-37
 10981  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 10982  011C2A  0E02               	movlw	2
 10983  011C2C  5EDE               	subwf	postinc2,f,c
 10984  011C2E  0E00               	movlw	0
 10985  011C30  5ADD               	subwfb	postdec2,f,c
 10986  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 10987  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 10988  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10989  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10990  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 10991  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 10992                           
 10993                           ;stkvar	_cp @ sp[(-32)+29]
 10994  011C56  0EFE               	movlw	-2
 10995  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 10996  011C5E  0EFD               	movlw	-3
 10997  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10998                           
 10999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11000                           ;stkvar	_cp @ sp[(-32)+29]
 11001  011C66  0EFD               	movlw	-3
 11002  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 11003  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11004                           
 11005                           ;stkvar	_fp @ sp[(-34)+-2]
 11006  011C74  0EDC               	movlw	-36
 11007  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 11008  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11009  011C82  ECFE  F0B1         	call	_stoa	;wreg free
 11010  011C86  D2AF               	goto	l2288
 11011  011C88                     l11876:
 11012                           
 11013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 11014                           ;stkvar	_fmt @ sp[(-32)+-4]
 11015  011C88  0EDC               	movlw	-36
 11016  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11017  011C90  0EDD               	movlw	-35
 11018  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 11019  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 11020  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11021  011CA4                     	if	0	;tblptru may be non-zero
 11022  011CA4                     	endif
 11023  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11024  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 11025  011CA6  6EF8               	movwf	tblptru,c
 11026  011CA8                     	endif
 11027  011CA8  0008               	tblrd		*
 11028  011CAA  50F5               	movf	tablat,w,c
 11029  011CAC  0A75               	xorlw	117
 11030  011CAE  A4D8               	btfss	status,2,c
 11031  011CB0  D07C               	goto	l11886
 11032                           
 11033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 11034                           ;stkvar	_fmt @ sp[(-32)+-4]
 11035  011CB2  0EDC               	movlw	-36
 11036  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11037  011CBA  0EDD               	movlw	-35
 11038  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11039  011CC2  2ADE               	incf	postinc2,f,c
 11040  011CC4  0E00               	movlw	0
 11041  011CC6  22DD               	addwfc	postdec2,f,c
 11042                           
 11043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11044                           ;stkvar	_ap @ sp[(-32)+-6]
 11045  011CC8  0EDA               	movlw	-38
 11046  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11047  011CD0  0EDB               	movlw	-37
 11048  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11049  011CD8  0E02               	movlw	2
 11050  011CDA  5EDE               	subwf	postinc2,f,c
 11051  011CDC  0E00               	movlw	0
 11052  011CDE  5ADD               	subwfb	postdec2,f,c
 11053  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11054  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11055  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11056  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11057  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11058  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11059  011D04  500B               	movf	(btemp+10)^0,w,c
 11060  011D06  6E11               	movwf	(btemp+16)^0,c
 11061  011D08  500C               	movf	(btemp+11)^0,w,c
 11062  011D0A  6E12               	movwf	(btemp+17)^0,c
 11063  011D0C  6A13               	clrf	(btemp+18)^0,c
 11064  011D0E  6A14               	clrf	(btemp+19)^0,c
 11065  011D10  6A15               	clrf	(btemp+20)^0,c
 11066  011D12  6A16               	clrf	(btemp+21)^0,c
 11067  011D14  6A17               	clrf	(btemp+22)^0,c
 11068  011D16  6A18               	clrf	(btemp+23)^0,c
 11069                           
 11070                           ;stkvar	_llu @ sp[(-32)+6]
 11071  011D18  0EE6               	movlw	-26
 11072  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11073  011D20  0EE7               	movlw	-25
 11074  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11075  011D28  0EE8               	movlw	-24
 11076  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11077  011D30  0EE9               	movlw	-23
 11078  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11079  011D38  0EEA               	movlw	-22
 11080  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11081  011D40  0EEB               	movlw	-21
 11082  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11083  011D48  0EEC               	movlw	-20
 11084  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11085  011D50  0EED               	movlw	-19
 11086  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11087                           
 11088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11089                           ;stkvar	_llu @ sp[(-32)+6]
 11090  011D58  50E1               	movf	fsr1l,w,c
 11091  011D5A  0FE6               	addlw	-26
 11092  011D5C  6ED9               	movwf	fsr2l,c
 11093  011D5E  50E2               	movf	fsr1h,w,c
 11094  011D60  6EDA               	movwf	fsr2h,c
 11095  011D62  0EFF               	movlw	255
 11096  011D64  22DA               	addwfc	fsr2h,f,c
 11097  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11098  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11099  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11100  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11101  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11102  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11103  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11104  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11105                           
 11106                           ;stkvar	_fp @ sp[(-40)+-2]
 11107  011D96  0ED6               	movlw	-42
 11108  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11109  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11110  011DA4  ECE8  F0AE         	call	_utoa	;wreg free
 11111  011DA8  D21E               	goto	l2288
 11112  011DAA                     l11886:
 11113                           
 11114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11115  011DAA  0E02               	movlw	2
 11116  011DAC  6EE6               	movwf	postinc1,c
 11117  011DAE  0E00               	movlw	0
 11118  011DB0  6EE6               	movwf	postinc1,c
 11119  011DB2  0EF2               	movlw	low STR_78
 11120  011DB4  6EE6               	movwf	postinc1,c
 11121  011DB6  0EFF               	movlw	high STR_78
 11122  011DB8  6EE6               	movwf	postinc1,c
 11123                           
 11124                           ;stkvar	_fmt @ sp[(-36)+-4]
 11125  011DBA  0ED8               	movlw	-40
 11126  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11127  011DC2  0ED9               	movlw	-39
 11128  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11129  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11130  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11131  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11132  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11133  011DE2  ECF7  F0B6         	call	_strncmp	;wreg free
 11134  011DE6  5001               	movf	btemp^0,w,c
 11135  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11136  011DEA  A4D8               	btfss	status,2,c
 11137  011DEC  D039               	goto	l11896
 11138                           
 11139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11140                           ;stkvar	_fmt @ sp[(-32)+-4]
 11141  011DEE  0EDC               	movlw	-36
 11142  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11143  011DF6  0EDD               	movlw	-35
 11144  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11145  011DFE  0E02               	movlw	2
 11146  011E00  26DE               	addwf	postinc2,f,c
 11147  011E02  0E00               	movlw	0
 11148  011E04  22DD               	addwfc	postdec2,f,c
 11149                           
 11150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11151                           ;stkvar	_ap @ sp[(-32)+-6]
 11152  011E06  0EDA               	movlw	-38
 11153  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11154  011E0E  0EDB               	movlw	-37
 11155  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11156  011E16  0E04               	movlw	4
 11157  011E18  5EDE               	subwf	postinc2,f,c
 11158  011E1A  0E00               	movlw	0
 11159  011E1C  5ADD               	subwfb	postdec2,f,c
 11160  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11161  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11162  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11163  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11164  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11165  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11166  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11167  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11168  011E4E  5009               	movf	(btemp+8)^0,w,c
 11169  011E50  6E11               	movwf	(btemp+16)^0,c
 11170  011E52  500A               	movf	(btemp+9)^0,w,c
 11171  011E54  6E12               	movwf	(btemp+17)^0,c
 11172  011E56  500B               	movf	(btemp+10)^0,w,c
 11173  011E58  6E13               	movwf	(btemp+18)^0,c
 11174  011E5A  500C               	movf	(btemp+11)^0,w,c
 11175  011E5C  6E14               	movwf	(btemp+19)^0,c
 11176  011E5E  D758               	goto	L5
 11177  011E60                     l11896:
 11178                           
 11179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11180                           ;stkvar	_fmt @ sp[(-32)+-4]
 11181  011E60  0EDC               	movlw	-36
 11182  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11183  011E68  0EDD               	movlw	-35
 11184  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11185  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11186  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11187  011E7C                     	if	0	;tblptru may be non-zero
 11188  011E7C                     	endif
 11189  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11190  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11191  011E7E  6EF8               	movwf	tblptru,c
 11192  011E80                     	endif
 11193  011E80  0008               	tblrd		*
 11194  011E82  50F5               	movf	tablat,w,c
 11195  011E84  0A78               	xorlw	120
 11196  011E86  B4D8               	btfsc	status,2,c
 11197  011E88  D015               	goto	u11520
 11198                           
 11199                           ;stkvar	_fmt @ sp[(-32)+-4]
 11200  011E8A  0EDC               	movlw	-36
 11201  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11202  011E92  0EDD               	movlw	-35
 11203  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11204  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11205  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11206  011EA6                     	if	0	;tblptru may be non-zero
 11207  011EA6                     	endif
 11208  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11209  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11210  011EA8  6EF8               	movwf	tblptru,c
 11211  011EAA                     	endif
 11212  011EAA  0008               	tblrd		*
 11213  011EAC  50F5               	movf	tablat,w,c
 11214  011EAE  0A58               	xorlw	88
 11215  011EB0  A4D8               	btfss	status,2,c
 11216  011EB2  D094               	goto	l11910
 11217  011EB4                     u11520:
 11218                           
 11219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11220                           ;stkvar	_fmt @ sp[(-32)+-4]
 11221  011EB4  0EDC               	movlw	-36
 11222  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11223  011EBC  0EDD               	movlw	-35
 11224  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11225  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11226  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11227  011ED0                     	if	0	;tblptru may be non-zero
 11228  011ED0                     	endif
 11229  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11230  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11231  011ED2  6EF8               	movwf	tblptru,c
 11232  011ED4                     	endif
 11233                           
 11234                           ;stkvar	_c @ sp[(-32)+31]
 11235  011ED4  0008               	tblrd		*
 11236  011ED6  0EFF               	movlw	-1
 11237  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11238                           
 11239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11240                           ;stkvar	_fmt @ sp[(-32)+-4]
 11241  011EDE  0EDC               	movlw	-36
 11242  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11243  011EE6  0EDD               	movlw	-35
 11244  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11245  011EEE  2ADE               	incf	postinc2,f,c
 11246  011EF0  0E00               	movlw	0
 11247  011EF2  22DD               	addwfc	postdec2,f,c
 11248                           
 11249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11250                           ;stkvar	_ap @ sp[(-32)+-6]
 11251  011EF4  0EDA               	movlw	-38
 11252  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11253  011EFC  0EDB               	movlw	-37
 11254  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11255  011F04  0E02               	movlw	2
 11256  011F06  5EDE               	subwf	postinc2,f,c
 11257  011F08  0E00               	movlw	0
 11258  011F0A  5ADD               	subwfb	postdec2,f,c
 11259  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 11260  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 11261  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11262  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11263  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 11264  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11265  011F30  500B               	movf	(btemp+10)^0,w,c
 11266  011F32  6E11               	movwf	(btemp+16)^0,c
 11267  011F34  500C               	movf	(btemp+11)^0,w,c
 11268  011F36  6E12               	movwf	(btemp+17)^0,c
 11269  011F38  6A13               	clrf	(btemp+18)^0,c
 11270  011F3A  6A14               	clrf	(btemp+19)^0,c
 11271  011F3C  6A15               	clrf	(btemp+20)^0,c
 11272  011F3E  6A16               	clrf	(btemp+21)^0,c
 11273  011F40  6A17               	clrf	(btemp+22)^0,c
 11274  011F42  6A18               	clrf	(btemp+23)^0,c
 11275                           
 11276                           ;stkvar	_llu @ sp[(-32)+6]
 11277  011F44  0EE6               	movlw	-26
 11278  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 11279  011F4C  0EE7               	movlw	-25
 11280  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11281  011F54  0EE8               	movlw	-24
 11282  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11283  011F5C  0EE9               	movlw	-23
 11284  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 11285  011F64  0EEA               	movlw	-22
 11286  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 11287  011F6C  0EEB               	movlw	-21
 11288  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11289  011F74  0EEC               	movlw	-20
 11290  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11291  011F7C  0EED               	movlw	-19
 11292  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 11293                           
 11294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 11295                           ;stkvar	_c @ sp[(-32)+31]
 11296  011F84  0EFF               	movlw	-1
 11297  011F86  50E3               	movf	plusw1,w,c
 11298  011F88  6EE6               	movwf	postinc1,c
 11299                           
 11300                           ;stkvar	_llu @ sp[(-33)+6]
 11301  011F8A  50E1               	movf	fsr1l,w,c
 11302  011F8C  0FE5               	addlw	-27
 11303  011F8E  6ED9               	movwf	fsr2l,c
 11304  011F90  50E2               	movf	fsr1h,w,c
 11305  011F92  6EDA               	movwf	fsr2h,c
 11306  011F94  0EFF               	movlw	255
 11307  011F96  22DA               	addwfc	fsr2h,f,c
 11308  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 11309  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11310  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11311  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11312  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11313  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11314  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11315  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11316                           
 11317                           ;stkvar	_fp @ sp[(-41)+-2]
 11318  011FC8  0ED5               	movlw	-43
 11319  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 11320  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 11321  011FD6  EC84  F0A9         	call	_xtoa	;wreg free
 11322  011FDA  D105               	goto	l2288
 11323  011FDC                     l11910:
 11324                           
 11325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 11326  011FDC  0E02               	movlw	2
 11327  011FDE  6EE6               	movwf	postinc1,c
 11328  011FE0  0E00               	movlw	0
 11329  011FE2  6EE6               	movwf	postinc1,c
 11330  011FE4  0EF5               	movlw	low STR_83
 11331  011FE6  6EE6               	movwf	postinc1,c
 11332  011FE8  0EFF               	movlw	high STR_83
 11333  011FEA  6EE6               	movwf	postinc1,c
 11334                           
 11335                           ;stkvar	_fmt @ sp[(-36)+-4]
 11336  011FEC  0ED8               	movlw	-40
 11337  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11338  011FF4  0ED9               	movlw	-39
 11339  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11340  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 11341  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 11342  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11343  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11344  012014  ECF7  F0B6         	call	_strncmp	;wreg free
 11345  012018  5001               	movf	btemp^0,w,c
 11346  01201A  1002               	iorwf	(btemp+1)^0,w,c
 11347  01201C  B4D8               	btfsc	status,2,c
 11348  01201E  D022               	goto	u11540
 11349  012020  0E02               	movlw	2
 11350  012022  6EE6               	movwf	postinc1,c
 11351  012024  0E00               	movlw	0
 11352  012026  6EE6               	movwf	postinc1,c
 11353  012028  0EE6               	movlw	low STR_87
 11354  01202A  6EE6               	movwf	postinc1,c
 11355  01202C  0EFF               	movlw	high STR_87
 11356  01202E  6EE6               	movwf	postinc1,c
 11357                           
 11358                           ;stkvar	_fmt @ sp[(-36)+-4]
 11359  012030  0ED8               	movlw	-40
 11360  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 11361  012038  0ED9               	movlw	-39
 11362  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11363  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 11364  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 11365  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11366  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 11367  012058  ECF7  F0B6         	call	_strncmp	;wreg free
 11368  01205C  5001               	movf	btemp^0,w,c
 11369  01205E  1002               	iorwf	(btemp+1)^0,w,c
 11370  012060  A4D8               	btfss	status,2,c
 11371  012062  D058               	goto	l11924
 11372  012064                     u11540:
 11373                           
 11374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 11375                           ;stkvar	_fmt @ sp[(-32)+-4]
 11376  012064  0EDC               	movlw	-36
 11377  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 11378  01206C  0EDD               	movlw	-35
 11379  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11380  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 11381  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 11382  012080  0E01               	movlw	1
 11383  012082  260B               	addwf	(btemp+10)^0,f,c
 11384  012084  0E00               	movlw	0
 11385  012086  220C               	addwfc	(btemp+11)^0,f,c
 11386  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11387  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11388  012094                     	if	0	;tblptru may be non-zero
 11389  012094                     	endif
 11390  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11391  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 11392  012096  6EF8               	movwf	tblptru,c
 11393  012098                     	endif
 11394                           
 11395                           ;stkvar	_c @ sp[(-32)+31]
 11396  012098  0008               	tblrd		*
 11397  01209A  0EFF               	movlw	-1
 11398  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 11399                           
 11400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 11401                           ;stkvar	_fmt @ sp[(-32)+-4]
 11402  0120A2  0EDC               	movlw	-36
 11403  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11404  0120AA  0EDD               	movlw	-35
 11405  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11406  0120B2  0E02               	movlw	2
 11407  0120B4  26DE               	addwf	postinc2,f,c
 11408  0120B6  0E00               	movlw	0
 11409  0120B8  22DD               	addwfc	postdec2,f,c
 11410                           
 11411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11412                           ;stkvar	_ap @ sp[(-32)+-6]
 11413  0120BA  0EDA               	movlw	-38
 11414  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11415  0120C2  0EDB               	movlw	-37
 11416  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11417  0120CA  0E04               	movlw	4
 11418  0120CC  5EDE               	subwf	postinc2,f,c
 11419  0120CE  0E00               	movlw	0
 11420  0120D0  5ADD               	subwfb	postdec2,f,c
 11421  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11422  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11423  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11424  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11425  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 11426  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 11427  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11428  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 11429  012102  5009               	movf	(btemp+8)^0,w,c
 11430  012104  6E11               	movwf	(btemp+16)^0,c
 11431  012106  500A               	movf	(btemp+9)^0,w,c
 11432  012108  6E12               	movwf	(btemp+17)^0,c
 11433  01210A  500B               	movf	(btemp+10)^0,w,c
 11434  01210C  6E13               	movwf	(btemp+18)^0,c
 11435  01210E  500C               	movf	(btemp+11)^0,w,c
 11436  012110  6E14               	movwf	(btemp+19)^0,c
 11437  012112  D714               	goto	L6
 11438  012114                     l11924:
 11439                           
 11440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11441                           ;stkvar	_fmt @ sp[(-32)+-4]
 11442  012114  0EDC               	movlw	-36
 11443  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 11444  01211C  0EDD               	movlw	-35
 11445  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11446  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 11447  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11448  012130                     	if	0	;tblptru may be non-zero
 11449  012130                     	endif
 11450  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11451  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 11452  012132  6EF8               	movwf	tblptru,c
 11453  012134                     	endif
 11454  012134  0008               	tblrd		*
 11455  012136  50F5               	movf	tablat,w,c
 11456  012138  0A25               	xorlw	37
 11457  01213A  A4D8               	btfss	status,2,c
 11458  01213C  D01A               	goto	l11934
 11459                           
 11460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11461                           ;stkvar	_fmt @ sp[(-32)+-4]
 11462  01213E  0EDC               	movlw	-36
 11463  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 11464  012146  0EDD               	movlw	-35
 11465  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 11466  01214E  2ADE               	incf	postinc2,f,c
 11467  012150  0E00               	movlw	0
 11468  012152  22DD               	addwfc	postdec2,f,c
 11469                           
 11470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11471                           ;stkvar	_fp @ sp[(-32)+-2]
 11472  012154  0EDE               	movlw	-34
 11473  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 11474  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 11475  012162  0E25               	movlw	37
 11476  012164  6EE6               	movwf	postinc1,c
 11477  012166  0E00               	movlw	0
 11478  012168  6EE6               	movwf	postinc1,c
 11479  01216A  EC77  F0C4         	call	_fputc	;wreg free
 11480  01216E                     l11930:
 11481                           
 11482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11483  01216E  0E01               	movlw	1
 11484  012170  D00C               	goto	L7
 11485  012172                     l11934:
 11486                           
 11487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11488                           ;stkvar	_fmt @ sp[(-32)+-4]
 11489  012172  0EDC               	movlw	-36
 11490  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 11491  01217A  0EDD               	movlw	-35
 11492  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11493  012182  2ADE               	incf	postinc2,f,c
 11494  012184  0E00               	movlw	0
 11495  012186  22DD               	addwfc	postdec2,f,c
 11496                           
 11497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11498  012188  0E00               	movlw	0
 11499  01218A                     L7:
 11500  01218A  6E01               	movwf	btemp^0,c
 11501  01218C  0E00               	movlw	0
 11502  01218E  6E02               	movwf	(btemp+1)^0,c
 11503  012190  D02A               	goto	l2288
 11504  012192                     l11940:
 11505                           
 11506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11507                           ;stkvar	_fp @ sp[(-32)+-2]
 11508  012192  0EDE               	movlw	-34
 11509  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 11510  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 11511                           
 11512                           ;stkvar	_fmt @ sp[(-34)+-4]
 11513  0121A0  0EDA               	movlw	-38
 11514  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11515  0121A8  0EDB               	movlw	-37
 11516  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11517  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11518  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11519  0121BC                     	if	0	;tblptru may be non-zero
 11520  0121BC                     	endif
 11521  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11522  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 11523  0121BE  6EF8               	movwf	tblptru,c
 11524  0121C0                     	endif
 11525  0121C0  0008               	tblrd		*
 11526  0121C2  50F5               	movf	tablat,w,c
 11527  0121C4  6EE6               	movwf	postinc1,c
 11528  0121C6  0E00               	movlw	0
 11529  0121C8  6EE6               	movwf	postinc1,c
 11530  0121CA  EC77  F0C4         	call	_fputc	;wreg free
 11531                           
 11532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11533                           ;stkvar	_fmt @ sp[(-32)+-4]
 11534  0121CE  0EDC               	movlw	-36
 11535  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11536  0121D6  0EDD               	movlw	-35
 11537  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11538  0121DE  2ADE               	incf	postinc2,f,c
 11539  0121E0  0E00               	movlw	0
 11540  0121E2  22DD               	addwfc	postdec2,f,c
 11541  0121E4  D7C4               	goto	l11930
 11542  0121E6                     l2288:
 11543                           
 11544                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11545  0121E6  0EDA               	movlw	218
 11546  0121E8  26E1               	addwf	fsr1l,f,c
 11547  0121EA  0EFF               	movlw	255
 11548  0121EC  22E2               	addwfc	fsr1h,f,c
 11549  0121EE  0012               	return		;funcret
 11550  0121F0                     __end_of_vfpfcnvrt:
 11551                           	opt callstack 0
 11552                           
 11553 ;; *************** function _xtoa *****************
 11554 ;; Defined at:
 11555 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11558 ;;		 -> f(6), NULL(0), 
 11559 ;;  d               8  [STACK] unsigned long long 
 11560 ;;  x               1  [STACK] unsigned char 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;  n               8  [STACK] unsigned long long 
 11563 ;;  c               2  [STACK] int 
 11564 ;;  i               2  [STACK] int 
 11565 ;;  w               2  [STACK] int 
 11566 ;;  p               2  [STACK] int 
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  2  [STACK] int 
 11569 ;; Registers used:
 11570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11580 ;;Total ram usage:        0 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:   20
 11583 ;; This function calls:
 11584 ;;		_isalpha
 11585 ;;		_isupper
 11586 ;;		_pad
 11587 ;;		_toupper
 11588 ;; This function is called by:
 11589 ;;		_vfpfcnvrt
 11590 ;; This function uses a reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text45
 11594  015308                     __ptext45:
 11595                           	opt callstack 0
 11596  015308                     _xtoa:
 11597                           	opt callstack 0
 11598                           
 11599                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11600  015308  0E14               	movlw	20
 11601  01530A  26E1               	addwf	fsr1l,f,c
 11602  01530C  0E00               	movlw	0
 11603  01530E  22E2               	addwfc	fsr1h,f,c
 11604                           
 11605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11606                           
 11607                           ;incstack = 0
 11608 ;; hardware stack exceeded
 11609  015310  AE24               	btfss	(_prec+1)^0,7,c
 11610                           
 11611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11612  015312  9225               	bcf	_flags^0,1,c
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11615  015314  BE24               	btfsc	(_prec+1)^0,7,c
 11616  015316  D005               	goto	u11070
 11617  015318  5024               	movf	(_prec+1)^0,w,c
 11618  01531A  E110               	bnz	l11664
 11619  01531C  0423               	decf	_prec^0,w,c
 11620  01531E  B0D8               	btfsc	status,0,c
 11621  015320  D00D               	goto	l11664
 11622  015322                     u11070:
 11623  015322  0E01               	movlw	1
 11624  015324  6E0B               	movwf	(btemp+10)^0,c
 11625  015326  0E00               	movlw	0
 11626  015328  6E0C               	movwf	(btemp+11)^0,c
 11627                           
 11628                           ;stkvar	_p @ sp[(-20)+18]
 11629  01532A  0EFE               	movlw	-2
 11630  01532C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11631  015332  0EFF               	movlw	-1
 11632  015334  0060  F033  FFE3   	movff	btemp+11,plusw1
 11633  01533A  D008               	goto	l2238
 11634  01533C                     l11664:
 11635                           
 11636                           ;stkvar	_p @ sp[(-20)+18]
 11637  01533C  0EFE               	movlw	-2
 11638  01533E  0060  F08F  FFE3   	movff	_prec,plusw1
 11639  015344  0EFF               	movlw	-1
 11640  015346  0060  F093  FFE3   	movff	_prec+1,plusw1
 11641  01534C                     l2238:
 11642                           
 11643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11644                           ;stkvar	_w @ sp[(-20)+16]
 11645  01534C  0EFC               	movlw	-4
 11646  01534E  0060  F087  FFE3   	movff	_width,plusw1
 11647  015354  0EFD               	movlw	-3
 11648  015356  0060  F08B  FFE3   	movff	_width+1,plusw1
 11649                           
 11650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11651  01535C  A825               	btfss	_flags^0,4,c
 11652  01535E  D00B               	goto	l11670
 11653                           
 11654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11655                           ;stkvar	_w @ sp[(-20)+16]
 11656  015360  50E1               	movf	fsr1l,w,c
 11657  015362  0FFC               	addlw	-4
 11658  015364  6ED9               	movwf	fsr2l,c
 11659  015366  50E2               	movf	fsr1h,w,c
 11660  015368  6EDA               	movwf	fsr2h,c
 11661  01536A  0EFF               	movlw	255
 11662  01536C  22DA               	addwfc	fsr2h,f,c
 11663  01536E  0EFE               	movlw	254
 11664  015370  26DE               	addwf	postinc2,f,c
 11665  015372  0EFF               	movlw	255
 11666  015374  22DD               	addwfc	postdec2,f,c
 11667  015376                     l11670:
 11668                           
 11669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 11670                           ;stkvar	_d @ sp[(-20)+-10]
 11671  015376  0EE2               	movlw	226
 11672  015378  24E1               	addwf	fsr1l,w,c
 11673  01537A  6ED9               	movwf	fsr2l,c
 11674  01537C  0EFF               	movlw	255
 11675  01537E  20E2               	addwfc	fsr1h,w,c
 11676  015380  6EDA               	movwf	fsr2h,c
 11677                           
 11678                           ;stkvar	_n @ sp[(-20)+4]
 11679  015382  0E08               	movlw	8
 11680  015384  6E01               	movwf	btemp^0,c
 11681  015386  0EF0               	movlw	-16
 11682  015388                     us1109999:
 11683  015388  006F FF7B FFE3     	movff	postinc2,plusw1
 11684  01538E  28E8               	incf	wreg,w,c
 11685  015390  2E01               	decfsz	btemp^0,f,c
 11686  015392  D7FA               	bra	us1109999
 11687                           
 11688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11689  015394  0E4F               	movlw	79
 11690  015396  6E0B               	movwf	(btemp+10)^0,c
 11691  015398  0E00               	movlw	0
 11692  01539A  6E0C               	movwf	(btemp+11)^0,c
 11693                           
 11694                           ;stkvar	_i @ sp[(-20)+14]
 11695  01539C  0EFA               	movlw	-6
 11696  01539E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11697  0153A4  0EFB               	movlw	-5
 11698  0153A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11699                           
 11700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11701  0153AC  0103               	movlb	3	; () banked
 11702  0153AE  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11703                           
 11704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11705  0153B0  D0EE               	goto	l11708
 11706  0153B2                     l11676:
 11707                           
 11708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11709                           ;stkvar	_i @ sp[(-20)+14]
 11710  0153B2  50E1               	movf	fsr1l,w,c
 11711  0153B4  0FFA               	addlw	-6
 11712  0153B6  6ED9               	movwf	fsr2l,c
 11713  0153B8  50E2               	movf	fsr1h,w,c
 11714  0153BA  6EDA               	movwf	fsr2h,c
 11715  0153BC  0EFF               	movlw	255
 11716  0153BE  22DA               	addwfc	fsr2h,f,c
 11717  0153C0  06DE               	decf	postinc2,f,c
 11718  0153C2  0E00               	movlw	0
 11719  0153C4  5ADD               	subwfb	postdec2,f,c
 11720                           
 11721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 11722                           ;stkvar	_n @ sp[(-20)+4]
 11723  0153C6  0EF0               	movlw	-16
 11724  0153C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11725  0153CE  0EF1               	movlw	-15
 11726  0153D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11727  0153D6  0E0F               	movlw	15
 11728  0153D8  160B               	andwf	(btemp+10)^0,f,c
 11729  0153DA  0E00               	movlw	0
 11730  0153DC  160C               	andwf	(btemp+11)^0,f,c
 11731                           
 11732                           ;stkvar	_c @ sp[(-20)+12]
 11733  0153DE  0EF8               	movlw	-8
 11734  0153E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11735  0153E6  0EF9               	movlw	-7
 11736  0153E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 11737                           
 11738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 11739                           ;stkvar	_c @ sp[(-20)+12]
 11740  0153EE  0EF9               	movlw	-7
 11741  0153F0  BEE3               	btfsc	plusw1,7,c
 11742  0153F2  D00F               	goto	l11684
 11743  0153F4  0EF9               	movlw	-7
 11744  0153F6  50E3               	movf	plusw1,w,c
 11745  0153F8  E108               	bnz	u11100
 11746  0153FA  0EF8               	movlw	-8
 11747  0153FC  006F FF8C  F001    	movff	plusw1,btemp
 11748  015402  0E0A               	movlw	10
 11749  015404  5E01               	subwf	btemp^0,f,c
 11750  015406  A0D8               	btfss	status,0,c
 11751  015408  D004               	goto	l11684
 11752  01540A                     u11100:
 11753                           
 11754                           ;stkvar	_c @ sp[(-20)+12]
 11755  01540A  0EF8               	movlw	-8
 11756  01540C  50E3               	movf	plusw1,w,c
 11757  01540E  0F57               	addlw	87
 11758  015410  D003               	goto	L8
 11759  015412                     l11684:
 11760                           
 11761                           ;stkvar	_c @ sp[(-20)+12]
 11762  015412  0EF8               	movlw	-8
 11763  015414  50E3               	movf	plusw1,w,c
 11764  015416  0F30               	addlw	48
 11765  015418                     L8:
 11766  015418  6E0B               	movwf	(btemp+10)^0,c
 11767  01541A  0EF9               	movlw	-7
 11768  01541C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11769  015422  0E00               	movlw	0
 11770  015424  220C               	addwfc	(btemp+11)^0,f,c
 11771                           
 11772                           ;stkvar	_c @ sp[(-20)+12]
 11773  015426  0EF8               	movlw	-8
 11774  015428  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11775  01542E  0EF9               	movlw	-7
 11776  015430  0060  F033  FFE3   	movff	btemp+11,plusw1
 11777  015436  0EBF               	movlw	191
 11778  015438  6E0B               	movwf	(btemp+10)^0,c
 11779  01543A  0EFF               	movlw	255
 11780  01543C  6E0C               	movwf	(btemp+11)^0,c
 11781                           
 11782                           ;stkvar	_x @ sp[(-20)+-11]
 11783  01543E  0EE1               	movlw	-31
 11784  015440  50E3               	movf	plusw1,w,c
 11785  015442  6E09               	movwf	(btemp+8)^0,c
 11786  015444  6A0A               	clrf	(btemp+9)^0,c
 11787  015446  500B               	movf	(btemp+10)^0,w,c
 11788  015448  2609               	addwf	(btemp+8)^0,f,c
 11789  01544A  500C               	movf	(btemp+11)^0,w,c
 11790  01544C  220A               	addwfc	(btemp+9)^0,f,c
 11791  01544E  500A               	movf	(btemp+9)^0,w,c
 11792  015450  E106               	bnz	u11110
 11793  015452  0E1A               	movlw	26
 11794  015454  5C09               	subwf	(btemp+8)^0,w,c
 11795  015456  B0D8               	btfsc	status,0,c
 11796  015458  D002               	goto	u11110
 11797  01545A  0E01               	movlw	1
 11798  01545C  D001               	goto	u11120
 11799  01545E                     u11110:
 11800  01545E  0E00               	movlw	0
 11801  015460                     u11120:
 11802  015460  6E0B               	movwf	(btemp+10)^0,c
 11803  015462  6A0C               	clrf	(btemp+11)^0,c
 11804                           
 11805                           ;stkvar	_xtoa$5323 @ sp[(-20)+2]
 11806  015464  0EEE               	movlw	-18
 11807  015466  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11808  01546C  0EEF               	movlw	-17
 11809  01546E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11810                           
 11811                           ;stkvar	_xtoa$5323 @ sp[(-20)+2]
 11812  015474  0EEE               	movlw	-18
 11813  015476  006F FF8C  F001    	movff	plusw1,btemp
 11814  01547C  0EEF               	movlw	-17
 11815  01547E  50E3               	movf	plusw1,w,c
 11816  015480  1001               	iorwf	btemp^0,w,c
 11817  015482  B4D8               	btfsc	status,2,c
 11818  015484  D041               	goto	l11700
 11819  015486  0E9F               	movlw	159
 11820  015488  6E0B               	movwf	(btemp+10)^0,c
 11821  01548A  0EFF               	movlw	255
 11822  01548C  6E0C               	movwf	(btemp+11)^0,c
 11823                           
 11824                           ;stkvar	_c @ sp[(-20)+12]
 11825  01548E  0EF8               	movlw	-8
 11826  015490  006F FF8C  F009    	movff	plusw1,btemp+8
 11827  015496  0EF9               	movlw	-7
 11828  015498  006F FF8C  F00A    	movff	plusw1,btemp+9
 11829  01549E  0E20               	movlw	32
 11830  0154A0  1209               	iorwf	(btemp+8)^0,f,c
 11831  0154A2  0E00               	movlw	0
 11832  0154A4  120A               	iorwf	(btemp+9)^0,f,c
 11833  0154A6  500B               	movf	(btemp+10)^0,w,c
 11834  0154A8  2609               	addwf	(btemp+8)^0,f,c
 11835  0154AA  500C               	movf	(btemp+11)^0,w,c
 11836  0154AC  220A               	addwfc	(btemp+9)^0,f,c
 11837  0154AE  500A               	movf	(btemp+9)^0,w,c
 11838  0154B0  E106               	bnz	u11140
 11839  0154B2  0E1A               	movlw	26
 11840  0154B4  5C09               	subwf	(btemp+8)^0,w,c
 11841  0154B6  B0D8               	btfsc	status,0,c
 11842  0154B8  D002               	goto	u11140
 11843  0154BA  0E01               	movlw	1
 11844  0154BC  D001               	goto	u11150
 11845  0154BE                     u11140:
 11846  0154BE  0E00               	movlw	0
 11847  0154C0                     u11150:
 11848  0154C0  6E0B               	movwf	(btemp+10)^0,c
 11849  0154C2  6A0C               	clrf	(btemp+11)^0,c
 11850                           
 11851                           ;stkvar	_xtoa$5324 @ sp[(-20)+0]
 11852  0154C4  0EEC               	movlw	-20
 11853  0154C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11854  0154CC  0EED               	movlw	-19
 11855  0154CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 11856                           
 11857                           ;stkvar	_xtoa$5324 @ sp[(-20)+0]
 11858  0154D4  0EEC               	movlw	-20
 11859  0154D6  006F FF8C  F001    	movff	plusw1,btemp
 11860  0154DC  0EED               	movlw	-19
 11861  0154DE  50E3               	movf	plusw1,w,c
 11862  0154E0  1001               	iorwf	btemp^0,w,c
 11863  0154E2  B4D8               	btfsc	status,2,c
 11864  0154E4  D011               	goto	l11700
 11865                           
 11866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 11867                           ;stkvar	_c @ sp[(-20)+12]
 11868  0154E6  0EF8               	movlw	-8
 11869  0154E8  006F FF8F FFE6     	movff	plusw1,postinc1
 11870  0154EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11871  0154F4  ECFC  F0CD         	call	_toupper	;wreg free
 11872                           
 11873                           ;stkvar	_c @ sp[(-20)+12]
 11874  0154F8  0EF8               	movlw	-8
 11875  0154FA  0060  F007  FFE3   	movff	btemp,plusw1
 11876  015500  0EF9               	movlw	-7
 11877  015502  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11878  015508                     l11700:
 11879                           
 11880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 11881                           ;stkvar	_c @ sp[(-20)+12]
 11882                           ;stkvar	_i @ sp[(-20)+14]
 11883  015508  0EFA               	movlw	-6
 11884  01550A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11885  015510  0EFB               	movlw	-5
 11886  015512  006F FF8C  F00C    	movff	plusw1,btemp+11
 11887  015518  0E94               	movlw	low _dbuf
 11888  01551A  240B               	addwf	(btemp+10)^0,w,c
 11889  01551C  6ED9               	movwf	fsr2l,c
 11890  01551E  0E03               	movlw	high _dbuf
 11891  015520  200C               	addwfc	(btemp+11)^0,w,c
 11892  015522  6EDA               	movwf	fsr2h,c
 11893  015524  0EF8               	movlw	-8
 11894  015526  006F FF8F FFDF     	movff	plusw1,indf2
 11895                           
 11896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 11897                           ;stkvar	_p @ sp[(-20)+18]
 11898  01552C  50E1               	movf	fsr1l,w,c
 11899  01552E  0FFE               	addlw	-2
 11900  015530  6ED9               	movwf	fsr2l,c
 11901  015532  50E2               	movf	fsr1h,w,c
 11902  015534  6EDA               	movwf	fsr2h,c
 11903  015536  0EFF               	movlw	255
 11904  015538  22DA               	addwfc	fsr2h,f,c
 11905  01553A  06DE               	decf	postinc2,f,c
 11906  01553C  0E00               	movlw	0
 11907  01553E  5ADD               	subwfb	postdec2,f,c
 11908                           
 11909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 11910                           ;stkvar	_w @ sp[(-20)+16]
 11911  015540  50E1               	movf	fsr1l,w,c
 11912  015542  0FFC               	addlw	-4
 11913  015544  6ED9               	movwf	fsr2l,c
 11914  015546  50E2               	movf	fsr1h,w,c
 11915  015548  6EDA               	movwf	fsr2h,c
 11916  01554A  0EFF               	movlw	255
 11917  01554C  22DA               	addwfc	fsr2h,f,c
 11918  01554E  06DE               	decf	postinc2,f,c
 11919  015550  0E00               	movlw	0
 11920  015552  5ADD               	subwfb	postdec2,f,c
 11921                           
 11922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 11923  015554  0E04               	movlw	4
 11924  015556  6E0C               	movwf	(btemp+11)^0,c
 11925                           
 11926                           ;stkvar	_n @ sp[(-20)+4]
 11927  015558  50E1               	movf	fsr1l,w,c
 11928  01555A  0FF0               	addlw	-16
 11929  01555C  6ED9               	movwf	fsr2l,c
 11930  01555E  50E2               	movf	fsr1h,w,c
 11931  015560  6EDA               	movwf	fsr2h,c
 11932  015562  0EFF               	movlw	255
 11933  015564  22DA               	addwfc	fsr2h,f,c
 11934  015566  280C               	incf	(btemp+11)^0,w,c
 11935  015568  52DE               	movf	postinc2,f,c
 11936  01556A  D00F               	goto	u11170
 11937  01556C                     u11175:
 11938  01556C  52DE               	movf	postinc2,f,c
 11939  01556E  52DE               	movf	postinc2,f,c
 11940  015570  52DE               	movf	postinc2,f,c
 11941  015572  52DE               	movf	postinc2,f,c
 11942  015574  52DE               	movf	postinc2,f,c
 11943  015576  52DE               	movf	postinc2,f,c
 11944  015578  90D8               	bcf	status,0,c
 11945  01557A  32DD               	rrcf	postdec2,f,c
 11946  01557C  32DD               	rrcf	postdec2,f,c
 11947  01557E  32DD               	rrcf	postdec2,f,c
 11948  015580  32DD               	rrcf	postdec2,f,c
 11949  015582  32DD               	rrcf	postdec2,f,c
 11950  015584  32DD               	rrcf	postdec2,f,c
 11951  015586  32DD               	rrcf	postdec2,f,c
 11952  015588  32DE               	rrcf	postinc2,f,c
 11953  01558A                     u11170:
 11954  01558A  2EE8               	decfsz	wreg,f,c
 11955  01558C  D7EF               	goto	u11175
 11956  01558E                     l11708:
 11957                           
 11958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11959                           ;stkvar	_i @ sp[(-20)+14]
 11960  01558E  0EFB               	movlw	-5
 11961  015590  BEE3               	btfsc	plusw1,7,c
 11962  015592  D03A               	goto	u11220
 11963  015594  0EFB               	movlw	-5
 11964  015596  50E3               	movf	plusw1,w,c
 11965  015598  E108               	bnz	u11180
 11966  01559A  0EFA               	movlw	-6
 11967  01559C  006F FF8C  F001    	movff	plusw1,btemp
 11968  0155A2  0E02               	movlw	2
 11969  0155A4  5E01               	subwf	btemp^0,f,c
 11970  0155A6  A0D8               	btfss	status,0,c
 11971  0155A8  D02F               	goto	u11220
 11972  0155AA                     u11180:
 11973                           
 11974                           ;stkvar	_n @ sp[(-20)+4]
 11975  0155AA  0EF0               	movlw	-16
 11976  0155AC  50E3               	movf	plusw1,w,c
 11977  0155AE  E115               	bnz	u11191
 11978  0155B0  0EF1               	movlw	-15
 11979  0155B2  50E3               	movf	plusw1,w,c
 11980  0155B4  E112               	bnz	u11191
 11981  0155B6  0EF2               	movlw	-14
 11982  0155B8  50E3               	movf	plusw1,w,c
 11983  0155BA  E10F               	bnz	u11191
 11984  0155BC  0EF3               	movlw	-13
 11985  0155BE  50E3               	movf	plusw1,w,c
 11986  0155C0  E10C               	bnz	u11191
 11987  0155C2  0EF4               	movlw	-12
 11988  0155C4  50E3               	movf	plusw1,w,c
 11989  0155C6  E109               	bnz	u11191
 11990  0155C8  0EF5               	movlw	-11
 11991  0155CA  50E3               	movf	plusw1,w,c
 11992  0155CC  E106               	bnz	u11191
 11993  0155CE  0EF6               	movlw	-10
 11994  0155D0  50E3               	movf	plusw1,w,c
 11995  0155D2  E103               	bnz	u11191
 11996  0155D4  0EF7               	movlw	-9
 11997  0155D6  50E3               	movf	plusw1,w,c
 11998  0155D8  A4D8               	btfss	status,2,c
 11999  0155DA                     u11191:
 12000  0155DA  D6EB               	goto	l11676
 12001                           
 12002                           ;stkvar	_p @ sp[(-20)+18]
 12003  0155DC  0EFF               	movlw	-1
 12004  0155DE  BEE3               	btfsc	plusw1,7,c
 12005  0155E0  D007               	goto	u11200
 12006  0155E2  0EFF               	movlw	-1
 12007  0155E4  50E3               	movf	plusw1,w,c
 12008  0155E6  E103               	bnz	u11201
 12009  0155E8  0EFE               	movlw	-2
 12010  0155EA  04E3               	decf	plusw1,w,c
 12011  0155EC  B0D8               	btfsc	status,0,c
 12012  0155EE                     u11201:
 12013  0155EE  D6E1               	goto	l11676
 12014  0155F0                     u11200:
 12015                           
 12016                           ;stkvar	_w @ sp[(-20)+16]
 12017  0155F0  0EFD               	movlw	-3
 12018  0155F2  BEE3               	btfsc	plusw1,7,c
 12019  0155F4  D009               	goto	u11220
 12020  0155F6  0EFD               	movlw	-3
 12021  0155F8  50E3               	movf	plusw1,w,c
 12022  0155FA  E104               	bnz	u11210
 12023  0155FC  0EFC               	movlw	-4
 12024  0155FE  04E3               	decf	plusw1,w,c
 12025  015600  A0D8               	btfss	status,0,c
 12026  015602  D002               	goto	u11220
 12027  015604                     u11210:
 12028  015604  B225               	btfsc	_flags^0,1,c
 12029  015606  D6D5               	goto	l11676
 12030  015608                     u11220:
 12031                           
 12032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 12033  015608  A825               	btfss	_flags^0,4,c
 12034  01560A  D036               	goto	l11724
 12035                           
 12036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12037                           ;stkvar	_i @ sp[(-20)+14]
 12038  01560C  50E1               	movf	fsr1l,w,c
 12039  01560E  0FFA               	addlw	-6
 12040  015610  6ED9               	movwf	fsr2l,c
 12041  015612  50E2               	movf	fsr1h,w,c
 12042  015614  6EDA               	movwf	fsr2h,c
 12043  015616  0EFF               	movlw	255
 12044  015618  22DA               	addwfc	fsr2h,f,c
 12045  01561A  06DE               	decf	postinc2,f,c
 12046  01561C  0E00               	movlw	0
 12047  01561E  5ADD               	subwfb	postdec2,f,c
 12048                           
 12049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12050                           ;stkvar	_x @ sp[(-20)+-11]
 12051                           ;stkvar	_i @ sp[(-20)+14]
 12052  015620  0EFA               	movlw	-6
 12053  015622  006F FF8C  F00B    	movff	plusw1,btemp+10
 12054  015628  0EFB               	movlw	-5
 12055  01562A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12056  015630  0E94               	movlw	low _dbuf
 12057  015632  240B               	addwf	(btemp+10)^0,w,c
 12058  015634  6ED9               	movwf	fsr2l,c
 12059  015636  0E03               	movlw	high _dbuf
 12060  015638  200C               	addwfc	(btemp+11)^0,w,c
 12061  01563A  6EDA               	movwf	fsr2h,c
 12062  01563C  0EE1               	movlw	-31
 12063  01563E  006F FF8F FFDF     	movff	plusw1,indf2
 12064                           
 12065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12066                           ;stkvar	_i @ sp[(-20)+14]
 12067  015644  50E1               	movf	fsr1l,w,c
 12068  015646  0FFA               	addlw	-6
 12069  015648  6ED9               	movwf	fsr2l,c
 12070  01564A  50E2               	movf	fsr1h,w,c
 12071  01564C  6EDA               	movwf	fsr2h,c
 12072  01564E  0EFF               	movlw	255
 12073  015650  22DA               	addwfc	fsr2h,f,c
 12074  015652  06DE               	decf	postinc2,f,c
 12075  015654  0E00               	movlw	0
 12076  015656  5ADD               	subwfb	postdec2,f,c
 12077                           
 12078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12079                           ;stkvar	_i @ sp[(-20)+14]
 12080  015658  0EFA               	movlw	-6
 12081  01565A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12082  015660  0EFB               	movlw	-5
 12083  015662  006F FF8C  F00C    	movff	plusw1,btemp+11
 12084  015668  0E94               	movlw	low _dbuf
 12085  01566A  240B               	addwf	(btemp+10)^0,w,c
 12086  01566C  6ED9               	movwf	fsr2l,c
 12087  01566E  0E03               	movlw	high _dbuf
 12088  015670  200C               	addwfc	(btemp+11)^0,w,c
 12089  015672  6EDA               	movwf	fsr2h,c
 12090  015674  0E30               	movlw	48
 12091  015676  6EDF               	movwf	indf2,c
 12092  015678                     l11724:
 12093                           
 12094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12095                           ;stkvar	_w @ sp[(-20)+16]
 12096  015678  0EFC               	movlw	-4
 12097  01567A  006F FF8F FFE6     	movff	plusw1,postinc1
 12098  015680  006F FF8F FFE6     	movff	plusw1,postinc1
 12099                           
 12100                           ;stkvar	_i @ sp[(-22)+14]
 12101  015686  0E94               	movlw	low _dbuf
 12102  015688  6E0B               	movwf	(btemp+10)^0,c
 12103  01568A  0E03               	movlw	high _dbuf
 12104  01568C  6E0C               	movwf	(btemp+11)^0,c
 12105  01568E  0EF8               	movlw	-8
 12106  015690  50E3               	movf	plusw1,w,c
 12107  015692  260B               	addwf	(btemp+10)^0,f,c
 12108  015694  0EF9               	movlw	-7
 12109  015696  50E3               	movf	plusw1,w,c
 12110  015698  220C               	addwfc	(btemp+11)^0,f,c
 12111  01569A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12112  0156A0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12113                           
 12114                           ;stkvar	_fp @ sp[(-24)+-2]
 12115  0156A6  0EE6               	movlw	-26
 12116  0156A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12117  0156AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12118  0156B4  EC95  F0C5         	call	_pad	;wreg free
 12119                           
 12120                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12121  0156B8  0EE1               	movlw	225
 12122  0156BA  26E1               	addwf	fsr1l,f,c
 12123  0156BC  0EFF               	movlw	255
 12124  0156BE  22E2               	addwfc	fsr1h,f,c
 12125  0156C0  0012               	return		;funcret
 12126  0156C2                     __end_of_xtoa:
 12127                           	opt callstack 0
 12128                           
 12129 ;; *************** function _toupper *****************
 12130 ;; Defined at:
 12131 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;  c               2  [STACK] int 
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;		None
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  2  [STACK] int 
 12138 ;; Registers used:
 12139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/3
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12149 ;;Total ram usage:        0 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; Hardware stack levels required when called:   16
 12152 ;; This function calls:
 12153 ;;		_islower
 12154 ;; This function is called by:
 12155 ;;		_xtoa
 12156 ;; This function uses a reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text46
 12160  019BF8                     __ptext46:
 12161                           	opt callstack 0
 12162  019BF8                     _toupper:
 12163                           	opt callstack 0
 12164                           
 12165                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12166  019BF8  52E6               	movf	postinc1,f,c
 12167  019BFA  52E6               	movf	postinc1,f,c
 12168                           
 12169                           ;stkvar	_c @ sp[(-2)+-2]
 12170                           
 12171                           ;incstack = 0
 12172 ;; hardware stack exceeded
 12173  019BFC  0EFC               	movlw	-4
 12174  019BFE  50E3               	movf	plusw1,w,c
 12175  019C00  0F9F               	addlw	159
 12176  019C02  6E0B               	movwf	(btemp+10)^0,c
 12177  019C04  0EFD               	movlw	-3
 12178  019C06  006F FF8C  F00C    	movff	plusw1,btemp+11
 12179  019C0C  0EFF               	movlw	255
 12180  019C0E  220C               	addwfc	(btemp+11)^0,f,c
 12181  019C10  500C               	movf	(btemp+11)^0,w,c
 12182  019C12  E106               	bnz	u5840
 12183  019C14  0E1A               	movlw	26
 12184  019C16  5C0B               	subwf	(btemp+10)^0,w,c
 12185  019C18  B0D8               	btfsc	status,0,c
 12186  019C1A  D002               	goto	u5840
 12187  019C1C  0E01               	movlw	1
 12188  019C1E  D001               	goto	u5850
 12189  019C20                     u5840:
 12190  019C20  0E00               	movlw	0
 12191  019C22                     u5850:
 12192  019C22  6E0B               	movwf	(btemp+10)^0,c
 12193  019C24  6A0C               	clrf	(btemp+11)^0,c
 12194                           
 12195                           ;stkvar	_toupper$6130 @ sp[(-2)+0]
 12196  019C26  0EFE               	movlw	-2
 12197  019C28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12198  019C2E  0EFF               	movlw	-1
 12199  019C30  0060  F033  FFE3   	movff	btemp+11,plusw1
 12200                           
 12201                           ;stkvar	_toupper$6130 @ sp[(-2)+0]
 12202  019C36  0EFE               	movlw	-2
 12203  019C38  006F FF8C  F001    	movff	plusw1,btemp
 12204  019C3E  0EFF               	movlw	-1
 12205  019C40  50E3               	movf	plusw1,w,c
 12206  019C42  1001               	iorwf	btemp^0,w,c
 12207  019C44  B4D8               	btfsc	status,2,c
 12208  019C46  D00D               	goto	l7650
 12209                           
 12210                           ;stkvar	_c @ sp[(-2)+-2]
 12211  019C48  0EFC               	movlw	-4
 12212  019C4A  006F FF8C  F001    	movff	plusw1,btemp
 12213  019C50  0EFD               	movlw	-3
 12214  019C52  006F FF8C  F002    	movff	plusw1,btemp+1
 12215  019C58  0E5F               	movlw	95
 12216  019C5A  1601               	andwf	btemp^0,f,c
 12217  019C5C  0E00               	movlw	0
 12218  019C5E  1602               	andwf	(btemp+1)^0,f,c
 12219  019C60  D008               	goto	l3405
 12220  019C62                     l7650:
 12221                           
 12222                           ;stkvar	_c @ sp[(-2)+-2]
 12223  019C62  0EFC               	movlw	-4
 12224  019C64  006F FF8C  F001    	movff	plusw1,btemp
 12225  019C6A  0EFD               	movlw	-3
 12226  019C6C  006F FF8C  F002    	movff	plusw1,btemp+1
 12227  019C72                     l3405:
 12228                           
 12229                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12230  019C72  52E5               	movf	postdec1,f,c
 12231  019C74  52E5               	movf	postdec1,f,c
 12232  019C76  52E5               	movf	postdec1,f,c
 12233  019C78  52E5               	movf	postdec1,f,c
 12234  019C7A  0012               	return		;funcret
 12235  019C7C                     __end_of_toupper:
 12236                           	opt callstack 0
 12237                           
 12238 ;; *************** function _islower *****************
 12239 ;; Defined at:
 12240 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  c               2  [STACK] int 
 12243 ;; Auto vars:     Size  Location     Type
 12244 ;;		None
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  2  [STACK] int 
 12247 ;; Registers used:
 12248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12258 ;;Total ram usage:        0 bytes
 12259 ;; Hardware stack levels used:    1
 12260 ;; Hardware stack levels required when called:   15
 12261 ;; This function calls:
 12262 ;;		Nothing
 12263 ;; This function is called by:
 12264 ;;		_toupper
 12265 ;; This function uses a reentrant model
 12266 ;;
 12267                           
 12268                           	psect	text47
 12269  01A892                     __ptext47:
 12270                           	opt callstack 0
 12271  01A892                     _islower:
 12272                           	opt callstack 0
 12273                           
 12274                           ;stkvar	_c @ sp[(0)+-2]
 12275                           
 12276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12277                           ;incstack = 0
 12278 ;; hardware stack exceeded
 12279  01A892  0EFE               	movlw	-2
 12280  01A894  50E3               	movf	plusw1,w,c
 12281  01A896  0F9F               	addlw	159
 12282  01A898  6E0B               	movwf	(btemp+10)^0,c
 12283  01A89A  0EFF               	movlw	-1
 12284  01A89C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12285  01A8A2  0EFF               	movlw	255
 12286  01A8A4  220C               	addwfc	(btemp+11)^0,f,c
 12287  01A8A6  500C               	movf	(btemp+11)^0,w,c
 12288  01A8A8  E106               	bnz	u5530
 12289  01A8AA  0E1A               	movlw	26
 12290  01A8AC  5C0B               	subwf	(btemp+10)^0,w,c
 12291  01A8AE  B0D8               	btfsc	status,0,c
 12292  01A8B0  D002               	goto	u5530
 12293  01A8B2  0E01               	movlw	1
 12294  01A8B4  D001               	goto	u5540
 12295  01A8B6                     u5530:
 12296  01A8B6  0E00               	movlw	0
 12297  01A8B8                     u5540:
 12298  01A8B8  6E01               	movwf	btemp^0,c
 12299  01A8BA  6A02               	clrf	(btemp+1)^0,c
 12300                           
 12301                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12302  01A8BC  52E5               	movf	postdec1,f,c
 12303  01A8BE  52E5               	movf	postdec1,f,c
 12304  01A8C0  0012               	return		;funcret
 12305  01A8C2                     __end_of_islower:
 12306                           	opt callstack 0
 12307                           
 12308 ;; *************** function _isalpha *****************
 12309 ;; Defined at:
 12310 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 12311 ;; Parameters:    Size  Location     Type
 12312 ;;  c               2  [STACK] int 
 12313 ;; Auto vars:     Size  Location     Type
 12314 ;;		None
 12315 ;; Return value:  Size  Location     Type
 12316 ;;                  2  [STACK] int 
 12317 ;; Registers used:
 12318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 12319 ;; Tracked objects:
 12320 ;;		On entry : 0/0
 12321 ;;		On exit  : 0/0
 12322 ;;		Unchanged: 0/0
 12323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12328 ;;Total ram usage:        0 bytes
 12329 ;; Hardware stack levels used:    1
 12330 ;; Hardware stack levels required when called:   15
 12331 ;; This function calls:
 12332 ;;		Nothing
 12333 ;; This function is called by:
 12334 ;;		_xtoa
 12335 ;; This function uses a reentrant model
 12336 ;;
 12337                           
 12338                           	psect	text48
 12339  01A4EE                     __ptext48:
 12340                           	opt callstack 0
 12341  01A4EE                     _isalpha:
 12342                           	opt callstack 0
 12343                           
 12344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12345                           ;incstack = 0
 12346 ;; hardware stack exceeded
 12347  01A4EE  0E9F               	movlw	159
 12348  01A4F0  6E0B               	movwf	(btemp+10)^0,c
 12349  01A4F2  0EFF               	movlw	255
 12350  01A4F4  6E0C               	movwf	(btemp+11)^0,c
 12351                           
 12352                           ;stkvar	_c @ sp[(0)+-2]
 12353  01A4F6  0EFE               	movlw	-2
 12354  01A4F8  006F FF8C  F009    	movff	plusw1,btemp+8
 12355  01A4FE  0EFF               	movlw	-1
 12356  01A500  006F FF8C  F00A    	movff	plusw1,btemp+9
 12357  01A506  0E20               	movlw	32
 12358  01A508  1209               	iorwf	(btemp+8)^0,f,c
 12359  01A50A  0E00               	movlw	0
 12360  01A50C  120A               	iorwf	(btemp+9)^0,f,c
 12361  01A50E  500B               	movf	(btemp+10)^0,w,c
 12362  01A510  2609               	addwf	(btemp+8)^0,f,c
 12363  01A512  500C               	movf	(btemp+11)^0,w,c
 12364  01A514  220A               	addwfc	(btemp+9)^0,f,c
 12365  01A516  500A               	movf	(btemp+9)^0,w,c
 12366  01A518  E106               	bnz	u5820
 12367  01A51A  0E1A               	movlw	26
 12368  01A51C  5C09               	subwf	(btemp+8)^0,w,c
 12369  01A51E  B0D8               	btfsc	status,0,c
 12370  01A520  D002               	goto	u5820
 12371  01A522  0E01               	movlw	1
 12372  01A524  D001               	goto	u5830
 12373  01A526                     u5820:
 12374  01A526  0E00               	movlw	0
 12375  01A528                     u5830:
 12376  01A528  6E01               	movwf	btemp^0,c
 12377  01A52A  6A02               	clrf	(btemp+1)^0,c
 12378                           
 12379                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12380  01A52C  52E5               	movf	postdec1,f,c
 12381  01A52E  52E5               	movf	postdec1,f,c
 12382  01A530  0012               	return		;funcret
 12383  01A532                     __end_of_isalpha:
 12384                           	opt callstack 0
 12385                           
 12386 ;; *************** function _utoa *****************
 12387 ;; Defined at:
 12388 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12389 ;; Parameters:    Size  Location     Type
 12390 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12391 ;;		 -> f(6), NULL(0), 
 12392 ;;  d               8  [STACK] unsigned long long 
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;  n               8  [STACK] unsigned long long 
 12395 ;;  i               2  [STACK] int 
 12396 ;;  w               2  [STACK] int 
 12397 ;;  p               2  [STACK] int 
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  2  [STACK] int 
 12400 ;; Registers used:
 12401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12411 ;;Total ram usage:        0 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:   20
 12414 ;; This function calls:
 12415 ;;		___lodiv
 12416 ;;		___lomod
 12417 ;;		_pad
 12418 ;; This function is called by:
 12419 ;;		_vfpfcnvrt
 12420 ;; This function uses a reentrant model
 12421 ;;
 12422                           
 12423                           	psect	text49
 12424  015DD0                     __ptext49:
 12425                           	opt callstack 0
 12426  015DD0                     _utoa:
 12427                           	opt callstack 0
 12428                           
 12429                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12430  015DD0  0E0E               	movlw	14
 12431  015DD2  26E1               	addwf	fsr1l,f,c
 12432  015DD4  0E00               	movlw	0
 12433  015DD6  22E2               	addwfc	fsr1h,f,c
 12434                           
 12435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 12436                           
 12437                           ;incstack = 0
 12438 ;; hardware stack exceeded
 12439  015DD8  AE24               	btfss	(_prec+1)^0,7,c
 12440                           
 12441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 12442  015DDA  9225               	bcf	_flags^0,1,c
 12443                           
 12444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 12445  015DDC  BE24               	btfsc	(_prec+1)^0,7,c
 12446  015DDE  D005               	goto	u10990
 12447  015DE0  5024               	movf	(_prec+1)^0,w,c
 12448  015DE2  E110               	bnz	l11624
 12449  015DE4  0423               	decf	_prec^0,w,c
 12450  015DE6  B0D8               	btfsc	status,0,c
 12451  015DE8  D00D               	goto	l11624
 12452  015DEA                     u10990:
 12453  015DEA  0E01               	movlw	1
 12454  015DEC  6E0B               	movwf	(btemp+10)^0,c
 12455  015DEE  0E00               	movlw	0
 12456  015DF0  6E0C               	movwf	(btemp+11)^0,c
 12457                           
 12458                           ;stkvar	_p @ sp[(-14)+12]
 12459  015DF2  0EFE               	movlw	-2
 12460  015DF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12461  015DFA  0EFF               	movlw	-1
 12462  015DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12463  015E02  D008               	goto	l2223
 12464  015E04                     l11624:
 12465                           
 12466                           ;stkvar	_p @ sp[(-14)+12]
 12467  015E04  0EFE               	movlw	-2
 12468  015E06  0060  F08F  FFE3   	movff	_prec,plusw1
 12469  015E0C  0EFF               	movlw	-1
 12470  015E0E  0060  F093  FFE3   	movff	_prec+1,plusw1
 12471  015E14                     l2223:
 12472                           
 12473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 12474                           ;stkvar	_w @ sp[(-14)+10]
 12475  015E14  0EFC               	movlw	-4
 12476  015E16  0060  F087  FFE3   	movff	_width,plusw1
 12477  015E1C  0EFD               	movlw	-3
 12478  015E1E  0060  F08B  FFE3   	movff	_width+1,plusw1
 12479                           
 12480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 12481                           ;stkvar	_d @ sp[(-14)+-10]
 12482  015E24  0EE8               	movlw	232
 12483  015E26  24E1               	addwf	fsr1l,w,c
 12484  015E28  6ED9               	movwf	fsr2l,c
 12485  015E2A  0EFF               	movlw	255
 12486  015E2C  20E2               	addwfc	fsr1h,w,c
 12487  015E2E  6EDA               	movwf	fsr2h,c
 12488                           
 12489                           ;stkvar	_n @ sp[(-14)+0]
 12490  015E30  0E08               	movlw	8
 12491  015E32  6E01               	movwf	btemp^0,c
 12492  015E34  0EF2               	movlw	-14
 12493  015E36                     us1100999:
 12494  015E36  006F FF7B FFE3     	movff	postinc2,plusw1
 12495  015E3C  28E8               	incf	wreg,w,c
 12496  015E3E  2E01               	decfsz	btemp^0,f,c
 12497  015E40  D7FA               	bra	us1100999
 12498                           
 12499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 12500  015E42  0E4F               	movlw	79
 12501  015E44  6E0B               	movwf	(btemp+10)^0,c
 12502  015E46  0E00               	movlw	0
 12503  015E48  6E0C               	movwf	(btemp+11)^0,c
 12504                           
 12505                           ;stkvar	_i @ sp[(-14)+8]
 12506  015E4A  0EFA               	movlw	-6
 12507  015E4C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12508  015E52  0EFB               	movlw	-5
 12509  015E54  0060  F033  FFE3   	movff	btemp+11,plusw1
 12510                           
 12511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 12512  015E5A  0103               	movlb	3	; () banked
 12513  015E5C  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12514                           
 12515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12516  015E5E  D0FB               	goto	l11642
 12517  015E60                     l11632:
 12518                           
 12519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 12520                           ;stkvar	_i @ sp[(-14)+8]
 12521  015E60  50E1               	movf	fsr1l,w,c
 12522  015E62  0FFA               	addlw	-6
 12523  015E64  6ED9               	movwf	fsr2l,c
 12524  015E66  50E2               	movf	fsr1h,w,c
 12525  015E68  6EDA               	movwf	fsr2h,c
 12526  015E6A  0EFF               	movlw	255
 12527  015E6C  22DA               	addwfc	fsr2h,f,c
 12528  015E6E  06DE               	decf	postinc2,f,c
 12529  015E70  0E00               	movlw	0
 12530  015E72  5ADD               	subwfb	postdec2,f,c
 12531                           
 12532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 12533  015E74  0E0A               	movlw	10
 12534  015E76  6EE6               	movwf	postinc1,c
 12535  015E78  0E00               	movlw	0
 12536  015E7A  6EE6               	movwf	postinc1,c
 12537  015E7C  0E00               	movlw	0
 12538  015E7E  6EE6               	movwf	postinc1,c
 12539  015E80  0E00               	movlw	0
 12540  015E82  6EE6               	movwf	postinc1,c
 12541  015E84  0E00               	movlw	0
 12542  015E86  6EE6               	movwf	postinc1,c
 12543  015E88  0E00               	movlw	0
 12544  015E8A  6EE6               	movwf	postinc1,c
 12545  015E8C  0E00               	movlw	0
 12546  015E8E  6EE6               	movwf	postinc1,c
 12547  015E90  0E00               	movlw	0
 12548  015E92  6EE6               	movwf	postinc1,c
 12549                           
 12550                           ;stkvar	_n @ sp[(-22)+0]
 12551  015E94  50E1               	movf	fsr1l,w,c
 12552  015E96  0FEA               	addlw	-22
 12553  015E98  6ED9               	movwf	fsr2l,c
 12554  015E9A  50E2               	movf	fsr1h,w,c
 12555  015E9C  6EDA               	movwf	fsr2h,c
 12556  015E9E  0EFF               	movlw	255
 12557  015EA0  22DA               	addwfc	fsr2h,f,c
 12558  015EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 12559  015EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 12560  015EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 12561  015EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 12562  015EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 12563  015EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 12564  015EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12565  015ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 12566  015ED2  ECA2  F0C2         	call	___lomod	;wreg free
 12567  015ED6  52E5               	movf	postdec1,f,c
 12568  015ED8  006F FF9C  F018    	movff	indf1,btemp+23
 12569  015EDE  52E5               	movf	postdec1,f,c
 12570  015EE0  006F FF9C  F017    	movff	indf1,btemp+22
 12571  015EE6  52E5               	movf	postdec1,f,c
 12572  015EE8  006F FF9C  F016    	movff	indf1,btemp+21
 12573  015EEE  52E5               	movf	postdec1,f,c
 12574  015EF0  006F FF9C  F015    	movff	indf1,btemp+20
 12575  015EF6  52E5               	movf	postdec1,f,c
 12576  015EF8  006F FF9C  F014    	movff	indf1,btemp+19
 12577  015EFE  52E5               	movf	postdec1,f,c
 12578  015F00  006F FF9C  F013    	movff	indf1,btemp+18
 12579  015F06  52E5               	movf	postdec1,f,c
 12580  015F08  006F FF9C  F012    	movff	indf1,btemp+17
 12581  015F0E  52E5               	movf	postdec1,f,c
 12582  015F10  006F FF9C  F011    	movff	indf1,btemp+16
 12583  015F16  0EF8               	movlw	248
 12584  015F18  26E1               	addwf	fsr1l,f,c
 12585  015F1A  0EFF               	movlw	255
 12586  015F1C  22E2               	addwfc	fsr1h,f,c
 12587  015F1E  0E30               	movlw	48
 12588  015F20  2611               	addwf	(btemp+16)^0,f,c
 12589                           
 12590                           ;stkvar	_i @ sp[(-14)+8]
 12591  015F22  0EFA               	movlw	-6
 12592  015F24  006F FF8C  F00B    	movff	plusw1,btemp+10
 12593  015F2A  0EFB               	movlw	-5
 12594  015F2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12595  015F32  0E94               	movlw	low _dbuf
 12596  015F34  240B               	addwf	(btemp+10)^0,w,c
 12597  015F36  6ED9               	movwf	fsr2l,c
 12598  015F38  0E03               	movlw	high _dbuf
 12599  015F3A  200C               	addwfc	(btemp+11)^0,w,c
 12600  015F3C  6EDA               	movwf	fsr2h,c
 12601  015F3E  0060  F047  FFDF   	movff	btemp+16,indf2
 12602                           
 12603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 12604                           ;stkvar	_p @ sp[(-14)+12]
 12605  015F44  50E1               	movf	fsr1l,w,c
 12606  015F46  0FFE               	addlw	-2
 12607  015F48  6ED9               	movwf	fsr2l,c
 12608  015F4A  50E2               	movf	fsr1h,w,c
 12609  015F4C  6EDA               	movwf	fsr2h,c
 12610  015F4E  0EFF               	movlw	255
 12611  015F50  22DA               	addwfc	fsr2h,f,c
 12612  015F52  06DE               	decf	postinc2,f,c
 12613  015F54  0E00               	movlw	0
 12614  015F56  5ADD               	subwfb	postdec2,f,c
 12615                           
 12616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 12617                           ;stkvar	_w @ sp[(-14)+10]
 12618  015F58  50E1               	movf	fsr1l,w,c
 12619  015F5A  0FFC               	addlw	-4
 12620  015F5C  6ED9               	movwf	fsr2l,c
 12621  015F5E  50E2               	movf	fsr1h,w,c
 12622  015F60  6EDA               	movwf	fsr2h,c
 12623  015F62  0EFF               	movlw	255
 12624  015F64  22DA               	addwfc	fsr2h,f,c
 12625  015F66  06DE               	decf	postinc2,f,c
 12626  015F68  0E00               	movlw	0
 12627  015F6A  5ADD               	subwfb	postdec2,f,c
 12628                           
 12629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 12630  015F6C  0E0A               	movlw	10
 12631  015F6E  6EE6               	movwf	postinc1,c
 12632  015F70  0E00               	movlw	0
 12633  015F72  6EE6               	movwf	postinc1,c
 12634  015F74  0E00               	movlw	0
 12635  015F76  6EE6               	movwf	postinc1,c
 12636  015F78  0E00               	movlw	0
 12637  015F7A  6EE6               	movwf	postinc1,c
 12638  015F7C  0E00               	movlw	0
 12639  015F7E  6EE6               	movwf	postinc1,c
 12640  015F80  0E00               	movlw	0
 12641  015F82  6EE6               	movwf	postinc1,c
 12642  015F84  0E00               	movlw	0
 12643  015F86  6EE6               	movwf	postinc1,c
 12644  015F88  0E00               	movlw	0
 12645  015F8A  6EE6               	movwf	postinc1,c
 12646                           
 12647                           ;stkvar	_n @ sp[(-22)+0]
 12648  015F8C  50E1               	movf	fsr1l,w,c
 12649  015F8E  0FEA               	addlw	-22
 12650  015F90  6ED9               	movwf	fsr2l,c
 12651  015F92  50E2               	movf	fsr1h,w,c
 12652  015F94  6EDA               	movwf	fsr2h,c
 12653  015F96  0EFF               	movlw	255
 12654  015F98  22DA               	addwfc	fsr2h,f,c
 12655  015F9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12656  015FA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12657  015FA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12658  015FAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12659  015FB2  006F FF7B FFE6     	movff	postinc2,postinc1
 12660  015FB8  006F FF7B FFE6     	movff	postinc2,postinc1
 12661  015FBE  006F FF7B FFE6     	movff	postinc2,postinc1
 12662  015FC4  006F FF7B FFE6     	movff	postinc2,postinc1
 12663  015FCA  ECAE  F0BD         	call	___lodiv	;wreg free
 12664  015FCE  52E5               	movf	postdec1,f,c
 12665  015FD0  006F FF9C  F018    	movff	indf1,btemp+23
 12666  015FD6  52E5               	movf	postdec1,f,c
 12667  015FD8  006F FF9C  F017    	movff	indf1,btemp+22
 12668  015FDE  52E5               	movf	postdec1,f,c
 12669  015FE0  006F FF9C  F016    	movff	indf1,btemp+21
 12670  015FE6  52E5               	movf	postdec1,f,c
 12671  015FE8  006F FF9C  F015    	movff	indf1,btemp+20
 12672  015FEE  52E5               	movf	postdec1,f,c
 12673  015FF0  006F FF9C  F014    	movff	indf1,btemp+19
 12674  015FF6  52E5               	movf	postdec1,f,c
 12675  015FF8  006F FF9C  F013    	movff	indf1,btemp+18
 12676  015FFE  52E5               	movf	postdec1,f,c
 12677  016000  006F FF9C  F012    	movff	indf1,btemp+17
 12678  016006  52E5               	movf	postdec1,f,c
 12679  016008  006F FF9C  F011    	movff	indf1,btemp+16
 12680  01600E  0EF8               	movlw	248
 12681  016010  26E1               	addwf	fsr1l,f,c
 12682  016012  0EFF               	movlw	255
 12683  016014  22E2               	addwfc	fsr1h,f,c
 12684                           
 12685                           ;stkvar	_n @ sp[(-14)+0]
 12686  016016  0EF2               	movlw	-14
 12687  016018  0060  F047  FFE3   	movff	btemp+16,plusw1
 12688  01601E  0EF3               	movlw	-13
 12689  016020  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12690  016026  0EF4               	movlw	-12
 12691  016028  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12692  01602E  0EF5               	movlw	-11
 12693  016030  0060  F053  FFE3   	movff	btemp+19,plusw1
 12694  016036  0EF6               	movlw	-10
 12695  016038  0060  F057  FFE3   	movff	btemp+20,plusw1
 12696  01603E  0EF7               	movlw	-9
 12697  016040  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12698  016046  0EF8               	movlw	-8
 12699  016048  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12700  01604E  0EF9               	movlw	-7
 12701  016050  0060  F063  FFE3   	movff	btemp+23,plusw1
 12702  016056                     l11642:
 12703                           
 12704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12705                           ;stkvar	_i @ sp[(-14)+8]
 12706  016056  0EFA               	movlw	-6
 12707  016058  006F FF8C  F001    	movff	plusw1,btemp
 12708  01605E  0EFB               	movlw	-5
 12709  016060  50E3               	movf	plusw1,w,c
 12710  016062  1001               	iorwf	btemp^0,w,c
 12711  016064  B4D8               	btfsc	status,2,c
 12712  016066  D02F               	goto	u11050
 12713                           
 12714                           ;stkvar	_n @ sp[(-14)+0]
 12715  016068  0EF2               	movlw	-14
 12716  01606A  50E3               	movf	plusw1,w,c
 12717  01606C  E115               	bnz	u11021
 12718  01606E  0EF3               	movlw	-13
 12719  016070  50E3               	movf	plusw1,w,c
 12720  016072  E112               	bnz	u11021
 12721  016074  0EF4               	movlw	-12
 12722  016076  50E3               	movf	plusw1,w,c
 12723  016078  E10F               	bnz	u11021
 12724  01607A  0EF5               	movlw	-11
 12725  01607C  50E3               	movf	plusw1,w,c
 12726  01607E  E10C               	bnz	u11021
 12727  016080  0EF6               	movlw	-10
 12728  016082  50E3               	movf	plusw1,w,c
 12729  016084  E109               	bnz	u11021
 12730  016086  0EF7               	movlw	-9
 12731  016088  50E3               	movf	plusw1,w,c
 12732  01608A  E106               	bnz	u11021
 12733  01608C  0EF8               	movlw	-8
 12734  01608E  50E3               	movf	plusw1,w,c
 12735  016090  E103               	bnz	u11021
 12736  016092  0EF9               	movlw	-7
 12737  016094  50E3               	movf	plusw1,w,c
 12738  016096  A4D8               	btfss	status,2,c
 12739  016098                     u11021:
 12740  016098  D6E3               	goto	l11632
 12741                           
 12742                           ;stkvar	_p @ sp[(-14)+12]
 12743  01609A  0EFF               	movlw	-1
 12744  01609C  BEE3               	btfsc	plusw1,7,c
 12745  01609E  D007               	goto	u11030
 12746  0160A0  0EFF               	movlw	-1
 12747  0160A2  50E3               	movf	plusw1,w,c
 12748  0160A4  E103               	bnz	u11031
 12749  0160A6  0EFE               	movlw	-2
 12750  0160A8  04E3               	decf	plusw1,w,c
 12751  0160AA  B0D8               	btfsc	status,0,c
 12752  0160AC                     u11031:
 12753  0160AC  D6D9               	goto	l11632
 12754  0160AE                     u11030:
 12755                           
 12756                           ;stkvar	_w @ sp[(-14)+10]
 12757  0160AE  0EFD               	movlw	-3
 12758  0160B0  BEE3               	btfsc	plusw1,7,c
 12759  0160B2  D009               	goto	u11050
 12760  0160B4  0EFD               	movlw	-3
 12761  0160B6  50E3               	movf	plusw1,w,c
 12762  0160B8  E104               	bnz	u11040
 12763  0160BA  0EFC               	movlw	-4
 12764  0160BC  04E3               	decf	plusw1,w,c
 12765  0160BE  A0D8               	btfss	status,0,c
 12766  0160C0  D002               	goto	u11050
 12767  0160C2                     u11040:
 12768  0160C2  B225               	btfsc	_flags^0,1,c
 12769  0160C4  D6CD               	goto	l11632
 12770  0160C6                     u11050:
 12771                           
 12772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 12773                           ;stkvar	_w @ sp[(-14)+10]
 12774  0160C6  0EFC               	movlw	-4
 12775  0160C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12776  0160CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12777                           
 12778                           ;stkvar	_i @ sp[(-16)+8]
 12779  0160D4  0E94               	movlw	low _dbuf
 12780  0160D6  6E0B               	movwf	(btemp+10)^0,c
 12781  0160D8  0E03               	movlw	high _dbuf
 12782  0160DA  6E0C               	movwf	(btemp+11)^0,c
 12783  0160DC  0EF8               	movlw	-8
 12784  0160DE  50E3               	movf	plusw1,w,c
 12785  0160E0  260B               	addwf	(btemp+10)^0,f,c
 12786  0160E2  0EF9               	movlw	-7
 12787  0160E4  50E3               	movf	plusw1,w,c
 12788  0160E6  220C               	addwfc	(btemp+11)^0,f,c
 12789  0160E8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12790  0160EE  0060  F033  FFE6   	movff	btemp+11,postinc1
 12791                           
 12792                           ;stkvar	_fp @ sp[(-18)+-2]
 12793  0160F4  0EEC               	movlw	-20
 12794  0160F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12795  0160FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12796  016102  EC95  F0C5         	call	_pad	;wreg free
 12797                           
 12798                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12799  016106  0EE8               	movlw	232
 12800  016108  26E1               	addwf	fsr1l,f,c
 12801  01610A  0EFF               	movlw	255
 12802  01610C  22E2               	addwfc	fsr1h,f,c
 12803  01610E  0012               	return		;funcret
 12804  016110                     __end_of_utoa:
 12805                           	opt callstack 0
 12806                           
 12807 ;; *************** function ___lomod *****************
 12808 ;; Defined at:
 12809 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 12810 ;; Parameters:    Size  Location     Type
 12811 ;;  dividend        8  [STACK] unsigned long long 
 12812 ;;  divisor         8  [STACK] unsigned long long 
 12813 ;; Auto vars:     Size  Location     Type
 12814 ;;  counter         1  [STACK] unsigned char 
 12815 ;; Return value:  Size  Location     Type
 12816 ;;                  8  [STACK] unsigned long long 
 12817 ;; Registers used:
 12818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/3
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12828 ;;Total ram usage:        0 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; Hardware stack levels required when called:   15
 12831 ;; This function calls:
 12832 ;;		Nothing
 12833 ;; This function is called by:
 12834 ;;		_utoa
 12835 ;; This function uses a reentrant model
 12836 ;;
 12837                           
 12838                           	psect	text50
 12839  018544                     __ptext50:
 12840                           	opt callstack 0
 12841  018544                     ___lomod:
 12842                           	opt callstack 0
 12843                           
 12844                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12845  018544  52E6               	movf	postinc1,f,c
 12846                           
 12847                           ;stkvar	_divisor @ sp[(-1)+-16]
 12848                           
 12849                           ;incstack = 0
 12850 ;; hardware stack exceeded
 12851  018546  0EEF               	movlw	-17
 12852  018548  50E3               	movf	plusw1,w,c
 12853  01854A  E116               	bnz	u6970
 12854  01854C  0EF0               	movlw	-16
 12855  01854E  50E3               	movf	plusw1,w,c
 12856  018550  E113               	bnz	u6970
 12857  018552  0EF1               	movlw	-15
 12858  018554  50E3               	movf	plusw1,w,c
 12859  018556  E110               	bnz	u6970
 12860  018558  0EF2               	movlw	-14
 12861  01855A  50E3               	movf	plusw1,w,c
 12862  01855C  E10D               	bnz	u6970
 12863  01855E  0EF3               	movlw	-13
 12864  018560  50E3               	movf	plusw1,w,c
 12865  018562  E10A               	bnz	u6970
 12866  018564  0EF4               	movlw	-12
 12867  018566  50E3               	movf	plusw1,w,c
 12868  018568  E107               	bnz	u6970
 12869  01856A  0EF5               	movlw	-11
 12870  01856C  50E3               	movf	plusw1,w,c
 12871  01856E  E104               	bnz	u6970
 12872  018570  0EF6               	movlw	-10
 12873  018572  50E3               	movf	plusw1,w,c
 12874  018574  B4D8               	btfsc	status,2,c
 12875  018576  D075               	goto	u7000
 12876  018578                     u6970:
 12877                           
 12878                           ;stkvar	_counter @ sp[(-1)+0]
 12879  018578  0EFF               	movlw	-1
 12880  01857A  6AE3               	clrf	plusw1,c
 12881  01857C  D012               	goto	L9
 12882  01857E                     l8260:
 12883                           
 12884                           ;stkvar	_divisor @ sp[(-1)+-16]
 12885  01857E  90D8               	bcf	status,0,c
 12886  018580  0EEF               	movlw	-17
 12887  018582  36E3               	rlcf	plusw1,f,c
 12888  018584  0EF0               	movlw	-16
 12889  018586  36E3               	rlcf	plusw1,f,c
 12890  018588  0EF1               	movlw	-15
 12891  01858A  36E3               	rlcf	plusw1,f,c
 12892  01858C  0EF2               	movlw	-14
 12893  01858E  36E3               	rlcf	plusw1,f,c
 12894  018590  0EF3               	movlw	-13
 12895  018592  36E3               	rlcf	plusw1,f,c
 12896  018594  0EF4               	movlw	-12
 12897  018596  36E3               	rlcf	plusw1,f,c
 12898  018598  0EF5               	movlw	-11
 12899  01859A  36E3               	rlcf	plusw1,f,c
 12900  01859C  0EF6               	movlw	-10
 12901  01859E  36E3               	rlcf	plusw1,f,c
 12902                           
 12903                           ;stkvar	_counter @ sp[(-1)+0]
 12904  0185A0  0EFF               	movlw	-1
 12905  0185A2                     L9:
 12906  0185A2  2AE3               	incf	plusw1,f,c
 12907                           
 12908                           ;stkvar	_divisor @ sp[(-1)+-16]
 12909  0185A4  0EF6               	movlw	-10
 12910  0185A6  AEE3               	btfss	plusw1,7,c
 12911  0185A8  D7EA               	goto	l8260
 12912  0185AA                     u6980:
 12913                           
 12914                           ;stkvar	_divisor @ sp[(-1)+-16]
 12915                           ;stkvar	_dividend @ sp[(-1)+-8]
 12916  0185AA  50E1               	movf	fsr1l,w,c
 12917  0185AC  0FF7               	addlw	-9
 12918  0185AE  6ED9               	movwf	fsr2l,c
 12919  0185B0  50E2               	movf	fsr1h,w,c
 12920  0185B2  6EDA               	movwf	fsr2h,c
 12921  0185B4  0EFF               	movlw	255
 12922  0185B6  22DA               	addwfc	fsr2h,f,c
 12923  0185B8  0EEF               	movlw	-17
 12924  0185BA  50E3               	movf	plusw1,w,c
 12925  0185BC  5CDE               	subwf	postinc2,w,c
 12926  0185BE  0EF0               	movlw	-16
 12927  0185C0  50E3               	movf	plusw1,w,c
 12928  0185C2  58DE               	subwfb	postinc2,w,c
 12929  0185C4  0EF1               	movlw	-15
 12930  0185C6  50E3               	movf	plusw1,w,c
 12931  0185C8  58DE               	subwfb	postinc2,w,c
 12932  0185CA  0EF2               	movlw	-14
 12933  0185CC  50E3               	movf	plusw1,w,c
 12934  0185CE  58DE               	subwfb	postinc2,w,c
 12935  0185D0  0EF3               	movlw	-13
 12936  0185D2  50E3               	movf	plusw1,w,c
 12937  0185D4  58DE               	subwfb	postinc2,w,c
 12938  0185D6  0EF4               	movlw	-12
 12939  0185D8  50E3               	movf	plusw1,w,c
 12940  0185DA  58DE               	subwfb	postinc2,w,c
 12941  0185DC  0EF5               	movlw	-11
 12942  0185DE  50E3               	movf	plusw1,w,c
 12943  0185E0  58DE               	subwfb	postinc2,w,c
 12944  0185E2  0EF6               	movlw	-10
 12945  0185E4  50E3               	movf	plusw1,w,c
 12946  0185E6  58DE               	subwfb	postinc2,w,c
 12947  0185E8  A0D8               	btfss	status,0,c
 12948  0185EA  D01F               	goto	l8268
 12949                           
 12950                           ;stkvar	_divisor @ sp[(-1)+-16]
 12951                           ;stkvar	_dividend @ sp[(-1)+-8]
 12952  0185EC  50E1               	movf	fsr1l,w,c
 12953  0185EE  0FF7               	addlw	-9
 12954  0185F0  6ED9               	movwf	fsr2l,c
 12955  0185F2  50E2               	movf	fsr1h,w,c
 12956  0185F4  6EDA               	movwf	fsr2h,c
 12957  0185F6  0EFF               	movlw	255
 12958  0185F8  22DA               	addwfc	fsr2h,f,c
 12959  0185FA  0EEF               	movlw	-17
 12960  0185FC  50E3               	movf	plusw1,w,c
 12961  0185FE  5EDE               	subwf	postinc2,f,c
 12962  018600  0EF0               	movlw	-16
 12963  018602  50E3               	movf	plusw1,w,c
 12964  018604  5ADE               	subwfb	postinc2,f,c
 12965  018606  0EF1               	movlw	-15
 12966  018608  50E3               	movf	plusw1,w,c
 12967  01860A  5ADE               	subwfb	postinc2,f,c
 12968  01860C  0EF2               	movlw	-14
 12969  01860E  50E3               	movf	plusw1,w,c
 12970  018610  5ADE               	subwfb	postinc2,f,c
 12971  018612  0EF3               	movlw	-13
 12972  018614  50E3               	movf	plusw1,w,c
 12973  018616  5ADE               	subwfb	postinc2,f,c
 12974  018618  0EF4               	movlw	-12
 12975  01861A  50E3               	movf	plusw1,w,c
 12976  01861C  5ADE               	subwfb	postinc2,f,c
 12977  01861E  0EF5               	movlw	-11
 12978  018620  50E3               	movf	plusw1,w,c
 12979  018622  5ADE               	subwfb	postinc2,f,c
 12980  018624  0EF6               	movlw	-10
 12981  018626  50E3               	movf	plusw1,w,c
 12982  018628  5ADE               	subwfb	postinc2,f,c
 12983  01862A                     l8268:
 12984                           
 12985                           ;stkvar	_divisor @ sp[(-1)+-16]
 12986  01862A  90D8               	bcf	status,0,c
 12987  01862C  0EF6               	movlw	-10
 12988  01862E  32E3               	rrcf	plusw1,f,c
 12989  018630  0EF5               	movlw	-11
 12990  018632  32E3               	rrcf	plusw1,f,c
 12991  018634  0EF4               	movlw	-12
 12992  018636  32E3               	rrcf	plusw1,f,c
 12993  018638  0EF3               	movlw	-13
 12994  01863A  32E3               	rrcf	plusw1,f,c
 12995  01863C  0EF2               	movlw	-14
 12996  01863E  32E3               	rrcf	plusw1,f,c
 12997  018640  0EF1               	movlw	-15
 12998  018642  32E3               	rrcf	plusw1,f,c
 12999  018644  0EF0               	movlw	-16
 13000  018646  32E3               	rrcf	plusw1,f,c
 13001  018648  0EEF               	movlw	-17
 13002  01864A  32E3               	rrcf	plusw1,f,c
 13003                           
 13004                           ;stkvar	_counter @ sp[(-1)+0]
 13005  01864C  0EFF               	movlw	-1
 13006  01864E  50E3               	movf	plusw1,w,c
 13007  018650  6E01               	movwf	btemp^0,c
 13008  018652  0E01               	movlw	1
 13009  018654  5E01               	subwf	btemp^0,f,c
 13010  018656  0EFF               	movlw	-1
 13011  018658  0060  F007  FFE3   	movff	btemp,plusw1
 13012  01865E  A4D8               	btfss	status,2,c
 13013  018660  D7A4               	goto	u6980
 13014  018662                     u7000:
 13015                           
 13016                           ;stkvar	_dividend @ sp[(-1)+-8]
 13017  018662  0EF7               	movlw	247
 13018  018664  24E1               	addwf	fsr1l,w,c
 13019  018666  6ED9               	movwf	fsr2l,c
 13020  018668  0EFF               	movlw	255
 13021  01866A  20E2               	addwfc	fsr1h,w,c
 13022  01866C  6EDA               	movwf	fsr2h,c
 13023                           
 13024                           ;stkvar	?___lomod @ sp[(-1)+-8]
 13025  01866E  0E08               	movlw	8
 13026  018670  6E01               	movwf	btemp^0,c
 13027  018672  0EF7               	movlw	-9
 13028  018674                     us701999:
 13029  018674  006F FF7B FFE3     	movff	postinc2,plusw1
 13030  01867A  28E8               	incf	wreg,w,c
 13031  01867C  2E01               	decfsz	btemp^0,f,c
 13032  01867E  D7FA               	bra	us701999
 13033                           
 13034                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13035  018680  52E5               	movf	postdec1,f,c
 13036  018682  0012               	return		;funcret
 13037  018684                     __end_of___lomod:
 13038                           	opt callstack 0
 13039                           
 13040 ;; *************** function ___lodiv *****************
 13041 ;; Defined at:
 13042 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;  dividend        8  [STACK] unsigned long long 
 13045 ;;  divisor         8  [STACK] unsigned long long 
 13046 ;; Auto vars:     Size  Location     Type
 13047 ;;  quotient        8  [STACK] unsigned long long 
 13048 ;;  counter         1  [STACK] unsigned char 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  8  [STACK] unsigned long long 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/3
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:   15
 13065 ;; This function calls:
 13066 ;;		Nothing
 13067 ;; This function is called by:
 13068 ;;		_utoa
 13069 ;; This function uses a reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text51
 13073  017B5C                     __ptext51:
 13074                           	opt callstack 0
 13075  017B5C                     ___lodiv:
 13076                           	opt callstack 0
 13077                           
 13078                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13079  017B5C  0E09               	movlw	9
 13080  017B5E  26E1               	addwf	fsr1l,f,c
 13081  017B60  0E00               	movlw	0
 13082  017B62  22E2               	addwfc	fsr1h,f,c
 13083                           
 13084                           ;stkvar	_quotient @ sp[(-9)+0]
 13085                           
 13086                           ;incstack = 0
 13087 ;; hardware stack exceeded
 13088  017B64  0E07               	movlw	7
 13089  017B66  6E01               	movwf	btemp^0,c
 13090  017B68  0EF7               	movlw	-9
 13091  017B6A                     u6911:
 13092  017B6A  6AE3               	clrf	plusw1,c
 13093  017B6C  2AE8               	incf	wreg,f,c
 13094  017B6E  0601               	decf	btemp^0,f,c
 13095  017B70  E2FC               	bc	u6911
 13096                           
 13097                           ;stkvar	_divisor @ sp[(-9)+-16]
 13098  017B72  0EE7               	movlw	-25
 13099  017B74  50E3               	movf	plusw1,w,c
 13100  017B76  E116               	bnz	u6920
 13101  017B78  0EE8               	movlw	-24
 13102  017B7A  50E3               	movf	plusw1,w,c
 13103  017B7C  E113               	bnz	u6920
 13104  017B7E  0EE9               	movlw	-23
 13105  017B80  50E3               	movf	plusw1,w,c
 13106  017B82  E110               	bnz	u6920
 13107  017B84  0EEA               	movlw	-22
 13108  017B86  50E3               	movf	plusw1,w,c
 13109  017B88  E10D               	bnz	u6920
 13110  017B8A  0EEB               	movlw	-21
 13111  017B8C  50E3               	movf	plusw1,w,c
 13112  017B8E  E10A               	bnz	u6920
 13113  017B90  0EEC               	movlw	-20
 13114  017B92  50E3               	movf	plusw1,w,c
 13115  017B94  E107               	bnz	u6920
 13116  017B96  0EED               	movlw	-19
 13117  017B98  50E3               	movf	plusw1,w,c
 13118  017B9A  E104               	bnz	u6920
 13119  017B9C  0EEE               	movlw	-18
 13120  017B9E  50E3               	movf	plusw1,w,c
 13121  017BA0  B4D8               	btfsc	status,2,c
 13122  017BA2  D088               	goto	u6950
 13123  017BA4                     u6920:
 13124                           
 13125                           ;stkvar	_counter @ sp[(-9)+8]
 13126  017BA4  0EFF               	movlw	-1
 13127  017BA6  6AE3               	clrf	plusw1,c
 13128  017BA8  D012               	goto	L10
 13129  017BAA                     l8236:
 13130                           
 13131                           ;stkvar	_divisor @ sp[(-9)+-16]
 13132  017BAA  90D8               	bcf	status,0,c
 13133  017BAC  0EE7               	movlw	-25
 13134  017BAE  36E3               	rlcf	plusw1,f,c
 13135  017BB0  0EE8               	movlw	-24
 13136  017BB2  36E3               	rlcf	plusw1,f,c
 13137  017BB4  0EE9               	movlw	-23
 13138  017BB6  36E3               	rlcf	plusw1,f,c
 13139  017BB8  0EEA               	movlw	-22
 13140  017BBA  36E3               	rlcf	plusw1,f,c
 13141  017BBC  0EEB               	movlw	-21
 13142  017BBE  36E3               	rlcf	plusw1,f,c
 13143  017BC0  0EEC               	movlw	-20
 13144  017BC2  36E3               	rlcf	plusw1,f,c
 13145  017BC4  0EED               	movlw	-19
 13146  017BC6  36E3               	rlcf	plusw1,f,c
 13147  017BC8  0EEE               	movlw	-18
 13148  017BCA  36E3               	rlcf	plusw1,f,c
 13149                           
 13150                           ;stkvar	_counter @ sp[(-9)+8]
 13151  017BCC  0EFF               	movlw	-1
 13152  017BCE                     L10:
 13153  017BCE  2AE3               	incf	plusw1,f,c
 13154                           
 13155                           ;stkvar	_divisor @ sp[(-9)+-16]
 13156  017BD0  0EEE               	movlw	-18
 13157  017BD2  AEE3               	btfss	plusw1,7,c
 13158  017BD4  D7EA               	goto	l8236
 13159  017BD6                     u6930:
 13160                           
 13161                           ;stkvar	_quotient @ sp[(-9)+0]
 13162  017BD6  90D8               	bcf	status,0,c
 13163  017BD8  0EF7               	movlw	-9
 13164  017BDA  36E3               	rlcf	plusw1,f,c
 13165  017BDC  0EF8               	movlw	-8
 13166  017BDE  36E3               	rlcf	plusw1,f,c
 13167  017BE0  0EF9               	movlw	-7
 13168  017BE2  36E3               	rlcf	plusw1,f,c
 13169  017BE4  0EFA               	movlw	-6
 13170  017BE6  36E3               	rlcf	plusw1,f,c
 13171  017BE8  0EFB               	movlw	-5
 13172  017BEA  36E3               	rlcf	plusw1,f,c
 13173  017BEC  0EFC               	movlw	-4
 13174  017BEE  36E3               	rlcf	plusw1,f,c
 13175  017BF0  0EFD               	movlw	-3
 13176  017BF2  36E3               	rlcf	plusw1,f,c
 13177  017BF4  0EFE               	movlw	-2
 13178  017BF6  36E3               	rlcf	plusw1,f,c
 13179                           
 13180                           ;stkvar	_divisor @ sp[(-9)+-16]
 13181                           ;stkvar	_dividend @ sp[(-9)+-8]
 13182  017BF8  50E1               	movf	fsr1l,w,c
 13183  017BFA  0FEF               	addlw	-17
 13184  017BFC  6ED9               	movwf	fsr2l,c
 13185  017BFE  50E2               	movf	fsr1h,w,c
 13186  017C00  6EDA               	movwf	fsr2h,c
 13187  017C02  0EFF               	movlw	255
 13188  017C04  22DA               	addwfc	fsr2h,f,c
 13189  017C06  0EE7               	movlw	-25
 13190  017C08  50E3               	movf	plusw1,w,c
 13191  017C0A  5CDE               	subwf	postinc2,w,c
 13192  017C0C  0EE8               	movlw	-24
 13193  017C0E  50E3               	movf	plusw1,w,c
 13194  017C10  58DE               	subwfb	postinc2,w,c
 13195  017C12  0EE9               	movlw	-23
 13196  017C14  50E3               	movf	plusw1,w,c
 13197  017C16  58DE               	subwfb	postinc2,w,c
 13198  017C18  0EEA               	movlw	-22
 13199  017C1A  50E3               	movf	plusw1,w,c
 13200  017C1C  58DE               	subwfb	postinc2,w,c
 13201  017C1E  0EEB               	movlw	-21
 13202  017C20  50E3               	movf	plusw1,w,c
 13203  017C22  58DE               	subwfb	postinc2,w,c
 13204  017C24  0EEC               	movlw	-20
 13205  017C26  50E3               	movf	plusw1,w,c
 13206  017C28  58DE               	subwfb	postinc2,w,c
 13207  017C2A  0EED               	movlw	-19
 13208  017C2C  50E3               	movf	plusw1,w,c
 13209  017C2E  58DE               	subwfb	postinc2,w,c
 13210  017C30  0EEE               	movlw	-18
 13211  017C32  50E3               	movf	plusw1,w,c
 13212  017C34  58DE               	subwfb	postinc2,w,c
 13213  017C36  A0D8               	btfss	status,0,c
 13214  017C38  D021               	goto	l8248
 13215                           
 13216                           ;stkvar	_divisor @ sp[(-9)+-16]
 13217                           ;stkvar	_dividend @ sp[(-9)+-8]
 13218  017C3A  50E1               	movf	fsr1l,w,c
 13219  017C3C  0FEF               	addlw	-17
 13220  017C3E  6ED9               	movwf	fsr2l,c
 13221  017C40  50E2               	movf	fsr1h,w,c
 13222  017C42  6EDA               	movwf	fsr2h,c
 13223  017C44  0EFF               	movlw	255
 13224  017C46  22DA               	addwfc	fsr2h,f,c
 13225  017C48  0EE7               	movlw	-25
 13226  017C4A  50E3               	movf	plusw1,w,c
 13227  017C4C  5EDE               	subwf	postinc2,f,c
 13228  017C4E  0EE8               	movlw	-24
 13229  017C50  50E3               	movf	plusw1,w,c
 13230  017C52  5ADE               	subwfb	postinc2,f,c
 13231  017C54  0EE9               	movlw	-23
 13232  017C56  50E3               	movf	plusw1,w,c
 13233  017C58  5ADE               	subwfb	postinc2,f,c
 13234  017C5A  0EEA               	movlw	-22
 13235  017C5C  50E3               	movf	plusw1,w,c
 13236  017C5E  5ADE               	subwfb	postinc2,f,c
 13237  017C60  0EEB               	movlw	-21
 13238  017C62  50E3               	movf	plusw1,w,c
 13239  017C64  5ADE               	subwfb	postinc2,f,c
 13240  017C66  0EEC               	movlw	-20
 13241  017C68  50E3               	movf	plusw1,w,c
 13242  017C6A  5ADE               	subwfb	postinc2,f,c
 13243  017C6C  0EED               	movlw	-19
 13244  017C6E  50E3               	movf	plusw1,w,c
 13245  017C70  5ADE               	subwfb	postinc2,f,c
 13246  017C72  0EEE               	movlw	-18
 13247  017C74  50E3               	movf	plusw1,w,c
 13248  017C76  5ADE               	subwfb	postinc2,f,c
 13249                           
 13250                           ;stkvar	_quotient @ sp[(-9)+0]
 13251  017C78  0EF7               	movlw	-9
 13252  017C7A  80E3               	bsf	plusw1,0,c
 13253  017C7C                     l8248:
 13254                           
 13255                           ;stkvar	_divisor @ sp[(-9)+-16]
 13256  017C7C  90D8               	bcf	status,0,c
 13257  017C7E  0EEE               	movlw	-18
 13258  017C80  32E3               	rrcf	plusw1,f,c
 13259  017C82  0EED               	movlw	-19
 13260  017C84  32E3               	rrcf	plusw1,f,c
 13261  017C86  0EEC               	movlw	-20
 13262  017C88  32E3               	rrcf	plusw1,f,c
 13263  017C8A  0EEB               	movlw	-21
 13264  017C8C  32E3               	rrcf	plusw1,f,c
 13265  017C8E  0EEA               	movlw	-22
 13266  017C90  32E3               	rrcf	plusw1,f,c
 13267  017C92  0EE9               	movlw	-23
 13268  017C94  32E3               	rrcf	plusw1,f,c
 13269  017C96  0EE8               	movlw	-24
 13270  017C98  32E3               	rrcf	plusw1,f,c
 13271  017C9A  0EE7               	movlw	-25
 13272  017C9C  32E3               	rrcf	plusw1,f,c
 13273                           
 13274                           ;stkvar	_counter @ sp[(-9)+8]
 13275  017C9E  0EFF               	movlw	-1
 13276  017CA0  50E3               	movf	plusw1,w,c
 13277  017CA2  6E01               	movwf	btemp^0,c
 13278  017CA4  0E01               	movlw	1
 13279  017CA6  5E01               	subwf	btemp^0,f,c
 13280  017CA8  0EFF               	movlw	-1
 13281  017CAA  0060  F007  FFE3   	movff	btemp,plusw1
 13282  017CB0  A4D8               	btfss	status,2,c
 13283  017CB2  D791               	goto	u6930
 13284  017CB4                     u6950:
 13285                           
 13286                           ;stkvar	_quotient @ sp[(-9)+0]
 13287  017CB4  0EF7               	movlw	247
 13288  017CB6  24E1               	addwf	fsr1l,w,c
 13289  017CB8  6ED9               	movwf	fsr2l,c
 13290  017CBA  0EFF               	movlw	255
 13291  017CBC  20E2               	addwfc	fsr1h,w,c
 13292  017CBE  6EDA               	movwf	fsr2h,c
 13293                           
 13294                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 13295  017CC0  0E08               	movlw	8
 13296  017CC2  6E01               	movwf	btemp^0,c
 13297  017CC4  0EEF               	movlw	-17
 13298  017CC6                     us696999:
 13299  017CC6  006F FF7B FFE3     	movff	postinc2,plusw1
 13300  017CCC  28E8               	incf	wreg,w,c
 13301  017CCE  2E01               	decfsz	btemp^0,f,c
 13302  017CD0  D7FA               	bra	us696999
 13303                           
 13304                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13305  017CD2  0EF7               	movlw	247
 13306  017CD4  26E1               	addwf	fsr1l,f,c
 13307  017CD6  0EFF               	movlw	255
 13308  017CD8  22E2               	addwfc	fsr1h,f,c
 13309  017CDA  0012               	return		;funcret
 13310  017CDC                     __end_of___lodiv:
 13311                           	opt callstack 0
 13312                           
 13313 ;; *************** function _strncmp *****************
 13314 ;; Defined at:
 13315 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  _l              2  [STACK] PTR const unsigned char 
 13318 ;;		 -> ct(3), STR_55(85), STR_53(3), STR_52(3), 
 13319 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 13320 ;;		 -> STR_47(19), STR_46(19), STR_45(24), STR_44(15), 
 13321 ;;		 -> STR_43(15), STR_42(15), STR_41(10), STR_40(10), 
 13322 ;;		 -> STR_39(19), STR_38(19), STR_35(3), STR_34(3), 
 13323 ;;		 -> STR_33(3), STR_32(17), STR_31(16), STR_30(16), 
 13324 ;;		 -> STR_29(19), STR_28(20), STR_27(19), STR_26(19), 
 13325 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 13326 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
 13327 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
 13328 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 13329 ;;		 -> STR_9(22), STR_8(18), STR_7(17), STR_6(17), 
 13330 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 13331 ;;  _r              2  [STACK] PTR const unsigned char 
 13332 ;;		 -> STR_89(3), STR_85(3), STR_80(3), STR_75(3), 
 13333 ;;		 -> STR_70(3), STR_66(3), 
 13334 ;;  n               2  [STACK] unsigned int 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;  r               2  [STACK] PTR const unsigned char 
 13337 ;;		 -> STR_89(3), STR_85(3), STR_80(3), STR_75(3), 
 13338 ;;		 -> STR_70(3), STR_66(3), 
 13339 ;;  l               2  [STACK] PTR const unsigned char 
 13340 ;;		 -> ct(3), STR_55(85), STR_53(3), STR_52(3), 
 13341 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 13342 ;;		 -> STR_47(19), STR_46(19), STR_45(24), STR_44(15), 
 13343 ;;		 -> STR_43(15), STR_42(15), STR_41(10), STR_40(10), 
 13344 ;;		 -> STR_39(19), STR_38(19), STR_35(3), STR_34(3), 
 13345 ;;		 -> STR_33(3), STR_32(17), STR_31(16), STR_30(16), 
 13346 ;;		 -> STR_29(19), STR_28(20), STR_27(19), STR_26(19), 
 13347 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 13348 ;;		 -> STR_21(19), STR_20(17), STR_19(16), STR_18(16), 
 13349 ;;		 -> STR_17(26), STR_16(26), STR_15(22), STR_14(17), 
 13350 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 13351 ;;		 -> STR_9(22), STR_8(18), STR_7(17), STR_6(17), 
 13352 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 13353 ;; Return value:  Size  Location     Type
 13354 ;;                  2  [STACK] int 
 13355 ;; Registers used:
 13356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13366 ;;Total ram usage:        0 bytes
 13367 ;; Hardware stack levels used:    1
 13368 ;; Hardware stack levels required when called:   15
 13369 ;; This function calls:
 13370 ;;		Nothing
 13371 ;; This function is called by:
 13372 ;;		_vfpfcnvrt
 13373 ;; This function uses a reentrant model
 13374 ;;
 13375                           
 13376                           	psect	text52
 13377  016DEE                     __ptext52:
 13378                           	opt callstack 0
 13379  016DEE                     _strncmp:
 13380                           	opt callstack 0
 13381                           
 13382                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13383  016DEE  52E6               	movf	postinc1,f,c
 13384  016DF0  52E6               	movf	postinc1,f,c
 13385  016DF2  52E6               	movf	postinc1,f,c
 13386  016DF4  52E6               	movf	postinc1,f,c
 13387                           
 13388                           ;stkvar	__l @ sp[(-4)+-2]
 13389                           
 13390                           ;incstack = 0
 13391 ;; hardware stack exceeded
 13392  016DF6  0EFA               	movlw	-6
 13393  016DF8  006F FF8C  F00B    	movff	plusw1,btemp+10
 13394  016DFE  0EFB               	movlw	-5
 13395  016E00  006F FF8C  F00C    	movff	plusw1,btemp+11
 13396                           
 13397                           ;stkvar	_l @ sp[(-4)+2]
 13398  016E06  0EFF               	movlw	-1
 13399  016E08  0060  F033  FFE3   	movff	btemp+11,plusw1
 13400  016E0E  0EFE               	movlw	-2
 13401  016E10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13402                           
 13403                           ;stkvar	__r @ sp[(-4)+-4]
 13404  016E16  0EF8               	movlw	-8
 13405  016E18  006F FF8C  F00B    	movff	plusw1,btemp+10
 13406  016E1E  0EF9               	movlw	-7
 13407  016E20  006F FF8C  F00C    	movff	plusw1,btemp+11
 13408                           
 13409                           ;stkvar	_r @ sp[(-4)+0]
 13410  016E26  0EFD               	movlw	-3
 13411  016E28  0060  F033  FFE3   	movff	btemp+11,plusw1
 13412  016E2E  0EFC               	movlw	-4
 13413  016E30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13414                           
 13415                           ;stkvar	_n @ sp[(-4)+-6]
 13416  016E36  0EF6               	movlw	-10
 13417  016E38  006F FF8C  F001    	movff	plusw1,btemp
 13418  016E3E  0E01               	movlw	1
 13419  016E40  5E01               	subwf	btemp^0,f,c
 13420  016E42  0EF6               	movlw	-10
 13421  016E44  0060  F007  FFE3   	movff	btemp,plusw1
 13422  016E4A  0EF7               	movlw	-9
 13423  016E4C  006F FF8C  F001    	movff	plusw1,btemp
 13424  016E52  0E00               	movlw	0
 13425  016E54  5A01               	subwfb	btemp^0,f,c
 13426  016E56  0EF7               	movlw	-9
 13427  016E58  0060  F007  FFE3   	movff	btemp,plusw1
 13428  016E5E  0EF6               	movlw	-10
 13429  016E60  28E3               	incf	plusw1,w,c
 13430  016E62  E13F               	bnz	l8944
 13431  016E64  0EF7               	movlw	-9
 13432  016E66  28E3               	incf	plusw1,w,c
 13433  016E68  A4D8               	btfss	status,2,c
 13434  016E6A  D03B               	goto	l8944
 13435  016E6C  0E00               	movlw	0
 13436  016E6E  6E01               	movwf	btemp^0,c
 13437  016E70  0E00               	movlw	0
 13438  016E72  6E02               	movwf	(btemp+1)^0,c
 13439  016E74  D0C7               	goto	l3377
 13440  016E76                     l8942:
 13441                           
 13442                           ;stkvar	_l @ sp[(-4)+2]
 13443  016E76  0EFE               	movlw	-2
 13444  016E78  50E3               	movf	plusw1,w,c
 13445  016E7A  0F01               	addlw	1
 13446  016E7C  6E01               	movwf	btemp^0,c
 13447  016E7E  0EFE               	movlw	-2
 13448  016E80  0060  F007  FFE3   	movff	btemp,plusw1
 13449  016E86  6A01               	clrf	btemp^0,c
 13450  016E88  0EFF               	movlw	-1
 13451  016E8A  50E3               	movf	plusw1,w,c
 13452  016E8C  2001               	addwfc	btemp^0,w,c
 13453  016E8E  6E01               	movwf	btemp^0,c
 13454  016E90  0EFF               	movlw	-1
 13455  016E92  0060  F007  FFE3   	movff	btemp,plusw1
 13456                           
 13457                           ;stkvar	_r @ sp[(-4)+0]
 13458  016E98  0EFC               	movlw	-4
 13459  016E9A  50E3               	movf	plusw1,w,c
 13460  016E9C  0F01               	addlw	1
 13461  016E9E  6E01               	movwf	btemp^0,c
 13462  016EA0  0EFC               	movlw	-4
 13463  016EA2  0060  F007  FFE3   	movff	btemp,plusw1
 13464  016EA8  6A01               	clrf	btemp^0,c
 13465  016EAA  0EFD               	movlw	-3
 13466  016EAC  50E3               	movf	plusw1,w,c
 13467  016EAE  2001               	addwfc	btemp^0,w,c
 13468  016EB0  6E01               	movwf	btemp^0,c
 13469  016EB2  0EFD               	movlw	-3
 13470  016EB4  0060  F007  FFE3   	movff	btemp,plusw1
 13471                           
 13472                           ;stkvar	_n @ sp[(-4)+-6]
 13473  016EBA  0EF6               	movlw	-10
 13474  016EBC  006F FF8C  F001    	movff	plusw1,btemp
 13475  016EC2  0E01               	movlw	1
 13476  016EC4  5E01               	subwf	btemp^0,f,c
 13477  016EC6  0EF6               	movlw	-10
 13478  016EC8  0060  F007  FFE3   	movff	btemp,plusw1
 13479  016ECE  0EF7               	movlw	-9
 13480  016ED0  006F FF8C  F001    	movff	plusw1,btemp
 13481  016ED6  0E00               	movlw	0
 13482  016ED8  5A01               	subwfb	btemp^0,f,c
 13483  016EDA  0EF7               	movlw	-9
 13484  016EDC  0060  F007  FFE3   	movff	btemp,plusw1
 13485  016EE2                     l8944:
 13486                           
 13487                           ;stkvar	_l @ sp[(-4)+2]
 13488  016EE2  0EFE               	movlw	-2
 13489  016EE4  006F FF8F FFF6     	movff	plusw1,tblptrl
 13490  016EEA  0EFF               	movlw	-1
 13491  016EEC  006F FF8F FFF7     	movff	plusw1,tblptrh
 13492  016EF2  0E00               	movlw	low (__mediumconst shr (0+16))
 13493  016EF4  6EF8               	movwf	tblptru,c
 13494  016EF6  0E1F               	movlw	(high __ramtop+-1)
 13495  016EF8  64F7               	cpfsgt	tblptrh,c
 13496  016EFA  D003               	bra	u8247
 13497  016EFC  0008               	tblrd		*
 13498  016EFE  50F5               	movf	tablat,w,c
 13499  016F00  D007               	bra	u8240
 13500  016F02                     u8247:
 13501  016F02  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13502  016F08  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13503  016F0E  50EF               	movf	indf0,w,c
 13504  016F10                     u8240:
 13505  016F10  0900               	iorlw	0
 13506  016F12  B4D8               	btfsc	status,2,c
 13507  016F14  D04A               	goto	u8280
 13508                           
 13509                           ;stkvar	_r @ sp[(-4)+0]
 13510  016F16  50E1               	movf	fsr1l,w,c
 13511  016F18  0FFC               	addlw	-4
 13512  016F1A  6ED9               	movwf	fsr2l,c
 13513  016F1C  50E2               	movf	fsr1h,w,c
 13514  016F1E  6EDA               	movwf	fsr2h,c
 13515  016F20  0EFF               	movlw	255
 13516  016F22  22DA               	addwfc	fsr2h,f,c
 13517  016F24  006F FF7B FFF6     	movff	postinc2,tblptrl
 13518  016F2A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13519  016F30                     	if	0	;tblptru may be non-zero
 13520  016F30                     	endif
 13521  016F30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13522  016F30  0E00               	movlw	low (__mediumconst shr (0+16))
 13523  016F32  6EF8               	movwf	tblptru,c
 13524  016F34                     	endif
 13525  016F34  0008               	tblrd		*
 13526  016F36  50F5               	movf	tablat,w,c
 13527  016F38  0900               	iorlw	0
 13528  016F3A  B4D8               	btfsc	status,2,c
 13529  016F3C  D036               	goto	u8280
 13530                           
 13531                           ;stkvar	_n @ sp[(-4)+-6]
 13532  016F3E  0EF6               	movlw	-10
 13533  016F40  006F FF8C  F001    	movff	plusw1,btemp
 13534  016F46  0EF7               	movlw	-9
 13535  016F48  50E3               	movf	plusw1,w,c
 13536  016F4A  1001               	iorwf	btemp^0,w,c
 13537  016F4C  B4D8               	btfsc	status,2,c
 13538  016F4E  D02D               	goto	u8280
 13539                           
 13540                           ;stkvar	_r @ sp[(-4)+0]
 13541  016F50  50E1               	movf	fsr1l,w,c
 13542  016F52  0FFC               	addlw	-4
 13543  016F54  6ED9               	movwf	fsr2l,c
 13544  016F56  50E2               	movf	fsr1h,w,c
 13545  016F58  6EDA               	movwf	fsr2h,c
 13546  016F5A  0EFF               	movlw	255
 13547  016F5C  22DA               	addwfc	fsr2h,f,c
 13548  016F5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13549  016F64  006F FF77 FFF7     	movff	postdec2,tblptrh
 13550  016F6A                     	if	0	;tblptru may be non-zero
 13551  016F6A                     	endif
 13552  016F6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13553  016F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 13554  016F6C  6EF8               	movwf	tblptru,c
 13555  016F6E                     	endif
 13556  016F6E  0008               	tblrd		*
 13557  016F70  006F FFD4  F00C    	movff	tablat,btemp+11
 13558                           
 13559                           ;stkvar	_l @ sp[(-4)+2]
 13560  016F76  0EFE               	movlw	-2
 13561  016F78  006F FF8F FFF6     	movff	plusw1,tblptrl
 13562  016F7E  0EFF               	movlw	-1
 13563  016F80  006F FF8F FFF7     	movff	plusw1,tblptrh
 13564  016F86  0E00               	movlw	low (__mediumconst shr (0+16))
 13565  016F88  6EF8               	movwf	tblptru,c
 13566  016F8A  0E1F               	movlw	(high __ramtop+-1)
 13567  016F8C  64F7               	cpfsgt	tblptrh,c
 13568  016F8E  D003               	bra	u8287
 13569  016F90  0008               	tblrd		*
 13570  016F92  50F5               	movf	tablat,w,c
 13571  016F94  D007               	bra	u8285
 13572  016F96                     u8287:
 13573  016F96  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13574  016F9C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13575  016FA2  50EF               	movf	indf0,w,c
 13576  016FA4                     u8285:
 13577  016FA4  180C               	xorwf	(btemp+11)^0,w,c
 13578  016FA6  B4D8               	btfsc	status,2,c
 13579  016FA8  D766               	goto	l8942
 13580  016FAA                     u8280:
 13581                           
 13582                           ;stkvar	_l @ sp[(-4)+2]
 13583  016FAA  0EFE               	movlw	-2
 13584  016FAC  006F FF8F FFF6     	movff	plusw1,tblptrl
 13585  016FB2  0EFF               	movlw	-1
 13586  016FB4  006F FF8F FFF7     	movff	plusw1,tblptrh
 13587  016FBA  0E00               	movlw	low (__mediumconst shr (0+16))
 13588  016FBC  6EF8               	movwf	tblptru,c
 13589  016FBE  0E1F               	movlw	(high __ramtop+-1)
 13590  016FC0  64F7               	cpfsgt	tblptrh,c
 13591  016FC2  D003               	bra	u8297
 13592  016FC4  0008               	tblrd		*
 13593  016FC6  50F5               	movf	tablat,w,c
 13594  016FC8  D007               	bra	u8290
 13595  016FCA                     u8297:
 13596  016FCA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13597  016FD0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13598  016FD6  50EF               	movf	indf0,w,c
 13599  016FD8                     u8290:
 13600  016FD8  6E01               	movwf	btemp^0,c
 13601  016FDA  6A02               	clrf	(btemp+1)^0,c
 13602                           
 13603                           ;stkvar	_r @ sp[(-4)+0]
 13604  016FDC  50E1               	movf	fsr1l,w,c
 13605  016FDE  0FFC               	addlw	-4
 13606  016FE0  6ED9               	movwf	fsr2l,c
 13607  016FE2  50E2               	movf	fsr1h,w,c
 13608  016FE4  6EDA               	movwf	fsr2h,c
 13609  016FE6  0EFF               	movlw	255
 13610  016FE8  22DA               	addwfc	fsr2h,f,c
 13611  016FEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 13612  016FF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 13613  016FF6                     	if	0	;tblptru may be non-zero
 13614  016FF6                     	endif
 13615  016FF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13616  016FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 13617  016FF8  6EF8               	movwf	tblptru,c
 13618  016FFA                     	endif
 13619  016FFA  0008               	tblrd		*
 13620  016FFC  50F5               	movf	tablat,w,c
 13621  016FFE  5E01               	subwf	btemp^0,f,c
 13622  017000  0E00               	movlw	0
 13623  017002  5A02               	subwfb	(btemp+1)^0,f,c
 13624  017004                     l3377:
 13625                           
 13626                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 13627  017004  0EF6               	movlw	246
 13628  017006  26E1               	addwf	fsr1l,f,c
 13629  017008  0EFF               	movlw	255
 13630  01700A  22E2               	addwfc	fsr1h,f,c
 13631  01700C  0012               	return		;funcret
 13632  01700E                     __end_of_strncmp:
 13633                           	opt callstack 0
 13634                           
 13635 ;; *************** function _stoa *****************
 13636 ;; Defined at:
 13637 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13638 ;; Parameters:    Size  Location     Type
 13639 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13640 ;;		 -> f(6), NULL(0), 
 13641 ;;  s               2  [STACK] PTR unsigned char 
 13642 ;;		 -> ?_printf(2), ?_sprintf(2), STR_37(9), STR_36(12), 
 13643 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 13644 ;;		 -> V(188), 
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;  nuls            7  [STACK] unsigned char [7]
 13647 ;;  l               2  [STACK] int 
 13648 ;;  p               2  [STACK] int 
 13649 ;;  cp              2  [STACK] PTR unsigned char 
 13650 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_37(9), 
 13651 ;;		 -> STR_36(12), D.lcd(288), D(290), T(144), 
 13652 ;;		 -> STR_3(6), V(188), 
 13653 ;;  w               2  [STACK] int 
 13654 ;;  i               2  [STACK] int 
 13655 ;; Return value:  Size  Location     Type
 13656 ;;                  2  [STACK] int 
 13657 ;; Registers used:
 13658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13659 ;; Tracked objects:
 13660 ;;		On entry : 0/0
 13661 ;;		On exit  : 0/0
 13662 ;;		Unchanged: 0/0
 13663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13668 ;;Total ram usage:        0 bytes
 13669 ;; Hardware stack levels used:    1
 13670 ;; Hardware stack levels required when called:   18
 13671 ;; This function calls:
 13672 ;;		_fputc
 13673 ;;		_strlen
 13674 ;; This function is called by:
 13675 ;;		_vfpfcnvrt
 13676 ;; This function uses a reentrant model
 13677 ;;
 13678                           
 13679                           	psect	text53
 13680  0163FC                     __ptext53:
 13681                           	opt callstack 0
 13682  0163FC                     _stoa:
 13683                           	opt callstack 0
 13684                           
 13685                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13686  0163FC  0E11               	movlw	17
 13687  0163FE  26E1               	addwf	fsr1l,f,c
 13688  016400  0E00               	movlw	0
 13689  016402  22E2               	addwfc	fsr1h,f,c
 13690                           
 13691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13692                           
 13693                           ;incstack = 0
 13694 ;; hardware stack exceeded
 13695  016404  EE20  F0EE         	lfsr	2,stoa@F1166
 13696                           
 13697                           ;stkvar	_nuls @ sp[(-17)+0]
 13698  016408  0E07               	movlw	7
 13699  01640A  6E01               	movwf	btemp^0,c
 13700  01640C  0EEF               	movlw	-17
 13701  01640E                     us1088999:
 13702  01640E  006F FF7B FFE3     	movff	postinc2,plusw1
 13703  016414  28E8               	incf	wreg,w,c
 13704  016416  2E01               	decfsz	btemp^0,f,c
 13705  016418  D7FA               	bra	us1088999
 13706                           
 13707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 13708                           ;stkvar	_s @ sp[(-17)+-4]
 13709  01641A  0EEB               	movlw	-21
 13710  01641C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13711  016422  0EEC               	movlw	-20
 13712  016424  006F FF8C  F00C    	movff	plusw1,btemp+11
 13713                           
 13714                           ;stkvar	_cp @ sp[(-17)+11]
 13715  01642A  0EFB               	movlw	-5
 13716  01642C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13717  016432  0EFA               	movlw	-6
 13718  016434  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13719                           
 13720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 13721                           ;stkvar	_cp @ sp[(-17)+11]
 13722  01643A  0EFA               	movlw	-6
 13723  01643C  006F FF8C  F001    	movff	plusw1,btemp
 13724  016442  0EFB               	movlw	-5
 13725  016444  50E3               	movf	plusw1,w,c
 13726  016446  1001               	iorwf	btemp^0,w,c
 13727  016448  A4D8               	btfss	status,2,c
 13728  01644A  D00E               	goto	l11572
 13729                           
 13730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 13731                           ;stkvar	_nuls @ sp[(-17)+0]
 13732  01644C  0EEF               	movlw	239
 13733  01644E  24E1               	addwf	fsr1l,w,c
 13734  016450  6E0B               	movwf	(btemp+10)^0,c
 13735  016452  0EFF               	movlw	255
 13736  016454  20E2               	addwfc	fsr1h,w,c
 13737  016456  6E0C               	movwf	(btemp+11)^0,c
 13738                           
 13739                           ;stkvar	_cp @ sp[(-17)+11]
 13740  016458  0EFB               	movlw	-5
 13741  01645A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13742  016460  0EFA               	movlw	-6
 13743  016462  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13744  016468                     l11572:
 13745                           
 13746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 13747                           ;stkvar	_cp @ sp[(-17)+11]
 13748  016468  0EFA               	movlw	-6
 13749  01646A  006F FF8F FFE6     	movff	plusw1,postinc1
 13750  016470  006F FF8F FFE6     	movff	plusw1,postinc1
 13751  016476  ECF8  F0CB         	call	_strlen	;wreg free
 13752                           
 13753                           ;stkvar	_l @ sp[(-17)+7]
 13754  01647A  0EF6               	movlw	-10
 13755  01647C  0060  F007  FFE3   	movff	btemp,plusw1
 13756  016482  0EF7               	movlw	-9
 13757  016484  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13758                           
 13759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 13760                           ;stkvar	_p @ sp[(-17)+9]
 13761  01648A  0EF8               	movlw	-8
 13762  01648C  0060  F08F  FFE3   	movff	_prec,plusw1
 13763  016492  0EF9               	movlw	-7
 13764  016494  0060  F093  FFE3   	movff	_prec+1,plusw1
 13765                           
 13766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 13767                           ;stkvar	_p @ sp[(-17)+9]
 13768  01649A  0EF9               	movlw	-7
 13769  01649C  BEE3               	btfsc	plusw1,7,c
 13770  01649E  D023               	goto	l2202
 13771                           
 13772                           ;stkvar	_l @ sp[(-17)+7]
 13773                           ;stkvar	_p @ sp[(-17)+9]
 13774  0164A0  50E1               	movf	fsr1l,w,c
 13775  0164A2  0FF8               	addlw	-8
 13776  0164A4  6ED9               	movwf	fsr2l,c
 13777  0164A6  50E2               	movf	fsr1h,w,c
 13778  0164A8  6EDA               	movwf	fsr2h,c
 13779  0164AA  0EFF               	movlw	255
 13780  0164AC  22DA               	addwfc	fsr2h,f,c
 13781  0164AE  0EF6               	movlw	-10
 13782  0164B0  50E3               	movf	plusw1,w,c
 13783  0164B2  5CDE               	subwf	postinc2,w,c
 13784  0164B4  50DE               	movf	postinc2,w,c
 13785  0164B6  0A80               	xorlw	128
 13786  0164B8  6E01               	movwf	btemp^0,c
 13787  0164BA  0EF7               	movlw	-9
 13788  0164BC  50E3               	movf	plusw1,w,c
 13789  0164BE  0A80               	xorlw	128
 13790  0164C0  5801               	subwfb	btemp^0,w,c
 13791  0164C2  B0D8               	btfsc	status,0,c
 13792  0164C4  D010               	goto	l2202
 13793                           
 13794                           ;stkvar	_p @ sp[(-17)+9]
 13795                           ;stkvar	_l @ sp[(-17)+7]
 13796  0164C6  0EF8               	movlw	-8
 13797  0164C8  006F FF8C  F001    	movff	plusw1,btemp
 13798  0164CE  0EF6               	movlw	-10
 13799  0164D0  0060  F007  FFE3   	movff	btemp,plusw1
 13800  0164D6  0EF9               	movlw	-7
 13801  0164D8  006F FF8C  F001    	movff	plusw1,btemp
 13802  0164DE  0EF7               	movlw	-9
 13803  0164E0  0060  F007  FFE3   	movff	btemp,plusw1
 13804  0164E6                     l2202:
 13805                           
 13806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 13807                           ;stkvar	_l @ sp[(-17)+7]
 13808                           ;stkvar	_p @ sp[(-17)+9]
 13809  0164E6  0EF6               	movlw	-10
 13810  0164E8  006F FF8C  F001    	movff	plusw1,btemp
 13811  0164EE  0EF8               	movlw	-8
 13812  0164F0  0060  F007  FFE3   	movff	btemp,plusw1
 13813  0164F6  0EF7               	movlw	-9
 13814  0164F8  006F FF8C  F001    	movff	plusw1,btemp
 13815  0164FE  0EF9               	movlw	-7
 13816  016500  0060  F007  FFE3   	movff	btemp,plusw1
 13817                           
 13818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 13819                           ;stkvar	_w @ sp[(-17)+13]
 13820  016506  0EFC               	movlw	-4
 13821  016508  0060  F087  FFE3   	movff	_width,plusw1
 13822  01650E  0EFD               	movlw	-3
 13823  016510  0060  F08B  FFE3   	movff	_width+1,plusw1
 13824                           
 13825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 13826  016516  A025               	btfss	_flags^0,0,c
 13827  016518  D01F               	goto	l11592
 13828  01651A  D031               	goto	u10930
 13829  01651C                     l11588:
 13830                           
 13831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 13832                           ;stkvar	_fp @ sp[(-17)+-2]
 13833  01651C  0EED               	movlw	-19
 13834  01651E  006F FF8F FFE6     	movff	plusw1,postinc1
 13835  016524  006F FF8F FFE6     	movff	plusw1,postinc1
 13836  01652A  0E20               	movlw	32
 13837  01652C  6EE6               	movwf	postinc1,c
 13838  01652E  0E00               	movlw	0
 13839  016530  6EE6               	movwf	postinc1,c
 13840  016532  EC77  F0C4         	call	_fputc	;wreg free
 13841                           
 13842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 13843                           ;stkvar	_l @ sp[(-17)+7]
 13844  016536  0EF6               	movlw	-10
 13845  016538  50E3               	movf	plusw1,w,c
 13846  01653A  0F01               	addlw	1
 13847  01653C  6E01               	movwf	btemp^0,c
 13848  01653E  0EF6               	movlw	-10
 13849  016540  0060  F007  FFE3   	movff	btemp,plusw1
 13850  016546  6A01               	clrf	btemp^0,c
 13851  016548  0EF7               	movlw	-9
 13852  01654A  50E3               	movf	plusw1,w,c
 13853  01654C  2001               	addwfc	btemp^0,w,c
 13854  01654E  6E01               	movwf	btemp^0,c
 13855  016550  0EF7               	movlw	-9
 13856  016552  0060  F007  FFE3   	movff	btemp,plusw1
 13857  016558                     l11592:
 13858                           
 13859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 13860                           ;stkvar	_w @ sp[(-17)+13]
 13861                           ;stkvar	_l @ sp[(-17)+7]
 13862  016558  50E1               	movf	fsr1l,w,c
 13863  01655A  0FF6               	addlw	-10
 13864  01655C  6ED9               	movwf	fsr2l,c
 13865  01655E  50E2               	movf	fsr1h,w,c
 13866  016560  6EDA               	movwf	fsr2h,c
 13867  016562  0EFF               	movlw	255
 13868  016564  22DA               	addwfc	fsr2h,f,c
 13869  016566  0EFC               	movlw	-4
 13870  016568  50E3               	movf	plusw1,w,c
 13871  01656A  5CDE               	subwf	postinc2,w,c
 13872  01656C  50DE               	movf	postinc2,w,c
 13873  01656E  0A80               	xorlw	128
 13874  016570  6E01               	movwf	btemp^0,c
 13875  016572  0EFD               	movlw	-3
 13876  016574  50E3               	movf	plusw1,w,c
 13877  016576  0A80               	xorlw	128
 13878  016578  5801               	subwfb	btemp^0,w,c
 13879  01657A  A0D8               	btfss	status,0,c
 13880  01657C  D7CF               	goto	l11588
 13881  01657E                     u10930:
 13882                           
 13883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 13884                           ;stkvar	_i @ sp[(-17)+15]
 13885  01657E  0EFE               	movlw	-2
 13886  016580  6AE3               	clrf	plusw1,c
 13887  016582  0EFF               	movlw	-1
 13888  016584  6AE3               	clrf	plusw1,c
 13889                           
 13890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13891  016586  D045               	goto	l11602
 13892  016588                     l11596:
 13893                           
 13894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 13895                           ;stkvar	_fp @ sp[(-17)+-2]
 13896  016588  0EED               	movlw	-19
 13897  01658A  006F FF8F FFE6     	movff	plusw1,postinc1
 13898  016590  006F FF8F FFE6     	movff	plusw1,postinc1
 13899                           
 13900                           ;stkvar	_cp @ sp[(-19)+11]
 13901  016596  0EF8               	movlw	-8
 13902  016598  006F FF8F FFF6     	movff	plusw1,tblptrl
 13903  01659E  0EF9               	movlw	-7
 13904  0165A0  006F FF8F FFF7     	movff	plusw1,tblptrh
 13905  0165A6  0E00               	movlw	low (__mediumconst shr (0+16))
 13906  0165A8  6EF8               	movwf	tblptru,c
 13907  0165AA  0E1F               	movlw	(high __ramtop+-1)
 13908  0165AC  64F7               	cpfsgt	tblptrh,c
 13909  0165AE  D003               	bra	u10947
 13910  0165B0  0008               	tblrd		*
 13911  0165B2  50F5               	movf	tablat,w,c
 13912  0165B4  D007               	bra	u10940
 13913  0165B6                     u10947:
 13914  0165B6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13915  0165BC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13916  0165C2  50EF               	movf	indf0,w,c
 13917  0165C4                     u10940:
 13918  0165C4  6EE6               	movwf	postinc1,c
 13919  0165C6  0E00               	movlw	0
 13920  0165C8  6EE6               	movwf	postinc1,c
 13921  0165CA  EC77  F0C4         	call	_fputc	;wreg free
 13922                           
 13923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 13924                           ;stkvar	_cp @ sp[(-17)+11]
 13925  0165CE  0EFA               	movlw	-6
 13926  0165D0  50E3               	movf	plusw1,w,c
 13927  0165D2  0F01               	addlw	1
 13928  0165D4  6E01               	movwf	btemp^0,c
 13929  0165D6  0EFA               	movlw	-6
 13930  0165D8  0060  F007  FFE3   	movff	btemp,plusw1
 13931  0165DE  6A01               	clrf	btemp^0,c
 13932  0165E0  0EFB               	movlw	-5
 13933  0165E2  50E3               	movf	plusw1,w,c
 13934  0165E4  2001               	addwfc	btemp^0,w,c
 13935  0165E6  6E01               	movwf	btemp^0,c
 13936  0165E8  0EFB               	movlw	-5
 13937  0165EA  0060  F007  FFE3   	movff	btemp,plusw1
 13938                           
 13939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 13940                           ;stkvar	_i @ sp[(-17)+15]
 13941  0165F0  0EFE               	movlw	-2
 13942  0165F2  50E3               	movf	plusw1,w,c
 13943  0165F4  0F01               	addlw	1
 13944  0165F6  6E01               	movwf	btemp^0,c
 13945  0165F8  0EFE               	movlw	-2
 13946  0165FA  0060  F007  FFE3   	movff	btemp,plusw1
 13947  016600  6A01               	clrf	btemp^0,c
 13948  016602  0EFF               	movlw	-1
 13949  016604  50E3               	movf	plusw1,w,c
 13950  016606  2001               	addwfc	btemp^0,w,c
 13951  016608  6E01               	movwf	btemp^0,c
 13952  01660A  0EFF               	movlw	-1
 13953  01660C  0060  F007  FFE3   	movff	btemp,plusw1
 13954  016612                     l11602:
 13955                           
 13956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13957                           ;stkvar	_p @ sp[(-17)+9]
 13958                           ;stkvar	_i @ sp[(-17)+15]
 13959  016612  50E1               	movf	fsr1l,w,c
 13960  016614  0FFE               	addlw	-2
 13961  016616  6ED9               	movwf	fsr2l,c
 13962  016618  50E2               	movf	fsr1h,w,c
 13963  01661A  6EDA               	movwf	fsr2h,c
 13964  01661C  0EFF               	movlw	255
 13965  01661E  22DA               	addwfc	fsr2h,f,c
 13966  016620  0EF8               	movlw	-8
 13967  016622  50E3               	movf	plusw1,w,c
 13968  016624  5CDE               	subwf	postinc2,w,c
 13969  016626  50DE               	movf	postinc2,w,c
 13970  016628  0A80               	xorlw	128
 13971  01662A  6E01               	movwf	btemp^0,c
 13972  01662C  0EF9               	movlw	-7
 13973  01662E  50E3               	movf	plusw1,w,c
 13974  016630  0A80               	xorlw	128
 13975  016632  5801               	subwfb	btemp^0,w,c
 13976  016634  A0D8               	btfss	status,0,c
 13977  016636  D7A8               	goto	l11596
 13978                           
 13979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 13980  016638  B025               	btfsc	_flags^0,0,c
 13981  01663A  D01F               	goto	l11610
 13982  01663C  D031               	goto	u10970
 13983  01663E                     l11606:
 13984                           
 13985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 13986                           ;stkvar	_fp @ sp[(-17)+-2]
 13987  01663E  0EED               	movlw	-19
 13988  016640  006F FF8F FFE6     	movff	plusw1,postinc1
 13989  016646  006F FF8F FFE6     	movff	plusw1,postinc1
 13990  01664C  0E20               	movlw	32
 13991  01664E  6EE6               	movwf	postinc1,c
 13992  016650  0E00               	movlw	0
 13993  016652  6EE6               	movwf	postinc1,c
 13994  016654  EC77  F0C4         	call	_fputc	;wreg free
 13995                           
 13996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 13997                           ;stkvar	_l @ sp[(-17)+7]
 13998  016658  0EF6               	movlw	-10
 13999  01665A  50E3               	movf	plusw1,w,c
 14000  01665C  0F01               	addlw	1
 14001  01665E  6E01               	movwf	btemp^0,c
 14002  016660  0EF6               	movlw	-10
 14003  016662  0060  F007  FFE3   	movff	btemp,plusw1
 14004  016668  6A01               	clrf	btemp^0,c
 14005  01666A  0EF7               	movlw	-9
 14006  01666C  50E3               	movf	plusw1,w,c
 14007  01666E  2001               	addwfc	btemp^0,w,c
 14008  016670  6E01               	movwf	btemp^0,c
 14009  016672  0EF7               	movlw	-9
 14010  016674  0060  F007  FFE3   	movff	btemp,plusw1
 14011  01667A                     l11610:
 14012                           
 14013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 14014                           ;stkvar	_w @ sp[(-17)+13]
 14015                           ;stkvar	_l @ sp[(-17)+7]
 14016  01667A  50E1               	movf	fsr1l,w,c
 14017  01667C  0FF6               	addlw	-10
 14018  01667E  6ED9               	movwf	fsr2l,c
 14019  016680  50E2               	movf	fsr1h,w,c
 14020  016682  6EDA               	movwf	fsr2h,c
 14021  016684  0EFF               	movlw	255
 14022  016686  22DA               	addwfc	fsr2h,f,c
 14023  016688  0EFC               	movlw	-4
 14024  01668A  50E3               	movf	plusw1,w,c
 14025  01668C  5CDE               	subwf	postinc2,w,c
 14026  01668E  50DE               	movf	postinc2,w,c
 14027  016690  0A80               	xorlw	128
 14028  016692  6E01               	movwf	btemp^0,c
 14029  016694  0EFD               	movlw	-3
 14030  016696  50E3               	movf	plusw1,w,c
 14031  016698  0A80               	xorlw	128
 14032  01669A  5801               	subwfb	btemp^0,w,c
 14033  01669C  A0D8               	btfss	status,0,c
 14034  01669E  D7CF               	goto	l11606
 14035  0166A0                     u10970:
 14036                           
 14037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 14038                           ;stkvar	_l @ sp[(-17)+7]
 14039  0166A0  0EF6               	movlw	-10
 14040  0166A2  006F FF8C  F001    	movff	plusw1,btemp
 14041  0166A8  0EF7               	movlw	-9
 14042  0166AA  006F FF8C  F002    	movff	plusw1,btemp+1
 14043                           
 14044                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14045  0166B0  0EEB               	movlw	235
 14046  0166B2  26E1               	addwf	fsr1l,f,c
 14047  0166B4  0EFF               	movlw	255
 14048  0166B6  22E2               	addwfc	fsr1h,f,c
 14049  0166B8  0012               	return		;funcret
 14050  0166BA                     __end_of_stoa:
 14051                           	opt callstack 0
 14052                           
 14053 ;; *************** function _efgtoa *****************
 14054 ;; Defined at:
 14055 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14056 ;; Parameters:    Size  Location     Type
 14057 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14058 ;;		 -> f(6), NULL(0), 
 14059 ;;  f               4  [STACK] PTR struct _IO_FILE
 14060 ;;  c               1  [STACK] unsigned char 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;  u               4  [STACK] unsigned char 
 14063 ;;  g               4  [STACK] unsigned char 
 14064 ;;  l               4  [STACK] unsigned char 
 14065 ;;  h               4  [STACK] unsigned char 
 14066 ;;  ou              4  [STACK] unsigned char 
 14067 ;;  n               2  [STACK] int 
 14068 ;;  e               2  [STACK] int 
 14069 ;;  i               2  [STACK] int 
 14070 ;;  w               2  [STACK] int 
 14071 ;;  p               2  [STACK] int 
 14072 ;;  sign            2  [STACK] int 
 14073 ;;  d               2  [STACK] int 
 14074 ;;  ne              2  [STACK] int 
 14075 ;;  m               2  [STACK] int 
 14076 ;;  pp              2  [STACK] int 
 14077 ;;  t               2  [STACK] int 
 14078 ;;  mode            1  [STACK] unsigned char 
 14079 ;;  nmode           1  [STACK] unsigned char 
 14080 ;; Return value:  Size  Location     Type
 14081 ;;                  2  [STACK] int 
 14082 ;; Registers used:
 14083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14084 ;; Tracked objects:
 14085 ;;		On entry : 0/0
 14086 ;;		On exit  : 0/0
 14087 ;;		Unchanged: 0/0
 14088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14093 ;;Total ram usage:        0 bytes
 14094 ;; Hardware stack levels used:    1
 14095 ;; Hardware stack levels required when called:   20
 14096 ;; This function calls:
 14097 ;;		___awdiv
 14098 ;;		___awmod
 14099 ;;		___fladd
 14100 ;;		___fldiv
 14101 ;;		___fleq
 14102 ;;		___flge
 14103 ;;		___flmul
 14104 ;;		___flneg
 14105 ;;		___flsub
 14106 ;;		___fltol
 14107 ;;		___fpclassifyf
 14108 ;;		_floorf
 14109 ;;		_isupper
 14110 ;;		_pad
 14111 ;;		_strcpy
 14112 ;;		_tolower
 14113 ;; This function is called by:
 14114 ;;		_vfpfcnvrt
 14115 ;; This function uses a reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text54
 14119  010000                     __ptext54:
 14120                           	opt callstack 0
 14121  010000                     _efgtoa:
 14122                           	opt callstack 0
 14123                           
 14124                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14125  010000  0E38               	movlw	56
 14126  010002  26E1               	addwf	fsr1l,f,c
 14127  010004  0E00               	movlw	0
 14128  010006  22E2               	addwfc	fsr1h,f,c
 14129                           
 14130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14131                           ;stkvar	_sign @ sp[(-56)+42]
 14132                           
 14133                           ;incstack = 0
 14134 ;; hardware stack exceeded
 14135  010008  0EF2               	movlw	-14
 14136  01000A  6AE3               	clrf	plusw1,c
 14137  01000C  0EF3               	movlw	-13
 14138  01000E  6AE3               	clrf	plusw1,c
 14139                           
 14140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14141                           ;stkvar	_f @ sp[(-56)+-6]
 14142  010010  0EC2               	movlw	-62
 14143  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14144  010018  0EC3               	movlw	-61
 14145  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14146  010020  0EC4               	movlw	-60
 14147  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14148  010028  0EC5               	movlw	-59
 14149  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14150                           
 14151                           ;stkvar	_g @ sp[(-56)+16]
 14152  010030  0ED8               	movlw	-40
 14153  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14154  010038  0ED9               	movlw	-39
 14155  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14156  010040  0EDA               	movlw	-38
 14157  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14158  010048  0EDB               	movlw	-37
 14159  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14160                           
 14161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14162                           ;stkvar	_g @ sp[(-56)+16]
 14163  010050  0EDB               	movlw	-37
 14164  010052  AEE3               	btfss	plusw1,7,c
 14165  010054  D02B               	goto	l11270
 14166                           
 14167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14168  010056  0E01               	movlw	1
 14169  010058  6E0B               	movwf	(btemp+10)^0,c
 14170  01005A  0E00               	movlw	0
 14171  01005C  6E0C               	movwf	(btemp+11)^0,c
 14172                           
 14173                           ;stkvar	_sign @ sp[(-56)+42]
 14174  01005E  0EF2               	movlw	-14
 14175  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14176  010066  0EF3               	movlw	-13
 14177  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14178                           
 14179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14180                           ;stkvar	_g @ sp[(-56)+16]
 14181  01006E  0ED8               	movlw	-40
 14182  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14183  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14184  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14185  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14186  010088  ECA4  F0D1         	call	___flneg	;wreg free
 14187                           
 14188                           ;stkvar	_g @ sp[(-56)+16]
 14189  01008C  0ED8               	movlw	-40
 14190  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14191  010094  0ED9               	movlw	-39
 14192  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14193  01009C  0EDA               	movlw	-38
 14194  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14195  0100A4  0EDB               	movlw	-37
 14196  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14197  0100AC                     l11270:
 14198                           
 14199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14200                           ;stkvar	_n @ sp[(-56)+32]
 14201  0100AC  0EE8               	movlw	-24
 14202  0100AE  6AE3               	clrf	plusw1,c
 14203  0100B0  0EE9               	movlw	-23
 14204  0100B2  6AE3               	clrf	plusw1,c
 14205                           
 14206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14207                           ;stkvar	_w @ sp[(-56)+38]
 14208  0100B4  0EEE               	movlw	-18
 14209  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14210  0100BC  0EEF               	movlw	-17
 14211  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14212                           
 14213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14214                           ;stkvar	_sign @ sp[(-56)+42]
 14215  0100C4  0EF2               	movlw	-14
 14216  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14217  0100CC  0EF3               	movlw	-13
 14218  0100CE  50E3               	movf	plusw1,w,c
 14219  0100D0  1001               	iorwf	btemp^0,w,c
 14220  0100D2  A4D8               	btfss	status,2,c
 14221  0100D4  D002               	goto	u10380
 14222  0100D6  A425               	btfss	_flags^0,2,c
 14223  0100D8  D036               	goto	l11290
 14224  0100DA                     u10380:
 14225                           
 14226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14227                           ;stkvar	_sign @ sp[(-56)+42]
 14228  0100DA  0EF2               	movlw	-14
 14229  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14230  0100E2  0EF3               	movlw	-13
 14231  0100E4  50E3               	movf	plusw1,w,c
 14232  0100E6  1001               	iorwf	btemp^0,w,c
 14233  0100E8  A4D8               	btfss	status,2,c
 14234  0100EA  D002               	goto	l11282
 14235  0100EC  0E2B               	movlw	43
 14236  0100EE  D001               	goto	L11
 14237  0100F0                     l11282:
 14238  0100F0  0E2D               	movlw	45
 14239  0100F2                     L11:
 14240  0100F2  6E0B               	movwf	(btemp+10)^0,c
 14241  0100F4  0E00               	movlw	0
 14242  0100F6  6E0C               	movwf	(btemp+11)^0,c
 14243                           
 14244                           ;stkvar	_efgtoa$5285 @ sp[(-56)+10]
 14245  0100F8  0ED2               	movlw	-46
 14246  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14247  010100  0ED3               	movlw	-45
 14248  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 14249                           
 14250                           ;stkvar	_efgtoa$5285 @ sp[(-56)+10]
 14251  010108  0ED2               	movlw	-46
 14252  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 14253                           
 14254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 14255                           ;stkvar	_n @ sp[(-56)+32]
 14256  010110  0EE8               	movlw	-24
 14257  010112  50E3               	movf	plusw1,w,c
 14258  010114  0F01               	addlw	1
 14259  010116  6E01               	movwf	btemp^0,c
 14260  010118  0EE8               	movlw	-24
 14261  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 14262  010120  6A01               	clrf	btemp^0,c
 14263  010122  0EE9               	movlw	-23
 14264  010124  50E3               	movf	plusw1,w,c
 14265  010126  2001               	addwfc	btemp^0,w,c
 14266  010128  6E01               	movwf	btemp^0,c
 14267  01012A  0EE9               	movlw	-23
 14268  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 14269                           
 14270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 14271                           ;stkvar	_w @ sp[(-56)+38]
 14272  010132  50E1               	movf	fsr1l,w,c
 14273  010134  0FEE               	addlw	-18
 14274  010136  6ED9               	movwf	fsr2l,c
 14275  010138  50E2               	movf	fsr1h,w,c
 14276  01013A  6EDA               	movwf	fsr2h,c
 14277  01013C  0EFF               	movlw	255
 14278  01013E  22DA               	addwfc	fsr2h,f,c
 14279  010140  06DE               	decf	postinc2,f,c
 14280  010142  0E00               	movlw	0
 14281  010144  5ADD               	subwfb	postdec2,f,c
 14282  010146                     l11290:
 14283                           
 14284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14285                           ;stkvar	_g @ sp[(-56)+16]
 14286  010146  0ED8               	movlw	-40
 14287  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 14288  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 14289  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 14290  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 14291  010160  ECE3  F0BC         	call	___fpclassifyf	;wreg free
 14292  010164  0401               	decf	btemp^0,w,c
 14293  010166  1002               	iorwf	(btemp+1)^0,w,c
 14294  010168  A4D8               	btfss	status,2,c
 14295  01016A  D076               	goto	l11308
 14296  01016C  0EBF               	movlw	191
 14297  01016E  6E0B               	movwf	(btemp+10)^0,c
 14298  010170  0EFF               	movlw	255
 14299  010172  6E0C               	movwf	(btemp+11)^0,c
 14300                           
 14301                           ;stkvar	_c @ sp[(-56)+-7]
 14302  010174  0EC1               	movlw	-63
 14303  010176  50E3               	movf	plusw1,w,c
 14304  010178  6E09               	movwf	(btemp+8)^0,c
 14305  01017A  6A0A               	clrf	(btemp+9)^0,c
 14306  01017C  500B               	movf	(btemp+10)^0,w,c
 14307  01017E  2609               	addwf	(btemp+8)^0,f,c
 14308  010180  500C               	movf	(btemp+11)^0,w,c
 14309  010182  220A               	addwfc	(btemp+9)^0,f,c
 14310  010184  500A               	movf	(btemp+9)^0,w,c
 14311  010186  E106               	bnz	u10410
 14312  010188  0E1A               	movlw	26
 14313  01018A  5C09               	subwf	(btemp+8)^0,w,c
 14314  01018C  B0D8               	btfsc	status,0,c
 14315  01018E  D002               	goto	u10410
 14316  010190  0E01               	movlw	1
 14317  010192  D001               	goto	u10420
 14318  010194                     u10410:
 14319  010194  0E00               	movlw	0
 14320  010196                     u10420:
 14321  010196  6E0B               	movwf	(btemp+10)^0,c
 14322  010198  6A0C               	clrf	(btemp+11)^0,c
 14323                           
 14324                           ;stkvar	_efgtoa$5286 @ sp[(-56)+8]
 14325  01019A  0ED0               	movlw	-48
 14326  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14327  0101A2  0ED1               	movlw	-47
 14328  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14329                           
 14330                           ;stkvar	_efgtoa$5286 @ sp[(-56)+8]
 14331  0101AA  0ED0               	movlw	-48
 14332  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 14333  0101B2  0ED1               	movlw	-47
 14334  0101B4  50E3               	movf	plusw1,w,c
 14335  0101B6  1001               	iorwf	btemp^0,w,c
 14336  0101B8  B4D8               	btfsc	status,2,c
 14337  0101BA  D017               	goto	l11300
 14338                           
 14339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 14340  0101BC  0ED6               	movlw	low STR_56
 14341  0101BE  6EE6               	movwf	postinc1,c
 14342  0101C0  0EFF               	movlw	high STR_56
 14343  0101C2  6EE6               	movwf	postinc1,c
 14344                           
 14345                           ;stkvar	_n @ sp[(-58)+32]
 14346  0101C4  0E94               	movlw	low _dbuf
 14347  0101C6  6E0B               	movwf	(btemp+10)^0,c
 14348  0101C8  0E03               	movlw	high _dbuf
 14349  0101CA  6E0C               	movwf	(btemp+11)^0,c
 14350  0101CC  0EE6               	movlw	-26
 14351  0101CE  50E3               	movf	plusw1,w,c
 14352  0101D0  260B               	addwf	(btemp+10)^0,f,c
 14353  0101D2  0EE7               	movlw	-25
 14354  0101D4  50E3               	movf	plusw1,w,c
 14355  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 14356  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14357  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14358  0101E4  EC1D  F0C9         	call	_strcpy	;wreg free
 14359                           
 14360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 14361  0101E8  D016               	goto	l11302
 14362  0101EA                     l11300:
 14363                           
 14364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 14365  0101EA  0EDE               	movlw	low STR_57
 14366  0101EC  6EE6               	movwf	postinc1,c
 14367  0101EE  0EFF               	movlw	high STR_57
 14368  0101F0  6EE6               	movwf	postinc1,c
 14369                           
 14370                           ;stkvar	_n @ sp[(-58)+32]
 14371  0101F2  0E94               	movlw	low _dbuf
 14372  0101F4  6E0B               	movwf	(btemp+10)^0,c
 14373  0101F6  0E03               	movlw	high _dbuf
 14374  0101F8  6E0C               	movwf	(btemp+11)^0,c
 14375  0101FA  0EE6               	movlw	-26
 14376  0101FC  50E3               	movf	plusw1,w,c
 14377  0101FE  260B               	addwf	(btemp+10)^0,f,c
 14378  010200  0EE7               	movlw	-25
 14379  010202  50E3               	movf	plusw1,w,c
 14380  010204  220C               	addwfc	(btemp+11)^0,f,c
 14381  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14382  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14383  010212  EC1D  F0C9         	call	_strcpy	;wreg free
 14384  010216                     l11302:
 14385                           
 14386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 14387                           ;stkvar	_w @ sp[(-56)+38]
 14388  010216  50E1               	movf	fsr1l,w,c
 14389  010218  0FEE               	addlw	-18
 14390  01021A  6ED9               	movwf	fsr2l,c
 14391  01021C  50E2               	movf	fsr1h,w,c
 14392  01021E  6EDA               	movwf	fsr2h,c
 14393  010220  0EFF               	movlw	255
 14394  010222  22DA               	addwfc	fsr2h,f,c
 14395  010224  0EFD               	movlw	253
 14396  010226  26DE               	addwf	postinc2,f,c
 14397  010228  0EFF               	movlw	255
 14398  01022A  22DD               	addwfc	postdec2,f,c
 14399  01022C                     l11304:
 14400                           
 14401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 14402                           ;stkvar	_w @ sp[(-56)+38]
 14403  01022C  0EEE               	movlw	-18
 14404  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 14405  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 14406  01023A  0E94               	movlw	low _dbuf
 14407  01023C  6EE6               	movwf	postinc1,c
 14408  01023E  0E03               	movlw	high _dbuf
 14409  010240  6EE6               	movwf	postinc1,c
 14410                           
 14411                           ;stkvar	_fp @ sp[(-60)+-2]
 14412  010242  0EC2               	movlw	-62
 14413  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 14414  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 14415  010250  EC95  F0C5         	call	_pad	;wreg free
 14416  010254  EF1D  F089         	goto	l2120
 14417  010258                     l11308:
 14418                           
 14419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14420                           ;stkvar	_g @ sp[(-56)+16]
 14421  010258  0ED8               	movlw	-40
 14422  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 14423  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 14424  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 14425  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 14426  010272  ECE3  F0BC         	call	___fpclassifyf	;wreg free
 14427  010276  5001               	movf	btemp^0,w,c
 14428  010278  1002               	iorwf	(btemp+1)^0,w,c
 14429  01027A  A4D8               	btfss	status,2,c
 14430  01027C  D056               	goto	l11326
 14431  01027E  0EBF               	movlw	191
 14432  010280  6E0B               	movwf	(btemp+10)^0,c
 14433  010282  0EFF               	movlw	255
 14434  010284  6E0C               	movwf	(btemp+11)^0,c
 14435                           
 14436                           ;stkvar	_c @ sp[(-56)+-7]
 14437  010286  0EC1               	movlw	-63
 14438  010288  50E3               	movf	plusw1,w,c
 14439  01028A  6E09               	movwf	(btemp+8)^0,c
 14440  01028C  6A0A               	clrf	(btemp+9)^0,c
 14441  01028E  500B               	movf	(btemp+10)^0,w,c
 14442  010290  2609               	addwf	(btemp+8)^0,f,c
 14443  010292  500C               	movf	(btemp+11)^0,w,c
 14444  010294  220A               	addwfc	(btemp+9)^0,f,c
 14445  010296  500A               	movf	(btemp+9)^0,w,c
 14446  010298  E106               	bnz	u10450
 14447  01029A  0E1A               	movlw	26
 14448  01029C  5C09               	subwf	(btemp+8)^0,w,c
 14449  01029E  B0D8               	btfsc	status,0,c
 14450  0102A0  D002               	goto	u10450
 14451  0102A2  0E01               	movlw	1
 14452  0102A4  D001               	goto	u10460
 14453  0102A6                     u10450:
 14454  0102A6  0E00               	movlw	0
 14455  0102A8                     u10460:
 14456  0102A8  6E0B               	movwf	(btemp+10)^0,c
 14457  0102AA  6A0C               	clrf	(btemp+11)^0,c
 14458                           
 14459                           ;stkvar	_efgtoa$5290 @ sp[(-56)+6]
 14460  0102AC  0ECE               	movlw	-50
 14461  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14462  0102B4  0ECF               	movlw	-49
 14463  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14464                           
 14465                           ;stkvar	_efgtoa$5290 @ sp[(-56)+6]
 14466  0102BC  0ECE               	movlw	-50
 14467  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 14468  0102C4  0ECF               	movlw	-49
 14469  0102C6  50E3               	movf	plusw1,w,c
 14470  0102C8  1001               	iorwf	btemp^0,w,c
 14471  0102CA  B4D8               	btfsc	status,2,c
 14472  0102CC  D017               	goto	l11318
 14473                           
 14474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 14475  0102CE  0EDA               	movlw	low STR_60
 14476  0102D0  6EE6               	movwf	postinc1,c
 14477  0102D2  0EFF               	movlw	high STR_60
 14478  0102D4  6EE6               	movwf	postinc1,c
 14479                           
 14480                           ;stkvar	_n @ sp[(-58)+32]
 14481  0102D6  0E94               	movlw	low _dbuf
 14482  0102D8  6E0B               	movwf	(btemp+10)^0,c
 14483  0102DA  0E03               	movlw	high _dbuf
 14484  0102DC  6E0C               	movwf	(btemp+11)^0,c
 14485  0102DE  0EE6               	movlw	-26
 14486  0102E0  50E3               	movf	plusw1,w,c
 14487  0102E2  260B               	addwf	(btemp+10)^0,f,c
 14488  0102E4  0EE7               	movlw	-25
 14489  0102E6  50E3               	movf	plusw1,w,c
 14490  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 14491  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14492  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14493  0102F6  EC1D  F0C9         	call	_strcpy	;wreg free
 14494                           
 14495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 14496  0102FA  D78D               	goto	l11302
 14497  0102FC                     l11318:
 14498                           
 14499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 14500  0102FC  0EE2               	movlw	low STR_61
 14501  0102FE  6EE6               	movwf	postinc1,c
 14502  010300  0EFF               	movlw	high STR_61
 14503  010302  6EE6               	movwf	postinc1,c
 14504                           
 14505                           ;stkvar	_n @ sp[(-58)+32]
 14506  010304  0E94               	movlw	low _dbuf
 14507  010306  6E0B               	movwf	(btemp+10)^0,c
 14508  010308  0E03               	movlw	high _dbuf
 14509  01030A  6E0C               	movwf	(btemp+11)^0,c
 14510  01030C  0EE6               	movlw	-26
 14511  01030E  50E3               	movf	plusw1,w,c
 14512  010310  260B               	addwf	(btemp+10)^0,f,c
 14513  010312  0EE7               	movlw	-25
 14514  010314  50E3               	movf	plusw1,w,c
 14515  010316  220C               	addwfc	(btemp+11)^0,f,c
 14516  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14517  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14518  010324  EC1D  F0C9         	call	_strcpy	;wreg free
 14519  010328  D776               	goto	l11302
 14520  01032A                     l11326:
 14521                           
 14522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 14523  01032A  0E00               	movlw	0
 14524  01032C  6E09               	movwf	(btemp+8)^0,c
 14525  01032E  0E00               	movlw	0
 14526  010330  6E0A               	movwf	(btemp+9)^0,c
 14527  010332  0E80               	movlw	128
 14528  010334  6E0B               	movwf	(btemp+10)^0,c
 14529  010336  0E3F               	movlw	63
 14530  010338  6E0C               	movwf	(btemp+11)^0,c
 14531                           
 14532                           ;stkvar	_u @ sp[(-56)+12]
 14533  01033A  0ED4               	movlw	-44
 14534  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14535  010342  0ED5               	movlw	-43
 14536  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14537  01034A  0ED6               	movlw	-42
 14538  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14539  010352  0ED7               	movlw	-41
 14540  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 14541                           
 14542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 14543                           ;stkvar	_e @ sp[(-56)+34]
 14544  01035A  0EEA               	movlw	-22
 14545  01035C  6AE3               	clrf	plusw1,c
 14546  01035E  0EEB               	movlw	-21
 14547  010360  6AE3               	clrf	plusw1,c
 14548                           
 14549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 14550  010362  0E00               	movlw	0
 14551  010364  6EE6               	movwf	postinc1,c
 14552  010366  0E00               	movlw	0
 14553  010368  6EE6               	movwf	postinc1,c
 14554  01036A  0E00               	movlw	0
 14555  01036C  6EE6               	movwf	postinc1,c
 14556  01036E  0E00               	movlw	0
 14557  010370  6EE6               	movwf	postinc1,c
 14558                           
 14559                           ;stkvar	_g @ sp[(-60)+16]
 14560  010372  0ED4               	movlw	-44
 14561  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 14562  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 14563  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 14564  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 14565  01038C  EC87  F0C9         	call	___fleq	;wreg free
 14566  010390  A001               	btfss	btemp& (0+255),0,c
 14567  010392  D039               	goto	l11338
 14568  010394  D0BC               	goto	u10500
 14569  010396                     l11334:
 14570                           
 14571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 14572  010396  0E00               	movlw	0
 14573  010398  6EE6               	movwf	postinc1,c
 14574  01039A  0E00               	movlw	0
 14575  01039C  6EE6               	movwf	postinc1,c
 14576  01039E  0E20               	movlw	32
 14577  0103A0  6EE6               	movwf	postinc1,c
 14578  0103A2  0E41               	movlw	65
 14579  0103A4  6EE6               	movwf	postinc1,c
 14580                           
 14581                           ;stkvar	_u @ sp[(-60)+12]
 14582  0103A6  0ED0               	movlw	-48
 14583  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14584  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14585  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14586  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14587  0103C0  ECEF  F096         	call	___flmul	;wreg free
 14588                           
 14589                           ;stkvar	_u @ sp[(-56)+12]
 14590  0103C4  0ED4               	movlw	-44
 14591  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 14592  0103CC  0ED5               	movlw	-43
 14593  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14594  0103D4  0ED6               	movlw	-42
 14595  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14596  0103DC  0ED7               	movlw	-41
 14597  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14598                           
 14599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 14600                           ;stkvar	_e @ sp[(-56)+34]
 14601  0103E4  0EEA               	movlw	-22
 14602  0103E6  50E3               	movf	plusw1,w,c
 14603  0103E8  0F01               	addlw	1
 14604  0103EA  6E01               	movwf	btemp^0,c
 14605  0103EC  0EEA               	movlw	-22
 14606  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 14607  0103F4  6A01               	clrf	btemp^0,c
 14608  0103F6  0EEB               	movlw	-21
 14609  0103F8  50E3               	movf	plusw1,w,c
 14610  0103FA  2001               	addwfc	btemp^0,w,c
 14611  0103FC  6E01               	movwf	btemp^0,c
 14612  0103FE  0EEB               	movlw	-21
 14613  010400  0060  F007  FFE3   	movff	btemp,plusw1
 14614  010406                     l11338:
 14615                           
 14616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 14617  010406  0E00               	movlw	0
 14618  010408  6EE6               	movwf	postinc1,c
 14619  01040A  0E00               	movlw	0
 14620  01040C  6EE6               	movwf	postinc1,c
 14621  01040E  0E20               	movlw	32
 14622  010410  6EE6               	movwf	postinc1,c
 14623  010412  0E41               	movlw	65
 14624  010414  6EE6               	movwf	postinc1,c
 14625                           
 14626                           ;stkvar	_u @ sp[(-60)+12]
 14627  010416  0ED0               	movlw	-48
 14628  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 14629  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 14630  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 14631  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 14632  010430  ECEF  F096         	call	___flmul	;wreg free
 14633  010434  0060  F007  FFE6   	movff	btemp,postinc1
 14634  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14635  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14636  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 14637                           
 14638                           ;stkvar	_g @ sp[(-60)+16]
 14639  01044C  0ED4               	movlw	-44
 14640  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 14641  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 14642  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 14643  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 14644  010466  EC99  F0C0         	call	___flge	;wreg free
 14645  01046A  A001               	btfss	btemp& (0+255),0,c
 14646  01046C  D032               	goto	l11344
 14647  01046E  D793               	goto	l11334
 14648  010470                     l11340:
 14649                           
 14650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 14651  010470  0E00               	movlw	0
 14652  010472  6EE6               	movwf	postinc1,c
 14653  010474  0E00               	movlw	0
 14654  010476  6EE6               	movwf	postinc1,c
 14655  010478  0E20               	movlw	32
 14656  01047A  6EE6               	movwf	postinc1,c
 14657  01047C  0E41               	movlw	65
 14658  01047E  6EE6               	movwf	postinc1,c
 14659                           
 14660                           ;stkvar	_u @ sp[(-60)+12]
 14661  010480  0ED0               	movlw	-48
 14662  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 14663  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 14664  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 14665  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 14666  01049A  EC31  F0A2         	call	___fldiv	;wreg free
 14667                           
 14668                           ;stkvar	_u @ sp[(-56)+12]
 14669  01049E  0ED4               	movlw	-44
 14670  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 14671  0104A6  0ED5               	movlw	-43
 14672  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14673  0104AE  0ED6               	movlw	-42
 14674  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14675  0104B6  0ED7               	movlw	-41
 14676  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 14677                           
 14678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 14679                           ;stkvar	_e @ sp[(-56)+34]
 14680  0104BE  50E1               	movf	fsr1l,w,c
 14681  0104C0  0FEA               	addlw	-22
 14682  0104C2  6ED9               	movwf	fsr2l,c
 14683  0104C4  50E2               	movf	fsr1h,w,c
 14684  0104C6  6EDA               	movwf	fsr2h,c
 14685  0104C8  0EFF               	movlw	255
 14686  0104CA  22DA               	addwfc	fsr2h,f,c
 14687  0104CC  06DE               	decf	postinc2,f,c
 14688  0104CE  0E00               	movlw	0
 14689  0104D0  5ADD               	subwfb	postdec2,f,c
 14690  0104D2                     l11344:
 14691                           
 14692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 14693                           ;stkvar	_u @ sp[(-56)+12]
 14694  0104D2  0ED4               	movlw	-44
 14695  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14696  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14697  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 14698  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 14699                           
 14700                           ;stkvar	_g @ sp[(-60)+16]
 14701  0104EC  0ED4               	movlw	-44
 14702  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 14703  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 14704  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14705  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 14706  010506  EC99  F0C0         	call	___flge	;wreg free
 14707  01050A  A001               	btfss	btemp& (0+255),0,c
 14708  01050C  D7B1               	goto	l11340
 14709  01050E                     u10500:
 14710                           
 14711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 14712                           ;stkvar	_c @ sp[(-56)+-7]
 14713  01050E  0EC1               	movlw	-63
 14714  010510  50E3               	movf	plusw1,w,c
 14715  010512  6EE6               	movwf	postinc1,c
 14716  010514  0E00               	movlw	0
 14717  010516  6EE6               	movwf	postinc1,c
 14718  010518  EC3E  F0CE         	call	_tolower	;wreg free
 14719                           
 14720                           ;stkvar	_mode @ sp[(-56)+54]
 14721  01051C  0EFE               	movlw	-2
 14722  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 14723                           
 14724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 14725                           ;stkvar	_mode @ sp[(-56)+54]
 14726                           ;stkvar	_nmode @ sp[(-56)+55]
 14727  010524  0EFE               	movlw	-2
 14728  010526  006F FF8C  F001    	movff	plusw1,btemp
 14729  01052C  0EFF               	movlw	-1
 14730  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 14731                           
 14732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 14733                           ;stkvar	_mode @ sp[(-56)+54]
 14734  010534  0EFE               	movlw	-2
 14735  010536  006F FF8C  F001    	movff	plusw1,btemp
 14736  01053C  0E67               	movlw	103
 14737  01053E  1801               	xorwf	btemp^0,w,c
 14738  010540  A4D8               	btfss	status,2,c
 14739  010542  D025               	goto	l11362
 14740                           
 14741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 14742  010544  5023               	movf	_prec^0,w,c
 14743  010546  1024               	iorwf	(_prec+1)^0,w,c
 14744  010548  A4D8               	btfss	status,2,c
 14745  01054A  D004               	goto	l11356
 14746                           
 14747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 14748  01054C  0E00               	movlw	0
 14749  01054E  6E24               	movwf	(_prec+1)^0,c
 14750  010550  0E01               	movlw	1
 14751  010552  6E23               	movwf	_prec^0,c
 14752  010554                     l11356:
 14753                           
 14754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 14755  010554  BE24               	btfsc	(_prec+1)^0,7,c
 14756  010556  D005               	goto	u10530
 14757  010558  5024               	movf	(_prec+1)^0,w,c
 14758  01055A  E110               	bnz	l11360
 14759  01055C  0423               	decf	_prec^0,w,c
 14760  01055E  B0D8               	btfsc	status,0,c
 14761  010560  D00D               	goto	l11360
 14762  010562                     u10530:
 14763  010562  0E06               	movlw	6
 14764  010564  6E0B               	movwf	(btemp+10)^0,c
 14765  010566  0E00               	movlw	0
 14766  010568  6E0C               	movwf	(btemp+11)^0,c
 14767                           
 14768                           ;stkvar	_p @ sp[(-56)+40]
 14769  01056A  0EF0               	movlw	-16
 14770  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14771  010572  0EF1               	movlw	-15
 14772  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 14773  01057A  D00C               	goto	l11368
 14774  01057C                     l11360:
 14775                           
 14776                           ;stkvar	_p @ sp[(-56)+40]
 14777  01057C  0EF0               	movlw	-16
 14778  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 14779  010584  0EF1               	movlw	-15
 14780  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 14781  01058C  D003               	goto	l11368
 14782  01058E                     l11362:
 14783                           
 14784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 14785  01058E  AE24               	btfss	(_prec+1)^0,7,c
 14786  010590  D7F5               	goto	l11360
 14787  010592  D7E7               	goto	u10530
 14788  010594                     l11368:
 14789                           
 14790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 14791                           ;stkvar	_mode @ sp[(-56)+54]
 14792  010594  0EFE               	movlw	-2
 14793  010596  006F FF8C  F001    	movff	plusw1,btemp
 14794  01059C  0E67               	movlw	103
 14795  01059E  1801               	xorwf	btemp^0,w,c
 14796  0105A0  A4D8               	btfss	status,2,c
 14797  0105A2  D02F               	goto	l11378
 14798                           
 14799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 14800                           ;stkvar	_e @ sp[(-56)+34]
 14801  0105A4  0EEB               	movlw	-21
 14802  0105A6  AEE3               	btfss	plusw1,7,c
 14803  0105A8  D00E               	goto	u10560
 14804  0105AA  0EEA               	movlw	-22
 14805  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 14806  0105B2  0EFC               	movlw	252
 14807  0105B4  5E01               	subwf	btemp^0,f,c
 14808  0105B6  0EEB               	movlw	-21
 14809  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 14810  0105BE  0EFF               	movlw	255
 14811  0105C0  5A01               	subwfb	btemp^0,f,c
 14812  0105C2  A0D8               	btfss	status,0,c
 14813  0105C4  D018               	goto	l11376
 14814  0105C6                     u10560:
 14815                           
 14816                           ;stkvar	_e @ sp[(-56)+34]
 14817                           ;stkvar	_p @ sp[(-56)+40]
 14818  0105C6  0EF0               	movlw	-16
 14819  0105C8  50E3               	movf	plusw1,w,c
 14820  0105CA  0FFF               	addlw	255
 14821  0105CC  6E0B               	movwf	(btemp+10)^0,c
 14822  0105CE  0EF1               	movlw	-15
 14823  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14824  0105D6  0EFF               	movlw	255
 14825  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 14826  0105DA  0EEA               	movlw	-22
 14827  0105DC  50E3               	movf	plusw1,w,c
 14828  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 14829  0105E0  500C               	movf	(btemp+11)^0,w,c
 14830  0105E2  0A80               	xorlw	128
 14831  0105E4  6E01               	movwf	btemp^0,c
 14832  0105E6  0EEB               	movlw	-21
 14833  0105E8  50E3               	movf	plusw1,w,c
 14834  0105EA  0A80               	xorlw	128
 14835  0105EC  5801               	subwfb	btemp^0,w,c
 14836  0105EE  A0D8               	btfss	status,0,c
 14837  0105F0  D002               	goto	l11376
 14838                           
 14839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 14840  0105F2  0E66               	movlw	102
 14841  0105F4  D001               	goto	L12
 14842  0105F6                     l11376:
 14843                           
 14844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 14845  0105F6  0E65               	movlw	101
 14846  0105F8                     L12:
 14847  0105F8  6E0C               	movwf	(btemp+11)^0,c
 14848                           
 14849                           ;stkvar	_nmode @ sp[(-56)+55]
 14850  0105FA  0EFF               	movlw	-1
 14851  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14852  010602                     l11378:
 14853                           
 14854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 14855                           ;stkvar	_p @ sp[(-56)+40]
 14856                           ;stkvar	_m @ sp[(-56)+48]
 14857  010602  0EF0               	movlw	-16
 14858  010604  006F FF8C  F001    	movff	plusw1,btemp
 14859  01060A  0EF8               	movlw	-8
 14860  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 14861  010612  0EF1               	movlw	-15
 14862  010614  006F FF8C  F001    	movff	plusw1,btemp
 14863  01061A  0EF9               	movlw	-7
 14864  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 14865                           
 14866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 14867                           ;stkvar	_mode @ sp[(-56)+54]
 14868  010622  0EFE               	movlw	-2
 14869  010624  006F FF8C  F001    	movff	plusw1,btemp
 14870  01062A  0E67               	movlw	103
 14871  01062C  1801               	xorwf	btemp^0,w,c
 14872  01062E  A4D8               	btfss	status,2,c
 14873  010630  D00B               	goto	u10600
 14874                           
 14875                           ;stkvar	_nmode @ sp[(-56)+55]
 14876  010632  0EFF               	movlw	-1
 14877  010634  006F FF8C  F001    	movff	plusw1,btemp
 14878  01063A  0E66               	movlw	102
 14879  01063C  1801               	xorwf	btemp^0,w,c
 14880  01063E  A4D8               	btfss	status,2,c
 14881  010640  D014               	goto	l2149
 14882                           
 14883                           ;stkvar	_e @ sp[(-56)+34]
 14884  010642  0EEB               	movlw	-21
 14885  010644  AEE3               	btfss	plusw1,7,c
 14886  010646  D011               	goto	l2149
 14887  010648                     u10600:
 14888                           
 14889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 14890                           ;stkvar	_m @ sp[(-56)+48]
 14891  010648  0EF8               	movlw	-8
 14892  01064A  50E3               	movf	plusw1,w,c
 14893  01064C  0F01               	addlw	1
 14894  01064E  6E01               	movwf	btemp^0,c
 14895  010650  0EF8               	movlw	-8
 14896  010652  0060  F007  FFE3   	movff	btemp,plusw1
 14897  010658  6A01               	clrf	btemp^0,c
 14898  01065A  0EF9               	movlw	-7
 14899  01065C  50E3               	movf	plusw1,w,c
 14900  01065E  2001               	addwfc	btemp^0,w,c
 14901  010660  6E01               	movwf	btemp^0,c
 14902  010662  0EF9               	movlw	-7
 14903  010664  0060  F007  FFE3   	movff	btemp,plusw1
 14904  01066A                     l2149:
 14905                           
 14906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 14907                           ;stkvar	_nmode @ sp[(-56)+55]
 14908  01066A  0EFF               	movlw	-1
 14909  01066C  006F FF8C  F001    	movff	plusw1,btemp
 14910  010672  0E66               	movlw	102
 14911  010674  1801               	xorwf	btemp^0,w,c
 14912  010676  A4D8               	btfss	status,2,c
 14913  010678  D03B               	goto	l11398
 14914                           
 14915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 14916                           ;stkvar	_e @ sp[(-56)+34]
 14917  01067A  0EEB               	movlw	-21
 14918  01067C  AEE3               	btfss	plusw1,7,c
 14919  01067E  D01C               	goto	l11394
 14920                           
 14921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 14922  010680  0E00               	movlw	0
 14923  010682  6E09               	movwf	(btemp+8)^0,c
 14924  010684  0E00               	movlw	0
 14925  010686  6E0A               	movwf	(btemp+9)^0,c
 14926  010688  0E80               	movlw	128
 14927  01068A  6E0B               	movwf	(btemp+10)^0,c
 14928  01068C  0E3F               	movlw	63
 14929  01068E  6E0C               	movwf	(btemp+11)^0,c
 14930                           
 14931                           ;stkvar	_u @ sp[(-56)+12]
 14932  010690  0ED4               	movlw	-44
 14933  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 14934  010698  0ED5               	movlw	-43
 14935  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14936  0106A0  0ED6               	movlw	-42
 14937  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14938  0106A8  0ED7               	movlw	-41
 14939  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14940                           
 14941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 14942                           ;stkvar	_e @ sp[(-56)+34]
 14943  0106B0  0EEA               	movlw	-22
 14944  0106B2  6AE3               	clrf	plusw1,c
 14945  0106B4  0EEB               	movlw	-21
 14946  0106B6  6AE3               	clrf	plusw1,c
 14947  0106B8                     l11394:
 14948                           
 14949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 14950                           ;stkvar	_mode @ sp[(-56)+54]
 14951  0106B8  0EFE               	movlw	-2
 14952  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 14953  0106C0  0E67               	movlw	103
 14954  0106C2  1801               	xorwf	btemp^0,w,c
 14955  0106C4  B4D8               	btfsc	status,2,c
 14956  0106C6  D014               	goto	l11398
 14957                           
 14958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 14959                           ;stkvar	_e @ sp[(-56)+34]
 14960                           ;stkvar	_m @ sp[(-56)+48]
 14961  0106C8  0EF8               	movlw	-8
 14962  0106CA  50E3               	movf	plusw1,w,c
 14963  0106CC  6E01               	movwf	btemp^0,c
 14964  0106CE  0EEA               	movlw	-22
 14965  0106D0  50E3               	movf	plusw1,w,c
 14966  0106D2  2601               	addwf	btemp^0,f,c
 14967  0106D4  0EF8               	movlw	-8
 14968  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 14969  0106DC  0EF9               	movlw	-7
 14970  0106DE  50E3               	movf	plusw1,w,c
 14971  0106E0  6E01               	movwf	btemp^0,c
 14972  0106E2  0EEB               	movlw	-21
 14973  0106E4  50E3               	movf	plusw1,w,c
 14974  0106E6  2201               	addwfc	btemp^0,f,c
 14975  0106E8  0EF9               	movlw	-7
 14976  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 14977  0106F0                     l11398:
 14978                           
 14979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 14980                           ;stkvar	_i @ sp[(-56)+36]
 14981  0106F0  0EEC               	movlw	-20
 14982  0106F2  6AE3               	clrf	plusw1,c
 14983  0106F4  0EED               	movlw	-19
 14984  0106F6  6AE3               	clrf	plusw1,c
 14985                           
 14986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 14987                           ;stkvar	_g @ sp[(-56)+16]
 14988  0106F8  0ED8               	movlw	-40
 14989  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 14990  010700  0ED9               	movlw	-39
 14991  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 14992  010708  0EDA               	movlw	-38
 14993  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14994  010710  0EDB               	movlw	-37
 14995  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 14996                           
 14997                           ;stkvar	_h @ sp[(-56)+24]
 14998  010718  0EE0               	movlw	-32
 14999  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15000  010720  0EE1               	movlw	-31
 15001  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15002  010728  0EE2               	movlw	-30
 15003  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15004  010730  0EE3               	movlw	-29
 15005  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 15006                           
 15007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 15008                           ;stkvar	_u @ sp[(-56)+12]
 15009  010738  0ED4               	movlw	-44
 15010  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 15011  010740  0ED5               	movlw	-43
 15012  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 15013  010748  0ED6               	movlw	-42
 15014  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15015  010750  0ED7               	movlw	-41
 15016  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 15017                           
 15018                           ;stkvar	_ou @ sp[(-56)+28]
 15019  010758  0EE4               	movlw	-28
 15020  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15021  010760  0EE5               	movlw	-27
 15022  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15023  010768  0EE6               	movlw	-26
 15024  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15025  010770  0EE7               	movlw	-25
 15026  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 15027                           
 15028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15029  010778  D0D6               	goto	l11414
 15030  01077A                     l11404:
 15031                           
 15032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 15033                           ;stkvar	_u @ sp[(-56)+12]
 15034  01077A  0ED4               	movlw	-44
 15035  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 15036  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 15037  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 15038  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15039                           
 15040                           ;stkvar	_h @ sp[(-60)+24]
 15041  010794  0EDC               	movlw	-36
 15042  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15043  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15044  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15045  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15046  0107AE  EC31  F0A2         	call	___fldiv	;wreg free
 15047  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15048  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15049  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15050  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15051  0107CA  EC32  F0AD         	call	_floorf	;wreg free
 15052                           
 15053                           ;stkvar	_l @ sp[(-56)+20]
 15054  0107CE  0EDC               	movlw	-36
 15055  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15056  0107D6  0EDD               	movlw	-35
 15057  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15058  0107DE  0EDE               	movlw	-34
 15059  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15060  0107E6  0EDF               	movlw	-33
 15061  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15062                           
 15063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15064                           ;stkvar	_l @ sp[(-56)+20]
 15065  0107EE  0EDC               	movlw	-36
 15066  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15067  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15068  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15069  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15070  010808  EC28  F0BF         	call	___fltol	;wreg free
 15071  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15072  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15073                           
 15074                           ;stkvar	_d @ sp[(-56)+44]
 15075  010818  0EF4               	movlw	-12
 15076  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15077  010820  0EF5               	movlw	-11
 15078  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15079                           
 15080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15081                           ;stkvar	_u @ sp[(-56)+12]
 15082  010828  0ED4               	movlw	-44
 15083  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15084  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15085  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15086  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15087                           
 15088                           ;stkvar	_l @ sp[(-60)+20]
 15089  010842  0ED8               	movlw	-40
 15090  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15091  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15092  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15093  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15094  01085C  ECEF  F096         	call	___flmul	;wreg free
 15095  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15096  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15097  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15098  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15099                           
 15100                           ;stkvar	_h @ sp[(-60)+24]
 15101  010878  0EDC               	movlw	-36
 15102  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15103  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15104  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15105  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15106  010892  ECEB  F0D1         	call	___flsub	;wreg free
 15107                           
 15108                           ;stkvar	_h @ sp[(-56)+24]
 15109  010896  0EE0               	movlw	-32
 15110  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15111  01089E  0EE1               	movlw	-31
 15112  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15113  0108A6  0EE2               	movlw	-30
 15114  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15115  0108AE  0EE3               	movlw	-29
 15116  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15117                           
 15118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15119  0108B6  0E00               	movlw	0
 15120  0108B8  6EE6               	movwf	postinc1,c
 15121  0108BA  0E00               	movlw	0
 15122  0108BC  6EE6               	movwf	postinc1,c
 15123  0108BE  0E20               	movlw	32
 15124  0108C0  6EE6               	movwf	postinc1,c
 15125  0108C2  0E41               	movlw	65
 15126  0108C4  6EE6               	movwf	postinc1,c
 15127                           
 15128                           ;stkvar	_u @ sp[(-60)+12]
 15129  0108C6  0ED0               	movlw	-48
 15130  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15131  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15132  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15133  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15134  0108E0  EC31  F0A2         	call	___fldiv	;wreg free
 15135                           
 15136                           ;stkvar	_u @ sp[(-56)+12]
 15137  0108E4  0ED4               	movlw	-44
 15138  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15139  0108EC  0ED5               	movlw	-43
 15140  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15141  0108F4  0ED6               	movlw	-42
 15142  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15143  0108FC  0ED7               	movlw	-41
 15144  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15145                           
 15146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15147                           ;stkvar	_i @ sp[(-56)+36]
 15148  010904  0EEC               	movlw	-20
 15149  010906  50E3               	movf	plusw1,w,c
 15150  010908  0F01               	addlw	1
 15151  01090A  6E01               	movwf	btemp^0,c
 15152  01090C  0EEC               	movlw	-20
 15153  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15154  010914  6A01               	clrf	btemp^0,c
 15155  010916  0EED               	movlw	-19
 15156  010918  50E3               	movf	plusw1,w,c
 15157  01091A  2001               	addwfc	btemp^0,w,c
 15158  01091C  6E01               	movwf	btemp^0,c
 15159  01091E  0EED               	movlw	-19
 15160  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15161  010926                     l11414:
 15162                           
 15163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15164                           ;stkvar	_m @ sp[(-56)+48]
 15165                           ;stkvar	_i @ sp[(-56)+36]
 15166  010926  50E1               	movf	fsr1l,w,c
 15167  010928  0FEC               	addlw	-20
 15168  01092A  6ED9               	movwf	fsr2l,c
 15169  01092C  50E2               	movf	fsr1h,w,c
 15170  01092E  6EDA               	movwf	fsr2h,c
 15171  010930  0EFF               	movlw	255
 15172  010932  22DA               	addwfc	fsr2h,f,c
 15173  010934  0EF8               	movlw	-8
 15174  010936  50E3               	movf	plusw1,w,c
 15175  010938  5CDE               	subwf	postinc2,w,c
 15176  01093A  50DE               	movf	postinc2,w,c
 15177  01093C  0A80               	xorlw	128
 15178  01093E  6E01               	movwf	btemp^0,c
 15179  010940  0EF9               	movlw	-7
 15180  010942  50E3               	movf	plusw1,w,c
 15181  010944  0A80               	xorlw	128
 15182  010946  5801               	subwfb	btemp^0,w,c
 15183  010948  A0D8               	btfss	status,0,c
 15184  01094A  D717               	goto	l11404
 15185                           
 15186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15187  01094C  0E00               	movlw	0
 15188  01094E  6EE6               	movwf	postinc1,c
 15189  010950  0E00               	movlw	0
 15190  010952  6EE6               	movwf	postinc1,c
 15191  010954  0EA0               	movlw	160
 15192  010956  6EE6               	movwf	postinc1,c
 15193  010958  0E40               	movlw	64
 15194  01095A  6EE6               	movwf	postinc1,c
 15195                           
 15196                           ;stkvar	_u @ sp[(-60)+12]
 15197  01095C  0ED0               	movlw	-48
 15198  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15199  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15200  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15201  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15202  010976  ECEF  F096         	call	___flmul	;wreg free
 15203                           
 15204                           ;stkvar	_l @ sp[(-56)+20]
 15205  01097A  0EDC               	movlw	-36
 15206  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15207  010982  0EDD               	movlw	-35
 15208  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15209  01098A  0EDE               	movlw	-34
 15210  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15211  010992  0EDF               	movlw	-33
 15212  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15213                           
 15214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15215                           ;stkvar	_l @ sp[(-56)+20]
 15216  01099A  0EDC               	movlw	-36
 15217  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15218  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15219  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15220  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15221                           
 15222                           ;stkvar	_h @ sp[(-60)+24]
 15223  0109B4  0EDC               	movlw	-36
 15224  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15225  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15226  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15227  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15228  0109CE  EC99  F0C0         	call	___flge	;wreg free
 15229  0109D2  A001               	btfss	btemp& (0+255),0,c
 15230  0109D4  D021               	goto	u10670
 15231                           
 15232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15233                           ;stkvar	_l @ sp[(-56)+20]
 15234                           
 15235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15236                           
 15237                           ;stkvar	_l @ sp[(-56)+20]
 15238                           
 15239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 15240  0109D6  0EDC               	movlw	-36
 15241  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 15242  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 15243  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 15244  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15245                           
 15246                           ;stkvar	_h @ sp[(-60)+24]
 15247  0109F0  0EDC               	movlw	-36
 15248  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 15249  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 15250  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15251  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 15252  010A0A  EC87  F0C9         	call	___fleq	;wreg free
 15253  010A0E  A001               	btfss	btemp& (0+255),0,c
 15254  010A10  D01B               	goto	l11428
 15255                           
 15256                           ;stkvar	_d @ sp[(-56)+44]
 15257  010A12  0EF4               	movlw	-12
 15258  010A14  B0E3               	btfsc	plusw1,0,c
 15259  010A16  D018               	goto	l11428
 15260  010A18                     u10670:
 15261                           
 15262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 15263  010A18  0E00               	movlw	0
 15264  010A1A  6E09               	movwf	(btemp+8)^0,c
 15265  010A1C  0E00               	movlw	0
 15266  010A1E  6E0A               	movwf	(btemp+9)^0,c
 15267  010A20  0E00               	movlw	0
 15268  010A22  6E0B               	movwf	(btemp+10)^0,c
 15269  010A24  0E00               	movlw	0
 15270  010A26  6E0C               	movwf	(btemp+11)^0,c
 15271                           
 15272                           ;stkvar	_l @ sp[(-56)+20]
 15273  010A28  0EDC               	movlw	-36
 15274  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15275  010A30  0EDD               	movlw	-35
 15276  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15277  010A38  0EDE               	movlw	-34
 15278  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15279  010A40  0EDF               	movlw	-33
 15280  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 15281  010A48                     l11428:
 15282                           
 15283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 15284                           ;stkvar	_l @ sp[(-56)+20]
 15285  010A48  0EDC               	movlw	-36
 15286  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15287  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 15288  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 15289  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15290                           
 15291                           ;stkvar	_g @ sp[(-60)+16]
 15292  010A62  0ED4               	movlw	-44
 15293  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 15294  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15295  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 15296  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15297  010A7C  EC04  F09B         	call	___fladd	;wreg free
 15298                           
 15299                           ;stkvar	_h @ sp[(-56)+24]
 15300  010A80  0EE0               	movlw	-32
 15301  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 15302  010A88  0EE1               	movlw	-31
 15303  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15304  010A90  0EE2               	movlw	-30
 15305  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15306  010A98  0EE3               	movlw	-29
 15307  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 15308                           
 15309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 15310                           ;stkvar	_ou @ sp[(-56)+28]
 15311  010AA0  0EE4               	movlw	-28
 15312  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 15313  010AA8  0EE5               	movlw	-27
 15314  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15315  010AB0  0EE6               	movlw	-26
 15316  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15317  010AB8  0EE7               	movlw	-25
 15318  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15319                           
 15320                           ;stkvar	_u @ sp[(-56)+12]
 15321  010AC0  0ED4               	movlw	-44
 15322  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15323  010AC8  0ED5               	movlw	-43
 15324  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15325  010AD0  0ED6               	movlw	-42
 15326  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15327  010AD8  0ED7               	movlw	-41
 15328  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15329                           
 15330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 15331                           ;stkvar	_nmode @ sp[(-56)+55]
 15332  010AE0  0EFF               	movlw	-1
 15333  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 15334  010AE8  0E65               	movlw	101
 15335  010AEA  1801               	xorwf	btemp^0,w,c
 15336  010AEC  B4D8               	btfsc	status,2,c
 15337  010AEE  D011               	goto	l11436
 15338                           
 15339                           ;stkvar	_e @ sp[(-56)+34]
 15340                           ;stkvar	_ne @ sp[(-56)+46]
 15341  010AF0  0EEA               	movlw	-22
 15342  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 15343  010AF8  0EF6               	movlw	-10
 15344  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 15345  010B00  0EEB               	movlw	-21
 15346  010B02  006F FF8C  F001    	movff	plusw1,btemp
 15347  010B08  0EF7               	movlw	-9
 15348  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 15349  010B10  D004               	goto	l2164
 15350  010B12                     l11436:
 15351                           
 15352                           ;stkvar	_ne @ sp[(-56)+46]
 15353  010B12  0EF6               	movlw	-10
 15354  010B14  6AE3               	clrf	plusw1,c
 15355  010B16  0EF7               	movlw	-9
 15356  010B18  6AE3               	clrf	plusw1,c
 15357  010B1A                     l2164:
 15358                           
 15359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 15360                           ;stkvar	_pp @ sp[(-56)+50]
 15361  010B1A  0EFA               	movlw	-6
 15362  010B1C  6AE3               	clrf	plusw1,c
 15363  010B1E  0EFB               	movlw	-5
 15364  010B20  6AE3               	clrf	plusw1,c
 15365                           
 15366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 15367                           ;stkvar	_t @ sp[(-56)+52]
 15368  010B22  0EFC               	movlw	-4
 15369  010B24  6AE3               	clrf	plusw1,c
 15370  010B26  0EFD               	movlw	-3
 15371  010B28  6AE3               	clrf	plusw1,c
 15372                           
 15373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 15374                           ;stkvar	_i @ sp[(-56)+36]
 15375  010B2A  0EEC               	movlw	-20
 15376  010B2C  6AE3               	clrf	plusw1,c
 15377  010B2E  0EED               	movlw	-19
 15378  010B30  6AE3               	clrf	plusw1,c
 15379                           
 15380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15381  010B32  D1B7               	goto	l11488
 15382  010B34                     l11438:
 15383                           
 15384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 15385                           ;stkvar	_u @ sp[(-56)+12]
 15386  010B34  0ED4               	movlw	-44
 15387  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 15388  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15389  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 15390  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 15391                           
 15392                           ;stkvar	_h @ sp[(-60)+24]
 15393  010B4E  0EDC               	movlw	-36
 15394  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 15395  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15396  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15397  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 15398  010B68  EC31  F0A2         	call	___fldiv	;wreg free
 15399  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 15400  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15401  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15402  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 15403  010B84  EC32  F0AD         	call	_floorf	;wreg free
 15404                           
 15405                           ;stkvar	_l @ sp[(-56)+20]
 15406  010B88  0EDC               	movlw	-36
 15407  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 15408  010B90  0EDD               	movlw	-35
 15409  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15410  010B98  0EDE               	movlw	-34
 15411  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15412  010BA0  0EDF               	movlw	-33
 15413  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 15414                           
 15415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 15416                           ;stkvar	_l @ sp[(-56)+20]
 15417  010BA8  0EDC               	movlw	-36
 15418  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15419  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15420  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15421  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 15422  010BC2  EC28  F0BF         	call	___fltol	;wreg free
 15423  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 15424  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 15425                           
 15426                           ;stkvar	_d @ sp[(-56)+44]
 15427  010BD2  0EF4               	movlw	-12
 15428  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15429  010BDA  0EF5               	movlw	-11
 15430  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15431                           
 15432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 15433  010BE2  B825               	btfsc	_flags^0,4,c
 15434  010BE4  D026               	goto	l11452
 15435                           
 15436                           ;stkvar	_d @ sp[(-56)+44]
 15437  010BE6  0EF4               	movlw	-12
 15438  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 15439  010BEE  0EF5               	movlw	-11
 15440  010BF0  50E3               	movf	plusw1,w,c
 15441  010BF2  1001               	iorwf	btemp^0,w,c
 15442  010BF4  A4D8               	btfss	status,2,c
 15443  010BF6  D01D               	goto	l11452
 15444                           
 15445                           ;stkvar	_mode @ sp[(-56)+54]
 15446  010BF8  0EFE               	movlw	-2
 15447  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 15448  010C00  0E67               	movlw	103
 15449  010C02  1801               	xorwf	btemp^0,w,c
 15450  010C04  A4D8               	btfss	status,2,c
 15451  010C06  D015               	goto	l11452
 15452                           
 15453                           ;stkvar	_ne @ sp[(-56)+46]
 15454  010C08  0EF7               	movlw	-9
 15455  010C0A  AEE3               	btfss	plusw1,7,c
 15456  010C0C  D012               	goto	l11452
 15457                           
 15458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 15459                           ;stkvar	_t @ sp[(-56)+52]
 15460  010C0E  0EFC               	movlw	-4
 15461  010C10  50E3               	movf	plusw1,w,c
 15462  010C12  0F01               	addlw	1
 15463  010C14  6E01               	movwf	btemp^0,c
 15464  010C16  0EFC               	movlw	-4
 15465  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 15466  010C1E  6A01               	clrf	btemp^0,c
 15467  010C20  0EFD               	movlw	-3
 15468  010C22  50E3               	movf	plusw1,w,c
 15469  010C24  2001               	addwfc	btemp^0,w,c
 15470  010C26  6E01               	movwf	btemp^0,c
 15471  010C28  0EFD               	movlw	-3
 15472  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 15473                           
 15474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 15475  010C30  D0AF               	goto	l11480
 15476  010C32                     l11452:
 15477                           
 15478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 15479                           ;stkvar	_pp @ sp[(-56)+50]
 15480  010C32  0EFA               	movlw	-6
 15481  010C34  006F FF8C  F001    	movff	plusw1,btemp
 15482  010C3A  0EFB               	movlw	-5
 15483  010C3C  50E3               	movf	plusw1,w,c
 15484  010C3E  1001               	iorwf	btemp^0,w,c
 15485  010C40  A4D8               	btfss	status,2,c
 15486  010C42  D070               	goto	l11472
 15487                           
 15488                           ;stkvar	_ne @ sp[(-56)+46]
 15489  010C44  0EF7               	movlw	-9
 15490  010C46  AEE3               	btfss	plusw1,7,c
 15491  010C48  D06D               	goto	l11472
 15492                           
 15493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 15494                           ;stkvar	_n @ sp[(-56)+32]
 15495  010C4A  0EE8               	movlw	-24
 15496  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15497  010C52  0EE9               	movlw	-23
 15498  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 15499  010C5A  0E94               	movlw	low _dbuf
 15500  010C5C  240B               	addwf	(btemp+10)^0,w,c
 15501  010C5E  6ED9               	movwf	fsr2l,c
 15502  010C60  0E03               	movlw	high _dbuf
 15503  010C62  200C               	addwfc	(btemp+11)^0,w,c
 15504  010C64  6EDA               	movwf	fsr2h,c
 15505  010C66  0E2E               	movlw	46
 15506  010C68  6EDF               	movwf	indf2,c
 15507                           
 15508                           ;stkvar	_n @ sp[(-56)+32]
 15509  010C6A  0EE8               	movlw	-24
 15510  010C6C  50E3               	movf	plusw1,w,c
 15511  010C6E  0F01               	addlw	1
 15512  010C70  6E01               	movwf	btemp^0,c
 15513  010C72  0EE8               	movlw	-24
 15514  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 15515  010C7A  6A01               	clrf	btemp^0,c
 15516  010C7C  0EE9               	movlw	-23
 15517  010C7E  50E3               	movf	plusw1,w,c
 15518  010C80  2001               	addwfc	btemp^0,w,c
 15519  010C82  6E01               	movwf	btemp^0,c
 15520  010C84  0EE9               	movlw	-23
 15521  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 15522                           
 15523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 15524                           ;stkvar	_w @ sp[(-56)+38]
 15525  010C8C  50E1               	movf	fsr1l,w,c
 15526  010C8E  0FEE               	addlw	-18
 15527  010C90  6ED9               	movwf	fsr2l,c
 15528  010C92  50E2               	movf	fsr1h,w,c
 15529  010C94  6EDA               	movwf	fsr2h,c
 15530  010C96  0EFF               	movlw	255
 15531  010C98  22DA               	addwfc	fsr2h,f,c
 15532  010C9A  06DE               	decf	postinc2,f,c
 15533  010C9C  0E00               	movlw	0
 15534  010C9E  5ADD               	subwfb	postdec2,f,c
 15535                           
 15536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 15537  010CA0  0E01               	movlw	1
 15538  010CA2  6E0B               	movwf	(btemp+10)^0,c
 15539  010CA4  0E00               	movlw	0
 15540  010CA6  6E0C               	movwf	(btemp+11)^0,c
 15541                           
 15542                           ;stkvar	_pp @ sp[(-56)+50]
 15543  010CA8  0EFA               	movlw	-6
 15544  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15545  010CB0  0EFB               	movlw	-5
 15546  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15547  010CB8  D035               	goto	l11472
 15548  010CBA                     l11464:
 15549                           
 15550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 15551                           ;stkvar	_n @ sp[(-56)+32]
 15552  010CBA  0EE8               	movlw	-24
 15553  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15554  010CC2  0EE9               	movlw	-23
 15555  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15556  010CCA  0E94               	movlw	low _dbuf
 15557  010CCC  240B               	addwf	(btemp+10)^0,w,c
 15558  010CCE  6ED9               	movwf	fsr2l,c
 15559  010CD0  0E03               	movlw	high _dbuf
 15560  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 15561  010CD4  6EDA               	movwf	fsr2h,c
 15562  010CD6  0E30               	movlw	48
 15563  010CD8  6EDF               	movwf	indf2,c
 15564                           
 15565                           ;stkvar	_n @ sp[(-56)+32]
 15566  010CDA  0EE8               	movlw	-24
 15567  010CDC  50E3               	movf	plusw1,w,c
 15568  010CDE  0F01               	addlw	1
 15569  010CE0  6E01               	movwf	btemp^0,c
 15570  010CE2  0EE8               	movlw	-24
 15571  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 15572  010CEA  6A01               	clrf	btemp^0,c
 15573  010CEC  0EE9               	movlw	-23
 15574  010CEE  50E3               	movf	plusw1,w,c
 15575  010CF0  2001               	addwfc	btemp^0,w,c
 15576  010CF2  6E01               	movwf	btemp^0,c
 15577  010CF4  0EE9               	movlw	-23
 15578  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 15579                           
 15580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 15581                           ;stkvar	_w @ sp[(-56)+38]
 15582  010CFC  50E1               	movf	fsr1l,w,c
 15583  010CFE  0FEE               	addlw	-18
 15584  010D00  6ED9               	movwf	fsr2l,c
 15585  010D02  50E2               	movf	fsr1h,w,c
 15586  010D04  6EDA               	movwf	fsr2h,c
 15587  010D06  0EFF               	movlw	255
 15588  010D08  22DA               	addwfc	fsr2h,f,c
 15589  010D0A  06DE               	decf	postinc2,f,c
 15590  010D0C  0E00               	movlw	0
 15591  010D0E  5ADD               	subwfb	postdec2,f,c
 15592                           
 15593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 15594                           ;stkvar	_t @ sp[(-56)+52]
 15595  010D10  50E1               	movf	fsr1l,w,c
 15596  010D12  0FFC               	addlw	-4
 15597  010D14  6ED9               	movwf	fsr2l,c
 15598  010D16  50E2               	movf	fsr1h,w,c
 15599  010D18  6EDA               	movwf	fsr2h,c
 15600  010D1A  0EFF               	movlw	255
 15601  010D1C  22DA               	addwfc	fsr2h,f,c
 15602  010D1E  06DE               	decf	postinc2,f,c
 15603  010D20  0E00               	movlw	0
 15604  010D22  5ADD               	subwfb	postdec2,f,c
 15605  010D24                     l11472:
 15606                           
 15607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 15608                           ;stkvar	_t @ sp[(-56)+52]
 15609  010D24  0EFC               	movlw	-4
 15610  010D26  006F FF8C  F001    	movff	plusw1,btemp
 15611  010D2C  0EFD               	movlw	-3
 15612  010D2E  50E3               	movf	plusw1,w,c
 15613  010D30  1001               	iorwf	btemp^0,w,c
 15614  010D32  A4D8               	btfss	status,2,c
 15615  010D34  D7C2               	goto	l11464
 15616                           
 15617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 15618                           ;stkvar	_n @ sp[(-56)+32]
 15619  010D36  0EE8               	movlw	-24
 15620  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 15621  010D3E  0EE9               	movlw	-23
 15622  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 15623  010D46  0E94               	movlw	low _dbuf
 15624  010D48  240B               	addwf	(btemp+10)^0,w,c
 15625  010D4A  6ED9               	movwf	fsr2l,c
 15626  010D4C  0E03               	movlw	high _dbuf
 15627  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 15628  010D50  6EDA               	movwf	fsr2h,c
 15629                           
 15630                           ;stkvar	_d @ sp[(-56)+44]
 15631  010D52  0EF4               	movlw	-12
 15632  010D54  50E3               	movf	plusw1,w,c
 15633  010D56  0F30               	addlw	48
 15634  010D58  6EDF               	movwf	indf2,c
 15635                           
 15636                           ;stkvar	_n @ sp[(-56)+32]
 15637  010D5A  0EE8               	movlw	-24
 15638  010D5C  50E3               	movf	plusw1,w,c
 15639  010D5E  0F01               	addlw	1
 15640  010D60  6E01               	movwf	btemp^0,c
 15641  010D62  0EE8               	movlw	-24
 15642  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 15643  010D6A  6A01               	clrf	btemp^0,c
 15644  010D6C  0EE9               	movlw	-23
 15645  010D6E  50E3               	movf	plusw1,w,c
 15646  010D70  2001               	addwfc	btemp^0,w,c
 15647  010D72  6E01               	movwf	btemp^0,c
 15648  010D74  0EE9               	movlw	-23
 15649  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 15650                           
 15651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 15652                           ;stkvar	_w @ sp[(-56)+38]
 15653  010D7C  50E1               	movf	fsr1l,w,c
 15654  010D7E  0FEE               	addlw	-18
 15655  010D80  6ED9               	movwf	fsr2l,c
 15656  010D82  50E2               	movf	fsr1h,w,c
 15657  010D84  6EDA               	movwf	fsr2h,c
 15658  010D86  0EFF               	movlw	255
 15659  010D88  22DA               	addwfc	fsr2h,f,c
 15660  010D8A  06DE               	decf	postinc2,f,c
 15661  010D8C  0E00               	movlw	0
 15662  010D8E  5ADD               	subwfb	postdec2,f,c
 15663  010D90                     l11480:
 15664                           
 15665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 15666                           ;stkvar	_u @ sp[(-56)+12]
 15667  010D90  0ED4               	movlw	-44
 15668  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 15669  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 15670  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15671  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15672                           
 15673                           ;stkvar	_l @ sp[(-60)+20]
 15674  010DAA  0ED8               	movlw	-40
 15675  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 15676  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 15677  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 15678  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 15679  010DC4  ECEF  F096         	call	___flmul	;wreg free
 15680  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 15681  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15682  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15683  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 15684                           
 15685                           ;stkvar	_h @ sp[(-60)+24]
 15686  010DE0  0EDC               	movlw	-36
 15687  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 15688  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 15689  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 15690  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 15691  010DFA  ECEB  F0D1         	call	___flsub	;wreg free
 15692                           
 15693                           ;stkvar	_h @ sp[(-56)+24]
 15694  010DFE  0EE0               	movlw	-32
 15695  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 15696  010E06  0EE1               	movlw	-31
 15697  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15698  010E0E  0EE2               	movlw	-30
 15699  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15700  010E16  0EE3               	movlw	-29
 15701  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 15702                           
 15703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 15704  010E1E  0E00               	movlw	0
 15705  010E20  6EE6               	movwf	postinc1,c
 15706  010E22  0E00               	movlw	0
 15707  010E24  6EE6               	movwf	postinc1,c
 15708  010E26  0E20               	movlw	32
 15709  010E28  6EE6               	movwf	postinc1,c
 15710  010E2A  0E41               	movlw	65
 15711  010E2C  6EE6               	movwf	postinc1,c
 15712                           
 15713                           ;stkvar	_u @ sp[(-60)+12]
 15714  010E2E  0ED0               	movlw	-48
 15715  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 15716  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 15717  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15718  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 15719  010E48  EC31  F0A2         	call	___fldiv	;wreg free
 15720                           
 15721                           ;stkvar	_u @ sp[(-56)+12]
 15722  010E4C  0ED4               	movlw	-44
 15723  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 15724  010E54  0ED5               	movlw	-43
 15725  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15726  010E5C  0ED6               	movlw	-42
 15727  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15728  010E64  0ED7               	movlw	-41
 15729  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 15730                           
 15731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 15732                           ;stkvar	_ne @ sp[(-56)+46]
 15733  010E6C  50E1               	movf	fsr1l,w,c
 15734  010E6E  0FF6               	addlw	-10
 15735  010E70  6ED9               	movwf	fsr2l,c
 15736  010E72  50E2               	movf	fsr1h,w,c
 15737  010E74  6EDA               	movwf	fsr2h,c
 15738  010E76  0EFF               	movlw	255
 15739  010E78  22DA               	addwfc	fsr2h,f,c
 15740  010E7A  06DE               	decf	postinc2,f,c
 15741  010E7C  0E00               	movlw	0
 15742  010E7E  5ADD               	subwfb	postdec2,f,c
 15743                           
 15744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 15745                           ;stkvar	_i @ sp[(-56)+36]
 15746  010E80  0EEC               	movlw	-20
 15747  010E82  50E3               	movf	plusw1,w,c
 15748  010E84  0F01               	addlw	1
 15749  010E86  6E01               	movwf	btemp^0,c
 15750  010E88  0EEC               	movlw	-20
 15751  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 15752  010E90  6A01               	clrf	btemp^0,c
 15753  010E92  0EED               	movlw	-19
 15754  010E94  50E3               	movf	plusw1,w,c
 15755  010E96  2001               	addwfc	btemp^0,w,c
 15756  010E98  6E01               	movwf	btemp^0,c
 15757  010E9A  0EED               	movlw	-19
 15758  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 15759  010EA2                     l11488:
 15760                           
 15761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15762                           ;stkvar	_m @ sp[(-56)+48]
 15763                           ;stkvar	_i @ sp[(-56)+36]
 15764  010EA2  50E1               	movf	fsr1l,w,c
 15765  010EA4  0FEC               	addlw	-20
 15766  010EA6  6ED9               	movwf	fsr2l,c
 15767  010EA8  50E2               	movf	fsr1h,w,c
 15768  010EAA  6EDA               	movwf	fsr2h,c
 15769  010EAC  0EFF               	movlw	255
 15770  010EAE  22DA               	addwfc	fsr2h,f,c
 15771  010EB0  0EF8               	movlw	-8
 15772  010EB2  50E3               	movf	plusw1,w,c
 15773  010EB4  5CDE               	subwf	postinc2,w,c
 15774  010EB6  50DE               	movf	postinc2,w,c
 15775  010EB8  0A80               	xorlw	128
 15776  010EBA  6E01               	movwf	btemp^0,c
 15777  010EBC  0EF9               	movlw	-7
 15778  010EBE  50E3               	movf	plusw1,w,c
 15779  010EC0  0A80               	xorlw	128
 15780  010EC2  5801               	subwfb	btemp^0,w,c
 15781  010EC4  B0D8               	btfsc	status,0,c
 15782  010EC6  D00E               	goto	u10770
 15783                           
 15784                           ;stkvar	_n @ sp[(-56)+32]
 15785  010EC8  0EE9               	movlw	-23
 15786  010ECA  BEE3               	btfsc	plusw1,7,c
 15787  010ECC  D633               	goto	l11438
 15788  010ECE  0EE9               	movlw	-23
 15789  010ED0  50E3               	movf	plusw1,w,c
 15790  010ED2  E108               	bnz	u10770
 15791  010ED4  0EE8               	movlw	-24
 15792  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 15793  010EDC  0E4B               	movlw	75
 15794  010EDE  5E01               	subwf	btemp^0,f,c
 15795  010EE0  A0D8               	btfss	status,0,c
 15796  010EE2  D628               	goto	l11438
 15797  010EE4                     u10770:
 15798                           
 15799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 15800                           ;stkvar	_pp @ sp[(-56)+50]
 15801  010EE4  0EFA               	movlw	-6
 15802  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 15803  010EEC  0EFB               	movlw	-5
 15804  010EEE  50E3               	movf	plusw1,w,c
 15805  010EF0  1001               	iorwf	btemp^0,w,c
 15806  010EF2  B4D8               	btfsc	status,2,c
 15807  010EF4  A825               	btfss	_flags^0,4,c
 15808  010EF6  D021               	goto	l11500
 15809                           
 15810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 15811                           ;stkvar	_n @ sp[(-56)+32]
 15812  010EF8  0EE8               	movlw	-24
 15813  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 15814  010F00  0EE9               	movlw	-23
 15815  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 15816  010F08  0E94               	movlw	low _dbuf
 15817  010F0A  240B               	addwf	(btemp+10)^0,w,c
 15818  010F0C  6ED9               	movwf	fsr2l,c
 15819  010F0E  0E03               	movlw	high _dbuf
 15820  010F10  200C               	addwfc	(btemp+11)^0,w,c
 15821  010F12  6EDA               	movwf	fsr2h,c
 15822  010F14  0E2E               	movlw	46
 15823  010F16  6EDF               	movwf	indf2,c
 15824                           
 15825                           ;stkvar	_n @ sp[(-56)+32]
 15826  010F18  0EE8               	movlw	-24
 15827  010F1A  50E3               	movf	plusw1,w,c
 15828  010F1C  0F01               	addlw	1
 15829  010F1E  6E01               	movwf	btemp^0,c
 15830  010F20  0EE8               	movlw	-24
 15831  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 15832  010F28  6A01               	clrf	btemp^0,c
 15833  010F2A  0EE9               	movlw	-23
 15834  010F2C  50E3               	movf	plusw1,w,c
 15835  010F2E  2001               	addwfc	btemp^0,w,c
 15836  010F30  6E01               	movwf	btemp^0,c
 15837  010F32  0EE9               	movlw	-23
 15838  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 15839  010F3A                     l11500:
 15840                           
 15841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 15842                           ;stkvar	_n @ sp[(-56)+32]
 15843  010F3A  0EE8               	movlw	-24
 15844  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15845  010F42  0EE9               	movlw	-23
 15846  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 15847  010F4A  0E94               	movlw	low _dbuf
 15848  010F4C  240B               	addwf	(btemp+10)^0,w,c
 15849  010F4E  6ED9               	movwf	fsr2l,c
 15850  010F50  0E03               	movlw	high _dbuf
 15851  010F52  200C               	addwfc	(btemp+11)^0,w,c
 15852  010F54  6EDA               	movwf	fsr2h,c
 15853  010F56  0E00               	movlw	0
 15854  010F58  6EDF               	movwf	indf2,c
 15855                           
 15856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 15857                           ;stkvar	_nmode @ sp[(-56)+55]
 15858  010F5A  0EFF               	movlw	-1
 15859  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 15860  010F62  0E65               	movlw	101
 15861  010F64  1801               	xorwf	btemp^0,w,c
 15862  010F66  A4D8               	btfss	status,2,c
 15863  010F68  EF16  F081         	goto	l11304
 15864                           
 15865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 15866  010F6C  0E4F               	movlw	79
 15867  010F6E  6E0B               	movwf	(btemp+10)^0,c
 15868  010F70  0E00               	movlw	0
 15869  010F72  6E0C               	movwf	(btemp+11)^0,c
 15870                           
 15871                           ;stkvar	_i @ sp[(-56)+36]
 15872  010F74  0EEC               	movlw	-20
 15873  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15874  010F7C  0EED               	movlw	-19
 15875  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15876                           
 15877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 15878                           ;stkvar	_i @ sp[(-56)+36]
 15879  010F84  0EEC               	movlw	-20
 15880  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 15881  010F8C  0EED               	movlw	-19
 15882  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15883  010F94  0E94               	movlw	low _dbuf
 15884  010F96  240B               	addwf	(btemp+10)^0,w,c
 15885  010F98  6ED9               	movwf	fsr2l,c
 15886  010F9A  0E03               	movlw	high _dbuf
 15887  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 15888  010F9E  6EDA               	movwf	fsr2h,c
 15889  010FA0  0E00               	movlw	0
 15890  010FA2  6EDF               	movwf	indf2,c
 15891                           
 15892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 15893                           ;stkvar	_sign @ sp[(-56)+42]
 15894  010FA4  0EF2               	movlw	-14
 15895  010FA6  6AE3               	clrf	plusw1,c
 15896  010FA8  0EF3               	movlw	-13
 15897  010FAA  6AE3               	clrf	plusw1,c
 15898                           
 15899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 15900                           ;stkvar	_e @ sp[(-56)+34]
 15901  010FAC  0EEB               	movlw	-21
 15902  010FAE  AEE3               	btfss	plusw1,7,c
 15903  010FB0  D012               	goto	l11514
 15904                           
 15905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 15906  010FB2  0E01               	movlw	1
 15907  010FB4  6E0B               	movwf	(btemp+10)^0,c
 15908  010FB6  0E00               	movlw	0
 15909  010FB8  6E0C               	movwf	(btemp+11)^0,c
 15910                           
 15911                           ;stkvar	_sign @ sp[(-56)+42]
 15912  010FBA  0EF2               	movlw	-14
 15913  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15914  010FC2  0EF3               	movlw	-13
 15915  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15916                           
 15917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 15918                           ;stkvar	_e @ sp[(-56)+34]
 15919                           ;stkvar	_e @ sp[(-56)+34]
 15920  010FCA  0EEA               	movlw	-22
 15921  010FCC  6CE3               	negf	plusw1,c
 15922  010FCE  0EEB               	movlw	-21
 15923  010FD0  1EE3               	comf	plusw1,f,c
 15924  010FD2  B0D8               	btfsc	status,0,c
 15925  010FD4  2AE3               	incf	plusw1,f,c
 15926  010FD6                     l11514:
 15927                           
 15928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 15929  010FD6  0E02               	movlw	2
 15930  010FD8  6E0B               	movwf	(btemp+10)^0,c
 15931  010FDA  0E00               	movlw	0
 15932  010FDC  6E0C               	movwf	(btemp+11)^0,c
 15933                           
 15934                           ;stkvar	_p @ sp[(-56)+40]
 15935  010FDE  0EF0               	movlw	-16
 15936  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15937  010FE6  0EF1               	movlw	-15
 15938  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 15939                           
 15940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15941  010FEE  D051               	goto	l11526
 15942  010FF0                     l11516:
 15943                           
 15944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 15945                           ;stkvar	_i @ sp[(-56)+36]
 15946  010FF0  50E1               	movf	fsr1l,w,c
 15947  010FF2  0FEC               	addlw	-20
 15948  010FF4  6ED9               	movwf	fsr2l,c
 15949  010FF6  50E2               	movf	fsr1h,w,c
 15950  010FF8  6EDA               	movwf	fsr2h,c
 15951  010FFA  0EFF               	movlw	255
 15952  010FFC  22DA               	addwfc	fsr2h,f,c
 15953  010FFE  06DE               	decf	postinc2,f,c
 15954  011000  0E00               	movlw	0
 15955  011002  5ADD               	subwfb	postdec2,f,c
 15956                           
 15957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 15958                           ;stkvar	_i @ sp[(-56)+36]
 15959  011004  0EEC               	movlw	-20
 15960  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 15961  01100C  0EED               	movlw	-19
 15962  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15963  011014  0E94               	movlw	low _dbuf
 15964  011016  240B               	addwf	(btemp+10)^0,w,c
 15965  011018  6ED9               	movwf	fsr2l,c
 15966  01101A  0E03               	movlw	high _dbuf
 15967  01101C  200C               	addwfc	(btemp+11)^0,w,c
 15968  01101E  6EDA               	movwf	fsr2h,c
 15969  011020  0E0A               	movlw	10
 15970  011022  6EE6               	movwf	postinc1,c
 15971  011024  0E00               	movlw	0
 15972  011026  6EE6               	movwf	postinc1,c
 15973                           
 15974                           ;stkvar	_e @ sp[(-58)+34]
 15975  011028  0EE8               	movlw	-24
 15976  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 15977  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 15978  011036  EC09  F0C5         	call	___awmod	;wreg free
 15979  01103A  5001               	movf	btemp^0,w,c
 15980  01103C  0F30               	addlw	48
 15981  01103E  6EDF               	movwf	indf2,c
 15982                           
 15983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 15984  011040  0E0A               	movlw	10
 15985  011042  6EE6               	movwf	postinc1,c
 15986  011044  0E00               	movlw	0
 15987  011046  6EE6               	movwf	postinc1,c
 15988                           
 15989                           ;stkvar	_e @ sp[(-58)+34]
 15990  011048  0EE8               	movlw	-24
 15991  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 15992  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 15993  011056  ECFB  F0C1         	call	___awdiv	;wreg free
 15994                           
 15995                           ;stkvar	_e @ sp[(-56)+34]
 15996  01105A  0EEA               	movlw	-22
 15997  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 15998  011062  0EEB               	movlw	-21
 15999  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16000                           
 16001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 16002                           ;stkvar	_p @ sp[(-56)+40]
 16003  01106A  50E1               	movf	fsr1l,w,c
 16004  01106C  0FF0               	addlw	-16
 16005  01106E  6ED9               	movwf	fsr2l,c
 16006  011070  50E2               	movf	fsr1h,w,c
 16007  011072  6EDA               	movwf	fsr2h,c
 16008  011074  0EFF               	movlw	255
 16009  011076  22DA               	addwfc	fsr2h,f,c
 16010  011078  06DE               	decf	postinc2,f,c
 16011  01107A  0E00               	movlw	0
 16012  01107C  5ADD               	subwfb	postdec2,f,c
 16013                           
 16014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 16015                           ;stkvar	_w @ sp[(-56)+38]
 16016  01107E  50E1               	movf	fsr1l,w,c
 16017  011080  0FEE               	addlw	-18
 16018  011082  6ED9               	movwf	fsr2l,c
 16019  011084  50E2               	movf	fsr1h,w,c
 16020  011086  6EDA               	movwf	fsr2h,c
 16021  011088  0EFF               	movlw	255
 16022  01108A  22DA               	addwfc	fsr2h,f,c
 16023  01108C  06DE               	decf	postinc2,f,c
 16024  01108E  0E00               	movlw	0
 16025  011090  5ADD               	subwfb	postdec2,f,c
 16026  011092                     l11526:
 16027                           
 16028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16029                           ;stkvar	_e @ sp[(-56)+34]
 16030  011092  0EEA               	movlw	-22
 16031  011094  006F FF8C  F001    	movff	plusw1,btemp
 16032  01109A  0EEB               	movlw	-21
 16033  01109C  50E3               	movf	plusw1,w,c
 16034  01109E  1001               	iorwf	btemp^0,w,c
 16035  0110A0  A4D8               	btfss	status,2,c
 16036  0110A2  D7A6               	goto	l11516
 16037                           
 16038                           ;stkvar	_p @ sp[(-56)+40]
 16039  0110A4  0EF1               	movlw	-15
 16040  0110A6  BEE3               	btfsc	plusw1,7,c
 16041  0110A8  D007               	goto	u10830
 16042  0110AA  0EF1               	movlw	-15
 16043  0110AC  50E3               	movf	plusw1,w,c
 16044  0110AE  E1A0               	bnz	l11516
 16045  0110B0  0EF0               	movlw	-16
 16046  0110B2  04E3               	decf	plusw1,w,c
 16047  0110B4  B0D8               	btfsc	status,0,c
 16048  0110B6  D79C               	goto	l11516
 16049  0110B8                     u10830:
 16050                           
 16051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16052                           ;stkvar	_i @ sp[(-56)+36]
 16053  0110B8  50E1               	movf	fsr1l,w,c
 16054  0110BA  0FEC               	addlw	-20
 16055  0110BC  6ED9               	movwf	fsr2l,c
 16056  0110BE  50E2               	movf	fsr1h,w,c
 16057  0110C0  6EDA               	movwf	fsr2h,c
 16058  0110C2  0EFF               	movlw	255
 16059  0110C4  22DA               	addwfc	fsr2h,f,c
 16060  0110C6  06DE               	decf	postinc2,f,c
 16061  0110C8  0E00               	movlw	0
 16062  0110CA  5ADD               	subwfb	postdec2,f,c
 16063                           
 16064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16065                           ;stkvar	_sign @ sp[(-56)+42]
 16066  0110CC  0EF2               	movlw	-14
 16067  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16068  0110D4  0EF3               	movlw	-13
 16069  0110D6  50E3               	movf	plusw1,w,c
 16070  0110D8  1001               	iorwf	btemp^0,w,c
 16071  0110DA  A4D8               	btfss	status,2,c
 16072  0110DC  D002               	goto	l11536
 16073  0110DE  0E2B               	movlw	43
 16074  0110E0  D001               	goto	L13
 16075  0110E2                     l11536:
 16076  0110E2  0E2D               	movlw	45
 16077  0110E4                     L13:
 16078  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16079  0110E6  0E00               	movlw	0
 16080  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16081                           
 16082                           ;stkvar	_efgtoa$5294 @ sp[(-56)+4]
 16083  0110EA  0ECC               	movlw	-52
 16084  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16085  0110F2  0ECD               	movlw	-51
 16086  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16087                           
 16088                           ;stkvar	_efgtoa$5294 @ sp[(-56)+4]
 16089                           ;stkvar	_i @ sp[(-56)+36]
 16090  0110FA  0EEC               	movlw	-20
 16091  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16092  011102  0EED               	movlw	-19
 16093  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16094  01110A  0E94               	movlw	low _dbuf
 16095  01110C  240B               	addwf	(btemp+10)^0,w,c
 16096  01110E  6ED9               	movwf	fsr2l,c
 16097  011110  0E03               	movlw	high _dbuf
 16098  011112  200C               	addwfc	(btemp+11)^0,w,c
 16099  011114  6EDA               	movwf	fsr2h,c
 16100  011116  0ECC               	movlw	-52
 16101  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16102                           
 16103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16104                           ;stkvar	_w @ sp[(-56)+38]
 16105  01111E  50E1               	movf	fsr1l,w,c
 16106  011120  0FEE               	addlw	-18
 16107  011122  6ED9               	movwf	fsr2l,c
 16108  011124  50E2               	movf	fsr1h,w,c
 16109  011126  6EDA               	movwf	fsr2h,c
 16110  011128  0EFF               	movlw	255
 16111  01112A  22DA               	addwfc	fsr2h,f,c
 16112  01112C  06DE               	decf	postinc2,f,c
 16113  01112E  0E00               	movlw	0
 16114  011130  5ADD               	subwfb	postdec2,f,c
 16115                           
 16116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16117                           ;stkvar	_i @ sp[(-56)+36]
 16118  011132  50E1               	movf	fsr1l,w,c
 16119  011134  0FEC               	addlw	-20
 16120  011136  6ED9               	movwf	fsr2l,c
 16121  011138  50E2               	movf	fsr1h,w,c
 16122  01113A  6EDA               	movwf	fsr2h,c
 16123  01113C  0EFF               	movlw	255
 16124  01113E  22DA               	addwfc	fsr2h,f,c
 16125  011140  06DE               	decf	postinc2,f,c
 16126  011142  0E00               	movlw	0
 16127  011144  5ADD               	subwfb	postdec2,f,c
 16128  011146  0EBF               	movlw	191
 16129  011148  6E0B               	movwf	(btemp+10)^0,c
 16130  01114A  0EFF               	movlw	255
 16131  01114C  6E0C               	movwf	(btemp+11)^0,c
 16132                           
 16133                           ;stkvar	_c @ sp[(-56)+-7]
 16134  01114E  0EC1               	movlw	-63
 16135  011150  50E3               	movf	plusw1,w,c
 16136  011152  6E09               	movwf	(btemp+8)^0,c
 16137  011154  6A0A               	clrf	(btemp+9)^0,c
 16138  011156  500B               	movf	(btemp+10)^0,w,c
 16139  011158  2609               	addwf	(btemp+8)^0,f,c
 16140  01115A  500C               	movf	(btemp+11)^0,w,c
 16141  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16142  01115E  500A               	movf	(btemp+9)^0,w,c
 16143  011160  E106               	bnz	u10850
 16144  011162  0E1A               	movlw	26
 16145  011164  5C09               	subwf	(btemp+8)^0,w,c
 16146  011166  B0D8               	btfsc	status,0,c
 16147  011168  D002               	goto	u10850
 16148  01116A  0E01               	movlw	1
 16149  01116C  D001               	goto	u10860
 16150  01116E                     u10850:
 16151  01116E  0E00               	movlw	0
 16152  011170                     u10860:
 16153  011170  6E0B               	movwf	(btemp+10)^0,c
 16154  011172  6A0C               	clrf	(btemp+11)^0,c
 16155                           
 16156                           ;stkvar	_efgtoa$5296 @ sp[(-56)+0]
 16157  011174  0EC8               	movlw	-56
 16158  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16159  01117C  0EC9               	movlw	-55
 16160  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16161                           
 16162                           ;stkvar	_efgtoa$5296 @ sp[(-56)+0]
 16163  011184  0EC8               	movlw	-56
 16164  011186  006F FF8C  F001    	movff	plusw1,btemp
 16165  01118C  0EC9               	movlw	-55
 16166  01118E  50E3               	movf	plusw1,w,c
 16167  011190  1001               	iorwf	btemp^0,w,c
 16168  011192  A4D8               	btfss	status,2,c
 16169  011194  D002               	goto	l11552
 16170  011196  0E65               	movlw	101
 16171  011198  D001               	goto	L14
 16172  01119A                     l11552:
 16173  01119A  0E45               	movlw	69
 16174  01119C                     L14:
 16175  01119C  6E0B               	movwf	(btemp+10)^0,c
 16176  01119E  0E00               	movlw	0
 16177  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16178                           
 16179                           ;stkvar	_efgtoa$5295 @ sp[(-56)+2]
 16180  0111A2  0ECA               	movlw	-54
 16181  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16182  0111AA  0ECB               	movlw	-53
 16183  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16184                           
 16185                           ;stkvar	_efgtoa$5295 @ sp[(-56)+2]
 16186                           ;stkvar	_i @ sp[(-56)+36]
 16187  0111B2  0EEC               	movlw	-20
 16188  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16189  0111BA  0EED               	movlw	-19
 16190  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16191  0111C2  0E94               	movlw	low _dbuf
 16192  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16193  0111C6  6ED9               	movwf	fsr2l,c
 16194  0111C8  0E03               	movlw	high _dbuf
 16195  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16196  0111CC  6EDA               	movwf	fsr2h,c
 16197  0111CE  0ECA               	movlw	-54
 16198  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16199                           
 16200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16201                           ;stkvar	_w @ sp[(-56)+38]
 16202  0111D6  50E1               	movf	fsr1l,w,c
 16203  0111D8  0FEE               	addlw	-18
 16204  0111DA  6ED9               	movwf	fsr2l,c
 16205  0111DC  50E2               	movf	fsr1h,w,c
 16206  0111DE  6EDA               	movwf	fsr2h,c
 16207  0111E0  0EFF               	movlw	255
 16208  0111E2  22DA               	addwfc	fsr2h,f,c
 16209  0111E4  06DE               	decf	postinc2,f,c
 16210  0111E6  0E00               	movlw	0
 16211  0111E8  5ADD               	subwfb	postdec2,f,c
 16212                           
 16213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16214                           ;stkvar	_i @ sp[(-56)+36]
 16215  0111EA  0EEC               	movlw	-20
 16216  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16217  0111F2  0EED               	movlw	-19
 16218  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16219  0111FA  0E94               	movlw	low _dbuf
 16220  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16221  0111FE  6E09               	movwf	(btemp+8)^0,c
 16222  011200  0E03               	movlw	high _dbuf
 16223  011202  200C               	addwfc	(btemp+11)^0,w,c
 16224  011204  6E0A               	movwf	(btemp+9)^0,c
 16225  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16226  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16227                           
 16228                           ;stkvar	_n @ sp[(-58)+32]
 16229  011212  0E94               	movlw	low _dbuf
 16230  011214  6E0B               	movwf	(btemp+10)^0,c
 16231  011216  0E03               	movlw	high _dbuf
 16232  011218  6E0C               	movwf	(btemp+11)^0,c
 16233  01121A  0EE6               	movlw	-26
 16234  01121C  50E3               	movf	plusw1,w,c
 16235  01121E  260B               	addwf	(btemp+10)^0,f,c
 16236  011220  0EE7               	movlw	-25
 16237  011222  50E3               	movf	plusw1,w,c
 16238  011224  220C               	addwfc	(btemp+11)^0,f,c
 16239  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16240  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16241  011232  EC1D  F0C9         	call	_strcpy	;wreg free
 16242  011236  EF16  F081         	goto	l11304
 16243  01123A                     l2120:
 16244                           
 16245                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 16246  01123A  0EC1               	movlw	193
 16247  01123C  26E1               	addwf	fsr1l,f,c
 16248  01123E  0EFF               	movlw	255
 16249  011240  22E2               	addwfc	fsr1h,f,c
 16250  011242  0012               	return		;funcret
 16251  011244                     __end_of_efgtoa:
 16252                           	opt callstack 0
 16253                           
 16254 ;; *************** function _tolower *****************
 16255 ;; Defined at:
 16256 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 16257 ;; Parameters:    Size  Location     Type
 16258 ;;  c               2  [STACK] int 
 16259 ;; Auto vars:     Size  Location     Type
 16260 ;;		None
 16261 ;; Return value:  Size  Location     Type
 16262 ;;                  2  [STACK] int 
 16263 ;; Registers used:
 16264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16265 ;; Tracked objects:
 16266 ;;		On entry : 0/0
 16267 ;;		On exit  : 0/0
 16268 ;;		Unchanged: 0/0
 16269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16274 ;;Total ram usage:        0 bytes
 16275 ;; Hardware stack levels used:    1
 16276 ;; Hardware stack levels required when called:   16
 16277 ;; This function calls:
 16278 ;;		_isupper
 16279 ;; This function is called by:
 16280 ;;		_efgtoa
 16281 ;;		_vfpfcnvrt
 16282 ;; This function uses a reentrant model
 16283 ;;
 16284                           
 16285                           	psect	text55
 16286  019C7C                     __ptext55:
 16287                           	opt callstack 0
 16288  019C7C                     _tolower:
 16289                           	opt callstack 0
 16290                           
 16291                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16292  019C7C  52E6               	movf	postinc1,f,c
 16293  019C7E  52E6               	movf	postinc1,f,c
 16294                           
 16295                           ;stkvar	_c @ sp[(-2)+-2]
 16296                           
 16297                           ;incstack = 0
 16298 ;; hardware stack exceeded
 16299  019C80  0EFC               	movlw	-4
 16300  019C82  50E3               	movf	plusw1,w,c
 16301  019C84  0FBF               	addlw	191
 16302  019C86  6E0B               	movwf	(btemp+10)^0,c
 16303  019C88  0EFD               	movlw	-3
 16304  019C8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16305  019C90  0EFF               	movlw	255
 16306  019C92  220C               	addwfc	(btemp+11)^0,f,c
 16307  019C94  500C               	movf	(btemp+11)^0,w,c
 16308  019C96  E106               	bnz	u5690
 16309  019C98  0E1A               	movlw	26
 16310  019C9A  5C0B               	subwf	(btemp+10)^0,w,c
 16311  019C9C  B0D8               	btfsc	status,0,c
 16312  019C9E  D002               	goto	u5690
 16313  019CA0  0E01               	movlw	1
 16314  019CA2  D001               	goto	u5700
 16315  019CA4                     u5690:
 16316  019CA4  0E00               	movlw	0
 16317  019CA6                     u5700:
 16318  019CA6  6E0B               	movwf	(btemp+10)^0,c
 16319  019CA8  6A0C               	clrf	(btemp+11)^0,c
 16320                           
 16321                           ;stkvar	_tolower$6115 @ sp[(-2)+0]
 16322  019CAA  0EFE               	movlw	-2
 16323  019CAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16324  019CB2  0EFF               	movlw	-1
 16325  019CB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16326                           
 16327                           ;stkvar	_tolower$6115 @ sp[(-2)+0]
 16328  019CBA  0EFE               	movlw	-2
 16329  019CBC  006F FF8C  F001    	movff	plusw1,btemp
 16330  019CC2  0EFF               	movlw	-1
 16331  019CC4  50E3               	movf	plusw1,w,c
 16332  019CC6  1001               	iorwf	btemp^0,w,c
 16333  019CC8  B4D8               	btfsc	status,2,c
 16334  019CCA  D00D               	goto	l7594
 16335                           
 16336                           ;stkvar	_c @ sp[(-2)+-2]
 16337  019CCC  0EFC               	movlw	-4
 16338  019CCE  006F FF8C  F001    	movff	plusw1,btemp
 16339  019CD4  0EFD               	movlw	-3
 16340  019CD6  006F FF8C  F002    	movff	plusw1,btemp+1
 16341  019CDC  0E20               	movlw	32
 16342  019CDE  1201               	iorwf	btemp^0,f,c
 16343  019CE0  0E00               	movlw	0
 16344  019CE2  1202               	iorwf	(btemp+1)^0,f,c
 16345  019CE4  D008               	goto	l3392
 16346  019CE6                     l7594:
 16347                           
 16348                           ;stkvar	_c @ sp[(-2)+-2]
 16349  019CE6  0EFC               	movlw	-4
 16350  019CE8  006F FF8C  F001    	movff	plusw1,btemp
 16351  019CEE  0EFD               	movlw	-3
 16352  019CF0  006F FF8C  F002    	movff	plusw1,btemp+1
 16353  019CF6                     l3392:
 16354                           
 16355                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16356  019CF6  52E5               	movf	postdec1,f,c
 16357  019CF8  52E5               	movf	postdec1,f,c
 16358  019CFA  52E5               	movf	postdec1,f,c
 16359  019CFC  52E5               	movf	postdec1,f,c
 16360  019CFE  0012               	return		;funcret
 16361  019D00                     __end_of_tolower:
 16362                           	opt callstack 0
 16363                           
 16364 ;; *************** function _isupper *****************
 16365 ;; Defined at:
 16366 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;  c               2  [STACK] int 
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;		None
 16371 ;; Return value:  Size  Location     Type
 16372 ;;                  2  [STACK] int 
 16373 ;; Registers used:
 16374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16375 ;; Tracked objects:
 16376 ;;		On entry : 0/0
 16377 ;;		On exit  : 0/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16384 ;;Total ram usage:        0 bytes
 16385 ;; Hardware stack levels used:    1
 16386 ;; Hardware stack levels required when called:   15
 16387 ;; This function calls:
 16388 ;;		Nothing
 16389 ;; This function is called by:
 16390 ;;		_efgtoa
 16391 ;;		_xtoa
 16392 ;;		_vfpfcnvrt
 16393 ;;		_tolower
 16394 ;; This function uses a reentrant model
 16395 ;;
 16396                           
 16397                           	psect	text56
 16398  01A8C2                     __ptext56:
 16399                           	opt callstack 0
 16400  01A8C2                     _isupper:
 16401                           	opt callstack 0
 16402                           
 16403                           ;stkvar	_c @ sp[(0)+-2]
 16404                           
 16405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16406                           ;incstack = 0
 16407 ;; hardware stack exceeded
 16408  01A8C2  0EFE               	movlw	-2
 16409  01A8C4  50E3               	movf	plusw1,w,c
 16410  01A8C6  0FBF               	addlw	191
 16411  01A8C8  6E0B               	movwf	(btemp+10)^0,c
 16412  01A8CA  0EFF               	movlw	-1
 16413  01A8CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16414  01A8D2  0EFF               	movlw	255
 16415  01A8D4  220C               	addwfc	(btemp+11)^0,f,c
 16416  01A8D6  500C               	movf	(btemp+11)^0,w,c
 16417  01A8D8  E106               	bnz	u5090
 16418  01A8DA  0E1A               	movlw	26
 16419  01A8DC  5C0B               	subwf	(btemp+10)^0,w,c
 16420  01A8DE  B0D8               	btfsc	status,0,c
 16421  01A8E0  D002               	goto	u5090
 16422  01A8E2  0E01               	movlw	1
 16423  01A8E4  D001               	goto	u5100
 16424  01A8E6                     u5090:
 16425  01A8E6  0E00               	movlw	0
 16426  01A8E8                     u5100:
 16427  01A8E8  6E01               	movwf	btemp^0,c
 16428  01A8EA  6A02               	clrf	(btemp+1)^0,c
 16429                           
 16430                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16431  01A8EC  52E5               	movf	postdec1,f,c
 16432  01A8EE  52E5               	movf	postdec1,f,c
 16433  01A8F0  0012               	return		;funcret
 16434  01A8F2                     __end_of_isupper:
 16435                           	opt callstack 0
 16436                           
 16437 ;; *************** function _strcpy *****************
 16438 ;; Defined at:
 16439 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 16440 ;; Parameters:    Size  Location     Type
 16441 ;;  dest            2  [STACK] PTR unsigned char 
 16442 ;;		 -> dbuf(80), 
 16443 ;;  src             2  [STACK] PTR const unsigned char 
 16444 ;;		 -> STR_61(4), STR_60(4), STR_57(4), STR_56(4), 
 16445 ;;		 -> dbuf(80), 
 16446 ;; Auto vars:     Size  Location     Type
 16447 ;;  d               2  [STACK] PTR unsigned char 
 16448 ;;		 -> dbuf(80), 
 16449 ;;  s               2  [STACK] PTR const unsigned char 
 16450 ;;		 -> STR_61(4), STR_60(4), STR_57(4), STR_56(4), 
 16451 ;;		 -> dbuf(80), 
 16452 ;; Return value:  Size  Location     Type
 16453 ;;                  2  [STACK] PTR unsigned char 
 16454 ;; Registers used:
 16455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 16456 ;; Tracked objects:
 16457 ;;		On entry : 0/0
 16458 ;;		On exit  : 0/0
 16459 ;;		Unchanged: 0/0
 16460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16465 ;;Total ram usage:        0 bytes
 16466 ;; Hardware stack levels used:    1
 16467 ;; Hardware stack levels required when called:   15
 16468 ;; This function calls:
 16469 ;;		Nothing
 16470 ;; This function is called by:
 16471 ;;		_efgtoa
 16472 ;; This function uses a reentrant model
 16473 ;;
 16474                           
 16475                           	psect	text57
 16476  01923A                     __ptext57:
 16477                           	opt callstack 0
 16478  01923A                     _strcpy:
 16479                           	opt callstack 0
 16480                           
 16481                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16482  01923A  52E6               	movf	postinc1,f,c
 16483  01923C  52E6               	movf	postinc1,f,c
 16484  01923E  52E6               	movf	postinc1,f,c
 16485  019240  52E6               	movf	postinc1,f,c
 16486                           
 16487                           ;stkvar	_src @ sp[(-4)+-4]
 16488                           
 16489                           ;incstack = 0
 16490 ;; hardware stack exceeded
 16491  019242  0EF8               	movlw	-8
 16492  019244  006F FF8C  F00B    	movff	plusw1,btemp+10
 16493  01924A  0EF9               	movlw	-7
 16494  01924C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16495                           
 16496                           ;stkvar	_s @ sp[(-4)+2]
 16497  019252  0EFF               	movlw	-1
 16498  019254  0060  F033  FFE3   	movff	btemp+11,plusw1
 16499  01925A  0EFE               	movlw	-2
 16500  01925C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16501                           
 16502                           ;stkvar	_dest @ sp[(-4)+-2]
 16503  019262  0EFA               	movlw	-6
 16504  019264  006F FF8C  F00B    	movff	plusw1,btemp+10
 16505  01926A  0EFB               	movlw	-5
 16506  01926C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16507                           
 16508                           ;stkvar	_d @ sp[(-4)+0]
 16509  019272  0EFD               	movlw	-3
 16510  019274  0060  F033  FFE3   	movff	btemp+11,plusw1
 16511  01927A  0EFC               	movlw	-4
 16512  01927C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16513  019282                     l11136:
 16514                           
 16515                           ;stkvar	_s @ sp[(-4)+2]
 16516  019282  50E1               	movf	fsr1l,w,c
 16517  019284  0FFE               	addlw	-2
 16518  019286  6ED9               	movwf	fsr2l,c
 16519  019288  50E2               	movf	fsr1h,w,c
 16520  01928A  6EDA               	movwf	fsr2h,c
 16521  01928C  0EFF               	movlw	255
 16522  01928E  22DA               	addwfc	fsr2h,f,c
 16523  019290  006F FF7C  F00B    	movff	indf2,btemp+10
 16524  019296  0E01               	movlw	1
 16525  019298  26DE               	addwf	postinc2,f,c
 16526  01929A  006F FF7C  F00C    	movff	indf2,btemp+11
 16527  0192A0  0E00               	movlw	0
 16528  0192A2  22DD               	addwfc	postdec2,f,c
 16529  0192A4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16530  0192AA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16531  0192B0  0E00               	movlw	low (__mediumconst shr (0+16))
 16532  0192B2  6EF8               	movwf	tblptru,c
 16533                           
 16534                           ;stkvar	_d @ sp[(-4)+0]
 16535  0192B4  50E1               	movf	fsr1l,w,c
 16536  0192B6  0FFC               	addlw	-4
 16537  0192B8  6ED9               	movwf	fsr2l,c
 16538  0192BA  50E2               	movf	fsr1h,w,c
 16539  0192BC  6EDA               	movwf	fsr2h,c
 16540  0192BE  0EFF               	movlw	255
 16541  0192C0  22DA               	addwfc	fsr2h,f,c
 16542  0192C2  006F FF7C  F00B    	movff	indf2,btemp+10
 16543  0192C8  0E01               	movlw	1
 16544  0192CA  26DE               	addwf	postinc2,f,c
 16545  0192CC  006F FF7C  F00C    	movff	indf2,btemp+11
 16546  0192D2  0E00               	movlw	0
 16547  0192D4  22DD               	addwfc	postdec2,f,c
 16548  0192D6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16549  0192DC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16550  0192E2  0E1F               	movlw	(high __ramtop+-1)
 16551  0192E4  64F7               	cpfsgt	tblptrh,c
 16552  0192E6  D003               	bra	u10117
 16553  0192E8  0008               	tblrd		*
 16554  0192EA  50F5               	movf	tablat,w,c
 16555  0192EC  D007               	bra	u10110
 16556  0192EE                     u10117:
 16557  0192EE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16558  0192F4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16559  0192FA  50EF               	movf	indf0,w,c
 16560  0192FC                     u10110:
 16561  0192FC  6EDF               	movwf	indf2,c
 16562  0192FE  50DF               	movf	indf2,w,c
 16563  019300  A4D8               	btfss	status,2,c
 16564  019302  D7BF               	goto	l11136
 16565                           
 16566                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 16567  019304  0EF8               	movlw	248
 16568  019306  26E1               	addwf	fsr1l,f,c
 16569  019308  0EFF               	movlw	255
 16570  01930A  22E2               	addwfc	fsr1h,f,c
 16571  01930C  0012               	return		;funcret
 16572  01930E                     __end_of_strcpy:
 16573                           	opt callstack 0
 16574                           
 16575 ;; *************** function _floorf *****************
 16576 ;; Defined at:
 16577 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 16578 ;; Parameters:    Size  Location     Type
 16579 ;;  x               4  [STACK] float 
 16580 ;; Auto vars:     Size  Location     Type
 16581 ;;  u               4  [STACK] struct .
 16582 ;;  m               4  [STACK] unsigned long 
 16583 ;;  e               2  [STACK] int 
 16584 ;; Return value:  Size  Location     Type
 16585 ;;                  4  [STACK] float 
 16586 ;; Registers used:
 16587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 16588 ;; Tracked objects:
 16589 ;;		On entry : 0/0
 16590 ;;		On exit  : 0/0
 16591 ;;		Unchanged: 0/0
 16592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16597 ;;Total ram usage:        0 bytes
 16598 ;; Hardware stack levels used:    1
 16599 ;; Hardware stack levels required when called:   15
 16600 ;; This function calls:
 16601 ;;		Nothing
 16602 ;; This function is called by:
 16603 ;;		_efgtoa
 16604 ;; This function uses a reentrant model
 16605 ;;
 16606                           
 16607                           	psect	text58
 16608  015A64                     __ptext58:
 16609                           	opt callstack 0
 16610  015A64                     _floorf:
 16611                           	opt callstack 0
 16612                           
 16613                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16614  015A64  0E0A               	movlw	10
 16615  015A66  26E1               	addwf	fsr1l,f,c
 16616  015A68  0E00               	movlw	0
 16617  015A6A  22E2               	addwfc	fsr1h,f,c
 16618                           
 16619                           ;incstack = 0
 16620 ;; hardware stack exceeded
 16621  015A6C  0060  F1D0  F009   	movff	floorf@F524,btemp+8
 16622  015A72  0060  F1D4  F00A   	movff	floorf@F524+1,btemp+9
 16623  015A78  0060  F1D8  F00B   	movff	floorf@F524+2,btemp+10
 16624  015A7E  0060  F1DC  F00C   	movff	floorf@F524+3,btemp+11
 16625                           
 16626                           ;stkvar	_u @ sp[(-10)+0]
 16627  015A84  0EF6               	movlw	-10
 16628  015A86  0060  F027  FFE3   	movff	btemp+8,plusw1
 16629  015A8C  0EF7               	movlw	-9
 16630  015A8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16631  015A94  0EF8               	movlw	-8
 16632  015A96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16633  015A9C  0EF9               	movlw	-7
 16634  015A9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16635                           
 16636                           ;stkvar	_x @ sp[(-10)+-4]
 16637  015AA4  0EF2               	movlw	-14
 16638  015AA6  006F FF8C  F009    	movff	plusw1,btemp+8
 16639  015AAC  0EF3               	movlw	-13
 16640  015AAE  006F FF8C  F00A    	movff	plusw1,btemp+9
 16641  015AB4  0EF4               	movlw	-12
 16642  015AB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 16643  015ABC  0EF5               	movlw	-11
 16644  015ABE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16645                           
 16646                           ;stkvar	_u @ sp[(-10)+0]
 16647  015AC4  0EF6               	movlw	-10
 16648  015AC6  0060  F027  FFE3   	movff	btemp+8,plusw1
 16649  015ACC  0EF7               	movlw	-9
 16650  015ACE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16651  015AD4  0EF8               	movlw	-8
 16652  015AD6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16653  015ADC  0EF9               	movlw	-7
 16654  015ADE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16655  015AE4  0E81               	movlw	129
 16656  015AE6  6E0B               	movwf	(btemp+10)^0,c
 16657  015AE8  0EFF               	movlw	255
 16658  015AEA  6E0C               	movwf	(btemp+11)^0,c
 16659                           
 16660                           ;stkvar	_u @ sp[(-10)+0]
 16661  015AEC  0EF6               	movlw	-10
 16662  015AEE  006F FF8C  F005    	movff	plusw1,btemp+4
 16663  015AF4  0EF7               	movlw	-9
 16664  015AF6  006F FF8C  F006    	movff	plusw1,btemp+5
 16665  015AFC  0EF8               	movlw	-8
 16666  015AFE  006F FF8C  F007    	movff	plusw1,btemp+6
 16667  015B04  0EF9               	movlw	-7
 16668  015B06  006F FF8C  F008    	movff	plusw1,btemp+7
 16669  015B0C  0E18               	movlw	24
 16670  015B0E  D005               	goto	u5720
 16671  015B10                     u5725:
 16672  015B10  90D8               	bcf	status,0,c
 16673  015B12  3208               	rrcf	(btemp+7)^0,f,c
 16674  015B14  3207               	rrcf	(btemp+6)^0,f,c
 16675  015B16  3206               	rrcf	(btemp+5)^0,f,c
 16676  015B18  3205               	rrcf	(btemp+4)^0,f,c
 16677  015B1A                     u5720:
 16678  015B1A  2EE8               	decfsz	wreg,f,c
 16679  015B1C  D7F9               	goto	u5725
 16680  015B1E  0060  F014  F009   	movff	btemp+4,btemp+8
 16681  015B24  0060  F018  F00A   	movff	btemp+5,btemp+9
 16682  015B2A  0EFF               	movlw	255
 16683  015B2C  1609               	andwf	(btemp+8)^0,f,c
 16684  015B2E  0E00               	movlw	0
 16685  015B30  160A               	andwf	(btemp+9)^0,f,c
 16686  015B32  500B               	movf	(btemp+10)^0,w,c
 16687  015B34  2609               	addwf	(btemp+8)^0,f,c
 16688  015B36  500C               	movf	(btemp+11)^0,w,c
 16689  015B38  220A               	addwfc	(btemp+9)^0,f,c
 16690                           
 16691                           ;stkvar	_e @ sp[(-10)+8]
 16692  015B3A  0EFE               	movlw	-2
 16693  015B3C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16694  015B42  0EFF               	movlw	-1
 16695  015B44  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16696                           
 16697                           ;stkvar	_e @ sp[(-10)+8]
 16698  015B4A  0EFF               	movlw	-1
 16699  015B4C  BEE3               	btfsc	plusw1,7,c
 16700  015B4E  D019               	goto	l7608
 16701  015B50  0EFF               	movlw	-1
 16702  015B52  50E3               	movf	plusw1,w,c
 16703  015B54  E108               	bnz	u5730
 16704  015B56  0EFE               	movlw	-2
 16705  015B58  006F FF8C  F001    	movff	plusw1,btemp
 16706  015B5E  0E17               	movlw	23
 16707  015B60  5E01               	subwf	btemp^0,f,c
 16708  015B62  A0D8               	btfss	status,0,c
 16709  015B64  D00E               	goto	l7608
 16710  015B66                     u5730:
 16711                           
 16712                           ;stkvar	_x @ sp[(-10)+-4]
 16713  015B66  0EF2               	movlw	-14
 16714  015B68  006F FF8C  F001    	movff	plusw1,btemp
 16715  015B6E  0EF3               	movlw	-13
 16716  015B70  006F FF8C  F002    	movff	plusw1,btemp+1
 16717  015B76  0EF4               	movlw	-12
 16718  015B78  006F FF8C  F003    	movff	plusw1,btemp+2
 16719  015B7E  0EF5               	movlw	-11
 16720  015B80  D11F               	goto	L15
 16721  015B82                     l7608:
 16722                           
 16723                           ;stkvar	_e @ sp[(-10)+8]
 16724  015B82  0EFF               	movlw	-1
 16725  015B84  BEE3               	btfsc	plusw1,7,c
 16726  015B86  D0B4               	goto	l7624
 16727                           
 16728                           ;stkvar	_e @ sp[(-10)+8]
 16729  015B88  0EFE               	movlw	-2
 16730  015B8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16731  015B90  0EFF               	movlw	255
 16732  015B92  6E05               	movwf	(btemp+4)^0,c
 16733  015B94  0EFF               	movlw	255
 16734  015B96  6E06               	movwf	(btemp+5)^0,c
 16735  015B98  0E7F               	movlw	127
 16736  015B9A  6E07               	movwf	(btemp+6)^0,c
 16737  015B9C  0E00               	movlw	0
 16738  015B9E  6E08               	movwf	(btemp+7)^0,c
 16739  015BA0                     u5755:
 16740  015BA0  660C               	tstfsz	(btemp+11)^0,c
 16741  015BA2  D001               	goto	u5756
 16742  015BA4  D007               	goto	u5757
 16743  015BA6                     u5756:
 16744  015BA6  3408               	rlcf	(btemp+7)^0,w,c
 16745  015BA8  3208               	rrcf	(btemp+7)^0,f,c
 16746  015BAA  3207               	rrcf	(btemp+6)^0,f,c
 16747  015BAC  3206               	rrcf	(btemp+5)^0,f,c
 16748  015BAE  3205               	rrcf	(btemp+4)^0,f,c
 16749  015BB0  2E0C               	decfsz	(btemp+11)^0,f,c
 16750  015BB2  D7F6               	goto	u5755
 16751  015BB4                     u5757:
 16752                           
 16753                           ;stkvar	_m @ sp[(-10)+4]
 16754  015BB4  0EFA               	movlw	-6
 16755  015BB6  0060  F017  FFE3   	movff	btemp+4,plusw1
 16756  015BBC  0EFB               	movlw	-5
 16757  015BBE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 16758  015BC4  0EFC               	movlw	-4
 16759  015BC6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 16760  015BCC  0EFD               	movlw	-3
 16761  015BCE  0060  F023  FFE3   	movff	btemp+7,plusw1
 16762                           
 16763                           ;stkvar	_m @ sp[(-10)+4]
 16764                           ;stkvar	_u @ sp[(-10)+0]
 16765  015BD4  0EF6               	movlw	-10
 16766  015BD6  006F FF8C  F009    	movff	plusw1,btemp+8
 16767  015BDC  0EF7               	movlw	-9
 16768  015BDE  006F FF8C  F00A    	movff	plusw1,btemp+9
 16769  015BE4  0EF8               	movlw	-8
 16770  015BE6  006F FF8C  F00B    	movff	plusw1,btemp+10
 16771  015BEC  0EF9               	movlw	-7
 16772  015BEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16773  015BF4  0EFA               	movlw	-6
 16774  015BF6  50E3               	movf	plusw1,w,c
 16775  015BF8  1609               	andwf	(btemp+8)^0,f,c
 16776  015BFA  0EFB               	movlw	-5
 16777  015BFC  50E3               	movf	plusw1,w,c
 16778  015BFE  160A               	andwf	(btemp+9)^0,f,c
 16779  015C00  0EFC               	movlw	-4
 16780  015C02  50E3               	movf	plusw1,w,c
 16781  015C04  160B               	andwf	(btemp+10)^0,f,c
 16782  015C06  0EFD               	movlw	-3
 16783  015C08  50E3               	movf	plusw1,w,c
 16784  015C0A  160C               	andwf	(btemp+11)^0,f,c
 16785  015C0C  5009               	movf	(btemp+8)^0,w,c
 16786  015C0E  100A               	iorwf	(btemp+9)^0,w,c
 16787  015C10  100B               	iorwf	(btemp+10)^0,w,c
 16788  015C12  100C               	iorwf	(btemp+11)^0,w,c
 16789  015C14  B4D8               	btfsc	status,2,c
 16790  015C16  D7A7               	goto	u5730
 16791                           
 16792                           ;stkvar	_u @ sp[(-10)+0]
 16793  015C18  0EF6               	movlw	-10
 16794  015C1A  006F FF8C  F009    	movff	plusw1,btemp+8
 16795  015C20  0EF7               	movlw	-9
 16796  015C22  006F FF8C  F00A    	movff	plusw1,btemp+9
 16797  015C28  0EF8               	movlw	-8
 16798  015C2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16799  015C30  0EF9               	movlw	-7
 16800  015C32  006F FF8C  F00C    	movff	plusw1,btemp+11
 16801  015C38  0E20               	movlw	32
 16802  015C3A  D005               	goto	u5770
 16803  015C3C                     u5775:
 16804  015C3C  90D8               	bcf	status,0,c
 16805  015C3E  320C               	rrcf	(btemp+11)^0,f,c
 16806  015C40  320B               	rrcf	(btemp+10)^0,f,c
 16807  015C42  320A               	rrcf	(btemp+9)^0,f,c
 16808  015C44  3209               	rrcf	(btemp+8)^0,f,c
 16809  015C46                     u5770:
 16810  015C46  2EE8               	decfsz	wreg,f,c
 16811  015C48  D7F9               	goto	u5775
 16812  015C4A  5009               	movf	(btemp+8)^0,w,c
 16813  015C4C  B4D8               	btfsc	status,2,c
 16814  015C4E  D028               	goto	l7622
 16815                           
 16816                           ;stkvar	_m @ sp[(-10)+4]
 16817                           ;stkvar	_u @ sp[(-10)+0]
 16818  015C50  0EF6               	movlw	-10
 16819  015C52  50E3               	movf	plusw1,w,c
 16820  015C54  6E01               	movwf	btemp^0,c
 16821  015C56  0EFA               	movlw	-6
 16822  015C58  50E3               	movf	plusw1,w,c
 16823  015C5A  2601               	addwf	btemp^0,f,c
 16824  015C5C  0EF6               	movlw	-10
 16825  015C5E  0060  F007  FFE3   	movff	btemp,plusw1
 16826  015C64  0EF7               	movlw	-9
 16827  015C66  50E3               	movf	plusw1,w,c
 16828  015C68  6E01               	movwf	btemp^0,c
 16829  015C6A  0EFB               	movlw	-5
 16830  015C6C  50E3               	movf	plusw1,w,c
 16831  015C6E  2201               	addwfc	btemp^0,f,c
 16832  015C70  0EF7               	movlw	-9
 16833  015C72  0060  F007  FFE3   	movff	btemp,plusw1
 16834  015C78  0EF8               	movlw	-8
 16835  015C7A  50E3               	movf	plusw1,w,c
 16836  015C7C  6E01               	movwf	btemp^0,c
 16837  015C7E  0EFC               	movlw	-4
 16838  015C80  50E3               	movf	plusw1,w,c
 16839  015C82  2201               	addwfc	btemp^0,f,c
 16840  015C84  0EF8               	movlw	-8
 16841  015C86  0060  F007  FFE3   	movff	btemp,plusw1
 16842  015C8C  0EF9               	movlw	-7
 16843  015C8E  50E3               	movf	plusw1,w,c
 16844  015C90  6E01               	movwf	btemp^0,c
 16845  015C92  0EFD               	movlw	-3
 16846  015C94  50E3               	movf	plusw1,w,c
 16847  015C96  2201               	addwfc	btemp^0,f,c
 16848  015C98  0EF9               	movlw	-7
 16849  015C9A  0060  F007  FFE3   	movff	btemp,plusw1
 16850  015CA0                     l7622:
 16851                           
 16852                           ;stkvar	_m @ sp[(-10)+4]
 16853  015CA0  0EFA               	movlw	-6
 16854  015CA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16855  015CA8  0EFB               	movlw	-5
 16856  015CAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16857  015CB0  0EFC               	movlw	-4
 16858  015CB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16859  015CB8  0EFD               	movlw	-3
 16860  015CBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16861  015CC0  1C09               	comf	(btemp+8)^0,w,c
 16862  015CC2  6E05               	movwf	(btemp+4)^0,c
 16863  015CC4  1C0A               	comf	(btemp+9)^0,w,c
 16864  015CC6  6E06               	movwf	(btemp+5)^0,c
 16865  015CC8  1C0B               	comf	(btemp+10)^0,w,c
 16866  015CCA  6E07               	movwf	(btemp+6)^0,c
 16867  015CCC  1C0C               	comf	(btemp+11)^0,w,c
 16868  015CCE  6E08               	movwf	(btemp+7)^0,c
 16869                           
 16870                           ;stkvar	_u @ sp[(-10)+0]
 16871  015CD0  50E1               	movf	fsr1l,w,c
 16872  015CD2  0FF6               	addlw	-10
 16873  015CD4  6ED9               	movwf	fsr2l,c
 16874  015CD6  50E2               	movf	fsr1h,w,c
 16875  015CD8  6EDA               	movwf	fsr2h,c
 16876  015CDA  0EFF               	movlw	255
 16877  015CDC  22DA               	addwfc	fsr2h,f,c
 16878  015CDE  5005               	movf	(btemp+4)^0,w,c
 16879  015CE0  16DE               	andwf	postinc2,f,c
 16880  015CE2  5006               	movf	(btemp+5)^0,w,c
 16881  015CE4  16DE               	andwf	postinc2,f,c
 16882  015CE6  5007               	movf	(btemp+6)^0,w,c
 16883  015CE8  16DE               	andwf	postinc2,f,c
 16884  015CEA  5008               	movf	(btemp+7)^0,w,c
 16885  015CEC  16DE               	andwf	postinc2,f,c
 16886  015CEE  D05B               	goto	l7632
 16887  015CF0                     l7624:
 16888                           
 16889                           ;stkvar	_u @ sp[(-10)+0]
 16890  015CF0  0EF6               	movlw	-10
 16891  015CF2  006F FF8C  F009    	movff	plusw1,btemp+8
 16892  015CF8  0EF7               	movlw	-9
 16893  015CFA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16894  015D00  0EF8               	movlw	-8
 16895  015D02  006F FF8C  F00B    	movff	plusw1,btemp+10
 16896  015D08  0EF9               	movlw	-7
 16897  015D0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16898  015D10  0E20               	movlw	32
 16899  015D12  D005               	goto	u5790
 16900  015D14                     u5795:
 16901  015D14  90D8               	bcf	status,0,c
 16902  015D16  320C               	rrcf	(btemp+11)^0,f,c
 16903  015D18  320B               	rrcf	(btemp+10)^0,f,c
 16904  015D1A  320A               	rrcf	(btemp+9)^0,f,c
 16905  015D1C  3209               	rrcf	(btemp+8)^0,f,c
 16906  015D1E                     u5790:
 16907  015D1E  2EE8               	decfsz	wreg,f,c
 16908  015D20  D7F9               	goto	u5795
 16909  015D22  6609               	tstfsz	(btemp+8)^0,c
 16910  015D24  D009               	goto	l7628
 16911                           
 16912                           ;stkvar	_u @ sp[(-10)+0]
 16913  015D26  0EF6               	movlw	-10
 16914  015D28  6AE3               	clrf	plusw1,c
 16915  015D2A  0EF7               	movlw	-9
 16916  015D2C  6AE3               	clrf	plusw1,c
 16917  015D2E  0EF8               	movlw	-8
 16918  015D30  6AE3               	clrf	plusw1,c
 16919  015D32  0EF9               	movlw	-7
 16920  015D34  6AE3               	clrf	plusw1,c
 16921  015D36  D037               	goto	l7632
 16922  015D38                     l7628:
 16923                           
 16924                           ;stkvar	_u @ sp[(-10)+0]
 16925  015D38  0EF6               	movlw	-10
 16926  015D3A  006F FF8C  F009    	movff	plusw1,btemp+8
 16927  015D40  0EF7               	movlw	-9
 16928  015D42  006F FF8C  F00A    	movff	plusw1,btemp+9
 16929  015D48  0EF8               	movlw	-8
 16930  015D4A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16931  015D50  0EF9               	movlw	-7
 16932  015D52  006F FF8C  F00C    	movff	plusw1,btemp+11
 16933  015D58  90D8               	bcf	status,0,c
 16934  015D5A  3409               	rlcf	(btemp+8)^0,w,c
 16935  015D5C  6E05               	movwf	(btemp+4)^0,c
 16936  015D5E  340A               	rlcf	(btemp+9)^0,w,c
 16937  015D60  6E06               	movwf	(btemp+5)^0,c
 16938  015D62  340B               	rlcf	(btemp+10)^0,w,c
 16939  015D64  6E07               	movwf	(btemp+6)^0,c
 16940  015D66  340C               	rlcf	(btemp+11)^0,w,c
 16941  015D68  6E08               	movwf	(btemp+7)^0,c
 16942  015D6A  5005               	movf	(btemp+4)^0,w,c
 16943  015D6C  1006               	iorwf	(btemp+5)^0,w,c
 16944  015D6E  1007               	iorwf	(btemp+6)^0,w,c
 16945  015D70  1008               	iorwf	(btemp+7)^0,w,c
 16946  015D72  B4D8               	btfsc	status,2,c
 16947  015D74  D018               	goto	l7632
 16948  015D76  0E00               	movlw	0
 16949  015D78  6E09               	movwf	(btemp+8)^0,c
 16950  015D7A  0E00               	movlw	0
 16951  015D7C  6E0A               	movwf	(btemp+9)^0,c
 16952  015D7E  0E80               	movlw	128
 16953  015D80  6E0B               	movwf	(btemp+10)^0,c
 16954  015D82  0EBF               	movlw	191
 16955  015D84  6E0C               	movwf	(btemp+11)^0,c
 16956                           
 16957                           ;stkvar	_u @ sp[(-10)+0]
 16958  015D86  0EF6               	movlw	-10
 16959  015D88  0060  F027  FFE3   	movff	btemp+8,plusw1
 16960  015D8E  0EF7               	movlw	-9
 16961  015D90  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16962  015D96  0EF8               	movlw	-8
 16963  015D98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16964  015D9E  0EF9               	movlw	-7
 16965  015DA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16966  015DA6                     l7632:
 16967                           
 16968                           ;stkvar	_u @ sp[(-10)+0]
 16969  015DA6  0EF6               	movlw	-10
 16970  015DA8  006F FF8C  F001    	movff	plusw1,btemp
 16971  015DAE  0EF7               	movlw	-9
 16972  015DB0  006F FF8C  F002    	movff	plusw1,btemp+1
 16973  015DB6  0EF8               	movlw	-8
 16974  015DB8  006F FF8C  F003    	movff	plusw1,btemp+2
 16975  015DBE  0EF9               	movlw	-7
 16976  015DC0                     L15:
 16977  015DC0  006F FF8C  F004    	movff	plusw1,btemp+3
 16978                           
 16979                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16980  015DC6  0EF2               	movlw	242
 16981  015DC8  26E1               	addwf	fsr1l,f,c
 16982  015DCA  0EFF               	movlw	255
 16983  015DCC  22E2               	addwfc	fsr1h,f,c
 16984  015DCE  0012               	return		;funcret
 16985  015DD0                     __end_of_floorf:
 16986                           	opt callstack 0
 16987                           
 16988 ;; *************** function ___fpclassifyf *****************
 16989 ;; Defined at:
 16990 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;  x               4  [STACK] float 
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;  u               4  [STACK] struct .
 16995 ;;  e               2  [STACK] int 
 16996 ;; Return value:  Size  Location     Type
 16997 ;;                  2  [STACK] int 
 16998 ;; Registers used:
 16999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 17000 ;; Tracked objects:
 17001 ;;		On entry : 0/0
 17002 ;;		On exit  : 0/0
 17003 ;;		Unchanged: 0/0
 17004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17009 ;;Total ram usage:        0 bytes
 17010 ;; Hardware stack levels used:    1
 17011 ;; Hardware stack levels required when called:   15
 17012 ;; This function calls:
 17013 ;;		Nothing
 17014 ;; This function is called by:
 17015 ;;		_efgtoa
 17016 ;; This function uses a reentrant model
 17017 ;;
 17018                           
 17019                           	psect	text59
 17020  0179C6                     __ptext59:
 17021                           	opt callstack 0
 17022  0179C6                     ___fpclassifyf:
 17023                           	opt callstack 0
 17024                           
 17025                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17026  0179C6  0E06               	movlw	6
 17027  0179C8  26E1               	addwf	fsr1l,f,c
 17028  0179CA  0E00               	movlw	0
 17029  0179CC  22E2               	addwfc	fsr1h,f,c
 17030                           
 17031                           ;incstack = 0
 17032 ;; hardware stack exceeded
 17033  0179CE  0060  F1F0  F009   	movff	___fpclassifyf@F463,btemp+8
 17034  0179D4  0060  F1F4  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 17035  0179DA  0060  F1F8  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 17036  0179E0  0060  F1FC  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 17037                           
 17038                           ;stkvar	_u @ sp[(-6)+0]
 17039  0179E6  0EFA               	movlw	-6
 17040  0179E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 17041  0179EE  0EFB               	movlw	-5
 17042  0179F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17043  0179F6  0EFC               	movlw	-4
 17044  0179F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17045  0179FE  0EFD               	movlw	-3
 17046  017A00  0060  F033  FFE3   	movff	btemp+11,plusw1
 17047                           
 17048                           ;stkvar	_x @ sp[(-6)+-4]
 17049  017A06  0EF6               	movlw	-10
 17050  017A08  006F FF8C  F009    	movff	plusw1,btemp+8
 17051  017A0E  0EF7               	movlw	-9
 17052  017A10  006F FF8C  F00A    	movff	plusw1,btemp+9
 17053  017A16  0EF8               	movlw	-8
 17054  017A18  006F FF8C  F00B    	movff	plusw1,btemp+10
 17055  017A1E  0EF9               	movlw	-7
 17056  017A20  006F FF8C  F00C    	movff	plusw1,btemp+11
 17057                           
 17058                           ;stkvar	_u @ sp[(-6)+0]
 17059  017A26  0EFA               	movlw	-6
 17060  017A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 17061  017A2E  0EFB               	movlw	-5
 17062  017A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17063  017A36  0EFC               	movlw	-4
 17064  017A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17065  017A3E  0EFD               	movlw	-3
 17066  017A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 17067                           
 17068                           ;stkvar	_u @ sp[(-6)+0]
 17069  017A46  0EFA               	movlw	-6
 17070  017A48  006F FF8C  F009    	movff	plusw1,btemp+8
 17071  017A4E  0EFB               	movlw	-5
 17072  017A50  006F FF8C  F00A    	movff	plusw1,btemp+9
 17073  017A56  0EFC               	movlw	-4
 17074  017A58  006F FF8C  F00B    	movff	plusw1,btemp+10
 17075  017A5E  0EFD               	movlw	-3
 17076  017A60  006F FF8C  F00C    	movff	plusw1,btemp+11
 17077  017A66  0E18               	movlw	24
 17078  017A68  D005               	goto	u5600
 17079  017A6A                     u5605:
 17080  017A6A  90D8               	bcf	status,0,c
 17081  017A6C  320C               	rrcf	(btemp+11)^0,f,c
 17082  017A6E  320B               	rrcf	(btemp+10)^0,f,c
 17083  017A70  320A               	rrcf	(btemp+9)^0,f,c
 17084  017A72  3209               	rrcf	(btemp+8)^0,f,c
 17085  017A74                     u5600:
 17086  017A74  2EE8               	decfsz	wreg,f,c
 17087  017A76  D7F9               	goto	u5605
 17088  017A78  0060  F024  F007   	movff	btemp+8,btemp+6
 17089  017A7E  0060  F028  F008   	movff	btemp+9,btemp+7
 17090  017A84  0EFF               	movlw	255
 17091  017A86  1607               	andwf	(btemp+6)^0,f,c
 17092  017A88  0E00               	movlw	0
 17093  017A8A  1608               	andwf	(btemp+7)^0,f,c
 17094                           
 17095                           ;stkvar	_e @ sp[(-6)+4]
 17096  017A8C  0EFE               	movlw	-2
 17097  017A8E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17098  017A94  0EFF               	movlw	-1
 17099  017A96  0060  F023  FFE3   	movff	btemp+7,plusw1
 17100                           
 17101                           ;stkvar	_e @ sp[(-6)+4]
 17102  017A9C  0EFE               	movlw	-2
 17103  017A9E  006F FF8C  F001    	movff	plusw1,btemp
 17104  017AA4  0EFF               	movlw	-1
 17105  017AA6  50E3               	movf	plusw1,w,c
 17106  017AA8  1001               	iorwf	btemp^0,w,c
 17107  017AAA  A4D8               	btfss	status,2,c
 17108  017AAC  D023               	goto	l7570
 17109                           
 17110                           ;stkvar	_u @ sp[(-6)+0]
 17111  017AAE  0EFA               	movlw	-6
 17112  017AB0  006F FF8C  F009    	movff	plusw1,btemp+8
 17113  017AB6  0EFB               	movlw	-5
 17114  017AB8  006F FF8C  F00A    	movff	plusw1,btemp+9
 17115  017ABE  0EFC               	movlw	-4
 17116  017AC0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17117  017AC6  0EFD               	movlw	-3
 17118  017AC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17119  017ACE  90D8               	bcf	status,0,c
 17120  017AD0  3409               	rlcf	(btemp+8)^0,w,c
 17121  017AD2  6E05               	movwf	(btemp+4)^0,c
 17122  017AD4  340A               	rlcf	(btemp+9)^0,w,c
 17123  017AD6  6E06               	movwf	(btemp+5)^0,c
 17124  017AD8  340B               	rlcf	(btemp+10)^0,w,c
 17125  017ADA  6E07               	movwf	(btemp+6)^0,c
 17126  017ADC  340C               	rlcf	(btemp+11)^0,w,c
 17127  017ADE  6E08               	movwf	(btemp+7)^0,c
 17128  017AE0  5005               	movf	(btemp+4)^0,w,c
 17129  017AE2  1006               	iorwf	(btemp+5)^0,w,c
 17130  017AE4  1007               	iorwf	(btemp+6)^0,w,c
 17131  017AE6  1008               	iorwf	(btemp+7)^0,w,c
 17132  017AE8  A4D8               	btfss	status,2,c
 17133  017AEA  D002               	goto	l7566
 17134  017AEC  0E02               	movlw	2
 17135  017AEE  D02E               	goto	L16
 17136  017AF0                     l7566:
 17137  017AF0  0E03               	movlw	3
 17138  017AF2  D02C               	goto	L16
 17139  017AF4                     l7570:
 17140                           
 17141                           ;stkvar	_e @ sp[(-6)+4]
 17142  017AF4  0EFE               	movlw	-2
 17143  017AF6  28E3               	incf	plusw1,w,c
 17144  017AF8  E128               	bnz	l7576
 17145  017AFA  0EFF               	movlw	-1
 17146  017AFC  50E3               	movf	plusw1,w,c
 17147  017AFE  A4D8               	btfss	status,2,c
 17148  017B00  D024               	goto	l7576
 17149                           
 17150                           ;stkvar	_u @ sp[(-6)+0]
 17151  017B02  0EFA               	movlw	-6
 17152  017B04  006F FF8C  F009    	movff	plusw1,btemp+8
 17153  017B0A  0EFB               	movlw	-5
 17154  017B0C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17155  017B12  0EFC               	movlw	-4
 17156  017B14  006F FF8C  F00B    	movff	plusw1,btemp+10
 17157  017B1A  0EFD               	movlw	-3
 17158  017B1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17159  017B22  0E09               	movlw	9
 17160  017B24                     u5645:
 17161  017B24  90D8               	bcf	status,0,c
 17162  017B26  3609               	rlcf	(btemp+8)^0,f,c
 17163  017B28  360A               	rlcf	(btemp+9)^0,f,c
 17164  017B2A  360B               	rlcf	(btemp+10)^0,f,c
 17165  017B2C  360C               	rlcf	(btemp+11)^0,f,c
 17166  017B2E  2EE8               	decfsz	wreg,f,c
 17167  017B30  D7F9               	goto	u5645
 17168  017B32  5009               	movf	(btemp+8)^0,w,c
 17169  017B34  100A               	iorwf	(btemp+9)^0,w,c
 17170  017B36  100B               	iorwf	(btemp+10)^0,w,c
 17171  017B38  100C               	iorwf	(btemp+11)^0,w,c
 17172  017B3A  A4D8               	btfss	status,2,c
 17173  017B3C  D002               	goto	u5650
 17174  017B3E  0E01               	movlw	1
 17175  017B40  D001               	goto	u5660
 17176  017B42                     u5650:
 17177  017B42  0E00               	movlw	0
 17178  017B44                     u5660:
 17179  017B44  6E01               	movwf	btemp^0,c
 17180  017B46  6A02               	clrf	(btemp+1)^0,c
 17181  017B48  D004               	goto	l3002
 17182  017B4A                     l7576:
 17183  017B4A  0E04               	movlw	4
 17184  017B4C                     L16:
 17185  017B4C  6E01               	movwf	btemp^0,c
 17186  017B4E  0E00               	movlw	0
 17187  017B50  6E02               	movwf	(btemp+1)^0,c
 17188  017B52                     l3002:
 17189                           
 17190                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17191  017B52  0EF6               	movlw	246
 17192  017B54  26E1               	addwf	fsr1l,f,c
 17193  017B56  0EFF               	movlw	255
 17194  017B58  22E2               	addwfc	fsr1h,f,c
 17195  017B5A  0012               	return		;funcret
 17196  017B5C                     __end_of___fpclassifyf:
 17197                           	opt callstack 0
 17198                           
 17199 ;; *************** function ___fltol *****************
 17200 ;; Defined at:
 17201 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;  f1              4  [STACK] int 
 17204 ;; Auto vars:     Size  Location     Type
 17205 ;;  exp1            1  [STACK] unsigned char 
 17206 ;;  sign1           1  [STACK] unsigned char 
 17207 ;; Return value:  Size  Location     Type
 17208 ;;                  4  [STACK] long 
 17209 ;; Registers used:
 17210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17211 ;; Tracked objects:
 17212 ;;		On entry : 0/1
 17213 ;;		On exit  : 0/0
 17214 ;;		Unchanged: 0/0
 17215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17220 ;;Total ram usage:        0 bytes
 17221 ;; Hardware stack levels used:    1
 17222 ;; Hardware stack levels required when called:   15
 17223 ;; This function calls:
 17224 ;;		Nothing
 17225 ;; This function is called by:
 17226 ;;		_calc_bsoc
 17227 ;;		_init_bsoc
 17228 ;;		_efgtoa
 17229 ;; This function uses a reentrant model
 17230 ;;
 17231                           
 17232                           	psect	text60
 17233  017E50                     __ptext60:
 17234                           	opt callstack 0
 17235  017E50                     ___fltol:
 17236                           	opt callstack 0
 17237                           
 17238                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17239  017E50  52E6               	movf	postinc1,f,c
 17240  017E52  52E6               	movf	postinc1,f,c
 17241                           
 17242                           ;stkvar	_f1 @ sp[(-2)+-4]
 17243                           
 17244                           ;incstack = 0
 17245 ;; hardware stack exceeded
 17246  017E54  0EFA               	movlw	-6
 17247  017E56  006F FF8C  F009    	movff	plusw1,btemp+8
 17248  017E5C  0EFB               	movlw	-5
 17249  017E5E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17250  017E64  0EFC               	movlw	-4
 17251  017E66  006F FF8C  F00B    	movff	plusw1,btemp+10
 17252  017E6C  0EFD               	movlw	-3
 17253  017E6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17254  017E74  0E18               	movlw	24
 17255  017E76  D005               	goto	u6810
 17256  017E78                     u6815:
 17257  017E78  90D8               	bcf	status,0,c
 17258  017E7A  320C               	rrcf	(btemp+11)^0,f,c
 17259  017E7C  320B               	rrcf	(btemp+10)^0,f,c
 17260  017E7E  320A               	rrcf	(btemp+9)^0,f,c
 17261  017E80  3209               	rrcf	(btemp+8)^0,f,c
 17262  017E82                     u6810:
 17263  017E82  2EE8               	decfsz	wreg,f,c
 17264  017E84  D7F9               	goto	u6815
 17265                           
 17266                           ;stkvar	_exp1 @ sp[(-2)+0]
 17267  017E86  0EFE               	movlw	-2
 17268  017E88  0060  F027  FFE3   	movff	btemp+8,plusw1
 17269  017E8E  0EFE               	movlw	-2
 17270  017E90  50E3               	movf	plusw1,w,c
 17271  017E92  A4D8               	btfss	status,2,c
 17272  017E94  D006               	goto	l8196
 17273  017E96                     u6820:
 17274  017E96  0E00               	movlw	0
 17275  017E98  6E01               	movwf	btemp^0,c
 17276  017E9A  6A02               	clrf	(btemp+1)^0,c
 17277  017E9C  6A03               	clrf	(btemp+2)^0,c
 17278  017E9E  6A04               	clrf	(btemp+3)^0,c
 17279  017EA0  D08B               	goto	l2618
 17280  017EA2                     l8196:
 17281                           
 17282                           ;stkvar	_f1 @ sp[(-2)+-4]
 17283  017EA2  0EFA               	movlw	-6
 17284  017EA4  006F FF8C  F009    	movff	plusw1,btemp+8
 17285  017EAA  0EFB               	movlw	-5
 17286  017EAC  006F FF8C  F00A    	movff	plusw1,btemp+9
 17287  017EB2  0EFC               	movlw	-4
 17288  017EB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17289  017EBA  0EFD               	movlw	-3
 17290  017EBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17291  017EC2  0E20               	movlw	32
 17292  017EC4  D005               	goto	u6830
 17293  017EC6                     u6835:
 17294  017EC6  90D8               	bcf	status,0,c
 17295  017EC8  320C               	rrcf	(btemp+11)^0,f,c
 17296  017ECA  320B               	rrcf	(btemp+10)^0,f,c
 17297  017ECC  320A               	rrcf	(btemp+9)^0,f,c
 17298  017ECE  3209               	rrcf	(btemp+8)^0,f,c
 17299  017ED0                     u6830:
 17300  017ED0  2EE8               	decfsz	wreg,f,c
 17301  017ED2  D7F9               	goto	u6835
 17302                           
 17303                           ;stkvar	_sign1 @ sp[(-2)+1]
 17304  017ED4  0EFF               	movlw	-1
 17305  017ED6  0060  F027  FFE3   	movff	btemp+8,plusw1
 17306                           
 17307                           ;stkvar	_f1 @ sp[(-2)+-4]
 17308  017EDC  0EFC               	movlw	-4
 17309  017EDE  8EE3               	bsf	plusw1,7,c
 17310                           
 17311                           ;stkvar	_f1 @ sp[(-2)+-4]
 17312  017EE0  50E1               	movf	fsr1l,w,c
 17313  017EE2  0FFA               	addlw	-6
 17314  017EE4  6ED9               	movwf	fsr2l,c
 17315  017EE6  50E2               	movf	fsr1h,w,c
 17316  017EE8  6EDA               	movwf	fsr2h,c
 17317  017EEA  0EFF               	movlw	255
 17318  017EEC  22DA               	addwfc	fsr2h,f,c
 17319  017EEE  0EFF               	movlw	255
 17320  017EF0  16DE               	andwf	postinc2,f,c
 17321  017EF2  0EFF               	movlw	255
 17322  017EF4  16DE               	andwf	postinc2,f,c
 17323  017EF6  0EFF               	movlw	255
 17324  017EF8  16DE               	andwf	postinc2,f,c
 17325  017EFA  0E00               	movlw	0
 17326  017EFC  16DE               	andwf	postinc2,f,c
 17327                           
 17328                           ;stkvar	_exp1 @ sp[(-2)+0]
 17329  017EFE  0EFE               	movlw	-2
 17330  017F00  006F FF8C  F001    	movff	plusw1,btemp
 17331  017F06  0E96               	movlw	150
 17332  017F08  5E01               	subwf	btemp^0,f,c
 17333  017F0A  0EFE               	movlw	-2
 17334  017F0C  0060  F007  FFE3   	movff	btemp,plusw1
 17335                           
 17336                           ;stkvar	_exp1 @ sp[(-2)+0]
 17337  017F12  0EFE               	movlw	-2
 17338  017F14  AEE3               	btfss	plusw1,7,c
 17339  017F16  D014               	goto	l8214
 17340                           
 17341                           ;stkvar	_exp1 @ sp[(-2)+0]
 17342  017F18  0EFE               	movlw	-2
 17343  017F1A  50E3               	movf	plusw1,w,c
 17344  017F1C  0A80               	xorlw	128
 17345  017F1E  0F97               	addlw	151
 17346  017F20  A0D8               	btfss	status,0,c
 17347  017F22  D7B9               	goto	u6820
 17348  017F24                     l8212:
 17349                           
 17350                           ;stkvar	_f1 @ sp[(-2)+-4]
 17351  017F24  90D8               	bcf	status,0,c
 17352  017F26  0EFD               	movlw	-3
 17353  017F28  32E3               	rrcf	plusw1,f,c
 17354  017F2A  0EFC               	movlw	-4
 17355  017F2C  32E3               	rrcf	plusw1,f,c
 17356  017F2E  0EFB               	movlw	-5
 17357  017F30  32E3               	rrcf	plusw1,f,c
 17358  017F32  0EFA               	movlw	-6
 17359  017F34  32E3               	rrcf	plusw1,f,c
 17360                           
 17361                           ;stkvar	_exp1 @ sp[(-2)+0]
 17362  017F36  0EFE               	movlw	-2
 17363  017F38  2AE3               	incf	plusw1,f,c
 17364  017F3A  B4D8               	btfsc	status,2,c
 17365  017F3C  D018               	goto	u6880
 17366  017F3E  D7F2               	goto	l8212
 17367  017F40                     l8214:
 17368                           
 17369                           ;stkvar	_exp1 @ sp[(-2)+0]
 17370  017F40  0EFE               	movlw	-2
 17371  017F42  006F FF8C  F001    	movff	plusw1,btemp
 17372  017F48  0E1F               	movlw	31
 17373  017F4A  6401               	cpfsgt	btemp^0,c
 17374  017F4C  D00C               	goto	l8222
 17375  017F4E  D7A3               	goto	u6820
 17376  017F50                     l8220:
 17377                           
 17378                           ;stkvar	_f1 @ sp[(-2)+-4]
 17379  017F50  90D8               	bcf	status,0,c
 17380  017F52  0EFA               	movlw	-6
 17381  017F54  36E3               	rlcf	plusw1,f,c
 17382  017F56  0EFB               	movlw	-5
 17383  017F58  36E3               	rlcf	plusw1,f,c
 17384  017F5A  0EFC               	movlw	-4
 17385  017F5C  36E3               	rlcf	plusw1,f,c
 17386  017F5E  0EFD               	movlw	-3
 17387  017F60  36E3               	rlcf	plusw1,f,c
 17388                           
 17389                           ;stkvar	_exp1 @ sp[(-2)+0]
 17390  017F62  0EFE               	movlw	-2
 17391  017F64  06E3               	decf	plusw1,f,c
 17392  017F66                     l8222:
 17393                           
 17394                           ;stkvar	_exp1 @ sp[(-2)+0]
 17395  017F66  0EFE               	movlw	-2
 17396  017F68  50E3               	movf	plusw1,w,c
 17397  017F6A  A4D8               	btfss	status,2,c
 17398  017F6C  D7F1               	goto	l8220
 17399  017F6E                     u6880:
 17400                           
 17401                           ;stkvar	_sign1 @ sp[(-2)+1]
 17402  017F6E  0EFF               	movlw	-1
 17403  017F70  50E3               	movf	plusw1,w,c
 17404  017F72  B4D8               	btfsc	status,2,c
 17405  017F74  D011               	goto	u6900
 17406                           
 17407                           ;stkvar	_f1 @ sp[(-2)+-4]
 17408                           ;stkvar	_f1 @ sp[(-2)+-4]
 17409  017F76  0EFA               	movlw	-6
 17410  017F78  6CE3               	negf	plusw1,c
 17411  017F7A  0EFB               	movlw	-5
 17412  017F7C  1EE3               	comf	plusw1,f,c
 17413  017F7E  0EFC               	movlw	-4
 17414  017F80  1EE3               	comf	plusw1,f,c
 17415  017F82  0EFD               	movlw	-3
 17416  017F84  1EE3               	comf	plusw1,f,c
 17417  017F86  E308               	bnc	u6900
 17418  017F88  0EFB               	movlw	-5
 17419  017F8A  2AE3               	incf	plusw1,f,c
 17420  017F8C  E305               	bnc	u6900
 17421  017F8E  0EFC               	movlw	-4
 17422  017F90  2AE3               	incf	plusw1,f,c
 17423  017F92  E302               	bnc	u6900
 17424  017F94  0EFD               	movlw	-3
 17425  017F96  2AE3               	incf	plusw1,f,c
 17426  017F98                     u6900:
 17427                           
 17428                           ;stkvar	_f1 @ sp[(-2)+-4]
 17429  017F98  0EFA               	movlw	-6
 17430  017F9A  006F FF8C  F001    	movff	plusw1,btemp
 17431  017FA0  0EFB               	movlw	-5
 17432  017FA2  006F FF8C  F002    	movff	plusw1,btemp+1
 17433  017FA8  0EFC               	movlw	-4
 17434  017FAA  006F FF8C  F003    	movff	plusw1,btemp+2
 17435  017FB0  0EFD               	movlw	-3
 17436  017FB2  006F FF8C  F004    	movff	plusw1,btemp+3
 17437  017FB8                     l2618:
 17438                           
 17439                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17440  017FB8  0EFA               	movlw	250
 17441  017FBA  26E1               	addwf	fsr1l,f,c
 17442  017FBC  0EFF               	movlw	255
 17443  017FBE  22E2               	addwfc	fsr1h,f,c
 17444  017FC0  0012               	return		;funcret
 17445  017FC2                     __end_of___fltol:
 17446                           	opt callstack 0
 17447                           
 17448 ;; *************** function ___flneg *****************
 17449 ;; Defined at:
 17450 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;  f1              4  [STACK] long 
 17453 ;; Auto vars:     Size  Location     Type
 17454 ;;		None
 17455 ;; Return value:  Size  Location     Type
 17456 ;;                  4  [STACK] long 
 17457 ;; Registers used:
 17458 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 17459 ;; Tracked objects:
 17460 ;;		On entry : 0/0
 17461 ;;		On exit  : 0/0
 17462 ;;		Unchanged: 0/0
 17463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17468 ;;Total ram usage:        0 bytes
 17469 ;; Hardware stack levels used:    1
 17470 ;; Hardware stack levels required when called:   15
 17471 ;; This function calls:
 17472 ;;		Nothing
 17473 ;; This function is called by:
 17474 ;;		_calc_bsoc
 17475 ;;		_efgtoa
 17476 ;; This function uses a reentrant model
 17477 ;;
 17478                           
 17479                           	psect	text61
 17480  01A348                     __ptext61:
 17481                           	opt callstack 0
 17482  01A348                     ___flneg:
 17483                           	opt callstack 0
 17484                           
 17485                           ;stkvar	_f1 @ sp[(0)+-4]
 17486                           
 17487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17488                           ;incstack = 0
 17489 ;; hardware stack exceeded
 17490  01A348  0EFC               	movlw	-4
 17491  01A34A  50E3               	movf	plusw1,w,c
 17492  01A34C  E10A               	bnz	u6800
 17493  01A34E  0EFD               	movlw	-3
 17494  01A350  50E3               	movf	plusw1,w,c
 17495  01A352  E107               	bnz	u6800
 17496  01A354  0EFE               	movlw	-2
 17497  01A356  50E3               	movf	plusw1,w,c
 17498  01A358  E104               	bnz	u6800
 17499  01A35A  0EFF               	movlw	-1
 17500  01A35C  50E3               	movf	plusw1,w,c
 17501  01A35E  B4D8               	btfsc	status,2,c
 17502  01A360  D002               	goto	l8186
 17503  01A362                     u6800:
 17504                           
 17505                           ;stkvar	_f1 @ sp[(0)+-4]
 17506  01A362  0EFF               	movlw	-1
 17507  01A364  7EE3               	btg	plusw1,7,c
 17508  01A366                     l8186:
 17509                           
 17510                           ;stkvar	_f1 @ sp[(0)+-4]
 17511  01A366  0EFC               	movlw	-4
 17512  01A368  006F FF8C  F001    	movff	plusw1,btemp
 17513  01A36E  0EFD               	movlw	-3
 17514  01A370  006F FF8C  F002    	movff	plusw1,btemp+1
 17515  01A376  0EFE               	movlw	-2
 17516  01A378  006F FF8C  F003    	movff	plusw1,btemp+2
 17517  01A37E  0EFF               	movlw	-1
 17518  01A380  006F FF8C  F004    	movff	plusw1,btemp+3
 17519                           
 17520                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17521  01A386  52E5               	movf	postdec1,f,c
 17522  01A388  52E5               	movf	postdec1,f,c
 17523  01A38A  52E5               	movf	postdec1,f,c
 17524  01A38C  52E5               	movf	postdec1,f,c
 17525  01A38E  0012               	return		;funcret
 17526  01A390                     __end_of___flneg:
 17527                           	opt callstack 0
 17528                           
 17529 ;; *************** function ___fleq *****************
 17530 ;; Defined at:
 17531 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;  ff1             4  [STACK] long 
 17534 ;;  ff2             4  [STACK] long 
 17535 ;; Auto vars:     Size  Location     Type
 17536 ;;		None
 17537 ;; Return value:  Size  Location     Type
 17538 ;;		None               void
 17539 ;; Registers used:
 17540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17541 ;; Tracked objects:
 17542 ;;		On entry : 0/0
 17543 ;;		On exit  : 0/0
 17544 ;;		Unchanged: 0/0
 17545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17550 ;;Total ram usage:        0 bytes
 17551 ;; Hardware stack levels used:    1
 17552 ;; Hardware stack levels required when called:   15
 17553 ;; This function calls:
 17554 ;;		Nothing
 17555 ;; This function is called by:
 17556 ;;		_efgtoa
 17557 ;; This function uses a reentrant model
 17558 ;;
 17559                           
 17560                           	psect	text62
 17561  01930E                     __ptext62:
 17562                           	opt callstack 0
 17563  01930E                     ___fleq:
 17564                           	opt callstack 0
 17565                           
 17566                           ;stkvar	_ff1 @ sp[(0)+-4]
 17567                           
 17568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17569                           ;incstack = 0
 17570 ;; hardware stack exceeded
 17571  01930E  50E1               	movf	fsr1l,w,c
 17572  019310  0FFC               	addlw	-4
 17573  019312  6ED9               	movwf	fsr2l,c
 17574  019314  50E2               	movf	fsr1h,w,c
 17575  019316  6EDA               	movwf	fsr2h,c
 17576  019318  0EFF               	movlw	255
 17577  01931A  22DA               	addwfc	fsr2h,f,c
 17578  01931C  0E00               	movlw	0
 17579  01931E  14DE               	andwf	postinc2,w,c
 17580  019320  6E09               	movwf	(btemp+8)^0,c
 17581  019322  0E00               	movlw	0
 17582  019324  14DE               	andwf	postinc2,w,c
 17583  019326  6E0A               	movwf	(btemp+9)^0,c
 17584  019328  0E80               	movlw	128
 17585  01932A  14DE               	andwf	postinc2,w,c
 17586  01932C  6E0B               	movwf	(btemp+10)^0,c
 17587  01932E  0E7F               	movlw	127
 17588  019330  14DE               	andwf	postinc2,w,c
 17589  019332  6E0C               	movwf	(btemp+11)^0,c
 17590  019334  5009               	movf	(btemp+8)^0,w,c
 17591  019336  100A               	iorwf	(btemp+9)^0,w,c
 17592  019338  100B               	iorwf	(btemp+10)^0,w,c
 17593  01933A  100C               	iorwf	(btemp+11)^0,w,c
 17594  01933C  A4D8               	btfss	status,2,c
 17595  01933E  D008               	goto	l8144
 17596                           
 17597                           ;stkvar	_ff1 @ sp[(0)+-4]
 17598  019340  0EFC               	movlw	-4
 17599  019342  6AE3               	clrf	plusw1,c
 17600  019344  0EFD               	movlw	-3
 17601  019346  6AE3               	clrf	plusw1,c
 17602  019348  0EFE               	movlw	-2
 17603  01934A  6AE3               	clrf	plusw1,c
 17604  01934C  0EFF               	movlw	-1
 17605  01934E  6AE3               	clrf	plusw1,c
 17606  019350                     l8144:
 17607                           
 17608                           ;stkvar	_ff2 @ sp[(0)+-8]
 17609  019350  50E1               	movf	fsr1l,w,c
 17610  019352  0FF8               	addlw	-8
 17611  019354  6ED9               	movwf	fsr2l,c
 17612  019356  50E2               	movf	fsr1h,w,c
 17613  019358  6EDA               	movwf	fsr2h,c
 17614  01935A  0EFF               	movlw	255
 17615  01935C  22DA               	addwfc	fsr2h,f,c
 17616  01935E  0E00               	movlw	0
 17617  019360  14DE               	andwf	postinc2,w,c
 17618  019362  6E09               	movwf	(btemp+8)^0,c
 17619  019364  0E00               	movlw	0
 17620  019366  14DE               	andwf	postinc2,w,c
 17621  019368  6E0A               	movwf	(btemp+9)^0,c
 17622  01936A  0E80               	movlw	128
 17623  01936C  14DE               	andwf	postinc2,w,c
 17624  01936E  6E0B               	movwf	(btemp+10)^0,c
 17625  019370  0E7F               	movlw	127
 17626  019372  14DE               	andwf	postinc2,w,c
 17627  019374  6E0C               	movwf	(btemp+11)^0,c
 17628  019376  5009               	movf	(btemp+8)^0,w,c
 17629  019378  100A               	iorwf	(btemp+9)^0,w,c
 17630  01937A  100B               	iorwf	(btemp+10)^0,w,c
 17631  01937C  100C               	iorwf	(btemp+11)^0,w,c
 17632  01937E  A4D8               	btfss	status,2,c
 17633  019380  D008               	goto	l8148
 17634                           
 17635                           ;stkvar	_ff2 @ sp[(0)+-8]
 17636  019382  0EF8               	movlw	-8
 17637  019384  6AE3               	clrf	plusw1,c
 17638  019386  0EF9               	movlw	-7
 17639  019388  6AE3               	clrf	plusw1,c
 17640  01938A  0EFA               	movlw	-6
 17641  01938C  6AE3               	clrf	plusw1,c
 17642  01938E  0EFB               	movlw	-5
 17643  019390  6AE3               	clrf	plusw1,c
 17644  019392                     l8148:
 17645                           
 17646                           ;stkvar	_ff2 @ sp[(0)+-8]
 17647                           ;stkvar	_ff1 @ sp[(0)+-4]
 17648  019392  50E1               	movf	fsr1l,w,c
 17649  019394  0FFC               	addlw	-4
 17650  019396  6ED9               	movwf	fsr2l,c
 17651  019398  50E2               	movf	fsr1h,w,c
 17652  01939A  6EDA               	movwf	fsr2h,c
 17653  01939C  0EFF               	movlw	255
 17654  01939E  22DA               	addwfc	fsr2h,f,c
 17655  0193A0  0EF8               	movlw	-8
 17656  0193A2  50E3               	movf	plusw1,w,c
 17657  0193A4  18DE               	xorwf	postinc2,w,c
 17658  0193A6  E10D               	bnz	u6740
 17659  0193A8  0EF9               	movlw	-7
 17660  0193AA  50E3               	movf	plusw1,w,c
 17661  0193AC  18DE               	xorwf	postinc2,w,c
 17662  0193AE  E109               	bnz	u6740
 17663  0193B0  0EFA               	movlw	-6
 17664  0193B2  50E3               	movf	plusw1,w,c
 17665  0193B4  18DE               	xorwf	postinc2,w,c
 17666  0193B6  E105               	bnz	u6740
 17667  0193B8  0EFB               	movlw	-5
 17668  0193BA  50E3               	movf	plusw1,w,c
 17669  0193BC  18DE               	xorwf	postinc2,w,c
 17670  0193BE  B4D8               	btfsc	status,2,c
 17671  0193C0  D002               	goto	l8152
 17672  0193C2                     u6740:
 17673  0193C2  9001               	bcf	btemp& (0+255),0,c
 17674  0193C4  D001               	goto	l2580
 17675  0193C6                     l8152:
 17676  0193C6  8001               	bsf	btemp& (0+255),0,c
 17677  0193C8                     l2580:
 17678                           
 17679                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17680  0193C8  0EF8               	movlw	248
 17681  0193CA  26E1               	addwf	fsr1l,f,c
 17682  0193CC  0EFF               	movlw	255
 17683  0193CE  22E2               	addwfc	fsr1h,f,c
 17684  0193D0  0012               	return		;funcret
 17685  0193D2                     __end_of___fleq:
 17686                           	opt callstack 0
 17687                           
 17688 ;; *************** function ___awmod *****************
 17689 ;; Defined at:
 17690 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;  dividend        2  [STACK] int 
 17693 ;;  divisor         2  [STACK] int 
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;  sign            1  [STACK] unsigned char 
 17696 ;;  counter         1  [STACK] unsigned char 
 17697 ;; Return value:  Size  Location     Type
 17698 ;;                  2  [STACK] int 
 17699 ;; Registers used:
 17700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17710 ;;Total ram usage:        0 bytes
 17711 ;; Hardware stack levels used:    1
 17712 ;; Hardware stack levels required when called:   15
 17713 ;; This function calls:
 17714 ;;		Nothing
 17715 ;; This function is called by:
 17716 ;;		_efgtoa
 17717 ;; This function uses a reentrant model
 17718 ;;
 17719                           
 17720                           	psect	text63
 17721  018A12                     __ptext63:
 17722                           	opt callstack 0
 17723  018A12                     ___awmod:
 17724                           	opt callstack 0
 17725                           
 17726                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17727  018A12  52E6               	movf	postinc1,f,c
 17728  018A14  52E6               	movf	postinc1,f,c
 17729                           
 17730                           ;stkvar	_sign @ sp[(-2)+0]
 17731                           
 17732                           ;incstack = 0
 17733 ;; hardware stack exceeded
 17734  018A16  0EFE               	movlw	-2
 17735  018A18  6AE3               	clrf	plusw1,c
 17736                           
 17737                           ;stkvar	_dividend @ sp[(-2)+-2]
 17738  018A1A  0EFD               	movlw	-3
 17739  018A1C  AEE3               	btfss	plusw1,7,c
 17740  018A1E  D009               	goto	l8110
 17741                           
 17742                           ;stkvar	_dividend @ sp[(-2)+-2]
 17743                           ;stkvar	_dividend @ sp[(-2)+-2]
 17744  018A20  0EFC               	movlw	-4
 17745  018A22  6CE3               	negf	plusw1,c
 17746  018A24  0EFD               	movlw	-3
 17747  018A26  1EE3               	comf	plusw1,f,c
 17748  018A28  B0D8               	btfsc	status,0,c
 17749  018A2A  2AE3               	incf	plusw1,f,c
 17750                           
 17751                           ;stkvar	_sign @ sp[(-2)+0]
 17752  018A2C  0EFE               	movlw	-2
 17753  018A2E  6AE3               	clrf	plusw1,c
 17754  018A30  2AE3               	incf	plusw1,f,c
 17755  018A32                     l8110:
 17756                           
 17757                           ;stkvar	_divisor @ sp[(-2)+-4]
 17758  018A32  0EFB               	movlw	-5
 17759  018A34  AEE3               	btfss	plusw1,7,c
 17760  018A36  D006               	goto	l8114
 17761                           
 17762                           ;stkvar	_divisor @ sp[(-2)+-4]
 17763                           ;stkvar	_divisor @ sp[(-2)+-4]
 17764  018A38  0EFA               	movlw	-6
 17765  018A3A  6CE3               	negf	plusw1,c
 17766  018A3C  0EFB               	movlw	-5
 17767  018A3E  1EE3               	comf	plusw1,f,c
 17768  018A40  B0D8               	btfsc	status,0,c
 17769  018A42  2AE3               	incf	plusw1,f,c
 17770  018A44                     l8114:
 17771                           
 17772                           ;stkvar	_divisor @ sp[(-2)+-4]
 17773  018A44  0EFA               	movlw	-6
 17774  018A46  006F FF8C  F001    	movff	plusw1,btemp
 17775  018A4C  0EFB               	movlw	-5
 17776  018A4E  50E3               	movf	plusw1,w,c
 17777  018A50  1001               	iorwf	btemp^0,w,c
 17778  018A52  B4D8               	btfsc	status,2,c
 17779  018A54  D053               	goto	u6700
 17780                           
 17781                           ;stkvar	_counter @ sp[(-2)+1]
 17782  018A56  0EFF               	movlw	-1
 17783  018A58  6AE3               	clrf	plusw1,c
 17784  018A5A  D012               	goto	L17
 17785  018A5C                     l8118:
 17786                           
 17787                           ;stkvar	_divisor @ sp[(-2)+-4]
 17788  018A5C  0EFA               	movlw	-6
 17789  018A5E  50E3               	movf	plusw1,w,c
 17790  018A60  90D8               	bcf	status,0,c
 17791  018A62  34E8               	rlcf	wreg,w,c
 17792  018A64  6E01               	movwf	btemp^0,c
 17793  018A66  0EFA               	movlw	-6
 17794  018A68  0060  F007  FFE3   	movff	btemp,plusw1
 17795  018A6E  0EFB               	movlw	-5
 17796  018A70  50E3               	movf	plusw1,w,c
 17797  018A72  34E8               	rlcf	wreg,w,c
 17798  018A74  6E01               	movwf	btemp^0,c
 17799  018A76  0EFB               	movlw	-5
 17800  018A78  0060  F007  FFE3   	movff	btemp,plusw1
 17801                           
 17802                           ;stkvar	_counter @ sp[(-2)+1]
 17803  018A7E  0EFF               	movlw	-1
 17804  018A80                     L17:
 17805  018A80  2AE3               	incf	plusw1,f,c
 17806                           
 17807                           ;stkvar	_divisor @ sp[(-2)+-4]
 17808  018A82  0EFB               	movlw	-5
 17809  018A84  AEE3               	btfss	plusw1,7,c
 17810  018A86  D7EA               	goto	l8118
 17811  018A88                     u6680:
 17812                           
 17813                           ;stkvar	_divisor @ sp[(-2)+-4]
 17814  018A88  0EFA               	movlw	-6
 17815  018A8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17816  018A90  0EFB               	movlw	-5
 17817  018A92  006F FF8C  F00C    	movff	plusw1,btemp+11
 17818                           
 17819                           ;stkvar	_dividend @ sp[(-2)+-2]
 17820  018A98  0EFC               	movlw	-4
 17821  018A9A  006F FF8C  F009    	movff	plusw1,btemp+8
 17822  018AA0  0EFD               	movlw	-3
 17823  018AA2  006F FF8C  F00A    	movff	plusw1,btemp+9
 17824  018AA8  500B               	movf	(btemp+10)^0,w,c
 17825  018AAA  5C09               	subwf	(btemp+8)^0,w,c
 17826  018AAC  500C               	movf	(btemp+11)^0,w,c
 17827  018AAE  580A               	subwfb	(btemp+9)^0,w,c
 17828  018AB0  A0D8               	btfss	status,0,c
 17829  018AB2  D014               	goto	l8128
 17830                           
 17831                           ;stkvar	_divisor @ sp[(-2)+-4]
 17832                           ;stkvar	_dividend @ sp[(-2)+-2]
 17833  018AB4  0EFC               	movlw	-4
 17834  018AB6  50E3               	movf	plusw1,w,c
 17835  018AB8  6E01               	movwf	btemp^0,c
 17836  018ABA  0EFA               	movlw	-6
 17837  018ABC  50E3               	movf	plusw1,w,c
 17838  018ABE  5E01               	subwf	btemp^0,f,c
 17839  018AC0  0EFC               	movlw	-4
 17840  018AC2  0060  F007  FFE3   	movff	btemp,plusw1
 17841  018AC8  0EFD               	movlw	-3
 17842  018ACA  50E3               	movf	plusw1,w,c
 17843  018ACC  6E01               	movwf	btemp^0,c
 17844  018ACE  0EFB               	movlw	-5
 17845  018AD0  50E3               	movf	plusw1,w,c
 17846  018AD2  5A01               	subwfb	btemp^0,f,c
 17847  018AD4  0EFD               	movlw	-3
 17848  018AD6  0060  F007  FFE3   	movff	btemp,plusw1
 17849  018ADC                     l8128:
 17850                           
 17851                           ;stkvar	_divisor @ sp[(-2)+-4]
 17852  018ADC  90D8               	bcf	status,0,c
 17853  018ADE  0EFB               	movlw	-5
 17854  018AE0  32E3               	rrcf	plusw1,f,c
 17855  018AE2  0EFA               	movlw	-6
 17856  018AE4  32E3               	rrcf	plusw1,f,c
 17857                           
 17858                           ;stkvar	_counter @ sp[(-2)+1]
 17859  018AE6  0EFF               	movlw	-1
 17860  018AE8  50E3               	movf	plusw1,w,c
 17861  018AEA  6E01               	movwf	btemp^0,c
 17862  018AEC  0E01               	movlw	1
 17863  018AEE  5E01               	subwf	btemp^0,f,c
 17864  018AF0  0EFF               	movlw	-1
 17865  018AF2  0060  F007  FFE3   	movff	btemp,plusw1
 17866  018AF8  A4D8               	btfss	status,2,c
 17867  018AFA  D7C6               	goto	u6680
 17868  018AFC                     u6700:
 17869                           
 17870                           ;stkvar	_sign @ sp[(-2)+0]
 17871  018AFC  0EFE               	movlw	-2
 17872  018AFE  50E3               	movf	plusw1,w,c
 17873  018B00  B4D8               	btfsc	status,2,c
 17874  018B02  D006               	goto	l8136
 17875                           
 17876                           ;stkvar	_dividend @ sp[(-2)+-2]
 17877                           ;stkvar	_dividend @ sp[(-2)+-2]
 17878  018B04  0EFC               	movlw	-4
 17879  018B06  6CE3               	negf	plusw1,c
 17880  018B08  0EFD               	movlw	-3
 17881  018B0A  1EE3               	comf	plusw1,f,c
 17882  018B0C  B0D8               	btfsc	status,0,c
 17883  018B0E  2AE3               	incf	plusw1,f,c
 17884  018B10                     l8136:
 17885                           
 17886                           ;stkvar	_dividend @ sp[(-2)+-2]
 17887  018B10  0EFC               	movlw	-4
 17888  018B12  006F FF8C  F001    	movff	plusw1,btemp
 17889  018B18  0EFD               	movlw	-3
 17890  018B1A  006F FF8C  F002    	movff	plusw1,btemp+1
 17891                           
 17892                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17893  018B20  0EFA               	movlw	250
 17894  018B22  26E1               	addwf	fsr1l,f,c
 17895  018B24  0EFF               	movlw	255
 17896  018B26  22E2               	addwfc	fsr1h,f,c
 17897  018B28  0012               	return		;funcret
 17898  018B2A                     __end_of___awmod:
 17899                           	opt callstack 0
 17900                           
 17901 ;; *************** function ___awdiv *****************
 17902 ;; Defined at:
 17903 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17904 ;; Parameters:    Size  Location     Type
 17905 ;;  dividend        2  [STACK] int 
 17906 ;;  divisor         2  [STACK] int 
 17907 ;; Auto vars:     Size  Location     Type
 17908 ;;  quotient        2  [STACK] int 
 17909 ;;  sign            1  [STACK] unsigned char 
 17910 ;;  counter         1  [STACK] unsigned char 
 17911 ;; Return value:  Size  Location     Type
 17912 ;;                  2  [STACK] int 
 17913 ;; Registers used:
 17914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17915 ;; Tracked objects:
 17916 ;;		On entry : 0/0
 17917 ;;		On exit  : 0/0
 17918 ;;		Unchanged: 0/0
 17919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17924 ;;Total ram usage:        0 bytes
 17925 ;; Hardware stack levels used:    1
 17926 ;; Hardware stack levels required when called:   15
 17927 ;; This function calls:
 17928 ;;		Nothing
 17929 ;; This function is called by:
 17930 ;;		_efgtoa
 17931 ;; This function uses a reentrant model
 17932 ;;
 17933                           
 17934                           	psect	text64
 17935  0183F6                     __ptext64:
 17936                           	opt callstack 0
 17937  0183F6                     ___awdiv:
 17938                           	opt callstack 0
 17939                           
 17940                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17941  0183F6  52E6               	movf	postinc1,f,c
 17942  0183F8  52E6               	movf	postinc1,f,c
 17943  0183FA  52E6               	movf	postinc1,f,c
 17944  0183FC  52E6               	movf	postinc1,f,c
 17945                           
 17946                           ;stkvar	_sign @ sp[(-4)+2]
 17947                           
 17948                           ;incstack = 0
 17949 ;; hardware stack exceeded
 17950  0183FE  0EFE               	movlw	-2
 17951  018400  6AE3               	clrf	plusw1,c
 17952                           
 17953                           ;stkvar	_divisor @ sp[(-4)+-4]
 17954  018402  0EF9               	movlw	-7
 17955  018404  AEE3               	btfss	plusw1,7,c
 17956  018406  D009               	goto	l8064
 17957                           
 17958                           ;stkvar	_divisor @ sp[(-4)+-4]
 17959                           ;stkvar	_divisor @ sp[(-4)+-4]
 17960  018408  0EF8               	movlw	-8
 17961  01840A  6CE3               	negf	plusw1,c
 17962  01840C  0EF9               	movlw	-7
 17963  01840E  1EE3               	comf	plusw1,f,c
 17964  018410  B0D8               	btfsc	status,0,c
 17965  018412  2AE3               	incf	plusw1,f,c
 17966                           
 17967                           ;stkvar	_sign @ sp[(-4)+2]
 17968  018414  0EFE               	movlw	-2
 17969  018416  6AE3               	clrf	plusw1,c
 17970  018418  2AE3               	incf	plusw1,f,c
 17971  01841A                     l8064:
 17972                           
 17973                           ;stkvar	_dividend @ sp[(-4)+-2]
 17974  01841A  0EFB               	movlw	-5
 17975  01841C  AEE3               	btfss	plusw1,7,c
 17976  01841E  D008               	goto	l8070
 17977                           
 17978                           ;stkvar	_dividend @ sp[(-4)+-2]
 17979                           ;stkvar	_dividend @ sp[(-4)+-2]
 17980  018420  0EFA               	movlw	-6
 17981  018422  6CE3               	negf	plusw1,c
 17982  018424  0EFB               	movlw	-5
 17983  018426  1EE3               	comf	plusw1,f,c
 17984  018428  B0D8               	btfsc	status,0,c
 17985  01842A  2AE3               	incf	plusw1,f,c
 17986                           
 17987                           ;stkvar	_sign @ sp[(-4)+2]
 17988  01842C  0EFE               	movlw	-2
 17989  01842E  70E3               	btg	plusw1,0,c
 17990  018430                     l8070:
 17991                           
 17992                           ;stkvar	_quotient @ sp[(-4)+0]
 17993  018430  0EFC               	movlw	-4
 17994  018432  6AE3               	clrf	plusw1,c
 17995  018434  0EFD               	movlw	-3
 17996  018436  6AE3               	clrf	plusw1,c
 17997                           
 17998                           ;stkvar	_divisor @ sp[(-4)+-4]
 17999  018438  0EF8               	movlw	-8
 18000  01843A  006F FF8C  F001    	movff	plusw1,btemp
 18001  018440  0EF9               	movlw	-7
 18002  018442  50E3               	movf	plusw1,w,c
 18003  018444  1001               	iorwf	btemp^0,w,c
 18004  018446  B4D8               	btfsc	status,2,c
 18005  018448  D066               	goto	u6630
 18006                           
 18007                           ;stkvar	_counter @ sp[(-4)+3]
 18008  01844A  0EFF               	movlw	-1
 18009  01844C  6AE3               	clrf	plusw1,c
 18010  01844E  D012               	goto	L18
 18011  018450                     l8076:
 18012                           
 18013                           ;stkvar	_divisor @ sp[(-4)+-4]
 18014  018450  0EF8               	movlw	-8
 18015  018452  50E3               	movf	plusw1,w,c
 18016  018454  90D8               	bcf	status,0,c
 18017  018456  34E8               	rlcf	wreg,w,c
 18018  018458  6E01               	movwf	btemp^0,c
 18019  01845A  0EF8               	movlw	-8
 18020  01845C  0060  F007  FFE3   	movff	btemp,plusw1
 18021  018462  0EF9               	movlw	-7
 18022  018464  50E3               	movf	plusw1,w,c
 18023  018466  34E8               	rlcf	wreg,w,c
 18024  018468  6E01               	movwf	btemp^0,c
 18025  01846A  0EF9               	movlw	-7
 18026  01846C  0060  F007  FFE3   	movff	btemp,plusw1
 18027                           
 18028                           ;stkvar	_counter @ sp[(-4)+3]
 18029  018472  0EFF               	movlw	-1
 18030  018474                     L18:
 18031  018474  2AE3               	incf	plusw1,f,c
 18032                           
 18033                           ;stkvar	_divisor @ sp[(-4)+-4]
 18034  018476  0EF9               	movlw	-7
 18035  018478  AEE3               	btfss	plusw1,7,c
 18036  01847A  D7EA               	goto	l8076
 18037  01847C                     u6610:
 18038                           
 18039                           ;stkvar	_quotient @ sp[(-4)+0]
 18040  01847C  0EFC               	movlw	-4
 18041  01847E  50E3               	movf	plusw1,w,c
 18042  018480  90D8               	bcf	status,0,c
 18043  018482  34E8               	rlcf	wreg,w,c
 18044  018484  6E01               	movwf	btemp^0,c
 18045  018486  0EFC               	movlw	-4
 18046  018488  0060  F007  FFE3   	movff	btemp,plusw1
 18047  01848E  0EFD               	movlw	-3
 18048  018490  50E3               	movf	plusw1,w,c
 18049  018492  34E8               	rlcf	wreg,w,c
 18050  018494  6E01               	movwf	btemp^0,c
 18051  018496  0EFD               	movlw	-3
 18052  018498  0060  F007  FFE3   	movff	btemp,plusw1
 18053                           
 18054                           ;stkvar	_divisor @ sp[(-4)+-4]
 18055  01849E  0EF8               	movlw	-8
 18056  0184A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18057  0184A6  0EF9               	movlw	-7
 18058  0184A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18059                           
 18060                           ;stkvar	_dividend @ sp[(-4)+-2]
 18061  0184AE  0EFA               	movlw	-6
 18062  0184B0  006F FF8C  F009    	movff	plusw1,btemp+8
 18063  0184B6  0EFB               	movlw	-5
 18064  0184B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 18065  0184BE  500B               	movf	(btemp+10)^0,w,c
 18066  0184C0  5C09               	subwf	(btemp+8)^0,w,c
 18067  0184C2  500C               	movf	(btemp+11)^0,w,c
 18068  0184C4  580A               	subwfb	(btemp+9)^0,w,c
 18069  0184C6  A0D8               	btfss	status,0,c
 18070  0184C8  D016               	goto	l8090
 18071                           
 18072                           ;stkvar	_divisor @ sp[(-4)+-4]
 18073                           ;stkvar	_dividend @ sp[(-4)+-2]
 18074  0184CA  0EFA               	movlw	-6
 18075  0184CC  50E3               	movf	plusw1,w,c
 18076  0184CE  6E01               	movwf	btemp^0,c
 18077  0184D0  0EF8               	movlw	-8
 18078  0184D2  50E3               	movf	plusw1,w,c
 18079  0184D4  5E01               	subwf	btemp^0,f,c
 18080  0184D6  0EFA               	movlw	-6
 18081  0184D8  0060  F007  FFE3   	movff	btemp,plusw1
 18082  0184DE  0EFB               	movlw	-5
 18083  0184E0  50E3               	movf	plusw1,w,c
 18084  0184E2  6E01               	movwf	btemp^0,c
 18085  0184E4  0EF9               	movlw	-7
 18086  0184E6  50E3               	movf	plusw1,w,c
 18087  0184E8  5A01               	subwfb	btemp^0,f,c
 18088  0184EA  0EFB               	movlw	-5
 18089  0184EC  0060  F007  FFE3   	movff	btemp,plusw1
 18090                           
 18091                           ;stkvar	_quotient @ sp[(-4)+0]
 18092  0184F2  0EFC               	movlw	-4
 18093  0184F4  80E3               	bsf	plusw1,0,c
 18094  0184F6                     l8090:
 18095                           
 18096                           ;stkvar	_divisor @ sp[(-4)+-4]
 18097  0184F6  90D8               	bcf	status,0,c
 18098  0184F8  0EF9               	movlw	-7
 18099  0184FA  32E3               	rrcf	plusw1,f,c
 18100  0184FC  0EF8               	movlw	-8
 18101  0184FE  32E3               	rrcf	plusw1,f,c
 18102                           
 18103                           ;stkvar	_counter @ sp[(-4)+3]
 18104  018500  0EFF               	movlw	-1
 18105  018502  50E3               	movf	plusw1,w,c
 18106  018504  6E01               	movwf	btemp^0,c
 18107  018506  0E01               	movlw	1
 18108  018508  5E01               	subwf	btemp^0,f,c
 18109  01850A  0EFF               	movlw	-1
 18110  01850C  0060  F007  FFE3   	movff	btemp,plusw1
 18111  018512  A4D8               	btfss	status,2,c
 18112  018514  D7B3               	goto	u6610
 18113  018516                     u6630:
 18114                           
 18115                           ;stkvar	_sign @ sp[(-4)+2]
 18116  018516  0EFE               	movlw	-2
 18117  018518  50E3               	movf	plusw1,w,c
 18118  01851A  B4D8               	btfsc	status,2,c
 18119  01851C  D006               	goto	l8098
 18120                           
 18121                           ;stkvar	_quotient @ sp[(-4)+0]
 18122                           ;stkvar	_quotient @ sp[(-4)+0]
 18123  01851E  0EFC               	movlw	-4
 18124  018520  6CE3               	negf	plusw1,c
 18125  018522  0EFD               	movlw	-3
 18126  018524  1EE3               	comf	plusw1,f,c
 18127  018526  B0D8               	btfsc	status,0,c
 18128  018528  2AE3               	incf	plusw1,f,c
 18129  01852A                     l8098:
 18130                           
 18131                           ;stkvar	_quotient @ sp[(-4)+0]
 18132  01852A  0EFC               	movlw	-4
 18133  01852C  006F FF8C  F001    	movff	plusw1,btemp
 18134  018532  0EFD               	movlw	-3
 18135  018534  006F FF8C  F002    	movff	plusw1,btemp+1
 18136                           
 18137                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18138  01853A  0EF8               	movlw	248
 18139  01853C  26E1               	addwf	fsr1l,f,c
 18140  01853E  0EFF               	movlw	255
 18141  018540  22E2               	addwfc	fsr1h,f,c
 18142  018542  0012               	return		;funcret
 18143  018544                     __end_of___awdiv:
 18144                           	opt callstack 0
 18145                           
 18146 ;; *************** function _dtoa *****************
 18147 ;; Defined at:
 18148 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18149 ;; Parameters:    Size  Location     Type
 18150 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18151 ;;		 -> f(6), NULL(0), 
 18152 ;;  d               8  [STACK] long long 
 18153 ;; Auto vars:     Size  Location     Type
 18154 ;;  n               8  [STACK] long long 
 18155 ;;  i               2  [STACK] int 
 18156 ;;  s               2  [STACK] int 
 18157 ;;  w               2  [STACK] int 
 18158 ;;  p               2  [STACK] int 
 18159 ;; Return value:  Size  Location     Type
 18160 ;;                  2  [STACK] int 
 18161 ;; Registers used:
 18162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18163 ;; Tracked objects:
 18164 ;;		On entry : 0/0
 18165 ;;		On exit  : 0/0
 18166 ;;		Unchanged: 0/0
 18167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18172 ;;Total ram usage:        0 bytes
 18173 ;; Hardware stack levels used:    1
 18174 ;; Hardware stack levels required when called:   20
 18175 ;; This function calls:
 18176 ;;		___aodiv
 18177 ;;		___aomod
 18178 ;;		_abs
 18179 ;;		_pad
 18180 ;; This function is called by:
 18181 ;;		_vfpfcnvrt
 18182 ;; This function uses a reentrant model
 18183 ;;
 18184                           
 18185                           	psect	text65
 18186  014E88                     __ptext65:
 18187                           	opt callstack 0
 18188  014E88                     _dtoa:
 18189                           	opt callstack 0
 18190                           
 18191                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18192  014E88  0E12               	movlw	18
 18193  014E8A  26E1               	addwf	fsr1l,f,c
 18194  014E8C  0E00               	movlw	0
 18195  014E8E  22E2               	addwfc	fsr1h,f,c
 18196                           
 18197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18198                           ;stkvar	_d @ sp[(-18)+-10]
 18199                           
 18200                           ;incstack = 0
 18201 ;; hardware stack exceeded
 18202  014E90  0EE4               	movlw	228
 18203  014E92  24E1               	addwf	fsr1l,w,c
 18204  014E94  6ED9               	movwf	fsr2l,c
 18205  014E96  0EFF               	movlw	255
 18206  014E98  20E2               	addwfc	fsr1h,w,c
 18207  014E9A  6EDA               	movwf	fsr2h,c
 18208                           
 18209                           ;stkvar	_n @ sp[(-18)+2]
 18210  014E9C  0E08               	movlw	8
 18211  014E9E  6E01               	movwf	btemp^0,c
 18212  014EA0  0EF0               	movlw	-16
 18213  014EA2                     us1019999:
 18214  014EA2  006F FF7B FFE3     	movff	postinc2,plusw1
 18215  014EA8  28E8               	incf	wreg,w,c
 18216  014EAA  2E01               	decfsz	btemp^0,f,c
 18217  014EAC  D7FA               	bra	us1019999
 18218                           
 18219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18220                           ;stkvar	_n @ sp[(-18)+2]
 18221  014EAE  0EF7               	movlw	-9
 18222  014EB0  AEE3               	btfss	plusw1,7,c
 18223  014EB2  D002               	goto	u10200
 18224  014EB4  0E01               	movlw	1
 18225  014EB6  D001               	goto	u10210
 18226  014EB8                     u10200:
 18227  014EB8  0E00               	movlw	0
 18228  014EBA                     u10210:
 18229  014EBA  6E0B               	movwf	(btemp+10)^0,c
 18230  014EBC  6A0C               	clrf	(btemp+11)^0,c
 18231                           
 18232                           ;stkvar	_s @ sp[(-18)+12]
 18233  014EBE  0EFA               	movlw	-6
 18234  014EC0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18235  014EC6  0EFB               	movlw	-5
 18236  014EC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18237                           
 18238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 18239                           ;stkvar	_s @ sp[(-18)+12]
 18240  014ECE  0EFA               	movlw	-6
 18241  014ED0  006F FF8C  F001    	movff	plusw1,btemp
 18242  014ED6  0EFB               	movlw	-5
 18243  014ED8  50E3               	movf	plusw1,w,c
 18244  014EDA  1001               	iorwf	btemp^0,w,c
 18245  014EDC  B4D8               	btfsc	status,2,c
 18246  014EDE  D025               	goto	u10230
 18247                           
 18248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 18249                           ;stkvar	_n @ sp[(-18)+2]
 18250                           ;stkvar	_n @ sp[(-18)+2]
 18251  014EE0  0EF0               	movlw	-16
 18252  014EE2  6CE3               	negf	plusw1,c
 18253  014EE4  0EF1               	movlw	-15
 18254  014EE6  1EE3               	comf	plusw1,f,c
 18255  014EE8  0EF2               	movlw	-14
 18256  014EEA  1EE3               	comf	plusw1,f,c
 18257  014EEC  0EF3               	movlw	-13
 18258  014EEE  1EE3               	comf	plusw1,f,c
 18259  014EF0  0EF4               	movlw	-12
 18260  014EF2  1EE3               	comf	plusw1,f,c
 18261  014EF4  0EF5               	movlw	-11
 18262  014EF6  1EE3               	comf	plusw1,f,c
 18263  014EF8  0EF6               	movlw	-10
 18264  014EFA  1EE3               	comf	plusw1,f,c
 18265  014EFC  0EF7               	movlw	-9
 18266  014EFE  1EE3               	comf	plusw1,f,c
 18267  014F00  E314               	bnc	u10230
 18268  014F02  0EF1               	movlw	-15
 18269  014F04  2AE3               	incf	plusw1,f,c
 18270  014F06  E311               	bnc	u10230
 18271  014F08  0EF2               	movlw	-14
 18272  014F0A  2AE3               	incf	plusw1,f,c
 18273  014F0C  E30E               	bnc	u10230
 18274  014F0E  0EF3               	movlw	-13
 18275  014F10  2AE3               	incf	plusw1,f,c
 18276  014F12  E30B               	bnc	u10230
 18277  014F14  0EF4               	movlw	-12
 18278  014F16  2AE3               	incf	plusw1,f,c
 18279  014F18  E308               	bnc	u10230
 18280  014F1A  0EF5               	movlw	-11
 18281  014F1C  2AE3               	incf	plusw1,f,c
 18282  014F1E  E305               	bnc	u10230
 18283  014F20  0EF6               	movlw	-10
 18284  014F22  2AE3               	incf	plusw1,f,c
 18285  014F24  E302               	bnc	u10230
 18286  014F26  0EF7               	movlw	-9
 18287  014F28  2AE3               	incf	plusw1,f,c
 18288  014F2A                     u10230:
 18289                           
 18290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 18291  014F2A  AE24               	btfss	(_prec+1)^0,7,c
 18292                           
 18293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 18294  014F2C  9225               	bcf	_flags^0,1,c
 18295                           
 18296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 18297  014F2E  BE24               	btfsc	(_prec+1)^0,7,c
 18298  014F30  D005               	goto	u10250
 18299  014F32  5024               	movf	(_prec+1)^0,w,c
 18300  014F34  E110               	bnz	l11210
 18301  014F36  0423               	decf	_prec^0,w,c
 18302  014F38  B0D8               	btfsc	status,0,c
 18303  014F3A  D00D               	goto	l11210
 18304  014F3C                     u10250:
 18305  014F3C  0E01               	movlw	1
 18306  014F3E  6E0B               	movwf	(btemp+10)^0,c
 18307  014F40  0E00               	movlw	0
 18308  014F42  6E0C               	movwf	(btemp+11)^0,c
 18309                           
 18310                           ;stkvar	_p @ sp[(-18)+16]
 18311  014F44  0EFE               	movlw	-2
 18312  014F46  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18313  014F4C  0EFF               	movlw	-1
 18314  014F4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18315  014F54  D008               	goto	l2084
 18316  014F56                     l11210:
 18317                           
 18318                           ;stkvar	_p @ sp[(-18)+16]
 18319  014F56  0EFE               	movlw	-2
 18320  014F58  0060  F08F  FFE3   	movff	_prec,plusw1
 18321  014F5E  0EFF               	movlw	-1
 18322  014F60  0060  F093  FFE3   	movff	_prec+1,plusw1
 18323  014F66                     l2084:
 18324                           
 18325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 18326                           ;stkvar	_w @ sp[(-18)+14]
 18327  014F66  0EFC               	movlw	-4
 18328  014F68  0060  F087  FFE3   	movff	_width,plusw1
 18329  014F6E  0EFD               	movlw	-3
 18330  014F70  0060  F08B  FFE3   	movff	_width+1,plusw1
 18331                           
 18332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 18333                           ;stkvar	_s @ sp[(-18)+12]
 18334  014F76  0EFA               	movlw	-6
 18335  014F78  006F FF8C  F001    	movff	plusw1,btemp
 18336  014F7E  0EFB               	movlw	-5
 18337  014F80  50E3               	movf	plusw1,w,c
 18338  014F82  1001               	iorwf	btemp^0,w,c
 18339  014F84  A4D8               	btfss	status,2,c
 18340  014F86  D002               	goto	u10270
 18341  014F88  A425               	btfss	_flags^0,2,c
 18342  014F8A  D00A               	goto	l11218
 18343  014F8C                     u10270:
 18344                           
 18345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18346                           ;stkvar	_w @ sp[(-18)+14]
 18347  014F8C  50E1               	movf	fsr1l,w,c
 18348  014F8E  0FFC               	addlw	-4
 18349  014F90  6ED9               	movwf	fsr2l,c
 18350  014F92  50E2               	movf	fsr1h,w,c
 18351  014F94  6EDA               	movwf	fsr2h,c
 18352  014F96  0EFF               	movlw	255
 18353  014F98  22DA               	addwfc	fsr2h,f,c
 18354  014F9A  06DE               	decf	postinc2,f,c
 18355  014F9C  0E00               	movlw	0
 18356  014F9E  5ADD               	subwfb	postdec2,f,c
 18357  014FA0                     l11218:
 18358                           
 18359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18360  014FA0  0E4F               	movlw	79
 18361  014FA2  6E0B               	movwf	(btemp+10)^0,c
 18362  014FA4  0E00               	movlw	0
 18363  014FA6  6E0C               	movwf	(btemp+11)^0,c
 18364                           
 18365                           ;stkvar	_i @ sp[(-18)+10]
 18366  014FA8  0EF8               	movlw	-8
 18367  014FAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18368  014FB0  0EF9               	movlw	-7
 18369  014FB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18370                           
 18371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18372  014FB8  0103               	movlb	3	; () banked
 18373  014FBA  6BE3               	clrf	(_dbuf+79)& (0+255),b
 18374                           
 18375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18376  014FBC  D109               	goto	l11232
 18377  014FBE                     l11222:
 18378                           
 18379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18380                           ;stkvar	_i @ sp[(-18)+10]
 18381  014FBE  50E1               	movf	fsr1l,w,c
 18382  014FC0  0FF8               	addlw	-8
 18383  014FC2  6ED9               	movwf	fsr2l,c
 18384  014FC4  50E2               	movf	fsr1h,w,c
 18385  014FC6  6EDA               	movwf	fsr2h,c
 18386  014FC8  0EFF               	movlw	255
 18387  014FCA  22DA               	addwfc	fsr2h,f,c
 18388  014FCC  06DE               	decf	postinc2,f,c
 18389  014FCE  0E00               	movlw	0
 18390  014FD0  5ADD               	subwfb	postdec2,f,c
 18391                           
 18392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18393  014FD2  0E0A               	movlw	10
 18394  014FD4  6EE6               	movwf	postinc1,c
 18395  014FD6  0E00               	movlw	0
 18396  014FD8  6EE6               	movwf	postinc1,c
 18397  014FDA  0E00               	movlw	0
 18398  014FDC  6EE6               	movwf	postinc1,c
 18399  014FDE  0E00               	movlw	0
 18400  014FE0  6EE6               	movwf	postinc1,c
 18401  014FE2  0E00               	movlw	0
 18402  014FE4  6EE6               	movwf	postinc1,c
 18403  014FE6  0E00               	movlw	0
 18404  014FE8  6EE6               	movwf	postinc1,c
 18405  014FEA  0E00               	movlw	0
 18406  014FEC  6EE6               	movwf	postinc1,c
 18407  014FEE  0E00               	movlw	0
 18408  014FF0  6EE6               	movwf	postinc1,c
 18409                           
 18410                           ;stkvar	_n @ sp[(-26)+2]
 18411  014FF2  50E1               	movf	fsr1l,w,c
 18412  014FF4  0FE8               	addlw	-24
 18413  014FF6  6ED9               	movwf	fsr2l,c
 18414  014FF8  50E2               	movf	fsr1h,w,c
 18415  014FFA  6EDA               	movwf	fsr2h,c
 18416  014FFC  0EFF               	movlw	255
 18417  014FFE  22DA               	addwfc	fsr2h,f,c
 18418  015000  006F FF7B FFE6     	movff	postinc2,postinc1
 18419  015006  006F FF7B FFE6     	movff	postinc2,postinc1
 18420  01500C  006F FF7B FFE6     	movff	postinc2,postinc1
 18421  015012  006F FF7B FFE6     	movff	postinc2,postinc1
 18422  015018  006F FF7B FFE6     	movff	postinc2,postinc1
 18423  01501E  006F FF7B FFE6     	movff	postinc2,postinc1
 18424  015024  006F FF7B FFE6     	movff	postinc2,postinc1
 18425  01502A  006F FF7B FFE6     	movff	postinc2,postinc1
 18426  015030  ECD7  F0B5         	call	___aomod	;wreg free
 18427  015034  52E5               	movf	postdec1,f,c
 18428  015036  006F FF9C  F018    	movff	indf1,btemp+23
 18429  01503C  52E5               	movf	postdec1,f,c
 18430  01503E  006F FF9C  F017    	movff	indf1,btemp+22
 18431  015044  52E5               	movf	postdec1,f,c
 18432  015046  006F FF9C  F016    	movff	indf1,btemp+21
 18433  01504C  52E5               	movf	postdec1,f,c
 18434  01504E  006F FF9C  F015    	movff	indf1,btemp+20
 18435  015054  52E5               	movf	postdec1,f,c
 18436  015056  006F FF9C  F014    	movff	indf1,btemp+19
 18437  01505C  52E5               	movf	postdec1,f,c
 18438  01505E  006F FF9C  F013    	movff	indf1,btemp+18
 18439  015064  52E5               	movf	postdec1,f,c
 18440  015066  006F FF9C  F012    	movff	indf1,btemp+17
 18441  01506C  52E5               	movf	postdec1,f,c
 18442  01506E  006F FF9C  F011    	movff	indf1,btemp+16
 18443  015074  0EF8               	movlw	248
 18444  015076  26E1               	addwf	fsr1l,f,c
 18445  015078  0EFF               	movlw	255
 18446  01507A  22E2               	addwfc	fsr1h,f,c
 18447  01507C  0060  F044  F00B   	movff	btemp+16,btemp+10
 18448  015082  0060  F048  F00C   	movff	btemp+17,btemp+11
 18449  015088  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18450  01508E  0060  F033  FFE6   	movff	btemp+11,postinc1
 18451  015094  ECC8  F0D1         	call	_abs	;wreg free
 18452  015098  0E30               	movlw	48
 18453  01509A  2601               	addwf	btemp^0,f,c
 18454                           
 18455                           ;stkvar	_i @ sp[(-18)+10]
 18456  01509C  0EF8               	movlw	-8
 18457  01509E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18458  0150A4  0EF9               	movlw	-7
 18459  0150A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18460  0150AC  0E94               	movlw	low _dbuf
 18461  0150AE  240B               	addwf	(btemp+10)^0,w,c
 18462  0150B0  6ED9               	movwf	fsr2l,c
 18463  0150B2  0E03               	movlw	high _dbuf
 18464  0150B4  200C               	addwfc	(btemp+11)^0,w,c
 18465  0150B6  6EDA               	movwf	fsr2h,c
 18466  0150B8  0060  F007  FFDF   	movff	btemp,indf2
 18467                           
 18468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18469                           ;stkvar	_p @ sp[(-18)+16]
 18470  0150BE  50E1               	movf	fsr1l,w,c
 18471  0150C0  0FFE               	addlw	-2
 18472  0150C2  6ED9               	movwf	fsr2l,c
 18473  0150C4  50E2               	movf	fsr1h,w,c
 18474  0150C6  6EDA               	movwf	fsr2h,c
 18475  0150C8  0EFF               	movlw	255
 18476  0150CA  22DA               	addwfc	fsr2h,f,c
 18477  0150CC  06DE               	decf	postinc2,f,c
 18478  0150CE  0E00               	movlw	0
 18479  0150D0  5ADD               	subwfb	postdec2,f,c
 18480                           
 18481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18482                           ;stkvar	_w @ sp[(-18)+14]
 18483  0150D2  50E1               	movf	fsr1l,w,c
 18484  0150D4  0FFC               	addlw	-4
 18485  0150D6  6ED9               	movwf	fsr2l,c
 18486  0150D8  50E2               	movf	fsr1h,w,c
 18487  0150DA  6EDA               	movwf	fsr2h,c
 18488  0150DC  0EFF               	movlw	255
 18489  0150DE  22DA               	addwfc	fsr2h,f,c
 18490  0150E0  06DE               	decf	postinc2,f,c
 18491  0150E2  0E00               	movlw	0
 18492  0150E4  5ADD               	subwfb	postdec2,f,c
 18493                           
 18494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18495  0150E6  0E0A               	movlw	10
 18496  0150E8  6EE6               	movwf	postinc1,c
 18497  0150EA  0E00               	movlw	0
 18498  0150EC  6EE6               	movwf	postinc1,c
 18499  0150EE  0E00               	movlw	0
 18500  0150F0  6EE6               	movwf	postinc1,c
 18501  0150F2  0E00               	movlw	0
 18502  0150F4  6EE6               	movwf	postinc1,c
 18503  0150F6  0E00               	movlw	0
 18504  0150F8  6EE6               	movwf	postinc1,c
 18505  0150FA  0E00               	movlw	0
 18506  0150FC  6EE6               	movwf	postinc1,c
 18507  0150FE  0E00               	movlw	0
 18508  015100  6EE6               	movwf	postinc1,c
 18509  015102  0E00               	movlw	0
 18510  015104  6EE6               	movwf	postinc1,c
 18511                           
 18512                           ;stkvar	_n @ sp[(-26)+2]
 18513  015106  50E1               	movf	fsr1l,w,c
 18514  015108  0FE8               	addlw	-24
 18515  01510A  6ED9               	movwf	fsr2l,c
 18516  01510C  50E2               	movf	fsr1h,w,c
 18517  01510E  6EDA               	movwf	fsr2h,c
 18518  015110  0EFF               	movlw	255
 18519  015112  22DA               	addwfc	fsr2h,f,c
 18520  015114  006F FF7B FFE6     	movff	postinc2,postinc1
 18521  01511A  006F FF7B FFE6     	movff	postinc2,postinc1
 18522  015120  006F FF7B FFE6     	movff	postinc2,postinc1
 18523  015126  006F FF7B FFE6     	movff	postinc2,postinc1
 18524  01512C  006F FF7B FFE6     	movff	postinc2,postinc1
 18525  015132  006F FF7B FFE6     	movff	postinc2,postinc1
 18526  015138  006F FF7B FFE6     	movff	postinc2,postinc1
 18527  01513E  006F FF7B FFE6     	movff	postinc2,postinc1
 18528  015144  EC5D  F0B3         	call	___aodiv	;wreg free
 18529  015148  52E5               	movf	postdec1,f,c
 18530  01514A  006F FF9C  F018    	movff	indf1,btemp+23
 18531  015150  52E5               	movf	postdec1,f,c
 18532  015152  006F FF9C  F017    	movff	indf1,btemp+22
 18533  015158  52E5               	movf	postdec1,f,c
 18534  01515A  006F FF9C  F016    	movff	indf1,btemp+21
 18535  015160  52E5               	movf	postdec1,f,c
 18536  015162  006F FF9C  F015    	movff	indf1,btemp+20
 18537  015168  52E5               	movf	postdec1,f,c
 18538  01516A  006F FF9C  F014    	movff	indf1,btemp+19
 18539  015170  52E5               	movf	postdec1,f,c
 18540  015172  006F FF9C  F013    	movff	indf1,btemp+18
 18541  015178  52E5               	movf	postdec1,f,c
 18542  01517A  006F FF9C  F012    	movff	indf1,btemp+17
 18543  015180  52E5               	movf	postdec1,f,c
 18544  015182  006F FF9C  F011    	movff	indf1,btemp+16
 18545  015188  0EF8               	movlw	248
 18546  01518A  26E1               	addwf	fsr1l,f,c
 18547  01518C  0EFF               	movlw	255
 18548  01518E  22E2               	addwfc	fsr1h,f,c
 18549                           
 18550                           ;stkvar	_n @ sp[(-18)+2]
 18551  015190  0EF0               	movlw	-16
 18552  015192  0060  F047  FFE3   	movff	btemp+16,plusw1
 18553  015198  0EF1               	movlw	-15
 18554  01519A  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18555  0151A0  0EF2               	movlw	-14
 18556  0151A2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18557  0151A8  0EF3               	movlw	-13
 18558  0151AA  0060  F053  FFE3   	movff	btemp+19,plusw1
 18559  0151B0  0EF4               	movlw	-12
 18560  0151B2  0060  F057  FFE3   	movff	btemp+20,plusw1
 18561  0151B8  0EF5               	movlw	-11
 18562  0151BA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18563  0151C0  0EF6               	movlw	-10
 18564  0151C2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18565  0151C8  0EF7               	movlw	-9
 18566  0151CA  0060  F063  FFE3   	movff	btemp+23,plusw1
 18567  0151D0                     l11232:
 18568                           
 18569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18570                           ;stkvar	_i @ sp[(-18)+10]
 18571  0151D0  0EF9               	movlw	-7
 18572  0151D2  BEE3               	btfsc	plusw1,7,c
 18573  0151D4  D036               	goto	u10320
 18574  0151D6  0EF9               	movlw	-7
 18575  0151D8  50E3               	movf	plusw1,w,c
 18576  0151DA  E104               	bnz	u10280
 18577  0151DC  0EF8               	movlw	-8
 18578  0151DE  04E3               	decf	plusw1,w,c
 18579  0151E0  A0D8               	btfss	status,0,c
 18580  0151E2  D02F               	goto	u10320
 18581  0151E4                     u10280:
 18582                           
 18583                           ;stkvar	_n @ sp[(-18)+2]
 18584  0151E4  0EF0               	movlw	-16
 18585  0151E6  50E3               	movf	plusw1,w,c
 18586  0151E8  E115               	bnz	u10291
 18587  0151EA  0EF1               	movlw	-15
 18588  0151EC  50E3               	movf	plusw1,w,c
 18589  0151EE  E112               	bnz	u10291
 18590  0151F0  0EF2               	movlw	-14
 18591  0151F2  50E3               	movf	plusw1,w,c
 18592  0151F4  E10F               	bnz	u10291
 18593  0151F6  0EF3               	movlw	-13
 18594  0151F8  50E3               	movf	plusw1,w,c
 18595  0151FA  E10C               	bnz	u10291
 18596  0151FC  0EF4               	movlw	-12
 18597  0151FE  50E3               	movf	plusw1,w,c
 18598  015200  E109               	bnz	u10291
 18599  015202  0EF5               	movlw	-11
 18600  015204  50E3               	movf	plusw1,w,c
 18601  015206  E106               	bnz	u10291
 18602  015208  0EF6               	movlw	-10
 18603  01520A  50E3               	movf	plusw1,w,c
 18604  01520C  E103               	bnz	u10291
 18605  01520E  0EF7               	movlw	-9
 18606  015210  50E3               	movf	plusw1,w,c
 18607  015212  A4D8               	btfss	status,2,c
 18608  015214                     u10291:
 18609  015214  D6D4               	goto	l11222
 18610                           
 18611                           ;stkvar	_p @ sp[(-18)+16]
 18612  015216  0EFF               	movlw	-1
 18613  015218  BEE3               	btfsc	plusw1,7,c
 18614  01521A  D007               	goto	u10300
 18615  01521C  0EFF               	movlw	-1
 18616  01521E  50E3               	movf	plusw1,w,c
 18617  015220  E103               	bnz	u10301
 18618  015222  0EFE               	movlw	-2
 18619  015224  04E3               	decf	plusw1,w,c
 18620  015226  B0D8               	btfsc	status,0,c
 18621  015228                     u10301:
 18622  015228  D6CA               	goto	l11222
 18623  01522A                     u10300:
 18624                           
 18625                           ;stkvar	_w @ sp[(-18)+14]
 18626  01522A  0EFD               	movlw	-3
 18627  01522C  BEE3               	btfsc	plusw1,7,c
 18628  01522E  D009               	goto	u10320
 18629  015230  0EFD               	movlw	-3
 18630  015232  50E3               	movf	plusw1,w,c
 18631  015234  E104               	bnz	u10310
 18632  015236  0EFC               	movlw	-4
 18633  015238  04E3               	decf	plusw1,w,c
 18634  01523A  A0D8               	btfss	status,0,c
 18635  01523C  D002               	goto	u10320
 18636  01523E                     u10310:
 18637  01523E  B225               	btfsc	_flags^0,1,c
 18638  015240  D6BE               	goto	l11222
 18639  015242                     u10320:
 18640                           
 18641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18642                           ;stkvar	_s @ sp[(-18)+12]
 18643  015242  0EFA               	movlw	-6
 18644  015244  006F FF8C  F001    	movff	plusw1,btemp
 18645  01524A  0EFB               	movlw	-5
 18646  01524C  50E3               	movf	plusw1,w,c
 18647  01524E  1001               	iorwf	btemp^0,w,c
 18648  015250  A4D8               	btfss	status,2,c
 18649  015252  D002               	goto	u10340
 18650  015254  A425               	btfss	_flags^0,2,c
 18651  015256  D033               	goto	l11256
 18652  015258                     u10340:
 18653                           
 18654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18655                           ;stkvar	_i @ sp[(-18)+10]
 18656  015258  50E1               	movf	fsr1l,w,c
 18657  01525A  0FF8               	addlw	-8
 18658  01525C  6ED9               	movwf	fsr2l,c
 18659  01525E  50E2               	movf	fsr1h,w,c
 18660  015260  6EDA               	movwf	fsr2h,c
 18661  015262  0EFF               	movlw	255
 18662  015264  22DA               	addwfc	fsr2h,f,c
 18663  015266  06DE               	decf	postinc2,f,c
 18664  015268  0E00               	movlw	0
 18665  01526A  5ADD               	subwfb	postdec2,f,c
 18666                           
 18667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18668                           ;stkvar	_s @ sp[(-18)+12]
 18669  01526C  0EFA               	movlw	-6
 18670  01526E  006F FF8C  F001    	movff	plusw1,btemp
 18671  015274  0EFB               	movlw	-5
 18672  015276  50E3               	movf	plusw1,w,c
 18673  015278  1001               	iorwf	btemp^0,w,c
 18674  01527A  A4D8               	btfss	status,2,c
 18675  01527C  D002               	goto	l11252
 18676  01527E  0E2B               	movlw	43
 18677  015280  D001               	goto	L19
 18678  015282                     l11252:
 18679  015282  0E2D               	movlw	45
 18680  015284                     L19:
 18681  015284  6E0B               	movwf	(btemp+10)^0,c
 18682  015286  0E00               	movlw	0
 18683  015288  6E0C               	movwf	(btemp+11)^0,c
 18684                           
 18685                           ;stkvar	_dtoa$5262 @ sp[(-18)+0]
 18686  01528A  0EEE               	movlw	-18
 18687  01528C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18688  015292  0EEF               	movlw	-17
 18689  015294  0060  F033  FFE3   	movff	btemp+11,plusw1
 18690                           
 18691                           ;stkvar	_dtoa$5262 @ sp[(-18)+0]
 18692                           ;stkvar	_i @ sp[(-18)+10]
 18693  01529A  0EF8               	movlw	-8
 18694  01529C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18695  0152A2  0EF9               	movlw	-7
 18696  0152A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18697  0152AA  0E94               	movlw	low _dbuf
 18698  0152AC  240B               	addwf	(btemp+10)^0,w,c
 18699  0152AE  6ED9               	movwf	fsr2l,c
 18700  0152B0  0E03               	movlw	high _dbuf
 18701  0152B2  200C               	addwfc	(btemp+11)^0,w,c
 18702  0152B4  6EDA               	movwf	fsr2h,c
 18703  0152B6  0EEE               	movlw	-18
 18704  0152B8  006F FF8F FFDF     	movff	plusw1,indf2
 18705  0152BE                     l11256:
 18706                           
 18707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18708                           ;stkvar	_w @ sp[(-18)+14]
 18709  0152BE  0EFC               	movlw	-4
 18710  0152C0  006F FF8F FFE6     	movff	plusw1,postinc1
 18711  0152C6  006F FF8F FFE6     	movff	plusw1,postinc1
 18712                           
 18713                           ;stkvar	_i @ sp[(-20)+10]
 18714  0152CC  0E94               	movlw	low _dbuf
 18715  0152CE  6E0B               	movwf	(btemp+10)^0,c
 18716  0152D0  0E03               	movlw	high _dbuf
 18717  0152D2  6E0C               	movwf	(btemp+11)^0,c
 18718  0152D4  0EF6               	movlw	-10
 18719  0152D6  50E3               	movf	plusw1,w,c
 18720  0152D8  260B               	addwf	(btemp+10)^0,f,c
 18721  0152DA  0EF7               	movlw	-9
 18722  0152DC  50E3               	movf	plusw1,w,c
 18723  0152DE  220C               	addwfc	(btemp+11)^0,f,c
 18724  0152E0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18725  0152E6  0060  F033  FFE6   	movff	btemp+11,postinc1
 18726                           
 18727                           ;stkvar	_fp @ sp[(-22)+-2]
 18728  0152EC  0EE8               	movlw	-24
 18729  0152EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18730  0152F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18731  0152FA  EC95  F0C5         	call	_pad	;wreg free
 18732                           
 18733                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18734  0152FE  0EE4               	movlw	228
 18735  015300  26E1               	addwf	fsr1l,f,c
 18736  015302  0EFF               	movlw	255
 18737  015304  22E2               	addwfc	fsr1h,f,c
 18738  015306  0012               	return		;funcret
 18739  015308                     __end_of_dtoa:
 18740                           	opt callstack 0
 18741                           
 18742 ;; *************** function _abs *****************
 18743 ;; Defined at:
 18744 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18745 ;; Parameters:    Size  Location     Type
 18746 ;;  a               2  [STACK] int 
 18747 ;; Auto vars:     Size  Location     Type
 18748 ;;		None
 18749 ;; Return value:  Size  Location     Type
 18750 ;;                  2  [STACK] int 
 18751 ;; Registers used:
 18752 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18753 ;; Tracked objects:
 18754 ;;		On entry : 0/3
 18755 ;;		On exit  : 0/0
 18756 ;;		Unchanged: 0/0
 18757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18762 ;;Total ram usage:        0 bytes
 18763 ;; Hardware stack levels used:    1
 18764 ;; Hardware stack levels required when called:   15
 18765 ;; This function calls:
 18766 ;;		Nothing
 18767 ;; This function is called by:
 18768 ;;		_dtoa
 18769 ;; This function uses a reentrant model
 18770 ;;
 18771                           
 18772                           	psect	text66
 18773  01A390                     __ptext66:
 18774                           	opt callstack 0
 18775  01A390                     _abs:
 18776                           	opt callstack 0
 18777                           
 18778                           ;stkvar	_a @ sp[(0)+-2]
 18779                           
 18780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18781                           ;incstack = 0
 18782 ;; hardware stack exceeded
 18783  01A390  0EFF               	movlw	-1
 18784  01A392  BEE3               	btfsc	plusw1,7,c
 18785  01A394  D007               	goto	u5590
 18786  01A396  0EFF               	movlw	-1
 18787  01A398  50E3               	movf	plusw1,w,c
 18788  01A39A  E112               	bnz	l7552
 18789  01A39C  0EFE               	movlw	-2
 18790  01A39E  04E3               	decf	plusw1,w,c
 18791  01A3A0  B0D8               	btfsc	status,0,c
 18792  01A3A2  D00E               	goto	l7552
 18793  01A3A4                     u5590:
 18794                           
 18795                           ;stkvar	_a @ sp[(0)+-2]
 18796  01A3A4  0EFE               	movlw	-2
 18797  01A3A6  006F FF8C  F001    	movff	plusw1,btemp
 18798  01A3AC  1E01               	comf	btemp^0,f,c
 18799  01A3AE  0EFF               	movlw	-1
 18800  01A3B0  006F FF8C  F002    	movff	plusw1,btemp+1
 18801  01A3B6  1E02               	comf	(btemp+1)^0,f,c
 18802  01A3B8  2A01               	incf	btemp^0,f,c
 18803  01A3BA  B4D8               	btfsc	status,2,c
 18804  01A3BC  2A02               	incf	(btemp+1)^0,f,c
 18805  01A3BE  D008               	goto	l3010
 18806  01A3C0                     l7552:
 18807                           
 18808                           ;stkvar	_a @ sp[(0)+-2]
 18809  01A3C0  0EFE               	movlw	-2
 18810  01A3C2  006F FF8C  F001    	movff	plusw1,btemp
 18811  01A3C8  0EFF               	movlw	-1
 18812  01A3CA  006F FF8C  F002    	movff	plusw1,btemp+1
 18813  01A3D0                     l3010:
 18814                           
 18815                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18816  01A3D0  52E5               	movf	postdec1,f,c
 18817  01A3D2  52E5               	movf	postdec1,f,c
 18818  01A3D4  0012               	return		;funcret
 18819  01A3D6                     __end_of_abs:
 18820                           	opt callstack 0
 18821                           
 18822 ;; *************** function ___aomod *****************
 18823 ;; Defined at:
 18824 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18825 ;; Parameters:    Size  Location     Type
 18826 ;;  dividend        8  [STACK] long long 
 18827 ;;  divisor         8  [STACK] long long 
 18828 ;; Auto vars:     Size  Location     Type
 18829 ;;  sign            1  [STACK] unsigned char 
 18830 ;;  counter         1  [STACK] unsigned char 
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  8  [STACK] long long 
 18833 ;; Registers used:
 18834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/3
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18844 ;;Total ram usage:        0 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:   15
 18847 ;; This function calls:
 18848 ;;		Nothing
 18849 ;; This function is called by:
 18850 ;;		_dtoa
 18851 ;; This function uses a reentrant model
 18852 ;;
 18853                           
 18854                           	psect	text67
 18855  016BAE                     __ptext67:
 18856                           	opt callstack 0
 18857  016BAE                     ___aomod:
 18858                           	opt callstack 0
 18859                           
 18860                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18861  016BAE  52E6               	movf	postinc1,f,c
 18862  016BB0  52E6               	movf	postinc1,f,c
 18863                           
 18864                           ;stkvar	_sign @ sp[(-2)+0]
 18865                           
 18866                           ;incstack = 0
 18867 ;; hardware stack exceeded
 18868  016BB2  0EFE               	movlw	-2
 18869  016BB4  6AE3               	clrf	plusw1,c
 18870                           
 18871                           ;stkvar	_dividend @ sp[(-2)+-8]
 18872  016BB6  0EFD               	movlw	-3
 18873  016BB8  AEE3               	btfss	plusw1,7,c
 18874  016BBA  D028               	goto	l7710
 18875                           
 18876                           ;stkvar	_dividend @ sp[(-2)+-8]
 18877                           ;stkvar	_dividend @ sp[(-2)+-8]
 18878  016BBC  0EF6               	movlw	-10
 18879  016BBE  6CE3               	negf	plusw1,c
 18880  016BC0  0EF7               	movlw	-9
 18881  016BC2  1EE3               	comf	plusw1,f,c
 18882  016BC4  0EF8               	movlw	-8
 18883  016BC6  1EE3               	comf	plusw1,f,c
 18884  016BC8  0EF9               	movlw	-7
 18885  016BCA  1EE3               	comf	plusw1,f,c
 18886  016BCC  0EFA               	movlw	-6
 18887  016BCE  1EE3               	comf	plusw1,f,c
 18888  016BD0  0EFB               	movlw	-5
 18889  016BD2  1EE3               	comf	plusw1,f,c
 18890  016BD4  0EFC               	movlw	-4
 18891  016BD6  1EE3               	comf	plusw1,f,c
 18892  016BD8  0EFD               	movlw	-3
 18893  016BDA  1EE3               	comf	plusw1,f,c
 18894  016BDC  E314               	bnc	u6020
 18895  016BDE  0EF7               	movlw	-9
 18896  016BE0  2AE3               	incf	plusw1,f,c
 18897  016BE2  E311               	bnc	u6020
 18898  016BE4  0EF8               	movlw	-8
 18899  016BE6  2AE3               	incf	plusw1,f,c
 18900  016BE8  E30E               	bnc	u6020
 18901  016BEA  0EF9               	movlw	-7
 18902  016BEC  2AE3               	incf	plusw1,f,c
 18903  016BEE  E30B               	bnc	u6020
 18904  016BF0  0EFA               	movlw	-6
 18905  016BF2  2AE3               	incf	plusw1,f,c
 18906  016BF4  E308               	bnc	u6020
 18907  016BF6  0EFB               	movlw	-5
 18908  016BF8  2AE3               	incf	plusw1,f,c
 18909  016BFA  E305               	bnc	u6020
 18910  016BFC  0EFC               	movlw	-4
 18911  016BFE  2AE3               	incf	plusw1,f,c
 18912  016C00  E302               	bnc	u6020
 18913  016C02  0EFD               	movlw	-3
 18914  016C04  2AE3               	incf	plusw1,f,c
 18915  016C06                     u6020:
 18916                           
 18917                           ;stkvar	_sign @ sp[(-2)+0]
 18918  016C06  0EFE               	movlw	-2
 18919  016C08  6AE3               	clrf	plusw1,c
 18920  016C0A  2AE3               	incf	plusw1,f,c
 18921  016C0C                     l7710:
 18922                           
 18923                           ;stkvar	_divisor @ sp[(-2)+-16]
 18924  016C0C  0EF5               	movlw	-11
 18925  016C0E  AEE3               	btfss	plusw1,7,c
 18926  016C10  D025               	goto	u6040
 18927                           
 18928                           ;stkvar	_divisor @ sp[(-2)+-16]
 18929                           ;stkvar	_divisor @ sp[(-2)+-16]
 18930  016C12  0EEE               	movlw	-18
 18931  016C14  6CE3               	negf	plusw1,c
 18932  016C16  0EEF               	movlw	-17
 18933  016C18  1EE3               	comf	plusw1,f,c
 18934  016C1A  0EF0               	movlw	-16
 18935  016C1C  1EE3               	comf	plusw1,f,c
 18936  016C1E  0EF1               	movlw	-15
 18937  016C20  1EE3               	comf	plusw1,f,c
 18938  016C22  0EF2               	movlw	-14
 18939  016C24  1EE3               	comf	plusw1,f,c
 18940  016C26  0EF3               	movlw	-13
 18941  016C28  1EE3               	comf	plusw1,f,c
 18942  016C2A  0EF4               	movlw	-12
 18943  016C2C  1EE3               	comf	plusw1,f,c
 18944  016C2E  0EF5               	movlw	-11
 18945  016C30  1EE3               	comf	plusw1,f,c
 18946  016C32  E314               	bnc	u6040
 18947  016C34  0EEF               	movlw	-17
 18948  016C36  2AE3               	incf	plusw1,f,c
 18949  016C38  E311               	bnc	u6040
 18950  016C3A  0EF0               	movlw	-16
 18951  016C3C  2AE3               	incf	plusw1,f,c
 18952  016C3E  E30E               	bnc	u6040
 18953  016C40  0EF1               	movlw	-15
 18954  016C42  2AE3               	incf	plusw1,f,c
 18955  016C44  E30B               	bnc	u6040
 18956  016C46  0EF2               	movlw	-14
 18957  016C48  2AE3               	incf	plusw1,f,c
 18958  016C4A  E308               	bnc	u6040
 18959  016C4C  0EF3               	movlw	-13
 18960  016C4E  2AE3               	incf	plusw1,f,c
 18961  016C50  E305               	bnc	u6040
 18962  016C52  0EF4               	movlw	-12
 18963  016C54  2AE3               	incf	plusw1,f,c
 18964  016C56  E302               	bnc	u6040
 18965  016C58  0EF5               	movlw	-11
 18966  016C5A  2AE3               	incf	plusw1,f,c
 18967  016C5C                     u6040:
 18968                           
 18969                           ;stkvar	_divisor @ sp[(-2)+-16]
 18970  016C5C  0EEE               	movlw	-18
 18971  016C5E  50E3               	movf	plusw1,w,c
 18972  016C60  E116               	bnz	u6050
 18973  016C62  0EEF               	movlw	-17
 18974  016C64  50E3               	movf	plusw1,w,c
 18975  016C66  E113               	bnz	u6050
 18976  016C68  0EF0               	movlw	-16
 18977  016C6A  50E3               	movf	plusw1,w,c
 18978  016C6C  E110               	bnz	u6050
 18979  016C6E  0EF1               	movlw	-15
 18980  016C70  50E3               	movf	plusw1,w,c
 18981  016C72  E10D               	bnz	u6050
 18982  016C74  0EF2               	movlw	-14
 18983  016C76  50E3               	movf	plusw1,w,c
 18984  016C78  E10A               	bnz	u6050
 18985  016C7A  0EF3               	movlw	-13
 18986  016C7C  50E3               	movf	plusw1,w,c
 18987  016C7E  E107               	bnz	u6050
 18988  016C80  0EF4               	movlw	-12
 18989  016C82  50E3               	movf	plusw1,w,c
 18990  016C84  E104               	bnz	u6050
 18991  016C86  0EF5               	movlw	-11
 18992  016C88  50E3               	movf	plusw1,w,c
 18993  016C8A  B4D8               	btfsc	status,2,c
 18994  016C8C  D075               	goto	u6080
 18995  016C8E                     u6050:
 18996                           
 18997                           ;stkvar	_counter @ sp[(-2)+1]
 18998  016C8E  0EFF               	movlw	-1
 18999  016C90  6AE3               	clrf	plusw1,c
 19000  016C92  D012               	goto	L20
 19001  016C94                     l7718:
 19002                           
 19003                           ;stkvar	_divisor @ sp[(-2)+-16]
 19004  016C94  90D8               	bcf	status,0,c
 19005  016C96  0EEE               	movlw	-18
 19006  016C98  36E3               	rlcf	plusw1,f,c
 19007  016C9A  0EEF               	movlw	-17
 19008  016C9C  36E3               	rlcf	plusw1,f,c
 19009  016C9E  0EF0               	movlw	-16
 19010  016CA0  36E3               	rlcf	plusw1,f,c
 19011  016CA2  0EF1               	movlw	-15
 19012  016CA4  36E3               	rlcf	plusw1,f,c
 19013  016CA6  0EF2               	movlw	-14
 19014  016CA8  36E3               	rlcf	plusw1,f,c
 19015  016CAA  0EF3               	movlw	-13
 19016  016CAC  36E3               	rlcf	plusw1,f,c
 19017  016CAE  0EF4               	movlw	-12
 19018  016CB0  36E3               	rlcf	plusw1,f,c
 19019  016CB2  0EF5               	movlw	-11
 19020  016CB4  36E3               	rlcf	plusw1,f,c
 19021                           
 19022                           ;stkvar	_counter @ sp[(-2)+1]
 19023  016CB6  0EFF               	movlw	-1
 19024  016CB8                     L20:
 19025  016CB8  2AE3               	incf	plusw1,f,c
 19026                           
 19027                           ;stkvar	_divisor @ sp[(-2)+-16]
 19028  016CBA  0EF5               	movlw	-11
 19029  016CBC  AEE3               	btfss	plusw1,7,c
 19030  016CBE  D7EA               	goto	l7718
 19031  016CC0                     u6060:
 19032                           
 19033                           ;stkvar	_divisor @ sp[(-2)+-16]
 19034                           ;stkvar	_dividend @ sp[(-2)+-8]
 19035  016CC0  50E1               	movf	fsr1l,w,c
 19036  016CC2  0FF6               	addlw	-10
 19037  016CC4  6ED9               	movwf	fsr2l,c
 19038  016CC6  50E2               	movf	fsr1h,w,c
 19039  016CC8  6EDA               	movwf	fsr2h,c
 19040  016CCA  0EFF               	movlw	255
 19041  016CCC  22DA               	addwfc	fsr2h,f,c
 19042  016CCE  0EEE               	movlw	-18
 19043  016CD0  50E3               	movf	plusw1,w,c
 19044  016CD2  5CDE               	subwf	postinc2,w,c
 19045  016CD4  0EEF               	movlw	-17
 19046  016CD6  50E3               	movf	plusw1,w,c
 19047  016CD8  58DE               	subwfb	postinc2,w,c
 19048  016CDA  0EF0               	movlw	-16
 19049  016CDC  50E3               	movf	plusw1,w,c
 19050  016CDE  58DE               	subwfb	postinc2,w,c
 19051  016CE0  0EF1               	movlw	-15
 19052  016CE2  50E3               	movf	plusw1,w,c
 19053  016CE4  58DE               	subwfb	postinc2,w,c
 19054  016CE6  0EF2               	movlw	-14
 19055  016CE8  50E3               	movf	plusw1,w,c
 19056  016CEA  58DE               	subwfb	postinc2,w,c
 19057  016CEC  0EF3               	movlw	-13
 19058  016CEE  50E3               	movf	plusw1,w,c
 19059  016CF0  58DE               	subwfb	postinc2,w,c
 19060  016CF2  0EF4               	movlw	-12
 19061  016CF4  50E3               	movf	plusw1,w,c
 19062  016CF6  58DE               	subwfb	postinc2,w,c
 19063  016CF8  0EF5               	movlw	-11
 19064  016CFA  50E3               	movf	plusw1,w,c
 19065  016CFC  58DE               	subwfb	postinc2,w,c
 19066  016CFE  A0D8               	btfss	status,0,c
 19067  016D00  D01F               	goto	l7726
 19068                           
 19069                           ;stkvar	_divisor @ sp[(-2)+-16]
 19070                           ;stkvar	_dividend @ sp[(-2)+-8]
 19071  016D02  50E1               	movf	fsr1l,w,c
 19072  016D04  0FF6               	addlw	-10
 19073  016D06  6ED9               	movwf	fsr2l,c
 19074  016D08  50E2               	movf	fsr1h,w,c
 19075  016D0A  6EDA               	movwf	fsr2h,c
 19076  016D0C  0EFF               	movlw	255
 19077  016D0E  22DA               	addwfc	fsr2h,f,c
 19078  016D10  0EEE               	movlw	-18
 19079  016D12  50E3               	movf	plusw1,w,c
 19080  016D14  5EDE               	subwf	postinc2,f,c
 19081  016D16  0EEF               	movlw	-17
 19082  016D18  50E3               	movf	plusw1,w,c
 19083  016D1A  5ADE               	subwfb	postinc2,f,c
 19084  016D1C  0EF0               	movlw	-16
 19085  016D1E  50E3               	movf	plusw1,w,c
 19086  016D20  5ADE               	subwfb	postinc2,f,c
 19087  016D22  0EF1               	movlw	-15
 19088  016D24  50E3               	movf	plusw1,w,c
 19089  016D26  5ADE               	subwfb	postinc2,f,c
 19090  016D28  0EF2               	movlw	-14
 19091  016D2A  50E3               	movf	plusw1,w,c
 19092  016D2C  5ADE               	subwfb	postinc2,f,c
 19093  016D2E  0EF3               	movlw	-13
 19094  016D30  50E3               	movf	plusw1,w,c
 19095  016D32  5ADE               	subwfb	postinc2,f,c
 19096  016D34  0EF4               	movlw	-12
 19097  016D36  50E3               	movf	plusw1,w,c
 19098  016D38  5ADE               	subwfb	postinc2,f,c
 19099  016D3A  0EF5               	movlw	-11
 19100  016D3C  50E3               	movf	plusw1,w,c
 19101  016D3E  5ADE               	subwfb	postinc2,f,c
 19102  016D40                     l7726:
 19103                           
 19104                           ;stkvar	_divisor @ sp[(-2)+-16]
 19105  016D40  90D8               	bcf	status,0,c
 19106  016D42  0EF5               	movlw	-11
 19107  016D44  32E3               	rrcf	plusw1,f,c
 19108  016D46  0EF4               	movlw	-12
 19109  016D48  32E3               	rrcf	plusw1,f,c
 19110  016D4A  0EF3               	movlw	-13
 19111  016D4C  32E3               	rrcf	plusw1,f,c
 19112  016D4E  0EF2               	movlw	-14
 19113  016D50  32E3               	rrcf	plusw1,f,c
 19114  016D52  0EF1               	movlw	-15
 19115  016D54  32E3               	rrcf	plusw1,f,c
 19116  016D56  0EF0               	movlw	-16
 19117  016D58  32E3               	rrcf	plusw1,f,c
 19118  016D5A  0EEF               	movlw	-17
 19119  016D5C  32E3               	rrcf	plusw1,f,c
 19120  016D5E  0EEE               	movlw	-18
 19121  016D60  32E3               	rrcf	plusw1,f,c
 19122                           
 19123                           ;stkvar	_counter @ sp[(-2)+1]
 19124  016D62  0EFF               	movlw	-1
 19125  016D64  50E3               	movf	plusw1,w,c
 19126  016D66  6E01               	movwf	btemp^0,c
 19127  016D68  0E01               	movlw	1
 19128  016D6A  5E01               	subwf	btemp^0,f,c
 19129  016D6C  0EFF               	movlw	-1
 19130  016D6E  0060  F007  FFE3   	movff	btemp,plusw1
 19131  016D74  A4D8               	btfss	status,2,c
 19132  016D76  D7A4               	goto	u6060
 19133  016D78                     u6080:
 19134                           
 19135                           ;stkvar	_sign @ sp[(-2)+0]
 19136  016D78  0EFE               	movlw	-2
 19137  016D7A  50E3               	movf	plusw1,w,c
 19138  016D7C  B4D8               	btfsc	status,2,c
 19139  016D7E  D025               	goto	u6100
 19140                           
 19141                           ;stkvar	_dividend @ sp[(-2)+-8]
 19142                           ;stkvar	_dividend @ sp[(-2)+-8]
 19143  016D80  0EF6               	movlw	-10
 19144  016D82  6CE3               	negf	plusw1,c
 19145  016D84  0EF7               	movlw	-9
 19146  016D86  1EE3               	comf	plusw1,f,c
 19147  016D88  0EF8               	movlw	-8
 19148  016D8A  1EE3               	comf	plusw1,f,c
 19149  016D8C  0EF9               	movlw	-7
 19150  016D8E  1EE3               	comf	plusw1,f,c
 19151  016D90  0EFA               	movlw	-6
 19152  016D92  1EE3               	comf	plusw1,f,c
 19153  016D94  0EFB               	movlw	-5
 19154  016D96  1EE3               	comf	plusw1,f,c
 19155  016D98  0EFC               	movlw	-4
 19156  016D9A  1EE3               	comf	plusw1,f,c
 19157  016D9C  0EFD               	movlw	-3
 19158  016D9E  1EE3               	comf	plusw1,f,c
 19159  016DA0  E314               	bnc	u6100
 19160  016DA2  0EF7               	movlw	-9
 19161  016DA4  2AE3               	incf	plusw1,f,c
 19162  016DA6  E311               	bnc	u6100
 19163  016DA8  0EF8               	movlw	-8
 19164  016DAA  2AE3               	incf	plusw1,f,c
 19165  016DAC  E30E               	bnc	u6100
 19166  016DAE  0EF9               	movlw	-7
 19167  016DB0  2AE3               	incf	plusw1,f,c
 19168  016DB2  E30B               	bnc	u6100
 19169  016DB4  0EFA               	movlw	-6
 19170  016DB6  2AE3               	incf	plusw1,f,c
 19171  016DB8  E308               	bnc	u6100
 19172  016DBA  0EFB               	movlw	-5
 19173  016DBC  2AE3               	incf	plusw1,f,c
 19174  016DBE  E305               	bnc	u6100
 19175  016DC0  0EFC               	movlw	-4
 19176  016DC2  2AE3               	incf	plusw1,f,c
 19177  016DC4  E302               	bnc	u6100
 19178  016DC6  0EFD               	movlw	-3
 19179  016DC8  2AE3               	incf	plusw1,f,c
 19180  016DCA                     u6100:
 19181                           
 19182                           ;stkvar	_dividend @ sp[(-2)+-8]
 19183  016DCA  0EF6               	movlw	246
 19184  016DCC  24E1               	addwf	fsr1l,w,c
 19185  016DCE  6ED9               	movwf	fsr2l,c
 19186  016DD0  0EFF               	movlw	255
 19187  016DD2  20E2               	addwfc	fsr1h,w,c
 19188  016DD4  6EDA               	movwf	fsr2h,c
 19189                           
 19190                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19191  016DD6  0E08               	movlw	8
 19192  016DD8  6E01               	movwf	btemp^0,c
 19193  016DDA  0EF6               	movlw	-10
 19194  016DDC                     us611999:
 19195  016DDC  006F FF7B FFE3     	movff	postinc2,plusw1
 19196  016DE2  28E8               	incf	wreg,w,c
 19197  016DE4  2E01               	decfsz	btemp^0,f,c
 19198  016DE6  D7FA               	bra	us611999
 19199                           
 19200                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19201  016DE8  52E5               	movf	postdec1,f,c
 19202  016DEA  52E5               	movf	postdec1,f,c
 19203  016DEC  0012               	return		;funcret
 19204  016DEE                     __end_of___aomod:
 19205                           	opt callstack 0
 19206                           
 19207 ;; *************** function ___aodiv *****************
 19208 ;; Defined at:
 19209 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19210 ;; Parameters:    Size  Location     Type
 19211 ;;  dividend        8  [STACK] long long 
 19212 ;;  divisor         8  [STACK] long long 
 19213 ;; Auto vars:     Size  Location     Type
 19214 ;;  quotient        8  [STACK] long long 
 19215 ;;  sign            1  [STACK] unsigned char 
 19216 ;;  counter         1  [STACK] unsigned char 
 19217 ;; Return value:  Size  Location     Type
 19218 ;;                  8  [STACK] long long 
 19219 ;; Registers used:
 19220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19221 ;; Tracked objects:
 19222 ;;		On entry : 0/3
 19223 ;;		On exit  : 0/0
 19224 ;;		Unchanged: 0/0
 19225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19230 ;;Total ram usage:        0 bytes
 19231 ;; Hardware stack levels used:    1
 19232 ;; Hardware stack levels required when called:   15
 19233 ;; This function calls:
 19234 ;;		Nothing
 19235 ;; This function is called by:
 19236 ;;		_dtoa
 19237 ;; This function uses a reentrant model
 19238 ;;
 19239                           
 19240                           	psect	text68
 19241  0166BA                     __ptext68:
 19242                           	opt callstack 0
 19243  0166BA                     ___aodiv:
 19244                           	opt callstack 0
 19245                           
 19246                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 19247  0166BA  0E0A               	movlw	10
 19248  0166BC  26E1               	addwf	fsr1l,f,c
 19249  0166BE  0E00               	movlw	0
 19250  0166C0  22E2               	addwfc	fsr1h,f,c
 19251                           
 19252                           ;stkvar	_sign @ sp[(-10)+8]
 19253                           
 19254                           ;incstack = 0
 19255 ;; hardware stack exceeded
 19256  0166C2  0EFE               	movlw	-2
 19257  0166C4  6AE3               	clrf	plusw1,c
 19258                           
 19259                           ;stkvar	_divisor @ sp[(-10)+-16]
 19260  0166C6  0EED               	movlw	-19
 19261  0166C8  AEE3               	btfss	plusw1,7,c
 19262  0166CA  D028               	goto	l7666
 19263                           
 19264                           ;stkvar	_divisor @ sp[(-10)+-16]
 19265                           ;stkvar	_divisor @ sp[(-10)+-16]
 19266  0166CC  0EE6               	movlw	-26
 19267  0166CE  6CE3               	negf	plusw1,c
 19268  0166D0  0EE7               	movlw	-25
 19269  0166D2  1EE3               	comf	plusw1,f,c
 19270  0166D4  0EE8               	movlw	-24
 19271  0166D6  1EE3               	comf	plusw1,f,c
 19272  0166D8  0EE9               	movlw	-23
 19273  0166DA  1EE3               	comf	plusw1,f,c
 19274  0166DC  0EEA               	movlw	-22
 19275  0166DE  1EE3               	comf	plusw1,f,c
 19276  0166E0  0EEB               	movlw	-21
 19277  0166E2  1EE3               	comf	plusw1,f,c
 19278  0166E4  0EEC               	movlw	-20
 19279  0166E6  1EE3               	comf	plusw1,f,c
 19280  0166E8  0EED               	movlw	-19
 19281  0166EA  1EE3               	comf	plusw1,f,c
 19282  0166EC  E314               	bnc	u5900
 19283  0166EE  0EE7               	movlw	-25
 19284  0166F0  2AE3               	incf	plusw1,f,c
 19285  0166F2  E311               	bnc	u5900
 19286  0166F4  0EE8               	movlw	-24
 19287  0166F6  2AE3               	incf	plusw1,f,c
 19288  0166F8  E30E               	bnc	u5900
 19289  0166FA  0EE9               	movlw	-23
 19290  0166FC  2AE3               	incf	plusw1,f,c
 19291  0166FE  E30B               	bnc	u5900
 19292  016700  0EEA               	movlw	-22
 19293  016702  2AE3               	incf	plusw1,f,c
 19294  016704  E308               	bnc	u5900
 19295  016706  0EEB               	movlw	-21
 19296  016708  2AE3               	incf	plusw1,f,c
 19297  01670A  E305               	bnc	u5900
 19298  01670C  0EEC               	movlw	-20
 19299  01670E  2AE3               	incf	plusw1,f,c
 19300  016710  E302               	bnc	u5900
 19301  016712  0EED               	movlw	-19
 19302  016714  2AE3               	incf	plusw1,f,c
 19303  016716                     u5900:
 19304                           
 19305                           ;stkvar	_sign @ sp[(-10)+8]
 19306  016716  0EFE               	movlw	-2
 19307  016718  6AE3               	clrf	plusw1,c
 19308  01671A  2AE3               	incf	plusw1,f,c
 19309  01671C                     l7666:
 19310                           
 19311                           ;stkvar	_dividend @ sp[(-10)+-8]
 19312  01671C  0EF5               	movlw	-11
 19313  01671E  AEE3               	btfss	plusw1,7,c
 19314  016720  D027               	goto	l7672
 19315                           
 19316                           ;stkvar	_dividend @ sp[(-10)+-8]
 19317                           ;stkvar	_dividend @ sp[(-10)+-8]
 19318  016722  0EEE               	movlw	-18
 19319  016724  6CE3               	negf	plusw1,c
 19320  016726  0EEF               	movlw	-17
 19321  016728  1EE3               	comf	plusw1,f,c
 19322  01672A  0EF0               	movlw	-16
 19323  01672C  1EE3               	comf	plusw1,f,c
 19324  01672E  0EF1               	movlw	-15
 19325  016730  1EE3               	comf	plusw1,f,c
 19326  016732  0EF2               	movlw	-14
 19327  016734  1EE3               	comf	plusw1,f,c
 19328  016736  0EF3               	movlw	-13
 19329  016738  1EE3               	comf	plusw1,f,c
 19330  01673A  0EF4               	movlw	-12
 19331  01673C  1EE3               	comf	plusw1,f,c
 19332  01673E  0EF5               	movlw	-11
 19333  016740  1EE3               	comf	plusw1,f,c
 19334  016742  E314               	bnc	u5920
 19335  016744  0EEF               	movlw	-17
 19336  016746  2AE3               	incf	plusw1,f,c
 19337  016748  E311               	bnc	u5920
 19338  01674A  0EF0               	movlw	-16
 19339  01674C  2AE3               	incf	plusw1,f,c
 19340  01674E  E30E               	bnc	u5920
 19341  016750  0EF1               	movlw	-15
 19342  016752  2AE3               	incf	plusw1,f,c
 19343  016754  E30B               	bnc	u5920
 19344  016756  0EF2               	movlw	-14
 19345  016758  2AE3               	incf	plusw1,f,c
 19346  01675A  E308               	bnc	u5920
 19347  01675C  0EF3               	movlw	-13
 19348  01675E  2AE3               	incf	plusw1,f,c
 19349  016760  E305               	bnc	u5920
 19350  016762  0EF4               	movlw	-12
 19351  016764  2AE3               	incf	plusw1,f,c
 19352  016766  E302               	bnc	u5920
 19353  016768  0EF5               	movlw	-11
 19354  01676A  2AE3               	incf	plusw1,f,c
 19355  01676C                     u5920:
 19356                           
 19357                           ;stkvar	_sign @ sp[(-10)+8]
 19358  01676C  0EFE               	movlw	-2
 19359  01676E  70E3               	btg	plusw1,0,c
 19360  016770                     l7672:
 19361                           
 19362                           ;stkvar	_quotient @ sp[(-10)+0]
 19363  016770  0E07               	movlw	7
 19364  016772  6E01               	movwf	btemp^0,c
 19365  016774  0EF6               	movlw	-10
 19366  016776                     u5931:
 19367  016776  6AE3               	clrf	plusw1,c
 19368  016778  2AE8               	incf	wreg,f,c
 19369  01677A  0601               	decf	btemp^0,f,c
 19370  01677C  E2FC               	bc	u5931
 19371                           
 19372                           ;stkvar	_divisor @ sp[(-10)+-16]
 19373  01677E  0EE6               	movlw	-26
 19374  016780  50E3               	movf	plusw1,w,c
 19375  016782  E116               	bnz	u5940
 19376  016784  0EE7               	movlw	-25
 19377  016786  50E3               	movf	plusw1,w,c
 19378  016788  E113               	bnz	u5940
 19379  01678A  0EE8               	movlw	-24
 19380  01678C  50E3               	movf	plusw1,w,c
 19381  01678E  E110               	bnz	u5940
 19382  016790  0EE9               	movlw	-23
 19383  016792  50E3               	movf	plusw1,w,c
 19384  016794  E10D               	bnz	u5940
 19385  016796  0EEA               	movlw	-22
 19386  016798  50E3               	movf	plusw1,w,c
 19387  01679A  E10A               	bnz	u5940
 19388  01679C  0EEB               	movlw	-21
 19389  01679E  50E3               	movf	plusw1,w,c
 19390  0167A0  E107               	bnz	u5940
 19391  0167A2  0EEC               	movlw	-20
 19392  0167A4  50E3               	movf	plusw1,w,c
 19393  0167A6  E104               	bnz	u5940
 19394  0167A8  0EED               	movlw	-19
 19395  0167AA  50E3               	movf	plusw1,w,c
 19396  0167AC  B4D8               	btfsc	status,2,c
 19397  0167AE  D088               	goto	u5970
 19398  0167B0                     u5940:
 19399                           
 19400                           ;stkvar	_counter @ sp[(-10)+9]
 19401  0167B0  0EFF               	movlw	-1
 19402  0167B2  6AE3               	clrf	plusw1,c
 19403  0167B4  D012               	goto	L21
 19404  0167B6                     l7678:
 19405                           
 19406                           ;stkvar	_divisor @ sp[(-10)+-16]
 19407  0167B6  90D8               	bcf	status,0,c
 19408  0167B8  0EE6               	movlw	-26
 19409  0167BA  36E3               	rlcf	plusw1,f,c
 19410  0167BC  0EE7               	movlw	-25
 19411  0167BE  36E3               	rlcf	plusw1,f,c
 19412  0167C0  0EE8               	movlw	-24
 19413  0167C2  36E3               	rlcf	plusw1,f,c
 19414  0167C4  0EE9               	movlw	-23
 19415  0167C6  36E3               	rlcf	plusw1,f,c
 19416  0167C8  0EEA               	movlw	-22
 19417  0167CA  36E3               	rlcf	plusw1,f,c
 19418  0167CC  0EEB               	movlw	-21
 19419  0167CE  36E3               	rlcf	plusw1,f,c
 19420  0167D0  0EEC               	movlw	-20
 19421  0167D2  36E3               	rlcf	plusw1,f,c
 19422  0167D4  0EED               	movlw	-19
 19423  0167D6  36E3               	rlcf	plusw1,f,c
 19424                           
 19425                           ;stkvar	_counter @ sp[(-10)+9]
 19426  0167D8  0EFF               	movlw	-1
 19427  0167DA                     L21:
 19428  0167DA  2AE3               	incf	plusw1,f,c
 19429                           
 19430                           ;stkvar	_divisor @ sp[(-10)+-16]
 19431  0167DC  0EED               	movlw	-19
 19432  0167DE  AEE3               	btfss	plusw1,7,c
 19433  0167E0  D7EA               	goto	l7678
 19434  0167E2                     u5950:
 19435                           
 19436                           ;stkvar	_quotient @ sp[(-10)+0]
 19437  0167E2  90D8               	bcf	status,0,c
 19438  0167E4  0EF6               	movlw	-10
 19439  0167E6  36E3               	rlcf	plusw1,f,c
 19440  0167E8  0EF7               	movlw	-9
 19441  0167EA  36E3               	rlcf	plusw1,f,c
 19442  0167EC  0EF8               	movlw	-8
 19443  0167EE  36E3               	rlcf	plusw1,f,c
 19444  0167F0  0EF9               	movlw	-7
 19445  0167F2  36E3               	rlcf	plusw1,f,c
 19446  0167F4  0EFA               	movlw	-6
 19447  0167F6  36E3               	rlcf	plusw1,f,c
 19448  0167F8  0EFB               	movlw	-5
 19449  0167FA  36E3               	rlcf	plusw1,f,c
 19450  0167FC  0EFC               	movlw	-4
 19451  0167FE  36E3               	rlcf	plusw1,f,c
 19452  016800  0EFD               	movlw	-3
 19453  016802  36E3               	rlcf	plusw1,f,c
 19454                           
 19455                           ;stkvar	_divisor @ sp[(-10)+-16]
 19456                           ;stkvar	_dividend @ sp[(-10)+-8]
 19457  016804  50E1               	movf	fsr1l,w,c
 19458  016806  0FEE               	addlw	-18
 19459  016808  6ED9               	movwf	fsr2l,c
 19460  01680A  50E2               	movf	fsr1h,w,c
 19461  01680C  6EDA               	movwf	fsr2h,c
 19462  01680E  0EFF               	movlw	255
 19463  016810  22DA               	addwfc	fsr2h,f,c
 19464  016812  0EE6               	movlw	-26
 19465  016814  50E3               	movf	plusw1,w,c
 19466  016816  5CDE               	subwf	postinc2,w,c
 19467  016818  0EE7               	movlw	-25
 19468  01681A  50E3               	movf	plusw1,w,c
 19469  01681C  58DE               	subwfb	postinc2,w,c
 19470  01681E  0EE8               	movlw	-24
 19471  016820  50E3               	movf	plusw1,w,c
 19472  016822  58DE               	subwfb	postinc2,w,c
 19473  016824  0EE9               	movlw	-23
 19474  016826  50E3               	movf	plusw1,w,c
 19475  016828  58DE               	subwfb	postinc2,w,c
 19476  01682A  0EEA               	movlw	-22
 19477  01682C  50E3               	movf	plusw1,w,c
 19478  01682E  58DE               	subwfb	postinc2,w,c
 19479  016830  0EEB               	movlw	-21
 19480  016832  50E3               	movf	plusw1,w,c
 19481  016834  58DE               	subwfb	postinc2,w,c
 19482  016836  0EEC               	movlw	-20
 19483  016838  50E3               	movf	plusw1,w,c
 19484  01683A  58DE               	subwfb	postinc2,w,c
 19485  01683C  0EED               	movlw	-19
 19486  01683E  50E3               	movf	plusw1,w,c
 19487  016840  58DE               	subwfb	postinc2,w,c
 19488  016842  A0D8               	btfss	status,0,c
 19489  016844  D021               	goto	l7690
 19490                           
 19491                           ;stkvar	_divisor @ sp[(-10)+-16]
 19492                           ;stkvar	_dividend @ sp[(-10)+-8]
 19493  016846  50E1               	movf	fsr1l,w,c
 19494  016848  0FEE               	addlw	-18
 19495  01684A  6ED9               	movwf	fsr2l,c
 19496  01684C  50E2               	movf	fsr1h,w,c
 19497  01684E  6EDA               	movwf	fsr2h,c
 19498  016850  0EFF               	movlw	255
 19499  016852  22DA               	addwfc	fsr2h,f,c
 19500  016854  0EE6               	movlw	-26
 19501  016856  50E3               	movf	plusw1,w,c
 19502  016858  5EDE               	subwf	postinc2,f,c
 19503  01685A  0EE7               	movlw	-25
 19504  01685C  50E3               	movf	plusw1,w,c
 19505  01685E  5ADE               	subwfb	postinc2,f,c
 19506  016860  0EE8               	movlw	-24
 19507  016862  50E3               	movf	plusw1,w,c
 19508  016864  5ADE               	subwfb	postinc2,f,c
 19509  016866  0EE9               	movlw	-23
 19510  016868  50E3               	movf	plusw1,w,c
 19511  01686A  5ADE               	subwfb	postinc2,f,c
 19512  01686C  0EEA               	movlw	-22
 19513  01686E  50E3               	movf	plusw1,w,c
 19514  016870  5ADE               	subwfb	postinc2,f,c
 19515  016872  0EEB               	movlw	-21
 19516  016874  50E3               	movf	plusw1,w,c
 19517  016876  5ADE               	subwfb	postinc2,f,c
 19518  016878  0EEC               	movlw	-20
 19519  01687A  50E3               	movf	plusw1,w,c
 19520  01687C  5ADE               	subwfb	postinc2,f,c
 19521  01687E  0EED               	movlw	-19
 19522  016880  50E3               	movf	plusw1,w,c
 19523  016882  5ADE               	subwfb	postinc2,f,c
 19524                           
 19525                           ;stkvar	_quotient @ sp[(-10)+0]
 19526  016884  0EF6               	movlw	-10
 19527  016886  80E3               	bsf	plusw1,0,c
 19528  016888                     l7690:
 19529                           
 19530                           ;stkvar	_divisor @ sp[(-10)+-16]
 19531  016888  90D8               	bcf	status,0,c
 19532  01688A  0EED               	movlw	-19
 19533  01688C  32E3               	rrcf	plusw1,f,c
 19534  01688E  0EEC               	movlw	-20
 19535  016890  32E3               	rrcf	plusw1,f,c
 19536  016892  0EEB               	movlw	-21
 19537  016894  32E3               	rrcf	plusw1,f,c
 19538  016896  0EEA               	movlw	-22
 19539  016898  32E3               	rrcf	plusw1,f,c
 19540  01689A  0EE9               	movlw	-23
 19541  01689C  32E3               	rrcf	plusw1,f,c
 19542  01689E  0EE8               	movlw	-24
 19543  0168A0  32E3               	rrcf	plusw1,f,c
 19544  0168A2  0EE7               	movlw	-25
 19545  0168A4  32E3               	rrcf	plusw1,f,c
 19546  0168A6  0EE6               	movlw	-26
 19547  0168A8  32E3               	rrcf	plusw1,f,c
 19548                           
 19549                           ;stkvar	_counter @ sp[(-10)+9]
 19550  0168AA  0EFF               	movlw	-1
 19551  0168AC  50E3               	movf	plusw1,w,c
 19552  0168AE  6E01               	movwf	btemp^0,c
 19553  0168B0  0E01               	movlw	1
 19554  0168B2  5E01               	subwf	btemp^0,f,c
 19555  0168B4  0EFF               	movlw	-1
 19556  0168B6  0060  F007  FFE3   	movff	btemp,plusw1
 19557  0168BC  A4D8               	btfss	status,2,c
 19558  0168BE  D791               	goto	u5950
 19559  0168C0                     u5970:
 19560                           
 19561                           ;stkvar	_sign @ sp[(-10)+8]
 19562  0168C0  0EFE               	movlw	-2
 19563  0168C2  50E3               	movf	plusw1,w,c
 19564  0168C4  B4D8               	btfsc	status,2,c
 19565  0168C6  D025               	goto	u5990
 19566                           
 19567                           ;stkvar	_quotient @ sp[(-10)+0]
 19568                           ;stkvar	_quotient @ sp[(-10)+0]
 19569  0168C8  0EF6               	movlw	-10
 19570  0168CA  6CE3               	negf	plusw1,c
 19571  0168CC  0EF7               	movlw	-9
 19572  0168CE  1EE3               	comf	plusw1,f,c
 19573  0168D0  0EF8               	movlw	-8
 19574  0168D2  1EE3               	comf	plusw1,f,c
 19575  0168D4  0EF9               	movlw	-7
 19576  0168D6  1EE3               	comf	plusw1,f,c
 19577  0168D8  0EFA               	movlw	-6
 19578  0168DA  1EE3               	comf	plusw1,f,c
 19579  0168DC  0EFB               	movlw	-5
 19580  0168DE  1EE3               	comf	plusw1,f,c
 19581  0168E0  0EFC               	movlw	-4
 19582  0168E2  1EE3               	comf	plusw1,f,c
 19583  0168E4  0EFD               	movlw	-3
 19584  0168E6  1EE3               	comf	plusw1,f,c
 19585  0168E8  E314               	bnc	u5990
 19586  0168EA  0EF7               	movlw	-9
 19587  0168EC  2AE3               	incf	plusw1,f,c
 19588  0168EE  E311               	bnc	u5990
 19589  0168F0  0EF8               	movlw	-8
 19590  0168F2  2AE3               	incf	plusw1,f,c
 19591  0168F4  E30E               	bnc	u5990
 19592  0168F6  0EF9               	movlw	-7
 19593  0168F8  2AE3               	incf	plusw1,f,c
 19594  0168FA  E30B               	bnc	u5990
 19595  0168FC  0EFA               	movlw	-6
 19596  0168FE  2AE3               	incf	plusw1,f,c
 19597  016900  E308               	bnc	u5990
 19598  016902  0EFB               	movlw	-5
 19599  016904  2AE3               	incf	plusw1,f,c
 19600  016906  E305               	bnc	u5990
 19601  016908  0EFC               	movlw	-4
 19602  01690A  2AE3               	incf	plusw1,f,c
 19603  01690C  E302               	bnc	u5990
 19604  01690E  0EFD               	movlw	-3
 19605  016910  2AE3               	incf	plusw1,f,c
 19606  016912                     u5990:
 19607                           
 19608                           ;stkvar	_quotient @ sp[(-10)+0]
 19609  016912  0EF6               	movlw	246
 19610  016914  24E1               	addwf	fsr1l,w,c
 19611  016916  6ED9               	movwf	fsr2l,c
 19612  016918  0EFF               	movlw	255
 19613  01691A  20E2               	addwfc	fsr1h,w,c
 19614  01691C  6EDA               	movwf	fsr2h,c
 19615                           
 19616                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19617  01691E  0E08               	movlw	8
 19618  016920  6E01               	movwf	btemp^0,c
 19619  016922  0EEE               	movlw	-18
 19620  016924                     us600999:
 19621  016924  006F FF7B FFE3     	movff	postinc2,plusw1
 19622  01692A  28E8               	incf	wreg,w,c
 19623  01692C  2E01               	decfsz	btemp^0,f,c
 19624  01692E  D7FA               	bra	us600999
 19625                           
 19626                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19627  016930  0EF6               	movlw	246
 19628  016932  26E1               	addwf	fsr1l,f,c
 19629  016934  0EFF               	movlw	255
 19630  016936  22E2               	addwfc	fsr1h,f,c
 19631  016938  0012               	return		;funcret
 19632  01693A                     __end_of___aodiv:
 19633                           	opt callstack 0
 19634                           
 19635 ;; *************** function _ctoa *****************
 19636 ;; Defined at:
 19637 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19638 ;; Parameters:    Size  Location     Type
 19639 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19640 ;;		 -> f(6), NULL(0), 
 19641 ;;  c               1  [STACK] unsigned char 
 19642 ;; Auto vars:     Size  Location     Type
 19643 ;;  w               2  [STACK] int 
 19644 ;;  l               2    0        int 
 19645 ;; Return value:  Size  Location     Type
 19646 ;;                  2  [STACK] int 
 19647 ;; Registers used:
 19648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19649 ;; Tracked objects:
 19650 ;;		On entry : 0/0
 19651 ;;		On exit  : 0/0
 19652 ;;		Unchanged: 0/0
 19653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19658 ;;Total ram usage:        0 bytes
 19659 ;; Hardware stack levels used:    1
 19660 ;; Hardware stack levels required when called:   20
 19661 ;; This function calls:
 19662 ;;		_pad
 19663 ;; This function is called by:
 19664 ;;		_vfpfcnvrt
 19665 ;; This function uses a reentrant model
 19666 ;;
 19667                           
 19668                           	psect	text69
 19669  019B70                     __ptext69:
 19670                           	opt callstack 0
 19671  019B70                     _ctoa:
 19672                           	opt callstack 0
 19673                           
 19674                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19675  019B70  52E6               	movf	postinc1,f,c
 19676  019B72  52E6               	movf	postinc1,f,c
 19677                           
 19678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19679                           
 19680                           ;incstack = 0
 19681 ;; hardware stack exceeded
 19682  019B74  5021               	movf	_width^0,w,c
 19683  019B76  1022               	iorwf	(_width+1)^0,w,c
 19684  019B78  A4D8               	btfss	status,2,c
 19685  019B7A  D009               	goto	l11184
 19686                           
 19687                           ;stkvar	_w @ sp[(-2)+0]
 19688  019B7C  0EFE               	movlw	-2
 19689  019B7E  0060  F087  FFE3   	movff	_width,plusw1
 19690  019B84  0EFF               	movlw	-1
 19691  019B86  0060  F08B  FFE3   	movff	_width+1,plusw1
 19692  019B8C  D016               	goto	l11186
 19693  019B8E                     l11184:
 19694  019B8E  0EFF               	movlw	255
 19695  019B90  6E0B               	movwf	(btemp+10)^0,c
 19696  019B92  0EFF               	movlw	255
 19697  019B94  6E0C               	movwf	(btemp+11)^0,c
 19698  019B96  0060  F084  F009   	movff	_width,btemp+8
 19699  019B9C  0060  F088  F00A   	movff	_width+1,btemp+9
 19700  019BA2  500B               	movf	(btemp+10)^0,w,c
 19701  019BA4  2609               	addwf	(btemp+8)^0,f,c
 19702  019BA6  500C               	movf	(btemp+11)^0,w,c
 19703  019BA8  220A               	addwfc	(btemp+9)^0,f,c
 19704                           
 19705                           ;stkvar	_w @ sp[(-2)+0]
 19706  019BAA  0EFE               	movlw	-2
 19707  019BAC  0060  F027  FFE3   	movff	btemp+8,plusw1
 19708  019BB2  0EFF               	movlw	-1
 19709  019BB4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19710  019BBA                     l11186:
 19711                           
 19712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19713                           ;stkvar	_c @ sp[(-2)+-3]
 19714  019BBA  0EFB               	movlw	-5
 19715  019BBC  006F FF8C  F394    	movff	plusw1,_dbuf
 19716                           
 19717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19718  019BC2  0103               	movlb	3	; () banked
 19719  019BC4  6B95               	clrf	(_dbuf+1)& (0+255),b
 19720                           
 19721                           ; BSR set to: 3
 19722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19723                           ;stkvar	_w @ sp[(-2)+0]
 19724  019BC6  0EFE               	movlw	-2
 19725  019BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 19726  019BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 19727  019BD4  0E94               	movlw	low _dbuf
 19728  019BD6  6EE6               	movwf	postinc1,c
 19729  019BD8  0E03               	movlw	high _dbuf
 19730  019BDA  6EE6               	movwf	postinc1,c
 19731                           
 19732                           ;stkvar	_fp @ sp[(-6)+-2]
 19733  019BDC  0EF8               	movlw	-8
 19734  019BDE  006F FF8F FFE6     	movff	plusw1,postinc1
 19735  019BE4  006F FF8F FFE6     	movff	plusw1,postinc1
 19736  019BEA  EC95  F0C5         	call	_pad	;wreg free
 19737                           
 19738                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19739  019BEE  0EFB               	movlw	251
 19740  019BF0  26E1               	addwf	fsr1l,f,c
 19741  019BF2  0EFF               	movlw	255
 19742  019BF4  22E2               	addwfc	fsr1h,f,c
 19743  019BF6  0012               	return		;funcret
 19744  019BF8                     __end_of_ctoa:
 19745                           	opt callstack 0
 19746                           
 19747 ;; *************** function _pad *****************
 19748 ;; Defined at:
 19749 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19750 ;; Parameters:    Size  Location     Type
 19751 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19752 ;;		 -> f(6), NULL(0), 
 19753 ;;  buf             2  [STACK] PTR unsigned char 
 19754 ;;		 -> dbuf(80), 
 19755 ;;  p               2  [STACK] int 
 19756 ;; Auto vars:     Size  Location     Type
 19757 ;;  w               2  [STACK] int 
 19758 ;;  i               2  [STACK] int 
 19759 ;; Return value:  Size  Location     Type
 19760 ;;                  2  [STACK] int 
 19761 ;; Registers used:
 19762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19763 ;; Tracked objects:
 19764 ;;		On entry : 0/3
 19765 ;;		On exit  : 0/0
 19766 ;;		Unchanged: 0/0
 19767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19772 ;;Total ram usage:        0 bytes
 19773 ;; Hardware stack levels used:    1
 19774 ;; Hardware stack levels required when called:   19
 19775 ;; This function calls:
 19776 ;;		_fputc
 19777 ;;		_fputs
 19778 ;;		_strlen
 19779 ;; This function is called by:
 19780 ;;		_ctoa
 19781 ;;		_dtoa
 19782 ;;		_efgtoa
 19783 ;;		_utoa
 19784 ;;		_xtoa
 19785 ;; This function uses a reentrant model
 19786 ;;
 19787                           
 19788                           	psect	text70
 19789  018B2A                     __ptext70:
 19790                           	opt callstack 0
 19791  018B2A                     _pad:
 19792                           	opt callstack 0
 19793                           
 19794                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19795  018B2A  52E6               	movf	postinc1,f,c
 19796  018B2C  52E6               	movf	postinc1,f,c
 19797  018B2E  52E6               	movf	postinc1,f,c
 19798  018B30  52E6               	movf	postinc1,f,c
 19799                           
 19800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19801                           
 19802                           ;incstack = 0
 19803 ;; hardware stack exceeded
 19804  018B32  A025               	btfss	_flags^0,0,c
 19805  018B34  D010               	goto	l11116
 19806                           
 19807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19808                           ;stkvar	_fp @ sp[(-4)+-2]
 19809  018B36  0EFA               	movlw	-6
 19810  018B38  006F FF8F FFE6     	movff	plusw1,postinc1
 19811  018B3E  006F FF8F FFE6     	movff	plusw1,postinc1
 19812                           
 19813                           ;stkvar	_buf @ sp[(-6)+-4]
 19814  018B44  0EF6               	movlw	-10
 19815  018B46  006F FF8F FFE6     	movff	plusw1,postinc1
 19816  018B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 19817  018B52  EC49  F0CC         	call	_fputs	;wreg free
 19818  018B56                     l11116:
 19819                           
 19820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19821                           ;stkvar	_p @ sp[(-4)+-6]
 19822  018B56  0EF7               	movlw	-9
 19823  018B58  BEE3               	btfsc	plusw1,7,c
 19824  018B5A  D011               	goto	l11120
 19825                           
 19826                           ;stkvar	_p @ sp[(-4)+-6]
 19827                           ;stkvar	_w @ sp[(-4)+0]
 19828  018B5C  0EF6               	movlw	-10
 19829  018B5E  006F FF8C  F001    	movff	plusw1,btemp
 19830  018B64  0EFC               	movlw	-4
 19831  018B66  0060  F007  FFE3   	movff	btemp,plusw1
 19832  018B6C  0EF7               	movlw	-9
 19833  018B6E  006F FF8C  F001    	movff	plusw1,btemp
 19834  018B74  0EFD               	movlw	-3
 19835  018B76  0060  F007  FFE3   	movff	btemp,plusw1
 19836  018B7C  D004               	goto	l2064
 19837  018B7E                     l11120:
 19838                           
 19839                           ;stkvar	_w @ sp[(-4)+0]
 19840  018B7E  0EFC               	movlw	-4
 19841  018B80  6AE3               	clrf	plusw1,c
 19842  018B82  0EFD               	movlw	-3
 19843  018B84  6AE3               	clrf	plusw1,c
 19844  018B86                     l2064:
 19845                           
 19846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19847                           ;stkvar	_i @ sp[(-4)+2]
 19848  018B86  0EFE               	movlw	-2
 19849  018B88  6AE3               	clrf	plusw1,c
 19850  018B8A  0EFF               	movlw	-1
 19851  018B8C  6AE3               	clrf	plusw1,c
 19852                           
 19853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19854  018B8E  D01E               	goto	l11126
 19855  018B90                     l11122:
 19856                           
 19857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19858                           ;stkvar	_fp @ sp[(-4)+-2]
 19859  018B90  0EFA               	movlw	-6
 19860  018B92  006F FF8F FFE6     	movff	plusw1,postinc1
 19861  018B98  006F FF8F FFE6     	movff	plusw1,postinc1
 19862  018B9E  0E20               	movlw	32
 19863  018BA0  6EE6               	movwf	postinc1,c
 19864  018BA2  0E00               	movlw	0
 19865  018BA4  6EE6               	movwf	postinc1,c
 19866  018BA6  EC77  F0C4         	call	_fputc	;wreg free
 19867                           
 19868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19869                           ;stkvar	_i @ sp[(-4)+2]
 19870  018BAA  0EFE               	movlw	-2
 19871  018BAC  50E3               	movf	plusw1,w,c
 19872  018BAE  0F01               	addlw	1
 19873  018BB0  6E01               	movwf	btemp^0,c
 19874  018BB2  0EFE               	movlw	-2
 19875  018BB4  0060  F007  FFE3   	movff	btemp,plusw1
 19876  018BBA  6A01               	clrf	btemp^0,c
 19877  018BBC  0EFF               	movlw	-1
 19878  018BBE  50E3               	movf	plusw1,w,c
 19879  018BC0  2001               	addwfc	btemp^0,w,c
 19880  018BC2  6E01               	movwf	btemp^0,c
 19881  018BC4  0EFF               	movlw	-1
 19882  018BC6  0060  F007  FFE3   	movff	btemp,plusw1
 19883  018BCC                     l11126:
 19884                           
 19885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19886                           ;stkvar	_w @ sp[(-4)+0]
 19887                           ;stkvar	_i @ sp[(-4)+2]
 19888  018BCC  50E1               	movf	fsr1l,w,c
 19889  018BCE  0FFE               	addlw	-2
 19890  018BD0  6ED9               	movwf	fsr2l,c
 19891  018BD2  50E2               	movf	fsr1h,w,c
 19892  018BD4  6EDA               	movwf	fsr2h,c
 19893  018BD6  0EFF               	movlw	255
 19894  018BD8  22DA               	addwfc	fsr2h,f,c
 19895  018BDA  0EFC               	movlw	-4
 19896  018BDC  50E3               	movf	plusw1,w,c
 19897  018BDE  5CDE               	subwf	postinc2,w,c
 19898  018BE0  50DE               	movf	postinc2,w,c
 19899  018BE2  0A80               	xorlw	128
 19900  018BE4  6E01               	movwf	btemp^0,c
 19901  018BE6  0EFD               	movlw	-3
 19902  018BE8  50E3               	movf	plusw1,w,c
 19903  018BEA  0A80               	xorlw	128
 19904  018BEC  5801               	subwfb	btemp^0,w,c
 19905  018BEE  A0D8               	btfss	status,0,c
 19906  018BF0  D7CF               	goto	l11122
 19907                           
 19908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19909  018BF2  B025               	btfsc	_flags^0,0,c
 19910  018BF4  D010               	goto	l11130
 19911                           
 19912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19913                           ;stkvar	_fp @ sp[(-4)+-2]
 19914  018BF6  0EFA               	movlw	-6
 19915  018BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 19916  018BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 19917                           
 19918                           ;stkvar	_buf @ sp[(-6)+-4]
 19919  018C04  0EF6               	movlw	-10
 19920  018C06  006F FF8F FFE6     	movff	plusw1,postinc1
 19921  018C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 19922  018C12  EC49  F0CC         	call	_fputs	;wreg free
 19923  018C16                     l11130:
 19924                           
 19925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19926                           ;stkvar	_w @ sp[(-4)+0]
 19927                           ;stkvar	_buf @ sp[(-4)+-4]
 19928  018C16  0EF8               	movlw	-8
 19929  018C18  006F FF8F FFE6     	movff	plusw1,postinc1
 19930  018C1E  006F FF8F FFE6     	movff	plusw1,postinc1
 19931  018C24  ECF8  F0CB         	call	_strlen	;wreg free
 19932  018C28  0EFC               	movlw	-4
 19933  018C2A  50E3               	movf	plusw1,w,c
 19934  018C2C  2601               	addwf	btemp^0,f,c
 19935  018C2E  0EFD               	movlw	-3
 19936  018C30  50E3               	movf	plusw1,w,c
 19937  018C32  2202               	addwfc	(btemp+1)^0,f,c
 19938                           
 19939                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19940  018C34  0EF6               	movlw	246
 19941  018C36  26E1               	addwf	fsr1l,f,c
 19942  018C38  0EFF               	movlw	255
 19943  018C3A  22E2               	addwfc	fsr1h,f,c
 19944  018C3C  0012               	return		;funcret
 19945  018C3E                     __end_of_pad:
 19946                           	opt callstack 0
 19947                           
 19948 ;; *************** function _strlen *****************
 19949 ;; Defined at:
 19950 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19951 ;; Parameters:    Size  Location     Type
 19952 ;;  s               2  [STACK] PTR const unsigned char 
 19953 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19954 ;;		 -> STR_37(9), STR_36(12), D.lcd(288), D(290), 
 19955 ;;		 -> T(144), port_data(512), STR_3(6), V(188), 
 19956 ;; Auto vars:     Size  Location     Type
 19957 ;;  a               2  [STACK] PTR const unsigned char 
 19958 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19959 ;;		 -> STR_37(9), STR_36(12), D.lcd(288), D(290), 
 19960 ;;		 -> T(144), port_data(512), STR_3(6), V(188), 
 19961 ;; Return value:  Size  Location     Type
 19962 ;;                  2  [STACK] unsigned int 
 19963 ;; Registers used:
 19964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19965 ;; Tracked objects:
 19966 ;;		On entry : 0/0
 19967 ;;		On exit  : 0/0
 19968 ;;		Unchanged: 0/0
 19969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19974 ;;Total ram usage:        0 bytes
 19975 ;; Hardware stack levels used:    1
 19976 ;; Hardware stack levels required when called:   15
 19977 ;; This function calls:
 19978 ;;		Nothing
 19979 ;; This function is called by:
 19980 ;;		_eaDogM_WriteString
 19981 ;;		_calc_bsoc
 19982 ;;		_pad
 19983 ;;		_stoa
 19984 ;; This function uses a reentrant model
 19985 ;;
 19986                           
 19987                           	psect	text71
 19988  0197F0                     __ptext71:
 19989                           	opt callstack 0
 19990  0197F0                     _strlen:
 19991                           	opt callstack 0
 19992                           
 19993                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19994  0197F0  52E6               	movf	postinc1,f,c
 19995  0197F2  52E6               	movf	postinc1,f,c
 19996                           
 19997                           ;stkvar	_s @ sp[(-2)+-2]
 19998                           
 19999                           ;incstack = 0
 20000 ;; hardware stack exceeded
 20001  0197F4  0EFC               	movlw	-4
 20002  0197F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20003  0197FC  0EFD               	movlw	-3
 20004  0197FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20005                           
 20006                           ;stkvar	_a @ sp[(-2)+0]
 20007  019804  0EFF               	movlw	-1
 20008  019806  0060  F033  FFE3   	movff	btemp+11,plusw1
 20009  01980C  0EFE               	movlw	-2
 20010  01980E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20011  019814  D011               	goto	l7284
 20012  019816                     l7282:
 20013                           
 20014                           ;stkvar	_s @ sp[(-2)+-2]
 20015  019816  0EFC               	movlw	-4
 20016  019818  50E3               	movf	plusw1,w,c
 20017  01981A  0F01               	addlw	1
 20018  01981C  6E01               	movwf	btemp^0,c
 20019  01981E  0EFC               	movlw	-4
 20020  019820  0060  F007  FFE3   	movff	btemp,plusw1
 20021  019826  6A01               	clrf	btemp^0,c
 20022  019828  0EFD               	movlw	-3
 20023  01982A  50E3               	movf	plusw1,w,c
 20024  01982C  2001               	addwfc	btemp^0,w,c
 20025  01982E  6E01               	movwf	btemp^0,c
 20026  019830  0EFD               	movlw	-3
 20027  019832  0060  F007  FFE3   	movff	btemp,plusw1
 20028  019838                     l7284:
 20029                           
 20030                           ;stkvar	_s @ sp[(-2)+-2]
 20031  019838  0EFC               	movlw	-4
 20032  01983A  006F FF8F FFF6     	movff	plusw1,tblptrl
 20033  019840  0EFD               	movlw	-3
 20034  019842  006F FF8F FFF7     	movff	plusw1,tblptrh
 20035  019848  0E00               	movlw	low (__mediumconst shr (0+16))
 20036  01984A  6EF8               	movwf	tblptru,c
 20037  01984C  0E1F               	movlw	(high __ramtop+-1)
 20038  01984E  64F7               	cpfsgt	tblptrh,c
 20039  019850  D003               	bra	u5067
 20040  019852  0008               	tblrd		*
 20041  019854  50F5               	movf	tablat,w,c
 20042  019856  D007               	bra	u5060
 20043  019858                     u5067:
 20044  019858  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20045  01985E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20046  019864  50EF               	movf	indf0,w,c
 20047  019866                     u5060:
 20048  019866  0900               	iorlw	0
 20049  019868  A4D8               	btfss	status,2,c
 20050  01986A  D7D5               	goto	l7282
 20051                           
 20052                           ;stkvar	_a @ sp[(-2)+0]
 20053                           ;stkvar	_s @ sp[(-2)+-2]
 20054  01986C  0EFC               	movlw	-4
 20055  01986E  006F FF8C  F001    	movff	plusw1,btemp
 20056  019874  0EFD               	movlw	-3
 20057  019876  006F FF8C  F002    	movff	plusw1,btemp+1
 20058  01987C  0EFE               	movlw	-2
 20059  01987E  50E3               	movf	plusw1,w,c
 20060  019880  5E01               	subwf	btemp^0,f,c
 20061  019882  0EFF               	movlw	-1
 20062  019884  50E3               	movf	plusw1,w,c
 20063  019886  5A02               	subwfb	(btemp+1)^0,f,c
 20064                           
 20065                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20066  019888  52E5               	movf	postdec1,f,c
 20067  01988A  52E5               	movf	postdec1,f,c
 20068  01988C  52E5               	movf	postdec1,f,c
 20069  01988E  52E5               	movf	postdec1,f,c
 20070  019890  0012               	return		;funcret
 20071  019892                     __end_of_strlen:
 20072                           	opt callstack 0
 20073                           
 20074 ;; *************** function _fputs *****************
 20075 ;; Defined at:
 20076 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20077 ;; Parameters:    Size  Location     Type
 20078 ;;  s               2  [STACK] PTR const unsigned char 
 20079 ;;		 -> dbuf(80), 
 20080 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20081 ;;		 -> f(6), NULL(0), 
 20082 ;; Auto vars:     Size  Location     Type
 20083 ;;  i               2  [STACK] int 
 20084 ;;  c               1  [STACK] unsigned char 
 20085 ;; Return value:  Size  Location     Type
 20086 ;;                  2  [STACK] int 
 20087 ;; Registers used:
 20088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20089 ;; Tracked objects:
 20090 ;;		On entry : 0/3
 20091 ;;		On exit  : 0/0
 20092 ;;		Unchanged: 0/0
 20093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20098 ;;Total ram usage:        0 bytes
 20099 ;; Hardware stack levels used:    1
 20100 ;; Hardware stack levels required when called:   18
 20101 ;; This function calls:
 20102 ;;		_fputc
 20103 ;; This function is called by:
 20104 ;;		_pad
 20105 ;; This function uses a reentrant model
 20106 ;;
 20107                           
 20108                           	psect	text72
 20109  019892                     __ptext72:
 20110                           	opt callstack 0
 20111  019892                     _fputs:
 20112                           	opt callstack 0
 20113                           
 20114                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20115  019892  52E6               	movf	postinc1,f,c
 20116  019894  52E6               	movf	postinc1,f,c
 20117  019896  52E6               	movf	postinc1,f,c
 20118                           
 20119                           ;stkvar	_i @ sp[(-3)+0]
 20120                           
 20121                           ;incstack = 0
 20122 ;; hardware stack exceeded
 20123  019898  0EFD               	movlw	-3
 20124  01989A  6AE3               	clrf	plusw1,c
 20125  01989C  0EFE               	movlw	-2
 20126  01989E  6AE3               	clrf	plusw1,c
 20127  0198A0  D01F               	goto	l11110
 20128  0198A2                     l11106:
 20129                           
 20130                           ;stkvar	_fp @ sp[(-3)+-4]
 20131  0198A2  0EF9               	movlw	-7
 20132  0198A4  006F FF8F FFE6     	movff	plusw1,postinc1
 20133  0198AA  006F FF8F FFE6     	movff	plusw1,postinc1
 20134                           
 20135                           ;stkvar	_c @ sp[(-5)+2]
 20136  0198B0  0EFD               	movlw	-3
 20137  0198B2  50E3               	movf	plusw1,w,c
 20138  0198B4  6EE6               	movwf	postinc1,c
 20139  0198B6  0E00               	movlw	0
 20140  0198B8  6EE6               	movwf	postinc1,c
 20141  0198BA  EC77  F0C4         	call	_fputc	;wreg free
 20142                           
 20143                           ;stkvar	_i @ sp[(-3)+0]
 20144  0198BE  0EFD               	movlw	-3
 20145  0198C0  50E3               	movf	plusw1,w,c
 20146  0198C2  0F01               	addlw	1
 20147  0198C4  6E01               	movwf	btemp^0,c
 20148  0198C6  0EFD               	movlw	-3
 20149  0198C8  0060  F007  FFE3   	movff	btemp,plusw1
 20150  0198CE  6A01               	clrf	btemp^0,c
 20151  0198D0  0EFE               	movlw	-2
 20152  0198D2  50E3               	movf	plusw1,w,c
 20153  0198D4  2001               	addwfc	btemp^0,w,c
 20154  0198D6  6E01               	movwf	btemp^0,c
 20155  0198D8  0EFE               	movlw	-2
 20156  0198DA  0060  F007  FFE3   	movff	btemp,plusw1
 20157  0198E0                     l11110:
 20158                           
 20159                           ;stkvar	_i @ sp[(-3)+0]
 20160  0198E0  0EFD               	movlw	-3
 20161  0198E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20162  0198E8  0EFE               	movlw	-2
 20163  0198EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20164                           
 20165                           ;stkvar	_s @ sp[(-3)+-2]
 20166  0198F0  0EFB               	movlw	-5
 20167  0198F2  006F FF8C  F009    	movff	plusw1,btemp+8
 20168  0198F8  0EFC               	movlw	-4
 20169  0198FA  006F FF8C  F00A    	movff	plusw1,btemp+9
 20170  019900  500B               	movf	(btemp+10)^0,w,c
 20171  019902  2409               	addwf	(btemp+8)^0,w,c
 20172  019904  6ED9               	movwf	fsr2l,c
 20173  019906  500C               	movf	(btemp+11)^0,w,c
 20174  019908  200A               	addwfc	(btemp+9)^0,w,c
 20175  01990A  6EDA               	movwf	fsr2h,c
 20176  01990C  50DF               	movf	indf2,w,c
 20177  01990E  6E0C               	movwf	(btemp+11)^0,c
 20178                           
 20179                           ;stkvar	_c @ sp[(-3)+2]
 20180  019910  0EFF               	movlw	-1
 20181  019912  0060  F033  FFE3   	movff	btemp+11,plusw1
 20182  019918  0EFF               	movlw	-1
 20183  01991A  50E3               	movf	plusw1,w,c
 20184  01991C  A4D8               	btfss	status,2,c
 20185  01991E  D7C1               	goto	l11106
 20186                           
 20187                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20188  019920  0EF9               	movlw	249
 20189  019922  26E1               	addwf	fsr1l,f,c
 20190  019924  0EFF               	movlw	255
 20191  019926  22E2               	addwfc	fsr1h,f,c
 20192  019928  0012               	return		;funcret
 20193  01992A                     __end_of_fputs:
 20194                           	opt callstack 0
 20195                           
 20196 ;; *************** function _fputc *****************
 20197 ;; Defined at:
 20198 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20199 ;; Parameters:    Size  Location     Type
 20200 ;;  c               2  [STACK] int 
 20201 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20202 ;;		 -> f(6), NULL(0), 
 20203 ;; Auto vars:     Size  Location     Type
 20204 ;;		None
 20205 ;; Return value:  Size  Location     Type
 20206 ;;                  2  [STACK] int 
 20207 ;; Registers used:
 20208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20209 ;; Tracked objects:
 20210 ;;		On entry : 0/0
 20211 ;;		On exit  : 0/0
 20212 ;;		Unchanged: 0/0
 20213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20218 ;;Total ram usage:        0 bytes
 20219 ;; Hardware stack levels used:    1
 20220 ;; Hardware stack levels required when called:   17
 20221 ;; This function calls:
 20222 ;;		_putch
 20223 ;; This function is called by:
 20224 ;;		_pad
 20225 ;;		_stoa
 20226 ;;		_vfpfcnvrt
 20227 ;;		_fputs
 20228 ;; This function uses a reentrant model
 20229 ;;
 20230                           
 20231                           	psect	text73
 20232  0188EE                     __ptext73:
 20233                           	opt callstack 0
 20234  0188EE                     _fputc:
 20235                           	opt callstack 0
 20236                           
 20237                           ;stkvar	_fp @ sp[(0)+-4]
 20238                           
 20239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20240                           ;incstack = 0
 20241 ;; hardware stack exceeded
 20242  0188EE  0EFC               	movlw	-4
 20243  0188F0  006F FF8C  F001    	movff	plusw1,btemp
 20244  0188F6  0EFD               	movlw	-3
 20245  0188F8  50E3               	movf	plusw1,w,c
 20246  0188FA  1001               	iorwf	btemp^0,w,c
 20247  0188FC  B4D8               	btfsc	status,2,c
 20248  0188FE  D009               	goto	u10030
 20249                           
 20250                           ;stkvar	_fp @ sp[(0)+-4]
 20251  018900  0EFC               	movlw	-4
 20252  018902  006F FF8C  F001    	movff	plusw1,btemp
 20253  018908  0EFD               	movlw	-3
 20254  01890A  50E3               	movf	plusw1,w,c
 20255  01890C  1001               	iorwf	btemp^0,w,c
 20256  01890E  A4D8               	btfss	status,2,c
 20257  018910  D006               	goto	l11094
 20258  018912                     u10030:
 20259                           
 20260                           ;stkvar	_c @ sp[(0)+-2]
 20261  018912  0EFE               	movlw	-2
 20262  018914  50E3               	movf	plusw1,w,c
 20263  018916  6EE6               	movwf	postinc1,c
 20264  018918  EC5A  F0D7         	call	_putch	;wreg free
 20265  01891C  D075               	goto	l3110
 20266  01891E                     l11094:
 20267                           
 20268                           ;stkvar	_fp @ sp[(0)+-4]
 20269  01891E  0EFC               	movlw	-4
 20270  018920  006F FF8C  F00B    	movff	plusw1,btemp+10
 20271  018926  0EFD               	movlw	-3
 20272  018928  006F FF8C  F00C    	movff	plusw1,btemp+11
 20273  01892E  0E04               	movlw	4
 20274  018930  240B               	addwf	(btemp+10)^0,w,c
 20275  018932  6ED9               	movwf	fsr2l,c
 20276  018934  0E00               	movlw	0
 20277  018936  200C               	addwfc	(btemp+11)^0,w,c
 20278  018938  6EDA               	movwf	fsr2h,c
 20279  01893A  50DE               	movf	postinc2,w,c
 20280  01893C  10DE               	iorwf	postinc2,w,c
 20281  01893E  B4D8               	btfsc	status,2,c
 20282  018940  D026               	goto	u10050
 20283                           
 20284                           ;stkvar	_fp @ sp[(0)+-4]
 20285  018942  0EFC               	movlw	-4
 20286  018944  006F FF8C  F00B    	movff	plusw1,btemp+10
 20287  01894A  0EFD               	movlw	-3
 20288  01894C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20289  018952  0E04               	movlw	4
 20290  018954  240B               	addwf	(btemp+10)^0,w,c
 20291  018956  6ED9               	movwf	fsr2l,c
 20292  018958  0E00               	movlw	0
 20293  01895A  200C               	addwfc	(btemp+11)^0,w,c
 20294  01895C  6EDA               	movwf	fsr2h,c
 20295                           
 20296                           ;stkvar	_fp @ sp[(0)+-4]
 20297  01895E  0EFC               	movlw	-4
 20298  018960  006F FF8C  F00B    	movff	plusw1,btemp+10
 20299  018966  0EFD               	movlw	-3
 20300  018968  006F FF8C  F00C    	movff	plusw1,btemp+11
 20301  01896E  0E02               	movlw	2
 20302  018970  240B               	addwf	(btemp+10)^0,w,c
 20303  018972  6EE9               	movwf	fsr0l,c
 20304  018974  0E00               	movlw	0
 20305  018976  200C               	addwfc	(btemp+11)^0,w,c
 20306  018978  6EEA               	movwf	fsr0h,c
 20307  01897A  50DE               	movf	postinc2,w,c
 20308  01897C  5CEE               	subwf	postinc0,w,c
 20309  01897E  50EE               	movf	postinc0,w,c
 20310  018980  0A80               	xorlw	128
 20311  018982  6E01               	movwf	btemp^0,c
 20312  018984  50DE               	movf	postinc2,w,c
 20313  018986  0A80               	xorlw	128
 20314  018988  5801               	subwfb	btemp^0,w,c
 20315  01898A  B0D8               	btfsc	status,0,c
 20316  01898C  D03D               	goto	l3110
 20317  01898E                     u10050:
 20318                           
 20319                           ;stkvar	_c @ sp[(0)+-2]
 20320                           ;stkvar	_fp @ sp[(0)+-4]
 20321  01898E  0EFC               	movlw	-4
 20322  018990  006F FF8C  F00B    	movff	plusw1,btemp+10
 20323  018996  0EFD               	movlw	-3
 20324  018998  006F FF8C  F00C    	movff	plusw1,btemp+11
 20325  01899E  0E02               	movlw	2
 20326  0189A0  240B               	addwf	(btemp+10)^0,w,c
 20327  0189A2  6ED9               	movwf	fsr2l,c
 20328  0189A4  0E00               	movlw	0
 20329  0189A6  200C               	addwfc	(btemp+11)^0,w,c
 20330  0189A8  6EDA               	movwf	fsr2h,c
 20331  0189AA  006F FF78  F00B    	movff	postinc2,btemp+10
 20332  0189B0  006F FF74  F00C    	movff	postdec2,btemp+11
 20333                           
 20334                           ;stkvar	_fp @ sp[(0)+-4]
 20335  0189B6  0EFC               	movlw	-4
 20336  0189B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 20337  0189BE  0EFD               	movlw	-3
 20338  0189C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 20339  0189C6  006F FF78  F009    	movff	postinc2,btemp+8
 20340  0189CC  006F FF74  F00A    	movff	postdec2,btemp+9
 20341  0189D2  500B               	movf	(btemp+10)^0,w,c
 20342  0189D4  2409               	addwf	(btemp+8)^0,w,c
 20343  0189D6  6ED9               	movwf	fsr2l,c
 20344  0189D8  500C               	movf	(btemp+11)^0,w,c
 20345  0189DA  200A               	addwfc	(btemp+9)^0,w,c
 20346  0189DC  6EDA               	movwf	fsr2h,c
 20347  0189DE  0EFE               	movlw	-2
 20348  0189E0  006F FF8F FFDF     	movff	plusw1,indf2
 20349                           
 20350                           ;stkvar	_fp @ sp[(0)+-4]
 20351  0189E6  0EFC               	movlw	-4
 20352  0189E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20353  0189EE  0EFD               	movlw	-3
 20354  0189F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20355  0189F6  0E02               	movlw	2
 20356  0189F8  240B               	addwf	(btemp+10)^0,w,c
 20357  0189FA  6ED9               	movwf	fsr2l,c
 20358  0189FC  0E00               	movlw	0
 20359  0189FE  200C               	addwfc	(btemp+11)^0,w,c
 20360  018A00  6EDA               	movwf	fsr2h,c
 20361  018A02  2ADE               	incf	postinc2,f,c
 20362  018A04  0E00               	movlw	0
 20363  018A06  22DD               	addwfc	postdec2,f,c
 20364  018A08                     l3110:
 20365                           
 20366                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20367  018A08  52E5               	movf	postdec1,f,c
 20368  018A0A  52E5               	movf	postdec1,f,c
 20369  018A0C  52E5               	movf	postdec1,f,c
 20370  018A0E  52E5               	movf	postdec1,f,c
 20371  018A10  0012               	return		;funcret
 20372  018A12                     __end_of_fputc:
 20373                           	opt callstack 0
 20374                           
 20375 ;; *************** function _putch *****************
 20376 ;; Defined at:
 20377 ;;		line 170 in file "eadog.c"
 20378 ;; Parameters:    Size  Location     Type
 20379 ;;  c               1  [STACK] unsigned char 
 20380 ;; Auto vars:     Size  Location     Type
 20381 ;;		None
 20382 ;; Return value:  Size  Location     Type
 20383 ;;                  1  [STACK] void 
 20384 ;; Registers used:
 20385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20386 ;; Tracked objects:
 20387 ;;		On entry : 0/0
 20388 ;;		On exit  : 0/0
 20389 ;;		Unchanged: 0/0
 20390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20395 ;;Total ram usage:        0 bytes
 20396 ;; Hardware stack levels used:    1
 20397 ;; Hardware stack levels required when called:   16
 20398 ;; This function calls:
 20399 ;;		_ringBufS_put_dma
 20400 ;; This function is called by:
 20401 ;;		_fputc
 20402 ;; This function uses a reentrant model
 20403 ;;
 20404                           
 20405                           	psect	text74
 20406  01AEB4                     __ptext74:
 20407                           	opt callstack 0
 20408  01AEB4                     _putch:
 20409                           	opt callstack 0
 20410                           
 20411                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20412                           ;stkvar	_c @ sp[(0)+-1]
 20413                           
 20414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20415                           ;incstack = 0
 20416 ;; hardware stack exceeded
 20417  01AEB4  0EFF               	movlw	-1
 20418  01AEB6  50E3               	movf	plusw1,w,c
 20419  01AEB8  6EE6               	movwf	postinc1,c
 20420  01AEBA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 20421  01AEC0  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 20422  01AEC6  EC50  F0CB         	call	_ringBufS_put_dma	;wreg free
 20423                           
 20424                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20425  01AECA  52E5               	movf	postdec1,f,c
 20426  01AECC  0012               	return		;funcret
 20427  01AECE                     __end_of_putch:
 20428                           	opt callstack 0
 20429                           
 20430 ;; *************** function _ringBufS_put_dma *****************
 20431 ;; Defined at:
 20432 ;;		line 67 in file "ringbufs.c"
 20433 ;; Parameters:    Size  Location     Type
 20434 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20435 ;;		 -> ring_buf1(67), 
 20436 ;;  c               1  [STACK] const unsigned char 
 20437 ;; Auto vars:     Size  Location     Type
 20438 ;;		None
 20439 ;; Return value:  Size  Location     Type
 20440 ;;                  1  [STACK] void 
 20441 ;; Registers used:
 20442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20443 ;; Tracked objects:
 20444 ;;		On entry : 0/0
 20445 ;;		On exit  : 0/0
 20446 ;;		Unchanged: 0/0
 20447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20452 ;;Total ram usage:        0 bytes
 20453 ;; Hardware stack levels used:    1
 20454 ;; Hardware stack levels required when called:   15
 20455 ;; This function calls:
 20456 ;;		Nothing
 20457 ;; This function is called by:
 20458 ;;		_putch
 20459 ;; This function uses a reentrant model
 20460 ;;
 20461                           
 20462                           	psect	text75
 20463  0196A0                     __ptext75:
 20464                           	opt callstack 0
 20465  0196A0                     _ringBufS_put_dma:
 20466                           	opt callstack 0
 20467                           
 20468                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20469                           ;stkvar	__this @ sp[(0)+-2]
 20470                           
 20471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20472                           ;incstack = 0
 20473 ;; hardware stack exceeded
 20474  0196A0  0EFE               	movlw	-2
 20475  0196A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20476  0196A8  0EFF               	movlw	-1
 20477  0196AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20478  0196B0  0E42               	movlw	66
 20479  0196B2  240B               	addwf	(btemp+10)^0,w,c
 20480  0196B4  6ED9               	movwf	fsr2l,c
 20481  0196B6  0E00               	movlw	0
 20482  0196B8  200C               	addwfc	(btemp+11)^0,w,c
 20483  0196BA  6EDA               	movwf	fsr2h,c
 20484  0196BC  0E40               	movlw	64
 20485  0196BE  60DF               	cpfslt	indf2,c
 20486  0196C0  D040               	goto	l1568
 20487                           
 20488                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20489                           ;stkvar	_c @ sp[(0)+-3]
 20490                           ;stkvar	__this @ sp[(0)+-2]
 20491  0196C2  0EFE               	movlw	-2
 20492  0196C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20493  0196CA  0EFF               	movlw	-1
 20494  0196CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20495  0196D2  0E40               	movlw	64
 20496  0196D4  240B               	addwf	(btemp+10)^0,w,c
 20497  0196D6  6ED9               	movwf	fsr2l,c
 20498  0196D8  0E00               	movlw	0
 20499  0196DA  200C               	addwfc	(btemp+11)^0,w,c
 20500  0196DC  6EDA               	movwf	fsr2h,c
 20501  0196DE  50DF               	movf	indf2,w,c
 20502  0196E0  6E0C               	movwf	(btemp+11)^0,c
 20503                           
 20504                           ;stkvar	__this @ sp[(0)+-2]
 20505  0196E2  0EFE               	movlw	-2
 20506  0196E4  006F FF8C  F009    	movff	plusw1,btemp+8
 20507  0196EA  0EFF               	movlw	-1
 20508  0196EC  006F FF8C  F00A    	movff	plusw1,btemp+9
 20509  0196F2  500C               	movf	(btemp+11)^0,w,c
 20510  0196F4  2409               	addwf	(btemp+8)^0,w,c
 20511  0196F6  6ED9               	movwf	fsr2l,c
 20512  0196F8  0E00               	movlw	0
 20513  0196FA  200A               	addwfc	(btemp+9)^0,w,c
 20514  0196FC  6EDA               	movwf	fsr2h,c
 20515  0196FE  0EFD               	movlw	-3
 20516  019700  006F FF8F FFDF     	movff	plusw1,indf2
 20517                           
 20518                           ;ringbufs.c: 71:   ++_this->head;
 20519                           ;stkvar	__this @ sp[(0)+-2]
 20520  019706  0EFE               	movlw	-2
 20521  019708  006F FF8C  F00B    	movff	plusw1,btemp+10
 20522  01970E  0EFF               	movlw	-1
 20523  019710  006F FF8C  F00C    	movff	plusw1,btemp+11
 20524  019716  0E40               	movlw	64
 20525  019718  240B               	addwf	(btemp+10)^0,w,c
 20526  01971A  6ED9               	movwf	fsr2l,c
 20527  01971C  0E00               	movlw	0
 20528  01971E  200C               	addwfc	(btemp+11)^0,w,c
 20529  019720  6EDA               	movwf	fsr2h,c
 20530  019722  2ADF               	incf	indf2,f,c
 20531                           
 20532                           ;ringbufs.c: 72:   ++_this->count;
 20533                           ;stkvar	__this @ sp[(0)+-2]
 20534  019724  0EFE               	movlw	-2
 20535  019726  006F FF8C  F00B    	movff	plusw1,btemp+10
 20536  01972C  0EFF               	movlw	-1
 20537  01972E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20538  019734  0E42               	movlw	66
 20539  019736  240B               	addwf	(btemp+10)^0,w,c
 20540  019738  6ED9               	movwf	fsr2l,c
 20541  01973A  0E00               	movlw	0
 20542  01973C  200C               	addwfc	(btemp+11)^0,w,c
 20543  01973E  6EDA               	movwf	fsr2h,c
 20544  019740  2ADF               	incf	indf2,f,c
 20545  019742                     l1568:
 20546                           
 20547                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20548  019742  52E5               	movf	postdec1,f,c
 20549  019744  52E5               	movf	postdec1,f,c
 20550  019746  52E5               	movf	postdec1,f,c
 20551  019748  0012               	return		;funcret
 20552  01974A                     __end_of_ringBufS_put_dma:
 20553                           	opt callstack 0
 20554                           
 20555 ;; *************** function _atoi *****************
 20556 ;; Defined at:
 20557 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20558 ;; Parameters:    Size  Location     Type
 20559 ;;  s               2  [STACK] PTR const unsigned char 
 20560 ;;		 -> STR_55(85), STR_53(3), STR_52(3), STR_51(19), 
 20561 ;;		 -> STR_50(19), STR_49(19), STR_48(19), STR_47(19), 
 20562 ;;		 -> STR_46(19), STR_45(24), STR_44(15), STR_43(15), 
 20563 ;;		 -> STR_42(15), STR_41(10), STR_40(10), STR_39(19), 
 20564 ;;		 -> STR_38(19), STR_35(3), STR_34(3), STR_33(3), 
 20565 ;;		 -> STR_32(17), STR_31(16), STR_30(16), STR_29(19), 
 20566 ;;		 -> STR_28(20), STR_27(19), STR_26(19), STR_25(19), 
 20567 ;;		 -> STR_24(19), STR_23(19), STR_22(19), STR_21(19), 
 20568 ;;		 -> STR_20(17), STR_19(16), STR_18(16), STR_17(26), 
 20569 ;;		 -> STR_16(26), STR_15(22), STR_14(17), STR_13(17), 
 20570 ;;		 -> STR_12(17), STR_11(22), STR_10(22), STR_9(22), 
 20571 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(17), 
 20572 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 20573 ;; Auto vars:     Size  Location     Type
 20574 ;;  n               2  [STACK] int 
 20575 ;;  neg             2  [STACK] int 
 20576 ;; Return value:  Size  Location     Type
 20577 ;;                  2  [STACK] int 
 20578 ;; Registers used:
 20579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20580 ;; Tracked objects:
 20581 ;;		On entry : 0/0
 20582 ;;		On exit  : 0/0
 20583 ;;		Unchanged: 0/0
 20584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20589 ;;Total ram usage:        0 bytes
 20590 ;; Hardware stack levels used:    1
 20591 ;; Hardware stack levels required when called:   16
 20592 ;; This function calls:
 20593 ;;		_isdigit
 20594 ;;		_isspace
 20595 ;; This function is called by:
 20596 ;;		_vfpfcnvrt
 20597 ;; This function uses a reentrant model
 20598 ;;
 20599                           
 20600                           	psect	text76
 20601  01693A                     __ptext76:
 20602                           	opt callstack 0
 20603  01693A                     _atoi:
 20604                           	opt callstack 0
 20605                           
 20606                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20607  01693A  0E09               	movlw	9
 20608  01693C  26E1               	addwf	fsr1l,f,c
 20609  01693E  0E00               	movlw	0
 20610  016940  22E2               	addwfc	fsr1h,f,c
 20611                           
 20612                           ;stkvar	_n @ sp[(-9)+5]
 20613                           
 20614                           ;incstack = 0
 20615 ;; hardware stack exceeded
 20616  016942  0EFC               	movlw	-4
 20617  016944  6AE3               	clrf	plusw1,c
 20618  016946  0EFD               	movlw	-3
 20619  016948  6AE3               	clrf	plusw1,c
 20620                           
 20621                           ;stkvar	_neg @ sp[(-9)+7]
 20622  01694A  0EFE               	movlw	-2
 20623  01694C  6AE3               	clrf	plusw1,c
 20624  01694E  0EFF               	movlw	-1
 20625  016950  6AE3               	clrf	plusw1,c
 20626  016952  D011               	goto	l8892
 20627  016954                     l8890:
 20628                           
 20629                           ;stkvar	_s @ sp[(-9)+-2]
 20630  016954  0EF5               	movlw	-11
 20631  016956  50E3               	movf	plusw1,w,c
 20632  016958  0F01               	addlw	1
 20633  01695A  6E01               	movwf	btemp^0,c
 20634  01695C  0EF5               	movlw	-11
 20635  01695E  0060  F007  FFE3   	movff	btemp,plusw1
 20636  016964  6A01               	clrf	btemp^0,c
 20637  016966  0EF6               	movlw	-10
 20638  016968  50E3               	movf	plusw1,w,c
 20639  01696A  2001               	addwfc	btemp^0,w,c
 20640  01696C  6E01               	movwf	btemp^0,c
 20641  01696E  0EF6               	movlw	-10
 20642  016970  0060  F007  FFE3   	movff	btemp,plusw1
 20643  016976                     l8892:
 20644                           
 20645                           ;stkvar	_atoi$5845 @ sp[(-9)+4]
 20646  016976  0EFB               	movlw	-5
 20647  016978  6AE3               	clrf	plusw1,c
 20648  01697A  2AE3               	incf	plusw1,f,c
 20649                           
 20650                           ;stkvar	_s @ sp[(-9)+-2]
 20651  01697C  50E1               	movf	fsr1l,w,c
 20652  01697E  0FF5               	addlw	-11
 20653  016980  6ED9               	movwf	fsr2l,c
 20654  016982  50E2               	movf	fsr1h,w,c
 20655  016984  6EDA               	movwf	fsr2h,c
 20656  016986  0EFF               	movlw	255
 20657  016988  22DA               	addwfc	fsr2h,f,c
 20658  01698A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20659  016990  006F FF77 FFF7     	movff	postdec2,tblptrh
 20660  016996                     	if	0	;tblptru may be non-zero
 20661  016996                     	endif
 20662  016996                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20663  016996  0E00               	movlw	low (__mediumconst shr (0+16))
 20664  016998  6EF8               	movwf	tblptru,c
 20665  01699A                     	endif
 20666  01699A  0008               	tblrd		*
 20667  01699C  50F5               	movf	tablat,w,c
 20668  01699E  0A20               	xorlw	32
 20669  0169A0  B4D8               	btfsc	status,2,c
 20670  0169A2  D023               	goto	l8900
 20671  0169A4  0EF7               	movlw	247
 20672  0169A6  6E0B               	movwf	(btemp+10)^0,c
 20673  0169A8  0EFF               	movlw	255
 20674  0169AA  6E0C               	movwf	(btemp+11)^0,c
 20675                           
 20676                           ;stkvar	_s @ sp[(-9)+-2]
 20677  0169AC  50E1               	movf	fsr1l,w,c
 20678  0169AE  0FF5               	addlw	-11
 20679  0169B0  6ED9               	movwf	fsr2l,c
 20680  0169B2  50E2               	movf	fsr1h,w,c
 20681  0169B4  6EDA               	movwf	fsr2h,c
 20682  0169B6  0EFF               	movlw	255
 20683  0169B8  22DA               	addwfc	fsr2h,f,c
 20684  0169BA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20685  0169C0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20686  0169C6                     	if	0	;tblptru may be non-zero
 20687  0169C6                     	endif
 20688  0169C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20689  0169C6  0E00               	movlw	low (__mediumconst shr (0+16))
 20690  0169C8  6EF8               	movwf	tblptru,c
 20691  0169CA                     	endif
 20692  0169CA  0008               	tblrd		*
 20693  0169CC  50F5               	movf	tablat,w,c
 20694  0169CE  6E09               	movwf	(btemp+8)^0,c
 20695  0169D0  6A0A               	clrf	(btemp+9)^0,c
 20696  0169D2  500B               	movf	(btemp+10)^0,w,c
 20697  0169D4  2609               	addwf	(btemp+8)^0,f,c
 20698  0169D6  500C               	movf	(btemp+11)^0,w,c
 20699  0169D8  220A               	addwfc	(btemp+9)^0,f,c
 20700  0169DA  500A               	movf	(btemp+9)^0,w,c
 20701  0169DC  E104               	bnz	u8170
 20702  0169DE  0E05               	movlw	5
 20703  0169E0  5C09               	subwf	(btemp+8)^0,w,c
 20704  0169E2  A0D8               	btfss	status,0,c
 20705  0169E4  D002               	goto	l8900
 20706  0169E6                     u8170:
 20707                           
 20708                           ;stkvar	_atoi$5845 @ sp[(-9)+4]
 20709  0169E6  0EFB               	movlw	-5
 20710  0169E8  6AE3               	clrf	plusw1,c
 20711  0169EA                     l8900:
 20712                           
 20713                           ;stkvar	_atoi$5845 @ sp[(-9)+4]
 20714  0169EA  0EFB               	movlw	-5
 20715  0169EC  50E3               	movf	plusw1,w,c
 20716  0169EE  6E0B               	movwf	(btemp+10)^0,c
 20717  0169F0  6A0C               	clrf	(btemp+11)^0,c
 20718                           
 20719                           ;stkvar	_atoi$5844 @ sp[(-9)+2]
 20720  0169F2  0EF9               	movlw	-7
 20721  0169F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20722  0169FA  0EFA               	movlw	-6
 20723  0169FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20724                           
 20725                           ;stkvar	_atoi$5844 @ sp[(-9)+2]
 20726  016A02  0EF9               	movlw	-7
 20727  016A04  006F FF8C  F001    	movff	plusw1,btemp
 20728  016A0A  0EFA               	movlw	-6
 20729  016A0C  50E3               	movf	plusw1,w,c
 20730  016A0E  1001               	iorwf	btemp^0,w,c
 20731  016A10  B4D8               	btfsc	status,2,c
 20732  016A12  D01F               	goto	l8910
 20733  016A14  D79F               	goto	l8890
 20734  016A16                     l8906:
 20735  016A16  0E01               	movlw	1
 20736  016A18  6E0B               	movwf	(btemp+10)^0,c
 20737  016A1A  0E00               	movlw	0
 20738  016A1C  6E0C               	movwf	(btemp+11)^0,c
 20739                           
 20740                           ;stkvar	_neg @ sp[(-9)+7]
 20741  016A1E  0EFE               	movlw	-2
 20742  016A20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20743  016A26  0EFF               	movlw	-1
 20744  016A28  0060  F033  FFE3   	movff	btemp+11,plusw1
 20745  016A2E                     l8908:
 20746                           
 20747                           ;stkvar	_s @ sp[(-9)+-2]
 20748  016A2E  0EF5               	movlw	-11
 20749  016A30  50E3               	movf	plusw1,w,c
 20750  016A32  0F01               	addlw	1
 20751  016A34  6E01               	movwf	btemp^0,c
 20752  016A36  0EF5               	movlw	-11
 20753  016A38  0060  F007  FFE3   	movff	btemp,plusw1
 20754  016A3E  6A01               	clrf	btemp^0,c
 20755  016A40  0EF6               	movlw	-10
 20756  016A42  50E3               	movf	plusw1,w,c
 20757  016A44  2001               	addwfc	btemp^0,w,c
 20758  016A46  6E01               	movwf	btemp^0,c
 20759  016A48  0EF6               	movlw	-10
 20760  016A4A  0060  F007  FFE3   	movff	btemp,plusw1
 20761  016A50  D053               	goto	l8916
 20762  016A52                     l8910:
 20763                           
 20764                           ;stkvar	_s @ sp[(-9)+-2]
 20765  016A52  50E1               	movf	fsr1l,w,c
 20766  016A54  0FF5               	addlw	-11
 20767  016A56  6ED9               	movwf	fsr2l,c
 20768  016A58  50E2               	movf	fsr1h,w,c
 20769  016A5A  6EDA               	movwf	fsr2h,c
 20770  016A5C  0EFF               	movlw	255
 20771  016A5E  22DA               	addwfc	fsr2h,f,c
 20772  016A60  006F FF7B FFF6     	movff	postinc2,tblptrl
 20773  016A66  006F FF77 FFF7     	movff	postdec2,tblptrh
 20774  016A6C                     	if	0	;tblptru may be non-zero
 20775  016A6C                     	endif
 20776  016A6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20777  016A6C  0E00               	movlw	low (__mediumconst shr (0+16))
 20778  016A6E  6EF8               	movwf	tblptru,c
 20779  016A70                     	endif
 20780  016A70  0008               	tblrd		*
 20781  016A72  50F5               	movf	tablat,w,c
 20782  016A74  6E0B               	movwf	(btemp+10)^0,c
 20783  016A76  6A0C               	clrf	(btemp+11)^0,c
 20784                           
 20785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20786                           ; Switch size 1, requested type "simple"
 20787                           ; Number of cases is 1, Range of values is 0 to 0
 20788                           ; switch strategies available:
 20789                           ; Name         Instructions Cycles
 20790                           ; simple_byte            4     3 (average)
 20791                           ;	Chosen strategy is simple_byte
 20792  016A78  500C               	movf	(btemp+11)^0,w,c
 20793  016A7A  0A00               	xorlw	0	; case 0
 20794  016A7C  A4D8               	btfss	status,2,c
 20795  016A7E  D03C               	goto	l8916
 20796                           
 20797                           ; Switch size 1, requested type "simple"
 20798                           ; Number of cases is 2, Range of values is 43 to 45
 20799                           ; switch strategies available:
 20800                           ; Name         Instructions Cycles
 20801                           ; simple_byte            7     4 (average)
 20802                           ;	Chosen strategy is simple_byte
 20803  016A80  500B               	movf	(btemp+10)^0,w,c
 20804  016A82  0A2B               	xorlw	43	; case 43
 20805  016A84  B4D8               	btfsc	status,2,c
 20806  016A86  D7D3               	goto	l8908
 20807  016A88  0A06               	xorlw	6	; case 45
 20808  016A8A  B4D8               	btfsc	status,2,c
 20809  016A8C  D7C4               	goto	l8906
 20810  016A8E  D034               	goto	l8916
 20811  016A90                     l8912:
 20812                           
 20813                           ;stkvar	_n @ sp[(-9)+5]
 20814  016A90  0EFC               	movlw	-4
 20815  016A92  006F FF8C  F00B    	movff	plusw1,btemp+10
 20816  016A98  0EFD               	movlw	-3
 20817  016A9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20818  016AA0  0E0A               	movlw	10
 20819  016AA2  020B               	mulwf	(btemp+10)^0,c
 20820  016AA4  006F FFCC  F009    	movff	prodl,btemp+8
 20821  016AAA  006F FFD0  F00A    	movff	prodh,btemp+9
 20822  016AB0  020C               	mulwf	(btemp+11)^0,c
 20823  016AB2  50F3               	movf	prodl,w,c
 20824  016AB4  260A               	addwf	(btemp+9)^0,f,c
 20825                           
 20826                           ;stkvar	_s @ sp[(-9)+-2]
 20827  016AB6  50E1               	movf	fsr1l,w,c
 20828  016AB8  0FF5               	addlw	-11
 20829  016ABA  6ED9               	movwf	fsr2l,c
 20830  016ABC  50E2               	movf	fsr1h,w,c
 20831  016ABE  6EDA               	movwf	fsr2h,c
 20832  016AC0  0EFF               	movlw	255
 20833  016AC2  22DA               	addwfc	fsr2h,f,c
 20834  016AC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 20835  016ACA  006F FF77 FFF7     	movff	postdec2,tblptrh
 20836  016AD0                     	if	0	;tblptru may be non-zero
 20837  016AD0                     	endif
 20838  016AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20839  016AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 20840  016AD2  6EF8               	movwf	tblptru,c
 20841  016AD4                     	endif
 20842  016AD4  0008               	tblrd		*
 20843  016AD6  50F5               	movf	tablat,w,c
 20844  016AD8  5E09               	subwf	(btemp+8)^0,f,c
 20845  016ADA  0E00               	movlw	0
 20846  016ADC  5A0A               	subwfb	(btemp+9)^0,f,c
 20847  016ADE  0E30               	movlw	48
 20848  016AE0  2609               	addwf	(btemp+8)^0,f,c
 20849  016AE2  0E00               	movlw	0
 20850  016AE4  220A               	addwfc	(btemp+9)^0,f,c
 20851                           
 20852                           ;stkvar	_n @ sp[(-9)+5]
 20853  016AE6  0EFC               	movlw	-4
 20854  016AE8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20855  016AEE  0EFD               	movlw	-3
 20856  016AF0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20857  016AF6  D79B               	goto	l8908
 20858  016AF8                     l8916:
 20859  016AF8  0ED0               	movlw	208
 20860  016AFA  6E0B               	movwf	(btemp+10)^0,c
 20861  016AFC  0EFF               	movlw	255
 20862  016AFE  6E0C               	movwf	(btemp+11)^0,c
 20863                           
 20864                           ;stkvar	_s @ sp[(-9)+-2]
 20865  016B00  50E1               	movf	fsr1l,w,c
 20866  016B02  0FF5               	addlw	-11
 20867  016B04  6ED9               	movwf	fsr2l,c
 20868  016B06  50E2               	movf	fsr1h,w,c
 20869  016B08  6EDA               	movwf	fsr2h,c
 20870  016B0A  0EFF               	movlw	255
 20871  016B0C  22DA               	addwfc	fsr2h,f,c
 20872  016B0E  006F FF7B FFF6     	movff	postinc2,tblptrl
 20873  016B14  006F FF77 FFF7     	movff	postdec2,tblptrh
 20874  016B1A                     	if	0	;tblptru may be non-zero
 20875  016B1A                     	endif
 20876  016B1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20877  016B1A  0E00               	movlw	low (__mediumconst shr (0+16))
 20878  016B1C  6EF8               	movwf	tblptru,c
 20879  016B1E                     	endif
 20880  016B1E  0008               	tblrd		*
 20881  016B20  50F5               	movf	tablat,w,c
 20882  016B22  6E09               	movwf	(btemp+8)^0,c
 20883  016B24  6A0A               	clrf	(btemp+9)^0,c
 20884  016B26  500B               	movf	(btemp+10)^0,w,c
 20885  016B28  2609               	addwf	(btemp+8)^0,f,c
 20886  016B2A  500C               	movf	(btemp+11)^0,w,c
 20887  016B2C  220A               	addwfc	(btemp+9)^0,f,c
 20888  016B2E  500A               	movf	(btemp+9)^0,w,c
 20889  016B30  E106               	bnz	u8190
 20890  016B32  0E0A               	movlw	10
 20891  016B34  5C09               	subwf	(btemp+8)^0,w,c
 20892  016B36  B0D8               	btfsc	status,0,c
 20893  016B38  D002               	goto	u8190
 20894  016B3A  0E01               	movlw	1
 20895  016B3C  D001               	goto	u8200
 20896  016B3E                     u8190:
 20897  016B3E  0E00               	movlw	0
 20898  016B40                     u8200:
 20899  016B40  6E0B               	movwf	(btemp+10)^0,c
 20900  016B42  6A0C               	clrf	(btemp+11)^0,c
 20901                           
 20902                           ;stkvar	_atoi$5846 @ sp[(-9)+0]
 20903  016B44  0EF7               	movlw	-9
 20904  016B46  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20905  016B4C  0EF8               	movlw	-8
 20906  016B4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20907                           
 20908                           ;stkvar	_atoi$5846 @ sp[(-9)+0]
 20909  016B54  0EF7               	movlw	-9
 20910  016B56  006F FF8C  F001    	movff	plusw1,btemp
 20911  016B5C  0EF8               	movlw	-8
 20912  016B5E  50E3               	movf	plusw1,w,c
 20913  016B60  1001               	iorwf	btemp^0,w,c
 20914  016B62  A4D8               	btfss	status,2,c
 20915  016B64  D795               	goto	l8912
 20916                           
 20917                           ;stkvar	_neg @ sp[(-9)+7]
 20918  016B66  0EFE               	movlw	-2
 20919  016B68  006F FF8C  F001    	movff	plusw1,btemp
 20920  016B6E  0EFF               	movlw	-1
 20921  016B70  50E3               	movf	plusw1,w,c
 20922  016B72  1001               	iorwf	btemp^0,w,c
 20923  016B74  A4D8               	btfss	status,2,c
 20924  016B76  D00E               	goto	l8926
 20925                           
 20926                           ;stkvar	_n @ sp[(-9)+5]
 20927  016B78  0EFC               	movlw	-4
 20928  016B7A  006F FF8C  F001    	movff	plusw1,btemp
 20929  016B80  1E01               	comf	btemp^0,f,c
 20930  016B82  0EFD               	movlw	-3
 20931  016B84  006F FF8C  F002    	movff	plusw1,btemp+1
 20932  016B8A  1E02               	comf	(btemp+1)^0,f,c
 20933  016B8C  2A01               	incf	btemp^0,f,c
 20934  016B8E  B4D8               	btfsc	status,2,c
 20935  016B90  2A02               	incf	(btemp+1)^0,f,c
 20936  016B92  D008               	goto	l3041
 20937  016B94                     l8926:
 20938                           
 20939                           ;stkvar	_n @ sp[(-9)+5]
 20940  016B94  0EFC               	movlw	-4
 20941  016B96  006F FF8C  F001    	movff	plusw1,btemp
 20942  016B9C  0EFD               	movlw	-3
 20943  016B9E  006F FF8C  F002    	movff	plusw1,btemp+1
 20944  016BA4                     l3041:
 20945                           
 20946                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20947  016BA4  0EF5               	movlw	245
 20948  016BA6  26E1               	addwf	fsr1l,f,c
 20949  016BA8  0EFF               	movlw	255
 20950  016BAA  22E2               	addwfc	fsr1h,f,c
 20951  016BAC  0012               	return		;funcret
 20952  016BAE                     __end_of_atoi:
 20953                           	opt callstack 0
 20954                           
 20955 ;; *************** function _isspace *****************
 20956 ;; Defined at:
 20957 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20958 ;; Parameters:    Size  Location     Type
 20959 ;;  c               2  [STACK] int 
 20960 ;; Auto vars:     Size  Location     Type
 20961 ;;		None
 20962 ;; Return value:  Size  Location     Type
 20963 ;;                  2  [STACK] int 
 20964 ;; Registers used:
 20965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20966 ;; Tracked objects:
 20967 ;;		On entry : 0/0
 20968 ;;		On exit  : 0/0
 20969 ;;		Unchanged: 0/0
 20970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20975 ;;Total ram usage:        0 bytes
 20976 ;; Hardware stack levels used:    1
 20977 ;; Hardware stack levels required when called:   15
 20978 ;; This function calls:
 20979 ;;		Nothing
 20980 ;; This function is called by:
 20981 ;;		_atoi
 20982 ;; This function uses a reentrant model
 20983 ;;
 20984                           
 20985                           	psect	text77
 20986  01A20C                     __ptext77:
 20987                           	opt callstack 0
 20988  01A20C                     _isspace:
 20989                           	opt callstack 0
 20990                           
 20991                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20992  01A20C  52E6               	movf	postinc1,f,c
 20993                           
 20994                           ;stkvar	_isspace$5895 @ sp[(-1)+0]
 20995                           
 20996                           ;incstack = 0
 20997 ;; hardware stack exceeded
 20998  01A20E  0EFF               	movlw	-1
 20999  01A210  6AE3               	clrf	plusw1,c
 21000  01A212  2AE3               	incf	plusw1,f,c
 21001                           
 21002                           ;stkvar	_c @ sp[(-1)+-2]
 21003  01A214  0EFD               	movlw	-3
 21004  01A216  006F FF8C  F001    	movff	plusw1,btemp
 21005  01A21C  0E20               	movlw	32
 21006  01A21E  1801               	xorwf	btemp^0,w,c
 21007  01A220  E104               	bnz	u7020
 21008  01A222  0EFE               	movlw	-2
 21009  01A224  50E3               	movf	plusw1,w,c
 21010  01A226  B4D8               	btfsc	status,2,c
 21011  01A228  D012               	goto	l8284
 21012  01A22A                     u7020:
 21013                           
 21014                           ;stkvar	_c @ sp[(-1)+-2]
 21015  01A22A  0EFD               	movlw	-3
 21016  01A22C  50E3               	movf	plusw1,w,c
 21017  01A22E  0FF7               	addlw	247
 21018  01A230  6E0B               	movwf	(btemp+10)^0,c
 21019  01A232  0EFE               	movlw	-2
 21020  01A234  006F FF8C  F00C    	movff	plusw1,btemp+11
 21021  01A23A  0EFF               	movlw	255
 21022  01A23C  220C               	addwfc	(btemp+11)^0,f,c
 21023  01A23E  500C               	movf	(btemp+11)^0,w,c
 21024  01A240  E104               	bnz	u7030
 21025  01A242  0E05               	movlw	5
 21026  01A244  5C0B               	subwf	(btemp+10)^0,w,c
 21027  01A246  A0D8               	btfss	status,0,c
 21028  01A248  D002               	goto	l8284
 21029  01A24A                     u7030:
 21030                           
 21031                           ;stkvar	_isspace$5895 @ sp[(-1)+0]
 21032  01A24A  0EFF               	movlw	-1
 21033  01A24C  6AE3               	clrf	plusw1,c
 21034  01A24E                     l8284:
 21035                           
 21036                           ;stkvar	_isspace$5895 @ sp[(-1)+0]
 21037  01A24E  0EFF               	movlw	-1
 21038  01A250  50E3               	movf	plusw1,w,c
 21039  01A252  6E01               	movwf	btemp^0,c
 21040  01A254  6A02               	clrf	(btemp+1)^0,c
 21041                           
 21042                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21043  01A256  52E5               	movf	postdec1,f,c
 21044  01A258  52E5               	movf	postdec1,f,c
 21045  01A25A  52E5               	movf	postdec1,f,c
 21046  01A25C  0012               	return		;funcret
 21047  01A25E                     __end_of_isspace:
 21048                           	opt callstack 0
 21049                           
 21050 ;; *************** function _isdigit *****************
 21051 ;; Defined at:
 21052 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;  c               2  [STACK] int 
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;		None
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  2  [STACK] int 
 21059 ;; Registers used:
 21060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21070 ;;Total ram usage:        0 bytes
 21071 ;; Hardware stack levels used:    1
 21072 ;; Hardware stack levels required when called:   15
 21073 ;; This function calls:
 21074 ;;		Nothing
 21075 ;; This function is called by:
 21076 ;;		_vfpfcnvrt
 21077 ;;		_atoi
 21078 ;; This function uses a reentrant model
 21079 ;;
 21080                           
 21081                           	psect	text78
 21082  01A8F2                     __ptext78:
 21083                           	opt callstack 0
 21084  01A8F2                     _isdigit:
 21085                           	opt callstack 0
 21086                           
 21087                           ;stkvar	_c @ sp[(0)+-2]
 21088                           
 21089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21090                           ;incstack = 0
 21091 ;; hardware stack exceeded
 21092  01A8F2  0EFE               	movlw	-2
 21093  01A8F4  50E3               	movf	plusw1,w,c
 21094  01A8F6  0FD0               	addlw	208
 21095  01A8F8  6E0B               	movwf	(btemp+10)^0,c
 21096  01A8FA  0EFF               	movlw	-1
 21097  01A8FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21098  01A902  0EFF               	movlw	255
 21099  01A904  220C               	addwfc	(btemp+11)^0,f,c
 21100  01A906  500C               	movf	(btemp+11)^0,w,c
 21101  01A908  E106               	bnz	u5870
 21102  01A90A  0E0A               	movlw	10
 21103  01A90C  5C0B               	subwf	(btemp+10)^0,w,c
 21104  01A90E  B0D8               	btfsc	status,0,c
 21105  01A910  D002               	goto	u5870
 21106  01A912  0E01               	movlw	1
 21107  01A914  D001               	goto	u5880
 21108  01A916                     u5870:
 21109  01A916  0E00               	movlw	0
 21110  01A918                     u5880:
 21111  01A918  6E01               	movwf	btemp^0,c
 21112  01A91A  6A02               	clrf	(btemp+1)^0,c
 21113                           
 21114                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21115  01A91C  52E5               	movf	postdec1,f,c
 21116  01A91E  52E5               	movf	postdec1,f,c
 21117  01A920  0012               	return		;funcret
 21118  01A922                     __end_of_isdigit:
 21119                           	opt callstack 0
 21120                           
 21121 ;; *************** function _set_vterm *****************
 21122 ;; Defined at:
 21123 ;;		line 107 in file "mconfig.c"
 21124 ;; Parameters:    Size  Location     Type
 21125 ;;  vterm           1  [STACK] const unsigned char 
 21126 ;; Auto vars:     Size  Location     Type
 21127 ;;		None
 21128 ;; Return value:  Size  Location     Type
 21129 ;;                  1  [STACK] unsigned char 
 21130 ;; Registers used:
 21131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21132 ;; Tracked objects:
 21133 ;;		On entry : 0/0
 21134 ;;		On exit  : 0/0
 21135 ;;		Unchanged: 0/0
 21136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21141 ;;Total ram usage:        0 bytes
 21142 ;; Hardware stack levels used:    1
 21143 ;; Hardware stack levels required when called:   15
 21144 ;; This function calls:
 21145 ;;		Nothing
 21146 ;; This function is called by:
 21147 ;;		_main
 21148 ;;		_check_help
 21149 ;; This function uses a reentrant model
 21150 ;;
 21151                           
 21152                           	psect	text79
 21153  01AE04                     __ptext79:
 21154                           	opt callstack 0
 21155  01AE04                     _set_vterm:
 21156                           	opt callstack 15
 21157                           
 21158                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 21159                           ;stkvar	_vterm @ sp[(0)+-1]
 21160                           
 21161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21162                           ;incstack = 0
 21163  01AE04  0EFF               	movlw	-1
 21164  01AE06  006F FF8C  F00C    	movff	plusw1,btemp+11
 21165  01AE0C  0E03               	movlw	3
 21166  01AE0E  160C               	andwf	(btemp+11)^0,f,c
 21167  01AE10  EE22  F11F         	lfsr	2,_D+288
 21168  01AE14  50DF               	movf	223,w,c
 21169  01AE16  180C               	xorwf	(btemp+11)^0,w,c
 21170  01AE18  0BFE               	andlw	-2
 21171  01AE1A  180C               	xorwf	(btemp+11)^0,w,c
 21172  01AE1C  6EDF               	movwf	223,c
 21173                           
 21174                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21175  01AE1E  52E5               	movf	postdec1,f,c
 21176  01AE20  0012               	return		;funcret
 21177  01AE22                     __end_of_set_vterm:
 21178                           	opt callstack 0
 21179                           
 21180 ;; *************** function _set_temp_display_help *****************
 21181 ;; Defined at:
 21182 ;;		line 211 in file "mconfig.c"
 21183 ;; Parameters:    Size  Location     Type
 21184 ;;  new_response    1  [STACK] const enum E16509
 21185 ;; Auto vars:     Size  Location     Type
 21186 ;;		None
 21187 ;; Return value:  Size  Location     Type
 21188 ;;                  1  [STACK] enum E16509
 21189 ;; Registers used:
 21190 ;;		wreg, fsr1l, fsr1h
 21191 ;; Tracked objects:
 21192 ;;		On entry : 0/2
 21193 ;;		On exit  : 3F/2
 21194 ;;		Unchanged: 0/0
 21195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21200 ;;Total ram usage:        0 bytes
 21201 ;; Hardware stack levels used:    1
 21202 ;; Hardware stack levels required when called:   15
 21203 ;; This function calls:
 21204 ;;		Nothing
 21205 ;; This function is called by:
 21206 ;;		_check_help
 21207 ;; This function uses a reentrant model
 21208 ;;
 21209                           
 21210                           	psect	text80
 21211  01AFA2                     __ptext80:
 21212                           	opt callstack 0
 21213  01AFA2                     _set_temp_display_help:
 21214                           	opt callstack 14
 21215                           
 21216                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 21217                           
 21218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21219                           ;incstack = 0
 21220  01AFA2  0102               	movlb	2	; () banked
 21221  01AFA4  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21222                           
 21223                           ; BSR set to: 2
 21224                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 21225                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21226  01AFA6  0EFF               	movlw	-1
 21227  01AFA8  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 21228                           
 21229                           ; BSR set to: 2
 21230                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21231  01AFAE  52E5               	movf	postdec1,f,c
 21232  01AFB0  0012               	return		;funcret
 21233  01AFB2                     __end_of_set_temp_display_help:
 21234                           	opt callstack 0
 21235                           
 21236 ;; *************** function _set_display_info *****************
 21237 ;; Defined at:
 21238 ;;		line 200 in file "mconfig.c"
 21239 ;; Parameters:    Size  Location     Type
 21240 ;;  new_response    1  [STACK] const enum E16509
 21241 ;; Auto vars:     Size  Location     Type
 21242 ;;		None
 21243 ;; Return value:  Size  Location     Type
 21244 ;;                  1  [STACK] enum E16994
 21245 ;; Registers used:
 21246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21247 ;; Tracked objects:
 21248 ;;		On entry : 0/0
 21249 ;;		On exit  : 0/0
 21250 ;;		Unchanged: 0/0
 21251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21256 ;;Total ram usage:        0 bytes
 21257 ;; Hardware stack levels used:    1
 21258 ;; Hardware stack levels required when called:   16
 21259 ;; This function calls:
 21260 ;;		_TimerDone
 21261 ;; This function is called by:
 21262 ;;		_main
 21263 ;;		_check_help
 21264 ;; This function uses a reentrant model
 21265 ;;
 21266                           
 21267                           	psect	text81
 21268  01AE22                     __ptext81:
 21269                           	opt callstack 0
 21270  01AE22                     _set_display_info:
 21271                           	opt callstack 14
 21272                           
 21273                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 21274                           
 21275                           ; BSR set to: 2
 21276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21277                           ;incstack = 0
 21278  01AE22  0E07               	movlw	7
 21279  01AE24  6EE6               	movwf	postinc1,c
 21280  01AE26  EC3B  F0D5         	call	_TimerDone	;wreg free
 21281  01AE2A  5001               	movf	btemp^0,w,c
 21282  01AE2C  B4D8               	btfsc	status,2,c
 21283  01AE2E  D006               	goto	l1703
 21284                           
 21285                           ;mconfig.c: 205:   old_info = V.response.info;
 21286  01AE30  0102               	movlb	2	; () banked
 21287  01AE32  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 21288                           
 21289                           ; BSR set to: 2
 21290                           ;mconfig.c: 206:   V.response.info = new_response_info;
 21291                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21292  01AE34  0EFF               	movlw	-1
 21293  01AE36  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 21294  01AE3C                     l1703:
 21295                           
 21296                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 21297  01AE3C  52E5               	movf	postdec1,f,c
 21298  01AE3E  0012               	return		;funcret
 21299  01AE40                     __end_of_set_display_info:
 21300                           	opt callstack 0
 21301                           
 21302 ;; *************** function _mode_lamp_dim *****************
 21303 ;; Defined at:
 21304 ;;		line 13 in file "mconfig.c"
 21305 ;; Parameters:    Size  Location     Type
 21306 ;;  level           2  [STACK] const unsigned short 
 21307 ;; Auto vars:     Size  Location     Type
 21308 ;;		None
 21309 ;; Return value:  Size  Location     Type
 21310 ;;                  1  [STACK] void 
 21311 ;; Registers used:
 21312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21313 ;; Tracked objects:
 21314 ;;		On entry : 0/2
 21315 ;;		On exit  : 0/0
 21316 ;;		Unchanged: 0/0
 21317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21322 ;;Total ram usage:        0 bytes
 21323 ;; Hardware stack levels used:    1
 21324 ;; Hardware stack levels required when called:   16
 21325 ;; This function calls:
 21326 ;;		_PWM8_LoadDutyValue
 21327 ;; This function is called by:
 21328 ;;		_main
 21329 ;;		_check_help
 21330 ;; This function uses a reentrant model
 21331 ;;
 21332                           
 21333                           	psect	text82
 21334  01AEEA                     __ptext82:
 21335                           	opt callstack 0
 21336  01AEEA                     _mode_lamp_dim:
 21337                           	opt callstack 14
 21338                           
 21339                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 21340                           ;stkvar	_level @ sp[(0)+-2]
 21341                           
 21342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21343                           ;incstack = 0
 21344  01AEEA  0EFE               	movlw	-2
 21345  01AEEC  006F FF8F FFE6     	movff	plusw1,postinc1
 21346  01AEF2  006F FF8F FFE6     	movff	plusw1,postinc1
 21347  01AEF8  EC99  F0D2         	call	_PWM8_LoadDutyValue	;wreg free
 21348                           
 21349                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 21350  01AEFC  52E5               	movf	postdec1,f,c
 21351  01AEFE  52E5               	movf	postdec1,f,c
 21352  01AF00  0012               	return		;funcret
 21353  01AF02                     __end_of_mode_lamp_dim:
 21354                           	opt callstack 0
 21355                           
 21356 ;; *************** function _mode_lamp_bright *****************
 21357 ;; Defined at:
 21358 ;;		line 18 in file "mconfig.c"
 21359 ;; Parameters:    Size  Location     Type
 21360 ;;		None
 21361 ;; Auto vars:     Size  Location     Type
 21362 ;;		None
 21363 ;; Return value:  Size  Location     Type
 21364 ;;                  1  [STACK] void 
 21365 ;; Registers used:
 21366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21367 ;; Tracked objects:
 21368 ;;		On entry : 0/0
 21369 ;;		On exit  : 0/0
 21370 ;;		Unchanged: 0/0
 21371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21376 ;;Total ram usage:        0 bytes
 21377 ;; Hardware stack levels used:    1
 21378 ;; Hardware stack levels required when called:   16
 21379 ;; This function calls:
 21380 ;;		_PWM8_LoadDutyValue
 21381 ;; This function is called by:
 21382 ;;		_check_help
 21383 ;; This function uses a reentrant model
 21384 ;;
 21385                           
 21386                           	psect	text83
 21387  01AFC0                     __ptext83:
 21388                           	opt callstack 0
 21389  01AFC0                     _mode_lamp_bright:
 21390                           	opt callstack 13
 21391                           
 21392                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21393                           
 21394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21395                           ;incstack = 0
 21396  01AFC0  0E2C               	movlw	44
 21397  01AFC2  6EE6               	movwf	postinc1,c
 21398  01AFC4  0E01               	movlw	1
 21399  01AFC6  6EE6               	movwf	postinc1,c
 21400  01AFC8  EC99  F0D2         	call	_PWM8_LoadDutyValue	;wreg free
 21401                           
 21402                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21403  01AFCC  0012               	return		;funcret
 21404  01AFCE                     __end_of_mode_lamp_bright:
 21405                           	opt callstack 0
 21406                           
 21407 ;; *************** function _PWM8_LoadDutyValue *****************
 21408 ;; Defined at:
 21409 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21410 ;; Parameters:    Size  Location     Type
 21411 ;;  dutyValue       2  [STACK] unsigned short 
 21412 ;; Auto vars:     Size  Location     Type
 21413 ;;		None
 21414 ;; Return value:  Size  Location     Type
 21415 ;;                  1  [STACK] void 
 21416 ;; Registers used:
 21417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21418 ;; Tracked objects:
 21419 ;;		On entry : 0/2
 21420 ;;		On exit  : 0/0
 21421 ;;		Unchanged: 0/0
 21422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21427 ;;Total ram usage:        0 bytes
 21428 ;; Hardware stack levels used:    1
 21429 ;; Hardware stack levels required when called:   15
 21430 ;; This function calls:
 21431 ;;		Nothing
 21432 ;; This function is called by:
 21433 ;;		_mode_lamp_dim
 21434 ;;		_mode_lamp_bright
 21435 ;; This function uses a reentrant model
 21436 ;;
 21437                           
 21438                           	psect	text84
 21439  01A532                     __ptext84:
 21440                           	opt callstack 0
 21441  01A532                     _PWM8_LoadDutyValue:
 21442                           	opt callstack 14
 21443                           
 21444                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21445                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21446                           
 21447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21448                           ;incstack = 0
 21449  01A532  0EFE               	movlw	-2
 21450  01A534  006F FF8C  F00B    	movff	plusw1,btemp+10
 21451  01A53A  0EFF               	movlw	-1
 21452  01A53C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21453  01A542  90D8               	bcf	status,0,c
 21454  01A544  320C               	rrcf	(btemp+11)^0,f,c
 21455  01A546  320B               	rrcf	(btemp+10)^0,f,c
 21456  01A548  90D8               	bcf	status,0,c
 21457  01A54A  320C               	rrcf	(btemp+11)^0,f,c
 21458  01A54C  320B               	rrcf	(btemp+10)^0,f,c
 21459  01A54E  500B               	movf	(btemp+10)^0,w,c
 21460  01A550  6E61               	movwf	97,c	;volatile
 21461                           
 21462                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21463                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21464  01A552  0EFE               	movlw	-2
 21465  01A554  006F FF8C  F00C    	movff	plusw1,btemp+11
 21466  01A55A  0E03               	movlw	3
 21467  01A55C  160C               	andwf	(btemp+11)^0,f,c
 21468  01A55E  0E06               	movlw	6
 21469  01A560  6E01               	movwf	btemp^0,c
 21470  01A562                     u8675:
 21471  01A562  90D8               	bcf	status,0,c
 21472  01A564  360C               	rlcf	(btemp+11)^0,f,c
 21473  01A566  2E01               	decfsz	btemp^0,f,c
 21474  01A568  D7FC               	goto	u8675
 21475  01A56A  500C               	movf	(btemp+11)^0,w,c
 21476  01A56C  6E60               	movwf	96,c	;volatile
 21477                           
 21478                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21479  01A56E  52E5               	movf	postdec1,f,c
 21480  01A570  52E5               	movf	postdec1,f,c
 21481  01A572  0012               	return		;funcret
 21482  01A574                     __end_of_PWM8_LoadDutyValue:
 21483                           	opt callstack 0
 21484                           
 21485 ;; *************** function _help_button *****************
 21486 ;; Defined at:
 21487 ;;		line 26 in file "mconfig.c"
 21488 ;; Parameters:    Size  Location     Type
 21489 ;;		None
 21490 ;; Auto vars:     Size  Location     Type
 21491 ;;		None
 21492 ;; Return value:  Size  Location     Type
 21493 ;;                  1  [STACK] _Bool 
 21494 ;; Registers used:
 21495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21496 ;; Tracked objects:
 21497 ;;		On entry : 0/2
 21498 ;;		On exit  : 0/0
 21499 ;;		Unchanged: 0/0
 21500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21505 ;;Total ram usage:        0 bytes
 21506 ;; Hardware stack levels used:    1
 21507 ;; Hardware stack levels required when called:   16
 21508 ;; This function calls:
 21509 ;;		_StartTimer
 21510 ;;		_TimerDone
 21511 ;; This function is called by:
 21512 ;;		_check_help
 21513 ;; This function uses a reentrant model
 21514 ;;
 21515                           
 21516                           	psect	text85
 21517  01A6EC                     __ptext85:
 21518                           	opt callstack 0
 21519  01A6EC                     _help_button:
 21520                           	opt callstack 13
 21521                           
 21522                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21523                           
 21524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21525                           ;incstack = 0
 21526  01A6EC  B0CB               	btfsc	203,0,c	;volatile
 21527  01A6EE  D00C               	goto	l1646
 21528                           
 21529                           ;mconfig.c: 29:   V.help = 1;
 21530  01A6F0  0102               	movlb	2	; () banked
 21531  01A6F2  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21532                           
 21533                           ; BSR set to: 2
 21534                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21535  01A6F4  0E08               	movlw	8
 21536  01A6F6  6EE6               	movwf	postinc1,c
 21537  01A6F8  EC3B  F0D5         	call	_TimerDone	;wreg free
 21538  01A6FC  5001               	movf	btemp^0,w,c
 21539  01A6FE  B4D8               	btfsc	status,2,c
 21540  01A700  D003               	goto	l1646
 21541                           
 21542                           ;mconfig.c: 31:    return 1;
 21543  01A702  0E01               	movlw	1
 21544  01A704  6E01               	movwf	btemp^0,c
 21545  01A706  0012               	return	
 21546  01A708                     l1646:
 21547                           
 21548                           ;mconfig.c: 34:  if (!V.help)
 21549  01A708  0102               	movlb	2	; () banked
 21550  01A70A  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21551  01A70C  D008               	goto	l9962
 21552                           
 21553                           ; BSR set to: 2
 21554                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21555  01A70E  0E2C               	movlw	44
 21556  01A710  6EE6               	movwf	postinc1,c
 21557  01A712  0E01               	movlw	1
 21558  01A714  6EE6               	movwf	postinc1,c
 21559  01A716  0E08               	movlw	8
 21560  01A718  6EE6               	movwf	postinc1,c
 21561  01A71A  ECBA  F0D2         	call	_StartTimer	;wreg free
 21562  01A71E                     l9962:
 21563                           
 21564                           ;mconfig.c: 37:  return 0;
 21565  01A71E  0E00               	movlw	0
 21566  01A720  6E01               	movwf	btemp^0,c
 21567                           
 21568                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21569  01A722  0012               	return		;funcret
 21570  01A724                     __end_of_help_button:
 21571                           	opt callstack 0
 21572                           
 21573 ;; *************** function _TimerDone *****************
 21574 ;; Defined at:
 21575 ;;		line 20 in file "timers.c"
 21576 ;; Parameters:    Size  Location     Type
 21577 ;;  timer           1  [STACK] const unsigned char 
 21578 ;; Auto vars:     Size  Location     Type
 21579 ;;		None
 21580 ;; Return value:  Size  Location     Type
 21581 ;;                  1  [STACK] _Bool 
 21582 ;; Registers used:
 21583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21584 ;; Tracked objects:
 21585 ;;		On entry : 0/0
 21586 ;;		On exit  : 0/0
 21587 ;;		Unchanged: 0/0
 21588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21593 ;;Total ram usage:        0 bytes
 21594 ;; Hardware stack levels used:    1
 21595 ;; Hardware stack levels required when called:   15
 21596 ;; This function calls:
 21597 ;;		Nothing
 21598 ;; This function is called by:
 21599 ;;		_main
 21600 ;;		_WaitMs
 21601 ;;		_help_button
 21602 ;;		_check_help
 21603 ;;		_set_display_info
 21604 ;;		_update_adc_result
 21605 ;; This function uses a reentrant model
 21606 ;;
 21607                           
 21608                           	psect	text86
 21609  01AA76                     __ptext86:
 21610                           	opt callstack 0
 21611  01AA76                     _TimerDone:
 21612                           	opt callstack 14
 21613                           
 21614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21615                           ;incstack = 0
 21616  01AA76  0004               	clrwdt		;# 
 21617                           
 21618                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21619                           ;stkvar	_timer @ sp[(0)+-1]
 21620  01AA78  0EFF               	movlw	-1
 21621  01AA7A  50E3               	movf	plusw1,w,c
 21622  01AA7C  0D02               	mullw	2
 21623  01AA7E  0EE5               	movlw	low _tickCount
 21624  01AA80  24F3               	addwf	243,w,c
 21625  01AA82  6ED9               	movwf	fsr2l,c
 21626  01AA84  0E02               	movlw	high _tickCount
 21627  01AA86  20F4               	addwfc	prodh,w,c
 21628  01AA88  6EDA               	movwf	fsr2h,c
 21629  01AA8A  50DE               	movf	postinc2,w,c
 21630  01AA8C  10DE               	iorwf	postinc2,w,c
 21631  01AA8E  A4D8               	btfss	status,2,c
 21632  01AA90  D002               	goto	l9196
 21633                           
 21634                           ;timers.c: 24:   return 1;
 21635  01AA92  0E01               	movlw	1
 21636  01AA94  D001               	goto	L22
 21637  01AA96                     l9196:
 21638                           
 21639                           ;timers.c: 26:  return 0;
 21640  01AA96  0E00               	movlw	0
 21641  01AA98                     L22:
 21642  01AA98  6E01               	movwf	btemp^0,c
 21643                           
 21644                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21645  01AA9A  52E5               	movf	postdec1,f,c
 21646  01AA9C  0012               	return		;funcret
 21647  01AA9E                     __end_of_TimerDone:
 21648                           	opt callstack 0
 21649                           
 21650 ;; *************** function _StartTimer *****************
 21651 ;; Defined at:
 21652 ;;		line 12 in file "timers.c"
 21653 ;; Parameters:    Size  Location     Type
 21654 ;;  timer           1  [STACK] const unsigned char 
 21655 ;;  count           2  [STACK] const unsigned short 
 21656 ;; Auto vars:     Size  Location     Type
 21657 ;;		None
 21658 ;; Return value:  Size  Location     Type
 21659 ;;                  1  [STACK] void 
 21660 ;; Registers used:
 21661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21662 ;; Tracked objects:
 21663 ;;		On entry : 0/0
 21664 ;;		On exit  : 0/0
 21665 ;;		Unchanged: 0/0
 21666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21671 ;;Total ram usage:        0 bytes
 21672 ;; Hardware stack levels used:    1
 21673 ;; Hardware stack levels required when called:   15
 21674 ;; This function calls:
 21675 ;;		Nothing
 21676 ;; This function is called by:
 21677 ;;		_main
 21678 ;;		_WaitMs
 21679 ;;		_help_button
 21680 ;;		_check_help
 21681 ;;		_update_adc_result
 21682 ;;		_calc_bsoc
 21683 ;; This function uses a reentrant model
 21684 ;;
 21685                           
 21686                           	psect	text87
 21687  01A574                     __ptext87:
 21688                           	opt callstack 0
 21689  01A574                     _StartTimer:
 21690                           	opt callstack 0
 21691                           
 21692                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21693                           ;stkvar	_count @ sp[(0)+-3]
 21694                           
 21695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21696                           ;incstack = 0
 21697 ;; hardware stack exceeded
 21698  01A574  0EFD               	movlw	-3
 21699  01A576  006F FF8C  F00B    	movff	plusw1,btemp+10
 21700  01A57C  0EFE               	movlw	-2
 21701  01A57E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21702  01A584  90D8               	bcf	status,0,c
 21703  01A586  340B               	rlcf	(btemp+10)^0,w,c
 21704  01A588  6E09               	movwf	(btemp+8)^0,c
 21705  01A58A  340C               	rlcf	(btemp+11)^0,w,c
 21706  01A58C  6E0A               	movwf	(btemp+9)^0,c
 21707                           
 21708                           ;stkvar	_timer @ sp[(0)+-1]
 21709  01A58E  0EFF               	movlw	-1
 21710  01A590  50E3               	movf	plusw1,w,c
 21711  01A592  0D02               	mullw	2
 21712  01A594  0EE5               	movlw	low _tickCount
 21713  01A596  24F3               	addwf	243,w,c
 21714  01A598  6ED9               	movwf	fsr2l,c
 21715  01A59A  0E02               	movlw	high _tickCount
 21716  01A59C  20F4               	addwfc	prodh,w,c
 21717  01A59E  6EDA               	movwf	fsr2h,c
 21718  01A5A0  0060  F027  FFDE   	movff	btemp+8,postinc2
 21719  01A5A6  0060  F02B  FFDD   	movff	btemp+9,postdec2
 21720                           
 21721                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21722  01A5AC  52E5               	movf	postdec1,f,c
 21723  01A5AE  52E5               	movf	postdec1,f,c
 21724  01A5B0  52E5               	movf	postdec1,f,c
 21725  01A5B2  0012               	return		;funcret
 21726  01A5B4                     __end_of_StartTimer:
 21727                           	opt callstack 0
 21728                           
 21729 ;; *************** function _display_info *****************
 21730 ;; Defined at:
 21731 ;;		line 190 in file "mconfig.c"
 21732 ;; Parameters:    Size  Location     Type
 21733 ;;		None
 21734 ;; Auto vars:     Size  Location     Type
 21735 ;;		None
 21736 ;; Return value:  Size  Location     Type
 21737 ;;                  1  [STACK] enum E16509
 21738 ;; Registers used:
 21739 ;;		btemp
 21740 ;; Tracked objects:
 21741 ;;		On entry : 0/2
 21742 ;;		On exit  : 0/0
 21743 ;;		Unchanged: 0/0
 21744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21749 ;;Total ram usage:        0 bytes
 21750 ;; Hardware stack levels used:    1
 21751 ;; Hardware stack levels required when called:   15
 21752 ;; This function calls:
 21753 ;;		Nothing
 21754 ;; This function is called by:
 21755 ;;		_check_help
 21756 ;; This function uses a reentrant model
 21757 ;;
 21758                           
 21759                           	psect	text88
 21760  01B036                     __ptext88:
 21761                           	opt callstack 0
 21762  01B036                     _display_info:
 21763                           	opt callstack 14
 21764                           
 21765                           ;mconfig.c: 192:  return V.response.info;
 21766                           
 21767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21768                           ;incstack = 0
 21769  01B036  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 21770                           
 21771                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21772  01B03C  0012               	return		;funcret
 21773  01B03E                     __end_of_display_info:
 21774                           	opt callstack 0
 21775                           
 21776 ;; *************** function _display_help *****************
 21777 ;; Defined at:
 21778 ;;		line 195 in file "mconfig.c"
 21779 ;; Parameters:    Size  Location     Type
 21780 ;;		None
 21781 ;; Auto vars:     Size  Location     Type
 21782 ;;		None
 21783 ;; Return value:  Size  Location     Type
 21784 ;;                  1  [STACK] enum E16509
 21785 ;; Registers used:
 21786 ;;		btemp
 21787 ;; Tracked objects:
 21788 ;;		On entry : 3F/2
 21789 ;;		On exit  : 0/0
 21790 ;;		Unchanged: 0/0
 21791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21796 ;;Total ram usage:        0 bytes
 21797 ;; Hardware stack levels used:    1
 21798 ;; Hardware stack levels required when called:   15
 21799 ;; This function calls:
 21800 ;;		Nothing
 21801 ;; This function is called by:
 21802 ;;		_check_help
 21803 ;; This function uses a reentrant model
 21804 ;;
 21805                           
 21806                           	psect	text89
 21807  01B03E                     __ptext89:
 21808                           	opt callstack 0
 21809  01B03E                     _display_help:
 21810                           	opt callstack 14
 21811                           
 21812                           ;mconfig.c: 197:  return V.response.help_temp;
 21813                           
 21814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21815                           ;incstack = 0
 21816  01B03E  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 21817                           
 21818                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21819  01B044  0012               	return		;funcret
 21820  01B046                     __end_of_display_help:
 21821                           	opt callstack 0
 21822                           
 21823 ;; *************** function _check_enter_button *****************
 21824 ;; Defined at:
 21825 ;;		line 42 in file "hid.c"
 21826 ;; Parameters:    Size  Location     Type
 21827 ;;  h               1  [STACK] PTR struct H_data
 21828 ;;		 -> H(7), 
 21829 ;; Auto vars:     Size  Location     Type
 21830 ;;		None
 21831 ;; Return value:  Size  Location     Type
 21832 ;;                  1  [STACK] _Bool 
 21833 ;; Registers used:
 21834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21835 ;; Tracked objects:
 21836 ;;		On entry : 0/0
 21837 ;;		On exit  : 0/0
 21838 ;;		Unchanged: 0/0
 21839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21844 ;;Total ram usage:        0 bytes
 21845 ;; Hardware stack levels used:    1
 21846 ;; Hardware stack levels required when called:   15
 21847 ;; This function calls:
 21848 ;;		Nothing
 21849 ;; This function is called by:
 21850 ;;		_main
 21851 ;; This function uses a reentrant model
 21852 ;;
 21853                           
 21854                           	psect	text90
 21855  01A5B4                     __ptext90:
 21856                           	opt callstack 0
 21857  01A5B4                     _check_enter_button:
 21858                           	opt callstack 15
 21859                           
 21860                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 21861                           ;stkvar	_h @ sp[(0)+-1]
 21862                           
 21863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21864                           ;incstack = 0
 21865  01A5B4  0EFF               	movlw	-1
 21866  01A5B6  50E3               	movf	plusw1,w,c
 21867  01A5B8  6ED9               	movwf	fsr2l,c
 21868  01A5BA  6ADA               	clrf	fsr2h,c
 21869  01A5BC  0E04               	movlw	4
 21870  01A5BE  26D9               	addwf	fsr2l,f,c
 21871  01A5C0  50DF               	movf	indf2,w,c
 21872  01A5C2  A4D8               	btfss	status,2,c
 21873  01A5C4  D013               	goto	l10550
 21874                           
 21875                           ;stkvar	_h @ sp[(0)+-1]
 21876  01A5C6  0EFF               	movlw	-1
 21877  01A5C8  50E3               	movf	plusw1,w,c
 21878  01A5CA  6ED9               	movwf	fsr2l,c
 21879  01A5CC  6ADA               	clrf	fsr2h,c
 21880  01A5CE  0E05               	movlw	5
 21881  01A5D0  26D9               	addwf	fsr2l,f,c
 21882  01A5D2  50DF               	movf	indf2,w,c
 21883  01A5D4  A4D8               	btfss	status,2,c
 21884  01A5D6  D00A               	goto	l10550
 21885                           
 21886                           ;hid.c: 45:   h->wait_enter = 1;
 21887                           ;stkvar	_h @ sp[(0)+-1]
 21888  01A5D8  0EFF               	movlw	-1
 21889  01A5DA  50E3               	movf	plusw1,w,c
 21890  01A5DC  6ED9               	movwf	fsr2l,c
 21891  01A5DE  6ADA               	clrf	fsr2h,c
 21892  01A5E0  0E04               	movlw	4
 21893  01A5E2  26D9               	addwf	fsr2l,f,c
 21894  01A5E4  0E01               	movlw	1
 21895  01A5E6  6EDF               	movwf	indf2,c
 21896                           
 21897                           ;hid.c: 46:   return 1;
 21898  01A5E8  0E01               	movlw	1
 21899  01A5EA  D001               	goto	L23
 21900  01A5EC                     l10550:
 21901                           
 21902                           ;hid.c: 48:  return 0;
 21903  01A5EC  0E00               	movlw	0
 21904  01A5EE                     L23:
 21905  01A5EE  6E01               	movwf	btemp^0,c
 21906                           
 21907                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 21908  01A5F0  52E5               	movf	postdec1,f,c
 21909  01A5F2  0012               	return		;funcret
 21910  01A5F4                     __end_of_check_enter_button:
 21911                           	opt callstack 0
 21912                           
 21913 ;; *************** function _calc_ror_data *****************
 21914 ;; Defined at:
 21915 ;;		line 90 in file "mbmc.c"
 21916 ;; Parameters:    Size  Location     Type
 21917 ;;		None
 21918 ;; Auto vars:     Size  Location     Type
 21919 ;;		None
 21920 ;; Return value:  Size  Location     Type
 21921 ;;                  1  [STACK] void 
 21922 ;; Registers used:
 21923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21924 ;; Tracked objects:
 21925 ;;		On entry : 0/39
 21926 ;;		On exit  : 0/0
 21927 ;;		Unchanged: 0/0
 21928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21933 ;;Total ram usage:        0 bytes
 21934 ;; Hardware stack levels used:    1
 21935 ;; Hardware stack levels required when called:   18
 21936 ;; This function calls:
 21937 ;;		___flge
 21938 ;;		___flsub
 21939 ;;		_conv_raw_result
 21940 ;;		_fabsf
 21941 ;; This function is called by:
 21942 ;;		_main
 21943 ;; This function uses a reentrant model
 21944 ;;
 21945                           
 21946                           	psect	text91
 21947  017CDC                     __ptext91:
 21948                           	opt callstack 0
 21949  017CDC                     _calc_ror_data:
 21950                           	opt callstack 12
 21951                           
 21952                           ;mbmc.c: 92:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 94:  C.bc_ror = fabsf(conv_
      +                          raw_result(C_BATT, CONV) - bcror);
 21953                           
 21954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21955                           ;incstack = 0
 21956  017CDC  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 21957  017CE2  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 21958  017CE8  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 21959  017CEE  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 21960  017CF4  0E00               	movlw	0
 21961  017CF6  6EE6               	movwf	postinc1,c
 21962  017CF8  0E00               	movlw	0
 21963  017CFA  6EE6               	movwf	postinc1,c
 21964  017CFC  ECEE  F0A4         	call	_conv_raw_result	;wreg free
 21965  017D00  0060  F007  FFE6   	movff	btemp,postinc1
 21966  017D06  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21967  017D0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21968  017D12  0060  F013  FFE6   	movff	btemp+3,postinc1
 21969  017D18  ECEB  F0D1         	call	___flsub	;wreg free
 21970  017D1C  0060  F007  FFE6   	movff	btemp,postinc1
 21971  017D22  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21972  017D28  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21973  017D2E  0060  F013  FFE6   	movff	btemp+3,postinc1
 21974  017D34  ECA3  F0CA         	call	_fabsf	;wreg free
 21975  017D38  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 21976  017D3E  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 21977  017D44  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 21978  017D4A  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 21979                           
 21980                           ;mbmc.c: 95:  bcror = conv_raw_result(C_BATT, CONV);
 21981  017D50  0E00               	movlw	0
 21982  017D52  6EE6               	movwf	postinc1,c
 21983  017D54  0E00               	movlw	0
 21984  017D56  6EE6               	movwf	postinc1,c
 21985  017D58  ECEE  F0A4         	call	_conv_raw_result	;wreg free
 21986  017D5C  0060  F004  F080   	movff	btemp,calc_ror_data@bcror
 21987  017D62  0060  F008  F081   	movff	btemp+1,calc_ror_data@bcror+1
 21988  017D68  0060  F00C  F082   	movff	btemp+2,calc_ror_data@bcror+2
 21989  017D6E  0060  F010  F083   	movff	btemp+3,calc_ror_data@bcror+3
 21990                           
 21991                           ;mbmc.c: 96:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 21992  017D74  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 21993  017D7A  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 21994  017D80  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 21995  017D86  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 21996  017D8C  0E00               	movlw	0
 21997  017D8E  6EE6               	movwf	postinc1,c
 21998  017D90  0E04               	movlw	4
 21999  017D92  6EE6               	movwf	postinc1,c
 22000  017D94  ECEE  F0A4         	call	_conv_raw_result	;wreg free
 22001  017D98  0060  F007  FFE6   	movff	btemp,postinc1
 22002  017D9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22003  017DA4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22004  017DAA  0060  F013  FFE6   	movff	btemp+3,postinc1
 22005  017DB0  ECEB  F0D1         	call	___flsub	;wreg free
 22006  017DB4  0060  F007  FFE6   	movff	btemp,postinc1
 22007  017DBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22008  017DC0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22009  017DC6  0060  F013  FFE6   	movff	btemp+3,postinc1
 22010  017DCC  ECA3  F0CA         	call	_fabsf	;wreg free
 22011  017DD0  0060  F004  F168   	movff	btemp,_C+104	;volatile
 22012  017DD6  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 22013  017DDC  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 22014  017DE2  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 22015                           
 22016                           ;mbmc.c: 97:  if (C.bv_ror < 0.0051)
 22017  017DE8  0EE7               	movlw	231
 22018  017DEA  6EE6               	movwf	postinc1,c
 22019  017DEC  0E1D               	movlw	29
 22020  017DEE  6EE6               	movwf	postinc1,c
 22021  017DF0  0EA7               	movlw	167
 22022  017DF2  6EE6               	movwf	postinc1,c
 22023  017DF4  0E3B               	movlw	59
 22024  017DF6  6EE6               	movwf	postinc1,c
 22025  017DF8  0060  F5A3  FFE6   	movff	_C+104,postinc1
 22026  017DFE  0060  F5A7  FFE6   	movff	_C+105,postinc1
 22027  017E04  0060  F5AB  FFE6   	movff	_C+106,postinc1
 22028  017E0A  0060  F5AF  FFE6   	movff	_C+107,postinc1
 22029  017E10  EC99  F0C0         	call	___flge	;wreg free
 22030  017E14  B001               	btfsc	btemp& (0+255),0,c
 22031  017E16  D009               	goto	l10358
 22032                           
 22033                           ;mbmc.c: 98:   C.bv_ror = 0.0140 + 0.0001;
 22034  017E18  0EB0               	movlw	176
 22035  017E1A  0101               	movlb	1	; () banked
 22036  017E1C  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 22037  017E1E  0E03               	movlw	3
 22038  017E20  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 22039  017E22  0E67               	movlw	103
 22040  017E24  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 22041  017E26  0E3C               	movlw	60
 22042  017E28  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 22043  017E2A                     l10358:
 22044                           
 22045                           ;mbmc.c: 99:  bvror = conv_raw_result(V_BAT, CONV);
 22046  017E2A  0E00               	movlw	0
 22047  017E2C  6EE6               	movwf	postinc1,c
 22048  017E2E  0E04               	movlw	4
 22049  017E30  6EE6               	movwf	postinc1,c
 22050  017E32  ECEE  F0A4         	call	_conv_raw_result	;wreg free
 22051  017E36  0060  F004  F084   	movff	btemp,calc_ror_data@bvror
 22052  017E3C  0060  F008  F085   	movff	btemp+1,calc_ror_data@bvror+1
 22053  017E42  0060  F00C  F086   	movff	btemp+2,calc_ror_data@bvror+2
 22054  017E48  0060  F010  F087   	movff	btemp+3,calc_ror_data@bvror+3
 22055                           
 22056                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 22057  017E4E  0012               	return		;funcret
 22058  017E50                     __end_of_calc_ror_data:
 22059                           	opt callstack 0
 22060                           
 22061 ;; *************** function _fabsf *****************
 22062 ;; Defined at:
 22063 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 22064 ;; Parameters:    Size  Location     Type
 22065 ;;  x               4  [STACK] float 
 22066 ;; Auto vars:     Size  Location     Type
 22067 ;;  u               4  [STACK] struct .
 22068 ;; Return value:  Size  Location     Type
 22069 ;;                  4  [STACK] float 
 22070 ;; Registers used:
 22071 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 22072 ;; Tracked objects:
 22073 ;;		On entry : 0/0
 22074 ;;		On exit  : 0/0
 22075 ;;		Unchanged: 0/0
 22076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22081 ;;Total ram usage:        0 bytes
 22082 ;; Hardware stack levels used:    1
 22083 ;; Hardware stack levels required when called:   15
 22084 ;; This function calls:
 22085 ;;		Nothing
 22086 ;; This function is called by:
 22087 ;;		_calc_ror_data
 22088 ;;		_esr_check
 22089 ;; This function uses a reentrant model
 22090 ;;
 22091                           
 22092                           	psect	text92
 22093  019546                     __ptext92:
 22094                           	opt callstack 0
 22095  019546                     _fabsf:
 22096                           	opt callstack 0
 22097                           
 22098                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22099  019546  52E6               	movf	postinc1,f,c
 22100  019548  52E6               	movf	postinc1,f,c
 22101  01954A  52E6               	movf	postinc1,f,c
 22102  01954C  52E6               	movf	postinc1,f,c
 22103                           
 22104                           ;incstack = 0
 22105  01954E  0060  F1E0  F009   	movff	fabsf@F463,btemp+8
 22106  019554  0060  F1E4  F00A   	movff	fabsf@F463+1,btemp+9
 22107  01955A  0060  F1E8  F00B   	movff	fabsf@F463+2,btemp+10
 22108  019560  0060  F1EC  F00C   	movff	fabsf@F463+3,btemp+11
 22109                           
 22110                           ;stkvar	_u @ sp[(-4)+0]
 22111  019566  0EFC               	movlw	-4
 22112  019568  0060  F027  FFE3   	movff	btemp+8,plusw1
 22113  01956E  0EFD               	movlw	-3
 22114  019570  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22115  019576  0EFE               	movlw	-2
 22116  019578  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22117  01957E  0EFF               	movlw	-1
 22118  019580  0060  F033  FFE3   	movff	btemp+11,plusw1
 22119                           
 22120                           ;stkvar	_x @ sp[(-4)+-4]
 22121  019586  0EF8               	movlw	-8
 22122  019588  006F FF8C  F009    	movff	plusw1,btemp+8
 22123  01958E  0EF9               	movlw	-7
 22124  019590  006F FF8C  F00A    	movff	plusw1,btemp+9
 22125  019596  0EFA               	movlw	-6
 22126  019598  006F FF8C  F00B    	movff	plusw1,btemp+10
 22127  01959E  0EFB               	movlw	-5
 22128  0195A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22129                           
 22130                           ;stkvar	_u @ sp[(-4)+0]
 22131  0195A6  0EFC               	movlw	-4
 22132  0195A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 22133  0195AE  0EFD               	movlw	-3
 22134  0195B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22135  0195B6  0EFE               	movlw	-2
 22136  0195B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22137  0195BE  0EFF               	movlw	-1
 22138  0195C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22139                           
 22140                           ;stkvar	_u @ sp[(-4)+0]
 22141  0195C6  0EFF               	movlw	-1
 22142  0195C8  9EE3               	bcf	plusw1,7,c
 22143                           
 22144                           ;stkvar	_u @ sp[(-4)+0]
 22145  0195CA  0EFC               	movlw	-4
 22146  0195CC  006F FF8C  F001    	movff	plusw1,btemp
 22147  0195D2  0EFD               	movlw	-3
 22148  0195D4  006F FF8C  F002    	movff	plusw1,btemp+1
 22149  0195DA  0EFE               	movlw	-2
 22150  0195DC  006F FF8C  F003    	movff	plusw1,btemp+2
 22151  0195E2  0EFF               	movlw	-1
 22152  0195E4  006F FF8C  F004    	movff	plusw1,btemp+3
 22153                           
 22154                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22155  0195EA  0EF8               	movlw	248
 22156  0195EC  26E1               	addwf	fsr1l,f,c
 22157  0195EE  0EFF               	movlw	255
 22158  0195F0  22E2               	addwfc	fsr1h,f,c
 22159  0195F2  0012               	return		;funcret
 22160  0195F4                     __end_of_fabsf:
 22161                           	opt callstack 0
 22162                           
 22163 ;; *************** function _conv_raw_result *****************
 22164 ;; Defined at:
 22165 ;;		line 95 in file "daq.c"
 22166 ;; Parameters:    Size  Location     Type
 22167 ;;  chan            1  [STACK] const enum E16581
 22168 ;;  to_what         1  [STACK] const enum E16643
 22169 ;; Auto vars:     Size  Location     Type
 22170 ;;		None
 22171 ;; Return value:  Size  Location     Type
 22172 ;;                  4  [STACK] float 
 22173 ;; Registers used:
 22174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22175 ;; Tracked objects:
 22176 ;;		On entry : 0/39
 22177 ;;		On exit  : 0/0
 22178 ;;		Unchanged: 0/0
 22179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22184 ;;Total ram usage:        0 bytes
 22185 ;; Hardware stack levels used:    1
 22186 ;; Hardware stack levels required when called:   17
 22187 ;; This function calls:
 22188 ;;		___fldiv
 22189 ;;		___flmul
 22190 ;;		___flsub
 22191 ;;		___xxtofl
 22192 ;;		_get_raw_result
 22193 ;;		_nanf
 22194 ;; This function is called by:
 22195 ;;		_main
 22196 ;;		_convert_adc_data
 22197 ;;		_calc_ror_data
 22198 ;;		_init_bsoc
 22199 ;;		_esr_check
 22200 ;; This function uses a reentrant model
 22201 ;;
 22202                           
 22203                           	psect	text93
 22204  0149DC                     __ptext93:
 22205                           	opt callstack 0
 22206  0149DC                     _conv_raw_result:
 22207                           	opt callstack 12
 22208                           
 22209                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 22210                           
 22211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22212                           ;incstack = 0
 22213  0149DC  D242               	goto	l9892
 22214  0149DE                     l9838:
 22215                           
 22216                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 22217                           ;stkvar	_chan @ sp[(0)+-1]
 22218  0149DE  0EFF               	movlw	-1
 22219  0149E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22220  0149E6  0E77               	movlw	119
 22221  0149E8  6E09               	movwf	(btemp+8)^0,c
 22222  0149EA  0E3C               	movlw	60
 22223  0149EC  6E0A               	movwf	(btemp+9)^0,c
 22224  0149EE  2A0C               	incf	(btemp+11)^0,f,c
 22225  0149F0  D003               	goto	u8934
 22226  0149F2                     u8935:
 22227  0149F2  340A               	rlcf	(btemp+9)^0,w,c
 22228  0149F4  320A               	rrcf	(btemp+9)^0,f,c
 22229  0149F6  3209               	rrcf	(btemp+8)^0,f,c
 22230  0149F8                     u8934:
 22231  0149F8  2E0C               	decfsz	(btemp+11)^0,f,c
 22232  0149FA  D7FB               	goto	u8935
 22233  0149FC  B009               	btfsc	(btemp+8)^0,0,c
 22234  0149FE  D007               	goto	l9844
 22235                           
 22236                           ;daq.c: 101:    return nanf("");
 22237  014A00  0E81               	movlw	low (STR_55+84)
 22238  014A02  6EE6               	movwf	postinc1,c
 22239  014A04  0EFD               	movlw	high (STR_55+84)
 22240  014A06  6EE6               	movwf	postinc1,c
 22241  014A08  ECF5  F0CF         	call	_nanf	;wreg free
 22242  014A0C  D23A               	goto	l1765
 22243  014A0E                     l9844:
 22244                           
 22245                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 22246                           ;stkvar	_chan @ sp[(0)+-1]
 22247  014A0E  0EFF               	movlw	-1
 22248  014A10  006F FF8C  F00C    	movff	plusw1,btemp+11
 22249  014A16  0E03               	movlw	3
 22250  014A18  6E09               	movwf	(btemp+8)^0,c
 22251  014A1A  0E00               	movlw	0
 22252  014A1C  6E0A               	movwf	(btemp+9)^0,c
 22253  014A1E  2A0C               	incf	(btemp+11)^0,f,c
 22254  014A20  D003               	goto	u8954
 22255  014A22                     u8955:
 22256  014A22  340A               	rlcf	(btemp+9)^0,w,c
 22257  014A24  320A               	rrcf	(btemp+9)^0,f,c
 22258  014A26  3209               	rrcf	(btemp+8)^0,f,c
 22259  014A28                     u8954:
 22260  014A28  2E0C               	decfsz	(btemp+11)^0,f,c
 22261  014A2A  D7FB               	goto	u8955
 22262  014A2C  A009               	btfss	(btemp+8)^0,0,c
 22263  014A2E  D0EB               	goto	l9858
 22264                           
 22265                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 22266                           ;stkvar	_chan @ sp[(0)+-1]
 22267  014A30  0EFF               	movlw	-1
 22268  014A32  006F FF8C  F00C    	movff	plusw1,btemp+11
 22269  014A38  0E01               	movlw	1
 22270  014A3A  6E09               	movwf	(btemp+8)^0,c
 22271  014A3C  0E00               	movlw	0
 22272  014A3E  6E0A               	movwf	(btemp+9)^0,c
 22273  014A40  2A0C               	incf	(btemp+11)^0,f,c
 22274  014A42  D003               	goto	u8974
 22275  014A44                     u8975:
 22276  014A44  340A               	rlcf	(btemp+9)^0,w,c
 22277  014A46  320A               	rrcf	(btemp+9)^0,f,c
 22278  014A48  3209               	rrcf	(btemp+8)^0,f,c
 22279  014A4A                     u8974:
 22280  014A4A  2E0C               	decfsz	(btemp+11)^0,f,c
 22281  014A4C  D7FB               	goto	u8975
 22282  014A4E  A009               	btfss	(btemp+8)^0,0,c
 22283  014A50  D06D               	goto	l9854
 22284                           
 22285                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 22286  014A52  0E7B               	movlw	123
 22287  014A54  6EE6               	movwf	postinc1,c
 22288  014A56  0E14               	movlw	20
 22289  014A58  6EE6               	movwf	postinc1,c
 22290  014A5A  0EAE               	movlw	174
 22291  014A5C  6EE6               	movwf	postinc1,c
 22292  014A5E  0E3D               	movlw	61
 22293  014A60  6EE6               	movwf	postinc1,c
 22294  014A62  0060  F398  F009   	movff	_R+32,btemp+8	;volatile
 22295  014A68  0060  F39C  F00A   	movff	_R+33,btemp+9	;volatile
 22296  014A6E  0E00               	movlw	0
 22297  014A70  BE0A               	btfsc	(btemp+9)^0,7,c
 22298  014A72  0EFF               	movlw	255
 22299  014A74  6E0B               	movwf	(btemp+10)^0,c
 22300  014A76  6E0C               	movwf	(btemp+11)^0,c
 22301  014A78  0060  F027  FFE6   	movff	btemp+8,postinc1
 22302  014A7E  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22303  014A84  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22304  014A8A  0060  F033  FFE6   	movff	btemp+11,postinc1
 22305  014A90  0E01               	movlw	1
 22306  014A92  6EE6               	movwf	postinc1,c
 22307  014A94  EC10  F0B9         	call	___xxtofl	;wreg free
 22308  014A98  0060  F007  FFE6   	movff	btemp,postinc1
 22309  014A9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22310  014AA4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22311  014AAA  0060  F013  FFE6   	movff	btemp+3,postinc1
 22312                           
 22313                           ;stkvar	_chan @ sp[(-8)+-1]
 22314  014AB0  0EF7               	movlw	-9
 22315  014AB2  50E3               	movf	plusw1,w,c
 22316  014AB4  6EE6               	movwf	postinc1,c
 22317  014AB6  EC20  F0D7         	call	_get_raw_result	;wreg free
 22318  014ABA  0060  F004  F00B   	movff	btemp,btemp+10
 22319  014AC0  0060  F008  F00C   	movff	btemp+1,btemp+11
 22320  014AC6  500B               	movf	(btemp+10)^0,w,c
 22321  014AC8  6E05               	movwf	(btemp+4)^0,c
 22322  014ACA  500C               	movf	(btemp+11)^0,w,c
 22323  014ACC  6E06               	movwf	(btemp+5)^0,c
 22324  014ACE  6A07               	clrf	(btemp+6)^0,c
 22325  014AD0  6A08               	clrf	(btemp+7)^0,c
 22326  014AD2  0060  F017  FFE6   	movff	btemp+4,postinc1
 22327  014AD8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22328  014ADE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22329  014AE4  0060  F023  FFE6   	movff	btemp+7,postinc1
 22330  014AEA  0E00               	movlw	0
 22331  014AEC  6EE6               	movwf	postinc1,c
 22332  014AEE  EC10  F0B9         	call	___xxtofl	;wreg free
 22333  014AF2  0060  F007  FFE6   	movff	btemp,postinc1
 22334  014AF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22335  014AFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22336  014B04  0060  F013  FFE6   	movff	btemp+3,postinc1
 22337  014B0A  ECEB  F0D1         	call	___flsub	;wreg free
 22338  014B0E  0060  F007  FFE6   	movff	btemp,postinc1
 22339  014B14  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22340  014B1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22341  014B20  0060  F013  FFE6   	movff	btemp+3,postinc1
 22342  014B26  ECEF  F096         	call	___flmul	;wreg free
 22343  014B2A  D1AB               	goto	l1765
 22344  014B2C                     l9854:
 22345                           
 22346                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 22347  014B2C  0E29               	movlw	41
 22348  014B2E  6EE6               	movwf	postinc1,c
 22349  014B30  0E5C               	movlw	92
 22350  014B32  6EE6               	movwf	postinc1,c
 22351  014B34  0E0F               	movlw	15
 22352  014B36  6EE6               	movwf	postinc1,c
 22353  014B38  0E3D               	movlw	61
 22354  014B3A  6EE6               	movwf	postinc1,c
 22355  014B3C  0060  F3A0  F009   	movff	_R+34,btemp+8	;volatile
 22356  014B42  0060  F3A4  F00A   	movff	_R+35,btemp+9	;volatile
 22357  014B48  0E00               	movlw	0
 22358  014B4A  BE0A               	btfsc	(btemp+9)^0,7,c
 22359  014B4C  0EFF               	movlw	255
 22360  014B4E  6E0B               	movwf	(btemp+10)^0,c
 22361  014B50  6E0C               	movwf	(btemp+11)^0,c
 22362  014B52  0060  F027  FFE6   	movff	btemp+8,postinc1
 22363  014B58  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22364  014B5E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22365  014B64  0060  F033  FFE6   	movff	btemp+11,postinc1
 22366  014B6A  0E01               	movlw	1
 22367  014B6C  6EE6               	movwf	postinc1,c
 22368  014B6E  EC10  F0B9         	call	___xxtofl	;wreg free
 22369  014B72  0060  F007  FFE6   	movff	btemp,postinc1
 22370  014B78  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22371  014B7E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22372  014B84  0060  F013  FFE6   	movff	btemp+3,postinc1
 22373                           
 22374                           ;stkvar	_chan @ sp[(-8)+-1]
 22375  014B8A  0EF7               	movlw	-9
 22376  014B8C  50E3               	movf	plusw1,w,c
 22377  014B8E  6EE6               	movwf	postinc1,c
 22378  014B90  EC20  F0D7         	call	_get_raw_result	;wreg free
 22379  014B94  0060  F004  F00B   	movff	btemp,btemp+10
 22380  014B9A  0060  F008  F00C   	movff	btemp+1,btemp+11
 22381  014BA0  500B               	movf	(btemp+10)^0,w,c
 22382  014BA2  6E05               	movwf	(btemp+4)^0,c
 22383  014BA4  500C               	movf	(btemp+11)^0,w,c
 22384  014BA6  6E06               	movwf	(btemp+5)^0,c
 22385  014BA8  6A07               	clrf	(btemp+6)^0,c
 22386  014BAA  6A08               	clrf	(btemp+7)^0,c
 22387  014BAC  0060  F017  FFE6   	movff	btemp+4,postinc1
 22388  014BB2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22389  014BB8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22390  014BBE  0060  F023  FFE6   	movff	btemp+7,postinc1
 22391  014BC4  0E00               	movlw	0
 22392  014BC6  6EE6               	movwf	postinc1,c
 22393  014BC8  EC10  F0B9         	call	___xxtofl	;wreg free
 22394  014BCC  0060  F007  FFE6   	movff	btemp,postinc1
 22395  014BD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22396  014BD8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22397  014BDE  0060  F013  FFE6   	movff	btemp+3,postinc1
 22398  014BE4  ECEB  F0D1         	call	___flsub	;wreg free
 22399  014BE8  0060  F007  FFE6   	movff	btemp,postinc1
 22400  014BEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22401  014BF4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22402  014BFA  0060  F013  FFE6   	movff	btemp+3,postinc1
 22403  014C00  ECEF  F096         	call	___flmul	;wreg free
 22404  014C04  D13E               	goto	l1765
 22405  014C06                     l9858:
 22406                           
 22407                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 22408                           ;stkvar	_chan @ sp[(0)+-1]
 22409  014C06  0EFF               	movlw	-1
 22410  014C08  006F FF8C  F00C    	movff	plusw1,btemp+11
 22411  014C0E  0E00               	movlw	0
 22412  014C10  6E09               	movwf	(btemp+8)^0,c
 22413  014C12  0E08               	movlw	8
 22414  014C14  6E0A               	movwf	(btemp+9)^0,c
 22415  014C16  2A0C               	incf	(btemp+11)^0,f,c
 22416  014C18  D003               	goto	u8994
 22417  014C1A                     u8995:
 22418  014C1A  340A               	rlcf	(btemp+9)^0,w,c
 22419  014C1C  320A               	rrcf	(btemp+9)^0,f,c
 22420  014C1E  3209               	rrcf	(btemp+8)^0,f,c
 22421  014C20                     u8994:
 22422  014C20  2E0C               	decfsz	(btemp+11)^0,f,c
 22423  014C22  D7FB               	goto	u8995
 22424  014C24  A009               	btfss	(btemp+8)^0,0,c
 22425  014C26  D008               	goto	l9866
 22426                           
 22427                           ;daq.c: 111:     return 25.0;
 22428  014C28  0E00               	movlw	0
 22429  014C2A  6E01               	movwf	btemp^0,c
 22430  014C2C  0E00               	movlw	0
 22431  014C2E  6E02               	movwf	(btemp+1)^0,c
 22432  014C30  0EC8               	movlw	200
 22433  014C32  6E03               	movwf	(btemp+2)^0,c
 22434  014C34  0E41               	movlw	65
 22435  014C36  D113               	goto	L24
 22436  014C38                     l9866:
 22437                           
 22438                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 22439  014C38  0E00               	movlw	0
 22440  014C3A  6EE6               	movwf	postinc1,c
 22441  014C3C  0E00               	movlw	0
 22442  014C3E  6EE6               	movwf	postinc1,c
 22443  014C40  0E7A               	movlw	122
 22444  014C42  6EE6               	movwf	postinc1,c
 22445  014C44  0E44               	movlw	68
 22446  014C46  6EE6               	movwf	postinc1,c
 22447  014C48  0E61               	movlw	97
 22448  014C4A  6EE6               	movwf	postinc1,c
 22449  014C4C  0E03               	movlw	3
 22450  014C4E  6EE6               	movwf	postinc1,c
 22451  014C50  0E84               	movlw	132
 22452  014C52  6EE6               	movwf	postinc1,c
 22453  014C54  0E40               	movlw	64
 22454  014C56  6EE6               	movwf	postinc1,c
 22455                           
 22456                           ;stkvar	_chan @ sp[(-8)+-1]
 22457  014C58  0EF7               	movlw	-9
 22458  014C5A  50E3               	movf	plusw1,w,c
 22459  014C5C  6EE6               	movwf	postinc1,c
 22460  014C5E  EC20  F0D7         	call	_get_raw_result	;wreg free
 22461  014C62  0060  F004  F00B   	movff	btemp,btemp+10
 22462  014C68  0060  F008  F00C   	movff	btemp+1,btemp+11
 22463  014C6E  500B               	movf	(btemp+10)^0,w,c
 22464  014C70  6E05               	movwf	(btemp+4)^0,c
 22465  014C72  500C               	movf	(btemp+11)^0,w,c
 22466  014C74  6E06               	movwf	(btemp+5)^0,c
 22467  014C76  6A07               	clrf	(btemp+6)^0,c
 22468  014C78  6A08               	clrf	(btemp+7)^0,c
 22469  014C7A  0060  F017  FFE6   	movff	btemp+4,postinc1
 22470  014C80  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22471  014C86  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22472  014C8C  0060  F023  FFE6   	movff	btemp+7,postinc1
 22473  014C92  0E00               	movlw	0
 22474  014C94  6EE6               	movwf	postinc1,c
 22475  014C96  EC10  F0B9         	call	___xxtofl	;wreg free
 22476  014C9A  0060  F007  FFE6   	movff	btemp,postinc1
 22477  014CA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22478  014CA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22479  014CAC  0060  F013  FFE6   	movff	btemp+3,postinc1
 22480  014CB2  ECEF  F096         	call	___flmul	;wreg free
 22481  014CB6  0060  F007  FFE6   	movff	btemp,postinc1
 22482  014CBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22483  014CC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22484  014CC8  0060  F013  FFE6   	movff	btemp+3,postinc1
 22485  014CCE  EC31  F0A2         	call	___fldiv	;wreg free
 22486  014CD2  D0D7               	goto	l1765
 22487  014CD4                     l9870:
 22488                           
 22489                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 22490                           ;stkvar	_chan @ sp[(0)+-1]
 22491  014CD4  0EFF               	movlw	-1
 22492  014CD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22493  014CDC  0E03               	movlw	3
 22494  014CDE  6E09               	movwf	(btemp+8)^0,c
 22495  014CE0  0E00               	movlw	0
 22496  014CE2  6E0A               	movwf	(btemp+9)^0,c
 22497  014CE4  2A0C               	incf	(btemp+11)^0,f,c
 22498  014CE6  D003               	goto	u9014
 22499  014CE8                     u9015:
 22500  014CE8  340A               	rlcf	(btemp+9)^0,w,c
 22501  014CEA  320A               	rrcf	(btemp+9)^0,f,c
 22502  014CEC  3209               	rrcf	(btemp+8)^0,f,c
 22503  014CEE                     u9014:
 22504  014CEE  2E0C               	decfsz	(btemp+11)^0,f,c
 22505  014CF0  D7FB               	goto	u9015
 22506  014CF2  B009               	btfsc	(btemp+8)^0,0,c
 22507  014CF4  D011               	goto	u9040
 22508                           
 22509                           ;stkvar	_chan @ sp[(0)+-1]
 22510  014CF6  0EFF               	movlw	-1
 22511  014CF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22512  014CFE  0E00               	movlw	0
 22513  014D00  6E09               	movwf	(btemp+8)^0,c
 22514  014D02  0E08               	movlw	8
 22515  014D04  6E0A               	movwf	(btemp+9)^0,c
 22516  014D06  2A0C               	incf	(btemp+11)^0,f,c
 22517  014D08  D003               	goto	u9034
 22518  014D0A                     u9035:
 22519  014D0A  340A               	rlcf	(btemp+9)^0,w,c
 22520  014D0C  320A               	rrcf	(btemp+9)^0,f,c
 22521  014D0E  3209               	rrcf	(btemp+8)^0,f,c
 22522  014D10                     u9034:
 22523  014D10  2E0C               	decfsz	(btemp+11)^0,f,c
 22524  014D12  D7FB               	goto	u9035
 22525  014D14  A009               	btfss	(btemp+8)^0,0,c
 22526  014D16  D04E               	goto	l9878
 22527  014D18                     u9040:
 22528                           
 22529                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 22530  014D18  0E00               	movlw	0
 22531  014D1A  6EE6               	movwf	postinc1,c
 22532  014D1C  0E00               	movlw	0
 22533  014D1E  6EE6               	movwf	postinc1,c
 22534  014D20  0E7A               	movlw	122
 22535  014D22  6EE6               	movwf	postinc1,c
 22536  014D24  0E44               	movlw	68
 22537  014D26  6EE6               	movwf	postinc1,c
 22538  014D28  0E00               	movlw	0
 22539  014D2A  6EE6               	movwf	postinc1,c
 22540  014D2C  0E00               	movlw	0
 22541  014D2E  6EE6               	movwf	postinc1,c
 22542  014D30  0E20               	movlw	32
 22543  014D32  6EE6               	movwf	postinc1,c
 22544  014D34  0E3F               	movlw	63
 22545  014D36  6EE6               	movwf	postinc1,c
 22546                           
 22547                           ;stkvar	_chan @ sp[(-8)+-1]
 22548  014D38  0EF7               	movlw	-9
 22549  014D3A  50E3               	movf	plusw1,w,c
 22550  014D3C  6EE6               	movwf	postinc1,c
 22551  014D3E  EC20  F0D7         	call	_get_raw_result	;wreg free
 22552  014D42  0060  F004  F00B   	movff	btemp,btemp+10
 22553  014D48  0060  F008  F00C   	movff	btemp+1,btemp+11
 22554  014D4E  500B               	movf	(btemp+10)^0,w,c
 22555  014D50  6E05               	movwf	(btemp+4)^0,c
 22556  014D52  500C               	movf	(btemp+11)^0,w,c
 22557  014D54  6E06               	movwf	(btemp+5)^0,c
 22558  014D56  6A07               	clrf	(btemp+6)^0,c
 22559  014D58  6A08               	clrf	(btemp+7)^0,c
 22560  014D5A  0060  F017  FFE6   	movff	btemp+4,postinc1
 22561  014D60  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22562  014D66  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22563  014D6C  0060  F023  FFE6   	movff	btemp+7,postinc1
 22564  014D72  0E00               	movlw	0
 22565  014D74  6EE6               	movwf	postinc1,c
 22566  014D76  EC10  F0B9         	call	___xxtofl	;wreg free
 22567  014D7A  0060  F007  FFE6   	movff	btemp,postinc1
 22568  014D80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22569  014D86  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22570  014D8C  0060  F013  FFE6   	movff	btemp+3,postinc1
 22571  014D92  ECEF  F096         	call	___flmul	;wreg free
 22572  014D96  0060  F007  FFE6   	movff	btemp,postinc1
 22573  014D9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22574  014DA2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22575  014DA8  0060  F013  FFE6   	movff	btemp+3,postinc1
 22576  014DAE  EC31  F0A2         	call	___fldiv	;wreg free
 22577  014DB2  D067               	goto	l1765
 22578  014DB4                     l9878:
 22579                           
 22580                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 22581  014DB4  0E00               	movlw	0
 22582  014DB6  6EE6               	movwf	postinc1,c
 22583  014DB8  0E00               	movlw	0
 22584  014DBA  6EE6               	movwf	postinc1,c
 22585  014DBC  0E7A               	movlw	122
 22586  014DBE  6EE6               	movwf	postinc1,c
 22587  014DC0  0E44               	movlw	68
 22588  014DC2  6EE6               	movwf	postinc1,c
 22589  014DC4  0E61               	movlw	97
 22590  014DC6  6EE6               	movwf	postinc1,c
 22591  014DC8  0E03               	movlw	3
 22592  014DCA  6EE6               	movwf	postinc1,c
 22593  014DCC  0E84               	movlw	132
 22594  014DCE  6EE6               	movwf	postinc1,c
 22595  014DD0  0E40               	movlw	64
 22596  014DD2  6EE6               	movwf	postinc1,c
 22597                           
 22598                           ;stkvar	_chan @ sp[(-8)+-1]
 22599  014DD4  0EF7               	movlw	-9
 22600  014DD6  50E3               	movf	plusw1,w,c
 22601  014DD8  6EE6               	movwf	postinc1,c
 22602  014DDA  EC20  F0D7         	call	_get_raw_result	;wreg free
 22603  014DDE  0060  F004  F00B   	movff	btemp,btemp+10
 22604  014DE4  0060  F008  F00C   	movff	btemp+1,btemp+11
 22605  014DEA  500B               	movf	(btemp+10)^0,w,c
 22606  014DEC  6E05               	movwf	(btemp+4)^0,c
 22607  014DEE  500C               	movf	(btemp+11)^0,w,c
 22608  014DF0  6E06               	movwf	(btemp+5)^0,c
 22609  014DF2  6A07               	clrf	(btemp+6)^0,c
 22610  014DF4  6A08               	clrf	(btemp+7)^0,c
 22611  014DF6  0060  F017  FFE6   	movff	btemp+4,postinc1
 22612  014DFC  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22613  014E02  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22614  014E08  0060  F023  FFE6   	movff	btemp+7,postinc1
 22615  014E0E  0E00               	movlw	0
 22616  014E10  6EE6               	movwf	postinc1,c
 22617  014E12  EC10  F0B9         	call	___xxtofl	;wreg free
 22618  014E16  0060  F007  FFE6   	movff	btemp,postinc1
 22619  014E1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22620  014E22  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22621  014E28  0060  F013  FFE6   	movff	btemp+3,postinc1
 22622  014E2E  ECEF  F096         	call	___flmul	;wreg free
 22623  014E32  0060  F007  FFE6   	movff	btemp,postinc1
 22624  014E38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22625  014E3E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22626  014E44  0060  F013  FFE6   	movff	btemp+3,postinc1
 22627  014E4A  EC31  F0A2         	call	___fldiv	;wreg free
 22628  014E4E  D019               	goto	l1765
 22629  014E50                     l9884:
 22630                           
 22631                           ;daq.c: 124:   return 0.0;
 22632  014E50  0E00               	movlw	0
 22633  014E52  6E01               	movwf	btemp^0,c
 22634  014E54  0E00               	movlw	0
 22635  014E56  6E02               	movwf	(btemp+1)^0,c
 22636  014E58  0E00               	movlw	0
 22637  014E5A  6E03               	movwf	(btemp+2)^0,c
 22638  014E5C  0E00               	movlw	0
 22639  014E5E                     L24:
 22640  014E5E  6E04               	movwf	(btemp+3)^0,c
 22641  014E60  D010               	goto	l1765
 22642  014E62                     l9892:
 22643                           
 22644                           ;stkvar	_to_what @ sp[(0)+-2]
 22645  014E62  0EFE               	movlw	-2
 22646  014E64  50E3               	movf	plusw1,w,c
 22647  014E66  6E0B               	movwf	(btemp+10)^0,c
 22648  014E68  6A0C               	clrf	(btemp+11)^0,c
 22649                           
 22650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22651                           ; Switch size 1, requested type "simple"
 22652                           ; Number of cases is 1, Range of values is 0 to 0
 22653                           ; switch strategies available:
 22654                           ; Name         Instructions Cycles
 22655                           ; simple_byte            4     3 (average)
 22656                           ;	Chosen strategy is simple_byte
 22657  014E6A  500C               	movf	(btemp+11)^0,w,c
 22658  014E6C  0A00               	xorlw	0	; case 0
 22659  014E6E  A4D8               	btfss	status,2,c
 22660  014E70  D7EF               	goto	l9884
 22661                           
 22662                           ; Switch size 1, requested type "simple"
 22663                           ; Number of cases is 2, Range of values is 0 to 1
 22664                           ; switch strategies available:
 22665                           ; Name         Instructions Cycles
 22666                           ; simple_byte            7     4 (average)
 22667                           ;	Chosen strategy is simple_byte
 22668  014E72  500B               	movf	(btemp+10)^0,w,c
 22669  014E74  0A00               	xorlw	0	; case 0
 22670  014E76  B4D8               	btfsc	status,2,c
 22671  014E78  D5B2               	goto	l9838
 22672  014E7A  0A01               	xorlw	1	; case 1
 22673  014E7C  B4D8               	btfsc	status,2,c
 22674  014E7E  D72A               	goto	l9870
 22675  014E80  D7E7               	goto	l9884
 22676  014E82                     l1765:
 22677                           
 22678                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 22679  014E82  52E5               	movf	postdec1,f,c
 22680  014E84  52E5               	movf	postdec1,f,c
 22681  014E86  0012               	return		;funcret
 22682  014E88                     __end_of_conv_raw_result:
 22683                           	opt callstack 0
 22684                           
 22685 ;; *************** function _nanf *****************
 22686 ;; Defined at:
 22687 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 22688 ;; Parameters:    Size  Location     Type
 22689 ;;  s               2  [STACK] PTR const unsigned char 
 22690 ;;		 -> STR_92(1), STR_54(1), 
 22691 ;; Auto vars:     Size  Location     Type
 22692 ;;  u               4  [STACK] struct .
 22693 ;; Return value:  Size  Location     Type
 22694 ;;                  4  [STACK] float 
 22695 ;; Registers used:
 22696 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 22697 ;; Tracked objects:
 22698 ;;		On entry : 0/39
 22699 ;;		On exit  : 0/0
 22700 ;;		Unchanged: 0/0
 22701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22706 ;;Total ram usage:        0 bytes
 22707 ;; Hardware stack levels used:    1
 22708 ;; Hardware stack levels required when called:   15
 22709 ;; This function calls:
 22710 ;;		Nothing
 22711 ;; This function is called by:
 22712 ;;		_conv_raw_result
 22713 ;; This function uses a reentrant model
 22714 ;;
 22715                           
 22716                           	psect	text94
 22717  019FEA                     __ptext94:
 22718                           	opt callstack 0
 22719  019FEA                     _nanf:
 22720                           	opt callstack 0
 22721                           
 22722                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22723  019FEA  52E6               	movf	postinc1,f,c
 22724  019FEC  52E6               	movf	postinc1,f,c
 22725  019FEE  52E6               	movf	postinc1,f,c
 22726  019FF0  52E6               	movf	postinc1,f,c
 22727                           
 22728                           ;incstack = 0
 22729  019FF2  0EFF               	movlw	255
 22730  019FF4  6E09               	movwf	(btemp+8)^0,c
 22731  019FF6  0EFF               	movlw	255
 22732  019FF8  6E0A               	movwf	(btemp+9)^0,c
 22733  019FFA  0EFF               	movlw	255
 22734  019FFC  6E0B               	movwf	(btemp+10)^0,c
 22735  019FFE  0E7F               	movlw	127
 22736  01A000  6E0C               	movwf	(btemp+11)^0,c
 22737                           
 22738                           ;stkvar	_u @ sp[(-4)+0]
 22739  01A002  0EFC               	movlw	-4
 22740  01A004  0060  F027  FFE3   	movff	btemp+8,plusw1
 22741  01A00A  0EFD               	movlw	-3
 22742  01A00C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22743  01A012  0EFE               	movlw	-2
 22744  01A014  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22745  01A01A  0EFF               	movlw	-1
 22746  01A01C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22747                           
 22748                           ;stkvar	_u @ sp[(-4)+0]
 22749  01A022  0EFC               	movlw	-4
 22750  01A024  006F FF8C  F001    	movff	plusw1,btemp
 22751  01A02A  0EFD               	movlw	-3
 22752  01A02C  006F FF8C  F002    	movff	plusw1,btemp+1
 22753  01A032  0EFE               	movlw	-2
 22754  01A034  006F FF8C  F003    	movff	plusw1,btemp+2
 22755  01A03A  0EFF               	movlw	-1
 22756  01A03C  006F FF8C  F004    	movff	plusw1,btemp+3
 22757                           
 22758                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22759  01A042  0EFA               	movlw	250
 22760  01A044  26E1               	addwf	fsr1l,f,c
 22761  01A046  0EFF               	movlw	255
 22762  01A048  22E2               	addwfc	fsr1h,f,c
 22763  01A04A  0012               	return		;funcret
 22764  01A04C                     __end_of_nanf:
 22765                           	opt callstack 0
 22766                           
 22767 ;; *************** function _get_raw_result *****************
 22768 ;; Defined at:
 22769 ;;		line 87 in file "daq.c"
 22770 ;; Parameters:    Size  Location     Type
 22771 ;;  index           1  [STACK] const enum E16581
 22772 ;; Auto vars:     Size  Location     Type
 22773 ;;		None
 22774 ;; Return value:  Size  Location     Type
 22775 ;;                  2  [STACK] unsigned short 
 22776 ;; Registers used:
 22777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 22778 ;; Tracked objects:
 22779 ;;		On entry : 0/2
 22780 ;;		On exit  : 0/0
 22781 ;;		Unchanged: 0/0
 22782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22787 ;;Total ram usage:        0 bytes
 22788 ;; Hardware stack levels used:    1
 22789 ;; Hardware stack levels required when called:   15
 22790 ;; This function calls:
 22791 ;;		Nothing
 22792 ;; This function is called by:
 22793 ;;		_main
 22794 ;;		_conv_raw_result
 22795 ;; This function uses a reentrant model
 22796 ;;
 22797                           
 22798                           	psect	text95
 22799  01AE40                     __ptext95:
 22800                           	opt callstack 0
 22801  01AE40                     _get_raw_result:
 22802                           	opt callstack 13
 22803                           
 22804                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 22805                           ;stkvar	_index @ sp[(0)+-1]
 22806                           
 22807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22808                           ;incstack = 0
 22809  01AE40  0EFF               	movlw	-1
 22810  01AE42  50E3               	movf	plusw1,w,c
 22811  01AE44  0D02               	mullw	2
 22812  01AE46  50F3               	movf	243,w,c
 22813  01AE48  0FC6               	addlw	low _R
 22814  01AE4A  6ED9               	movwf	fsr2l,c
 22815  01AE4C  6ADA               	clrf	fsr2h,c
 22816  01AE4E  006F FF78  F001    	movff	postinc2,btemp
 22817  01AE54  006F FF74  F002    	movff	postdec2,btemp+1
 22818                           
 22819                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 22820  01AE5A  52E5               	movf	postdec1,f,c
 22821  01AE5C  0012               	return		;funcret
 22822  01AE5E                     __end_of_get_raw_result:
 22823                           	opt callstack 0
 22824                           
 22825 ;; *************** function ___xxtofl *****************
 22826 ;; Defined at:
 22827 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 22828 ;; Parameters:    Size  Location     Type
 22829 ;;  sign            1  [STACK] unsigned char 
 22830 ;;  val             4  [STACK] long 
 22831 ;; Auto vars:     Size  Location     Type
 22832 ;;  arg             4  [STACK] unsigned long 
 22833 ;;  exp             1  [STACK] unsigned char 
 22834 ;; Return value:  Size  Location     Type
 22835 ;;                  4  [STACK] unsigned char 
 22836 ;; Registers used:
 22837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22838 ;; Tracked objects:
 22839 ;;		On entry : 0/1
 22840 ;;		On exit  : 0/0
 22841 ;;		Unchanged: 0/0
 22842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22847 ;;Total ram usage:        0 bytes
 22848 ;; Hardware stack levels used:    1
 22849 ;; Hardware stack levels required when called:   15
 22850 ;; This function calls:
 22851 ;;		Nothing
 22852 ;; This function is called by:
 22853 ;;		_conv_raw_result
 22854 ;;		_init_bsoc
 22855 ;; This function uses a reentrant model
 22856 ;;
 22857                           
 22858                           	psect	text96
 22859  017220                     __ptext96:
 22860                           	opt callstack 0
 22861  017220                     ___xxtofl:
 22862                           	opt callstack 0
 22863                           
 22864                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22865  017220  0E05               	movlw	5
 22866  017222  26E1               	addwf	fsr1l,f,c
 22867  017224  0E00               	movlw	0
 22868  017226  22E2               	addwfc	fsr1h,f,c
 22869                           
 22870                           ;stkvar	_sign @ sp[(-5)+-1]
 22871                           
 22872                           ;incstack = 0
 22873  017228  0EFA               	movlw	-6
 22874  01722A  50E3               	movf	plusw1,w,c
 22875  01722C  B4D8               	btfsc	status,2,c
 22876  01722E  D01D               	goto	l9374
 22877                           
 22878                           ;stkvar	_val @ sp[(-5)+-5]
 22879  017230  0EF9               	movlw	-7
 22880  017232  AEE3               	btfss	plusw1,7,c
 22881  017234  D01A               	goto	l9374
 22882                           
 22883                           ;stkvar	_val @ sp[(-5)+-5]
 22884  017236  0EF6               	movlw	-10
 22885  017238  006F FF8C  F009    	movff	plusw1,btemp+8
 22886  01723E  0EF7               	movlw	-9
 22887  017240  006F FF8C  F00A    	movff	plusw1,btemp+9
 22888  017246  0EF8               	movlw	-8
 22889  017248  006F FF8C  F00B    	movff	plusw1,btemp+10
 22890  01724E  0EF9               	movlw	-7
 22891  017250  006F FF8C  F00C    	movff	plusw1,btemp+11
 22892  017256  1E09               	comf	(btemp+8)^0,f,c
 22893  017258  1E0A               	comf	(btemp+9)^0,f,c
 22894  01725A  1E0B               	comf	(btemp+10)^0,f,c
 22895  01725C  1E0C               	comf	(btemp+11)^0,f,c
 22896  01725E  2A09               	incf	(btemp+8)^0,f,c
 22897  017260  0E00               	movlw	0
 22898  017262  220A               	addwfc	(btemp+9)^0,f,c
 22899  017264  220B               	addwfc	(btemp+10)^0,f,c
 22900  017266  220C               	addwfc	(btemp+11)^0,f,c
 22901  017268  D010               	goto	L25
 22902  01726A                     l9374:
 22903                           
 22904                           ;stkvar	_val @ sp[(-5)+-5]
 22905  01726A  0EF6               	movlw	-10
 22906  01726C  006F FF8C  F009    	movff	plusw1,btemp+8
 22907  017272  0EF7               	movlw	-9
 22908  017274  006F FF8C  F00A    	movff	plusw1,btemp+9
 22909  01727A  0EF8               	movlw	-8
 22910  01727C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22911  017282  0EF9               	movlw	-7
 22912  017284  006F FF8C  F00C    	movff	plusw1,btemp+11
 22913  01728A                     L25:
 22914                           
 22915                           ;stkvar	_arg @ sp[(-5)+0]
 22916  01728A  0EFB               	movlw	-5
 22917  01728C  0060  F027  FFE3   	movff	btemp+8,plusw1
 22918  017292  0EFC               	movlw	-4
 22919  017294  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22920  01729A  0EFD               	movlw	-3
 22921  01729C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22922  0172A2  0EFE               	movlw	-2
 22923  0172A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 22924                           
 22925                           ;stkvar	_val @ sp[(-5)+-5]
 22926  0172AA  0EF6               	movlw	-10
 22927  0172AC  50E3               	movf	plusw1,w,c
 22928  0172AE  E113               	bnz	l9382
 22929  0172B0  0EF7               	movlw	-9
 22930  0172B2  50E3               	movf	plusw1,w,c
 22931  0172B4  E110               	bnz	l9382
 22932  0172B6  0EF8               	movlw	-8
 22933  0172B8  50E3               	movf	plusw1,w,c
 22934  0172BA  E10D               	bnz	l9382
 22935  0172BC  0EF9               	movlw	-7
 22936  0172BE  50E3               	movf	plusw1,w,c
 22937  0172C0  A4D8               	btfss	status,2,c
 22938  0172C2  D009               	goto	l9382
 22939  0172C4  0E00               	movlw	0
 22940  0172C6  6E01               	movwf	btemp^0,c
 22941  0172C8  0E00               	movlw	0
 22942  0172CA  6E02               	movwf	(btemp+1)^0,c
 22943  0172CC  0E00               	movlw	0
 22944  0172CE  6E03               	movwf	(btemp+2)^0,c
 22945  0172D0  0E00               	movlw	0
 22946  0172D2  6E04               	movwf	(btemp+3)^0,c
 22947  0172D4  D0A2               	goto	l2979
 22948  0172D6                     l9382:
 22949  0172D6  0E96               	movlw	150
 22950  0172D8  6E0C               	movwf	(btemp+11)^0,c
 22951                           
 22952                           ;stkvar	_exp @ sp[(-5)+4]
 22953  0172DA  0EFF               	movlw	-1
 22954  0172DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22955  0172E2  D00B               	goto	l9386
 22956  0172E4                     l9384:
 22957                           
 22958                           ;stkvar	_exp @ sp[(-5)+4]
 22959  0172E4  0EFF               	movlw	-1
 22960  0172E6  2AE3               	incf	plusw1,f,c
 22961                           
 22962                           ;stkvar	_arg @ sp[(-5)+0]
 22963  0172E8  90D8               	bcf	status,0,c
 22964  0172EA  0EFE               	movlw	-2
 22965  0172EC  32E3               	rrcf	plusw1,f,c
 22966  0172EE  0EFD               	movlw	-3
 22967  0172F0  32E3               	rrcf	plusw1,f,c
 22968  0172F2  0EFC               	movlw	-4
 22969  0172F4  32E3               	rrcf	plusw1,f,c
 22970  0172F6  0EFB               	movlw	-5
 22971  0172F8  32E3               	rrcf	plusw1,f,c
 22972  0172FA                     l9386:
 22973                           
 22974                           ;stkvar	_arg @ sp[(-5)+0]
 22975  0172FA  50E1               	movf	fsr1l,w,c
 22976  0172FC  0FFB               	addlw	-5
 22977  0172FE  6ED9               	movwf	fsr2l,c
 22978  017300  50E2               	movf	fsr1h,w,c
 22979  017302  6EDA               	movwf	fsr2h,c
 22980  017304  0EFF               	movlw	255
 22981  017306  22DA               	addwfc	fsr2h,f,c
 22982  017308  52DE               	movf	postinc2,f,c
 22983  01730A  52DE               	movf	postinc2,f,c
 22984  01730C  52DE               	movf	postinc2,f,c
 22985  01730E  0EFE               	movlw	254
 22986  017310  14DD               	andwf	postdec2,w,c
 22987  017312  B4D8               	btfsc	status,2,c
 22988  017314  D018               	goto	l9394
 22989  017316  D7E6               	goto	l9384
 22990  017318                     l9388:
 22991                           
 22992                           ;stkvar	_exp @ sp[(-5)+4]
 22993  017318  0EFF               	movlw	-1
 22994  01731A  2AE3               	incf	plusw1,f,c
 22995                           
 22996                           ;stkvar	_arg @ sp[(-5)+0]
 22997  01731C  50E1               	movf	fsr1l,w,c
 22998  01731E  0FFB               	addlw	-5
 22999  017320  6ED9               	movwf	fsr2l,c
 23000  017322  50E2               	movf	fsr1h,w,c
 23001  017324  6EDA               	movwf	fsr2h,c
 23002  017326  0EFF               	movlw	255
 23003  017328  22DA               	addwfc	fsr2h,f,c
 23004  01732A  2ADE               	incf	postinc2,f,c
 23005  01732C  0E00               	movlw	0
 23006  01732E  22DE               	addwfc	postinc2,f,c
 23007  017330  22DE               	addwfc	postinc2,f,c
 23008  017332  22DE               	addwfc	postinc2,f,c
 23009                           
 23010                           ;stkvar	_arg @ sp[(-5)+0]
 23011  017334  90D8               	bcf	status,0,c
 23012  017336  0EFE               	movlw	-2
 23013  017338  32E3               	rrcf	plusw1,f,c
 23014  01733A  0EFD               	movlw	-3
 23015  01733C  32E3               	rrcf	plusw1,f,c
 23016  01733E  0EFC               	movlw	-4
 23017  017340  32E3               	rrcf	plusw1,f,c
 23018  017342  0EFB               	movlw	-5
 23019  017344  32E3               	rrcf	plusw1,f,c
 23020  017346                     l9394:
 23021                           
 23022                           ;stkvar	_arg @ sp[(-5)+0]
 23023  017346  50E1               	movf	fsr1l,w,c
 23024  017348  0FFB               	addlw	-5
 23025  01734A  6ED9               	movwf	fsr2l,c
 23026  01734C  50E2               	movf	fsr1h,w,c
 23027  01734E  6EDA               	movwf	fsr2h,c
 23028  017350  0EFF               	movlw	255
 23029  017352  22DA               	addwfc	fsr2h,f,c
 23030  017354  52DE               	movf	postinc2,f,c
 23031  017356  52DE               	movf	postinc2,f,c
 23032  017358  52DE               	movf	postinc2,f,c
 23033  01735A  0EFF               	movlw	255
 23034  01735C  14DD               	andwf	postdec2,w,c
 23035  01735E  B4D8               	btfsc	status,2,c
 23036  017360  D00C               	goto	l9398
 23037  017362  D7DA               	goto	l9388
 23038  017364                     l9396:
 23039                           
 23040                           ;stkvar	_exp @ sp[(-5)+4]
 23041  017364  0EFF               	movlw	-1
 23042  017366  06E3               	decf	plusw1,f,c
 23043                           
 23044                           ;stkvar	_arg @ sp[(-5)+0]
 23045  017368  90D8               	bcf	status,0,c
 23046  01736A  0EFB               	movlw	-5
 23047  01736C  36E3               	rlcf	plusw1,f,c
 23048  01736E  0EFC               	movlw	-4
 23049  017370  36E3               	rlcf	plusw1,f,c
 23050  017372  0EFD               	movlw	-3
 23051  017374  36E3               	rlcf	plusw1,f,c
 23052  017376  0EFE               	movlw	-2
 23053  017378  36E3               	rlcf	plusw1,f,c
 23054  01737A                     l9398:
 23055                           
 23056                           ;stkvar	_arg @ sp[(-5)+0]
 23057  01737A  0EFD               	movlw	-3
 23058  01737C  BEE3               	btfsc	plusw1,7,c
 23059  01737E  D007               	goto	u8780
 23060                           
 23061                           ;stkvar	_exp @ sp[(-5)+4]
 23062  017380  0EFF               	movlw	-1
 23063  017382  006F FF8C  F001    	movff	plusw1,btemp
 23064  017388  0E02               	movlw	2
 23065  01738A  6001               	cpfslt	btemp^0,c
 23066  01738C  D7EB               	goto	l9396
 23067  01738E                     u8780:
 23068                           
 23069                           ;stkvar	_exp @ sp[(-5)+4]
 23070  01738E  0EFF               	movlw	-1
 23071  017390  B0E3               	btfsc	plusw1,0,c
 23072  017392  D002               	goto	l9406
 23073                           
 23074                           ;stkvar	_arg @ sp[(-5)+0]
 23075  017394  0EFD               	movlw	-3
 23076  017396  9EE3               	bcf	plusw1,7,c
 23077  017398                     l9406:
 23078                           
 23079                           ;stkvar	_exp @ sp[(-5)+4]
 23080  017398  50E1               	movf	fsr1l,w,c
 23081  01739A  0FFF               	addlw	-1
 23082  01739C  6ED9               	movwf	fsr2l,c
 23083  01739E  50E2               	movf	fsr1h,w,c
 23084  0173A0  6EDA               	movwf	fsr2h,c
 23085  0173A2  0EFF               	movlw	255
 23086  0173A4  22DA               	addwfc	fsr2h,f,c
 23087  0173A6  90D8               	bcf	status,0,c
 23088  0173A8  32DF               	rrcf	indf2,f,c
 23089                           
 23090                           ;stkvar	_exp @ sp[(-5)+4]
 23091  0173AA  0EFF               	movlw	-1
 23092  0173AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23093  0173B2  0060  F030  F005   	movff	btemp+11,btemp+4
 23094  0173B8  6A06               	clrf	(btemp+5)^0,c
 23095  0173BA  6A07               	clrf	(btemp+6)^0,c
 23096  0173BC  6A08               	clrf	(btemp+7)^0,c
 23097  0173BE  0060  F014  F008   	movff	btemp+4,btemp+7
 23098  0173C4  6A07               	clrf	(btemp+6)^0,c
 23099  0173C6  6A06               	clrf	(btemp+5)^0,c
 23100  0173C8  6A05               	clrf	(btemp+4)^0,c
 23101                           
 23102                           ;stkvar	_arg @ sp[(-5)+0]
 23103  0173CA  50E1               	movf	fsr1l,w,c
 23104  0173CC  0FFB               	addlw	-5
 23105  0173CE  6ED9               	movwf	fsr2l,c
 23106  0173D0  50E2               	movf	fsr1h,w,c
 23107  0173D2  6EDA               	movwf	fsr2h,c
 23108  0173D4  0EFF               	movlw	255
 23109  0173D6  22DA               	addwfc	fsr2h,f,c
 23110  0173D8  5005               	movf	(btemp+4)^0,w,c
 23111  0173DA  12DE               	iorwf	postinc2,f,c
 23112  0173DC  5006               	movf	(btemp+5)^0,w,c
 23113  0173DE  12DE               	iorwf	postinc2,f,c
 23114  0173E0  5007               	movf	(btemp+6)^0,w,c
 23115  0173E2  12DE               	iorwf	postinc2,f,c
 23116  0173E4  5008               	movf	(btemp+7)^0,w,c
 23117  0173E6  12DE               	iorwf	postinc2,f,c
 23118                           
 23119                           ;stkvar	_sign @ sp[(-5)+-1]
 23120  0173E8  0EFA               	movlw	-6
 23121  0173EA  50E3               	movf	plusw1,w,c
 23122  0173EC  B4D8               	btfsc	status,2,c
 23123  0173EE  D005               	goto	l9416
 23124                           
 23125                           ;stkvar	_val @ sp[(-5)+-5]
 23126  0173F0  0EF9               	movlw	-7
 23127  0173F2  AEE3               	btfss	plusw1,7,c
 23128  0173F4  D002               	goto	l9416
 23129                           
 23130                           ;stkvar	_arg @ sp[(-5)+0]
 23131  0173F6  0EFE               	movlw	-2
 23132  0173F8  8EE3               	bsf	plusw1,7,c
 23133  0173FA                     l9416:
 23134                           
 23135                           ;stkvar	_arg @ sp[(-5)+0]
 23136  0173FA  0EFB               	movlw	-5
 23137  0173FC  006F FF8C  F001    	movff	plusw1,btemp
 23138  017402  0EFC               	movlw	-4
 23139  017404  006F FF8C  F002    	movff	plusw1,btemp+1
 23140  01740A  0EFD               	movlw	-3
 23141  01740C  006F FF8C  F003    	movff	plusw1,btemp+2
 23142  017412  0EFE               	movlw	-2
 23143  017414  006F FF8C  F004    	movff	plusw1,btemp+3
 23144  01741A                     l2979:
 23145                           
 23146                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 23147  01741A  0EF6               	movlw	246
 23148  01741C  26E1               	addwf	fsr1l,f,c
 23149  01741E  0EFF               	movlw	255
 23150  017420  22E2               	addwfc	fsr1h,f,c
 23151  017422  0012               	return		;funcret
 23152  017424                     __end_of___xxtofl:
 23153                           	opt callstack 0
 23154                           
 23155 ;; *************** function ___fldiv *****************
 23156 ;; Defined at:
 23157 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 23158 ;; Parameters:    Size  Location     Type
 23159 ;;  b               4  [STACK] unsigned char 
 23160 ;;  a               4  [STACK] unsigned char 
 23161 ;; Auto vars:     Size  Location     Type
 23162 ;;  grs             4  [STACK] unsigned long 
 23163 ;;  rem             4  [STACK] unsigned long 
 23164 ;;  new_exp         2  [STACK] short 
 23165 ;;  aexp            1  [STACK] unsigned char 
 23166 ;;  bexp            1  [STACK] unsigned char 
 23167 ;;  sign            1  [STACK] unsigned char 
 23168 ;; Return value:  Size  Location     Type
 23169 ;;                  4  [STACK] unsigned char 
 23170 ;; Registers used:
 23171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23172 ;; Tracked objects:
 23173 ;;		On entry : 0/1
 23174 ;;		On exit  : 0/0
 23175 ;;		Unchanged: 0/0
 23176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23181 ;;Total ram usage:        0 bytes
 23182 ;; Hardware stack levels used:    1
 23183 ;; Hardware stack levels required when called:   15
 23184 ;; This function calls:
 23185 ;;		Nothing
 23186 ;; This function is called by:
 23187 ;;		_conv_raw_result
 23188 ;;		_calc_bsoc
 23189 ;;		_init_bsoc
 23190 ;;		_esr_check
 23191 ;;		_efgtoa
 23192 ;; This function uses a reentrant model
 23193 ;;
 23194                           
 23195                           	psect	text97
 23196  014462                     __ptext97:
 23197                           	opt callstack 0
 23198  014462                     ___fldiv:
 23199                           	opt callstack 0
 23200                           
 23201                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23202  014462  0E0D               	movlw	13
 23203  014464  26E1               	addwf	fsr1l,f,c
 23204  014466  0E00               	movlw	0
 23205  014468  22E2               	addwfc	fsr1h,f,c
 23206                           
 23207                           ;stkvar	_b @ sp[(-13)+-4]
 23208                           
 23209                           ;incstack = 0
 23210 ;; hardware stack exceeded
 23211  01446A  0EF2               	movlw	242
 23212  01446C  24E1               	addwf	fsr1l,w,c
 23213  01446E  6ED9               	movwf	fsr2l,c
 23214  014470  0EFF               	movlw	255
 23215  014472  20E2               	addwfc	fsr1h,w,c
 23216  014474  6EDA               	movwf	fsr2h,c
 23217  014476  50DF               	movf	indf2,w,c
 23218  014478  6E0C               	movwf	(btemp+11)^0,c
 23219  01447A  0E80               	movlw	128
 23220  01447C  160C               	andwf	(btemp+11)^0,f,c
 23221                           
 23222                           ;stkvar	_sign @ sp[(-13)+12]
 23223  01447E  0EFF               	movlw	-1
 23224  014480  0060  F033  FFE3   	movff	btemp+11,plusw1
 23225                           
 23226                           ;stkvar	_b @ sp[(-13)+-4]
 23227  014486  0EF2               	movlw	242
 23228  014488  24E1               	addwf	fsr1l,w,c
 23229  01448A  6ED9               	movwf	fsr2l,c
 23230  01448C  0EFF               	movlw	255
 23231  01448E  20E2               	addwfc	fsr1h,w,c
 23232  014490  6EDA               	movwf	fsr2h,c
 23233  014492  50DF               	movf	indf2,w,c
 23234  014494  6E0C               	movwf	(btemp+11)^0,c
 23235  014496  90D8               	bcf	status,0,c
 23236  014498  340C               	rlcf	(btemp+11)^0,w,c
 23237  01449A  6E0B               	movwf	(btemp+10)^0,c
 23238                           
 23239                           ;stkvar	_bexp @ sp[(-13)+11]
 23240  01449C  0EFE               	movlw	-2
 23241  01449E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23242                           
 23243                           ;stkvar	_b @ sp[(-13)+-4]
 23244  0144A4  0EF1               	movlw	241
 23245  0144A6  24E1               	addwf	fsr1l,w,c
 23246  0144A8  6ED9               	movwf	fsr2l,c
 23247  0144AA  0EFF               	movlw	255
 23248  0144AC  20E2               	addwfc	fsr1h,w,c
 23249  0144AE  6EDA               	movwf	fsr2h,c
 23250  0144B0  AEDF               	btfss	indf2,7,c
 23251  0144B2  D002               	goto	l7746
 23252                           
 23253                           ;stkvar	_bexp @ sp[(-13)+11]
 23254  0144B4  0EFE               	movlw	-2
 23255  0144B6  80E3               	bsf	plusw1,0,c
 23256  0144B8                     l7746:
 23257                           
 23258                           ;stkvar	_bexp @ sp[(-13)+11]
 23259  0144B8  0EFE               	movlw	-2
 23260  0144BA  50E3               	movf	plusw1,w,c
 23261  0144BC  B4D8               	btfsc	status,2,c
 23262  0144BE  D027               	goto	l7756
 23263                           
 23264                           ;stkvar	_bexp @ sp[(-13)+11]
 23265  0144C0  0EFE               	movlw	-2
 23266  0144C2  28E3               	incf	plusw1,w,c
 23267  0144C4  A4D8               	btfss	status,2,c
 23268  0144C6  D018               	goto	l7752
 23269  0144C8  0E00               	movlw	0
 23270  0144CA  6E09               	movwf	(btemp+8)^0,c
 23271  0144CC  0E00               	movlw	0
 23272  0144CE  6E0A               	movwf	(btemp+9)^0,c
 23273  0144D0  0E00               	movlw	0
 23274  0144D2  6E0B               	movwf	(btemp+10)^0,c
 23275  0144D4  0E00               	movlw	0
 23276  0144D6  6E0C               	movwf	(btemp+11)^0,c
 23277                           
 23278                           ;stkvar	_b @ sp[(-13)+-4]
 23279  0144D8  0EEF               	movlw	-17
 23280  0144DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 23281  0144E0  0EF0               	movlw	-16
 23282  0144E2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23283  0144E8  0EF1               	movlw	-15
 23284  0144EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23285  0144F0  0EF2               	movlw	-14
 23286  0144F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23287  0144F8                     l7752:
 23288                           
 23289                           ;stkvar	_b @ sp[(-13)+-4]
 23290  0144F8  0EF1               	movlw	-15
 23291  0144FA  8EE3               	bsf	plusw1,7,c
 23292                           
 23293                           ;stkvar	_b @ sp[(-13)+-4]
 23294  0144FC  0EF2               	movlw	242
 23295  0144FE  24E1               	addwf	fsr1l,w,c
 23296  014500  6ED9               	movwf	fsr2l,c
 23297  014502  0EFF               	movlw	255
 23298  014504  20E2               	addwfc	fsr1h,w,c
 23299  014506  6EDA               	movwf	fsr2h,c
 23300  014508  0E00               	movlw	0
 23301  01450A  6EDF               	movwf	indf2,c
 23302  01450C  D018               	goto	l7758
 23303  01450E                     l7756:
 23304  01450E  0E00               	movlw	0
 23305  014510  6E09               	movwf	(btemp+8)^0,c
 23306  014512  0E00               	movlw	0
 23307  014514  6E0A               	movwf	(btemp+9)^0,c
 23308  014516  0E00               	movlw	0
 23309  014518  6E0B               	movwf	(btemp+10)^0,c
 23310  01451A  0E00               	movlw	0
 23311  01451C  6E0C               	movwf	(btemp+11)^0,c
 23312                           
 23313                           ;stkvar	_b @ sp[(-13)+-4]
 23314  01451E  0EEF               	movlw	-17
 23315  014520  0060  F027  FFE3   	movff	btemp+8,plusw1
 23316  014526  0EF0               	movlw	-16
 23317  014528  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23318  01452E  0EF1               	movlw	-15
 23319  014530  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23320  014536  0EF2               	movlw	-14
 23321  014538  0060  F033  FFE3   	movff	btemp+11,plusw1
 23322  01453E                     l7758:
 23323                           
 23324                           ;stkvar	_a @ sp[(-13)+-8]
 23325  01453E  0EEE               	movlw	238
 23326  014540  24E1               	addwf	fsr1l,w,c
 23327  014542  6ED9               	movwf	fsr2l,c
 23328  014544  0EFF               	movlw	255
 23329  014546  20E2               	addwfc	fsr1h,w,c
 23330  014548  6EDA               	movwf	fsr2h,c
 23331  01454A  50DF               	movf	indf2,w,c
 23332  01454C  6E0C               	movwf	(btemp+11)^0,c
 23333  01454E  0E80               	movlw	128
 23334  014550  160C               	andwf	(btemp+11)^0,f,c
 23335                           
 23336                           ;stkvar	_sign @ sp[(-13)+12]
 23337  014552  50E1               	movf	fsr1l,w,c
 23338  014554  0FFF               	addlw	-1
 23339  014556  6ED9               	movwf	fsr2l,c
 23340  014558  50E2               	movf	fsr1h,w,c
 23341  01455A  6EDA               	movwf	fsr2h,c
 23342  01455C  0EFF               	movlw	255
 23343  01455E  22DA               	addwfc	fsr2h,f,c
 23344  014560  500C               	movf	(btemp+11)^0,w,c
 23345  014562  1ADF               	xorwf	indf2,f,c
 23346                           
 23347                           ;stkvar	_a @ sp[(-13)+-8]
 23348  014564  0EEE               	movlw	238
 23349  014566  24E1               	addwf	fsr1l,w,c
 23350  014568  6ED9               	movwf	fsr2l,c
 23351  01456A  0EFF               	movlw	255
 23352  01456C  20E2               	addwfc	fsr1h,w,c
 23353  01456E  6EDA               	movwf	fsr2h,c
 23354  014570  50DF               	movf	indf2,w,c
 23355  014572  6E0C               	movwf	(btemp+11)^0,c
 23356  014574  90D8               	bcf	status,0,c
 23357  014576  340C               	rlcf	(btemp+11)^0,w,c
 23358  014578  6E0B               	movwf	(btemp+10)^0,c
 23359                           
 23360                           ;stkvar	_aexp @ sp[(-13)+10]
 23361  01457A  0EFD               	movlw	-3
 23362  01457C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23363                           
 23364                           ;stkvar	_a @ sp[(-13)+-8]
 23365  014582  0EED               	movlw	237
 23366  014584  24E1               	addwf	fsr1l,w,c
 23367  014586  6ED9               	movwf	fsr2l,c
 23368  014588  0EFF               	movlw	255
 23369  01458A  20E2               	addwfc	fsr1h,w,c
 23370  01458C  6EDA               	movwf	fsr2h,c
 23371  01458E  AEDF               	btfss	indf2,7,c
 23372  014590  D002               	goto	l7766
 23373                           
 23374                           ;stkvar	_aexp @ sp[(-13)+10]
 23375  014592  0EFD               	movlw	-3
 23376  014594  80E3               	bsf	plusw1,0,c
 23377  014596                     l7766:
 23378                           
 23379                           ;stkvar	_aexp @ sp[(-13)+10]
 23380  014596  0EFD               	movlw	-3
 23381  014598  50E3               	movf	plusw1,w,c
 23382  01459A  B4D8               	btfsc	status,2,c
 23383  01459C  D027               	goto	l7776
 23384                           
 23385                           ;stkvar	_aexp @ sp[(-13)+10]
 23386  01459E  0EFD               	movlw	-3
 23387  0145A0  28E3               	incf	plusw1,w,c
 23388  0145A2  A4D8               	btfss	status,2,c
 23389  0145A4  D018               	goto	l7772
 23390  0145A6  0E00               	movlw	0
 23391  0145A8  6E09               	movwf	(btemp+8)^0,c
 23392  0145AA  0E00               	movlw	0
 23393  0145AC  6E0A               	movwf	(btemp+9)^0,c
 23394  0145AE  0E00               	movlw	0
 23395  0145B0  6E0B               	movwf	(btemp+10)^0,c
 23396  0145B2  0E00               	movlw	0
 23397  0145B4  6E0C               	movwf	(btemp+11)^0,c
 23398                           
 23399                           ;stkvar	_a @ sp[(-13)+-8]
 23400  0145B6  0EEB               	movlw	-21
 23401  0145B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 23402  0145BE  0EEC               	movlw	-20
 23403  0145C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23404  0145C6  0EED               	movlw	-19
 23405  0145C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23406  0145CE  0EEE               	movlw	-18
 23407  0145D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23408  0145D6                     l7772:
 23409                           
 23410                           ;stkvar	_a @ sp[(-13)+-8]
 23411  0145D6  0EED               	movlw	-19
 23412  0145D8  8EE3               	bsf	plusw1,7,c
 23413                           
 23414                           ;stkvar	_a @ sp[(-13)+-8]
 23415  0145DA  0EEE               	movlw	238
 23416  0145DC  24E1               	addwf	fsr1l,w,c
 23417  0145DE  6ED9               	movwf	fsr2l,c
 23418  0145E0  0EFF               	movlw	255
 23419  0145E2  20E2               	addwfc	fsr1h,w,c
 23420  0145E4  6EDA               	movwf	fsr2h,c
 23421  0145E6  0E00               	movlw	0
 23422  0145E8  6EDF               	movwf	indf2,c
 23423  0145EA  D018               	goto	l7778
 23424  0145EC                     l7776:
 23425  0145EC  0E00               	movlw	0
 23426  0145EE  6E09               	movwf	(btemp+8)^0,c
 23427  0145F0  0E00               	movlw	0
 23428  0145F2  6E0A               	movwf	(btemp+9)^0,c
 23429  0145F4  0E00               	movlw	0
 23430  0145F6  6E0B               	movwf	(btemp+10)^0,c
 23431  0145F8  0E00               	movlw	0
 23432  0145FA  6E0C               	movwf	(btemp+11)^0,c
 23433                           
 23434                           ;stkvar	_a @ sp[(-13)+-8]
 23435  0145FC  0EEB               	movlw	-21
 23436  0145FE  0060  F027  FFE3   	movff	btemp+8,plusw1
 23437  014604  0EEC               	movlw	-20
 23438  014606  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23439  01460C  0EED               	movlw	-19
 23440  01460E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23441  014614  0EEE               	movlw	-18
 23442  014616  0060  F033  FFE3   	movff	btemp+11,plusw1
 23443  01461C                     l7778:
 23444                           
 23445                           ;stkvar	_a @ sp[(-13)+-8]
 23446  01461C  0EEB               	movlw	-21
 23447  01461E  50E3               	movf	plusw1,w,c
 23448  014620  E139               	bnz	l7790
 23449  014622  0EEC               	movlw	-20
 23450  014624  50E3               	movf	plusw1,w,c
 23451  014626  E136               	bnz	l7790
 23452  014628  0EED               	movlw	-19
 23453  01462A  50E3               	movf	plusw1,w,c
 23454  01462C  E133               	bnz	l7790
 23455  01462E  0EEE               	movlw	-18
 23456  014630  50E3               	movf	plusw1,w,c
 23457  014632  A4D8               	btfss	status,2,c
 23458  014634  D02F               	goto	l7790
 23459                           
 23460                           ;stkvar	_b @ sp[(-13)+-4]
 23461  014636  0EEF               	movlw	-17
 23462  014638  6AE3               	clrf	plusw1,c
 23463  01463A  0EF0               	movlw	-16
 23464  01463C  6AE3               	clrf	plusw1,c
 23465  01463E  0EF1               	movlw	-15
 23466  014640  6AE3               	clrf	plusw1,c
 23467  014642  0EF2               	movlw	-14
 23468  014644  6AE3               	clrf	plusw1,c
 23469                           
 23470                           ;stkvar	_b @ sp[(-13)+-4]
 23471  014646  0EF1               	movlw	241
 23472  014648  24E1               	addwf	fsr1l,w,c
 23473  01464A  6ED9               	movwf	fsr2l,c
 23474  01464C  0EFF               	movlw	255
 23475  01464E  20E2               	addwfc	fsr1h,w,c
 23476  014650  6EDA               	movwf	fsr2h,c
 23477  014652  0E80               	movlw	128
 23478  014654  12DE               	iorwf	postinc2,f,c
 23479  014656  0E7F               	movlw	127
 23480  014658  12DD               	iorwf	postdec2,f,c
 23481  01465A                     l7784:
 23482                           
 23483                           ;stkvar	_sign @ sp[(-13)+12]
 23484  01465A  0EFF               	movlw	-1
 23485  01465C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23486                           
 23487                           ;stkvar	_b @ sp[(-13)+-4]
 23488  014662  0EF2               	movlw	242
 23489  014664  24E1               	addwf	fsr1l,w,c
 23490  014666  6ED9               	movwf	fsr2l,c
 23491  014668  0EFF               	movlw	255
 23492  01466A  20E2               	addwfc	fsr1h,w,c
 23493  01466C  6EDA               	movwf	fsr2h,c
 23494  01466E  500C               	movf	(btemp+11)^0,w,c
 23495  014670  12DF               	iorwf	indf2,f,c
 23496                           
 23497                           ;stkvar	_b @ sp[(-13)+-4]
 23498  014672  0EEF               	movlw	-17
 23499  014674  006F FF8C  F001    	movff	plusw1,btemp
 23500  01467A  0EF0               	movlw	-16
 23501  01467C  006F FF8C  F002    	movff	plusw1,btemp+1
 23502  014682  0EF1               	movlw	-15
 23503  014684  006F FF8C  F003    	movff	plusw1,btemp+2
 23504  01468A  0EF2               	movlw	-14
 23505  01468C  006F FF8C  F004    	movff	plusw1,btemp+3
 23506  014692  D19F               	goto	l2903
 23507  014694                     l7790:
 23508                           
 23509                           ;stkvar	_bexp @ sp[(-13)+11]
 23510  014694  0EFE               	movlw	-2
 23511  014696  50E3               	movf	plusw1,w,c
 23512  014698  A4D8               	btfss	status,2,c
 23513  01469A  D009               	goto	l7798
 23514  01469C  0E00               	movlw	0
 23515  01469E  6E01               	movwf	btemp^0,c
 23516  0146A0  0E00               	movlw	0
 23517  0146A2  6E02               	movwf	(btemp+1)^0,c
 23518  0146A4  0E00               	movlw	0
 23519  0146A6  6E03               	movwf	(btemp+2)^0,c
 23520  0146A8  0E00               	movlw	0
 23521  0146AA  6E04               	movwf	(btemp+3)^0,c
 23522  0146AC  D192               	goto	l2903
 23523  0146AE                     l7798:
 23524                           
 23525                           ;stkvar	_bexp @ sp[(-13)+11]
 23526  0146AE  0EFE               	movlw	-2
 23527  0146B0  50E3               	movf	plusw1,w,c
 23528  0146B2  6E0B               	movwf	(btemp+10)^0,c
 23529  0146B4  6A0C               	clrf	(btemp+11)^0,c
 23530                           
 23531                           ;stkvar	_aexp @ sp[(-13)+10]
 23532  0146B6  0EFD               	movlw	-3
 23533  0146B8  50E3               	movf	plusw1,w,c
 23534  0146BA  5E0B               	subwf	(btemp+10)^0,f,c
 23535  0146BC  0E00               	movlw	0
 23536  0146BE  5A0C               	subwfb	(btemp+11)^0,f,c
 23537  0146C0  0E7F               	movlw	127
 23538  0146C2  260B               	addwf	(btemp+10)^0,f,c
 23539  0146C4  0E00               	movlw	0
 23540  0146C6  220C               	addwfc	(btemp+11)^0,f,c
 23541                           
 23542                           ;stkvar	_new_exp @ sp[(-13)+8]
 23543  0146C8  0EFB               	movlw	-5
 23544  0146CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23545  0146D0  0EFC               	movlw	-4
 23546  0146D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23547                           
 23548                           ;stkvar	_b @ sp[(-13)+-4]
 23549  0146D8  0EEF               	movlw	-17
 23550  0146DA  006F FF8C  F009    	movff	plusw1,btemp+8
 23551  0146E0  0EF0               	movlw	-16
 23552  0146E2  006F FF8C  F00A    	movff	plusw1,btemp+9
 23553  0146E8  0EF1               	movlw	-15
 23554  0146EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 23555  0146F0  0EF2               	movlw	-14
 23556  0146F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23557                           
 23558                           ;stkvar	_rem @ sp[(-13)+4]
 23559  0146F8  0EF7               	movlw	-9
 23560  0146FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 23561  014700  0EF8               	movlw	-8
 23562  014702  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23563  014708  0EF9               	movlw	-7
 23564  01470A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23565  014710  0EFA               	movlw	-6
 23566  014712  0060  F033  FFE3   	movff	btemp+11,plusw1
 23567                           
 23568                           ;stkvar	_b @ sp[(-13)+-4]
 23569  014718  0EEF               	movlw	-17
 23570  01471A  6AE3               	clrf	plusw1,c
 23571  01471C  0EF0               	movlw	-16
 23572  01471E  6AE3               	clrf	plusw1,c
 23573  014720  0EF1               	movlw	-15
 23574  014722  6AE3               	clrf	plusw1,c
 23575  014724  0EF2               	movlw	-14
 23576  014726  6AE3               	clrf	plusw1,c
 23577                           
 23578                           ;stkvar	_grs @ sp[(-13)+0]
 23579  014728  0EF3               	movlw	-13
 23580  01472A  6AE3               	clrf	plusw1,c
 23581  01472C  0EF4               	movlw	-12
 23582  01472E  6AE3               	clrf	plusw1,c
 23583  014730  0EF5               	movlw	-11
 23584  014732  6AE3               	clrf	plusw1,c
 23585  014734  0EF6               	movlw	-10
 23586  014736  6AE3               	clrf	plusw1,c
 23587                           
 23588                           ;stkvar	_aexp @ sp[(-13)+10]
 23589  014738  0EFD               	movlw	-3
 23590  01473A  6AE3               	clrf	plusw1,c
 23591  01473C  D050               	goto	l7826
 23592  01473E                     l7808:
 23593                           
 23594                           ;stkvar	_aexp @ sp[(-13)+10]
 23595  01473E  0EFD               	movlw	-3
 23596  014740  50E3               	movf	plusw1,w,c
 23597  014742  B4D8               	btfsc	status,2,c
 23598  014744  D020               	goto	l7818
 23599                           
 23600                           ;stkvar	_rem @ sp[(-13)+4]
 23601  014746  90D8               	bcf	status,0,c
 23602  014748  0EF7               	movlw	-9
 23603  01474A  36E3               	rlcf	plusw1,f,c
 23604  01474C  0EF8               	movlw	-8
 23605  01474E  36E3               	rlcf	plusw1,f,c
 23606  014750  0EF9               	movlw	-7
 23607  014752  36E3               	rlcf	plusw1,f,c
 23608  014754  0EFA               	movlw	-6
 23609  014756  36E3               	rlcf	plusw1,f,c
 23610                           
 23611                           ;stkvar	_b @ sp[(-13)+-4]
 23612  014758  90D8               	bcf	status,0,c
 23613  01475A  0EEF               	movlw	-17
 23614  01475C  36E3               	rlcf	plusw1,f,c
 23615  01475E  0EF0               	movlw	-16
 23616  014760  36E3               	rlcf	plusw1,f,c
 23617  014762  0EF1               	movlw	-15
 23618  014764  36E3               	rlcf	plusw1,f,c
 23619  014766  0EF2               	movlw	-14
 23620  014768  36E3               	rlcf	plusw1,f,c
 23621                           
 23622                           ;stkvar	_grs @ sp[(-13)+0]
 23623  01476A  0EF6               	movlw	-10
 23624  01476C  AEE3               	btfss	plusw1,7,c
 23625  01476E  D002               	goto	l7816
 23626                           
 23627                           ;stkvar	_b @ sp[(-13)+-4]
 23628  014770  0EEF               	movlw	-17
 23629  014772  80E3               	bsf	plusw1,0,c
 23630  014774                     l7816:
 23631                           
 23632                           ;stkvar	_grs @ sp[(-13)+0]
 23633  014774  90D8               	bcf	status,0,c
 23634  014776  0EF3               	movlw	-13
 23635  014778  36E3               	rlcf	plusw1,f,c
 23636  01477A  0EF4               	movlw	-12
 23637  01477C  36E3               	rlcf	plusw1,f,c
 23638  01477E  0EF5               	movlw	-11
 23639  014780  36E3               	rlcf	plusw1,f,c
 23640  014782  0EF6               	movlw	-10
 23641  014784  36E3               	rlcf	plusw1,f,c
 23642  014786                     l7818:
 23643                           
 23644                           ;stkvar	_a @ sp[(-13)+-8]
 23645                           ;stkvar	_rem @ sp[(-13)+4]
 23646  014786  50E1               	movf	fsr1l,w,c
 23647  014788  0FF7               	addlw	-9
 23648  01478A  6ED9               	movwf	fsr2l,c
 23649  01478C  50E2               	movf	fsr1h,w,c
 23650  01478E  6EDA               	movwf	fsr2h,c
 23651  014790  0EFF               	movlw	255
 23652  014792  22DA               	addwfc	fsr2h,f,c
 23653  014794  0EEB               	movlw	-21
 23654  014796  50E3               	movf	plusw1,w,c
 23655  014798  5CDE               	subwf	postinc2,w,c
 23656  01479A  0EEC               	movlw	-20
 23657  01479C  50E3               	movf	plusw1,w,c
 23658  01479E  58DE               	subwfb	postinc2,w,c
 23659  0147A0  0EED               	movlw	-19
 23660  0147A2  50E3               	movf	plusw1,w,c
 23661  0147A4  58DE               	subwfb	postinc2,w,c
 23662  0147A6  0EEE               	movlw	-18
 23663  0147A8  50E3               	movf	plusw1,w,c
 23664  0147AA  58DE               	subwfb	postinc2,w,c
 23665  0147AC  A0D8               	btfss	status,0,c
 23666  0147AE  D015               	goto	l7824
 23667                           
 23668                           ;stkvar	_grs @ sp[(-13)+0]
 23669  0147B0  0EF6               	movlw	-10
 23670  0147B2  8CE3               	bsf	plusw1,6,c
 23671                           
 23672                           ;stkvar	_a @ sp[(-13)+-8]
 23673                           ;stkvar	_rem @ sp[(-13)+4]
 23674  0147B4  50E1               	movf	fsr1l,w,c
 23675  0147B6  0FF7               	addlw	-9
 23676  0147B8  6ED9               	movwf	fsr2l,c
 23677  0147BA  50E2               	movf	fsr1h,w,c
 23678  0147BC  6EDA               	movwf	fsr2h,c
 23679  0147BE  0EFF               	movlw	255
 23680  0147C0  22DA               	addwfc	fsr2h,f,c
 23681  0147C2  0EEB               	movlw	-21
 23682  0147C4  50E3               	movf	plusw1,w,c
 23683  0147C6  5EDE               	subwf	postinc2,f,c
 23684  0147C8  0EEC               	movlw	-20
 23685  0147CA  50E3               	movf	plusw1,w,c
 23686  0147CC  5ADE               	subwfb	postinc2,f,c
 23687  0147CE  0EED               	movlw	-19
 23688  0147D0  50E3               	movf	plusw1,w,c
 23689  0147D2  5ADE               	subwfb	postinc2,f,c
 23690  0147D4  0EEE               	movlw	-18
 23691  0147D6  50E3               	movf	plusw1,w,c
 23692  0147D8  5ADE               	subwfb	postinc2,f,c
 23693  0147DA                     l7824:
 23694                           
 23695                           ;stkvar	_aexp @ sp[(-13)+10]
 23696  0147DA  0EFD               	movlw	-3
 23697  0147DC  2AE3               	incf	plusw1,f,c
 23698  0147DE                     l7826:
 23699                           
 23700                           ;stkvar	_aexp @ sp[(-13)+10]
 23701  0147DE  0EFD               	movlw	-3
 23702  0147E0  006F FF8C  F001    	movff	plusw1,btemp
 23703  0147E6  0E19               	movlw	25
 23704  0147E8  6401               	cpfsgt	btemp^0,c
 23705  0147EA  D7A9               	goto	l7808
 23706                           
 23707                           ;stkvar	_rem @ sp[(-13)+4]
 23708  0147EC  0EF7               	movlw	-9
 23709  0147EE  50E3               	movf	plusw1,w,c
 23710  0147F0  E10A               	bnz	u6240
 23711  0147F2  0EF8               	movlw	-8
 23712  0147F4  50E3               	movf	plusw1,w,c
 23713  0147F6  E107               	bnz	u6240
 23714  0147F8  0EF9               	movlw	-7
 23715  0147FA  50E3               	movf	plusw1,w,c
 23716  0147FC  E104               	bnz	u6240
 23717  0147FE  0EFA               	movlw	-6
 23718  014800  50E3               	movf	plusw1,w,c
 23719  014802  B4D8               	btfsc	status,2,c
 23720  014804  D024               	goto	l7842
 23721  014806                     u6240:
 23722                           
 23723                           ;stkvar	_grs @ sp[(-13)+0]
 23724  014806  0EF3               	movlw	-13
 23725  014808  80E3               	bsf	plusw1,0,c
 23726  01480A  D021               	goto	l7842
 23727  01480C                     l7832:
 23728                           
 23729                           ;stkvar	_b @ sp[(-13)+-4]
 23730  01480C  90D8               	bcf	status,0,c
 23731  01480E  0EEF               	movlw	-17
 23732  014810  36E3               	rlcf	plusw1,f,c
 23733  014812  0EF0               	movlw	-16
 23734  014814  36E3               	rlcf	plusw1,f,c
 23735  014816  0EF1               	movlw	-15
 23736  014818  36E3               	rlcf	plusw1,f,c
 23737  01481A  0EF2               	movlw	-14
 23738  01481C  36E3               	rlcf	plusw1,f,c
 23739                           
 23740                           ;stkvar	_grs @ sp[(-13)+0]
 23741  01481E  0EF6               	movlw	-10
 23742  014820  AEE3               	btfss	plusw1,7,c
 23743  014822  D002               	goto	l7838
 23744                           
 23745                           ;stkvar	_b @ sp[(-13)+-4]
 23746  014824  0EEF               	movlw	-17
 23747  014826  80E3               	bsf	plusw1,0,c
 23748  014828                     l7838:
 23749                           
 23750                           ;stkvar	_grs @ sp[(-13)+0]
 23751  014828  90D8               	bcf	status,0,c
 23752  01482A  0EF3               	movlw	-13
 23753  01482C  36E3               	rlcf	plusw1,f,c
 23754  01482E  0EF4               	movlw	-12
 23755  014830  36E3               	rlcf	plusw1,f,c
 23756  014832  0EF5               	movlw	-11
 23757  014834  36E3               	rlcf	plusw1,f,c
 23758  014836  0EF6               	movlw	-10
 23759  014838  36E3               	rlcf	plusw1,f,c
 23760                           
 23761                           ;stkvar	_new_exp @ sp[(-13)+8]
 23762  01483A  50E1               	movf	fsr1l,w,c
 23763  01483C  0FFB               	addlw	-5
 23764  01483E  6ED9               	movwf	fsr2l,c
 23765  014840  50E2               	movf	fsr1h,w,c
 23766  014842  6EDA               	movwf	fsr2h,c
 23767  014844  0EFF               	movlw	255
 23768  014846  22DA               	addwfc	fsr2h,f,c
 23769  014848  06DE               	decf	postinc2,f,c
 23770  01484A  0E00               	movlw	0
 23771  01484C  5ADD               	subwfb	postdec2,f,c
 23772  01484E                     l7842:
 23773                           
 23774                           ;stkvar	_b @ sp[(-13)+-4]
 23775  01484E  0EF1               	movlw	-15
 23776  014850  AEE3               	btfss	plusw1,7,c
 23777  014852  D7DC               	goto	l7832
 23778                           
 23779                           ;stkvar	_aexp @ sp[(-13)+10]
 23780  014854  0EFD               	movlw	-3
 23781  014856  6AE3               	clrf	plusw1,c
 23782                           
 23783                           ;stkvar	_grs @ sp[(-13)+0]
 23784  014858  0EF6               	movlw	-10
 23785  01485A  AEE3               	btfss	plusw1,7,c
 23786  01485C  D020               	goto	l7856
 23787                           
 23788                           ;stkvar	_grs @ sp[(-13)+0]
 23789  01485E  50E1               	movf	fsr1l,w,c
 23790  014860  0FF3               	addlw	-13
 23791  014862  6ED9               	movwf	fsr2l,c
 23792  014864  50E2               	movf	fsr1h,w,c
 23793  014866  6EDA               	movwf	fsr2h,c
 23794  014868  0EFF               	movlw	255
 23795  01486A  22DA               	addwfc	fsr2h,f,c
 23796  01486C  0EFF               	movlw	255
 23797  01486E  14DE               	andwf	postinc2,w,c
 23798  014870  6E09               	movwf	(btemp+8)^0,c
 23799  014872  0EFF               	movlw	255
 23800  014874  14DE               	andwf	postinc2,w,c
 23801  014876  6E0A               	movwf	(btemp+9)^0,c
 23802  014878  0EFF               	movlw	255
 23803  01487A  14DE               	andwf	postinc2,w,c
 23804  01487C  6E0B               	movwf	(btemp+10)^0,c
 23805  01487E  0E7F               	movlw	127
 23806  014880  14DE               	andwf	postinc2,w,c
 23807  014882  6E0C               	movwf	(btemp+11)^0,c
 23808  014884  5009               	movf	(btemp+8)^0,w,c
 23809  014886  100A               	iorwf	(btemp+9)^0,w,c
 23810  014888  100B               	iorwf	(btemp+10)^0,w,c
 23811  01488A  100C               	iorwf	(btemp+11)^0,w,c
 23812  01488C  B4D8               	btfsc	status,2,c
 23813  01488E  D004               	goto	l7852
 23814  014890                     u6280:
 23815                           
 23816                           ;stkvar	_aexp @ sp[(-13)+10]
 23817  014890  0EFD               	movlw	-3
 23818  014892  6AE3               	clrf	plusw1,c
 23819  014894  2AE3               	incf	plusw1,f,c
 23820  014896  D003               	goto	l7856
 23821  014898                     l7852:
 23822                           
 23823                           ;stkvar	_b @ sp[(-13)+-4]
 23824  014898  0EEF               	movlw	-17
 23825  01489A  B0E3               	btfsc	plusw1,0,c
 23826  01489C  D7F9               	goto	u6280
 23827  01489E                     l7856:
 23828                           
 23829                           ;stkvar	_aexp @ sp[(-13)+10]
 23830  01489E  0EFD               	movlw	-3
 23831  0148A0  50E3               	movf	plusw1,w,c
 23832  0148A2  B4D8               	btfsc	status,2,c
 23833  0148A4  D036               	goto	l7866
 23834                           
 23835                           ;stkvar	_b @ sp[(-13)+-4]
 23836  0148A6  50E1               	movf	fsr1l,w,c
 23837  0148A8  0FEF               	addlw	-17
 23838  0148AA  6ED9               	movwf	fsr2l,c
 23839  0148AC  50E2               	movf	fsr1h,w,c
 23840  0148AE  6EDA               	movwf	fsr2h,c
 23841  0148B0  0EFF               	movlw	255
 23842  0148B2  22DA               	addwfc	fsr2h,f,c
 23843  0148B4  2ADE               	incf	postinc2,f,c
 23844  0148B6  0E00               	movlw	0
 23845  0148B8  22DE               	addwfc	postinc2,f,c
 23846  0148BA  22DE               	addwfc	postinc2,f,c
 23847  0148BC  22DE               	addwfc	postinc2,f,c
 23848                           
 23849                           ;stkvar	_b @ sp[(-13)+-4]
 23850  0148BE  0EF2               	movlw	-14
 23851  0148C0  A0E3               	btfss	plusw1,0,c
 23852  0148C2  D027               	goto	l7866
 23853  0148C4  0E01               	movlw	1
 23854  0148C6  6E0C               	movwf	(btemp+11)^0,c
 23855                           
 23856                           ;stkvar	_b @ sp[(-13)+-4]
 23857  0148C8  50E1               	movf	fsr1l,w,c
 23858  0148CA  0FEF               	addlw	-17
 23859  0148CC  6ED9               	movwf	fsr2l,c
 23860  0148CE  50E2               	movf	fsr1h,w,c
 23861  0148D0  6EDA               	movwf	fsr2h,c
 23862  0148D2  0EFF               	movlw	255
 23863  0148D4  22DA               	addwfc	fsr2h,f,c
 23864  0148D6  280C               	incf	(btemp+11)^0,w,c
 23865  0148D8  52DE               	movf	postinc2,f,c
 23866  0148DA  D008               	goto	u6320
 23867  0148DC                     u6325:
 23868  0148DC  52DE               	movf	postinc2,f,c
 23869  0148DE  90D8               	bcf	status,0,c
 23870  0148E0  BEDC               	btfsc	preinc2,7,c
 23871  0148E2  80D8               	bsf	status,0,c
 23872  0148E4  32DD               	rrcf	postdec2,f,c
 23873  0148E6  32DD               	rrcf	postdec2,f,c
 23874  0148E8  32DD               	rrcf	postdec2,f,c
 23875  0148EA  32DE               	rrcf	postinc2,f,c
 23876  0148EC                     u6320:
 23877  0148EC  2EE8               	decfsz	wreg,f,c
 23878  0148EE  D7F6               	goto	u6325
 23879                           
 23880                           ;stkvar	_new_exp @ sp[(-13)+8]
 23881  0148F0  0EFB               	movlw	-5
 23882  0148F2  50E3               	movf	plusw1,w,c
 23883  0148F4  0F01               	addlw	1
 23884  0148F6  6E01               	movwf	btemp^0,c
 23885  0148F8  0EFB               	movlw	-5
 23886  0148FA  0060  F007  FFE3   	movff	btemp,plusw1
 23887  014900  6A01               	clrf	btemp^0,c
 23888  014902  0EFC               	movlw	-4
 23889  014904  50E3               	movf	plusw1,w,c
 23890  014906  2001               	addwfc	btemp^0,w,c
 23891  014908  6E01               	movwf	btemp^0,c
 23892  01490A  0EFC               	movlw	-4
 23893  01490C  0060  F007  FFE3   	movff	btemp,plusw1
 23894  014912                     l7866:
 23895                           
 23896                           ;stkvar	_new_exp @ sp[(-13)+8]
 23897  014912  0EFC               	movlw	-4
 23898  014914  BEE3               	btfsc	plusw1,7,c
 23899  014916  D01B               	goto	l7872
 23900  014918  0EFC               	movlw	-4
 23901  01491A  50E3               	movf	plusw1,w,c
 23902  01491C  E104               	bnz	u6330
 23903  01491E  0EFB               	movlw	-5
 23904  014920  28E3               	incf	plusw1,w,c
 23905  014922  A0D8               	btfss	status,0,c
 23906  014924  D014               	goto	l7872
 23907  014926                     u6330:
 23908  014926  0EFF               	movlw	255
 23909  014928  6E0B               	movwf	(btemp+10)^0,c
 23910  01492A  0E00               	movlw	0
 23911  01492C  6E0C               	movwf	(btemp+11)^0,c
 23912                           
 23913                           ;stkvar	_new_exp @ sp[(-13)+8]
 23914  01492E  0EFB               	movlw	-5
 23915  014930  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23916  014936  0EFC               	movlw	-4
 23917  014938  0060  F033  FFE3   	movff	btemp+11,plusw1
 23918                           
 23919                           ;stkvar	_b @ sp[(-13)+-4]
 23920  01493E  0EEF               	movlw	-17
 23921  014940  6AE3               	clrf	plusw1,c
 23922  014942  0EF0               	movlw	-16
 23923  014944  6AE3               	clrf	plusw1,c
 23924  014946  0EF1               	movlw	-15
 23925  014948  6AE3               	clrf	plusw1,c
 23926  01494A  0EF2               	movlw	-14
 23927  01494C  6AE3               	clrf	plusw1,c
 23928  01494E                     l7872:
 23929                           
 23930                           ;stkvar	_new_exp @ sp[(-13)+8]
 23931  01494E  0EFC               	movlw	-4
 23932  014950  BEE3               	btfsc	plusw1,7,c
 23933  014952  D007               	goto	u6340
 23934  014954  0EFC               	movlw	-4
 23935  014956  50E3               	movf	plusw1,w,c
 23936  014958  E112               	bnz	l7878
 23937  01495A  0EFB               	movlw	-5
 23938  01495C  04E3               	decf	plusw1,w,c
 23939  01495E  B0D8               	btfsc	status,0,c
 23940  014960  D00E               	goto	l7878
 23941  014962                     u6340:
 23942                           
 23943                           ;stkvar	_new_exp @ sp[(-13)+8]
 23944  014962  0EFB               	movlw	-5
 23945  014964  6AE3               	clrf	plusw1,c
 23946  014966  0EFC               	movlw	-4
 23947  014968  6AE3               	clrf	plusw1,c
 23948                           
 23949                           ;stkvar	_b @ sp[(-13)+-4]
 23950  01496A  0EEF               	movlw	-17
 23951  01496C  6AE3               	clrf	plusw1,c
 23952  01496E  0EF0               	movlw	-16
 23953  014970  6AE3               	clrf	plusw1,c
 23954  014972  0EF1               	movlw	-15
 23955  014974  6AE3               	clrf	plusw1,c
 23956  014976  0EF2               	movlw	-14
 23957  014978  6AE3               	clrf	plusw1,c
 23958                           
 23959                           ;stkvar	_sign @ sp[(-13)+12]
 23960  01497A  0EFF               	movlw	-1
 23961  01497C  6AE3               	clrf	plusw1,c
 23962  01497E                     l7878:
 23963                           
 23964                           ;stkvar	_new_exp @ sp[(-13)+8]
 23965                           ;stkvar	_bexp @ sp[(-13)+11]
 23966  01497E  0EFB               	movlw	-5
 23967  014980  006F FF8C  F001    	movff	plusw1,btemp
 23968  014986  0EFE               	movlw	-2
 23969  014988  0060  F007  FFE3   	movff	btemp,plusw1
 23970                           
 23971                           ;stkvar	_bexp @ sp[(-13)+11]
 23972  01498E  0EFE               	movlw	-2
 23973  014990  A0E3               	btfss	plusw1,0,c
 23974  014992  D009               	goto	l7884
 23975                           
 23976                           ;stkvar	_b @ sp[(-13)+-4]
 23977  014994  0EF1               	movlw	241
 23978  014996  24E1               	addwf	fsr1l,w,c
 23979  014998  6ED9               	movwf	fsr2l,c
 23980  01499A  0EFF               	movlw	255
 23981  01499C  20E2               	addwfc	fsr1h,w,c
 23982  01499E  6EDA               	movwf	fsr2h,c
 23983  0149A0  0E00               	movlw	0
 23984  0149A2  8EDB               	bsf	plusw2,7,c
 23985  0149A4  D008               	goto	l7886
 23986  0149A6                     l7884:
 23987                           
 23988                           ;stkvar	_b @ sp[(-13)+-4]
 23989  0149A6  0EF1               	movlw	241
 23990  0149A8  24E1               	addwf	fsr1l,w,c
 23991  0149AA  6ED9               	movwf	fsr2l,c
 23992  0149AC  0EFF               	movlw	255
 23993  0149AE  20E2               	addwfc	fsr1h,w,c
 23994  0149B0  6EDA               	movwf	fsr2h,c
 23995  0149B2  0E7F               	movlw	127
 23996  0149B4  16DF               	andwf	indf2,f,c
 23997  0149B6                     l7886:
 23998                           
 23999                           ;stkvar	_b @ sp[(-13)+-4]
 24000  0149B6  0EF2               	movlw	242
 24001  0149B8  24E1               	addwf	fsr1l,w,c
 24002  0149BA  6ED9               	movwf	fsr2l,c
 24003  0149BC  0EFF               	movlw	255
 24004  0149BE  20E2               	addwfc	fsr1h,w,c
 24005  0149C0  6EDA               	movwf	fsr2h,c
 24006                           
 24007                           ;stkvar	_bexp @ sp[(-13)+11]
 24008  0149C2  0EFE               	movlw	-2
 24009  0149C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24010  0149CA  90D8               	bcf	status,0,c
 24011  0149CC  300C               	rrcf	(btemp+11)^0,w,c
 24012  0149CE  6EDF               	movwf	indf2,c
 24013  0149D0  D644               	goto	l7784
 24014  0149D2                     l2903:
 24015                           
 24016                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 24017  0149D2  0EEB               	movlw	235
 24018  0149D4  26E1               	addwf	fsr1l,f,c
 24019  0149D6  0EFF               	movlw	255
 24020  0149D8  22E2               	addwfc	fsr1h,f,c
 24021  0149DA  0012               	return		;funcret
 24022  0149DC                     __end_of___fldiv:
 24023                           	opt callstack 0
 24024                           
 24025 ;; *************** function ___flge *****************
 24026 ;; Defined at:
 24027 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 24028 ;; Parameters:    Size  Location     Type
 24029 ;;  ff1             4  [STACK] unsigned char 
 24030 ;;  ff2             4  [STACK] unsigned char 
 24031 ;; Auto vars:     Size  Location     Type
 24032 ;;		None
 24033 ;; Return value:  Size  Location     Type
 24034 ;;		None               void
 24035 ;; Registers used:
 24036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24037 ;; Tracked objects:
 24038 ;;		On entry : 0/0
 24039 ;;		On exit  : 0/0
 24040 ;;		Unchanged: 0/0
 24041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24046 ;;Total ram usage:        0 bytes
 24047 ;; Hardware stack levels used:    1
 24048 ;; Hardware stack levels required when called:   15
 24049 ;; This function calls:
 24050 ;;		Nothing
 24051 ;; This function is called by:
 24052 ;;		_main
 24053 ;;		_calc_ror_data
 24054 ;;		_calc_bsoc
 24055 ;;		_efgtoa
 24056 ;; This function uses a reentrant model
 24057 ;;
 24058                           
 24059                           	psect	text98
 24060  018132                     __ptext98:
 24061                           	opt callstack 0
 24062  018132                     ___flge:
 24063                           	opt callstack 0
 24064                           
 24065                           ;stkvar	_ff1 @ sp[(0)+-4]
 24066                           
 24067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24068                           ;incstack = 0
 24069 ;; hardware stack exceeded
 24070  018132  50E1               	movf	fsr1l,w,c
 24071  018134  0FFC               	addlw	-4
 24072  018136  6ED9               	movwf	fsr2l,c
 24073  018138  50E2               	movf	fsr1h,w,c
 24074  01813A  6EDA               	movwf	fsr2h,c
 24075  01813C  0EFF               	movlw	255
 24076  01813E  22DA               	addwfc	fsr2h,f,c
 24077  018140  0E00               	movlw	0
 24078  018142  14DE               	andwf	postinc2,w,c
 24079  018144  6E09               	movwf	(btemp+8)^0,c
 24080  018146  0E00               	movlw	0
 24081  018148  14DE               	andwf	postinc2,w,c
 24082  01814A  6E0A               	movwf	(btemp+9)^0,c
 24083  01814C  0E80               	movlw	128
 24084  01814E  14DE               	andwf	postinc2,w,c
 24085  018150  6E0B               	movwf	(btemp+10)^0,c
 24086  018152  0E7F               	movlw	127
 24087  018154  14DE               	andwf	postinc2,w,c
 24088  018156  6E0C               	movwf	(btemp+11)^0,c
 24089  018158  5009               	movf	(btemp+8)^0,w,c
 24090  01815A  100A               	iorwf	(btemp+9)^0,w,c
 24091  01815C  100B               	iorwf	(btemp+10)^0,w,c
 24092  01815E  100C               	iorwf	(btemp+11)^0,w,c
 24093  018160  A4D8               	btfss	status,2,c
 24094  018162  D008               	goto	l8160
 24095                           
 24096                           ;stkvar	_ff1 @ sp[(0)+-4]
 24097  018164  0EFC               	movlw	-4
 24098  018166  6AE3               	clrf	plusw1,c
 24099  018168  0EFD               	movlw	-3
 24100  01816A  6AE3               	clrf	plusw1,c
 24101  01816C  0EFE               	movlw	-2
 24102  01816E  6AE3               	clrf	plusw1,c
 24103  018170  0EFF               	movlw	-1
 24104  018172  6AE3               	clrf	plusw1,c
 24105  018174                     l8160:
 24106                           
 24107                           ;stkvar	_ff2 @ sp[(0)+-8]
 24108  018174  50E1               	movf	fsr1l,w,c
 24109  018176  0FF8               	addlw	-8
 24110  018178  6ED9               	movwf	fsr2l,c
 24111  01817A  50E2               	movf	fsr1h,w,c
 24112  01817C  6EDA               	movwf	fsr2h,c
 24113  01817E  0EFF               	movlw	255
 24114  018180  22DA               	addwfc	fsr2h,f,c
 24115  018182  0E00               	movlw	0
 24116  018184  14DE               	andwf	postinc2,w,c
 24117  018186  6E09               	movwf	(btemp+8)^0,c
 24118  018188  0E00               	movlw	0
 24119  01818A  14DE               	andwf	postinc2,w,c
 24120  01818C  6E0A               	movwf	(btemp+9)^0,c
 24121  01818E  0E80               	movlw	128
 24122  018190  14DE               	andwf	postinc2,w,c
 24123  018192  6E0B               	movwf	(btemp+10)^0,c
 24124  018194  0E7F               	movlw	127
 24125  018196  14DE               	andwf	postinc2,w,c
 24126  018198  6E0C               	movwf	(btemp+11)^0,c
 24127  01819A  5009               	movf	(btemp+8)^0,w,c
 24128  01819C  100A               	iorwf	(btemp+9)^0,w,c
 24129  01819E  100B               	iorwf	(btemp+10)^0,w,c
 24130  0181A0  100C               	iorwf	(btemp+11)^0,w,c
 24131  0181A2  A4D8               	btfss	status,2,c
 24132  0181A4  D008               	goto	l2584
 24133                           
 24134                           ;stkvar	_ff2 @ sp[(0)+-8]
 24135  0181A6  0EF8               	movlw	-8
 24136  0181A8  6AE3               	clrf	plusw1,c
 24137  0181AA  0EF9               	movlw	-7
 24138  0181AC  6AE3               	clrf	plusw1,c
 24139  0181AE  0EFA               	movlw	-6
 24140  0181B0  6AE3               	clrf	plusw1,c
 24141  0181B2  0EFB               	movlw	-5
 24142  0181B4  6AE3               	clrf	plusw1,c
 24143  0181B6                     l2584:
 24144                           
 24145                           ;stkvar	_ff1 @ sp[(0)+-4]
 24146  0181B6  0EFF               	movlw	-1
 24147  0181B8  AEE3               	btfss	plusw1,7,c
 24148  0181BA  D024               	goto	l8166
 24149                           
 24150                           ;stkvar	_ff1 @ sp[(0)+-4]
 24151  0181BC  0E00               	movlw	0
 24152  0181BE  6E09               	movwf	(btemp+8)^0,c
 24153  0181C0  0E00               	movlw	0
 24154  0181C2  6E0A               	movwf	(btemp+9)^0,c
 24155  0181C4  0E00               	movlw	0
 24156  0181C6  6E0B               	movwf	(btemp+10)^0,c
 24157  0181C8  0E80               	movlw	128
 24158  0181CA  6E0C               	movwf	(btemp+11)^0,c
 24159  0181CC  0EFC               	movlw	-4
 24160  0181CE  50E3               	movf	plusw1,w,c
 24161  0181D0  5E09               	subwf	(btemp+8)^0,f,c
 24162  0181D2  0EFD               	movlw	-3
 24163  0181D4  50E3               	movf	plusw1,w,c
 24164  0181D6  5A0A               	subwfb	(btemp+9)^0,f,c
 24165  0181D8  0EFE               	movlw	-2
 24166  0181DA  50E3               	movf	plusw1,w,c
 24167  0181DC  5A0B               	subwfb	(btemp+10)^0,f,c
 24168  0181DE  0EFF               	movlw	-1
 24169  0181E0  50E3               	movf	plusw1,w,c
 24170  0181E2  5A0C               	subwfb	(btemp+11)^0,f,c
 24171                           
 24172                           ;stkvar	_ff1 @ sp[(0)+-4]
 24173  0181E4  0EFC               	movlw	-4
 24174  0181E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 24175  0181EC  0EFD               	movlw	-3
 24176  0181EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24177  0181F4  0EFE               	movlw	-2
 24178  0181F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24179  0181FC  0EFF               	movlw	-1
 24180  0181FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24181  018204                     l8166:
 24182                           
 24183                           ;stkvar	_ff2 @ sp[(0)+-8]
 24184  018204  0EFB               	movlw	-5
 24185  018206  AEE3               	btfss	plusw1,7,c
 24186  018208  D024               	goto	l8170
 24187                           
 24188                           ;stkvar	_ff2 @ sp[(0)+-8]
 24189  01820A  0E00               	movlw	0
 24190  01820C  6E09               	movwf	(btemp+8)^0,c
 24191  01820E  0E00               	movlw	0
 24192  018210  6E0A               	movwf	(btemp+9)^0,c
 24193  018212  0E00               	movlw	0
 24194  018214  6E0B               	movwf	(btemp+10)^0,c
 24195  018216  0E80               	movlw	128
 24196  018218  6E0C               	movwf	(btemp+11)^0,c
 24197  01821A  0EF8               	movlw	-8
 24198  01821C  50E3               	movf	plusw1,w,c
 24199  01821E  5E09               	subwf	(btemp+8)^0,f,c
 24200  018220  0EF9               	movlw	-7
 24201  018222  50E3               	movf	plusw1,w,c
 24202  018224  5A0A               	subwfb	(btemp+9)^0,f,c
 24203  018226  0EFA               	movlw	-6
 24204  018228  50E3               	movf	plusw1,w,c
 24205  01822A  5A0B               	subwfb	(btemp+10)^0,f,c
 24206  01822C  0EFB               	movlw	-5
 24207  01822E  50E3               	movf	plusw1,w,c
 24208  018230  5A0C               	subwfb	(btemp+11)^0,f,c
 24209                           
 24210                           ;stkvar	_ff2 @ sp[(0)+-8]
 24211  018232  0EF8               	movlw	-8
 24212  018234  0060  F027  FFE3   	movff	btemp+8,plusw1
 24213  01823A  0EF9               	movlw	-7
 24214  01823C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24215  018242  0EFA               	movlw	-6
 24216  018244  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24217  01824A  0EFB               	movlw	-5
 24218  01824C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24219  018252                     l8170:
 24220                           
 24221                           ;stkvar	_ff1 @ sp[(0)+-4]
 24222  018252  0EFF               	movlw	-1
 24223  018254  7EE3               	btg	plusw1,7,c
 24224                           
 24225                           ;stkvar	_ff2 @ sp[(0)+-8]
 24226  018256  0EFB               	movlw	-5
 24227  018258  7EE3               	btg	plusw1,7,c
 24228                           
 24229                           ;stkvar	_ff2 @ sp[(0)+-8]
 24230                           ;stkvar	_ff1 @ sp[(0)+-4]
 24231  01825A  50E1               	movf	fsr1l,w,c
 24232  01825C  0FFC               	addlw	-4
 24233  01825E  6ED9               	movwf	fsr2l,c
 24234  018260  50E2               	movf	fsr1h,w,c
 24235  018262  6EDA               	movwf	fsr2h,c
 24236  018264  0EFF               	movlw	255
 24237  018266  22DA               	addwfc	fsr2h,f,c
 24238  018268  0EF8               	movlw	-8
 24239  01826A  50E3               	movf	plusw1,w,c
 24240  01826C  5CDE               	subwf	postinc2,w,c
 24241  01826E  0EF9               	movlw	-7
 24242  018270  50E3               	movf	plusw1,w,c
 24243  018272  58DE               	subwfb	postinc2,w,c
 24244  018274  0EFA               	movlw	-6
 24245  018276  50E3               	movf	plusw1,w,c
 24246  018278  58DE               	subwfb	postinc2,w,c
 24247  01827A  0EFB               	movlw	-5
 24248  01827C  50E3               	movf	plusw1,w,c
 24249  01827E  58DE               	subwfb	postinc2,w,c
 24250  018280  B0D8               	btfsc	status,0,c
 24251  018282  D002               	goto	l8178
 24252  018284  9001               	bcf	btemp& (0+255),0,c
 24253  018286  D001               	goto	l2591
 24254  018288                     l8178:
 24255  018288  8001               	bsf	btemp& (0+255),0,c
 24256  01828A                     l2591:
 24257                           
 24258                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 24259  01828A  0EF8               	movlw	248
 24260  01828C  26E1               	addwf	fsr1l,f,c
 24261  01828E  0EFF               	movlw	255
 24262  018290  22E2               	addwfc	fsr1h,f,c
 24263  018292  0012               	return		;funcret
 24264  018294                     __end_of___flge:
 24265                           	opt callstack 0
 24266                           
 24267 ;; *************** function _calc_model_data *****************
 24268 ;; Defined at:
 24269 ;;		line 56 in file "mbmc.c"
 24270 ;; Parameters:    Size  Location     Type
 24271 ;;		None
 24272 ;; Auto vars:     Size  Location     Type
 24273 ;;		None
 24274 ;; Return value:  Size  Location     Type
 24275 ;;                  1  [STACK] void 
 24276 ;; Registers used:
 24277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24278 ;; Tracked objects:
 24279 ;;		On entry : 0/0
 24280 ;;		On exit  : 3F/1
 24281 ;;		Unchanged: 0/0
 24282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24287 ;;Total ram usage:        0 bytes
 24288 ;; Hardware stack levels used:    1
 24289 ;; Hardware stack levels required when called:   18
 24290 ;; This function calls:
 24291 ;;		___fladd
 24292 ;;		___flmul
 24293 ;;		___flsub
 24294 ;;		_lp_filter
 24295 ;;		_start_bsoc
 24296 ;;		_stop_bsoc
 24297 ;; This function is called by:
 24298 ;;		_main
 24299 ;; This function uses a reentrant model
 24300 ;;
 24301                           
 24302                           	psect	text99
 24303  0156C2                     __ptext99:
 24304                           	opt callstack 0
 24305  0156C2                     _calc_model_data:
 24306                           	opt callstack 12
 24307                           
 24308                           ;mbmc.c: 58:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 59:  stop_bsoc();
 24309                           
 24310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24311                           ;incstack = 0
 24312  0156C2  EC30  F0D8         	call	_stop_bsoc	;wreg free
 24313                           
 24314                           ; BSR set to: 57
 24315                           ;mbmc.c: 61:  if (!V.calib) {
 24316  0156C6  0102               	movlb	2	; () banked
 24317  0156C8  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 24318  0156CA  A4D8               	btfss	status,2,c
 24319  0156CC  D1C5               	goto	l10450
 24320                           
 24321                           ; BSR set to: 2
 24322                           ;mbmc.c: 62:   C.c_bat = C.calc[C_BATT];
 24323  0156CE  C100  F144         	movff	_C,_C+68	;volatile
 24324  0156D2  C101  F145         	movff	_C+1,_C+69	;volatile
 24325  0156D6  C102  F146         	movff	_C+2,_C+70	;volatile
 24326  0156DA  C103  F147         	movff	_C+3,_C+71	;volatile
 24327                           
 24328                           ; BSR set to: 2
 24329                           ;mbmc.c: 63:   C.bc_ror = C.c_bat - bcror;
 24330  0156DE  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 24331  0156E4  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 24332  0156EA  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 24333  0156F0  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 24334  0156F6  0060  F513  FFE6   	movff	_C+68,postinc1
 24335  0156FC  0060  F517  FFE6   	movff	_C+69,postinc1
 24336  015702  0060  F51B  FFE6   	movff	_C+70,postinc1
 24337  015708  0060  F51F  FFE6   	movff	_C+71,postinc1
 24338  01570E  ECEB  F0D1         	call	___flsub	;wreg free
 24339  015712  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 24340  015718  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 24341  01571E  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 24342  015724  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 24343                           
 24344                           ;mbmc.c: 64:   bcror = C.c_bat;
 24345  01572A  C144  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 24346  01572E  C145  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 24347  015732  C146  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 24348  015736  C147  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 24349                           
 24350                           ;mbmc.c: 65:   C.c_pv = C.calc[C_PV];
 24351  01573A  C104  F148         	movff	_C+4,_C+72	;volatile
 24352  01573E  C105  F149         	movff	_C+5,_C+73	;volatile
 24353  015742  C106  F14A         	movff	_C+6,_C+74	;volatile
 24354  015746  C107  F14B         	movff	_C+7,_C+75	;volatile
 24355                           
 24356                           ;mbmc.c: 66:   C.v_bat = C.calc[V_BAT];
 24357  01574A  C110  F154         	movff	_C+16,_C+84	;volatile
 24358  01574E  C111  F155         	movff	_C+17,_C+85	;volatile
 24359  015752  C112  F156         	movff	_C+18,_C+86	;volatile
 24360  015756  C113  F157         	movff	_C+19,_C+87	;volatile
 24361                           
 24362                           ;mbmc.c: 67:   C.bv_ror = C.v_bat - bvror;
 24363  01575A  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 24364  015760  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 24365  015766  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 24366  01576C  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 24367  015772  0060  F553  FFE6   	movff	_C+84,postinc1
 24368  015778  0060  F557  FFE6   	movff	_C+85,postinc1
 24369  01577E  0060  F55B  FFE6   	movff	_C+86,postinc1
 24370  015784  0060  F55F  FFE6   	movff	_C+87,postinc1
 24371  01578A  ECEB  F0D1         	call	___flsub	;wreg free
 24372  01578E  0060  F004  F168   	movff	btemp,_C+104	;volatile
 24373  015794  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 24374  01579A  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 24375  0157A0  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 24376                           
 24377                           ;mbmc.c: 68:   bvror = C.v_bat;
 24378  0157A6  C154  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 24379  0157AA  C155  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 24380  0157AE  C156  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 24381  0157B2  C157  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 24382                           
 24383                           ;mbmc.c: 69:   C.v_pv = C.calc[V_PV];
 24384  0157B6  C114  F150         	movff	_C+20,_C+80	;volatile
 24385  0157BA  C115  F151         	movff	_C+21,_C+81	;volatile
 24386  0157BE  C116  F152         	movff	_C+22,_C+82	;volatile
 24387  0157C2  C117  F153         	movff	_C+23,_C+83	;volatile
 24388                           
 24389                           ;mbmc.c: 70:   C.v_cc = C.calc[V_CC];
 24390  0157C6  C108  F14C         	movff	_C+8,_C+76	;volatile
 24391  0157CA  C109  F14D         	movff	_C+9,_C+77	;volatile
 24392  0157CE  C10A  F14E         	movff	_C+10,_C+78	;volatile
 24393  0157D2  C10B  F14F         	movff	_C+11,_C+79	;volatile
 24394                           
 24395                           ;mbmc.c: 71:   C.v_inverter = C.calc[V_INVERTER];
 24396  0157D6  C130  F164         	movff	_C+48,_C+100	;volatile
 24397  0157DA  C131  F165         	movff	_C+49,_C+101	;volatile
 24398  0157DE  C132  F166         	movff	_C+50,_C+102	;volatile
 24399  0157E2  C133  F167         	movff	_C+51,_C+103	;volatile
 24400                           
 24401                           ;mbmc.c: 72:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 24402  0157E6  0E01               	movlw	1
 24403  0157E8  6EE6               	movwf	postinc1,c
 24404  0157EA  0E10               	movlw	16
 24405  0157EC  6EE6               	movwf	postinc1,c
 24406  0157EE  0060  F403  FFE6   	movff	_C,postinc1
 24407  0157F4  0060  F407  FFE6   	movff	_C+1,postinc1
 24408  0157FA  0060  F40B  FFE6   	movff	_C+2,postinc1
 24409  015800  0060  F40F  FFE6   	movff	_C+3,postinc1
 24410  015806  0060  F413  FFE6   	movff	_C+4,postinc1
 24411  01580C  0060  F417  FFE6   	movff	_C+5,postinc1
 24412  015812  0060  F41B  FFE6   	movff	_C+6,postinc1
 24413  015818  0060  F41F  FFE6   	movff	_C+7,postinc1
 24414  01581E  ECEB  F0D1         	call	___flsub	;wreg free
 24415  015822  0060  F007  FFE6   	movff	btemp,postinc1
 24416  015828  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24417  01582E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24418  015834  0060  F013  FFE6   	movff	btemp+3,postinc1
 24419  01583A  EC05  F0BC         	call	_lp_filter	;wreg free
 24420  01583E  0060  F004  F140   	movff	btemp,_C+64	;volatile
 24421  015844  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 24422  01584A  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 24423  015850  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 24424                           
 24425                           ;mbmc.c: 73:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 24426  015856  0E01               	movlw	1
 24427  015858  6EE6               	movwf	postinc1,c
 24428  01585A  0E11               	movlw	17
 24429  01585C  6EE6               	movwf	postinc1,c
 24430  01585E  0060  F553  FFE6   	movff	_C+84,postinc1
 24431  015864  0060  F557  FFE6   	movff	_C+85,postinc1
 24432  01586A  0060  F55B  FFE6   	movff	_C+86,postinc1
 24433  015870  0060  F55F  FFE6   	movff	_C+87,postinc1
 24434  015876  0060  F503  FFE6   	movff	_C+64,postinc1
 24435  01587C  0060  F507  FFE6   	movff	_C+65,postinc1
 24436  015882  0060  F50B  FFE6   	movff	_C+66,postinc1
 24437  015888  0060  F50F  FFE6   	movff	_C+67,postinc1
 24438  01588E  ECEF  F096         	call	___flmul	;wreg free
 24439  015892  0060  F007  FFE6   	movff	btemp,postinc1
 24440  015898  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24441  01589E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24442  0158A4  0060  F013  FFE6   	movff	btemp+3,postinc1
 24443  0158AA  EC05  F0BC         	call	_lp_filter	;wreg free
 24444  0158AE  0060  F004  F170   	movff	btemp,_C+112	;volatile
 24445  0158B4  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 24446  0158BA  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 24447  0158C0  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 24448                           
 24449                           ;mbmc.c: 74:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 24450  0158C6  0E01               	movlw	1
 24451  0158C8  6EE6               	movwf	postinc1,c
 24452  0158CA  0E12               	movlw	18
 24453  0158CC  6EE6               	movwf	postinc1,c
 24454  0158CE  0060  F543  FFE6   	movff	_C+80,postinc1
 24455  0158D4  0060  F547  FFE6   	movff	_C+81,postinc1
 24456  0158DA  0060  F54B  FFE6   	movff	_C+82,postinc1
 24457  0158E0  0060  F54F  FFE6   	movff	_C+83,postinc1
 24458  0158E6  0060  F523  FFE6   	movff	_C+72,postinc1
 24459  0158EC  0060  F527  FFE6   	movff	_C+73,postinc1
 24460  0158F2  0060  F52B  FFE6   	movff	_C+74,postinc1
 24461  0158F8  0060  F52F  FFE6   	movff	_C+75,postinc1
 24462  0158FE  ECEF  F096         	call	___flmul	;wreg free
 24463  015902  0060  F007  FFE6   	movff	btemp,postinc1
 24464  015908  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24465  01590E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24466  015914  0060  F013  FFE6   	movff	btemp+3,postinc1
 24467  01591A  EC05  F0BC         	call	_lp_filter	;wreg free
 24468  01591E  0060  F004  F178   	movff	btemp,_C+120	;volatile
 24469  015924  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 24470  01592A  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 24471  015930  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 24472                           
 24473                           ;mbmc.c: 75:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 24474  015936  0E01               	movlw	1
 24475  015938  6EE6               	movwf	postinc1,c
 24476  01593A  0E13               	movlw	19
 24477  01593C  6EE6               	movwf	postinc1,c
 24478  01593E  0E00               	movlw	0
 24479  015940  6EE6               	movwf	postinc1,c
 24480  015942  0E00               	movlw	0
 24481  015944  6EE6               	movwf	postinc1,c
 24482  015946  0E60               	movlw	96
 24483  015948  6EE6               	movwf	postinc1,c
 24484  01594A  0EC1               	movlw	193
 24485  01594C  6EE6               	movwf	postinc1,c
 24486  01594E  0060  F593  FFE6   	movff	_C+100,postinc1
 24487  015954  0060  F597  FFE6   	movff	_C+101,postinc1
 24488  01595A  0060  F59B  FFE6   	movff	_C+102,postinc1
 24489  015960  0060  F59F  FFE6   	movff	_C+103,postinc1
 24490  015966  0060  F503  FFE6   	movff	_C+64,postinc1
 24491  01596C  0060  F507  FFE6   	movff	_C+65,postinc1
 24492  015972  0060  F50B  FFE6   	movff	_C+66,postinc1
 24493  015978  0060  F50F  FFE6   	movff	_C+67,postinc1
 24494  01597E  ECEF  F096         	call	___flmul	;wreg free
 24495  015982  0060  F007  FFE6   	movff	btemp,postinc1
 24496  015988  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24497  01598E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24498  015994  0060  F013  FFE6   	movff	btemp+3,postinc1
 24499  01599A  EC04  F09B         	call	___fladd	;wreg free
 24500  01599E  0060  F007  FFE6   	movff	btemp,postinc1
 24501  0159A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24502  0159AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24503  0159B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24504  0159B6  EC05  F0BC         	call	_lp_filter	;wreg free
 24505  0159BA  0060  F004  F174   	movff	btemp,_C+116	;volatile
 24506  0159C0  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 24507  0159C6  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 24508  0159CC  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 24509                           
 24510                           ;mbmc.c: 76:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 24511  0159D2  0E01               	movlw	1
 24512  0159D4  6EE6               	movwf	postinc1,c
 24513  0159D6  0E14               	movlw	20
 24514  0159D8  6EE6               	movwf	postinc1,c
 24515  0159DA  0060  F553  FFE6   	movff	_C+84,postinc1
 24516  0159E0  0060  F557  FFE6   	movff	_C+85,postinc1
 24517  0159E6  0060  F55B  FFE6   	movff	_C+86,postinc1
 24518  0159EC  0060  F55F  FFE6   	movff	_C+87,postinc1
 24519  0159F2  0060  F513  FFE6   	movff	_C+68,postinc1
 24520  0159F8  0060  F517  FFE6   	movff	_C+69,postinc1
 24521  0159FE  0060  F51B  FFE6   	movff	_C+70,postinc1
 24522  015A04  0060  F51F  FFE6   	movff	_C+71,postinc1
 24523  015A0A  ECEF  F096         	call	___flmul	;wreg free
 24524  015A0E  0060  F007  FFE6   	movff	btemp,postinc1
 24525  015A14  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24526  015A1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24527  015A20  0060  F013  FFE6   	movff	btemp+3,postinc1
 24528  015A26  EC05  F0BC         	call	_lp_filter	;wreg free
 24529  015A2A  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 24530  015A30  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 24531  015A36  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 24532  015A3C  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 24533                           
 24534                           ;mbmc.c: 80:   if (C.p_inverter < 0.0)
 24535  015A42  0101               	movlb	1	; () banked
 24536  015A44  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 24537  015A46  D008               	goto	l10450
 24538                           
 24539                           ; BSR set to: 1
 24540                           ;mbmc.c: 81:    C.p_inverter = 0.0001;
 24541  015A48  0E17               	movlw	23
 24542  015A4A  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 24543  015A4C  0EB7               	movlw	183
 24544  015A4E  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 24545  015A50  0ED1               	movlw	209
 24546  015A52  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 24547  015A54  0E38               	movlw	56
 24548  015A56  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 24549  015A58                     l10450:
 24550                           
 24551                           ;mbmc.c: 83:  start_bsoc();
 24552  015A58  ECD2  F0D6         	call	_start_bsoc	;wreg free
 24553                           
 24554                           ; BSR set to: 57
 24555                           ;mbmc.c: 84:  C.update = 1;
 24556  015A5C  0E01               	movlw	1
 24557  015A5E  0101               	movlb	1	; () banked
 24558  015A60  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 24559                           
 24560                           ; BSR set to: 1
 24561                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24562  015A62  0012               	return		;funcret
 24563  015A64                     __end_of_calc_model_data:
 24564                           	opt callstack 0
 24565                           
 24566 ;; *************** function _stop_bsoc *****************
 24567 ;; Defined at:
 24568 ;;		line 107 in file "bsoc.c"
 24569 ;; Parameters:    Size  Location     Type
 24570 ;;		None
 24571 ;; Auto vars:     Size  Location     Type
 24572 ;;		None
 24573 ;; Return value:  Size  Location     Type
 24574 ;;                  1  [STACK] void 
 24575 ;; Registers used:
 24576 ;;		None
 24577 ;; Tracked objects:
 24578 ;;		On entry : 0/0
 24579 ;;		On exit  : 3F/39
 24580 ;;		Unchanged: 0/0
 24581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24586 ;;Total ram usage:        0 bytes
 24587 ;; Hardware stack levels used:    1
 24588 ;; Hardware stack levels required when called:   15
 24589 ;; This function calls:
 24590 ;;		Nothing
 24591 ;; This function is called by:
 24592 ;;		_calc_model_data
 24593 ;; This function uses a reentrant model
 24594 ;;
 24595                           
 24596                           	psect	text100
 24597  01B060                     __ptext100:
 24598                           	opt callstack 0
 24599  01B060                     _stop_bsoc:
 24600                           	opt callstack 14
 24601                           
 24602                           ;bsoc.c: 110:  PIE6bits.TMR3IE = 0;
 24603                           
 24604                           ; BSR set to: 1
 24605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24606                           ;incstack = 0
 24607  01B060  0139               	movlb	57	; () banked
 24608  01B062  9D96               	bcf	150,6,b	;volatile
 24609                           
 24610                           ; BSR set to: 57
 24611                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24612  01B064  0012               	return		;funcret
 24613  01B066                     __end_of_stop_bsoc:
 24614                           	opt callstack 0
 24615                           
 24616 ;; *************** function _start_bsoc *****************
 24617 ;; Defined at:
 24618 ;;		line 98 in file "bsoc.c"
 24619 ;; Parameters:    Size  Location     Type
 24620 ;;		None
 24621 ;; Auto vars:     Size  Location     Type
 24622 ;;		None
 24623 ;; Return value:  Size  Location     Type
 24624 ;;                  1  [STACK] void 
 24625 ;; Registers used:
 24626 ;;		wreg, status,2, status,0, btemp+11
 24627 ;; Tracked objects:
 24628 ;;		On entry : 3C/2
 24629 ;;		On exit  : 3F/39
 24630 ;;		Unchanged: 0/0
 24631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24636 ;;Total ram usage:        0 bytes
 24637 ;; Hardware stack levels used:    1
 24638 ;; Hardware stack levels required when called:   15
 24639 ;; This function calls:
 24640 ;;		Nothing
 24641 ;; This function is called by:
 24642 ;;		_calc_model_data
 24643 ;; This function uses a reentrant model
 24644 ;;
 24645                           
 24646                           	psect	text101
 24647  01ADA4                     __ptext101:
 24648                           	opt callstack 0
 24649  01ADA4                     _start_bsoc:
 24650                           	opt callstack 14
 24651                           
 24652                           ;bsoc.c: 101:  PIE6bits.TMR3IE = 1;
 24653                           
 24654                           ; BSR set to: 57
 24655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24656                           ;incstack = 0
 24657  01ADA4  0139               	movlb	57	; () banked
 24658  01ADA6  8D96               	bsf	150,6,b	;volatile
 24659                           
 24660                           ; BSR set to: 57
 24661  01ADA8  A4BE               	btfss	190,2,c	;volatile
 24662  01ADAA  D002               	goto	u9150
 24663  01ADAC  0E01               	movlw	1
 24664  01ADAE  D001               	goto	u9156
 24665  01ADB0                     u9150:
 24666  01ADB0  0E00               	movlw	0
 24667  01ADB2                     u9156:
 24668  01ADB2  0AFF               	xorlw	255
 24669  01ADB4  6E0C               	movwf	(btemp+11)^0,c
 24670  01ADB6  460C               	rlncf	(btemp+11)^0,f,c
 24671  01ADB8  460C               	rlncf	(btemp+11)^0,f,c
 24672  01ADBA  50BE               	movf	190,w,c	;volatile
 24673  01ADBC  180C               	xorwf	(btemp+11)^0,w,c
 24674  01ADBE  0BFB               	andlw	-5
 24675  01ADC0  180C               	xorwf	(btemp+11)^0,w,c
 24676  01ADC2  6EBE               	movwf	190,c	;volatile
 24677                           
 24678                           ; BSR set to: 57
 24679                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 24680  01ADC4  0012               	return		;funcret
 24681  01ADC6                     __end_of_start_bsoc:
 24682                           	opt callstack 0
 24683                           
 24684 ;; *************** function _lp_filter *****************
 24685 ;; Defined at:
 24686 ;;		line 18 in file "mbmc.c"
 24687 ;; Parameters:    Size  Location     Type
 24688 ;;  new             4  [STACK] const float 
 24689 ;;  bn              1  [STACK] const unsigned char 
 24690 ;;  slow            1  [STACK] const char 
 24691 ;; Auto vars:     Size  Location     Type
 24692 ;;  lp_speed        4  [STACK] float 
 24693 ;; Return value:  Size  Location     Type
 24694 ;;                  4  [STACK] float 
 24695 ;; Registers used:
 24696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24697 ;; Tracked objects:
 24698 ;;		On entry : 0/2
 24699 ;;		On exit  : 0/0
 24700 ;;		Unchanged: 0/0
 24701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24706 ;;Total ram usage:        0 bytes
 24707 ;; Hardware stack levels used:    1
 24708 ;; Hardware stack levels required when called:   17
 24709 ;; This function calls:
 24710 ;;		___fladd
 24711 ;;		___flmul
 24712 ;;		___flsub
 24713 ;; This function is called by:
 24714 ;;		_main
 24715 ;;		_convert_adc_data
 24716 ;;		_calc_model_data
 24717 ;; This function uses a reentrant model
 24718 ;;
 24719                           
 24720                           	psect	text102
 24721  01780A                     __ptext102:
 24722                           	opt callstack 0
 24723  01780A                     _lp_filter:
 24724                           	opt callstack 0
 24725                           
 24726                           ; BSR set to: 57
 24727                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24728  01780A  52E6               	movf	postinc1,f,c
 24729  01780C  52E6               	movf	postinc1,f,c
 24730  01780E  52E6               	movf	postinc1,f,c
 24731  017810  52E6               	movf	postinc1,f,c
 24732                           
 24733                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 24734                           ;stkvar	_bn @ sp[(-4)+-5]
 24735                           
 24736                           ;incstack = 0
 24737  017812  0EF7               	movlw	-9
 24738  017814  006F FF8C  F001    	movff	plusw1,btemp
 24739  01781A  0E14               	movlw	20
 24740  01781C  6401               	cpfsgt	btemp^0,c
 24741  01781E  D011               	goto	l9916
 24742  017820                     u9060:
 24743                           
 24744                           ;mbmc.c: 24:   return new;
 24745                           ;stkvar	_new @ sp[(-4)+-4]
 24746  017820  0EF8               	movlw	-8
 24747  017822  006F FF8C  F001    	movff	plusw1,btemp
 24748  017828  0EF9               	movlw	-7
 24749  01782A  006F FF8C  F002    	movff	plusw1,btemp+1
 24750  017830  0EFA               	movlw	-6
 24751  017832  006F FF8C  F003    	movff	plusw1,btemp+2
 24752  017838  0EFB               	movlw	-5
 24753  01783A  006F FF8C  F004    	movff	plusw1,btemp+3
 24754  017840  D0BD               	goto	l1812
 24755  017842                     l9916:
 24756                           
 24757                           ;mbmc.c: 26:  if (slow == (-1)) {
 24758                           ;stkvar	_slow @ sp[(-4)+-6]
 24759  017842  0EF6               	movlw	-10
 24760  017844  28E3               	incf	plusw1,w,c
 24761  017846  A4D8               	btfss	status,2,c
 24762  017848  D012               	goto	l9924
 24763                           
 24764                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 24765                           ;stkvar	_bn @ sp[(-4)+-5]
 24766  01784A  0EF7               	movlw	-9
 24767  01784C  50E3               	movf	plusw1,w,c
 24768  01784E  0D04               	mullw	4
 24769  017850  0E00               	movlw	low lp_filter@smooth
 24770  017852  24F3               	addwf	243,w,c
 24771  017854  6ED9               	movwf	fsr2l,c
 24772  017856  0E03               	movlw	high lp_filter@smooth
 24773  017858  20F4               	addwfc	prodh,w,c
 24774  01785A  6EDA               	movwf	fsr2h,c
 24775  01785C  0E00               	movlw	0
 24776  01785E  6EDE               	movwf	postinc2,c
 24777  017860  0E00               	movlw	0
 24778  017862  6EDE               	movwf	postinc2,c
 24779  017864  0E00               	movlw	0
 24780  017866  6EDE               	movwf	postinc2,c
 24781  017868  0E00               	movlw	0
 24782  01786A  6EDD               	movwf	postdec2,c
 24783  01786C  D7D9               	goto	u9060
 24784  01786E                     l9924:
 24785                           
 24786                           ;mbmc.c: 31:  if (slow) {
 24787                           ;stkvar	_slow @ sp[(-4)+-6]
 24788  01786E  0EF6               	movlw	-10
 24789  017870  50E3               	movf	plusw1,w,c
 24790  017872  B4D8               	btfsc	status,2,c
 24791  017874  D006               	goto	l9928
 24792                           
 24793                           ;mbmc.c: 32:   lp_speed = 0.033;
 24794  017876  0E02               	movlw	2
 24795  017878  6E09               	movwf	(btemp+8)^0,c
 24796  01787A  0E2B               	movlw	43
 24797  01787C  6E0A               	movwf	(btemp+9)^0,c
 24798  01787E  0E07               	movlw	7
 24799  017880  D005               	goto	L26
 24800  017882                     l9928:
 24801                           
 24802                           ;mbmc.c: 34:   lp_speed = 0.066;
 24803  017882  0E02               	movlw	2
 24804  017884  6E09               	movwf	(btemp+8)^0,c
 24805  017886  0E2B               	movlw	43
 24806  017888  6E0A               	movwf	(btemp+9)^0,c
 24807  01788A  0E87               	movlw	135
 24808  01788C                     L26:
 24809  01788C  6E0B               	movwf	(btemp+10)^0,c
 24810  01788E  0E3D               	movlw	61
 24811  017890  6E0C               	movwf	(btemp+11)^0,c
 24812                           
 24813                           ;stkvar	_lp_speed @ sp[(-4)+0]
 24814  017892  0EFC               	movlw	-4
 24815  017894  0060  F027  FFE3   	movff	btemp+8,plusw1
 24816  01789A  0EFD               	movlw	-3
 24817  01789C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24818  0178A2  0EFE               	movlw	-2
 24819  0178A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24820  0178AA  0EFF               	movlw	-1
 24821  0178AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24822                           
 24823                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 24824                           ;stkvar	_bn @ sp[(-4)+-5]
 24825  0178B2  0EF7               	movlw	-9
 24826  0178B4  50E3               	movf	plusw1,w,c
 24827  0178B6  0D04               	mullw	4
 24828  0178B8  0E00               	movlw	low lp_filter@smooth
 24829  0178BA  24F3               	addwf	243,w,c
 24830  0178BC  6ED9               	movwf	fsr2l,c
 24831  0178BE  0E03               	movlw	high lp_filter@smooth
 24832  0178C0  20F4               	addwfc	prodh,w,c
 24833  0178C2  6EDA               	movwf	fsr2h,c
 24834  0178C4  006F FF7B FFE6     	movff	postinc2,postinc1
 24835  0178CA  006F FF7B FFE6     	movff	postinc2,postinc1
 24836  0178D0  006F FF7B FFE6     	movff	postinc2,postinc1
 24837  0178D6  006F FF7B FFE6     	movff	postinc2,postinc1
 24838                           
 24839                           ;stkvar	_lp_speed @ sp[(-8)+0]
 24840  0178DC  0EF8               	movlw	-8
 24841  0178DE  006F FF8F FFE6     	movff	plusw1,postinc1
 24842  0178E4  006F FF8F FFE6     	movff	plusw1,postinc1
 24843  0178EA  006F FF8F FFE6     	movff	plusw1,postinc1
 24844  0178F0  006F FF8F FFE6     	movff	plusw1,postinc1
 24845                           
 24846                           ;stkvar	_bn @ sp[(-12)+-5]
 24847  0178F6  0EEF               	movlw	-17
 24848  0178F8  50E3               	movf	plusw1,w,c
 24849  0178FA  0D04               	mullw	4
 24850  0178FC  0E00               	movlw	low lp_filter@smooth
 24851  0178FE  24F3               	addwf	243,w,c
 24852  017900  6ED9               	movwf	fsr2l,c
 24853  017902  0E03               	movlw	high lp_filter@smooth
 24854  017904  20F4               	addwfc	prodh,w,c
 24855  017906  6EDA               	movwf	fsr2h,c
 24856  017908  006F FF7B FFE6     	movff	postinc2,postinc1
 24857  01790E  006F FF7B FFE6     	movff	postinc2,postinc1
 24858  017914  006F FF7B FFE6     	movff	postinc2,postinc1
 24859  01791A  006F FF7B FFE6     	movff	postinc2,postinc1
 24860                           
 24861                           ;stkvar	_new @ sp[(-16)+-4]
 24862  017920  0EEC               	movlw	-20
 24863  017922  006F FF8F FFE6     	movff	plusw1,postinc1
 24864  017928  006F FF8F FFE6     	movff	plusw1,postinc1
 24865  01792E  006F FF8F FFE6     	movff	plusw1,postinc1
 24866  017934  006F FF8F FFE6     	movff	plusw1,postinc1
 24867  01793A  ECEB  F0D1         	call	___flsub	;wreg free
 24868  01793E  0060  F007  FFE6   	movff	btemp,postinc1
 24869  017944  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24870  01794A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24871  017950  0060  F013  FFE6   	movff	btemp+3,postinc1
 24872  017956  ECEF  F096         	call	___flmul	;wreg free
 24873  01795A  0060  F007  FFE6   	movff	btemp,postinc1
 24874  017960  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24875  017966  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24876  01796C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24877  017972  EC04  F09B         	call	___fladd	;wreg free
 24878                           
 24879                           ;stkvar	_bn @ sp[(-4)+-5]
 24880  017976  0EF7               	movlw	-9
 24881  017978  50E3               	movf	plusw1,w,c
 24882  01797A  0D04               	mullw	4
 24883  01797C  0E00               	movlw	low lp_filter@smooth
 24884  01797E  24F3               	addwf	243,w,c
 24885  017980  6ED9               	movwf	fsr2l,c
 24886  017982  0E03               	movlw	high lp_filter@smooth
 24887  017984  20F4               	addwfc	prodh,w,c
 24888  017986  6EDA               	movwf	fsr2h,c
 24889  017988  0060  F007  FFDE   	movff	btemp,postinc2
 24890  01798E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 24891  017994  0060  F00F  FFDE   	movff	btemp+2,postinc2
 24892  01799A  0060  F013  FFDD   	movff	btemp+3,postdec2
 24893  0179A0  52DD               	movf	postdec2,f,c
 24894  0179A2  52DD               	movf	postdec2,f,c
 24895  0179A4  006F FF78  F001    	movff	postinc2,btemp
 24896  0179AA  006F FF78  F002    	movff	postinc2,btemp+1
 24897  0179B0  006F FF78  F003    	movff	postinc2,btemp+2
 24898  0179B6  006F FF78  F004    	movff	postinc2,btemp+3
 24899  0179BC                     l1812:
 24900                           
 24901                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 24902  0179BC  0EF6               	movlw	246
 24903  0179BE  26E1               	addwf	fsr1l,f,c
 24904  0179C0  0EFF               	movlw	255
 24905  0179C2  22E2               	addwfc	fsr1h,f,c
 24906  0179C4  0012               	return		;funcret
 24907  0179C6                     __end_of_lp_filter:
 24908                           	opt callstack 0
 24909                           
 24910 ;; *************** function ___flsub *****************
 24911 ;; Defined at:
 24912 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 24913 ;; Parameters:    Size  Location     Type
 24914 ;;  b               4  [STACK] float 
 24915 ;;  a               4  [STACK] float 
 24916 ;; Auto vars:     Size  Location     Type
 24917 ;;		None
 24918 ;; Return value:  Size  Location     Type
 24919 ;;                  4  [STACK] float 
 24920 ;; Registers used:
 24921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24922 ;; Tracked objects:
 24923 ;;		On entry : 0/0
 24924 ;;		On exit  : 0/0
 24925 ;;		Unchanged: 0/0
 24926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24931 ;;Total ram usage:        0 bytes
 24932 ;; Hardware stack levels used:    1
 24933 ;; Hardware stack levels required when called:   16
 24934 ;; This function calls:
 24935 ;;		___fladd
 24936 ;; This function is called by:
 24937 ;;		_conv_raw_result
 24938 ;;		_lp_filter
 24939 ;;		_calc_model_data
 24940 ;;		_calc_ror_data
 24941 ;;		_esr_check
 24942 ;;		_efgtoa
 24943 ;; This function uses a reentrant model
 24944 ;;
 24945                           
 24946                           	psect	text103
 24947  01A3D6                     __ptext103:
 24948                           	opt callstack 0
 24949  01A3D6                     ___flsub:
 24950                           	opt callstack 0
 24951                           
 24952                           ;stkvar	_a @ sp[(0)+-8]
 24953                           
 24954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24955                           ;incstack = 0
 24956 ;; hardware stack exceeded
 24957  01A3D6  0EFB               	movlw	-5
 24958  01A3D8  7EE3               	btg	plusw1,7,c
 24959                           
 24960                           ;stkvar	_a @ sp[(0)+-8]
 24961  01A3DA  0EF8               	movlw	-8
 24962  01A3DC  006F FF8F FFE6     	movff	plusw1,postinc1
 24963  01A3E2  006F FF8F FFE6     	movff	plusw1,postinc1
 24964  01A3E8  006F FF8F FFE6     	movff	plusw1,postinc1
 24965  01A3EE  006F FF8F FFE6     	movff	plusw1,postinc1
 24966                           
 24967                           ;stkvar	_b @ sp[(-4)+-4]
 24968  01A3F4  0EF8               	movlw	-8
 24969  01A3F6  006F FF8F FFE6     	movff	plusw1,postinc1
 24970  01A3FC  006F FF8F FFE6     	movff	plusw1,postinc1
 24971  01A402  006F FF8F FFE6     	movff	plusw1,postinc1
 24972  01A408  006F FF8F FFE6     	movff	plusw1,postinc1
 24973  01A40E  EC04  F09B         	call	___fladd	;wreg free
 24974                           
 24975                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 24976  01A412  0EF8               	movlw	248
 24977  01A414  26E1               	addwf	fsr1l,f,c
 24978  01A416  0EFF               	movlw	255
 24979  01A418  22E2               	addwfc	fsr1h,f,c
 24980  01A41A  0012               	return		;funcret
 24981  01A41C                     __end_of___flsub:
 24982                           	opt callstack 0
 24983                           
 24984 ;; *************** function ___fladd *****************
 24985 ;; Defined at:
 24986 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 24987 ;; Parameters:    Size  Location     Type
 24988 ;;  b               4  [STACK] float 
 24989 ;;  a               4  [STACK] float 
 24990 ;; Auto vars:     Size  Location     Type
 24991 ;;  grs             1  [STACK] unsigned char 
 24992 ;;  bexp            1  [STACK] unsigned char 
 24993 ;;  aexp            1  [STACK] unsigned char 
 24994 ;;  signs           1  [STACK] unsigned char 
 24995 ;; Return value:  Size  Location     Type
 24996 ;;                  4  [STACK] unsigned char 
 24997 ;; Registers used:
 24998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24999 ;; Tracked objects:
 25000 ;;		On entry : 0/0
 25001 ;;		On exit  : 0/0
 25002 ;;		Unchanged: 0/0
 25003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25008 ;;Total ram usage:        0 bytes
 25009 ;; Hardware stack levels used:    1
 25010 ;; Hardware stack levels required when called:   15
 25011 ;; This function calls:
 25012 ;;		Nothing
 25013 ;; This function is called by:
 25014 ;;		_lp_filter
 25015 ;;		_calc_model_data
 25016 ;;		_calc_bsoc
 25017 ;;		_efgtoa
 25018 ;;		___flsub
 25019 ;; This function uses a reentrant model
 25020 ;;
 25021                           
 25022                           	psect	text104
 25023  013608                     __ptext104:
 25024                           	opt callstack 0
 25025  013608                     ___fladd:
 25026                           	opt callstack 0
 25027                           
 25028                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25029  013608  52E6               	movf	postinc1,f,c
 25030  01360A  52E6               	movf	postinc1,f,c
 25031  01360C  52E6               	movf	postinc1,f,c
 25032  01360E  52E6               	movf	postinc1,f,c
 25033                           
 25034                           ;stkvar	_b @ sp[(-4)+-4]
 25035                           
 25036                           ;incstack = 0
 25037 ;; hardware stack exceeded
 25038  013610  0EFB               	movlw	251
 25039  013612  24E1               	addwf	fsr1l,w,c
 25040  013614  6ED9               	movwf	fsr2l,c
 25041  013616  0EFF               	movlw	255
 25042  013618  20E2               	addwfc	fsr1h,w,c
 25043  01361A  6EDA               	movwf	fsr2h,c
 25044  01361C  50DF               	movf	indf2,w,c
 25045  01361E  6E0C               	movwf	(btemp+11)^0,c
 25046  013620  0E80               	movlw	128
 25047  013622  160C               	andwf	(btemp+11)^0,f,c
 25048                           
 25049                           ;stkvar	_signs @ sp[(-4)+3]
 25050  013624  0EFF               	movlw	-1
 25051  013626  0060  F033  FFE3   	movff	btemp+11,plusw1
 25052                           
 25053                           ;stkvar	_b @ sp[(-4)+-4]
 25054  01362C  0EFB               	movlw	251
 25055  01362E  24E1               	addwf	fsr1l,w,c
 25056  013630  6ED9               	movwf	fsr2l,c
 25057  013632  0EFF               	movlw	255
 25058  013634  20E2               	addwfc	fsr1h,w,c
 25059  013636  6EDA               	movwf	fsr2h,c
 25060  013638  50DF               	movf	indf2,w,c
 25061  01363A  6E0C               	movwf	(btemp+11)^0,c
 25062  01363C  90D8               	bcf	status,0,c
 25063  01363E  340C               	rlcf	(btemp+11)^0,w,c
 25064  013640  6E0B               	movwf	(btemp+10)^0,c
 25065                           
 25066                           ;stkvar	_bexp @ sp[(-4)+1]
 25067  013642  0EFD               	movlw	-3
 25068  013644  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25069                           
 25070                           ;stkvar	_b @ sp[(-4)+-4]
 25071  01364A  0EFA               	movlw	250
 25072  01364C  24E1               	addwf	fsr1l,w,c
 25073  01364E  6ED9               	movwf	fsr2l,c
 25074  013650  0EFF               	movlw	255
 25075  013652  20E2               	addwfc	fsr1h,w,c
 25076  013654  6EDA               	movwf	fsr2h,c
 25077  013656  AEDF               	btfss	indf2,7,c
 25078  013658  D002               	goto	l7310
 25079                           
 25080                           ;stkvar	_bexp @ sp[(-4)+1]
 25081  01365A  0EFD               	movlw	-3
 25082  01365C  80E3               	bsf	plusw1,0,c
 25083  01365E                     l7310:
 25084                           
 25085                           ;stkvar	_bexp @ sp[(-4)+1]
 25086  01365E  0EFD               	movlw	-3
 25087  013660  50E3               	movf	plusw1,w,c
 25088  013662  B4D8               	btfsc	status,2,c
 25089  013664  D027               	goto	l7320
 25090                           
 25091                           ;stkvar	_bexp @ sp[(-4)+1]
 25092  013666  0EFD               	movlw	-3
 25093  013668  28E3               	incf	plusw1,w,c
 25094  01366A  A4D8               	btfss	status,2,c
 25095  01366C  D018               	goto	l7316
 25096  01366E  0E00               	movlw	0
 25097  013670  6E09               	movwf	(btemp+8)^0,c
 25098  013672  0E00               	movlw	0
 25099  013674  6E0A               	movwf	(btemp+9)^0,c
 25100  013676  0E00               	movlw	0
 25101  013678  6E0B               	movwf	(btemp+10)^0,c
 25102  01367A  0E00               	movlw	0
 25103  01367C  6E0C               	movwf	(btemp+11)^0,c
 25104                           
 25105                           ;stkvar	_b @ sp[(-4)+-4]
 25106  01367E  0EF8               	movlw	-8
 25107  013680  0060  F027  FFE3   	movff	btemp+8,plusw1
 25108  013686  0EF9               	movlw	-7
 25109  013688  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25110  01368E  0EFA               	movlw	-6
 25111  013690  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25112  013696  0EFB               	movlw	-5
 25113  013698  0060  F033  FFE3   	movff	btemp+11,plusw1
 25114  01369E                     l7316:
 25115                           
 25116                           ;stkvar	_b @ sp[(-4)+-4]
 25117  01369E  0EFA               	movlw	-6
 25118  0136A0  8EE3               	bsf	plusw1,7,c
 25119                           
 25120                           ;stkvar	_b @ sp[(-4)+-4]
 25121  0136A2  0EFB               	movlw	251
 25122  0136A4  24E1               	addwf	fsr1l,w,c
 25123  0136A6  6ED9               	movwf	fsr2l,c
 25124  0136A8  0EFF               	movlw	255
 25125  0136AA  20E2               	addwfc	fsr1h,w,c
 25126  0136AC  6EDA               	movwf	fsr2h,c
 25127  0136AE  0E00               	movlw	0
 25128  0136B0  6EDF               	movwf	indf2,c
 25129  0136B2  D018               	goto	l7322
 25130  0136B4                     l7320:
 25131  0136B4  0E00               	movlw	0
 25132  0136B6  6E09               	movwf	(btemp+8)^0,c
 25133  0136B8  0E00               	movlw	0
 25134  0136BA  6E0A               	movwf	(btemp+9)^0,c
 25135  0136BC  0E00               	movlw	0
 25136  0136BE  6E0B               	movwf	(btemp+10)^0,c
 25137  0136C0  0E00               	movlw	0
 25138  0136C2  6E0C               	movwf	(btemp+11)^0,c
 25139                           
 25140                           ;stkvar	_b @ sp[(-4)+-4]
 25141  0136C4  0EF8               	movlw	-8
 25142  0136C6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25143  0136CC  0EF9               	movlw	-7
 25144  0136CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25145  0136D4  0EFA               	movlw	-6
 25146  0136D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25147  0136DC  0EFB               	movlw	-5
 25148  0136DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25149  0136E4                     l7322:
 25150                           
 25151                           ;stkvar	_a @ sp[(-4)+-8]
 25152  0136E4  0EF7               	movlw	247
 25153  0136E6  24E1               	addwf	fsr1l,w,c
 25154  0136E8  6ED9               	movwf	fsr2l,c
 25155  0136EA  0EFF               	movlw	255
 25156  0136EC  20E2               	addwfc	fsr1h,w,c
 25157  0136EE  6EDA               	movwf	fsr2h,c
 25158  0136F0  50DF               	movf	indf2,w,c
 25159  0136F2  6E0C               	movwf	(btemp+11)^0,c
 25160  0136F4  0E80               	movlw	128
 25161  0136F6  160C               	andwf	(btemp+11)^0,f,c
 25162                           
 25163                           ;stkvar	_aexp @ sp[(-4)+2]
 25164  0136F8  0EFE               	movlw	-2
 25165  0136FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25166                           
 25167                           ;stkvar	_signs @ sp[(-4)+3]
 25168                           ;stkvar	_aexp @ sp[(-4)+2]
 25169  013700  50E1               	movf	fsr1l,w,c
 25170  013702  0FFE               	addlw	-2
 25171  013704  6ED9               	movwf	fsr2l,c
 25172  013706  50E2               	movf	fsr1h,w,c
 25173  013708  6EDA               	movwf	fsr2h,c
 25174  01370A  0EFF               	movlw	255
 25175  01370C  22DA               	addwfc	fsr2h,f,c
 25176  01370E  0EFF               	movlw	-1
 25177  013710  50E3               	movf	plusw1,w,c
 25178  013712  18DE               	xorwf	postinc2,w,c
 25179  013714  B4D8               	btfsc	status,2,c
 25180  013716  D002               	goto	l7328
 25181                           
 25182                           ;stkvar	_signs @ sp[(-4)+3]
 25183  013718  0EFF               	movlw	-1
 25184  01371A  8CE3               	bsf	plusw1,6,c
 25185  01371C                     l7328:
 25186                           
 25187                           ;stkvar	_a @ sp[(-4)+-8]
 25188  01371C  0EF7               	movlw	247
 25189  01371E  24E1               	addwf	fsr1l,w,c
 25190  013720  6ED9               	movwf	fsr2l,c
 25191  013722  0EFF               	movlw	255
 25192  013724  20E2               	addwfc	fsr1h,w,c
 25193  013726  6EDA               	movwf	fsr2h,c
 25194  013728  50DF               	movf	indf2,w,c
 25195  01372A  6E0C               	movwf	(btemp+11)^0,c
 25196  01372C  90D8               	bcf	status,0,c
 25197  01372E  340C               	rlcf	(btemp+11)^0,w,c
 25198  013730  6E0B               	movwf	(btemp+10)^0,c
 25199                           
 25200                           ;stkvar	_aexp @ sp[(-4)+2]
 25201  013732  0EFE               	movlw	-2
 25202  013734  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25203                           
 25204                           ;stkvar	_a @ sp[(-4)+-8]
 25205  01373A  0EF6               	movlw	246
 25206  01373C  24E1               	addwf	fsr1l,w,c
 25207  01373E  6ED9               	movwf	fsr2l,c
 25208  013740  0EFF               	movlw	255
 25209  013742  20E2               	addwfc	fsr1h,w,c
 25210  013744  6EDA               	movwf	fsr2h,c
 25211  013746  AEDF               	btfss	indf2,7,c
 25212  013748  D002               	goto	l7334
 25213                           
 25214                           ;stkvar	_aexp @ sp[(-4)+2]
 25215  01374A  0EFE               	movlw	-2
 25216  01374C  80E3               	bsf	plusw1,0,c
 25217  01374E                     l7334:
 25218                           
 25219                           ;stkvar	_aexp @ sp[(-4)+2]
 25220  01374E  0EFE               	movlw	-2
 25221  013750  50E3               	movf	plusw1,w,c
 25222  013752  B4D8               	btfsc	status,2,c
 25223  013754  D027               	goto	l7344
 25224                           
 25225                           ;stkvar	_aexp @ sp[(-4)+2]
 25226  013756  0EFE               	movlw	-2
 25227  013758  28E3               	incf	plusw1,w,c
 25228  01375A  A4D8               	btfss	status,2,c
 25229  01375C  D018               	goto	l7340
 25230  01375E  0E00               	movlw	0
 25231  013760  6E09               	movwf	(btemp+8)^0,c
 25232  013762  0E00               	movlw	0
 25233  013764  6E0A               	movwf	(btemp+9)^0,c
 25234  013766  0E00               	movlw	0
 25235  013768  6E0B               	movwf	(btemp+10)^0,c
 25236  01376A  0E00               	movlw	0
 25237  01376C  6E0C               	movwf	(btemp+11)^0,c
 25238                           
 25239                           ;stkvar	_a @ sp[(-4)+-8]
 25240  01376E  0EF4               	movlw	-12
 25241  013770  0060  F027  FFE3   	movff	btemp+8,plusw1
 25242  013776  0EF5               	movlw	-11
 25243  013778  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25244  01377E  0EF6               	movlw	-10
 25245  013780  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25246  013786  0EF7               	movlw	-9
 25247  013788  0060  F033  FFE3   	movff	btemp+11,plusw1
 25248  01378E                     l7340:
 25249                           
 25250                           ;stkvar	_a @ sp[(-4)+-8]
 25251  01378E  0EF6               	movlw	-10
 25252  013790  8EE3               	bsf	plusw1,7,c
 25253                           
 25254                           ;stkvar	_a @ sp[(-4)+-8]
 25255  013792  0EF7               	movlw	247
 25256  013794  24E1               	addwf	fsr1l,w,c
 25257  013796  6ED9               	movwf	fsr2l,c
 25258  013798  0EFF               	movlw	255
 25259  01379A  20E2               	addwfc	fsr1h,w,c
 25260  01379C  6EDA               	movwf	fsr2h,c
 25261  01379E  0E00               	movlw	0
 25262  0137A0  6EDF               	movwf	indf2,c
 25263  0137A2  D018               	goto	l7346
 25264  0137A4                     l7344:
 25265  0137A4  0E00               	movlw	0
 25266  0137A6  6E09               	movwf	(btemp+8)^0,c
 25267  0137A8  0E00               	movlw	0
 25268  0137AA  6E0A               	movwf	(btemp+9)^0,c
 25269  0137AC  0E00               	movlw	0
 25270  0137AE  6E0B               	movwf	(btemp+10)^0,c
 25271  0137B0  0E00               	movlw	0
 25272  0137B2  6E0C               	movwf	(btemp+11)^0,c
 25273                           
 25274                           ;stkvar	_a @ sp[(-4)+-8]
 25275  0137B4  0EF4               	movlw	-12
 25276  0137B6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25277  0137BC  0EF5               	movlw	-11
 25278  0137BE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25279  0137C4  0EF6               	movlw	-10
 25280  0137C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25281  0137CC  0EF7               	movlw	-9
 25282  0137CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25283  0137D4                     l7346:
 25284                           
 25285                           ;stkvar	_bexp @ sp[(-4)+1]
 25286                           ;stkvar	_aexp @ sp[(-4)+2]
 25287  0137D4  50E1               	movf	fsr1l,w,c
 25288  0137D6  0FFE               	addlw	-2
 25289  0137D8  6ED9               	movwf	fsr2l,c
 25290  0137DA  50E2               	movf	fsr1h,w,c
 25291  0137DC  6EDA               	movwf	fsr2h,c
 25292  0137DE  0EFF               	movlw	255
 25293  0137E0  22DA               	addwfc	fsr2h,f,c
 25294  0137E2  0EFD               	movlw	-3
 25295  0137E4  50E3               	movf	plusw1,w,c
 25296  0137E6  5CDE               	subwf	postinc2,w,c
 25297  0137E8  B0D8               	btfsc	status,0,c
 25298  0137EA  D0A4               	goto	l7382
 25299                           
 25300                           ;stkvar	_signs @ sp[(-4)+3]
 25301  0137EC  0EFF               	movlw	-1
 25302  0137EE  ACE3               	btfss	plusw1,6,c
 25303  0137F0  D002               	goto	l7352
 25304                           
 25305                           ;stkvar	_signs @ sp[(-4)+3]
 25306  0137F2  0EFF               	movlw	-1
 25307  0137F4  7EE3               	btg	plusw1,7,c
 25308  0137F6                     l7352:
 25309                           
 25310                           ;stkvar	_bexp @ sp[(-4)+1]
 25311                           ;stkvar	_grs @ sp[(-4)+0]
 25312  0137F6  0EFD               	movlw	-3
 25313  0137F8  006F FF8C  F001    	movff	plusw1,btemp
 25314  0137FE  0EFC               	movlw	-4
 25315  013800  0060  F007  FFE3   	movff	btemp,plusw1
 25316                           
 25317                           ;stkvar	_aexp @ sp[(-4)+2]
 25318                           ;stkvar	_bexp @ sp[(-4)+1]
 25319  013806  0EFE               	movlw	-2
 25320  013808  006F FF8C  F001    	movff	plusw1,btemp
 25321  01380E  0EFD               	movlw	-3
 25322  013810  0060  F007  FFE3   	movff	btemp,plusw1
 25323                           
 25324                           ;stkvar	_grs @ sp[(-4)+0]
 25325                           ;stkvar	_aexp @ sp[(-4)+2]
 25326  013816  0EFC               	movlw	-4
 25327  013818  006F FF8C  F001    	movff	plusw1,btemp
 25328  01381E  0EFE               	movlw	-2
 25329  013820  0060  F007  FFE3   	movff	btemp,plusw1
 25330                           
 25331                           ;stkvar	_b @ sp[(-4)+-4]
 25332                           ;stkvar	_grs @ sp[(-4)+0]
 25333  013826  0EF8               	movlw	-8
 25334  013828  006F FF8C  F001    	movff	plusw1,btemp
 25335  01382E  0EFC               	movlw	-4
 25336  013830  0060  F007  FFE3   	movff	btemp,plusw1
 25337                           
 25338                           ;stkvar	_a @ sp[(-4)+-8]
 25339                           ;stkvar	_b @ sp[(-4)+-4]
 25340  013836  0EF4               	movlw	-12
 25341  013838  006F FF8C  F001    	movff	plusw1,btemp
 25342  01383E  0EF8               	movlw	-8
 25343  013840  0060  F007  FFE3   	movff	btemp,plusw1
 25344                           
 25345                           ;stkvar	_grs @ sp[(-4)+0]
 25346                           ;stkvar	_a @ sp[(-4)+-8]
 25347  013846  0EFC               	movlw	-4
 25348  013848  006F FF8C  F001    	movff	plusw1,btemp
 25349  01384E  0EF4               	movlw	-12
 25350  013850  0060  F007  FFE3   	movff	btemp,plusw1
 25351                           
 25352                           ;stkvar	_b @ sp[(-4)+-4]
 25353  013856  0EF9               	movlw	249
 25354  013858  24E1               	addwf	fsr1l,w,c
 25355  01385A  6ED9               	movwf	fsr2l,c
 25356  01385C  0EFF               	movlw	255
 25357  01385E  20E2               	addwfc	fsr1h,w,c
 25358  013860  6EDA               	movwf	fsr2h,c
 25359  013862  50DF               	movf	indf2,w,c
 25360  013864  6E0C               	movwf	(btemp+11)^0,c
 25361                           
 25362                           ;stkvar	_grs @ sp[(-4)+0]
 25363  013866  0EFC               	movlw	-4
 25364  013868  0060  F033  FFE3   	movff	btemp+11,plusw1
 25365                           
 25366                           ;stkvar	_a @ sp[(-4)+-8]
 25367  01386E  0EF5               	movlw	245
 25368  013870  24E1               	addwf	fsr1l,w,c
 25369  013872  6ED9               	movwf	fsr2l,c
 25370  013874  0EFF               	movlw	255
 25371  013876  20E2               	addwfc	fsr1h,w,c
 25372  013878  6EDA               	movwf	fsr2h,c
 25373                           
 25374                           ;stkvar	_b @ sp[(-4)+-4]
 25375  01387A  0EF9               	movlw	249
 25376  01387C  24E1               	addwf	fsr1l,w,c
 25377  01387E  6EE9               	movwf	fsr0l,c
 25378  013880  0EFF               	movlw	255
 25379  013882  20E2               	addwfc	fsr1h,w,c
 25380  013884  6EEA               	movwf	fsr0h,c
 25381  013886  006F FF7F FFEF     	movff	indf2,indf0
 25382                           
 25383                           ;stkvar	_grs @ sp[(-4)+0]
 25384                           ;stkvar	_a @ sp[(-4)+-8]
 25385  01388C  0EF5               	movlw	245
 25386  01388E  24E1               	addwf	fsr1l,w,c
 25387  013890  6ED9               	movwf	fsr2l,c
 25388  013892  0EFF               	movlw	255
 25389  013894  20E2               	addwfc	fsr1h,w,c
 25390  013896  6EDA               	movwf	fsr2h,c
 25391  013898  0EFC               	movlw	-4
 25392  01389A  006F FF8F FFDF     	movff	plusw1,indf2
 25393                           
 25394                           ;stkvar	_b @ sp[(-4)+-4]
 25395  0138A0  0EFA               	movlw	250
 25396  0138A2  24E1               	addwf	fsr1l,w,c
 25397  0138A4  6ED9               	movwf	fsr2l,c
 25398  0138A6  0EFF               	movlw	255
 25399  0138A8  20E2               	addwfc	fsr1h,w,c
 25400  0138AA  6EDA               	movwf	fsr2h,c
 25401  0138AC  50DF               	movf	indf2,w,c
 25402  0138AE  6E0C               	movwf	(btemp+11)^0,c
 25403                           
 25404                           ;stkvar	_grs @ sp[(-4)+0]
 25405  0138B0  0EFC               	movlw	-4
 25406  0138B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 25407                           
 25408                           ;stkvar	_a @ sp[(-4)+-8]
 25409  0138B8  0EF6               	movlw	246
 25410  0138BA  24E1               	addwf	fsr1l,w,c
 25411  0138BC  6ED9               	movwf	fsr2l,c
 25412  0138BE  0EFF               	movlw	255
 25413  0138C0  20E2               	addwfc	fsr1h,w,c
 25414  0138C2  6EDA               	movwf	fsr2h,c
 25415                           
 25416                           ;stkvar	_b @ sp[(-4)+-4]
 25417  0138C4  0EFA               	movlw	250
 25418  0138C6  24E1               	addwf	fsr1l,w,c
 25419  0138C8  6EE9               	movwf	fsr0l,c
 25420  0138CA  0EFF               	movlw	255
 25421  0138CC  20E2               	addwfc	fsr1h,w,c
 25422  0138CE  6EEA               	movwf	fsr0h,c
 25423  0138D0  006F FF7F FFEF     	movff	indf2,indf0
 25424                           
 25425                           ;stkvar	_grs @ sp[(-4)+0]
 25426                           ;stkvar	_a @ sp[(-4)+-8]
 25427  0138D6  0EF6               	movlw	246
 25428  0138D8  24E1               	addwf	fsr1l,w,c
 25429  0138DA  6ED9               	movwf	fsr2l,c
 25430  0138DC  0EFF               	movlw	255
 25431  0138DE  20E2               	addwfc	fsr1h,w,c
 25432  0138E0  6EDA               	movwf	fsr2h,c
 25433  0138E2  0EFC               	movlw	-4
 25434  0138E4  006F FF8F FFDF     	movff	plusw1,indf2
 25435                           
 25436                           ;stkvar	_b @ sp[(-4)+-4]
 25437  0138EA  0EFB               	movlw	251
 25438  0138EC  24E1               	addwf	fsr1l,w,c
 25439  0138EE  6ED9               	movwf	fsr2l,c
 25440  0138F0  0EFF               	movlw	255
 25441  0138F2  20E2               	addwfc	fsr1h,w,c
 25442  0138F4  6EDA               	movwf	fsr2h,c
 25443  0138F6  50DF               	movf	indf2,w,c
 25444  0138F8  6E0C               	movwf	(btemp+11)^0,c
 25445                           
 25446                           ;stkvar	_grs @ sp[(-4)+0]
 25447  0138FA  0EFC               	movlw	-4
 25448  0138FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25449                           
 25450                           ;stkvar	_a @ sp[(-4)+-8]
 25451  013902  0EF7               	movlw	247
 25452  013904  24E1               	addwf	fsr1l,w,c
 25453  013906  6ED9               	movwf	fsr2l,c
 25454  013908  0EFF               	movlw	255
 25455  01390A  20E2               	addwfc	fsr1h,w,c
 25456  01390C  6EDA               	movwf	fsr2h,c
 25457                           
 25458                           ;stkvar	_b @ sp[(-4)+-4]
 25459  01390E  0EFB               	movlw	251
 25460  013910  24E1               	addwf	fsr1l,w,c
 25461  013912  6EE9               	movwf	fsr0l,c
 25462  013914  0EFF               	movlw	255
 25463  013916  20E2               	addwfc	fsr1h,w,c
 25464  013918  6EEA               	movwf	fsr0h,c
 25465  01391A  006F FF7F FFEF     	movff	indf2,indf0
 25466                           
 25467                           ;stkvar	_grs @ sp[(-4)+0]
 25468                           ;stkvar	_a @ sp[(-4)+-8]
 25469  013920  0EF7               	movlw	247
 25470  013922  24E1               	addwf	fsr1l,w,c
 25471  013924  6ED9               	movwf	fsr2l,c
 25472  013926  0EFF               	movlw	255
 25473  013928  20E2               	addwfc	fsr1h,w,c
 25474  01392A  6EDA               	movwf	fsr2h,c
 25475  01392C  0EFC               	movlw	-4
 25476  01392E  006F FF8F FFDF     	movff	plusw1,indf2
 25477  013934                     l7382:
 25478                           
 25479                           ;stkvar	_grs @ sp[(-4)+0]
 25480  013934  0EFC               	movlw	-4
 25481  013936  6AE3               	clrf	plusw1,c
 25482                           
 25483                           ;stkvar	_aexp @ sp[(-4)+2]
 25484  013938  0EFE               	movlw	-2
 25485  01393A  50E3               	movf	plusw1,w,c
 25486  01393C  6E0B               	movwf	(btemp+10)^0,c
 25487  01393E  6A0C               	clrf	(btemp+11)^0,c
 25488                           
 25489                           ;stkvar	_bexp @ sp[(-4)+1]
 25490  013940  0EFD               	movlw	-3
 25491  013942  50E3               	movf	plusw1,w,c
 25492  013944  5E0B               	subwf	(btemp+10)^0,f,c
 25493  013946  0E00               	movlw	0
 25494  013948  5A0C               	subwfb	(btemp+11)^0,f,c
 25495  01394A  BE0C               	btfsc	(btemp+11)^0,7,c
 25496  01394C  D062               	goto	l7406
 25497  01394E  500C               	movf	(btemp+11)^0,w,c
 25498  013950  E104               	bnz	u5200
 25499  013952  0E1A               	movlw	26
 25500  013954  5C0B               	subwf	(btemp+10)^0,w,c
 25501  013956  A0D8               	btfss	status,0,c
 25502  013958  D05C               	goto	l7406
 25503  01395A                     u5200:
 25504                           
 25505                           ;stkvar	_b @ sp[(-4)+-4]
 25506  01395A  0EF8               	movlw	-8
 25507  01395C  50E3               	movf	plusw1,w,c
 25508  01395E  E10A               	bnz	u5211
 25509  013960  0EF9               	movlw	-7
 25510  013962  50E3               	movf	plusw1,w,c
 25511  013964  E107               	bnz	u5211
 25512  013966  0EFA               	movlw	-6
 25513  013968  50E3               	movf	plusw1,w,c
 25514  01396A  E104               	bnz	u5211
 25515  01396C  0EFB               	movlw	-5
 25516  01396E  50E3               	movf	plusw1,w,c
 25517  013970  B4D8               	btfsc	status,2,c
 25518  013972  D003               	goto	u5210
 25519  013974                     u5211:
 25520  013974  6A0C               	clrf	(btemp+11)^0,c
 25521  013976  2A0C               	incf	(btemp+11)^0,f,c
 25522  013978  D001               	goto	u5228
 25523  01397A                     u5210:
 25524  01397A  6A0C               	clrf	(btemp+11)^0,c
 25525  01397C                     u5228:
 25526                           
 25527                           ;stkvar	_grs @ sp[(-4)+0]
 25528  01397C  0EFC               	movlw	-4
 25529  01397E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25530                           
 25531                           ;stkvar	_b @ sp[(-4)+-4]
 25532  013984  0EF8               	movlw	-8
 25533  013986  6AE3               	clrf	plusw1,c
 25534  013988  0EF9               	movlw	-7
 25535  01398A  6AE3               	clrf	plusw1,c
 25536  01398C  0EFA               	movlw	-6
 25537  01398E  6AE3               	clrf	plusw1,c
 25538  013990  0EFB               	movlw	-5
 25539  013992  6AE3               	clrf	plusw1,c
 25540                           
 25541                           ;stkvar	_aexp @ sp[(-4)+2]
 25542                           ;stkvar	_bexp @ sp[(-4)+1]
 25543  013994  0EFE               	movlw	-2
 25544  013996  006F FF8C  F001    	movff	plusw1,btemp
 25545  01399C  0EFD               	movlw	-3
 25546  01399E  0060  F007  FFE3   	movff	btemp,plusw1
 25547  0139A4  D042               	goto	u5260
 25548  0139A6                     l7392:
 25549                           
 25550                           ;stkvar	_grs @ sp[(-4)+0]
 25551  0139A6  0EFC               	movlw	-4
 25552  0139A8  A0E3               	btfss	plusw1,0,c
 25553  0139AA  D00D               	goto	l7396
 25554                           
 25555                           ;stkvar	_grs @ sp[(-4)+0]
 25556  0139AC  0EFC               	movlw	-4
 25557  0139AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25558  0139B4  90D8               	bcf	status,0,c
 25559  0139B6  320C               	rrcf	(btemp+11)^0,f,c
 25560  0139B8  0E01               	movlw	1
 25561  0139BA  120C               	iorwf	(btemp+11)^0,f,c
 25562                           
 25563                           ;stkvar	_grs @ sp[(-4)+0]
 25564  0139BC  0EFC               	movlw	-4
 25565  0139BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25566  0139C4  D009               	goto	l7398
 25567  0139C6                     l7396:
 25568                           
 25569                           ;stkvar	_grs @ sp[(-4)+0]
 25570  0139C6  50E1               	movf	fsr1l,w,c
 25571  0139C8  0FFC               	addlw	-4
 25572  0139CA  6ED9               	movwf	fsr2l,c
 25573  0139CC  50E2               	movf	fsr1h,w,c
 25574  0139CE  6EDA               	movwf	fsr2h,c
 25575  0139D0  0EFF               	movlw	255
 25576  0139D2  22DA               	addwfc	fsr2h,f,c
 25577  0139D4  90D8               	bcf	status,0,c
 25578  0139D6  32DF               	rrcf	indf2,f,c
 25579  0139D8                     l7398:
 25580                           
 25581                           ;stkvar	_b @ sp[(-4)+-4]
 25582  0139D8  0EF8               	movlw	-8
 25583  0139DA  A0E3               	btfss	plusw1,0,c
 25584  0139DC  D002               	goto	l7402
 25585                           
 25586                           ;stkvar	_grs @ sp[(-4)+0]
 25587  0139DE  0EFC               	movlw	-4
 25588  0139E0  8EE3               	bsf	plusw1,7,c
 25589  0139E2                     l7402:
 25590  0139E2  0E01               	movlw	1
 25591  0139E4  6E0C               	movwf	(btemp+11)^0,c
 25592                           
 25593                           ;stkvar	_b @ sp[(-4)+-4]
 25594  0139E6  50E1               	movf	fsr1l,w,c
 25595  0139E8  0FF8               	addlw	-8
 25596  0139EA  6ED9               	movwf	fsr2l,c
 25597  0139EC  50E2               	movf	fsr1h,w,c
 25598  0139EE  6EDA               	movwf	fsr2h,c
 25599  0139F0  0EFF               	movlw	255
 25600  0139F2  22DA               	addwfc	fsr2h,f,c
 25601  0139F4  280C               	incf	(btemp+11)^0,w,c
 25602  0139F6  52DE               	movf	postinc2,f,c
 25603  0139F8  D008               	goto	u5250
 25604  0139FA                     u5255:
 25605  0139FA  52DE               	movf	postinc2,f,c
 25606  0139FC  90D8               	bcf	status,0,c
 25607  0139FE  BEDC               	btfsc	preinc2,7,c
 25608  013A00  80D8               	bsf	status,0,c
 25609  013A02  32DD               	rrcf	postdec2,f,c
 25610  013A04  32DD               	rrcf	postdec2,f,c
 25611  013A06  32DD               	rrcf	postdec2,f,c
 25612  013A08  32DE               	rrcf	postinc2,f,c
 25613  013A0A                     u5250:
 25614  013A0A  2EE8               	decfsz	wreg,f,c
 25615  013A0C  D7F6               	goto	u5255
 25616                           
 25617                           ;stkvar	_bexp @ sp[(-4)+1]
 25618  013A0E  0EFD               	movlw	-3
 25619  013A10  2AE3               	incf	plusw1,f,c
 25620  013A12                     l7406:
 25621                           
 25622                           ;stkvar	_aexp @ sp[(-4)+2]
 25623                           ;stkvar	_bexp @ sp[(-4)+1]
 25624  013A12  50E1               	movf	fsr1l,w,c
 25625  013A14  0FFD               	addlw	-3
 25626  013A16  6ED9               	movwf	fsr2l,c
 25627  013A18  50E2               	movf	fsr1h,w,c
 25628  013A1A  6EDA               	movwf	fsr2h,c
 25629  013A1C  0EFF               	movlw	255
 25630  013A1E  22DA               	addwfc	fsr2h,f,c
 25631  013A20  0EFE               	movlw	-2
 25632  013A22  50E3               	movf	plusw1,w,c
 25633  013A24  5CDE               	subwf	postinc2,w,c
 25634  013A26  A0D8               	btfss	status,0,c
 25635  013A28  D7BE               	goto	l7392
 25636  013A2A                     u5260:
 25637                           
 25638                           ;stkvar	_signs @ sp[(-4)+3]
 25639  013A2A  0EFF               	movlw	-1
 25640  013A2C  BCE3               	btfsc	plusw1,6,c
 25641  013A2E  D066               	goto	l7434
 25642                           
 25643                           ;stkvar	_bexp @ sp[(-4)+1]
 25644  013A30  0EFD               	movlw	-3
 25645  013A32  50E3               	movf	plusw1,w,c
 25646  013A34  B4D8               	btfsc	status,2,c
 25647  013A36  D0F2               	goto	u5360
 25648                           
 25649                           ;stkvar	_a @ sp[(-4)+-8]
 25650                           ;stkvar	_b @ sp[(-4)+-4]
 25651  013A38  0EF8               	movlw	-8
 25652  013A3A  50E3               	movf	plusw1,w,c
 25653  013A3C  6E01               	movwf	btemp^0,c
 25654  013A3E  0EF4               	movlw	-12
 25655  013A40  50E3               	movf	plusw1,w,c
 25656  013A42  2601               	addwf	btemp^0,f,c
 25657  013A44  0EF8               	movlw	-8
 25658  013A46  0060  F007  FFE3   	movff	btemp,plusw1
 25659  013A4C  0EF9               	movlw	-7
 25660  013A4E  50E3               	movf	plusw1,w,c
 25661  013A50  6E01               	movwf	btemp^0,c
 25662  013A52  0EF5               	movlw	-11
 25663  013A54  50E3               	movf	plusw1,w,c
 25664  013A56  2201               	addwfc	btemp^0,f,c
 25665  013A58  0EF9               	movlw	-7
 25666  013A5A  0060  F007  FFE3   	movff	btemp,plusw1
 25667  013A60  0EFA               	movlw	-6
 25668  013A62  50E3               	movf	plusw1,w,c
 25669  013A64  6E01               	movwf	btemp^0,c
 25670  013A66  0EF6               	movlw	-10
 25671  013A68  50E3               	movf	plusw1,w,c
 25672  013A6A  2201               	addwfc	btemp^0,f,c
 25673  013A6C  0EFA               	movlw	-6
 25674  013A6E  0060  F007  FFE3   	movff	btemp,plusw1
 25675  013A74  0EFB               	movlw	-5
 25676  013A76  50E3               	movf	plusw1,w,c
 25677  013A78  6E01               	movwf	btemp^0,c
 25678  013A7A  0EF7               	movlw	-9
 25679  013A7C  50E3               	movf	plusw1,w,c
 25680  013A7E  2201               	addwfc	btemp^0,f,c
 25681  013A80  0EFB               	movlw	-5
 25682  013A82  0060  F007  FFE3   	movff	btemp,plusw1
 25683                           
 25684                           ;stkvar	_b @ sp[(-4)+-4]
 25685  013A88  0EFB               	movlw	-5
 25686  013A8A  A0E3               	btfss	plusw1,0,c
 25687  013A8C  D101               	goto	u5400
 25688                           
 25689                           ;stkvar	_grs @ sp[(-4)+0]
 25690  013A8E  0EFC               	movlw	-4
 25691  013A90  A0E3               	btfss	plusw1,0,c
 25692  013A92  D00D               	goto	l7424
 25693                           
 25694                           ;stkvar	_grs @ sp[(-4)+0]
 25695  013A94  0EFC               	movlw	-4
 25696  013A96  006F FF8C  F00C    	movff	plusw1,btemp+11
 25697  013A9C  90D8               	bcf	status,0,c
 25698  013A9E  320C               	rrcf	(btemp+11)^0,f,c
 25699  013AA0  0E01               	movlw	1
 25700  013AA2  120C               	iorwf	(btemp+11)^0,f,c
 25701                           
 25702                           ;stkvar	_grs @ sp[(-4)+0]
 25703  013AA4  0EFC               	movlw	-4
 25704  013AA6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25705  013AAC  D009               	goto	l7426
 25706  013AAE                     l7424:
 25707                           
 25708                           ;stkvar	_grs @ sp[(-4)+0]
 25709  013AAE  50E1               	movf	fsr1l,w,c
 25710  013AB0  0FFC               	addlw	-4
 25711  013AB2  6ED9               	movwf	fsr2l,c
 25712  013AB4  50E2               	movf	fsr1h,w,c
 25713  013AB6  6EDA               	movwf	fsr2h,c
 25714  013AB8  0EFF               	movlw	255
 25715  013ABA  22DA               	addwfc	fsr2h,f,c
 25716  013ABC  90D8               	bcf	status,0,c
 25717  013ABE  32DF               	rrcf	indf2,f,c
 25718  013AC0                     l7426:
 25719                           
 25720                           ;stkvar	_b @ sp[(-4)+-4]
 25721  013AC0  0EF8               	movlw	-8
 25722  013AC2  A0E3               	btfss	plusw1,0,c
 25723  013AC4  D002               	goto	l7430
 25724                           
 25725                           ;stkvar	_grs @ sp[(-4)+0]
 25726  013AC6  0EFC               	movlw	-4
 25727  013AC8  8EE3               	bsf	plusw1,7,c
 25728  013ACA                     l7430:
 25729  013ACA  0E01               	movlw	1
 25730  013ACC  6E0C               	movwf	(btemp+11)^0,c
 25731                           
 25732                           ;stkvar	_b @ sp[(-4)+-4]
 25733  013ACE  50E1               	movf	fsr1l,w,c
 25734  013AD0  0FF8               	addlw	-8
 25735  013AD2  6ED9               	movwf	fsr2l,c
 25736  013AD4  50E2               	movf	fsr1h,w,c
 25737  013AD6  6EDA               	movwf	fsr2h,c
 25738  013AD8  0EFF               	movlw	255
 25739  013ADA  22DA               	addwfc	fsr2h,f,c
 25740  013ADC  280C               	incf	(btemp+11)^0,w,c
 25741  013ADE  52DE               	movf	postinc2,f,c
 25742  013AE0  D008               	goto	u5320
 25743  013AE2                     u5325:
 25744  013AE2  52DE               	movf	postinc2,f,c
 25745  013AE4  90D8               	bcf	status,0,c
 25746  013AE6  BEDC               	btfsc	preinc2,7,c
 25747  013AE8  80D8               	bsf	status,0,c
 25748  013AEA  32DD               	rrcf	postdec2,f,c
 25749  013AEC  32DD               	rrcf	postdec2,f,c
 25750  013AEE  32DD               	rrcf	postdec2,f,c
 25751  013AF0  32DE               	rrcf	postinc2,f,c
 25752  013AF2                     u5320:
 25753  013AF2  2EE8               	decfsz	wreg,f,c
 25754  013AF4  D7F6               	goto	u5325
 25755                           
 25756                           ;stkvar	_bexp @ sp[(-4)+1]
 25757  013AF6  0EFD               	movlw	-3
 25758  013AF8  2AE3               	incf	plusw1,f,c
 25759  013AFA  D0CA               	goto	u5400
 25760  013AFC                     l7434:
 25761                           
 25762                           ;stkvar	_a @ sp[(-4)+-8]
 25763                           ;stkvar	_b @ sp[(-4)+-4]
 25764  013AFC  50E1               	movf	fsr1l,w,c
 25765  013AFE  0FF8               	addlw	-8
 25766  013B00  6ED9               	movwf	fsr2l,c
 25767  013B02  50E2               	movf	fsr1h,w,c
 25768  013B04  6EDA               	movwf	fsr2h,c
 25769  013B06  0EFF               	movlw	255
 25770  013B08  22DA               	addwfc	fsr2h,f,c
 25771  013B0A  0EF4               	movlw	-12
 25772  013B0C  50E3               	movf	plusw1,w,c
 25773  013B0E  5CDE               	subwf	postinc2,w,c
 25774  013B10  0EF5               	movlw	-11
 25775  013B12  50E3               	movf	plusw1,w,c
 25776  013B14  58DE               	subwfb	postinc2,w,c
 25777  013B16  0EF6               	movlw	-10
 25778  013B18  50E3               	movf	plusw1,w,c
 25779  013B1A  58DE               	subwfb	postinc2,w,c
 25780  013B1C  50DE               	movf	postinc2,w,c
 25781  013B1E  0A80               	xorlw	128
 25782  013B20  6E01               	movwf	btemp^0,c
 25783  013B22  0EF7               	movlw	-9
 25784  013B24  50E3               	movf	plusw1,w,c
 25785  013B26  0A80               	xorlw	128
 25786  013B28  5801               	subwfb	btemp^0,w,c
 25787  013B2A  B0D8               	btfsc	status,0,c
 25788  013B2C  D053               	goto	l7446
 25789                           
 25790                           ;stkvar	_b @ sp[(-4)+-4]
 25791                           ;stkvar	_a @ sp[(-4)+-8]
 25792  013B2E  0EF4               	movlw	-12
 25793  013B30  006F FF8C  F009    	movff	plusw1,btemp+8
 25794  013B36  0EF5               	movlw	-11
 25795  013B38  006F FF8C  F00A    	movff	plusw1,btemp+9
 25796  013B3E  0EF6               	movlw	-10
 25797  013B40  006F FF8C  F00B    	movff	plusw1,btemp+10
 25798  013B46  0EF7               	movlw	-9
 25799  013B48  006F FF8C  F00C    	movff	plusw1,btemp+11
 25800  013B4E  0EF8               	movlw	-8
 25801  013B50  50E3               	movf	plusw1,w,c
 25802  013B52  5E09               	subwf	(btemp+8)^0,f,c
 25803  013B54  0EF9               	movlw	-7
 25804  013B56  50E3               	movf	plusw1,w,c
 25805  013B58  5A0A               	subwfb	(btemp+9)^0,f,c
 25806  013B5A  0EFA               	movlw	-6
 25807  013B5C  50E3               	movf	plusw1,w,c
 25808  013B5E  5A0B               	subwfb	(btemp+10)^0,f,c
 25809  013B60  0EFB               	movlw	-5
 25810  013B62  50E3               	movf	plusw1,w,c
 25811  013B64  5A0C               	subwfb	(btemp+11)^0,f,c
 25812  013B66  0EFF               	movlw	255
 25813  013B68  2409               	addwf	(btemp+8)^0,w,c
 25814  013B6A  6E05               	movwf	(btemp+4)^0,c
 25815  013B6C  0EFF               	movlw	255
 25816  013B6E  200A               	addwfc	(btemp+9)^0,w,c
 25817  013B70  6E06               	movwf	(btemp+5)^0,c
 25818  013B72  0EFF               	movlw	255
 25819  013B74  200B               	addwfc	(btemp+10)^0,w,c
 25820  013B76  6E07               	movwf	(btemp+6)^0,c
 25821  013B78  0EFF               	movlw	255
 25822  013B7A  200C               	addwfc	(btemp+11)^0,w,c
 25823  013B7C  6E08               	movwf	(btemp+7)^0,c
 25824                           
 25825                           ;stkvar	_b @ sp[(-4)+-4]
 25826  013B7E  0EF8               	movlw	-8
 25827  013B80  0060  F017  FFE3   	movff	btemp+4,plusw1
 25828  013B86  0EF9               	movlw	-7
 25829  013B88  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25830  013B8E  0EFA               	movlw	-6
 25831  013B90  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25832  013B96  0EFB               	movlw	-5
 25833  013B98  0060  F023  FFE3   	movff	btemp+7,plusw1
 25834                           
 25835                           ;stkvar	_signs @ sp[(-4)+3]
 25836  013B9E  0EFF               	movlw	-1
 25837  013BA0  7EE3               	btg	plusw1,7,c
 25838                           
 25839                           ;stkvar	_grs @ sp[(-4)+0]
 25840  013BA2  0EFC               	movlw	-4
 25841  013BA4  50E3               	movf	plusw1,w,c
 25842  013BA6  0800               	sublw	0
 25843  013BA8  6E0C               	movwf	(btemp+11)^0,c
 25844                           
 25845                           ;stkvar	_grs @ sp[(-4)+0]
 25846  013BAA  0EFC               	movlw	-4
 25847  013BAC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25848                           
 25849                           ;stkvar	_grs @ sp[(-4)+0]
 25850  013BB2  0EFC               	movlw	-4
 25851  013BB4  50E3               	movf	plusw1,w,c
 25852  013BB6  A4D8               	btfss	status,2,c
 25853  013BB8  D020               	goto	l7448
 25854                           
 25855                           ;stkvar	_b @ sp[(-4)+-4]
 25856  013BBA  50E1               	movf	fsr1l,w,c
 25857  013BBC  0FF8               	addlw	-8
 25858  013BBE  6ED9               	movwf	fsr2l,c
 25859  013BC0  50E2               	movf	fsr1h,w,c
 25860  013BC2  6EDA               	movwf	fsr2h,c
 25861  013BC4  0EFF               	movlw	255
 25862  013BC6  22DA               	addwfc	fsr2h,f,c
 25863  013BC8  2ADE               	incf	postinc2,f,c
 25864  013BCA  0E00               	movlw	0
 25865  013BCC  22DE               	addwfc	postinc2,f,c
 25866  013BCE  22DE               	addwfc	postinc2,f,c
 25867  013BD0  22DE               	addwfc	postinc2,f,c
 25868  013BD2  D013               	goto	l7448
 25869  013BD4                     l7446:
 25870                           
 25871                           ;stkvar	_a @ sp[(-4)+-8]
 25872                           ;stkvar	_b @ sp[(-4)+-4]
 25873  013BD4  50E1               	movf	fsr1l,w,c
 25874  013BD6  0FF8               	addlw	-8
 25875  013BD8  6ED9               	movwf	fsr2l,c
 25876  013BDA  50E2               	movf	fsr1h,w,c
 25877  013BDC  6EDA               	movwf	fsr2h,c
 25878  013BDE  0EFF               	movlw	255
 25879  013BE0  22DA               	addwfc	fsr2h,f,c
 25880  013BE2  0EF4               	movlw	-12
 25881  013BE4  50E3               	movf	plusw1,w,c
 25882  013BE6  5EDE               	subwf	postinc2,f,c
 25883  013BE8  0EF5               	movlw	-11
 25884  013BEA  50E3               	movf	plusw1,w,c
 25885  013BEC  5ADE               	subwfb	postinc2,f,c
 25886  013BEE  0EF6               	movlw	-10
 25887  013BF0  50E3               	movf	plusw1,w,c
 25888  013BF2  5ADE               	subwfb	postinc2,f,c
 25889  013BF4  0EF7               	movlw	-9
 25890  013BF6  50E3               	movf	plusw1,w,c
 25891  013BF8  5ADE               	subwfb	postinc2,f,c
 25892  013BFA                     l7448:
 25893                           
 25894                           ;stkvar	_b @ sp[(-4)+-4]
 25895  013BFA  0EF8               	movlw	-8
 25896  013BFC  50E3               	movf	plusw1,w,c
 25897  013BFE  E145               	bnz	l7470
 25898  013C00  0EF9               	movlw	-7
 25899  013C02  50E3               	movf	plusw1,w,c
 25900  013C04  E142               	bnz	l7470
 25901  013C06  0EFA               	movlw	-6
 25902  013C08  50E3               	movf	plusw1,w,c
 25903  013C0A  E13F               	bnz	l7470
 25904  013C0C  0EFB               	movlw	-5
 25905  013C0E  50E3               	movf	plusw1,w,c
 25906  013C10  A4D8               	btfss	status,2,c
 25907  013C12  D03B               	goto	l7470
 25908                           
 25909                           ;stkvar	_grs @ sp[(-4)+0]
 25910  013C14  0EFC               	movlw	-4
 25911  013C16  50E3               	movf	plusw1,w,c
 25912  013C18  A4D8               	btfss	status,2,c
 25913  013C1A  D037               	goto	l7470
 25914  013C1C                     u5360:
 25915  013C1C  0E00               	movlw	0
 25916  013C1E  6E01               	movwf	btemp^0,c
 25917  013C20  0E00               	movlw	0
 25918  013C22  6E02               	movwf	(btemp+1)^0,c
 25919  013C24  0E00               	movlw	0
 25920  013C26  6E03               	movwf	(btemp+2)^0,c
 25921  013C28  0E00               	movlw	0
 25922  013C2A  6E04               	movwf	(btemp+3)^0,c
 25923  013C2C  D0C6               	goto	l2858
 25924  013C2E                     l7456:
 25925                           
 25926                           ;stkvar	_b @ sp[(-4)+-4]
 25927  013C2E  90D8               	bcf	status,0,c
 25928  013C30  0EF8               	movlw	-8
 25929  013C32  36E3               	rlcf	plusw1,f,c
 25930  013C34  0EF9               	movlw	-7
 25931  013C36  36E3               	rlcf	plusw1,f,c
 25932  013C38  0EFA               	movlw	-6
 25933  013C3A  36E3               	rlcf	plusw1,f,c
 25934  013C3C  0EFB               	movlw	-5
 25935  013C3E  36E3               	rlcf	plusw1,f,c
 25936                           
 25937                           ;stkvar	_grs @ sp[(-4)+0]
 25938  013C40  0EFC               	movlw	-4
 25939  013C42  AEE3               	btfss	plusw1,7,c
 25940  013C44  D002               	goto	l2870
 25941                           
 25942                           ;stkvar	_b @ sp[(-4)+-4]
 25943  013C46  0EF8               	movlw	-8
 25944  013C48  80E3               	bsf	plusw1,0,c
 25945  013C4A                     l2870:
 25946                           
 25947                           ;stkvar	_grs @ sp[(-4)+0]
 25948  013C4A  0EFC               	movlw	-4
 25949  013C4C  A0E3               	btfss	plusw1,0,c
 25950  013C4E  D00E               	goto	l7464
 25951                           
 25952                           ;stkvar	_grs @ sp[(-4)+0]
 25953  013C50  0EFC               	movlw	-4
 25954  013C52  006F FF8C  F00C    	movff	plusw1,btemp+11
 25955  013C58  90D8               	bcf	status,0,c
 25956  013C5A  340C               	rlcf	(btemp+11)^0,w,c
 25957  013C5C  6E0B               	movwf	(btemp+10)^0,c
 25958  013C5E  0E01               	movlw	1
 25959  013C60  120B               	iorwf	(btemp+10)^0,f,c
 25960                           
 25961                           ;stkvar	_grs @ sp[(-4)+0]
 25962  013C62  0EFC               	movlw	-4
 25963  013C64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25964  013C6A  D009               	goto	l7466
 25965  013C6C                     l7464:
 25966                           
 25967                           ;stkvar	_grs @ sp[(-4)+0]
 25968  013C6C  50E1               	movf	fsr1l,w,c
 25969  013C6E  0FFC               	addlw	-4
 25970  013C70  6ED9               	movwf	fsr2l,c
 25971  013C72  50E2               	movf	fsr1h,w,c
 25972  013C74  6EDA               	movwf	fsr2h,c
 25973  013C76  0EFF               	movlw	255
 25974  013C78  22DA               	addwfc	fsr2h,f,c
 25975  013C7A  90D8               	bcf	status,0,c
 25976  013C7C  36DF               	rlcf	indf2,f,c
 25977  013C7E                     l7466:
 25978                           
 25979                           ;stkvar	_bexp @ sp[(-4)+1]
 25980  013C7E  0EFD               	movlw	-3
 25981  013C80  50E3               	movf	plusw1,w,c
 25982  013C82  B4D8               	btfsc	status,2,c
 25983  013C84  D002               	goto	l7470
 25984                           
 25985                           ;stkvar	_bexp @ sp[(-4)+1]
 25986  013C86  0EFD               	movlw	-3
 25987  013C88  06E3               	decf	plusw1,f,c
 25988  013C8A                     l7470:
 25989                           
 25990                           ;stkvar	_b @ sp[(-4)+-4]
 25991  013C8A  0EFA               	movlw	-6
 25992  013C8C  AEE3               	btfss	plusw1,7,c
 25993  013C8E  D7CF               	goto	l7456
 25994  013C90                     u5400:
 25995                           
 25996                           ;stkvar	_aexp @ sp[(-4)+2]
 25997  013C90  0EFE               	movlw	-2
 25998  013C92  6AE3               	clrf	plusw1,c
 25999                           
 26000                           ;stkvar	_grs @ sp[(-4)+0]
 26001  013C94  0EFC               	movlw	-4
 26002  013C96  AEE3               	btfss	plusw1,7,c
 26003  013C98  D00F               	goto	l7484
 26004                           
 26005                           ;stkvar	_grs @ sp[(-4)+0]
 26006  013C9A  0EFC               	movlw	-4
 26007  013C9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26008  013CA2  0E7F               	movlw	127
 26009  013CA4  160C               	andwf	(btemp+11)^0,f,c
 26010  013CA6  B4D8               	btfsc	status,2,c
 26011  013CA8  D004               	goto	l7480
 26012  013CAA                     u5420:
 26013                           
 26014                           ;stkvar	_aexp @ sp[(-4)+2]
 26015  013CAA  0EFE               	movlw	-2
 26016  013CAC  6AE3               	clrf	plusw1,c
 26017  013CAE  2AE3               	incf	plusw1,f,c
 26018  013CB0  D003               	goto	l7484
 26019  013CB2                     l7480:
 26020                           
 26021                           ;stkvar	_b @ sp[(-4)+-4]
 26022  013CB2  0EF8               	movlw	-8
 26023  013CB4  B0E3               	btfsc	plusw1,0,c
 26024  013CB6  D7F9               	goto	u5420
 26025  013CB8                     l7484:
 26026                           
 26027                           ;stkvar	_aexp @ sp[(-4)+2]
 26028  013CB8  0EFE               	movlw	-2
 26029  013CBA  50E3               	movf	plusw1,w,c
 26030  013CBC  B4D8               	btfsc	status,2,c
 26031  013CBE  D02B               	goto	l7496
 26032                           
 26033                           ;stkvar	_b @ sp[(-4)+-4]
 26034  013CC0  50E1               	movf	fsr1l,w,c
 26035  013CC2  0FF8               	addlw	-8
 26036  013CC4  6ED9               	movwf	fsr2l,c
 26037  013CC6  50E2               	movf	fsr1h,w,c
 26038  013CC8  6EDA               	movwf	fsr2h,c
 26039  013CCA  0EFF               	movlw	255
 26040  013CCC  22DA               	addwfc	fsr2h,f,c
 26041  013CCE  2ADE               	incf	postinc2,f,c
 26042  013CD0  0E00               	movlw	0
 26043  013CD2  22DE               	addwfc	postinc2,f,c
 26044  013CD4  22DE               	addwfc	postinc2,f,c
 26045  013CD6  22DE               	addwfc	postinc2,f,c
 26046                           
 26047                           ;stkvar	_b @ sp[(-4)+-4]
 26048  013CD8  0EFB               	movlw	-5
 26049  013CDA  A0E3               	btfss	plusw1,0,c
 26050  013CDC  D01C               	goto	l7496
 26051  013CDE  0E01               	movlw	1
 26052  013CE0  6E0C               	movwf	(btemp+11)^0,c
 26053                           
 26054                           ;stkvar	_b @ sp[(-4)+-4]
 26055  013CE2  50E1               	movf	fsr1l,w,c
 26056  013CE4  0FF8               	addlw	-8
 26057  013CE6  6ED9               	movwf	fsr2l,c
 26058  013CE8  50E2               	movf	fsr1h,w,c
 26059  013CEA  6EDA               	movwf	fsr2h,c
 26060  013CEC  0EFF               	movlw	255
 26061  013CEE  22DA               	addwfc	fsr2h,f,c
 26062  013CF0  280C               	incf	(btemp+11)^0,w,c
 26063  013CF2  52DE               	movf	postinc2,f,c
 26064  013CF4  D008               	goto	u5460
 26065  013CF6                     u5465:
 26066  013CF6  52DE               	movf	postinc2,f,c
 26067  013CF8  90D8               	bcf	status,0,c
 26068  013CFA  BEDC               	btfsc	preinc2,7,c
 26069  013CFC  80D8               	bsf	status,0,c
 26070  013CFE  32DD               	rrcf	postdec2,f,c
 26071  013D00  32DD               	rrcf	postdec2,f,c
 26072  013D02  32DD               	rrcf	postdec2,f,c
 26073  013D04  32DE               	rrcf	postinc2,f,c
 26074  013D06                     u5460:
 26075  013D06  2EE8               	decfsz	wreg,f,c
 26076  013D08  D7F6               	goto	u5465
 26077                           
 26078                           ;stkvar	_bexp @ sp[(-4)+1]
 26079  013D0A  0EFD               	movlw	-3
 26080  013D0C  28E3               	incf	plusw1,w,c
 26081  013D0E  B4D8               	btfsc	status,2,c
 26082  013D10  D002               	goto	l7496
 26083                           
 26084                           ;stkvar	_bexp @ sp[(-4)+1]
 26085  013D12  0EFD               	movlw	-3
 26086  013D14  2AE3               	incf	plusw1,f,c
 26087  013D16                     l7496:
 26088                           
 26089                           ;stkvar	_bexp @ sp[(-4)+1]
 26090  013D16  0EFD               	movlw	-3
 26091  013D18  28E3               	incf	plusw1,w,c
 26092  013D1A  B4D8               	btfsc	status,2,c
 26093  013D1C  D004               	goto	u5490
 26094                           
 26095                           ;stkvar	_bexp @ sp[(-4)+1]
 26096  013D1E  0EFD               	movlw	-3
 26097  013D20  50E3               	movf	plusw1,w,c
 26098  013D22  A4D8               	btfss	status,2,c
 26099  013D24  D00E               	goto	l7506
 26100  013D26                     u5490:
 26101                           
 26102                           ;stkvar	_b @ sp[(-4)+-4]
 26103  013D26  0EF8               	movlw	-8
 26104  013D28  6AE3               	clrf	plusw1,c
 26105  013D2A  0EF9               	movlw	-7
 26106  013D2C  6AE3               	clrf	plusw1,c
 26107  013D2E  0EFA               	movlw	-6
 26108  013D30  6AE3               	clrf	plusw1,c
 26109  013D32  0EFB               	movlw	-5
 26110  013D34  6AE3               	clrf	plusw1,c
 26111                           
 26112                           ;stkvar	_bexp @ sp[(-4)+1]
 26113  013D36  0EFD               	movlw	-3
 26114  013D38  50E3               	movf	plusw1,w,c
 26115  013D3A  A4D8               	btfss	status,2,c
 26116  013D3C  D002               	goto	l7506
 26117                           
 26118                           ;stkvar	_signs @ sp[(-4)+3]
 26119  013D3E  0EFF               	movlw	-1
 26120  013D40  6AE3               	clrf	plusw1,c
 26121  013D42                     l7506:
 26122                           
 26123                           ;stkvar	_bexp @ sp[(-4)+1]
 26124  013D42  0EFD               	movlw	-3
 26125  013D44  A0E3               	btfss	plusw1,0,c
 26126  013D46  D009               	goto	l7510
 26127                           
 26128                           ;stkvar	_b @ sp[(-4)+-4]
 26129  013D48  0EFA               	movlw	250
 26130  013D4A  24E1               	addwf	fsr1l,w,c
 26131  013D4C  6ED9               	movwf	fsr2l,c
 26132  013D4E  0EFF               	movlw	255
 26133  013D50  20E2               	addwfc	fsr1h,w,c
 26134  013D52  6EDA               	movwf	fsr2h,c
 26135  013D54  0E00               	movlw	0
 26136  013D56  8EDB               	bsf	plusw2,7,c
 26137  013D58  D008               	goto	l7512
 26138  013D5A                     l7510:
 26139                           
 26140                           ;stkvar	_b @ sp[(-4)+-4]
 26141  013D5A  0EFA               	movlw	250
 26142  013D5C  24E1               	addwf	fsr1l,w,c
 26143  013D5E  6ED9               	movwf	fsr2l,c
 26144  013D60  0EFF               	movlw	255
 26145  013D62  20E2               	addwfc	fsr1h,w,c
 26146  013D64  6EDA               	movwf	fsr2h,c
 26147  013D66  0E7F               	movlw	127
 26148  013D68  16DF               	andwf	indf2,f,c
 26149  013D6A                     l7512:
 26150                           
 26151                           ;stkvar	_b @ sp[(-4)+-4]
 26152  013D6A  0EFB               	movlw	251
 26153  013D6C  24E1               	addwf	fsr1l,w,c
 26154  013D6E  6ED9               	movwf	fsr2l,c
 26155  013D70  0EFF               	movlw	255
 26156  013D72  20E2               	addwfc	fsr1h,w,c
 26157  013D74  6EDA               	movwf	fsr2h,c
 26158                           
 26159                           ;stkvar	_bexp @ sp[(-4)+1]
 26160  013D76  0EFD               	movlw	-3
 26161  013D78  006F FF8C  F00C    	movff	plusw1,btemp+11
 26162  013D7E  90D8               	bcf	status,0,c
 26163  013D80  300C               	rrcf	(btemp+11)^0,w,c
 26164  013D82  6EDF               	movwf	indf2,c
 26165                           
 26166                           ;stkvar	_signs @ sp[(-4)+3]
 26167  013D84  0EFF               	movlw	-1
 26168  013D86  AEE3               	btfss	plusw1,7,c
 26169  013D88  D008               	goto	l7518
 26170                           
 26171                           ;stkvar	_b @ sp[(-4)+-4]
 26172  013D8A  0EFB               	movlw	251
 26173  013D8C  24E1               	addwf	fsr1l,w,c
 26174  013D8E  6ED9               	movwf	fsr2l,c
 26175  013D90  0EFF               	movlw	255
 26176  013D92  20E2               	addwfc	fsr1h,w,c
 26177  013D94  6EDA               	movwf	fsr2h,c
 26178  013D96  0E00               	movlw	0
 26179  013D98  8EDB               	bsf	plusw2,7,c
 26180  013D9A                     l7518:
 26181                           
 26182                           ;stkvar	_b @ sp[(-4)+-4]
 26183  013D9A  0EF8               	movlw	-8
 26184  013D9C  006F FF8C  F001    	movff	plusw1,btemp
 26185  013DA2  0EF9               	movlw	-7
 26186  013DA4  006F FF8C  F002    	movff	plusw1,btemp+1
 26187  013DAA  0EFA               	movlw	-6
 26188  013DAC  006F FF8C  F003    	movff	plusw1,btemp+2
 26189  013DB2  0EFB               	movlw	-5
 26190  013DB4  006F FF8C  F004    	movff	plusw1,btemp+3
 26191  013DBA                     l2858:
 26192                           
 26193                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26194  013DBA  0EF4               	movlw	244
 26195  013DBC  26E1               	addwf	fsr1l,f,c
 26196  013DBE  0EFF               	movlw	255
 26197  013DC0  22E2               	addwfc	fsr1h,f,c
 26198  013DC2  0012               	return		;funcret
 26199  013DC4                     __end_of___fladd:
 26200                           	opt callstack 0
 26201                           
 26202 ;; *************** function ___flmul *****************
 26203 ;; Defined at:
 26204 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 26205 ;; Parameters:    Size  Location     Type
 26206 ;;  b               4  [STACK] unsigned char 
 26207 ;;  a               4  [STACK] unsigned char 
 26208 ;; Auto vars:     Size  Location     Type
 26209 ;;  prod            4  [STACK] struct .
 26210 ;;  grs             4  [STACK] unsigned long 
 26211 ;;  temp            2  [STACK] struct .
 26212 ;;  bexp            1  [STACK] unsigned char 
 26213 ;;  aexp            1  [STACK] unsigned char 
 26214 ;;  sign            1  [STACK] unsigned char 
 26215 ;; Return value:  Size  Location     Type
 26216 ;;                  4  [STACK] unsigned char 
 26217 ;; Registers used:
 26218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26219 ;; Tracked objects:
 26220 ;;		On entry : 0/1
 26221 ;;		On exit  : 0/0
 26222 ;;		Unchanged: 0/0
 26223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26228 ;;Total ram usage:        0 bytes
 26229 ;; Hardware stack levels used:    1
 26230 ;; Hardware stack levels required when called:   15
 26231 ;; This function calls:
 26232 ;;		Nothing
 26233 ;; This function is called by:
 26234 ;;		_conv_raw_result
 26235 ;;		_lp_filter
 26236 ;;		_calc_model_data
 26237 ;;		_calc_bsoc
 26238 ;;		_init_bsoc
 26239 ;;		_efgtoa
 26240 ;; This function uses a reentrant model
 26241 ;;
 26242                           
 26243                           	psect	text105
 26244  012DDE                     __ptext105:
 26245                           	opt callstack 0
 26246  012DDE                     ___flmul:
 26247                           	opt callstack 0
 26248                           
 26249                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26250  012DDE  0E0D               	movlw	13
 26251  012DE0  26E1               	addwf	fsr1l,f,c
 26252  012DE2  0E00               	movlw	0
 26253  012DE4  22E2               	addwfc	fsr1h,f,c
 26254                           
 26255                           ;stkvar	_b @ sp[(-13)+-4]
 26256                           
 26257                           ;incstack = 0
 26258 ;; hardware stack exceeded
 26259  012DE6  0EF2               	movlw	242
 26260  012DE8  24E1               	addwf	fsr1l,w,c
 26261  012DEA  6ED9               	movwf	fsr2l,c
 26262  012DEC  0EFF               	movlw	255
 26263  012DEE  20E2               	addwfc	fsr1h,w,c
 26264  012DF0  6EDA               	movwf	fsr2h,c
 26265  012DF2  50DF               	movf	indf2,w,c
 26266  012DF4  6E0C               	movwf	(btemp+11)^0,c
 26267  012DF6  0E80               	movlw	128
 26268  012DF8  160C               	andwf	(btemp+11)^0,f,c
 26269                           
 26270                           ;stkvar	_sign @ sp[(-13)+12]
 26271  012DFA  0EFF               	movlw	-1
 26272  012DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26273                           
 26274                           ;stkvar	_b @ sp[(-13)+-4]
 26275  012E02  0EF2               	movlw	242
 26276  012E04  24E1               	addwf	fsr1l,w,c
 26277  012E06  6ED9               	movwf	fsr2l,c
 26278  012E08  0EFF               	movlw	255
 26279  012E0A  20E2               	addwfc	fsr1h,w,c
 26280  012E0C  6EDA               	movwf	fsr2h,c
 26281  012E0E  50DF               	movf	indf2,w,c
 26282  012E10  6E0C               	movwf	(btemp+11)^0,c
 26283  012E12  90D8               	bcf	status,0,c
 26284  012E14  340C               	rlcf	(btemp+11)^0,w,c
 26285  012E16  6E0B               	movwf	(btemp+10)^0,c
 26286                           
 26287                           ;stkvar	_bexp @ sp[(-13)+10]
 26288  012E18  0EFD               	movlw	-3
 26289  012E1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26290                           
 26291                           ;stkvar	_b @ sp[(-13)+-4]
 26292  012E20  0EF1               	movlw	241
 26293  012E22  24E1               	addwf	fsr1l,w,c
 26294  012E24  6ED9               	movwf	fsr2l,c
 26295  012E26  0EFF               	movlw	255
 26296  012E28  20E2               	addwfc	fsr1h,w,c
 26297  012E2A  6EDA               	movwf	fsr2h,c
 26298  012E2C  AEDF               	btfss	indf2,7,c
 26299  012E2E  D002               	goto	l7902
 26300                           
 26301                           ;stkvar	_bexp @ sp[(-13)+10]
 26302  012E30  0EFD               	movlw	-3
 26303  012E32  80E3               	bsf	plusw1,0,c
 26304  012E34                     l7902:
 26305                           
 26306                           ;stkvar	_bexp @ sp[(-13)+10]
 26307  012E34  0EFD               	movlw	-3
 26308  012E36  50E3               	movf	plusw1,w,c
 26309  012E38  B4D8               	btfsc	status,2,c
 26310  012E3A  D01F               	goto	l7910
 26311                           
 26312                           ;stkvar	_bexp @ sp[(-13)+10]
 26313  012E3C  0EFD               	movlw	-3
 26314  012E3E  28E3               	incf	plusw1,w,c
 26315  012E40  A4D8               	btfss	status,2,c
 26316  012E42  D018               	goto	l7908
 26317  012E44  0E00               	movlw	0
 26318  012E46  6E09               	movwf	(btemp+8)^0,c
 26319  012E48  0E00               	movlw	0
 26320  012E4A  6E0A               	movwf	(btemp+9)^0,c
 26321  012E4C  0E00               	movlw	0
 26322  012E4E  6E0B               	movwf	(btemp+10)^0,c
 26323  012E50  0E00               	movlw	0
 26324  012E52  6E0C               	movwf	(btemp+11)^0,c
 26325                           
 26326                           ;stkvar	_b @ sp[(-13)+-4]
 26327  012E54  0EEF               	movlw	-17
 26328  012E56  0060  F027  FFE3   	movff	btemp+8,plusw1
 26329  012E5C  0EF0               	movlw	-16
 26330  012E5E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26331  012E64  0EF1               	movlw	-15
 26332  012E66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26333  012E6C  0EF2               	movlw	-14
 26334  012E6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26335  012E74                     l7908:
 26336                           
 26337                           ;stkvar	_b @ sp[(-13)+-4]
 26338  012E74  0EF1               	movlw	-15
 26339  012E76  8EE3               	bsf	plusw1,7,c
 26340  012E78  D018               	goto	l7912
 26341  012E7A                     l7910:
 26342  012E7A  0E00               	movlw	0
 26343  012E7C  6E09               	movwf	(btemp+8)^0,c
 26344  012E7E  0E00               	movlw	0
 26345  012E80  6E0A               	movwf	(btemp+9)^0,c
 26346  012E82  0E00               	movlw	0
 26347  012E84  6E0B               	movwf	(btemp+10)^0,c
 26348  012E86  0E00               	movlw	0
 26349  012E88  6E0C               	movwf	(btemp+11)^0,c
 26350                           
 26351                           ;stkvar	_b @ sp[(-13)+-4]
 26352  012E8A  0EEF               	movlw	-17
 26353  012E8C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26354  012E92  0EF0               	movlw	-16
 26355  012E94  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26356  012E9A  0EF1               	movlw	-15
 26357  012E9C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26358  012EA2  0EF2               	movlw	-14
 26359  012EA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26360  012EAA                     l7912:
 26361                           
 26362                           ;stkvar	_a @ sp[(-13)+-8]
 26363  012EAA  0EEE               	movlw	238
 26364  012EAC  24E1               	addwf	fsr1l,w,c
 26365  012EAE  6ED9               	movwf	fsr2l,c
 26366  012EB0  0EFF               	movlw	255
 26367  012EB2  20E2               	addwfc	fsr1h,w,c
 26368  012EB4  6EDA               	movwf	fsr2h,c
 26369  012EB6  50DF               	movf	indf2,w,c
 26370  012EB8  6E0C               	movwf	(btemp+11)^0,c
 26371  012EBA  0E80               	movlw	128
 26372  012EBC  160C               	andwf	(btemp+11)^0,f,c
 26373                           
 26374                           ;stkvar	_sign @ sp[(-13)+12]
 26375  012EBE  50E1               	movf	fsr1l,w,c
 26376  012EC0  0FFF               	addlw	-1
 26377  012EC2  6ED9               	movwf	fsr2l,c
 26378  012EC4  50E2               	movf	fsr1h,w,c
 26379  012EC6  6EDA               	movwf	fsr2h,c
 26380  012EC8  0EFF               	movlw	255
 26381  012ECA  22DA               	addwfc	fsr2h,f,c
 26382  012ECC  500C               	movf	(btemp+11)^0,w,c
 26383  012ECE  1ADF               	xorwf	indf2,f,c
 26384                           
 26385                           ;stkvar	_a @ sp[(-13)+-8]
 26386  012ED0  0EEE               	movlw	238
 26387  012ED2  24E1               	addwf	fsr1l,w,c
 26388  012ED4  6ED9               	movwf	fsr2l,c
 26389  012ED6  0EFF               	movlw	255
 26390  012ED8  20E2               	addwfc	fsr1h,w,c
 26391  012EDA  6EDA               	movwf	fsr2h,c
 26392  012EDC  50DF               	movf	indf2,w,c
 26393  012EDE  6E0C               	movwf	(btemp+11)^0,c
 26394  012EE0  90D8               	bcf	status,0,c
 26395  012EE2  340C               	rlcf	(btemp+11)^0,w,c
 26396  012EE4  6E0B               	movwf	(btemp+10)^0,c
 26397                           
 26398                           ;stkvar	_aexp @ sp[(-13)+11]
 26399  012EE6  0EFE               	movlw	-2
 26400  012EE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26401                           
 26402                           ;stkvar	_a @ sp[(-13)+-8]
 26403  012EEE  0EED               	movlw	237
 26404  012EF0  24E1               	addwf	fsr1l,w,c
 26405  012EF2  6ED9               	movwf	fsr2l,c
 26406  012EF4  0EFF               	movlw	255
 26407  012EF6  20E2               	addwfc	fsr1h,w,c
 26408  012EF8  6EDA               	movwf	fsr2h,c
 26409  012EFA  AEDF               	btfss	indf2,7,c
 26410  012EFC  D002               	goto	l7920
 26411                           
 26412                           ;stkvar	_aexp @ sp[(-13)+11]
 26413  012EFE  0EFE               	movlw	-2
 26414  012F00  80E3               	bsf	plusw1,0,c
 26415  012F02                     l7920:
 26416                           
 26417                           ;stkvar	_aexp @ sp[(-13)+11]
 26418  012F02  0EFE               	movlw	-2
 26419  012F04  50E3               	movf	plusw1,w,c
 26420  012F06  B4D8               	btfsc	status,2,c
 26421  012F08  D01F               	goto	l7928
 26422                           
 26423                           ;stkvar	_aexp @ sp[(-13)+11]
 26424  012F0A  0EFE               	movlw	-2
 26425  012F0C  28E3               	incf	plusw1,w,c
 26426  012F0E  A4D8               	btfss	status,2,c
 26427  012F10  D018               	goto	l7926
 26428  012F12  0E00               	movlw	0
 26429  012F14  6E09               	movwf	(btemp+8)^0,c
 26430  012F16  0E00               	movlw	0
 26431  012F18  6E0A               	movwf	(btemp+9)^0,c
 26432  012F1A  0E00               	movlw	0
 26433  012F1C  6E0B               	movwf	(btemp+10)^0,c
 26434  012F1E  0E00               	movlw	0
 26435  012F20  6E0C               	movwf	(btemp+11)^0,c
 26436                           
 26437                           ;stkvar	_a @ sp[(-13)+-8]
 26438  012F22  0EEB               	movlw	-21
 26439  012F24  0060  F027  FFE3   	movff	btemp+8,plusw1
 26440  012F2A  0EEC               	movlw	-20
 26441  012F2C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26442  012F32  0EED               	movlw	-19
 26443  012F34  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26444  012F3A  0EEE               	movlw	-18
 26445  012F3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26446  012F42                     l7926:
 26447                           
 26448                           ;stkvar	_a @ sp[(-13)+-8]
 26449  012F42  0EED               	movlw	-19
 26450  012F44  8EE3               	bsf	plusw1,7,c
 26451  012F46  D018               	goto	l7930
 26452  012F48                     l7928:
 26453  012F48  0E00               	movlw	0
 26454  012F4A  6E09               	movwf	(btemp+8)^0,c
 26455  012F4C  0E00               	movlw	0
 26456  012F4E  6E0A               	movwf	(btemp+9)^0,c
 26457  012F50  0E00               	movlw	0
 26458  012F52  6E0B               	movwf	(btemp+10)^0,c
 26459  012F54  0E00               	movlw	0
 26460  012F56  6E0C               	movwf	(btemp+11)^0,c
 26461                           
 26462                           ;stkvar	_a @ sp[(-13)+-8]
 26463  012F58  0EEB               	movlw	-21
 26464  012F5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 26465  012F60  0EEC               	movlw	-20
 26466  012F62  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26467  012F68  0EED               	movlw	-19
 26468  012F6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26469  012F70  0EEE               	movlw	-18
 26470  012F72  0060  F033  FFE3   	movff	btemp+11,plusw1
 26471  012F78                     l7930:
 26472                           
 26473                           ;stkvar	_aexp @ sp[(-13)+11]
 26474  012F78  0EFE               	movlw	-2
 26475  012F7A  50E3               	movf	plusw1,w,c
 26476  012F7C  B4D8               	btfsc	status,2,c
 26477  012F7E  D004               	goto	u6430
 26478                           
 26479                           ;stkvar	_bexp @ sp[(-13)+10]
 26480  012F80  0EFD               	movlw	-3
 26481  012F82  50E3               	movf	plusw1,w,c
 26482  012F84  A4D8               	btfss	status,2,c
 26483  012F86  D009               	goto	l7938
 26484  012F88                     u6430:
 26485  012F88  0E00               	movlw	0
 26486  012F8A  6E01               	movwf	btemp^0,c
 26487  012F8C  0E00               	movlw	0
 26488  012F8E  6E02               	movwf	(btemp+1)^0,c
 26489  012F90  0E00               	movlw	0
 26490  012F92  6E03               	movwf	(btemp+2)^0,c
 26491  012F94  0E00               	movlw	0
 26492  012F96  6E04               	movwf	(btemp+3)^0,c
 26493  012F98  D332               	goto	l2939
 26494  012F9A                     l7938:
 26495                           
 26496                           ;stkvar	_b @ sp[(-13)+-4]
 26497  012F9A  0EEF               	movlw	-17
 26498  012F9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26499                           
 26500                           ;stkvar	_a @ sp[(-13)+-8]
 26501  012FA2  0EED               	movlw	237
 26502  012FA4  24E1               	addwf	fsr1l,w,c
 26503  012FA6  6ED9               	movwf	fsr2l,c
 26504  012FA8  0EFF               	movlw	255
 26505  012FAA  20E2               	addwfc	fsr1h,w,c
 26506  012FAC  6EDA               	movwf	fsr2h,c
 26507  012FAE  50DF               	movf	indf2,w,c
 26508  012FB0  020C               	mulwf	(btemp+11)^0,c
 26509                           
 26510                           ;stkvar	_temp @ sp[(-13)+8]
 26511  012FB2  0EFB               	movlw	-5
 26512  012FB4  006F FFCF FFE3     	movff	prodl,plusw1
 26513  012FBA  0EFC               	movlw	-4
 26514  012FBC  006F FFD3 FFE3     	movff	prodh,plusw1
 26515                           
 26516                           ;stkvar	_temp @ sp[(-13)+8]
 26517  012FC2  0EFB               	movlw	-5
 26518  012FC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26519  012FCA  0060  F030  F005   	movff	btemp+11,btemp+4
 26520  012FD0  6A06               	clrf	(btemp+5)^0,c
 26521  012FD2  6A07               	clrf	(btemp+6)^0,c
 26522  012FD4  6A08               	clrf	(btemp+7)^0,c
 26523                           
 26524                           ;stkvar	_grs @ sp[(-13)+4]
 26525  012FD6  0EF7               	movlw	-9
 26526  012FD8  0060  F017  FFE3   	movff	btemp+4,plusw1
 26527  012FDE  0EF8               	movlw	-8
 26528  012FE0  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26529  012FE6  0EF9               	movlw	-7
 26530  012FE8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26531  012FEE  0EFA               	movlw	-6
 26532  012FF0  0060  F023  FFE3   	movff	btemp+7,plusw1
 26533                           
 26534                           ;stkvar	_temp @ sp[(-13)+8]
 26535  012FF6  0EFC               	movlw	252
 26536  012FF8  24E1               	addwf	fsr1l,w,c
 26537  012FFA  6ED9               	movwf	fsr2l,c
 26538  012FFC  0EFF               	movlw	255
 26539  012FFE  20E2               	addwfc	fsr1h,w,c
 26540  013000  6EDA               	movwf	fsr2h,c
 26541  013002  50DF               	movf	indf2,w,c
 26542  013004  6E0C               	movwf	(btemp+11)^0,c
 26543  013006  0060  F030  F005   	movff	btemp+11,btemp+4
 26544  01300C  6A06               	clrf	(btemp+5)^0,c
 26545  01300E  6A07               	clrf	(btemp+6)^0,c
 26546  013010  6A08               	clrf	(btemp+7)^0,c
 26547                           
 26548                           ;stkvar	_prod @ sp[(-13)+0]
 26549  013012  0EF3               	movlw	-13
 26550  013014  0060  F017  FFE3   	movff	btemp+4,plusw1
 26551  01301A  0EF4               	movlw	-12
 26552  01301C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26553  013022  0EF5               	movlw	-11
 26554  013024  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26555  01302A  0EF6               	movlw	-10
 26556  01302C  0060  F023  FFE3   	movff	btemp+7,plusw1
 26557                           
 26558                           ;stkvar	_b @ sp[(-13)+-4]
 26559  013032  0EF0               	movlw	240
 26560  013034  24E1               	addwf	fsr1l,w,c
 26561  013036  6ED9               	movwf	fsr2l,c
 26562  013038  0EFF               	movlw	255
 26563  01303A  20E2               	addwfc	fsr1h,w,c
 26564  01303C  6EDA               	movwf	fsr2h,c
 26565  01303E  50DF               	movf	indf2,w,c
 26566  013040  6E0C               	movwf	(btemp+11)^0,c
 26567                           
 26568                           ;stkvar	_a @ sp[(-13)+-8]
 26569  013042  0EEC               	movlw	236
 26570  013044  24E1               	addwf	fsr1l,w,c
 26571  013046  6ED9               	movwf	fsr2l,c
 26572  013048  0EFF               	movlw	255
 26573  01304A  20E2               	addwfc	fsr1h,w,c
 26574  01304C  6EDA               	movwf	fsr2h,c
 26575  01304E  50DF               	movf	indf2,w,c
 26576  013050  020C               	mulwf	(btemp+11)^0,c
 26577                           
 26578                           ;stkvar	_temp @ sp[(-13)+8]
 26579  013052  0EFB               	movlw	-5
 26580  013054  006F FFCF FFE3     	movff	prodl,plusw1
 26581  01305A  0EFC               	movlw	-4
 26582  01305C  006F FFD3 FFE3     	movff	prodh,plusw1
 26583                           
 26584                           ;stkvar	_grs @ sp[(-13)+4]
 26585  013062  50E1               	movf	fsr1l,w,c
 26586  013064  0FF7               	addlw	-9
 26587  013066  6ED9               	movwf	fsr2l,c
 26588  013068  50E2               	movf	fsr1h,w,c
 26589  01306A  6EDA               	movwf	fsr2h,c
 26590  01306C  0EFF               	movlw	255
 26591  01306E  22DA               	addwfc	fsr2h,f,c
 26592                           
 26593                           ;stkvar	_temp @ sp[(-13)+8]
 26594  013070  0EFB               	movlw	-5
 26595  013072  50E3               	movf	plusw1,w,c
 26596  013074  26DE               	addwf	postinc2,f,c
 26597  013076  0E00               	movlw	0
 26598  013078  22DE               	addwfc	postinc2,f,c
 26599  01307A  22DE               	addwfc	postinc2,f,c
 26600  01307C  22DE               	addwfc	postinc2,f,c
 26601                           
 26602                           ;stkvar	_prod @ sp[(-13)+0]
 26603  01307E  50E1               	movf	fsr1l,w,c
 26604  013080  0FF3               	addlw	-13
 26605  013082  6ED9               	movwf	fsr2l,c
 26606  013084  50E2               	movf	fsr1h,w,c
 26607  013086  6EDA               	movwf	fsr2h,c
 26608  013088  0EFF               	movlw	255
 26609  01308A  22DA               	addwfc	fsr2h,f,c
 26610                           
 26611                           ;stkvar	_temp @ sp[(-13)+8]
 26612  01308C  0EFC               	movlw	252
 26613  01308E  24E1               	addwf	fsr1l,w,c
 26614  013090  6EE9               	movwf	fsr0l,c
 26615  013092  0EFF               	movlw	255
 26616  013094  20E2               	addwfc	fsr1h,w,c
 26617  013096  6EEA               	movwf	fsr0h,c
 26618  013098  50EF               	movf	indf0,w,c
 26619  01309A  26DE               	addwf	postinc2,f,c
 26620  01309C  0E00               	movlw	0
 26621  01309E  22DE               	addwfc	postinc2,f,c
 26622  0130A0  22DE               	addwfc	postinc2,f,c
 26623  0130A2  22DE               	addwfc	postinc2,f,c
 26624                           
 26625                           ;stkvar	_b @ sp[(-13)+-4]
 26626  0130A4  0EF1               	movlw	241
 26627  0130A6  24E1               	addwf	fsr1l,w,c
 26628  0130A8  6ED9               	movwf	fsr2l,c
 26629  0130AA  0EFF               	movlw	255
 26630  0130AC  20E2               	addwfc	fsr1h,w,c
 26631  0130AE  6EDA               	movwf	fsr2h,c
 26632  0130B0  50DF               	movf	indf2,w,c
 26633  0130B2  6E0C               	movwf	(btemp+11)^0,c
 26634                           
 26635                           ;stkvar	_a @ sp[(-13)+-8]
 26636  0130B4  0EEB               	movlw	-21
 26637  0130B6  50E3               	movf	plusw1,w,c
 26638  0130B8  020C               	mulwf	(btemp+11)^0,c
 26639                           
 26640                           ;stkvar	_temp @ sp[(-13)+8]
 26641  0130BA  0EFB               	movlw	-5
 26642  0130BC  006F FFCF FFE3     	movff	prodl,plusw1
 26643  0130C2  0EFC               	movlw	-4
 26644  0130C4  006F FFD3 FFE3     	movff	prodh,plusw1
 26645                           
 26646                           ;stkvar	_grs @ sp[(-13)+4]
 26647  0130CA  50E1               	movf	fsr1l,w,c
 26648  0130CC  0FF7               	addlw	-9
 26649  0130CE  6ED9               	movwf	fsr2l,c
 26650  0130D0  50E2               	movf	fsr1h,w,c
 26651  0130D2  6EDA               	movwf	fsr2h,c
 26652  0130D4  0EFF               	movlw	255
 26653  0130D6  22DA               	addwfc	fsr2h,f,c
 26654                           
 26655                           ;stkvar	_temp @ sp[(-13)+8]
 26656  0130D8  0EFB               	movlw	-5
 26657  0130DA  50E3               	movf	plusw1,w,c
 26658  0130DC  26DE               	addwf	postinc2,f,c
 26659  0130DE  0E00               	movlw	0
 26660  0130E0  22DE               	addwfc	postinc2,f,c
 26661  0130E2  22DE               	addwfc	postinc2,f,c
 26662  0130E4  22DE               	addwfc	postinc2,f,c
 26663                           
 26664                           ;stkvar	_prod @ sp[(-13)+0]
 26665  0130E6  50E1               	movf	fsr1l,w,c
 26666  0130E8  0FF3               	addlw	-13
 26667  0130EA  6ED9               	movwf	fsr2l,c
 26668  0130EC  50E2               	movf	fsr1h,w,c
 26669  0130EE  6EDA               	movwf	fsr2h,c
 26670  0130F0  0EFF               	movlw	255
 26671  0130F2  22DA               	addwfc	fsr2h,f,c
 26672                           
 26673                           ;stkvar	_temp @ sp[(-13)+8]
 26674  0130F4  0EFC               	movlw	252
 26675  0130F6  24E1               	addwf	fsr1l,w,c
 26676  0130F8  6EE9               	movwf	fsr0l,c
 26677  0130FA  0EFF               	movlw	255
 26678  0130FC  20E2               	addwfc	fsr1h,w,c
 26679  0130FE  6EEA               	movwf	fsr0h,c
 26680  013100  50EF               	movf	indf0,w,c
 26681  013102  26DE               	addwf	postinc2,f,c
 26682  013104  0E00               	movlw	0
 26683  013106  22DE               	addwfc	postinc2,f,c
 26684  013108  22DE               	addwfc	postinc2,f,c
 26685  01310A  22DE               	addwfc	postinc2,f,c
 26686                           
 26687                           ;stkvar	_grs @ sp[(-13)+4]
 26688  01310C  50E1               	movf	fsr1l,w,c
 26689  01310E  0FF7               	addlw	-9
 26690  013110  6ED9               	movwf	fsr2l,c
 26691  013112  50E2               	movf	fsr1h,w,c
 26692  013114  6EDA               	movwf	fsr2h,c
 26693  013116  0EFF               	movlw	255
 26694  013118  22DA               	addwfc	fsr2h,f,c
 26695  01311A  0E08               	movlw	8
 26696  01311C                     u6445:
 26697  01311C  90D8               	bcf	status,0,c
 26698  01311E  36DE               	rlcf	postinc2,f,c
 26699  013120  36DE               	rlcf	postinc2,f,c
 26700  013122  36DE               	rlcf	postinc2,f,c
 26701  013124  36DD               	rlcf	postdec2,f,c
 26702  013126  52DD               	movf	postdec2,f,c
 26703  013128  52DD               	movf	postdec2,f,c
 26704  01312A  2EE8               	decfsz	wreg,f,c
 26705  01312C  D7F7               	goto	u6445
 26706                           
 26707                           ;stkvar	_b @ sp[(-13)+-4]
 26708  01312E  0EF0               	movlw	240
 26709  013130  24E1               	addwf	fsr1l,w,c
 26710  013132  6ED9               	movwf	fsr2l,c
 26711  013134  0EFF               	movlw	255
 26712  013136  20E2               	addwfc	fsr1h,w,c
 26713  013138  6EDA               	movwf	fsr2h,c
 26714  01313A  50DF               	movf	indf2,w,c
 26715  01313C  6E0C               	movwf	(btemp+11)^0,c
 26716                           
 26717                           ;stkvar	_a @ sp[(-13)+-8]
 26718  01313E  0EEB               	movlw	-21
 26719  013140  50E3               	movf	plusw1,w,c
 26720  013142  020C               	mulwf	(btemp+11)^0,c
 26721                           
 26722                           ;stkvar	_temp @ sp[(-13)+8]
 26723  013144  0EFB               	movlw	-5
 26724  013146  006F FFCF FFE3     	movff	prodl,plusw1
 26725  01314C  0EFC               	movlw	-4
 26726  01314E  006F FFD3 FFE3     	movff	prodh,plusw1
 26727                           
 26728                           ;stkvar	_temp @ sp[(-13)+8]
 26729  013154  0EFB               	movlw	-5
 26730  013156  006F FF8C  F00B    	movff	plusw1,btemp+10
 26731  01315C  0EFC               	movlw	-4
 26732  01315E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26733                           
 26734                           ;stkvar	_grs @ sp[(-13)+4]
 26735  013164  50E1               	movf	fsr1l,w,c
 26736  013166  0FF7               	addlw	-9
 26737  013168  6ED9               	movwf	fsr2l,c
 26738  01316A  50E2               	movf	fsr1h,w,c
 26739  01316C  6EDA               	movwf	fsr2h,c
 26740  01316E  0EFF               	movlw	255
 26741  013170  22DA               	addwfc	fsr2h,f,c
 26742  013172  500B               	movf	(btemp+10)^0,w,c
 26743  013174  26DE               	addwf	postinc2,f,c
 26744  013176  500C               	movf	(btemp+11)^0,w,c
 26745  013178  22DE               	addwfc	postinc2,f,c
 26746  01317A  0E00               	movlw	0
 26747  01317C  22DE               	addwfc	postinc2,f,c
 26748  01317E  22DE               	addwfc	postinc2,f,c
 26749                           
 26750                           ;stkvar	_b @ sp[(-13)+-4]
 26751  013180  0EEF               	movlw	-17
 26752  013182  006F FF8C  F00C    	movff	plusw1,btemp+11
 26753                           
 26754                           ;stkvar	_a @ sp[(-13)+-8]
 26755  013188  0EEC               	movlw	236
 26756  01318A  24E1               	addwf	fsr1l,w,c
 26757  01318C  6ED9               	movwf	fsr2l,c
 26758  01318E  0EFF               	movlw	255
 26759  013190  20E2               	addwfc	fsr1h,w,c
 26760  013192  6EDA               	movwf	fsr2h,c
 26761  013194  50DF               	movf	indf2,w,c
 26762  013196  020C               	mulwf	(btemp+11)^0,c
 26763                           
 26764                           ;stkvar	_temp @ sp[(-13)+8]
 26765  013198  0EFB               	movlw	-5
 26766  01319A  006F FFCF FFE3     	movff	prodl,plusw1
 26767  0131A0  0EFC               	movlw	-4
 26768  0131A2  006F FFD3 FFE3     	movff	prodh,plusw1
 26769                           
 26770                           ;stkvar	_temp @ sp[(-13)+8]
 26771  0131A8  0EFB               	movlw	-5
 26772  0131AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 26773  0131B0  0EFC               	movlw	-4
 26774  0131B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 26775                           
 26776                           ;stkvar	_grs @ sp[(-13)+4]
 26777  0131B8  50E1               	movf	fsr1l,w,c
 26778  0131BA  0FF7               	addlw	-9
 26779  0131BC  6ED9               	movwf	fsr2l,c
 26780  0131BE  50E2               	movf	fsr1h,w,c
 26781  0131C0  6EDA               	movwf	fsr2h,c
 26782  0131C2  0EFF               	movlw	255
 26783  0131C4  22DA               	addwfc	fsr2h,f,c
 26784  0131C6  500B               	movf	(btemp+10)^0,w,c
 26785  0131C8  26DE               	addwf	postinc2,f,c
 26786  0131CA  500C               	movf	(btemp+11)^0,w,c
 26787  0131CC  22DE               	addwfc	postinc2,f,c
 26788  0131CE  0E00               	movlw	0
 26789  0131D0  22DE               	addwfc	postinc2,f,c
 26790  0131D2  22DE               	addwfc	postinc2,f,c
 26791                           
 26792                           ;stkvar	_grs @ sp[(-13)+4]
 26793  0131D4  50E1               	movf	fsr1l,w,c
 26794  0131D6  0FF7               	addlw	-9
 26795  0131D8  6ED9               	movwf	fsr2l,c
 26796  0131DA  50E2               	movf	fsr1h,w,c
 26797  0131DC  6EDA               	movwf	fsr2h,c
 26798  0131DE  0EFF               	movlw	255
 26799  0131E0  22DA               	addwfc	fsr2h,f,c
 26800  0131E2  0E08               	movlw	8
 26801  0131E4                     u6455:
 26802  0131E4  90D8               	bcf	status,0,c
 26803  0131E6  36DE               	rlcf	postinc2,f,c
 26804  0131E8  36DE               	rlcf	postinc2,f,c
 26805  0131EA  36DE               	rlcf	postinc2,f,c
 26806  0131EC  36DD               	rlcf	postdec2,f,c
 26807  0131EE  52DD               	movf	postdec2,f,c
 26808  0131F0  52DD               	movf	postdec2,f,c
 26809  0131F2  2EE8               	decfsz	wreg,f,c
 26810  0131F4  D7F7               	goto	u6455
 26811                           
 26812                           ;stkvar	_b @ sp[(-13)+-4]
 26813  0131F6  0EEF               	movlw	-17
 26814  0131F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 26815                           
 26816                           ;stkvar	_a @ sp[(-13)+-8]
 26817  0131FE  0EEB               	movlw	-21
 26818  013200  50E3               	movf	plusw1,w,c
 26819  013202  020C               	mulwf	(btemp+11)^0,c
 26820                           
 26821                           ;stkvar	_temp @ sp[(-13)+8]
 26822  013204  0EFB               	movlw	-5
 26823  013206  006F FFCF FFE3     	movff	prodl,plusw1
 26824  01320C  0EFC               	movlw	-4
 26825  01320E  006F FFD3 FFE3     	movff	prodh,plusw1
 26826                           
 26827                           ;stkvar	_temp @ sp[(-13)+8]
 26828  013214  0EFB               	movlw	-5
 26829  013216  006F FF8C  F00B    	movff	plusw1,btemp+10
 26830  01321C  0EFC               	movlw	-4
 26831  01321E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26832                           
 26833                           ;stkvar	_grs @ sp[(-13)+4]
 26834  013224  50E1               	movf	fsr1l,w,c
 26835  013226  0FF7               	addlw	-9
 26836  013228  6ED9               	movwf	fsr2l,c
 26837  01322A  50E2               	movf	fsr1h,w,c
 26838  01322C  6EDA               	movwf	fsr2h,c
 26839  01322E  0EFF               	movlw	255
 26840  013230  22DA               	addwfc	fsr2h,f,c
 26841  013232  500B               	movf	(btemp+10)^0,w,c
 26842  013234  26DE               	addwf	postinc2,f,c
 26843  013236  500C               	movf	(btemp+11)^0,w,c
 26844  013238  22DE               	addwfc	postinc2,f,c
 26845  01323A  0E00               	movlw	0
 26846  01323C  22DE               	addwfc	postinc2,f,c
 26847  01323E  22DE               	addwfc	postinc2,f,c
 26848                           
 26849                           ;stkvar	_b @ sp[(-13)+-4]
 26850  013240  0EF0               	movlw	240
 26851  013242  24E1               	addwf	fsr1l,w,c
 26852  013244  6ED9               	movwf	fsr2l,c
 26853  013246  0EFF               	movlw	255
 26854  013248  20E2               	addwfc	fsr1h,w,c
 26855  01324A  6EDA               	movwf	fsr2h,c
 26856  01324C  50DF               	movf	indf2,w,c
 26857  01324E  6E0C               	movwf	(btemp+11)^0,c
 26858                           
 26859                           ;stkvar	_a @ sp[(-13)+-8]
 26860  013250  0EED               	movlw	237
 26861  013252  24E1               	addwf	fsr1l,w,c
 26862  013254  6ED9               	movwf	fsr2l,c
 26863  013256  0EFF               	movlw	255
 26864  013258  20E2               	addwfc	fsr1h,w,c
 26865  01325A  6EDA               	movwf	fsr2h,c
 26866  01325C  50DF               	movf	indf2,w,c
 26867  01325E  020C               	mulwf	(btemp+11)^0,c
 26868                           
 26869                           ;stkvar	_temp @ sp[(-13)+8]
 26870  013260  0EFB               	movlw	-5
 26871  013262  006F FFCF FFE3     	movff	prodl,plusw1
 26872  013268  0EFC               	movlw	-4
 26873  01326A  006F FFD3 FFE3     	movff	prodh,plusw1
 26874                           
 26875                           ;stkvar	_temp @ sp[(-13)+8]
 26876  013270  0EFB               	movlw	-5
 26877  013272  006F FF8C  F00B    	movff	plusw1,btemp+10
 26878  013278  0EFC               	movlw	-4
 26879  01327A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26880                           
 26881                           ;stkvar	_prod @ sp[(-13)+0]
 26882  013280  50E1               	movf	fsr1l,w,c
 26883  013282  0FF3               	addlw	-13
 26884  013284  6ED9               	movwf	fsr2l,c
 26885  013286  50E2               	movf	fsr1h,w,c
 26886  013288  6EDA               	movwf	fsr2h,c
 26887  01328A  0EFF               	movlw	255
 26888  01328C  22DA               	addwfc	fsr2h,f,c
 26889  01328E  500B               	movf	(btemp+10)^0,w,c
 26890  013290  26DE               	addwf	postinc2,f,c
 26891  013292  500C               	movf	(btemp+11)^0,w,c
 26892  013294  22DE               	addwfc	postinc2,f,c
 26893  013296  0E00               	movlw	0
 26894  013298  22DE               	addwfc	postinc2,f,c
 26895  01329A  22DE               	addwfc	postinc2,f,c
 26896                           
 26897                           ;stkvar	_b @ sp[(-13)+-4]
 26898  01329C  0EF1               	movlw	241
 26899  01329E  24E1               	addwf	fsr1l,w,c
 26900  0132A0  6ED9               	movwf	fsr2l,c
 26901  0132A2  0EFF               	movlw	255
 26902  0132A4  20E2               	addwfc	fsr1h,w,c
 26903  0132A6  6EDA               	movwf	fsr2h,c
 26904  0132A8  50DF               	movf	indf2,w,c
 26905  0132AA  6E0C               	movwf	(btemp+11)^0,c
 26906                           
 26907                           ;stkvar	_a @ sp[(-13)+-8]
 26908  0132AC  0EEC               	movlw	236
 26909  0132AE  24E1               	addwf	fsr1l,w,c
 26910  0132B0  6ED9               	movwf	fsr2l,c
 26911  0132B2  0EFF               	movlw	255
 26912  0132B4  20E2               	addwfc	fsr1h,w,c
 26913  0132B6  6EDA               	movwf	fsr2h,c
 26914  0132B8  50DF               	movf	indf2,w,c
 26915  0132BA  020C               	mulwf	(btemp+11)^0,c
 26916                           
 26917                           ;stkvar	_temp @ sp[(-13)+8]
 26918  0132BC  0EFB               	movlw	-5
 26919  0132BE  006F FFCF FFE3     	movff	prodl,plusw1
 26920  0132C4  0EFC               	movlw	-4
 26921  0132C6  006F FFD3 FFE3     	movff	prodh,plusw1
 26922                           
 26923                           ;stkvar	_temp @ sp[(-13)+8]
 26924  0132CC  0EFB               	movlw	-5
 26925  0132CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 26926  0132D4  0EFC               	movlw	-4
 26927  0132D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26928                           
 26929                           ;stkvar	_prod @ sp[(-13)+0]
 26930  0132DC  50E1               	movf	fsr1l,w,c
 26931  0132DE  0FF3               	addlw	-13
 26932  0132E0  6ED9               	movwf	fsr2l,c
 26933  0132E2  50E2               	movf	fsr1h,w,c
 26934  0132E4  6EDA               	movwf	fsr2h,c
 26935  0132E6  0EFF               	movlw	255
 26936  0132E8  22DA               	addwfc	fsr2h,f,c
 26937  0132EA  500B               	movf	(btemp+10)^0,w,c
 26938  0132EC  26DE               	addwf	postinc2,f,c
 26939  0132EE  500C               	movf	(btemp+11)^0,w,c
 26940  0132F0  22DE               	addwfc	postinc2,f,c
 26941  0132F2  0E00               	movlw	0
 26942  0132F4  22DE               	addwfc	postinc2,f,c
 26943  0132F6  22DE               	addwfc	postinc2,f,c
 26944                           
 26945                           ;stkvar	_b @ sp[(-13)+-4]
 26946  0132F8  0EF1               	movlw	241
 26947  0132FA  24E1               	addwf	fsr1l,w,c
 26948  0132FC  6ED9               	movwf	fsr2l,c
 26949  0132FE  0EFF               	movlw	255
 26950  013300  20E2               	addwfc	fsr1h,w,c
 26951  013302  6EDA               	movwf	fsr2h,c
 26952  013304  50DF               	movf	indf2,w,c
 26953  013306  6E0C               	movwf	(btemp+11)^0,c
 26954                           
 26955                           ;stkvar	_a @ sp[(-13)+-8]
 26956  013308  0EED               	movlw	237
 26957  01330A  24E1               	addwf	fsr1l,w,c
 26958  01330C  6ED9               	movwf	fsr2l,c
 26959  01330E  0EFF               	movlw	255
 26960  013310  20E2               	addwfc	fsr1h,w,c
 26961  013312  6EDA               	movwf	fsr2h,c
 26962  013314  50DF               	movf	indf2,w,c
 26963  013316  020C               	mulwf	(btemp+11)^0,c
 26964                           
 26965                           ;stkvar	_temp @ sp[(-13)+8]
 26966  013318  0EFB               	movlw	-5
 26967  01331A  006F FFCF FFE3     	movff	prodl,plusw1
 26968  013320  0EFC               	movlw	-4
 26969  013322  006F FFD3 FFE3     	movff	prodh,plusw1
 26970                           
 26971                           ;stkvar	_temp @ sp[(-13)+8]
 26972  013328  0EFB               	movlw	-5
 26973  01332A  006F FF8C  F00B    	movff	plusw1,btemp+10
 26974  013330  0EFC               	movlw	-4
 26975  013332  006F FF8C  F00C    	movff	plusw1,btemp+11
 26976  013338  500B               	movf	(btemp+10)^0,w,c
 26977  01333A  6E05               	movwf	(btemp+4)^0,c
 26978  01333C  500C               	movf	(btemp+11)^0,w,c
 26979  01333E  6E06               	movwf	(btemp+5)^0,c
 26980  013340  6A07               	clrf	(btemp+6)^0,c
 26981  013342  6A08               	clrf	(btemp+7)^0,c
 26982  013344  0060  F01C  F008   	movff	btemp+6,btemp+7
 26983  01334A  0060  F018  F007   	movff	btemp+5,btemp+6
 26984  013350  0060  F014  F006   	movff	btemp+4,btemp+5
 26985  013356  6A05               	clrf	(btemp+4)^0,c
 26986                           
 26987                           ;stkvar	_prod @ sp[(-13)+0]
 26988  013358  50E1               	movf	fsr1l,w,c
 26989  01335A  0FF3               	addlw	-13
 26990  01335C  6ED9               	movwf	fsr2l,c
 26991  01335E  50E2               	movf	fsr1h,w,c
 26992  013360  6EDA               	movwf	fsr2h,c
 26993  013362  0EFF               	movlw	255
 26994  013364  22DA               	addwfc	fsr2h,f,c
 26995  013366  5005               	movf	(btemp+4)^0,w,c
 26996  013368  26DE               	addwf	postinc2,f,c
 26997  01336A  5006               	movf	(btemp+5)^0,w,c
 26998  01336C  22DE               	addwfc	postinc2,f,c
 26999  01336E  5007               	movf	(btemp+6)^0,w,c
 27000  013370  22DE               	addwfc	postinc2,f,c
 27001  013372  5008               	movf	(btemp+7)^0,w,c
 27002  013374  22DE               	addwfc	postinc2,f,c
 27003                           
 27004                           ;stkvar	_prod @ sp[(-13)+0]
 27005  013376  50E1               	movf	fsr1l,w,c
 27006  013378  0FF3               	addlw	-13
 27007  01337A  6ED9               	movwf	fsr2l,c
 27008  01337C  50E2               	movf	fsr1h,w,c
 27009  01337E  6EDA               	movwf	fsr2h,c
 27010  013380  0EFF               	movlw	255
 27011  013382  22DA               	addwfc	fsr2h,f,c
 27012                           
 27013                           ;stkvar	_grs @ sp[(-13)+4]
 27014  013384  0EFA               	movlw	250
 27015  013386  24E1               	addwf	fsr1l,w,c
 27016  013388  6EE9               	movwf	fsr0l,c
 27017  01338A  0EFF               	movlw	255
 27018  01338C  20E2               	addwfc	fsr1h,w,c
 27019  01338E  6EEA               	movwf	fsr0h,c
 27020  013390  50EF               	movf	indf0,w,c
 27021  013392  26DE               	addwf	postinc2,f,c
 27022  013394  0E00               	movlw	0
 27023  013396  22DE               	addwfc	postinc2,f,c
 27024  013398  22DE               	addwfc	postinc2,f,c
 27025  01339A  22DE               	addwfc	postinc2,f,c
 27026                           
 27027                           ;stkvar	_grs @ sp[(-13)+4]
 27028  01339C  50E1               	movf	fsr1l,w,c
 27029  01339E  0FF7               	addlw	-9
 27030  0133A0  6ED9               	movwf	fsr2l,c
 27031  0133A2  50E2               	movf	fsr1h,w,c
 27032  0133A4  6EDA               	movwf	fsr2h,c
 27033  0133A6  0EFF               	movlw	255
 27034  0133A8  22DA               	addwfc	fsr2h,f,c
 27035  0133AA  0E08               	movlw	8
 27036  0133AC                     u6465:
 27037  0133AC  90D8               	bcf	status,0,c
 27038  0133AE  36DE               	rlcf	postinc2,f,c
 27039  0133B0  36DE               	rlcf	postinc2,f,c
 27040  0133B2  36DE               	rlcf	postinc2,f,c
 27041  0133B4  36DD               	rlcf	postdec2,f,c
 27042  0133B6  52DD               	movf	postdec2,f,c
 27043  0133B8  52DD               	movf	postdec2,f,c
 27044  0133BA  2EE8               	decfsz	wreg,f,c
 27045  0133BC  D7F7               	goto	u6465
 27046  0133BE  0E82               	movlw	130
 27047  0133C0  6E0B               	movwf	(btemp+10)^0,c
 27048  0133C2  0EFF               	movlw	255
 27049  0133C4  6E0C               	movwf	(btemp+11)^0,c
 27050                           
 27051                           ;stkvar	_bexp @ sp[(-13)+10]
 27052  0133C6  0EFD               	movlw	-3
 27053  0133C8  50E3               	movf	plusw1,w,c
 27054  0133CA  6E09               	movwf	(btemp+8)^0,c
 27055  0133CC  6A0A               	clrf	(btemp+9)^0,c
 27056                           
 27057                           ;stkvar	_aexp @ sp[(-13)+11]
 27058  0133CE  0EFE               	movlw	-2
 27059  0133D0  50E3               	movf	plusw1,w,c
 27060  0133D2  2609               	addwf	(btemp+8)^0,f,c
 27061  0133D4  0E00               	movlw	0
 27062  0133D6  220A               	addwfc	(btemp+9)^0,f,c
 27063  0133D8  500B               	movf	(btemp+10)^0,w,c
 27064  0133DA  2609               	addwf	(btemp+8)^0,f,c
 27065  0133DC  500C               	movf	(btemp+11)^0,w,c
 27066  0133DE  220A               	addwfc	(btemp+9)^0,f,c
 27067                           
 27068                           ;stkvar	_temp @ sp[(-13)+8]
 27069  0133E0  0EFB               	movlw	-5
 27070  0133E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27071  0133E8  0EFC               	movlw	-4
 27072  0133EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27073  0133F0  D021               	goto	l8000
 27074  0133F2                     l7990:
 27075                           
 27076                           ;stkvar	_prod @ sp[(-13)+0]
 27077  0133F2  90D8               	bcf	status,0,c
 27078  0133F4  0EF3               	movlw	-13
 27079  0133F6  36E3               	rlcf	plusw1,f,c
 27080  0133F8  0EF4               	movlw	-12
 27081  0133FA  36E3               	rlcf	plusw1,f,c
 27082  0133FC  0EF5               	movlw	-11
 27083  0133FE  36E3               	rlcf	plusw1,f,c
 27084  013400  0EF6               	movlw	-10
 27085  013402  36E3               	rlcf	plusw1,f,c
 27086                           
 27087                           ;stkvar	_grs @ sp[(-13)+4]
 27088  013404  0EFA               	movlw	-6
 27089  013406  AEE3               	btfss	plusw1,7,c
 27090  013408  D002               	goto	l7996
 27091                           
 27092                           ;stkvar	_prod @ sp[(-13)+0]
 27093  01340A  0EF3               	movlw	-13
 27094  01340C  80E3               	bsf	plusw1,0,c
 27095  01340E                     l7996:
 27096                           
 27097                           ;stkvar	_grs @ sp[(-13)+4]
 27098  01340E  90D8               	bcf	status,0,c
 27099  013410  0EF7               	movlw	-9
 27100  013412  36E3               	rlcf	plusw1,f,c
 27101  013414  0EF8               	movlw	-8
 27102  013416  36E3               	rlcf	plusw1,f,c
 27103  013418  0EF9               	movlw	-7
 27104  01341A  36E3               	rlcf	plusw1,f,c
 27105  01341C  0EFA               	movlw	-6
 27106  01341E  36E3               	rlcf	plusw1,f,c
 27107                           
 27108                           ;stkvar	_temp @ sp[(-13)+8]
 27109  013420  50E1               	movf	fsr1l,w,c
 27110  013422  0FFB               	addlw	-5
 27111  013424  6ED9               	movwf	fsr2l,c
 27112  013426  50E2               	movf	fsr1h,w,c
 27113  013428  6EDA               	movwf	fsr2h,c
 27114  01342A  0EFF               	movlw	255
 27115  01342C  22DA               	addwfc	fsr2h,f,c
 27116  01342E  06DE               	decf	postinc2,f,c
 27117  013430  0E00               	movlw	0
 27118  013432  5ADD               	subwfb	postdec2,f,c
 27119  013434                     l8000:
 27120                           
 27121                           ;stkvar	_prod @ sp[(-13)+0]
 27122  013434  0EF5               	movlw	-11
 27123  013436  AEE3               	btfss	plusw1,7,c
 27124  013438  D7DC               	goto	l7990
 27125                           
 27126                           ;stkvar	_aexp @ sp[(-13)+11]
 27127  01343A  0EFE               	movlw	-2
 27128  01343C  6AE3               	clrf	plusw1,c
 27129                           
 27130                           ;stkvar	_grs @ sp[(-13)+4]
 27131  01343E  0EFA               	movlw	-6
 27132  013440  AEE3               	btfss	plusw1,7,c
 27133  013442  D020               	goto	l8014
 27134                           
 27135                           ;stkvar	_grs @ sp[(-13)+4]
 27136  013444  50E1               	movf	fsr1l,w,c
 27137  013446  0FF7               	addlw	-9
 27138  013448  6ED9               	movwf	fsr2l,c
 27139  01344A  50E2               	movf	fsr1h,w,c
 27140  01344C  6EDA               	movwf	fsr2h,c
 27141  01344E  0EFF               	movlw	255
 27142  013450  22DA               	addwfc	fsr2h,f,c
 27143  013452  0EFF               	movlw	255
 27144  013454  14DE               	andwf	postinc2,w,c
 27145  013456  6E09               	movwf	(btemp+8)^0,c
 27146  013458  0EFF               	movlw	255
 27147  01345A  14DE               	andwf	postinc2,w,c
 27148  01345C  6E0A               	movwf	(btemp+9)^0,c
 27149  01345E  0EFF               	movlw	255
 27150  013460  14DE               	andwf	postinc2,w,c
 27151  013462  6E0B               	movwf	(btemp+10)^0,c
 27152  013464  0E7F               	movlw	127
 27153  013466  14DE               	andwf	postinc2,w,c
 27154  013468  6E0C               	movwf	(btemp+11)^0,c
 27155  01346A  5009               	movf	(btemp+8)^0,w,c
 27156  01346C  100A               	iorwf	(btemp+9)^0,w,c
 27157  01346E  100B               	iorwf	(btemp+10)^0,w,c
 27158  013470  100C               	iorwf	(btemp+11)^0,w,c
 27159  013472  B4D8               	btfsc	status,2,c
 27160  013474  D004               	goto	l8010
 27161  013476                     u6500:
 27162                           
 27163                           ;stkvar	_aexp @ sp[(-13)+11]
 27164  013476  0EFE               	movlw	-2
 27165  013478  6AE3               	clrf	plusw1,c
 27166  01347A  2AE3               	incf	plusw1,f,c
 27167  01347C  D003               	goto	l8014
 27168  01347E                     l8010:
 27169                           
 27170                           ;stkvar	_prod @ sp[(-13)+0]
 27171  01347E  0EF3               	movlw	-13
 27172  013480  B0E3               	btfsc	plusw1,0,c
 27173  013482  D7F9               	goto	u6500
 27174  013484                     l8014:
 27175                           
 27176                           ;stkvar	_aexp @ sp[(-13)+11]
 27177  013484  0EFE               	movlw	-2
 27178  013486  50E3               	movf	plusw1,w,c
 27179  013488  B4D8               	btfsc	status,2,c
 27180  01348A  D036               	goto	l8024
 27181                           
 27182                           ;stkvar	_prod @ sp[(-13)+0]
 27183  01348C  50E1               	movf	fsr1l,w,c
 27184  01348E  0FF3               	addlw	-13
 27185  013490  6ED9               	movwf	fsr2l,c
 27186  013492  50E2               	movf	fsr1h,w,c
 27187  013494  6EDA               	movwf	fsr2h,c
 27188  013496  0EFF               	movlw	255
 27189  013498  22DA               	addwfc	fsr2h,f,c
 27190  01349A  2ADE               	incf	postinc2,f,c
 27191  01349C  0E00               	movlw	0
 27192  01349E  22DE               	addwfc	postinc2,f,c
 27193  0134A0  22DE               	addwfc	postinc2,f,c
 27194  0134A2  22DE               	addwfc	postinc2,f,c
 27195                           
 27196                           ;stkvar	_prod @ sp[(-13)+0]
 27197  0134A4  0EF6               	movlw	-10
 27198  0134A6  A0E3               	btfss	plusw1,0,c
 27199  0134A8  D027               	goto	l8024
 27200  0134AA  0E01               	movlw	1
 27201  0134AC  6E0C               	movwf	(btemp+11)^0,c
 27202                           
 27203                           ;stkvar	_prod @ sp[(-13)+0]
 27204  0134AE  50E1               	movf	fsr1l,w,c
 27205  0134B0  0FF3               	addlw	-13
 27206  0134B2  6ED9               	movwf	fsr2l,c
 27207  0134B4  50E2               	movf	fsr1h,w,c
 27208  0134B6  6EDA               	movwf	fsr2h,c
 27209  0134B8  0EFF               	movlw	255
 27210  0134BA  22DA               	addwfc	fsr2h,f,c
 27211  0134BC  280C               	incf	(btemp+11)^0,w,c
 27212  0134BE  52DE               	movf	postinc2,f,c
 27213  0134C0  D008               	goto	u6540
 27214  0134C2                     u6545:
 27215  0134C2  52DE               	movf	postinc2,f,c
 27216  0134C4  90D8               	bcf	status,0,c
 27217  0134C6  BEDC               	btfsc	preinc2,7,c
 27218  0134C8  80D8               	bsf	status,0,c
 27219  0134CA  32DD               	rrcf	postdec2,f,c
 27220  0134CC  32DD               	rrcf	postdec2,f,c
 27221  0134CE  32DD               	rrcf	postdec2,f,c
 27222  0134D0  32DE               	rrcf	postinc2,f,c
 27223  0134D2                     u6540:
 27224  0134D2  2EE8               	decfsz	wreg,f,c
 27225  0134D4  D7F6               	goto	u6545
 27226                           
 27227                           ;stkvar	_temp @ sp[(-13)+8]
 27228  0134D6  0EFB               	movlw	-5
 27229  0134D8  50E3               	movf	plusw1,w,c
 27230  0134DA  0F01               	addlw	1
 27231  0134DC  6E01               	movwf	btemp^0,c
 27232  0134DE  0EFB               	movlw	-5
 27233  0134E0  0060  F007  FFE3   	movff	btemp,plusw1
 27234  0134E6  6A01               	clrf	btemp^0,c
 27235  0134E8  0EFC               	movlw	-4
 27236  0134EA  50E3               	movf	plusw1,w,c
 27237  0134EC  2001               	addwfc	btemp^0,w,c
 27238  0134EE  6E01               	movwf	btemp^0,c
 27239  0134F0  0EFC               	movlw	-4
 27240  0134F2  0060  F007  FFE3   	movff	btemp,plusw1
 27241  0134F8                     l8024:
 27242                           
 27243                           ;stkvar	_temp @ sp[(-13)+8]
 27244  0134F8  0EFC               	movlw	-4
 27245  0134FA  BEE3               	btfsc	plusw1,7,c
 27246  0134FC  D020               	goto	l8028
 27247  0134FE  0EFC               	movlw	-4
 27248  013500  50E3               	movf	plusw1,w,c
 27249  013502  E104               	bnz	u6550
 27250  013504  0EFB               	movlw	-5
 27251  013506  28E3               	incf	plusw1,w,c
 27252  013508  A0D8               	btfss	status,0,c
 27253  01350A  D019               	goto	l8028
 27254  01350C                     u6550:
 27255  01350C  0E00               	movlw	0
 27256  01350E  6E09               	movwf	(btemp+8)^0,c
 27257  013510  0E00               	movlw	0
 27258  013512  6E0A               	movwf	(btemp+9)^0,c
 27259  013514  0E80               	movlw	128
 27260  013516  6E0B               	movwf	(btemp+10)^0,c
 27261  013518  0E7F               	movlw	127
 27262  01351A  6E0C               	movwf	(btemp+11)^0,c
 27263                           
 27264                           ;stkvar	_prod @ sp[(-13)+0]
 27265  01351C  0EF3               	movlw	-13
 27266  01351E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27267  013524  0EF4               	movlw	-12
 27268  013526  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27269  01352C  0EF5               	movlw	-11
 27270  01352E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27271  013534  0EF6               	movlw	-10
 27272  013536  0060  F033  FFE3   	movff	btemp+11,plusw1
 27273  01353C  D044               	goto	l8044
 27274  01353E                     l8028:
 27275                           
 27276                           ;stkvar	_temp @ sp[(-13)+8]
 27277  01353E  0EFC               	movlw	-4
 27278  013540  BEE3               	btfsc	plusw1,7,c
 27279  013542  D007               	goto	u6560
 27280  013544  0EFC               	movlw	-4
 27281  013546  50E3               	movf	plusw1,w,c
 27282  013548  E10F               	bnz	l8034
 27283  01354A  0EFB               	movlw	-5
 27284  01354C  04E3               	decf	plusw1,w,c
 27285  01354E  B0D8               	btfsc	status,0,c
 27286  013550  D00B               	goto	l8034
 27287  013552                     u6560:
 27288                           
 27289                           ;stkvar	_prod @ sp[(-13)+0]
 27290  013552  0EF3               	movlw	-13
 27291  013554  6AE3               	clrf	plusw1,c
 27292  013556  0EF4               	movlw	-12
 27293  013558  6AE3               	clrf	plusw1,c
 27294  01355A  0EF5               	movlw	-11
 27295  01355C  6AE3               	clrf	plusw1,c
 27296  01355E  0EF6               	movlw	-10
 27297  013560  6AE3               	clrf	plusw1,c
 27298                           
 27299                           ;stkvar	_sign @ sp[(-13)+12]
 27300  013562  0EFF               	movlw	-1
 27301  013564  6AE3               	clrf	plusw1,c
 27302  013566  D02F               	goto	l8044
 27303  013568                     l8034:
 27304                           
 27305                           ;stkvar	_temp @ sp[(-13)+8]
 27306                           ;stkvar	_bexp @ sp[(-13)+10]
 27307  013568  0EFB               	movlw	-5
 27308  01356A  006F FF8C  F001    	movff	plusw1,btemp
 27309  013570  0EFD               	movlw	-3
 27310  013572  0060  F007  FFE3   	movff	btemp,plusw1
 27311                           
 27312                           ;stkvar	_prod @ sp[(-13)+0]
 27313  013578  50E1               	movf	fsr1l,w,c
 27314  01357A  0FF3               	addlw	-13
 27315  01357C  6ED9               	movwf	fsr2l,c
 27316  01357E  50E2               	movf	fsr1h,w,c
 27317  013580  6EDA               	movwf	fsr2h,c
 27318  013582  0EFF               	movlw	255
 27319  013584  22DA               	addwfc	fsr2h,f,c
 27320  013586  0EFF               	movlw	255
 27321  013588  16DE               	andwf	postinc2,f,c
 27322  01358A  0EFF               	movlw	255
 27323  01358C  16DE               	andwf	postinc2,f,c
 27324  01358E  0E7F               	movlw	127
 27325  013590  16DE               	andwf	postinc2,f,c
 27326  013592  0E00               	movlw	0
 27327  013594  16DE               	andwf	postinc2,f,c
 27328                           
 27329                           ;stkvar	_bexp @ sp[(-13)+10]
 27330  013596  0EFD               	movlw	-3
 27331  013598  A0E3               	btfss	plusw1,0,c
 27332  01359A  D008               	goto	l8042
 27333                           
 27334                           ;stkvar	_prod @ sp[(-13)+0]
 27335  01359C  0EF5               	movlw	245
 27336  01359E  24E1               	addwf	fsr1l,w,c
 27337  0135A0  6ED9               	movwf	fsr2l,c
 27338  0135A2  0EFF               	movlw	255
 27339  0135A4  20E2               	addwfc	fsr1h,w,c
 27340  0135A6  6EDA               	movwf	fsr2h,c
 27341  0135A8  0E00               	movlw	0
 27342  0135AA  8EDB               	bsf	plusw2,7,c
 27343  0135AC                     l8042:
 27344                           
 27345                           ;stkvar	_prod @ sp[(-13)+0]
 27346  0135AC  0EF6               	movlw	246
 27347  0135AE  24E1               	addwf	fsr1l,w,c
 27348  0135B0  6ED9               	movwf	fsr2l,c
 27349  0135B2  0EFF               	movlw	255
 27350  0135B4  20E2               	addwfc	fsr1h,w,c
 27351  0135B6  6EDA               	movwf	fsr2h,c
 27352                           
 27353                           ;stkvar	_bexp @ sp[(-13)+10]
 27354  0135B8  0EFD               	movlw	-3
 27355  0135BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27356  0135C0  90D8               	bcf	status,0,c
 27357  0135C2  300C               	rrcf	(btemp+11)^0,w,c
 27358  0135C4  6EDF               	movwf	indf2,c
 27359  0135C6                     l8044:
 27360                           
 27361                           ;stkvar	_sign @ sp[(-13)+12]
 27362  0135C6  0EFF               	movlw	-1
 27363  0135C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27364                           
 27365                           ;stkvar	_prod @ sp[(-13)+0]
 27366  0135CE  0EF6               	movlw	246
 27367  0135D0  24E1               	addwf	fsr1l,w,c
 27368  0135D2  6ED9               	movwf	fsr2l,c
 27369  0135D4  0EFF               	movlw	255
 27370  0135D6  20E2               	addwfc	fsr1h,w,c
 27371  0135D8  6EDA               	movwf	fsr2h,c
 27372  0135DA  500C               	movf	(btemp+11)^0,w,c
 27373  0135DC  12DF               	iorwf	indf2,f,c
 27374                           
 27375                           ;stkvar	_prod @ sp[(-13)+0]
 27376  0135DE  0EF3               	movlw	-13
 27377  0135E0  006F FF8C  F001    	movff	plusw1,btemp
 27378  0135E6  0EF4               	movlw	-12
 27379  0135E8  006F FF8C  F002    	movff	plusw1,btemp+1
 27380  0135EE  0EF5               	movlw	-11
 27381  0135F0  006F FF8C  F003    	movff	plusw1,btemp+2
 27382  0135F6  0EF6               	movlw	-10
 27383  0135F8  006F FF8C  F004    	movff	plusw1,btemp+3
 27384  0135FE                     l2939:
 27385                           
 27386                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 27387  0135FE  0EEB               	movlw	235
 27388  013600  26E1               	addwf	fsr1l,f,c
 27389  013602  0EFF               	movlw	255
 27390  013604  22E2               	addwfc	fsr1h,f,c
 27391  013606  0012               	return		;funcret
 27392  013608                     __end_of___flmul:
 27393                           	opt callstack 0
 27394                           
 27395 ;; *************** function _SYSTEM_Initialize *****************
 27396 ;; Defined at:
 27397 ;;		line 50 in file "mcc_generated_files/mcc.c"
 27398 ;; Parameters:    Size  Location     Type
 27399 ;;		None
 27400 ;; Auto vars:     Size  Location     Type
 27401 ;;		None
 27402 ;; Return value:  Size  Location     Type
 27403 ;;                  1  [STACK] void 
 27404 ;; Registers used:
 27405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 27406 ;; Tracked objects:
 27407 ;;		On entry : 0/0
 27408 ;;		On exit  : 3F/3C
 27409 ;;		Unchanged: 0/0
 27410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27415 ;;Total ram usage:        0 bytes
 27416 ;; Hardware stack levels used:    1
 27417 ;; Hardware stack levels required when called:   17
 27418 ;; This function calls:
 27419 ;;		_ADCC_Initialize
 27420 ;;		_CLKREF_Initialize
 27421 ;;		_DMA1_Initialize
 27422 ;;		_DMA2_Initialize
 27423 ;;		_EXT_INT_Initialize
 27424 ;;		_FVR_Initialize
 27425 ;;		_INTERRUPT_Initialize
 27426 ;;		_OSCILLATOR_Initialize
 27427 ;;		_PIN_MANAGER_Initialize
 27428 ;;		_PMD_Initialize
 27429 ;;		_PWM8_Initialize
 27430 ;;		_SPI1_Initialize
 27431 ;;		_TMR2_Initialize
 27432 ;;		_TMR3_Initialize
 27433 ;;		_TMR5_Initialize
 27434 ;;		_TMR6_Initialize
 27435 ;;		_UART1_Initialize
 27436 ;;		_UART2_Initialize
 27437 ;; This function is called by:
 27438 ;;		_main
 27439 ;; This function uses a reentrant model
 27440 ;;
 27441                           
 27442                           	psect	text106
 27443  01A2FE                     __ptext106:
 27444                           	opt callstack 0
 27445  01A2FE                     _SYSTEM_Initialize:
 27446                           	opt callstack 13
 27447                           
 27448                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 27449                           
 27450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27451                           ;incstack = 0
 27452  01A2FE  EC5F  F0CF         	call	_INTERRUPT_Initialize	;wreg free
 27453                           
 27454                           ; BSR set to: 57
 27455                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 27456  01A302  ECAE  F0D7         	call	_PMD_Initialize	;wreg free
 27457                           
 27458                           ; BSR set to: 57
 27459                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 27460  01A306  EC27  F0CD         	call	_PIN_MANAGER_Initialize	;wreg free
 27461                           
 27462                           ; BSR set to: 58
 27463                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 27464  01A30A  ECA3  F0D7         	call	_OSCILLATOR_Initialize	;wreg free
 27465                           
 27466                           ; BSR set to: 57
 27467                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 27468  01A30E  EC23  F0D8         	call	_FVR_Initialize	;wreg free
 27469                           
 27470                           ; BSR set to: 62
 27471                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 27472  01A312  ECF4  F0CE         	call	_ADCC_Initialize	;wreg free
 27473                           
 27474                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 27475  01A316  EC98  F0D7         	call	_PWM8_Initialize	;wreg free
 27476                           
 27477                           ; BSR set to: 63
 27478                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 27479  01A31A  EC81  F0D7         	call	_TMR2_Initialize	;wreg free
 27480                           
 27481                           ; BSR set to: 57
 27482                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 27483  01A31E  ECFD  F0D3         	call	_EXT_INT_Initialize	;wreg free
 27484                           
 27485                           ; BSR set to: 57
 27486                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 27487  01A322  ECEA  F0D4         	call	_TMR6_Initialize	;wreg free
 27488                           
 27489                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 27490  01A326  EC54  F0D2         	call	_TMR3_Initialize	;wreg free
 27491                           
 27492                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 27493  01A32A  EC31  F0D2         	call	_TMR5_Initialize	;wreg free
 27494                           
 27495                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 27496  01A32E  EC0E  F0D2         	call	_UART1_Initialize	;wreg free
 27497                           
 27498                           ; BSR set to: 57
 27499                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 27500  01A332  EC26  F0D0         	call	_UART2_Initialize	;wreg free
 27501                           
 27502                           ; BSR set to: 57
 27503                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 27504  01A336  EC8D  F0D7         	call	_SPI1_Initialize	;wreg free
 27505                           
 27506                           ; BSR set to: 61
 27507                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 27508  01A33A  EC82  F0D0         	call	_DMA2_Initialize	;wreg free
 27509                           
 27510                           ; BSR set to: 59
 27511                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 27512  01A33E  ECBF  F0CE         	call	_DMA1_Initialize	;wreg free
 27513                           
 27514                           ; BSR set to: 59
 27515                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 27516  01A342  ECF7  F0D7         	call	_CLKREF_Initialize	;wreg free
 27517                           
 27518                           ; BSR set to: 60
 27519                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27520  01A346  0012               	return		;funcret
 27521  01A348                     __end_of_SYSTEM_Initialize:
 27522                           	opt callstack 0
 27523                           
 27524 ;; *************** function _UART2_Initialize *****************
 27525 ;; Defined at:
 27526 ;;		line 78 in file "mcc_generated_files/uart2.c"
 27527 ;; Parameters:    Size  Location     Type
 27528 ;;		None
 27529 ;; Auto vars:     Size  Location     Type
 27530 ;;		None
 27531 ;; Return value:  Size  Location     Type
 27532 ;;                  1  [STACK] void 
 27533 ;; Registers used:
 27534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27535 ;; Tracked objects:
 27536 ;;		On entry : 3F/39
 27537 ;;		On exit  : 3F/39
 27538 ;;		Unchanged: 0/0
 27539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27544 ;;Total ram usage:        0 bytes
 27545 ;; Hardware stack levels used:    1
 27546 ;; Hardware stack levels required when called:   16
 27547 ;; This function calls:
 27548 ;;		_UART2_SetRxInterruptHandler
 27549 ;;		_UART2_SetTxInterruptHandler
 27550 ;; This function is called by:
 27551 ;;		_SYSTEM_Initialize
 27552 ;; This function uses a reentrant model
 27553 ;;
 27554                           
 27555                           	psect	text107
 27556  01A04C                     __ptext107:
 27557                           	opt callstack 0
 27558  01A04C                     _UART2_Initialize:
 27559                           	opt callstack 13
 27560                           
 27561                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 27562                           
 27563                           ; BSR set to: 60
 27564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27565                           ;incstack = 0
 27566  01A04C  0139               	movlb	57	; () banked
 27567  01A04E  9596               	bcf	150,2,b	;volatile
 27568                           
 27569                           ; BSR set to: 57
 27570                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 27571  01A050  0E5E               	movlw	low _UART2_Receive_ISR
 27572  01A052  6EE6               	movwf	postinc1,c
 27573  01A054  0EAE               	movlw	high _UART2_Receive_ISR
 27574  01A056  6EE6               	movwf	postinc1,c
 27575  01A058  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 27576  01A05A  6EE6               	movwf	postinc1,c
 27577  01A05C  EC63  F0D5         	call	_UART2_SetRxInterruptHandler	;wreg free
 27578                           
 27579                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 27580  01A060  0139               	movlb	57	; () banked
 27581  01A062  9796               	bcf	150,3,b	;volatile
 27582                           
 27583                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 27584  01A064  0EA8               	movlw	low _UART2_Transmit_ISR
 27585  01A066  6EE6               	movwf	postinc1,c
 27586  01A068  0EA9               	movlw	high _UART2_Transmit_ISR
 27587  01A06A  6EE6               	movwf	postinc1,c
 27588  01A06C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 27589  01A06E  6EE6               	movwf	postinc1,c
 27590  01A070  EC4F  F0D5         	call	_UART2_SetTxInterruptHandler	;wreg free
 27591                           
 27592                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 27593  01A074  013D               	movlb	61	; () banked
 27594  01A076  6BD4               	clrf	212,b	;volatile
 27595                           
 27596                           ; BSR set to: 61
 27597                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 27598  01A078  6BD6               	clrf	214,b	;volatile
 27599                           
 27600                           ; BSR set to: 61
 27601                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 27602  01A07A  6BD8               	clrf	216,b	;volatile
 27603                           
 27604                           ; BSR set to: 61
 27605                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 27606  01A07C  0EB0               	movlw	176
 27607  01A07E  6FDA               	movwf	218,b	;volatile
 27608                           
 27609                           ; BSR set to: 61
 27610                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 27611  01A080  0E80               	movlw	128
 27612  01A082  6FDB               	movwf	219,b	;volatile
 27613                           
 27614                           ; BSR set to: 61
 27615                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 27616  01A084  6BDC               	clrf	220,b	;volatile
 27617                           
 27618                           ; BSR set to: 61
 27619                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 27620  01A086  0E82               	movlw	130
 27621  01A088  6FDD               	movwf	221,b	;volatile
 27622                           
 27623                           ; BSR set to: 61
 27624                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 27625  01A08A  0E06               	movlw	6
 27626  01A08C  6FDE               	movwf	222,b	;volatile
 27627                           
 27628                           ; BSR set to: 61
 27629                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 27630  01A08E  6BDF               	clrf	223,b	;volatile
 27631                           
 27632                           ; BSR set to: 61
 27633                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 27634  01A090  6BE0               	clrf	224,b	;volatile
 27635                           
 27636                           ; BSR set to: 61
 27637                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 27638  01A092  6BE1               	clrf	225,b	;volatile
 27639                           
 27640                           ; BSR set to: 61
 27641                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 27642  01A094  6BE2               	clrf	226,b	;volatile
 27643                           
 27644                           ; BSR set to: 61
 27645                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 27646  01A096  6A34               	clrf	_uart2TxHead^0,c	;volatile
 27647                           
 27648                           ; BSR set to: 61
 27649                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 27650  01A098  6A33               	clrf	_uart2TxTail^0,c	;volatile
 27651                           
 27652                           ; BSR set to: 61
 27653                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 27654  01A09A  0E40               	movlw	64
 27655  01A09C  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 27656                           
 27657                           ; BSR set to: 61
 27658                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 27659  01A09E  6A31               	clrf	_uart2RxHead^0,c	;volatile
 27660                           
 27661                           ; BSR set to: 61
 27662                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 27663  01A0A0  6A30               	clrf	_uart2RxTail^0,c	;volatile
 27664                           
 27665                           ; BSR set to: 61
 27666                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 27667  01A0A2  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 27668                           
 27669                           ; BSR set to: 61
 27670                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 27671  01A0A4  0139               	movlb	57	; () banked
 27672  01A0A6  8596               	bsf	150,2,b	;volatile
 27673                           
 27674                           ; BSR set to: 57
 27675                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 27676  01A0A8  0012               	return		;funcret
 27677  01A0AA                     __end_of_UART2_Initialize:
 27678                           	opt callstack 0
 27679                           
 27680 ;; *************** function _UART2_SetTxInterruptHandler *****************
 27681 ;; Defined at:
 27682 ;;		line 252 in file "mcc_generated_files/uart2.c"
 27683 ;; Parameters:    Size  Location     Type
 27684 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27685 ;;		 -> UART2_Transmit_ISR(1), 
 27686 ;; Auto vars:     Size  Location     Type
 27687 ;;		None
 27688 ;; Return value:  Size  Location     Type
 27689 ;;                  1  [STACK] void 
 27690 ;; Registers used:
 27691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27692 ;; Tracked objects:
 27693 ;;		On entry : 3F/39
 27694 ;;		On exit  : 0/0
 27695 ;;		Unchanged: 0/0
 27696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27701 ;;Total ram usage:        0 bytes
 27702 ;; Hardware stack levels used:    1
 27703 ;; Hardware stack levels required when called:   15
 27704 ;; This function calls:
 27705 ;;		Nothing
 27706 ;; This function is called by:
 27707 ;;		_UART2_Initialize
 27708 ;; This function uses a reentrant model
 27709 ;;
 27710                           
 27711                           	psect	text108
 27712  01AA9E                     __ptext108:
 27713                           	opt callstack 0
 27714  01AA9E                     _UART2_SetTxInterruptHandler:
 27715                           	opt callstack 13
 27716                           
 27717                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 27718                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27719                           
 27720                           ; BSR set to: 57
 27721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27722                           ;incstack = 0
 27723  01AA9E  50E1               	movf	fsr1l,w,c
 27724  01AAA0  0FFD               	addlw	-3
 27725  01AAA2  6ED9               	movwf	fsr2l,c
 27726  01AAA4  50E2               	movf	fsr1h,w,c
 27727  01AAA6  6EDA               	movwf	fsr2h,c
 27728  01AAA8  0EFF               	movlw	255
 27729  01AAAA  22DA               	addwfc	fsr2h,f,c
 27730  01AAAC  006F FF78  F0AE    	movff	postinc2,_UART2_TxInterruptHandler
 27731  01AAB2  006F FF78  F0AF    	movff	postinc2,_UART2_TxInterruptHandler+1
 27732  01AAB8  006F FF74  F0B0    	movff	postdec2,_UART2_TxInterruptHandler+2
 27733                           
 27734                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27735  01AABE  52E5               	movf	postdec1,f,c
 27736  01AAC0  52E5               	movf	postdec1,f,c
 27737  01AAC2  52E5               	movf	postdec1,f,c
 27738  01AAC4  0012               	return		;funcret
 27739  01AAC6                     __end_of_UART2_SetTxInterruptHandler:
 27740                           	opt callstack 0
 27741                           
 27742 ;; *************** function _UART2_SetRxInterruptHandler *****************
 27743 ;; Defined at:
 27744 ;;		line 248 in file "mcc_generated_files/uart2.c"
 27745 ;; Parameters:    Size  Location     Type
 27746 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27747 ;;		 -> UART2_Receive_ISR(1), 
 27748 ;; Auto vars:     Size  Location     Type
 27749 ;;		None
 27750 ;; Return value:  Size  Location     Type
 27751 ;;                  1  [STACK] void 
 27752 ;; Registers used:
 27753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27754 ;; Tracked objects:
 27755 ;;		On entry : 3F/39
 27756 ;;		On exit  : 0/0
 27757 ;;		Unchanged: 0/0
 27758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27763 ;;Total ram usage:        0 bytes
 27764 ;; Hardware stack levels used:    1
 27765 ;; Hardware stack levels required when called:   15
 27766 ;; This function calls:
 27767 ;;		Nothing
 27768 ;; This function is called by:
 27769 ;;		_UART2_Initialize
 27770 ;; This function uses a reentrant model
 27771 ;;
 27772                           
 27773                           	psect	text109
 27774  01AAC6                     __ptext109:
 27775                           	opt callstack 0
 27776  01AAC6                     _UART2_SetRxInterruptHandler:
 27777                           	opt callstack 13
 27778                           
 27779                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 27780                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27781                           
 27782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27783                           ;incstack = 0
 27784  01AAC6  50E1               	movf	fsr1l,w,c
 27785  01AAC8  0FFD               	addlw	-3
 27786  01AACA  6ED9               	movwf	fsr2l,c
 27787  01AACC  50E2               	movf	fsr1h,w,c
 27788  01AACE  6EDA               	movwf	fsr2h,c
 27789  01AAD0  0EFF               	movlw	255
 27790  01AAD2  22DA               	addwfc	fsr2h,f,c
 27791  01AAD4  006F FF78  F0B1    	movff	postinc2,_UART2_RxInterruptHandler
 27792  01AADA  006F FF78  F0B2    	movff	postinc2,_UART2_RxInterruptHandler+1
 27793  01AAE0  006F FF74  F0B3    	movff	postdec2,_UART2_RxInterruptHandler+2
 27794                           
 27795                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27796  01AAE6  52E5               	movf	postdec1,f,c
 27797  01AAE8  52E5               	movf	postdec1,f,c
 27798  01AAEA  52E5               	movf	postdec1,f,c
 27799  01AAEC  0012               	return		;funcret
 27800  01AAEE                     __end_of_UART2_SetRxInterruptHandler:
 27801                           	opt callstack 0
 27802                           
 27803 ;; *************** function _UART1_Initialize *****************
 27804 ;; Defined at:
 27805 ;;		line 75 in file "mcc_generated_files/uart1.c"
 27806 ;; Parameters:    Size  Location     Type
 27807 ;;		None
 27808 ;; Auto vars:     Size  Location     Type
 27809 ;;		None
 27810 ;; Return value:  Size  Location     Type
 27811 ;;                  1  [STACK] void 
 27812 ;; Registers used:
 27813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27814 ;; Tracked objects:
 27815 ;;		On entry : 0/39
 27816 ;;		On exit  : 3F/39
 27817 ;;		Unchanged: 0/0
 27818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27823 ;;Total ram usage:        0 bytes
 27824 ;; Hardware stack levels used:    1
 27825 ;; Hardware stack levels required when called:   16
 27826 ;; This function calls:
 27827 ;;		_UART1_SetRxInterruptHandler
 27828 ;; This function is called by:
 27829 ;;		_SYSTEM_Initialize
 27830 ;; This function uses a reentrant model
 27831 ;;
 27832                           
 27833                           	psect	text110
 27834  01A41C                     __ptext110:
 27835                           	opt callstack 0
 27836  01A41C                     _UART1_Initialize:
 27837                           	opt callstack 13
 27838                           
 27839                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 27840                           
 27841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27842                           ;incstack = 0
 27843  01A41C  0139               	movlb	57	; () banked
 27844  01A41E  9793               	bcf	147,3,b	;volatile
 27845                           
 27846                           ; BSR set to: 57
 27847                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 27848  01A420  0E98               	movlw	low _UART1_Receive_ISR
 27849  01A422  6EE6               	movwf	postinc1,c
 27850  01A424  0EAE               	movlw	high _UART1_Receive_ISR
 27851  01A426  6EE6               	movwf	postinc1,c
 27852  01A428  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 27853  01A42A  6EE6               	movwf	postinc1,c
 27854  01A42C  EC77  F0D5         	call	_UART1_SetRxInterruptHandler	;wreg free
 27855                           
 27856                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 27857  01A430  013D               	movlb	61	; () banked
 27858  01A432  6BEC               	clrf	236,b	;volatile
 27859                           
 27860                           ; BSR set to: 61
 27861                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 27862  01A434  6BED               	clrf	237,b	;volatile
 27863                           
 27864                           ; BSR set to: 61
 27865                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 27866  01A436  6BEE               	clrf	238,b	;volatile
 27867                           
 27868                           ; BSR set to: 61
 27869                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 27870  01A438  6BEF               	clrf	239,b	;volatile
 27871                           
 27872                           ; BSR set to: 61
 27873                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 27874  01A43A  6BF0               	clrf	240,b	;volatile
 27875                           
 27876                           ; BSR set to: 61
 27877                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 27878  01A43C  6BF1               	clrf	241,b	;volatile
 27879                           
 27880                           ; BSR set to: 61
 27881                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 27882  01A43E  0EB0               	movlw	176
 27883  01A440  6FF2               	movwf	242,b	;volatile
 27884                           
 27885                           ; BSR set to: 61
 27886                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 27887  01A442  0E80               	movlw	128
 27888  01A444  6FF3               	movwf	243,b	;volatile
 27889                           
 27890                           ; BSR set to: 61
 27891                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 27892  01A446  6BF4               	clrf	244,b	;volatile
 27893                           
 27894                           ; BSR set to: 61
 27895                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 27896  01A448  0E8A               	movlw	138
 27897  01A44A  6FF5               	movwf	245,b	;volatile
 27898                           
 27899                           ; BSR set to: 61
 27900                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 27901  01A44C  6BF6               	clrf	246,b	;volatile
 27902                           
 27903                           ; BSR set to: 61
 27904                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 27905  01A44E  6BF7               	clrf	247,b	;volatile
 27906                           
 27907                           ; BSR set to: 61
 27908                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 27909  01A450  6BF8               	clrf	248,b	;volatile
 27910                           
 27911                           ; BSR set to: 61
 27912                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 27913  01A452  6BF9               	clrf	249,b	;volatile
 27914                           
 27915                           ; BSR set to: 61
 27916                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 27917  01A454  6BFA               	clrf	250,b	;volatile
 27918                           
 27919                           ; BSR set to: 61
 27920                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 27921  01A456  6A37               	clrf	_uart1RxHead^0,c	;volatile
 27922                           
 27923                           ; BSR set to: 61
 27924                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 27925  01A458  6A36               	clrf	_uart1RxTail^0,c	;volatile
 27926                           
 27927                           ; BSR set to: 61
 27928                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 27929  01A45A  6A35               	clrf	_uart1RxCount^0,c	;volatile
 27930                           
 27931                           ; BSR set to: 61
 27932                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 27933  01A45C  0139               	movlb	57	; () banked
 27934  01A45E  8793               	bsf	147,3,b	;volatile
 27935                           
 27936                           ; BSR set to: 57
 27937                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 27938  01A460  0012               	return		;funcret
 27939  01A462                     __end_of_UART1_Initialize:
 27940                           	opt callstack 0
 27941                           
 27942 ;; *************** function _UART1_SetRxInterruptHandler *****************
 27943 ;; Defined at:
 27944 ;;		line 207 in file "mcc_generated_files/uart1.c"
 27945 ;; Parameters:    Size  Location     Type
 27946 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27947 ;;		 -> UART1_Receive_ISR(1), 
 27948 ;; Auto vars:     Size  Location     Type
 27949 ;;		None
 27950 ;; Return value:  Size  Location     Type
 27951 ;;                  1  [STACK] void 
 27952 ;; Registers used:
 27953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27954 ;; Tracked objects:
 27955 ;;		On entry : 3F/39
 27956 ;;		On exit  : 0/0
 27957 ;;		Unchanged: 0/0
 27958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27963 ;;Total ram usage:        0 bytes
 27964 ;; Hardware stack levels used:    1
 27965 ;; Hardware stack levels required when called:   15
 27966 ;; This function calls:
 27967 ;;		Nothing
 27968 ;; This function is called by:
 27969 ;;		_UART1_Initialize
 27970 ;; This function uses a reentrant model
 27971 ;;
 27972                           
 27973                           	psect	text111
 27974  01AAEE                     __ptext111:
 27975                           	opt callstack 0
 27976  01AAEE                     _UART1_SetRxInterruptHandler:
 27977                           	opt callstack 13
 27978                           
 27979                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 27980                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27981                           
 27982                           ; BSR set to: 57
 27983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27984                           ;incstack = 0
 27985  01AAEE  50E1               	movf	fsr1l,w,c
 27986  01AAF0  0FFD               	addlw	-3
 27987  01AAF2  6ED9               	movwf	fsr2l,c
 27988  01AAF4  50E2               	movf	fsr1h,w,c
 27989  01AAF6  6EDA               	movwf	fsr2h,c
 27990  01AAF8  0EFF               	movlw	255
 27991  01AAFA  22DA               	addwfc	fsr2h,f,c
 27992  01AAFC  006F FF78  F0AB    	movff	postinc2,_UART1_RxInterruptHandler
 27993  01AB02  006F FF78  F0AC    	movff	postinc2,_UART1_RxInterruptHandler+1
 27994  01AB08  006F FF74  F0AD    	movff	postdec2,_UART1_RxInterruptHandler+2
 27995                           
 27996                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27997  01AB0E  52E5               	movf	postdec1,f,c
 27998  01AB10  52E5               	movf	postdec1,f,c
 27999  01AB12  52E5               	movf	postdec1,f,c
 28000  01AB14  0012               	return		;funcret
 28001  01AB16                     __end_of_UART1_SetRxInterruptHandler:
 28002                           	opt callstack 0
 28003                           
 28004 ;; *************** function _TMR6_Initialize *****************
 28005 ;; Defined at:
 28006 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 28007 ;; Parameters:    Size  Location     Type
 28008 ;;		None
 28009 ;; Auto vars:     Size  Location     Type
 28010 ;;		None
 28011 ;; Return value:  Size  Location     Type
 28012 ;;                  1  [STACK] void 
 28013 ;; Registers used:
 28014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28015 ;; Tracked objects:
 28016 ;;		On entry : 3F/39
 28017 ;;		On exit  : 0/0
 28018 ;;		Unchanged: 0/0
 28019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28024 ;;Total ram usage:        0 bytes
 28025 ;; Hardware stack levels used:    1
 28026 ;; Hardware stack levels required when called:   16
 28027 ;; This function calls:
 28028 ;;		_TMR6_SetInterruptHandler
 28029 ;; This function is called by:
 28030 ;;		_SYSTEM_Initialize
 28031 ;; This function uses a reentrant model
 28032 ;;
 28033                           
 28034                           	psect	text112
 28035  01A9D4                     __ptext112:
 28036                           	opt callstack 0
 28037  01A9D4                     _TMR6_Initialize:
 28038                           	opt callstack 13
 28039                           
 28040                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 28041                           
 28042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28043                           ;incstack = 0
 28044  01A9D4  0E01               	movlw	1
 28045  01A9D6  6E96               	movwf	150,c	;volatile
 28046                           
 28047                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 28048  01A9D8  6A95               	clrf	149,c	;volatile
 28049                           
 28050                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 28051  01A9DA  6A97               	clrf	151,c	;volatile
 28052                           
 28053                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 28054  01A9DC  0E7C               	movlw	124
 28055  01A9DE  6E93               	movwf	147,c	;volatile
 28056                           
 28057                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 28058  01A9E0  6A92               	clrf	146,c	;volatile
 28059                           
 28060                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 28061  01A9E2  0139               	movlb	57	; () banked
 28062  01A9E4  91A9               	bcf	169,0,b	;volatile
 28063                           
 28064                           ; BSR set to: 57
 28065                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 28066  01A9E6  8199               	bsf	153,0,b	;volatile
 28067                           
 28068                           ; BSR set to: 57
 28069                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 28070  01A9E8  0EB0               	movlw	low _TMR6_DefaultInterruptHandler
 28071  01A9EA  6EE6               	movwf	postinc1,c
 28072  01A9EC  0EA2               	movlw	high _TMR6_DefaultInterruptHandler
 28073  01A9EE  6EE6               	movwf	postinc1,c
 28074  01A9F0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 28075  01A9F2  6EE6               	movwf	postinc1,c
 28076  01A9F4  EC8B  F0D5         	call	_TMR6_SetInterruptHandler	;wreg free
 28077                           
 28078                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 28079  01A9F8  0EE0               	movlw	224
 28080  01A9FA  6E94               	movwf	148,c	;volatile
 28081                           
 28082                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28083  01A9FC  0012               	return		;funcret
 28084  01A9FE                     __end_of_TMR6_Initialize:
 28085                           	opt callstack 0
 28086                           
 28087 ;; *************** function _TMR6_SetInterruptHandler *****************
 28088 ;; Defined at:
 28089 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 28090 ;; Parameters:    Size  Location     Type
 28091 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28092 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 28093 ;; Auto vars:     Size  Location     Type
 28094 ;;		None
 28095 ;; Return value:  Size  Location     Type
 28096 ;;                  1  [STACK] void 
 28097 ;; Registers used:
 28098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28099 ;; Tracked objects:
 28100 ;;		On entry : 3F/39
 28101 ;;		On exit  : 0/0
 28102 ;;		Unchanged: 0/0
 28103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28108 ;;Total ram usage:        0 bytes
 28109 ;; Hardware stack levels used:    1
 28110 ;; Hardware stack levels required when called:   15
 28111 ;; This function calls:
 28112 ;;		Nothing
 28113 ;; This function is called by:
 28114 ;;		_TMR6_Initialize
 28115 ;; This function uses a reentrant model
 28116 ;;
 28117                           
 28118                           	psect	text113
 28119  01AB16                     __ptext113:
 28120                           	opt callstack 0
 28121  01AB16                     _TMR6_SetInterruptHandler:
 28122                           	opt callstack 13
 28123                           
 28124                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 28125                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28126                           
 28127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28128                           ;incstack = 0
 28129  01AB16  50E1               	movf	fsr1l,w,c
 28130  01AB18  0FFD               	addlw	-3
 28131  01AB1A  6ED9               	movwf	fsr2l,c
 28132  01AB1C  50E2               	movf	fsr1h,w,c
 28133  01AB1E  6EDA               	movwf	fsr2h,c
 28134  01AB20  0EFF               	movlw	255
 28135  01AB22  22DA               	addwfc	fsr2h,f,c
 28136  01AB24  006F FF78  F0A2    	movff	postinc2,_TMR6_InterruptHandler
 28137  01AB2A  006F FF78  F0A3    	movff	postinc2,_TMR6_InterruptHandler+1
 28138  01AB30  006F FF74  F0A4    	movff	postdec2,_TMR6_InterruptHandler+2
 28139                           
 28140                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28141  01AB36  52E5               	movf	postdec1,f,c
 28142  01AB38  52E5               	movf	postdec1,f,c
 28143  01AB3A  52E5               	movf	postdec1,f,c
 28144  01AB3C  0012               	return		;funcret
 28145  01AB3E                     __end_of_TMR6_SetInterruptHandler:
 28146                           	opt callstack 0
 28147                           
 28148 ;; *************** function _TMR5_Initialize *****************
 28149 ;; Defined at:
 28150 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 28151 ;; Parameters:    Size  Location     Type
 28152 ;;		None
 28153 ;; Auto vars:     Size  Location     Type
 28154 ;;		None
 28155 ;; Return value:  Size  Location     Type
 28156 ;;                  1  [STACK] void 
 28157 ;; Registers used:
 28158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28159 ;; Tracked objects:
 28160 ;;		On entry : 0/39
 28161 ;;		On exit  : 0/0
 28162 ;;		Unchanged: 0/0
 28163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28168 ;;Total ram usage:        0 bytes
 28169 ;; Hardware stack levels used:    1
 28170 ;; Hardware stack levels required when called:   16
 28171 ;; This function calls:
 28172 ;;		_TMR5_SetInterruptHandler
 28173 ;; This function is called by:
 28174 ;;		_SYSTEM_Initialize
 28175 ;; This function uses a reentrant model
 28176 ;;
 28177                           
 28178                           	psect	text114
 28179  01A462                     __ptext114:
 28180                           	opt callstack 0
 28181  01A462                     _TMR5_Initialize:
 28182                           	opt callstack 13
 28183                           
 28184                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 28185                           
 28186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28187                           ;incstack = 0
 28188  01A462  6A9B               	clrf	155,c	;volatile
 28189                           
 28190                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 28191  01A464  6A9C               	clrf	156,c	;volatile
 28192                           
 28193                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 28194  01A466  0E01               	movlw	1
 28195  01A468  6E9D               	movwf	157,c	;volatile
 28196                           
 28197                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 28198  01A46A  0E63               	movlw	99
 28199  01A46C  6E99               	movwf	153,c	;volatile
 28200                           
 28201                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 28202  01A46E  0EC0               	movlw	192
 28203  01A470  6E98               	movwf	152,c	;volatile
 28204                           
 28205                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 28206  01A472  5098               	movf	152,w,c	;volatile
 28207  01A474  006F FE64  F001    	movff	16281,btemp	;volatile
 28208  01A47A  6A02               	clrf	(btemp+1)^0,c
 28209  01A47C  0060  F004  F002   	movff	btemp,btemp+1
 28210  01A482  6A01               	clrf	btemp^0,c
 28211  01A484  1001               	iorwf	btemp^0,w,c
 28212  01A486  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 28213  01A488  5002               	movf	(btemp+1)^0,w,c
 28214  01A48A  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 28215                           
 28216                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 28217  01A48C  0139               	movlb	57	; () banked
 28218  01A48E  9DA8               	bcf	168,6,b	;volatile
 28219                           
 28220                           ; BSR set to: 57
 28221                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 28222  01A490  8D98               	bsf	152,6,b	;volatile
 28223                           
 28224                           ; BSR set to: 57
 28225                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 28226  01A492  0E2E               	movlw	low _TMR5_DefaultInterruptHandler
 28227  01A494  6EE6               	movwf	postinc1,c
 28228  01A496  0EA8               	movlw	high _TMR5_DefaultInterruptHandler
 28229  01A498  6EE6               	movwf	postinc1,c
 28230  01A49A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 28231  01A49C  6EE6               	movwf	postinc1,c
 28232  01A49E  EC9F  F0D5         	call	_TMR5_SetInterruptHandler	;wreg free
 28233                           
 28234                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 28235  01A4A2  0E31               	movlw	49
 28236  01A4A4  6E9A               	movwf	154,c	;volatile
 28237                           
 28238                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28239  01A4A6  0012               	return		;funcret
 28240  01A4A8                     __end_of_TMR5_Initialize:
 28241                           	opt callstack 0
 28242                           
 28243 ;; *************** function _TMR5_SetInterruptHandler *****************
 28244 ;; Defined at:
 28245 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 28246 ;; Parameters:    Size  Location     Type
 28247 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28248 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 28249 ;; Auto vars:     Size  Location     Type
 28250 ;;		None
 28251 ;; Return value:  Size  Location     Type
 28252 ;;                  1  [STACK] void 
 28253 ;; Registers used:
 28254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28255 ;; Tracked objects:
 28256 ;;		On entry : 3F/39
 28257 ;;		On exit  : 0/0
 28258 ;;		Unchanged: 0/0
 28259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28264 ;;Total ram usage:        0 bytes
 28265 ;; Hardware stack levels used:    1
 28266 ;; Hardware stack levels required when called:   15
 28267 ;; This function calls:
 28268 ;;		Nothing
 28269 ;; This function is called by:
 28270 ;;		_TMR5_Initialize
 28271 ;; This function uses a reentrant model
 28272 ;;
 28273                           
 28274                           	psect	text115
 28275  01AB3E                     __ptext115:
 28276                           	opt callstack 0
 28277  01AB3E                     _TMR5_SetInterruptHandler:
 28278                           	opt callstack 13
 28279                           
 28280                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 28281                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28282                           
 28283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28284                           ;incstack = 0
 28285  01AB3E  50E1               	movf	fsr1l,w,c
 28286  01AB40  0FFD               	addlw	-3
 28287  01AB42  6ED9               	movwf	fsr2l,c
 28288  01AB44  50E2               	movf	fsr1h,w,c
 28289  01AB46  6EDA               	movwf	fsr2h,c
 28290  01AB48  0EFF               	movlw	255
 28291  01AB4A  22DA               	addwfc	fsr2h,f,c
 28292  01AB4C  006F FF78  F09F    	movff	postinc2,_TMR5_InterruptHandler
 28293  01AB52  006F FF78  F0A0    	movff	postinc2,_TMR5_InterruptHandler+1
 28294  01AB58  006F FF74  F0A1    	movff	postdec2,_TMR5_InterruptHandler+2
 28295                           
 28296                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28297  01AB5E  52E5               	movf	postdec1,f,c
 28298  01AB60  52E5               	movf	postdec1,f,c
 28299  01AB62  52E5               	movf	postdec1,f,c
 28300  01AB64  0012               	return		;funcret
 28301  01AB66                     __end_of_TMR5_SetInterruptHandler:
 28302                           	opt callstack 0
 28303                           
 28304 ;; *************** function _TMR3_Initialize *****************
 28305 ;; Defined at:
 28306 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 28307 ;; Parameters:    Size  Location     Type
 28308 ;;		None
 28309 ;; Auto vars:     Size  Location     Type
 28310 ;;		None
 28311 ;; Return value:  Size  Location     Type
 28312 ;;                  1  [STACK] void 
 28313 ;; Registers used:
 28314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28315 ;; Tracked objects:
 28316 ;;		On entry : 0/39
 28317 ;;		On exit  : 0/0
 28318 ;;		Unchanged: 0/0
 28319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28324 ;;Total ram usage:        0 bytes
 28325 ;; Hardware stack levels used:    1
 28326 ;; Hardware stack levels required when called:   16
 28327 ;; This function calls:
 28328 ;;		_TMR3_SetInterruptHandler
 28329 ;; This function is called by:
 28330 ;;		_SYSTEM_Initialize
 28331 ;; This function uses a reentrant model
 28332 ;;
 28333                           
 28334                           	psect	text116
 28335  01A4A8                     __ptext116:
 28336                           	opt callstack 0
 28337  01A4A8                     _TMR3_Initialize:
 28338                           	opt callstack 13
 28339                           
 28340                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 28341                           
 28342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28343                           ;incstack = 0
 28344  01A4A8  6AA7               	clrf	167,c	;volatile
 28345                           
 28346                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 28347  01A4AA  6AA8               	clrf	168,c	;volatile
 28348                           
 28349                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 28350  01A4AC  0E01               	movlw	1
 28351  01A4AE  6EA9               	movwf	169,c	;volatile
 28352                           
 28353                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 28354  01A4B0  0E3C               	movlw	60
 28355  01A4B2  6EA5               	movwf	165,c	;volatile
 28356                           
 28357                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 28358  01A4B4  0EB0               	movlw	176
 28359  01A4B6  6EA4               	movwf	164,c	;volatile
 28360                           
 28361                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 28362  01A4B8  50A4               	movf	164,w,c	;volatile
 28363  01A4BA  006F FE94  F001    	movff	16293,btemp	;volatile
 28364  01A4C0  6A02               	clrf	(btemp+1)^0,c
 28365  01A4C2  0060  F004  F002   	movff	btemp,btemp+1
 28366  01A4C8  6A01               	clrf	btemp^0,c
 28367  01A4CA  1001               	iorwf	btemp^0,w,c
 28368  01A4CC  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 28369  01A4CE  5002               	movf	(btemp+1)^0,w,c
 28370  01A4D0  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 28371                           
 28372                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 28373  01A4D2  0139               	movlb	57	; () banked
 28374  01A4D4  9DA6               	bcf	166,6,b	;volatile
 28375                           
 28376                           ; BSR set to: 57
 28377                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 28378  01A4D6  8D96               	bsf	150,6,b	;volatile
 28379                           
 28380                           ; BSR set to: 57
 28381                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 28382  01A4D8  0E70               	movlw	low _TMR3_DefaultInterruptHandler
 28383  01A4DA  6EE6               	movwf	postinc1,c
 28384  01A4DC  0EB0               	movlw	high _TMR3_DefaultInterruptHandler
 28385  01A4DE  6EE6               	movwf	postinc1,c
 28386  01A4E0  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 28387  01A4E2  6EE6               	movwf	postinc1,c
 28388  01A4E4  ECB3  F0D5         	call	_TMR3_SetInterruptHandler	;wreg free
 28389                           
 28390                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 28391  01A4E8  0E31               	movlw	49
 28392  01A4EA  6EA6               	movwf	166,c	;volatile
 28393                           
 28394                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28395  01A4EC  0012               	return		;funcret
 28396  01A4EE                     __end_of_TMR3_Initialize:
 28397                           	opt callstack 0
 28398                           
 28399 ;; *************** function _TMR3_SetInterruptHandler *****************
 28400 ;; Defined at:
 28401 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 28402 ;; Parameters:    Size  Location     Type
 28403 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28404 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 28405 ;; Auto vars:     Size  Location     Type
 28406 ;;		None
 28407 ;; Return value:  Size  Location     Type
 28408 ;;                  1  [STACK] void 
 28409 ;; Registers used:
 28410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28411 ;; Tracked objects:
 28412 ;;		On entry : 0/1
 28413 ;;		On exit  : 0/0
 28414 ;;		Unchanged: 0/0
 28415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28420 ;;Total ram usage:        0 bytes
 28421 ;; Hardware stack levels used:    1
 28422 ;; Hardware stack levels required when called:   15
 28423 ;; This function calls:
 28424 ;;		Nothing
 28425 ;; This function is called by:
 28426 ;;		_TMR3_Initialize
 28427 ;;		_init_bsoc
 28428 ;; This function uses a reentrant model
 28429 ;;
 28430                           
 28431                           	psect	text117
 28432  01AB66                     __ptext117:
 28433                           	opt callstack 0
 28434  01AB66                     _TMR3_SetInterruptHandler:
 28435                           	opt callstack 14
 28436                           
 28437                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 28438                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28439                           
 28440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28441                           ;incstack = 0
 28442  01AB66  50E1               	movf	fsr1l,w,c
 28443  01AB68  0FFD               	addlw	-3
 28444  01AB6A  6ED9               	movwf	fsr2l,c
 28445  01AB6C  50E2               	movf	fsr1h,w,c
 28446  01AB6E  6EDA               	movwf	fsr2h,c
 28447  01AB70  0EFF               	movlw	255
 28448  01AB72  22DA               	addwfc	fsr2h,f,c
 28449  01AB74  006F FF78  F09C    	movff	postinc2,_TMR3_InterruptHandler
 28450  01AB7A  006F FF78  F09D    	movff	postinc2,_TMR3_InterruptHandler+1
 28451  01AB80  006F FF74  F09E    	movff	postdec2,_TMR3_InterruptHandler+2
 28452                           
 28453                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28454  01AB86  52E5               	movf	postdec1,f,c
 28455  01AB88  52E5               	movf	postdec1,f,c
 28456  01AB8A  52E5               	movf	postdec1,f,c
 28457  01AB8C  0012               	return		;funcret
 28458  01AB8E                     __end_of_TMR3_SetInterruptHandler:
 28459                           	opt callstack 0
 28460                           
 28461 ;; *************** function _TMR2_Initialize *****************
 28462 ;; Defined at:
 28463 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 28464 ;; Parameters:    Size  Location     Type
 28465 ;;		None
 28466 ;; Auto vars:     Size  Location     Type
 28467 ;;		None
 28468 ;; Return value:  Size  Location     Type
 28469 ;;                  1  [STACK] void 
 28470 ;; Registers used:
 28471 ;;		wreg, status,2
 28472 ;; Tracked objects:
 28473 ;;		On entry : 3F/3F
 28474 ;;		On exit  : 3F/39
 28475 ;;		Unchanged: 0/0
 28476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28481 ;;Total ram usage:        0 bytes
 28482 ;; Hardware stack levels used:    1
 28483 ;; Hardware stack levels required when called:   15
 28484 ;; This function calls:
 28485 ;;		Nothing
 28486 ;; This function is called by:
 28487 ;;		_SYSTEM_Initialize
 28488 ;; This function uses a reentrant model
 28489 ;;
 28490                           
 28491                           	psect	text118
 28492  01AF02                     __ptext118:
 28493                           	opt callstack 0
 28494  01AF02                     _TMR2_Initialize:
 28495                           	opt callstack 14
 28496                           
 28497                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 28498                           
 28499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28500                           ;incstack = 0
 28501  01AF02  0E01               	movlw	1
 28502  01AF04  6EAE               	movwf	174,c	;volatile
 28503                           
 28504                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 28505  01AF06  6AAD               	clrf	173,c	;volatile
 28506                           
 28507                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 28508  01AF08  6AAF               	clrf	175,c	;volatile
 28509                           
 28510                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 28511  01AF0A  0E63               	movlw	99
 28512  01AF0C  6EAB               	movwf	171,c	;volatile
 28513                           
 28514                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 28515  01AF0E  6AAA               	clrf	170,c	;volatile
 28516                           
 28517                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 28518  01AF10  0139               	movlb	57	; () banked
 28519  01AF12  95A4               	bcf	164,2,b	;volatile
 28520                           
 28521                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 28522  01AF14  0EC0               	movlw	192
 28523  01AF16  6EAC               	movwf	172,c	;volatile
 28524                           
 28525                           ; BSR set to: 57
 28526                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28527  01AF18  0012               	return		;funcret
 28528  01AF1A                     __end_of_TMR2_Initialize:
 28529                           	opt callstack 0
 28530                           
 28531 ;; *************** function _SPI1_Initialize *****************
 28532 ;; Defined at:
 28533 ;;		line 64 in file "mcc_generated_files/spi1.c"
 28534 ;; Parameters:    Size  Location     Type
 28535 ;;		None
 28536 ;; Auto vars:     Size  Location     Type
 28537 ;;		None
 28538 ;; Return value:  Size  Location     Type
 28539 ;;                  1  [STACK] void 
 28540 ;; Registers used:
 28541 ;;		wreg, status,2
 28542 ;; Tracked objects:
 28543 ;;		On entry : 3F/39
 28544 ;;		On exit  : 3F/3D
 28545 ;;		Unchanged: 0/0
 28546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28551 ;;Total ram usage:        0 bytes
 28552 ;; Hardware stack levels used:    1
 28553 ;; Hardware stack levels required when called:   15
 28554 ;; This function calls:
 28555 ;;		Nothing
 28556 ;; This function is called by:
 28557 ;;		_SYSTEM_Initialize
 28558 ;; This function uses a reentrant model
 28559 ;;
 28560                           
 28561                           	psect	text119
 28562  01AF1A                     __ptext119:
 28563                           	opt callstack 0
 28564  01AF1A                     _SPI1_Initialize:
 28565                           	opt callstack 14
 28566                           
 28567                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 28568                           
 28569                           ; BSR set to: 57
 28570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28571                           ;incstack = 0
 28572  01AF1A  0E40               	movlw	64
 28573  01AF1C  013D               	movlb	61	; () banked
 28574  01AF1E  6F15               	movwf	21,b	;volatile
 28575                           
 28576                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 28577  01AF20  0E03               	movlw	3
 28578  01AF22  6F16               	movwf	22,b	;volatile
 28579                           
 28580                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 28581  01AF24  0E4F               	movlw	79
 28582  01AF26  6F19               	movwf	25,b	;volatile
 28583                           
 28584                           ; BSR set to: 61
 28585                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 28586  01AF28  6B1C               	clrf	28,b	;volatile
 28587                           
 28588                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 28589  01AF2A  0E83               	movlw	131
 28590  01AF2C  6F14               	movwf	20,b	;volatile
 28591                           
 28592                           ; BSR set to: 61
 28593                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28594  01AF2E  0012               	return		;funcret
 28595  01AF30                     __end_of_SPI1_Initialize:
 28596                           	opt callstack 0
 28597                           
 28598 ;; *************** function _PWM8_Initialize *****************
 28599 ;; Defined at:
 28600 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 28601 ;; Parameters:    Size  Location     Type
 28602 ;;		None
 28603 ;; Auto vars:     Size  Location     Type
 28604 ;;		None
 28605 ;; Return value:  Size  Location     Type
 28606 ;;                  1  [STACK] void 
 28607 ;; Registers used:
 28608 ;;		wreg, status,2
 28609 ;; Tracked objects:
 28610 ;;		On entry : 0/3E
 28611 ;;		On exit  : 3F/3F
 28612 ;;		Unchanged: 0/0
 28613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28618 ;;Total ram usage:        0 bytes
 28619 ;; Hardware stack levels used:    1
 28620 ;; Hardware stack levels required when called:   15
 28621 ;; This function calls:
 28622 ;;		Nothing
 28623 ;; This function is called by:
 28624 ;;		_SYSTEM_Initialize
 28625 ;; This function uses a reentrant model
 28626 ;;
 28627                           
 28628                           	psect	text120
 28629  01AF30                     __ptext120:
 28630                           	opt callstack 0
 28631  01AF30                     _PWM8_Initialize:
 28632                           	opt callstack 14
 28633                           
 28634                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 28635                           
 28636                           ; BSR set to: 61
 28637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28638                           ;incstack = 0
 28639  01AF30  0E80               	movlw	128
 28640  01AF32  6E62               	movwf	98,c	;volatile
 28641                           
 28642                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 28643  01AF34  6A61               	clrf	97,c	;volatile
 28644                           
 28645                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 28646  01AF36  0E40               	movlw	64
 28647  01AF38  6E60               	movwf	96,c	;volatile
 28648                           
 28649                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 28650  01AF3A  013F               	movlb	63	; () banked
 28651  01AF3C  515F               	movf	95,w,b	;volatile
 28652  01AF3E  0B3F               	andlw	-193
 28653  01AF40  0940               	iorlw	64
 28654  01AF42  6F5F               	movwf	95,b	;volatile
 28655                           
 28656                           ; BSR set to: 63
 28657                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28658  01AF44  0012               	return		;funcret
 28659  01AF46                     __end_of_PWM8_Initialize:
 28660                           	opt callstack 0
 28661                           
 28662 ;; *************** function _PMD_Initialize *****************
 28663 ;; Defined at:
 28664 ;;		line 90 in file "mcc_generated_files/mcc.c"
 28665 ;; Parameters:    Size  Location     Type
 28666 ;;		None
 28667 ;; Auto vars:     Size  Location     Type
 28668 ;;		None
 28669 ;; Return value:  Size  Location     Type
 28670 ;;                  1  [STACK] void 
 28671 ;; Registers used:
 28672 ;;		None
 28673 ;; Tracked objects:
 28674 ;;		On entry : 3F/39
 28675 ;;		On exit  : 3F/39
 28676 ;;		Unchanged: 0/0
 28677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28682 ;;Total ram usage:        0 bytes
 28683 ;; Hardware stack levels used:    1
 28684 ;; Hardware stack levels required when called:   15
 28685 ;; This function calls:
 28686 ;;		Nothing
 28687 ;; This function is called by:
 28688 ;;		_SYSTEM_Initialize
 28689 ;; This function uses a reentrant model
 28690 ;;
 28691                           
 28692                           	psect	text121
 28693  01AF5C                     __ptext121:
 28694                           	opt callstack 0
 28695  01AF5C                     _PMD_Initialize:
 28696                           	opt callstack 14
 28697                           
 28698                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 28699                           
 28700                           ; BSR set to: 63
 28701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28702                           ;incstack = 0
 28703  01AF5C  0139               	movlb	57	; () banked
 28704  01AF5E  6BC0               	clrf	192,b	;volatile
 28705                           
 28706                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 28707  01AF60  6BC1               	clrf	193,b	;volatile
 28708                           
 28709                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 28710  01AF62  6BC2               	clrf	194,b	;volatile
 28711                           
 28712                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 28713  01AF64  6BC3               	clrf	195,b	;volatile
 28714                           
 28715                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 28716  01AF66  6BC4               	clrf	196,b	;volatile
 28717                           
 28718                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 28719  01AF68  6BC5               	clrf	197,b	;volatile
 28720                           
 28721                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 28722  01AF6A  6BC6               	clrf	198,b	;volatile
 28723                           
 28724                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 28725  01AF6C  6BC7               	clrf	199,b	;volatile
 28726                           
 28727                           ; BSR set to: 57
 28728                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 28729  01AF6E  0012               	return		;funcret
 28730  01AF70                     __end_of_PMD_Initialize:
 28731                           	opt callstack 0
 28732                           
 28733 ;; *************** function _PIN_MANAGER_Initialize *****************
 28734 ;; Defined at:
 28735 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 28736 ;; Parameters:    Size  Location     Type
 28737 ;;		None
 28738 ;; Auto vars:     Size  Location     Type
 28739 ;;		None
 28740 ;; Return value:  Size  Location     Type
 28741 ;;                  1  [STACK] void 
 28742 ;; Registers used:
 28743 ;;		wreg, status,2
 28744 ;; Tracked objects:
 28745 ;;		On entry : 3F/39
 28746 ;;		On exit  : 3F/3A
 28747 ;;		Unchanged: 0/0
 28748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28753 ;;Total ram usage:        0 bytes
 28754 ;; Hardware stack levels used:    1
 28755 ;; Hardware stack levels required when called:   15
 28756 ;; This function calls:
 28757 ;;		Nothing
 28758 ;; This function is called by:
 28759 ;;		_SYSTEM_Initialize
 28760 ;; This function uses a reentrant model
 28761 ;;
 28762                           
 28763                           	psect	text122
 28764  019A4E                     __ptext122:
 28765                           	opt callstack 0
 28766  019A4E                     _PIN_MANAGER_Initialize:
 28767                           	opt callstack 14
 28768                           
 28769                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 28770                           
 28771                           ; BSR set to: 57
 28772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28773                           ;incstack = 0
 28774  019A4E  0E07               	movlw	7
 28775  019A50  6EBE               	movwf	190,c	;volatile
 28776                           
 28777                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 28778  019A52  0E80               	movlw	128
 28779  019A54  6EBD               	movwf	189,c	;volatile
 28780                           
 28781                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 28782  019A56  6ABA               	clrf	186,c	;volatile
 28783                           
 28784                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 28785  019A58  6ABF               	clrf	191,c	;volatile
 28786                           
 28787                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 28788  019A5A  6ABB               	clrf	187,c	;volatile
 28789                           
 28790                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 28791  019A5C  0E07               	movlw	7
 28792  019A5E  6EBC               	movwf	188,c	;volatile
 28793                           
 28794                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 28795  019A60  6AC6               	clrf	198,c	;volatile
 28796                           
 28797                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 28798  019A62  0E0F               	movlw	15
 28799  019A64  6EC7               	movwf	199,c	;volatile
 28800                           
 28801                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 28802  019A66  68C2               	setf	194,c	;volatile
 28803                           
 28804                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 28805  019A68  0EBF               	movlw	191
 28806  019A6A  6EC3               	movwf	195,c	;volatile
 28807                           
 28808                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 28809  019A6C  0E90               	movlw	144
 28810  019A6E  6EC4               	movwf	196,c	;volatile
 28811                           
 28812                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 28813  019A70  0E0C               	movlw	12
 28814  019A72  6EC5               	movwf	197,c	;volatile
 28815                           
 28816                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 28817  019A74  013A               	movlb	58	; () banked
 28818  019A76  6B70               	clrf	112,b	;volatile
 28819                           
 28820                           ; BSR set to: 58
 28821                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 28822  019A78  6B60               	clrf	96,b	;volatile
 28823                           
 28824                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 28825  019A7A  0E3C               	movlw	60
 28826  019A7C  6F50               	movwf	80,b	;volatile
 28827                           
 28828                           ; BSR set to: 58
 28829                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 28830  019A7E  6B80               	clrf	128,b	;volatile
 28831                           
 28832                           ; BSR set to: 58
 28833                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 28834  019A80  6B90               	clrf	144,b	;volatile
 28835                           
 28836                           ; BSR set to: 58
 28837                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 28838  019A82  6940               	setf	64,b	;volatile
 28839                           
 28840                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 28841  019A84  0E0C               	movlw	12
 28842  019A86  6F71               	movwf	113,b	;volatile
 28843                           
 28844                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 28845  019A88  0E0F               	movlw	15
 28846  019A8A  6F91               	movwf	145,b	;volatile
 28847                           
 28848                           ; BSR set to: 58
 28849                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 28850  019A8C  6B81               	clrf	129,b	;volatile
 28851                           
 28852                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 28853  019A8E  0E83               	movlw	131
 28854  019A90  6F51               	movwf	81,b	;volatile
 28855                           
 28856                           ; BSR set to: 58
 28857                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 28858  019A92  6B41               	clrf	65,b	;volatile
 28859                           
 28860                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 28861  019A94  0E97               	movlw	151
 28862  019A96  6F61               	movwf	97,b	;volatile
 28863                           
 28864                           ; BSR set to: 58
 28865                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 28866  019A98  6B82               	clrf	130,b	;volatile
 28867                           
 28868                           ; BSR set to: 58
 28869                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 28870  019A9A  6B92               	clrf	146,b	;volatile
 28871                           
 28872                           ; BSR set to: 58
 28873                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 28874  019A9C  6B42               	clrf	66,b	;volatile
 28875                           
 28876                           ; BSR set to: 58
 28877                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 28878  019A9E  6B52               	clrf	82,b	;volatile
 28879                           
 28880                           ; BSR set to: 58
 28881                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 28882  019AA0  6B62               	clrf	98,b	;volatile
 28883                           
 28884                           ; BSR set to: 58
 28885                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 28886  019AA2  6B72               	clrf	114,b	;volatile
 28887                           
 28888                           ; BSR set to: 58
 28889                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 28890  019AA4  6943               	setf	67,b	;volatile
 28891                           
 28892                           ; BSR set to: 58
 28893                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 28894  019AA6  6953               	setf	83,b	;volatile
 28895                           
 28896                           ; BSR set to: 58
 28897                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 28898  019AA8  6963               	setf	99,b	;volatile
 28899                           
 28900                           ; BSR set to: 58
 28901                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 28902  019AAA  6973               	setf	115,b	;volatile
 28903                           
 28904                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 28905  019AAC  0E07               	movlw	7
 28906  019AAE  6F83               	movwf	131,b	;volatile
 28907                           
 28908                           ; BSR set to: 58
 28909                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 28910  019AB0  6993               	setf	147,b	;volatile
 28911                           
 28912                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 28913  019AB2  0E0F               	movlw	15
 28914  019AB4  6FE8               	movwf	232,b	;volatile
 28915                           
 28916                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 28917  019AB6  0E13               	movlw	19
 28918  019AB8  6FDE               	movwf	222,b	;volatile
 28919                           
 28920                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 28921  019ABA  0E16               	movlw	22
 28922  019ABC  6F0E               	movwf	14,b	;volatile
 28923                           
 28924                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 28925  019ABE  0E1E               	movlw	30
 28926  019AC0  6F13               	movwf	19,b	;volatile
 28927                           
 28928                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 28929  019AC2  0E08               	movlw	8
 28930  019AC4  6FC0               	movwf	192,b	;volatile
 28931                           
 28932                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 28933  019AC6  0E10               	movlw	16
 28934  019AC8  6F19               	movwf	25,b	;volatile
 28935                           
 28936                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 28937  019ACA  0E09               	movlw	9
 28938  019ACC  6FC1               	movwf	193,b	;volatile
 28939                           
 28940                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 28941  019ACE  0E1F               	movlw	31
 28942  019AD0  6F15               	movwf	21,b	;volatile
 28943                           
 28944                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 28945  019AD2  0E13               	movlw	19
 28946  019AD4  6F16               	movwf	22,b	;volatile
 28947                           
 28948                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 28949  019AD6  0E17               	movlw	23
 28950  019AD8  6FE5               	movwf	229,b	;volatile
 28951                           
 28952                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 28953  019ADA  0E14               	movlw	20
 28954  019ADC  6FDF               	movwf	223,b	;volatile
 28955                           
 28956                           ; BSR set to: 58
 28957                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 28958  019ADE  0012               	return		;funcret
 28959  019AE0                     __end_of_PIN_MANAGER_Initialize:
 28960                           	opt callstack 0
 28961                           
 28962 ;; *************** function _OSCILLATOR_Initialize *****************
 28963 ;; Defined at:
 28964 ;;		line 72 in file "mcc_generated_files/mcc.c"
 28965 ;; Parameters:    Size  Location     Type
 28966 ;;		None
 28967 ;; Auto vars:     Size  Location     Type
 28968 ;;		None
 28969 ;; Return value:  Size  Location     Type
 28970 ;;                  1  [STACK] void 
 28971 ;; Registers used:
 28972 ;;		wreg, status,2
 28973 ;; Tracked objects:
 28974 ;;		On entry : 3F/3A
 28975 ;;		On exit  : 3F/39
 28976 ;;		Unchanged: 0/0
 28977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28982 ;;Total ram usage:        0 bytes
 28983 ;; Hardware stack levels used:    1
 28984 ;; Hardware stack levels required when called:   15
 28985 ;; This function calls:
 28986 ;;		Nothing
 28987 ;; This function is called by:
 28988 ;;		_SYSTEM_Initialize
 28989 ;; This function uses a reentrant model
 28990 ;;
 28991                           
 28992                           	psect	text123
 28993  01AF46                     __ptext123:
 28994                           	opt callstack 0
 28995  01AF46                     _OSCILLATOR_Initialize:
 28996                           	opt callstack 14
 28997                           
 28998                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 28999                           
 29000                           ; BSR set to: 58
 29001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29002                           ;incstack = 0
 29003  01AF46  0E20               	movlw	32
 29004  01AF48  0139               	movlb	57	; () banked
 29005  01AF4A  6FD9               	movwf	217,b	;volatile
 29006                           
 29007                           ; BSR set to: 57
 29008                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 29009  01AF4C  6BDB               	clrf	219,b	;volatile
 29010                           
 29011                           ; BSR set to: 57
 29012                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 29013  01AF4E  6BDD               	clrf	221,b	;volatile
 29014                           
 29015                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 29016  01AF50  0E02               	movlw	2
 29017  01AF52  6FDF               	movwf	223,b	;volatile
 29018                           
 29019                           ; BSR set to: 57
 29020                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 29021  01AF54  6BDE               	clrf	222,b	;volatile
 29022  01AF56                     l169:
 29023                           
 29024                           ; BSR set to: 57
 29025                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 29026  01AF56  B1DC               	btfsc	220,0,b	;volatile
 29027  01AF58  0012               	return	
 29028  01AF5A  D7FD               	goto	l169
 29029  01AF5C                     __end_of_OSCILLATOR_Initialize:
 29030                           	opt callstack 0
 29031                           
 29032 ;; *************** function _INTERRUPT_Initialize *****************
 29033 ;; Defined at:
 29034 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29035 ;; Parameters:    Size  Location     Type
 29036 ;;		None
 29037 ;; Auto vars:     Size  Location     Type
 29038 ;;  state           1  [STACK] _Bool 
 29039 ;; Return value:  Size  Location     Type
 29040 ;;                  1  [STACK] void 
 29041 ;; Registers used:
 29042 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 29043 ;; Tracked objects:
 29044 ;;		On entry : 0/0
 29045 ;;		On exit  : 3F/39
 29046 ;;		Unchanged: 0/0
 29047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29052 ;;Total ram usage:        0 bytes
 29053 ;; Hardware stack levels used:    1
 29054 ;; Hardware stack levels required when called:   15
 29055 ;; This function calls:
 29056 ;;		Nothing
 29057 ;; This function is called by:
 29058 ;;		_SYSTEM_Initialize
 29059 ;; This function uses a reentrant model
 29060 ;;
 29061                           
 29062                           	psect	text124
 29063  019EBE                     __ptext124:
 29064                           	opt callstack 0
 29065  019EBE                     _INTERRUPT_Initialize:
 29066                           	opt callstack 0
 29067                           
 29068                           ; BSR set to: 57
 29069                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29070  019EBE  52E6               	movf	postinc1,f,c
 29071                           
 29072                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 29073                           
 29074                           ;incstack = 0
 29075  019EC0  8AD2               	bsf	210,5,c	;volatile
 29076                           
 29077                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 29078  019EC2  AED2               	btfss	16338,7,c	;volatile
 29079  019EC4  D003               	goto	u8820
 29080  019EC6  6A0C               	clrf	(btemp+11)^0,c
 29081  019EC8  2A0C               	incf	(btemp+11)^0,f,c
 29082  019ECA  D001               	goto	u8838
 29083  019ECC                     u8820:
 29084  019ECC  6A0C               	clrf	(btemp+11)^0,c
 29085  019ECE                     u8838:
 29086                           
 29087                           ;stkvar	_state @ sp[(-1)+0]
 29088  019ECE  0EFF               	movlw	-1
 29089  019ED0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29090                           
 29091                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 29092  019ED6  9ED2               	bcf	16338,7,c	;volatile
 29093                           
 29094                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 29095  019ED8  0E55               	movlw	85
 29096  019EDA  6ED4               	movwf	212,c	;volatile
 29097                           
 29098                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 29099  019EDC  0EAA               	movlw	170
 29100  019EDE  6ED4               	movwf	212,c	;volatile
 29101                           
 29102                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 29103  019EE0  90D4               	bcf	212,0,c	;volatile
 29104                           
 29105                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 29106  019EE2  0138               	movlb	56	; () banked
 29107  019EE4  6B9F               	clrf	159,b	;volatile
 29108                           
 29109                           ; BSR set to: 56
 29110                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 29111  019EE6  6B9E               	clrf	158,b	;volatile
 29112                           
 29113                           ; BSR set to: 56
 29114                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 29115  019EE8  0E08               	movlw	8
 29116  019EEA  6F9D               	movwf	157,b	;volatile
 29117                           
 29118                           ; BSR set to: 56
 29119                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 29120  019EEC  0E55               	movlw	85
 29121  019EEE  6ED4               	movwf	212,c	;volatile
 29122                           
 29123                           ; BSR set to: 56
 29124                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 29125  019EF0  0EAA               	movlw	170
 29126  019EF2  6ED4               	movwf	212,c	;volatile
 29127                           
 29128                           ; BSR set to: 56
 29129                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 29130  019EF4  80D4               	bsf	212,0,c	;volatile
 29131                           
 29132                           ; BSR set to: 56
 29133                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 29134                           ;stkvar	_state @ sp[(-1)+0]
 29135  019EF6  0EFF               	movlw	-1
 29136  019EF8  B0E3               	btfsc	plusw1,0,c
 29137  019EFA  D002               	bra	u8845
 29138  019EFC  9ED2               	bcf	16338,7,c	;volatile
 29139  019EFE  D001               	bra	u8846
 29140  019F00                     u8845:
 29141  019F00  8ED2               	bsf	16338,7,c	;volatile
 29142  019F02                     u8846:
 29143                           
 29144                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 29145  019F02  0139               	movlb	57	; () banked
 29146  019F04  8782               	bsf	130,3,b	;volatile
 29147                           
 29148                           ; BSR set to: 57
 29149                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 29150  019F06  8382               	bsf	130,1,b	;volatile
 29151                           
 29152                           ; BSR set to: 57
 29153                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 29154  019F08  8182               	bsf	130,0,b	;volatile
 29155                           
 29156                           ; BSR set to: 57
 29157                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 29158  019F0A  8582               	bsf	130,2,b	;volatile
 29159                           
 29160                           ; BSR set to: 57
 29161                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 29162  019F0C  8786               	bsf	134,3,b	;volatile
 29163                           
 29164                           ; BSR set to: 57
 29165                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 29166  019F0E  8586               	bsf	134,2,b	;volatile
 29167                           
 29168                           ; BSR set to: 57
 29169                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 29170  019F10  8783               	bsf	131,3,b	;volatile
 29171                           
 29172                           ; BSR set to: 57
 29173                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 29174  019F12  8181               	bsf	129,0,b	;volatile
 29175                           
 29176                           ; BSR set to: 57
 29177                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 29178  019F14  9185               	bcf	133,0,b	;volatile
 29179                           
 29180                           ; BSR set to: 57
 29181                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 29182  019F16  8189               	bsf	137,0,b	;volatile
 29183                           
 29184                           ; BSR set to: 57
 29185                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 29186  019F18  9D88               	bcf	136,6,b	;volatile
 29187                           
 29188                           ; BSR set to: 57
 29189                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 29190  019F1A  9D86               	bcf	134,6,b	;volatile
 29191                           
 29192                           ; BSR set to: 57
 29193                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 29194  019F1C  8581               	bsf	129,2,b	;volatile
 29195                           
 29196                           ; BSR set to: 57
 29197                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 29198  019F1E  8781               	bsf	129,3,b	;volatile
 29199                           
 29200                           ; BSR set to: 57
 29201                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 29202  019F20  52E5               	movf	postdec1,f,c
 29203  019F22  0012               	return		;funcret
 29204  019F24                     __end_of_INTERRUPT_Initialize:
 29205                           	opt callstack 0
 29206                           
 29207 ;; *************** function _FVR_Initialize *****************
 29208 ;; Defined at:
 29209 ;;		line 58 in file "mcc_generated_files/fvr.c"
 29210 ;; Parameters:    Size  Location     Type
 29211 ;;		None
 29212 ;; Auto vars:     Size  Location     Type
 29213 ;;		None
 29214 ;; Return value:  Size  Location     Type
 29215 ;;                  1  [STACK] void 
 29216 ;; Registers used:
 29217 ;;		wreg, status,2
 29218 ;; Tracked objects:
 29219 ;;		On entry : 3F/39
 29220 ;;		On exit  : 3F/3E
 29221 ;;		Unchanged: 0/0
 29222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29227 ;;Total ram usage:        0 bytes
 29228 ;; Hardware stack levels used:    1
 29229 ;; Hardware stack levels required when called:   15
 29230 ;; This function calls:
 29231 ;;		Nothing
 29232 ;; This function is called by:
 29233 ;;		_SYSTEM_Initialize
 29234 ;; This function uses a reentrant model
 29235 ;;
 29236                           
 29237                           	psect	text125
 29238  01B046                     __ptext125:
 29239                           	opt callstack 0
 29240  01B046                     _FVR_Initialize:
 29241                           	opt callstack 14
 29242                           
 29243                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 29244                           
 29245                           ; BSR set to: 57
 29246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29247                           ;incstack = 0
 29248  01B046  0EAF               	movlw	175
 29249  01B048  013E               	movlb	62	; () banked
 29250  01B04A  6FC1               	movwf	193,b	;volatile
 29251                           
 29252                           ; BSR set to: 62
 29253                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29254  01B04C  0012               	return		;funcret
 29255  01B04E                     __end_of_FVR_Initialize:
 29256                           	opt callstack 0
 29257                           
 29258 ;; *************** function _EXT_INT_Initialize *****************
 29259 ;; Defined at:
 29260 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 29261 ;; Parameters:    Size  Location     Type
 29262 ;;		None
 29263 ;; Auto vars:     Size  Location     Type
 29264 ;;		None
 29265 ;; Return value:  Size  Location     Type
 29266 ;;                  1  [STACK] void 
 29267 ;; Registers used:
 29268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29269 ;; Tracked objects:
 29270 ;;		On entry : 3F/39
 29271 ;;		On exit  : 3F/39
 29272 ;;		Unchanged: 0/0
 29273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29278 ;;Total ram usage:        0 bytes
 29279 ;; Hardware stack levels used:    1
 29280 ;; Hardware stack levels required when called:   16
 29281 ;; This function calls:
 29282 ;;		_INT0_SetInterruptHandler
 29283 ;;		_INT1_SetInterruptHandler
 29284 ;; This function is called by:
 29285 ;;		_SYSTEM_Initialize
 29286 ;; This function uses a reentrant model
 29287 ;;
 29288                           
 29289                           	psect	text126
 29290  01A7FA                     __ptext126:
 29291                           	opt callstack 0
 29292  01A7FA                     _EXT_INT_Initialize:
 29293                           	opt callstack 13
 29294                           
 29295                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 29296                           
 29297                           ; BSR set to: 62
 29298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29299                           ;incstack = 0
 29300  01A7FA  0139               	movlb	57	; () banked
 29301  01A7FC  91A1               	bcf	161,0,b	;volatile
 29302                           
 29303                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 29304  01A7FE  90D2               	bcf	210,0,c	;volatile
 29305                           
 29306                           ; BSR set to: 57
 29307                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 29308  01A800  0E72               	movlw	low _INT0_DefaultInterruptHandler
 29309  01A802  6EE6               	movwf	postinc1,c
 29310  01A804  0EB0               	movlw	high _INT0_DefaultInterruptHandler
 29311  01A806  6EE6               	movwf	postinc1,c
 29312  01A808  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 29313  01A80A  6EE6               	movwf	postinc1,c
 29314  01A80C  ECDB  F0D5         	call	_INT0_SetInterruptHandler	;wreg free
 29315                           
 29316                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 29317  01A810  0139               	movlb	57	; () banked
 29318  01A812  8191               	bsf	145,0,b	;volatile
 29319                           
 29320                           ; BSR set to: 57
 29321                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 29322  01A814  91A5               	bcf	165,0,b	;volatile
 29323                           
 29324                           ; BSR set to: 57
 29325                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 29326  01A816  92D2               	bcf	210,1,c	;volatile
 29327                           
 29328                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 29329  01A818  0E6E               	movlw	low _INT1_DefaultInterruptHandler
 29330  01A81A  6EE6               	movwf	postinc1,c
 29331  01A81C  0EB0               	movlw	high _INT1_DefaultInterruptHandler
 29332  01A81E  6EE6               	movwf	postinc1,c
 29333  01A820  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 29334  01A822  6EE6               	movwf	postinc1,c
 29335  01A824  ECC7  F0D5         	call	_INT1_SetInterruptHandler	;wreg free
 29336                           
 29337                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 29338  01A828  0139               	movlb	57	; () banked
 29339  01A82A  8195               	bsf	149,0,b	;volatile
 29340                           
 29341                           ; BSR set to: 57
 29342                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 29343  01A82C  0012               	return		;funcret
 29344  01A82E                     __end_of_EXT_INT_Initialize:
 29345                           	opt callstack 0
 29346                           
 29347 ;; *************** function _INT1_SetInterruptHandler *****************
 29348 ;; Defined at:
 29349 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 29350 ;; Parameters:    Size  Location     Type
 29351 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29352 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 29353 ;; Auto vars:     Size  Location     Type
 29354 ;;		None
 29355 ;; Return value:  Size  Location     Type
 29356 ;;                  1  [STACK] void 
 29357 ;; Registers used:
 29358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29359 ;; Tracked objects:
 29360 ;;		On entry : 3F/39
 29361 ;;		On exit  : 0/0
 29362 ;;		Unchanged: 0/0
 29363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29368 ;;Total ram usage:        0 bytes
 29369 ;; Hardware stack levels used:    1
 29370 ;; Hardware stack levels required when called:   15
 29371 ;; This function calls:
 29372 ;;		Nothing
 29373 ;; This function is called by:
 29374 ;;		_EXT_INT_Initialize
 29375 ;;		_start_switch_handler
 29376 ;; This function uses a reentrant model
 29377 ;;
 29378                           
 29379                           	psect	text127
 29380  01AB8E                     __ptext127:
 29381                           	opt callstack 0
 29382  01AB8E                     _INT1_SetInterruptHandler:
 29383                           	opt callstack 14
 29384                           
 29385                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 29386                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29387                           
 29388                           ; BSR set to: 57
 29389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29390                           ;incstack = 0
 29391  01AB8E  50E1               	movf	fsr1l,w,c
 29392  01AB90  0FFD               	addlw	-3
 29393  01AB92  6ED9               	movwf	fsr2l,c
 29394  01AB94  50E2               	movf	fsr1h,w,c
 29395  01AB96  6EDA               	movwf	fsr2h,c
 29396  01AB98  0EFF               	movlw	255
 29397  01AB9A  22DA               	addwfc	fsr2h,f,c
 29398  01AB9C  006F FF78  F0B4    	movff	postinc2,_INT1_InterruptHandler
 29399  01ABA2  006F FF78  F0B5    	movff	postinc2,_INT1_InterruptHandler+1
 29400  01ABA8  006F FF74  F0B6    	movff	postdec2,_INT1_InterruptHandler+2
 29401                           
 29402                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29403  01ABAE  52E5               	movf	postdec1,f,c
 29404  01ABB0  52E5               	movf	postdec1,f,c
 29405  01ABB2  52E5               	movf	postdec1,f,c
 29406  01ABB4  0012               	return		;funcret
 29407  01ABB6                     __end_of_INT1_SetInterruptHandler:
 29408                           	opt callstack 0
 29409                           
 29410 ;; *************** function _INT0_SetInterruptHandler *****************
 29411 ;; Defined at:
 29412 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 29413 ;; Parameters:    Size  Location     Type
 29414 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29415 ;;		 -> INT0_DefaultInterruptHandler(1), 
 29416 ;; Auto vars:     Size  Location     Type
 29417 ;;		None
 29418 ;; Return value:  Size  Location     Type
 29419 ;;                  1  [STACK] void 
 29420 ;; Registers used:
 29421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29422 ;; Tracked objects:
 29423 ;;		On entry : 3F/39
 29424 ;;		On exit  : 0/0
 29425 ;;		Unchanged: 0/0
 29426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29431 ;;Total ram usage:        0 bytes
 29432 ;; Hardware stack levels used:    1
 29433 ;; Hardware stack levels required when called:   15
 29434 ;; This function calls:
 29435 ;;		Nothing
 29436 ;; This function is called by:
 29437 ;;		_EXT_INT_Initialize
 29438 ;; This function uses a reentrant model
 29439 ;;
 29440                           
 29441                           	psect	text128
 29442  01ABB6                     __ptext128:
 29443                           	opt callstack 0
 29444  01ABB6                     _INT0_SetInterruptHandler:
 29445                           	opt callstack 13
 29446                           
 29447                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 29448                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29449                           
 29450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29451                           ;incstack = 0
 29452  01ABB6  50E1               	movf	fsr1l,w,c
 29453  01ABB8  0FFD               	addlw	-3
 29454  01ABBA  6ED9               	movwf	fsr2l,c
 29455  01ABBC  50E2               	movf	fsr1h,w,c
 29456  01ABBE  6EDA               	movwf	fsr2h,c
 29457  01ABC0  0EFF               	movlw	255
 29458  01ABC2  22DA               	addwfc	fsr2h,f,c
 29459  01ABC4  006F FF78  F0B7    	movff	postinc2,_INT0_InterruptHandler
 29460  01ABCA  006F FF78  F0B8    	movff	postinc2,_INT0_InterruptHandler+1
 29461  01ABD0  006F FF74  F0B9    	movff	postdec2,_INT0_InterruptHandler+2
 29462                           
 29463                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29464  01ABD6  52E5               	movf	postdec1,f,c
 29465  01ABD8  52E5               	movf	postdec1,f,c
 29466  01ABDA  52E5               	movf	postdec1,f,c
 29467  01ABDC  0012               	return		;funcret
 29468  01ABDE                     __end_of_INT0_SetInterruptHandler:
 29469                           	opt callstack 0
 29470                           
 29471 ;; *************** function _DMA2_Initialize *****************
 29472 ;; Defined at:
 29473 ;;		line 61 in file "mcc_generated_files/dma2.c"
 29474 ;; Parameters:    Size  Location     Type
 29475 ;;		None
 29476 ;; Auto vars:     Size  Location     Type
 29477 ;;		None
 29478 ;; Return value:  Size  Location     Type
 29479 ;;                  1  [STACK] void 
 29480 ;; Registers used:
 29481 ;;		wreg, status,2
 29482 ;; Tracked objects:
 29483 ;;		On entry : 3F/3D
 29484 ;;		On exit  : 3F/3B
 29485 ;;		Unchanged: 0/0
 29486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29491 ;;Total ram usage:        0 bytes
 29492 ;; Hardware stack levels used:    1
 29493 ;; Hardware stack levels required when called:   15
 29494 ;; This function calls:
 29495 ;;		Nothing
 29496 ;; This function is called by:
 29497 ;;		_SYSTEM_Initialize
 29498 ;; This function uses a reentrant model
 29499 ;;
 29500                           
 29501                           	psect	text129
 29502  01A104                     __ptext129:
 29503                           	opt callstack 0
 29504  01A104                     _DMA2_Initialize:
 29505                           	opt callstack 14
 29506                           
 29507                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 29508                           
 29509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29510                           ;incstack = 0
 29511  01A104  0E00               	movlw	0
 29512  01A106  013B               	movlb	59	; () banked
 29513  01A108  6FD9               	movwf	217,b	;volatile
 29514  01A10A  0E10               	movlw	16
 29515  01A10C  6FDA               	movwf	218,b	;volatile
 29516  01A10E  0E00               	movlw	0
 29517  01A110  6FDB               	movwf	219,b	;volatile
 29518                           
 29519                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 29520  01A112  0E3F               	movlw	63
 29521  01A114  6FD1               	movwf	209,b	;volatile
 29522  01A116  0EBB               	movlw	187
 29523  01A118  6FD0               	movwf	208,b	;volatile
 29524                           
 29525                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 29526  01A11A  0E03               	movlw	3
 29527  01A11C  6FDD               	movwf	221,b	;volatile
 29528                           
 29529                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 29530  01A11E  0E00               	movlw	0
 29531  01A120  6FD8               	movwf	216,b	;volatile
 29532  01A122  0E01               	movlw	1
 29533  01A124  6FD7               	movwf	215,b	;volatile
 29534                           
 29535                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 29536  01A126  0E00               	movlw	0
 29537  01A128  6FCF               	movwf	207,b	;volatile
 29538  01A12A  0E01               	movlw	1
 29539  01A12C  6FCE               	movwf	206,b	;volatile
 29540                           
 29541                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 29542  01A12E  0E1C               	movlw	28
 29543  01A130  6FDF               	movwf	223,b	;volatile
 29544                           
 29545                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 29546  01A132  0E3D               	movlw	61
 29547  01A134  6FDE               	movwf	222,b	;volatile
 29548                           
 29549                           ; BSR set to: 59
 29550                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 29551  01A136  0139               	movlb	57	; () banked
 29552  01A138  97A5               	bcf	165,3,b	;volatile
 29553                           
 29554                           ; BSR set to: 57
 29555                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 29556  01A13A  95A5               	bcf	165,2,b	;volatile
 29557                           
 29558                           ; BSR set to: 57
 29559                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 29560  01A13C  9BA5               	bcf	165,5,b	;volatile
 29561                           
 29562                           ; BSR set to: 57
 29563                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 29564  01A13E  99A5               	bcf	165,4,b	;volatile
 29565                           
 29566                           ; BSR set to: 57
 29567                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 29568  01A140  9795               	bcf	149,3,b	;volatile
 29569                           
 29570                           ; BSR set to: 57
 29571                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 29572  01A142  9595               	bcf	149,2,b	;volatile
 29573                           
 29574                           ; BSR set to: 57
 29575                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 29576  01A144  9B95               	bcf	149,5,b	;volatile
 29577                           
 29578                           ; BSR set to: 57
 29579                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 29580  01A146  9995               	bcf	149,4,b	;volatile
 29581  01A148  9ED2               	bcf	16338,7,c	;# 
 29582  01A14A  0139               	banksel	14831	;# 
 29583  01A14C  0E55               	movlw	85	;# 
 29584  01A14E  6FEF               	movwf	14831,b	;# 
 29585  01A150  0EAA               	movlw	170	;# 
 29586  01A152  6FEF               	movwf	14831,b	;# 
 29587  01A154  81EF               	bsf	14831,0,b	;# 
 29588  01A156  8ED2               	bsf	16338,7,c	;# 
 29589                           
 29590                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 29591  01A158  013B               	movlb	59	; () banked
 29592  01A15A  6BDC               	clrf	220,b	;volatile
 29593                           
 29594                           ; BSR set to: 59
 29595                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29596  01A15C  0012               	return		;funcret
 29597  01A15E                     __end_of_DMA2_Initialize:
 29598                           	opt callstack 0
 29599                           
 29600 ;; *************** function _DMA1_Initialize *****************
 29601 ;; Defined at:
 29602 ;;		line 86 in file "mcc_generated_files/dma1.c"
 29603 ;; Parameters:    Size  Location     Type
 29604 ;;		None
 29605 ;; Auto vars:     Size  Location     Type
 29606 ;;		None
 29607 ;; Return value:  Size  Location     Type
 29608 ;;                  1  [STACK] void 
 29609 ;; Registers used:
 29610 ;;		wreg, status,2
 29611 ;; Tracked objects:
 29612 ;;		On entry : 3F/3B
 29613 ;;		On exit  : 3F/3B
 29614 ;;		Unchanged: 0/0
 29615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29620 ;;Total ram usage:        0 bytes
 29621 ;; Hardware stack levels used:    1
 29622 ;; Hardware stack levels required when called:   15
 29623 ;; This function calls:
 29624 ;;		Nothing
 29625 ;; This function is called by:
 29626 ;;		_SYSTEM_Initialize
 29627 ;; This function uses a reentrant model
 29628 ;;
 29629                           
 29630                           	psect	text130
 29631  019D7E                     __ptext130:
 29632                           	opt callstack 0
 29633  019D7E                     _DMA1_Initialize:
 29634                           	opt callstack 14
 29635                           
 29636                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 29637                           
 29638                           ; BSR set to: 59
 29639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29640                           ;incstack = 0
 29641  019D7E  0E00               	movlw	0
 29642  019D80  013B               	movlb	59	; () banked
 29643  019D82  6FF9               	movwf	249,b	;volatile
 29644  019D84  0E10               	movlw	16
 29645  019D86  6FFA               	movwf	250,b	;volatile
 29646  019D88  0E00               	movlw	0
 29647  019D8A  6FFB               	movwf	251,b	;volatile
 29648                           
 29649                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 29650  019D8C  0E3D               	movlw	61
 29651  019D8E  6FF1               	movwf	241,b	;volatile
 29652  019D90  0E11               	movlw	17
 29653  019D92  6FF0               	movwf	240,b	;volatile
 29654                           
 29655                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 29656  019D94  0E03               	movlw	3
 29657  019D96  6FFD               	movwf	253,b	;volatile
 29658                           
 29659                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 29660  019D98  0E00               	movlw	0
 29661  019D9A  6FF8               	movwf	248,b	;volatile
 29662  019D9C  0E01               	movlw	1
 29663  019D9E  6FF7               	movwf	247,b	;volatile
 29664                           
 29665                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 29666  019DA0  0E00               	movlw	0
 29667  019DA2  6FEF               	movwf	239,b	;volatile
 29668  019DA4  0E01               	movlw	1
 29669  019DA6  6FEE               	movwf	238,b	;volatile
 29670                           
 29671                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 29672  019DA8  0E15               	movlw	21
 29673  019DAA  6FFF               	movwf	255,b	;volatile
 29674                           
 29675                           ; BSR set to: 59
 29676                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 29677  019DAC  6BFE               	clrf	254,b	;volatile
 29678                           
 29679                           ; BSR set to: 59
 29680                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 29681  019DAE  0139               	movlb	57	; () banked
 29682  019DB0  93A2               	bcf	162,1,b	;volatile
 29683                           
 29684                           ; BSR set to: 57
 29685                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 29686  019DB2  91A2               	bcf	162,0,b	;volatile
 29687                           
 29688                           ; BSR set to: 57
 29689                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 29690  019DB4  97A2               	bcf	162,3,b	;volatile
 29691                           
 29692                           ; BSR set to: 57
 29693                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 29694  019DB6  95A2               	bcf	162,2,b	;volatile
 29695                           
 29696                           ; BSR set to: 57
 29697                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 29698  019DB8  8392               	bsf	146,1,b	;volatile
 29699                           
 29700                           ; BSR set to: 57
 29701                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 29702  019DBA  8192               	bsf	146,0,b	;volatile
 29703                           
 29704                           ; BSR set to: 57
 29705                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 29706  019DBC  8792               	bsf	146,3,b	;volatile
 29707                           
 29708                           ; BSR set to: 57
 29709                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 29710  019DBE  8592               	bsf	146,2,b	;volatile
 29711                           
 29712                           ; BSR set to: 57
 29713                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 29714  019DC0  6BF1               	clrf	241,b	;volatile
 29715                           
 29716                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 29717  019DC2  0E01               	movlw	1
 29718  019DC4  6FF2               	movwf	242,b	;volatile
 29719                           
 29720                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 29721  019DC6  0E04               	movlw	4
 29722  019DC8  6FF3               	movwf	243,b	;volatile
 29723                           
 29724                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 29725  019DCA  0E02               	movlw	2
 29726  019DCC  6FF4               	movwf	244,b	;volatile
 29727                           
 29728                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 29729  019DCE  0E03               	movlw	3
 29730  019DD0  6FF7               	movwf	247,b	;volatile
 29731  019DD2  9ED2               	bcf	16338,7,c	;# 
 29732  019DD4  0139               	banksel	14831	;# 
 29733  019DD6  0E55               	movlw	85	;# 
 29734  019DD8  6FEF               	movwf	14831,b	;# 
 29735  019DDA  0EAA               	movlw	170	;# 
 29736  019DDC  6FEF               	movwf	14831,b	;# 
 29737  019DDE  81EF               	bsf	14831,0,b	;# 
 29738  019DE0  8ED2               	bsf	16338,7,c	;# 
 29739                           
 29740                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 29741  019DE2  013B               	movlb	59	; () banked
 29742  019DE4  6BFC               	clrf	252,b	;volatile
 29743                           
 29744                           ; BSR set to: 59
 29745                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29746  019DE6  0012               	return		;funcret
 29747  019DE8                     __end_of_DMA1_Initialize:
 29748                           	opt callstack 0
 29749                           
 29750 ;; *************** function _CLKREF_Initialize *****************
 29751 ;; Defined at:
 29752 ;;		line 58 in file "mcc_generated_files/clkref.c"
 29753 ;; Parameters:    Size  Location     Type
 29754 ;;		None
 29755 ;; Auto vars:     Size  Location     Type
 29756 ;;		None
 29757 ;; Return value:  Size  Location     Type
 29758 ;;                  1  [STACK] void 
 29759 ;; Registers used:
 29760 ;;		wreg, status,2
 29761 ;; Tracked objects:
 29762 ;;		On entry : 3F/3B
 29763 ;;		On exit  : 3F/3C
 29764 ;;		Unchanged: 0/0
 29765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29770 ;;Total ram usage:        0 bytes
 29771 ;; Hardware stack levels used:    1
 29772 ;; Hardware stack levels required when called:   15
 29773 ;; This function calls:
 29774 ;;		Nothing
 29775 ;; This function is called by:
 29776 ;;		_SYSTEM_Initialize
 29777 ;; This function uses a reentrant model
 29778 ;;
 29779                           
 29780                           	psect	text131
 29781  01AFEE                     __ptext131:
 29782                           	opt callstack 0
 29783  01AFEE                     _CLKREF_Initialize:
 29784                           	opt callstack 14
 29785                           
 29786                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 29787                           
 29788                           ; BSR set to: 59
 29789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29790                           ;incstack = 0
 29791  01AFEE  013C               	movlb	60	; () banked
 29792  01AFF0  6BE6               	clrf	230,b	;volatile
 29793                           
 29794                           ; BSR set to: 60
 29795                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 29796  01AFF2  0E94               	movlw	148
 29797  01AFF4  6FE5               	movwf	229,b	;volatile
 29798                           
 29799                           ; BSR set to: 60
 29800                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29801  01AFF6  0012               	return		;funcret
 29802  01AFF8                     __end_of_CLKREF_Initialize:
 29803                           	opt callstack 0
 29804                           
 29805 ;; *************** function _ADCC_Initialize *****************
 29806 ;; Defined at:
 29807 ;;		line 65 in file "mcc_generated_files/adcc.c"
 29808 ;; Parameters:    Size  Location     Type
 29809 ;;		None
 29810 ;; Auto vars:     Size  Location     Type
 29811 ;;		None
 29812 ;; Return value:  Size  Location     Type
 29813 ;;                  1  [STACK] void 
 29814 ;; Registers used:
 29815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29816 ;; Tracked objects:
 29817 ;;		On entry : 3F/3E
 29818 ;;		On exit  : 0/0
 29819 ;;		Unchanged: 0/0
 29820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29825 ;;Total ram usage:        0 bytes
 29826 ;; Hardware stack levels used:    1
 29827 ;; Hardware stack levels required when called:   16
 29828 ;; This function calls:
 29829 ;;		_ADCC_SetADIInterruptHandler
 29830 ;;		_ADCC_SetADTIInterruptHandler
 29831 ;; This function is called by:
 29832 ;;		_SYSTEM_Initialize
 29833 ;; This function uses a reentrant model
 29834 ;;
 29835                           
 29836                           	psect	text132
 29837  019DE8                     __ptext132:
 29838                           	opt callstack 0
 29839  019DE8                     _ADCC_Initialize:
 29840                           	opt callstack 13
 29841                           
 29842                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 29843                           
 29844                           ; BSR set to: 60
 29845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29846                           ;incstack = 0
 29847  019DE8  013E               	movlb	62	; () banked
 29848  019DEA  6BDE               	clrf	222,b	;volatile
 29849                           
 29850                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 29851  019DEC  6BDF               	clrf	223,b	;volatile
 29852                           
 29853                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 29854  019DEE  6BE0               	clrf	224,b	;volatile
 29855                           
 29856                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 29857  019DF0  6BE1               	clrf	225,b	;volatile
 29858                           
 29859                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 29860  019DF2  6BE4               	clrf	228,b	;volatile
 29861                           
 29862                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 29863  019DF4  6BE5               	clrf	229,b	;volatile
 29864                           
 29865                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 29866  019DF6  6BEA               	clrf	234,b	;volatile
 29867                           
 29868                           ; BSR set to: 62
 29869                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 29870  019DF8  0E40               	movlw	64
 29871  019DFA  6FEC               	movwf	236,b	;volatile
 29872                           
 29873                           ; BSR set to: 62
 29874                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 29875  019DFC  6BF1               	clrf	241,b	;volatile
 29876                           
 29877                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 29878  019DFE  0E20               	movlw	32
 29879  019E00  6FF3               	movwf	243,b	;volatile
 29880                           
 29881                           ; BSR set to: 62
 29882                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 29883  019E02  6BF4               	clrf	244,b	;volatile
 29884                           
 29885                           ; BSR set to: 62
 29886                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 29887  019E04  6BF5               	clrf	245,b	;volatile
 29888                           
 29889                           ; BSR set to: 62
 29890                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 29891  019E06  6BF6               	clrf	246,b	;volatile
 29892                           
 29893                           ; BSR set to: 62
 29894                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 29895  019E08  6BF7               	clrf	247,b	;volatile
 29896                           
 29897                           ; BSR set to: 62
 29898                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 29899  019E0A  6BF9               	clrf	249,b	;volatile
 29900                           
 29901                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 29902  019E0C  0E5B               	movlw	91
 29903  019E0E  6FFA               	movwf	250,b	;volatile
 29904                           
 29905                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 29906  019E10  0E27               	movlw	39
 29907  019E12  6FFB               	movwf	251,b	;volatile
 29908                           
 29909                           ; BSR set to: 62
 29910                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 29911  019E14  6BFC               	clrf	252,b	;volatile
 29912                           
 29913                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 29914  019E16  0E02               	movlw	2
 29915  019E18  6FFD               	movwf	253,b	;volatile
 29916                           
 29917                           ; BSR set to: 62
 29918                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 29919  019E1A  6BFE               	clrf	254,b	;volatile
 29920                           
 29921                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 29922  019E1C  0E07               	movlw	7
 29923  019E1E  6FFF               	movwf	255,b	;volatile
 29924                           
 29925                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 29926  019E20  0E84               	movlw	132
 29927  019E22  6FF8               	movwf	248,b	;volatile
 29928                           
 29929                           ; BSR set to: 62
 29930                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 29931  019E24  0139               	movlb	57	; () banked
 29932  019E26  95A1               	bcf	161,2,b	;volatile
 29933                           
 29934                           ; BSR set to: 57
 29935                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 29936  019E28  8591               	bsf	145,2,b	;volatile
 29937                           
 29938                           ; BSR set to: 57
 29939                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 29940  019E2A  0E74               	movlw	low _ADCC_DefaultInterruptHandler
 29941  019E2C  6EE6               	movwf	postinc1,c
 29942  019E2E  0EB0               	movlw	high _ADCC_DefaultInterruptHandler
 29943  019E30  6EE6               	movwf	postinc1,c
 29944  019E32  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 29945  019E34  6EE6               	movwf	postinc1,c
 29946  019E36  EC03  F0D6         	call	_ADCC_SetADIInterruptHandler	;wreg free
 29947                           
 29948                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 29949  019E3A  0139               	movlb	57	; () banked
 29950  019E3C  97A1               	bcf	161,3,b	;volatile
 29951                           
 29952                           ; BSR set to: 57
 29953                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 29954  019E3E  8791               	bsf	145,3,b	;volatile
 29955                           
 29956                           ; BSR set to: 57
 29957                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 29958  019E40  0E74               	movlw	low _ADCC_DefaultInterruptHandler
 29959  019E42  6EE6               	movwf	postinc1,c
 29960  019E44  0EB0               	movlw	high _ADCC_DefaultInterruptHandler
 29961  019E46  6EE6               	movwf	postinc1,c
 29962  019E48  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 29963  019E4A  6EE6               	movwf	postinc1,c
 29964  019E4C  ECEF  F0D5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 29965                           
 29966                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29967  019E50  0012               	return		;funcret
 29968  019E52                     __end_of_ADCC_Initialize:
 29969                           	opt callstack 0
 29970                           
 29971 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 29972 ;; Defined at:
 29973 ;;		line 336 in file "mcc_generated_files/adcc.c"
 29974 ;; Parameters:    Size  Location     Type
 29975 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29976 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 29977 ;; Auto vars:     Size  Location     Type
 29978 ;;		None
 29979 ;; Return value:  Size  Location     Type
 29980 ;;                  1  [STACK] void 
 29981 ;; Registers used:
 29982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29983 ;; Tracked objects:
 29984 ;;		On entry : 0/0
 29985 ;;		On exit  : 0/0
 29986 ;;		Unchanged: 0/0
 29987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29992 ;;Total ram usage:        0 bytes
 29993 ;; Hardware stack levels used:    1
 29994 ;; Hardware stack levels required when called:   15
 29995 ;; This function calls:
 29996 ;;		Nothing
 29997 ;; This function is called by:
 29998 ;;		_ADCC_Initialize
 29999 ;;		_start_adc_scan
 30000 ;; This function uses a reentrant model
 30001 ;;
 30002                           
 30003                           	psect	text133
 30004  01ABDE                     __ptext133:
 30005                           	opt callstack 0
 30006  01ABDE                     _ADCC_SetADTIInterruptHandler:
 30007                           	opt callstack 14
 30008                           
 30009                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 30010                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30011                           
 30012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30013                           ;incstack = 0
 30014  01ABDE  50E1               	movf	fsr1l,w,c
 30015  01ABE0  0FFD               	addlw	-3
 30016  01ABE2  6ED9               	movwf	fsr2l,c
 30017  01ABE4  50E2               	movf	fsr1h,w,c
 30018  01ABE6  6EDA               	movwf	fsr2h,c
 30019  01ABE8  0EFF               	movlw	255
 30020  01ABEA  22DA               	addwfc	fsr2h,f,c
 30021  01ABEC  006F FF78  F0A5    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 30022  01ABF2  006F FF78  F0A6    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 30023  01ABF8  006F FF74  F0A7    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 30024                           
 30025                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 30026  01ABFE  52E5               	movf	postdec1,f,c
 30027  01AC00  52E5               	movf	postdec1,f,c
 30028  01AC02  52E5               	movf	postdec1,f,c
 30029  01AC04  0012               	return		;funcret
 30030  01AC06                     __end_of_ADCC_SetADTIInterruptHandler:
 30031                           	opt callstack 0
 30032                           
 30033 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 30034 ;; Defined at:
 30035 ;;		line 323 in file "mcc_generated_files/adcc.c"
 30036 ;; Parameters:    Size  Location     Type
 30037 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30038 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 30039 ;; Auto vars:     Size  Location     Type
 30040 ;;		None
 30041 ;; Return value:  Size  Location     Type
 30042 ;;                  1  [STACK] void 
 30043 ;; Registers used:
 30044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30045 ;; Tracked objects:
 30046 ;;		On entry : 6/0
 30047 ;;		On exit  : 0/0
 30048 ;;		Unchanged: 0/0
 30049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30054 ;;Total ram usage:        0 bytes
 30055 ;; Hardware stack levels used:    1
 30056 ;; Hardware stack levels required when called:   15
 30057 ;; This function calls:
 30058 ;;		Nothing
 30059 ;; This function is called by:
 30060 ;;		_ADCC_Initialize
 30061 ;;		_start_adc_scan
 30062 ;; This function uses a reentrant model
 30063 ;;
 30064                           
 30065                           	psect	text134
 30066  01AC06                     __ptext134:
 30067                           	opt callstack 0
 30068  01AC06                     _ADCC_SetADIInterruptHandler:
 30069                           	opt callstack 14
 30070                           
 30071                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 30072                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30073                           
 30074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30075                           ;incstack = 0
 30076  01AC06  50E1               	movf	fsr1l,w,c
 30077  01AC08  0FFD               	addlw	-3
 30078  01AC0A  6ED9               	movwf	fsr2l,c
 30079  01AC0C  50E2               	movf	fsr1h,w,c
 30080  01AC0E  6EDA               	movwf	fsr2h,c
 30081  01AC10  0EFF               	movlw	255
 30082  01AC12  22DA               	addwfc	fsr2h,f,c
 30083  01AC14  006F FF78  F0A8    	movff	postinc2,_ADCC_ADI_InterruptHandler
 30084  01AC1A  006F FF78  F0A9    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 30085  01AC20  006F FF74  F0AA    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 30086                           
 30087                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30088  01AC26  52E5               	movf	postdec1,f,c
 30089  01AC28  52E5               	movf	postdec1,f,c
 30090  01AC2A  52E5               	movf	postdec1,f,c
 30091  01AC2C  0012               	return		;funcret
 30092  01AC2E                     __end_of_ADCC_SetADIInterruptHandler:
 30093                           	opt callstack 0
 30094                           
 30095 ;; *************** function _INT1_ISR *****************
 30096 ;; Defined at:
 30097 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 30098 ;; Parameters:    Size  Location     Type
 30099 ;;		None
 30100 ;; Auto vars:     Size  Location     Type
 30101 ;;		None
 30102 ;; Return value:  Size  Location     Type
 30103 ;;                  1    wreg      void 
 30104 ;; Registers used:
 30105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30106 ;; Tracked objects:
 30107 ;;		On entry : 0/0
 30108 ;;		On exit  : 0/0
 30109 ;;		Unchanged: 0/0
 30110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30115 ;;Total ram usage:        4 bytes
 30116 ;; Hardware stack levels used:    1
 30117 ;; Hardware stack levels required when called:    5
 30118 ;; This function calls:
 30119 ;;		_INT1_CallBack
 30120 ;; This function is called by:
 30121 ;;		Interrupt level 1
 30122 ;; This function uses a non-reentrant model
 30123 ;;
 30124                           
 30125                           	psect	text135
 30126  01A674                     __ptext135:
 30127                           	opt callstack 0
 30128  01A674                     _INT1_ISR:
 30129                           	opt callstack 12
 30130                           
 30131                           ;incstack = 0
 30132  01A674  006F FF60  F03E    	movff	status,??_INT1_ISR
 30133  01A67A  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 30134  01A680  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 30135  01A686  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 30136  01A68C  EE16  F061         	lfsr	1,___intlo_sp
 30137                           
 30138                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 30139  01A690  0139               	movlb	57	; () banked
 30140  01A692  91A5               	bcf	165,0,b	;volatile
 30141                           
 30142                           ; BSR set to: 57
 30143                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 30144  01A694  EC78  F0D6         	call	_INT1_CallBack	;wreg free
 30145  01A698  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 30146  01A69E  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 30147  01A6A4  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 30148  01A6AA  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 30149  01A6B0  0011               	retfie		f
 30150  01A6B2                     __end_of_INT1_ISR:
 30151                           	opt callstack 0
 30152                           
 30153 ;; *************** function _INT1_CallBack *****************
 30154 ;; Defined at:
 30155 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 30156 ;; Parameters:    Size  Location     Type
 30157 ;;		None
 30158 ;; Auto vars:     Size  Location     Type
 30159 ;;		None
 30160 ;; Return value:  Size  Location     Type
 30161 ;;                  1  [STACK] void 
 30162 ;; Registers used:
 30163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30164 ;; Tracked objects:
 30165 ;;		On entry : 3F/39
 30166 ;;		On exit  : 0/0
 30167 ;;		Unchanged: 0/0
 30168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30173 ;;Total ram usage:        0 bytes
 30174 ;; Hardware stack levels used:    1
 30175 ;; Hardware stack levels required when called:    4
 30176 ;; This function calls:
 30177 ;;		Absolute function
 30178 ;;		_INT1_DefaultInterruptHandler
 30179 ;;		_switch_handler
 30180 ;; This function is called by:
 30181 ;;		_INT1_ISR
 30182 ;; This function uses a reentrant model
 30183 ;;
 30184                           
 30185                           	psect	text136
 30186  01ACF0                     __ptext136:
 30187                           	opt callstack 0
 30188  01ACF0                     _INT1_CallBack:
 30189                           	opt callstack 12
 30190                           
 30191                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 30192                           
 30193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30194                           ;incstack = 0
 30195  01ACF0  0100               	movlb	0	; () banked
 30196  01ACF2  51B4               	movf	_INT1_InterruptHandler& (0+255),w,b
 30197  01ACF4  11B5               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30198  01ACF6  11B6               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30199  01ACF8  B4D8               	btfsc	status,2,c
 30200  01ACFA  0012               	return	
 30201                           
 30202                           ; BSR set to: 0
 30203                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 30204  01ACFC  D801               	call	u943_28
 30205  01ACFE  0012               	return	
 30206  01AD00                     u943_28:
 30207  01AD00  0005               	push	
 30208  01AD02  6EFA               	movwf	pclath,c
 30209  01AD04  51B4               	movf	_INT1_InterruptHandler& (0+255),w,b
 30210  01AD06  6EFD               	movwf	tosl,c
 30211  01AD08  51B5               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30212  01AD0A  6EFE               	movwf	tosh,c
 30213  01AD0C  51B6               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30214  01AD0E  6EFF               	movwf	tosu,c
 30215  01AD10  50FA               	movf	pclath,w,c
 30216  01AD12  0012               	return		;indir
 30217  01AD14                     __end_of_INT1_CallBack:
 30218                           	opt callstack 0
 30219                           
 30220 ;; *************** function _INT1_DefaultInterruptHandler *****************
 30221 ;; Defined at:
 30222 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 30223 ;; Parameters:    Size  Location     Type
 30224 ;;		None
 30225 ;; Auto vars:     Size  Location     Type
 30226 ;;		None
 30227 ;; Return value:  Size  Location     Type
 30228 ;;                  1  [STACK] void 
 30229 ;; Registers used:
 30230 ;;		None
 30231 ;; Tracked objects:
 30232 ;;		On entry : 3F/0
 30233 ;;		On exit  : 0/0
 30234 ;;		Unchanged: 0/0
 30235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30240 ;;Total ram usage:        0 bytes
 30241 ;; Hardware stack levels used:    1
 30242 ;; Hardware stack levels required when called:    3
 30243 ;; This function calls:
 30244 ;;		Nothing
 30245 ;; This function is called by:
 30246 ;;		_EXT_INT_Initialize
 30247 ;;		_INT1_CallBack
 30248 ;; This function uses a reentrant model
 30249 ;;
 30250                           
 30251                           	psect	text137
 30252  01B06E                     __ptext137:
 30253                           	opt callstack 0
 30254  01B06E                     _INT1_DefaultInterruptHandler:
 30255                           	opt callstack 12
 30256                           
 30257                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30258                           
 30259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30260                           ;incstack = 0
 30261  01B06E  0012               	return		;funcret
 30262  01B070                     __end_of_INT1_DefaultInterruptHandler:
 30263                           	opt callstack 0
 30264                           
 30265 ;; *************** function _switch_handler *****************
 30266 ;; Defined at:
 30267 ;;		line 58 in file "dio.c"
 30268 ;; Parameters:    Size  Location     Type
 30269 ;;		None
 30270 ;; Auto vars:     Size  Location     Type
 30271 ;;  i               1  [STACK] unsigned char 
 30272 ;;  sw_value        1  [STACK] unsigned char 
 30273 ;; Return value:  Size  Location     Type
 30274 ;;                  1  [STACK] void 
 30275 ;; Registers used:
 30276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 30277 ;; Tracked objects:
 30278 ;;		On entry : 3F/0
 30279 ;;		On exit  : 0/0
 30280 ;;		Unchanged: 0/0
 30281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30286 ;;Total ram usage:        0 bytes
 30287 ;; Hardware stack levels used:    1
 30288 ;; Hardware stack levels required when called:    3
 30289 ;; This function calls:
 30290 ;;		Nothing
 30291 ;; This function is called by:
 30292 ;;		_start_switch_handler
 30293 ;;		_INT1_CallBack
 30294 ;; This function uses a reentrant model
 30295 ;;
 30296                           
 30297                           	psect	text138
 30298  018684                     __ptext138:
 30299                           	opt callstack 0
 30300  018684                     _switch_handler:
 30301                           	opt callstack 0
 30302                           
 30303                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30304  018684  52E6               	movf	postinc1,f,c
 30305  018686  52E6               	movf	postinc1,f,c
 30306                           
 30307                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 30308                           ;stkvar	_i @ sp[(-2)+0]
 30309                           
 30310                           ;incstack = 0
 30311  018688  0EFE               	movlw	-2
 30312  01868A  6AE3               	clrf	plusw1,c
 30313  01868C  9EBD               	bcf	189,7,c	;volatile
 30314                           
 30315                           ;dio.c: 72:  __nop();
 30316  01868E  F000               	nop	
 30317                           
 30318                           ;dio.c: 73:  __nop();
 30319  018690  F000               	nop	
 30320                           
 30321                           ;dio.c: 74:  __nop();
 30322  018692  F000               	nop	
 30323  018694  D019               	goto	l10046
 30324  018696                     l10034:
 30325                           
 30326                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 30327  018696  A6CF               	btfss	207,3,c	;volatile
 30328  018698  D011               	goto	u919_20
 30329  01869A  D00D               	goto	u919_21
 30330  01869C                     u916_28:
 30331                           
 30332                           ;stkvar	_sw_value @ sp[(-2)+1]
 30333  01869C  0EFF               	movlw	-1
 30334  01869E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30335                           
 30336                           ;dio.c: 80:    break;
 30337  0186A4  D027               	goto	l10048
 30338  0186A6                     l10036:
 30339                           
 30340                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 30341  0186A6  A4CF               	btfss	207,2,c	;volatile
 30342  0186A8  D009               	goto	u919_20
 30343  0186AA  D005               	goto	u919_21
 30344  0186AC                     l10038:
 30345                           
 30346                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 30347  0186AC  A2CF               	btfss	207,1,c	;volatile
 30348  0186AE  D006               	goto	u919_20
 30349  0186B0  D002               	goto	u919_21
 30350  0186B2                     l10040:
 30351                           
 30352                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 30353  0186B2  A0CF               	btfss	207,0,c	;volatile
 30354  0186B4  D003               	goto	u919_20
 30355  0186B6                     u919_21:
 30356  0186B6  6A0C               	clrf	(btemp+11)^0,c
 30357  0186B8  2A0C               	incf	(btemp+11)^0,f,c
 30358  0186BA  D7F0               	goto	u916_28
 30359  0186BC                     u919_20:
 30360  0186BC  6A0C               	clrf	(btemp+11)^0,c
 30361  0186BE  D7EE               	goto	u916_28
 30362  0186C0                     l10042:
 30363                           
 30364                           ;dio.c: 91:    sw_value = 1;
 30365                           ;stkvar	_sw_value @ sp[(-2)+1]
 30366  0186C0  0EFF               	movlw	-1
 30367  0186C2  6AE3               	clrf	plusw1,c
 30368  0186C4  2AE3               	incf	plusw1,f,c
 30369                           
 30370                           ;dio.c: 92:    break;
 30371  0186C6  D016               	goto	l10048
 30372  0186C8                     l10046:
 30373                           
 30374                           ;stkvar	_i @ sp[(-2)+0]
 30375  0186C8  0EFE               	movlw	-2
 30376  0186CA  50E3               	movf	plusw1,w,c
 30377  0186CC  6E0B               	movwf	(btemp+10)^0,c
 30378  0186CE  6A0C               	clrf	(btemp+11)^0,c
 30379                           
 30380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30381                           ; Switch size 1, requested type "simple"
 30382                           ; Number of cases is 1, Range of values is 0 to 0
 30383                           ; switch strategies available:
 30384                           ; Name         Instructions Cycles
 30385                           ; simple_byte            4     3 (average)
 30386                           ;	Chosen strategy is simple_byte
 30387  0186D0  500C               	movf	(btemp+11)^0,w,c
 30388  0186D2  0A00               	xorlw	0	; case 0
 30389  0186D4  A4D8               	btfss	status,2,c
 30390  0186D6  D7F4               	goto	l10042
 30391                           
 30392                           ; Switch size 1, requested type "simple"
 30393                           ; Number of cases is 4, Range of values is 0 to 3
 30394                           ; switch strategies available:
 30395                           ; Name         Instructions Cycles
 30396                           ; simple_byte           13     7 (average)
 30397                           ;	Chosen strategy is simple_byte
 30398  0186D8  500B               	movf	(btemp+10)^0,w,c
 30399  0186DA  0A00               	xorlw	0	; case 0
 30400  0186DC  B4D8               	btfsc	status,2,c
 30401  0186DE  D7E9               	goto	l10040
 30402  0186E0  0A01               	xorlw	1	; case 1
 30403  0186E2  B4D8               	btfsc	status,2,c
 30404  0186E4  D7E3               	goto	l10038
 30405  0186E6  0A03               	xorlw	3	; case 2
 30406  0186E8  B4D8               	btfsc	status,2,c
 30407  0186EA  D7DD               	goto	l10036
 30408  0186EC  0A01               	xorlw	1	; case 3
 30409  0186EE  B4D8               	btfsc	status,2,c
 30410  0186F0  D7D2               	goto	l10034
 30411  0186F2  D7E6               	goto	l10042
 30412  0186F4                     l10048:
 30413                           
 30414                           ;dio.c: 96:   if (sw_value) {
 30415                           ;stkvar	_sw_value @ sp[(-2)+1]
 30416  0186F4  0EFF               	movlw	-1
 30417  0186F6  50E3               	movf	plusw1,w,c
 30418  0186F8  B4D8               	btfsc	status,2,c
 30419  0186FA  D018               	goto	l10054
 30420                           
 30421                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 30422                           ;stkvar	_i @ sp[(-2)+0]
 30423  0186FC  0EFE               	movlw	-2
 30424  0186FE  50E3               	movf	plusw1,w,c
 30425  018700  0D05               	mullw	5
 30426  018702  0EBC               	movlw	low _S
 30427  018704  24F3               	addwf	243,w,c
 30428  018706  6ED9               	movwf	fsr2l,c
 30429  018708  0E02               	movlw	high _S
 30430  01870A  20F4               	addwfc	prodh,w,c
 30431  01870C  6EDA               	movwf	fsr2h,c
 30432  01870E  04DE               	decf	postinc2,w,c
 30433  018710  A4D8               	btfss	status,2,c
 30434  018712  D049               	goto	l10062
 30435                           
 30436                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 30437                           ;stkvar	_i @ sp[(-2)+0]
 30438  018714  0EFE               	movlw	-2
 30439  018716  50E3               	movf	plusw1,w,c
 30440  018718  0D05               	mullw	5
 30441  01871A  0EBC               	movlw	low _S
 30442  01871C  24F3               	addwf	243,w,c
 30443  01871E  6ED9               	movwf	fsr2l,c
 30444  018720  0E02               	movlw	high _S
 30445  018722  20F4               	addwfc	prodh,w,c
 30446  018724  6EDA               	movwf	fsr2h,c
 30447  018726  0E00               	movlw	0
 30448  018728  6EDF               	movwf	indf2,c
 30449  01872A  D03D               	goto	l10062
 30450  01872C                     l10054:
 30451                           
 30452                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 30453                           ;stkvar	_i @ sp[(-2)+0]
 30454  01872C  0EFE               	movlw	-2
 30455  01872E  50E3               	movf	plusw1,w,c
 30456  018730  0D05               	mullw	5
 30457  018732  0EBC               	movlw	low _S
 30458  018734  24F3               	addwf	243,w,c
 30459  018736  6ED9               	movwf	fsr2l,c
 30460  018738  0E02               	movlw	high _S
 30461  01873A  20F4               	addwfc	prodh,w,c
 30462  01873C  6EDA               	movwf	fsr2h,c
 30463  01873E  50DF               	movf	indf2,w,c
 30464  018740  A4D8               	btfss	status,2,c
 30465  018742  D031               	goto	l10062
 30466                           
 30467                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 30468                           ;stkvar	_i @ sp[(-2)+0]
 30469  018744  0EFE               	movlw	-2
 30470  018746  50E3               	movf	plusw1,w,c
 30471  018748  0D05               	mullw	5
 30472  01874A  0EBC               	movlw	low _S
 30473  01874C  24F3               	addwf	243,w,c
 30474  01874E  6ED9               	movwf	fsr2l,c
 30475  018750  0E02               	movlw	high _S
 30476  018752  20F4               	addwfc	prodh,w,c
 30477  018754  6EDA               	movwf	fsr2h,c
 30478  018756  0E01               	movlw	1
 30479  018758  6EDF               	movwf	indf2,c
 30480                           
 30481                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 30482  01875A  EE20  F2B8         	lfsr	2,_V+184	;volatile
 30483                           
 30484                           ;stkvar	_i @ sp[(-2)+0]
 30485  01875E  0EFE               	movlw	-2
 30486  018760  50E3               	movf	plusw1,w,c
 30487  018762  0D05               	mullw	5
 30488  018764  0EBD               	movlw	low (_S+1)
 30489  018766  24F3               	addwf	243,w,c
 30490  018768  6EE9               	movwf	fsr0l,c
 30491  01876A  0E02               	movlw	high (_S+1)
 30492  01876C  20F4               	addwfc	prodh,w,c
 30493  01876E  6EEA               	movwf	fsr0h,c
 30494  018770  006F FF7B FFEE     	movff	postinc2,postinc0
 30495  018776  006F FF7B FFEE     	movff	postinc2,postinc0
 30496  01877C  006F FF7B FFEE     	movff	postinc2,postinc0
 30497  018782  006F FF7B FFEE     	movff	postinc2,postinc0
 30498                           
 30499                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 30500                           ;stkvar	_i @ sp[(-2)+0]
 30501  018788  0EFE               	movlw	-2
 30502  01878A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30503  018790  0E01               	movlw	1
 30504  018792  6E0B               	movwf	(btemp+10)^0,c
 30505  018794  2A0C               	incf	(btemp+11)^0,f,c
 30506  018796  D002               	goto	u923_24
 30507  018798                     u923_25:
 30508  018798  90D8               	bcf	status,0,c
 30509  01879A  360B               	rlcf	(btemp+10)^0,f,c
 30510  01879C                     u923_24:
 30511  01879C  2E0C               	decfsz	(btemp+11)^0,f,c
 30512  01879E  D7FC               	goto	u923_25
 30513  0187A0  500B               	movf	(btemp+10)^0,w,c
 30514  0187A2  0102               	movlb	2	; () banked
 30515  0187A4  13E4               	iorwf	(_S+40)& (0+255),f,b	;volatile
 30516  0187A6                     l10062:
 30517                           
 30518                           ;dio.c: 107:  } while (++i < 4);
 30519                           ;stkvar	_i @ sp[(-2)+0]
 30520  0187A6  0EFE               	movlw	-2
 30521  0187A8  2AE3               	incf	plusw1,f,c
 30522  0187AA  0EFE               	movlw	-2
 30523  0187AC  006F FF8C  F001    	movff	plusw1,btemp
 30524  0187B2  0E03               	movlw	3
 30525  0187B4  6401               	cpfsgt	btemp^0,c
 30526  0187B6  D788               	goto	l10046
 30527                           
 30528                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 30529  0187B8  8EBD               	bsf	189,7,c	;volatile
 30530                           
 30531                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30532  0187BA  52E5               	movf	postdec1,f,c
 30533  0187BC  52E5               	movf	postdec1,f,c
 30534  0187BE  0012               	return		;funcret
 30535  0187C0                     __end_of_switch_handler:
 30536                           	opt callstack 0
 30537                           
 30538 ;; *************** function _TMR5_ISR *****************
 30539 ;; Defined at:
 30540 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 30541 ;; Parameters:    Size  Location     Type
 30542 ;;		None
 30543 ;; Auto vars:     Size  Location     Type
 30544 ;;		None
 30545 ;; Return value:  Size  Location     Type
 30546 ;;                  1    wreg      void 
 30547 ;; Registers used:
 30548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 30549 ;; Tracked objects:
 30550 ;;		On entry : 0/0
 30551 ;;		On exit  : 0/0
 30552 ;;		Unchanged: 0/0
 30553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30556 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30557 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30558 ;;Total ram usage:        4 bytes
 30559 ;; Hardware stack levels used:    1
 30560 ;; Hardware stack levels required when called:    5
 30561 ;; This function calls:
 30562 ;;		_TMR5_CallBack
 30563 ;;		_TMR5_WriteTimer
 30564 ;; This function is called by:
 30565 ;;		Interrupt level 1
 30566 ;; This function uses a non-reentrant model
 30567 ;;
 30568                           
 30569                           	psect	text139
 30570  01A160                     __ptext139:
 30571                           	opt callstack 0
 30572  01A160                     _TMR5_ISR:
 30573                           	opt callstack 12
 30574                           
 30575                           ;incstack = 0
 30576  01A160  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 30577  01A166  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 30578  01A16C  EE16  F061         	lfsr	1,___intlo_sp
 30579                           
 30580                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 30581  01A170  0139               	movlb	57	; () banked
 30582  01A172  9DA8               	bcf	168,6,b	;volatile
 30583                           
 30584                           ; BSR set to: 57
 30585                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 30586  01A174  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 30587  01A17A  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 30588  01A180  ECFA  F0D2         	call	_TMR5_WriteTimer	;wreg free
 30589                           
 30590                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 30591  01A184  0102               	movlb	2	; () banked
 30592  01A186  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 30593  01A188  6E42               	movwf	??_TMR5_ISR^0,c
 30594  01A18A  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 30595  01A18C  0E05               	movlw	5
 30596  01A18E  2642               	addwf	??_TMR5_ISR^0,f,c
 30597  01A190  0E00               	movlw	0
 30598  01A192  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 30599  01A194  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 30600  01A196  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 30601  01A198  5042               	movf	??_TMR5_ISR^0,w,c
 30602  01A19A  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 30603  01A19C  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 30604  01A19E  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 30605  01A1A0  A0D8               	btfss	status,0,c
 30606  01A1A2  D004               	goto	i1l1017
 30607                           
 30608                           ; BSR set to: 2
 30609                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 30610  01A1A4  EC8A  F0D6         	call	_TMR5_CallBack	;wreg free
 30611                           
 30612                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 30613  01A1A8  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 30614  01A1AA  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 30615  01A1AC                     i1l1017:
 30616  01A1AC  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 30617  01A1B2  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 30618  01A1B8  0011               	retfie		f
 30619  01A1BA                     __end_of_TMR5_ISR:
 30620                           	opt callstack 0
 30621                           
 30622 ;; *************** function _TMR5_WriteTimer *****************
 30623 ;; Defined at:
 30624 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 30625 ;; Parameters:    Size  Location     Type
 30626 ;;  timerVal        2  [STACK] unsigned short 
 30627 ;; Auto vars:     Size  Location     Type
 30628 ;;		None
 30629 ;; Return value:  Size  Location     Type
 30630 ;;                  1  [STACK] void 
 30631 ;; Registers used:
 30632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30633 ;; Tracked objects:
 30634 ;;		On entry : 3F/39
 30635 ;;		On exit  : 0/0
 30636 ;;		Unchanged: 0/0
 30637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30642 ;;Total ram usage:        0 bytes
 30643 ;; Hardware stack levels used:    1
 30644 ;; Hardware stack levels required when called:    3
 30645 ;; This function calls:
 30646 ;;		Nothing
 30647 ;; This function is called by:
 30648 ;;		_TMR5_ISR
 30649 ;; This function uses a reentrant model
 30650 ;;
 30651                           
 30652                           	psect	text140
 30653  01A5F4                     __ptext140:
 30654                           	opt callstack 0
 30655  01A5F4                     _TMR5_WriteTimer:
 30656                           	opt callstack 13
 30657                           
 30658                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 30659                           
 30660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30661                           ;incstack = 0
 30662  01A5F4  A49A               	btfss	154,2,c	;volatile
 30663  01A5F6  D00F               	goto	l10244
 30664                           
 30665                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 30666  01A5F8  909A               	bcf	154,0,c	;volatile
 30667                           
 30668                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 30669                           ;stkvar	_timerVal @ sp[(0)+-2]
 30670  01A5FA  0EFF               	movlw	255
 30671  01A5FC  24E1               	addwf	fsr1l,w,c
 30672  01A5FE  6ED9               	movwf	fsr2l,c
 30673  01A600  0EFF               	movlw	255
 30674  01A602  20E2               	addwfc	fsr1h,w,c
 30675  01A604  6EDA               	movwf	fsr2h,c
 30676  01A606  50DF               	movf	indf2,w,c
 30677  01A608  6E99               	movwf	153,c	;volatile
 30678                           
 30679                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 30680                           ;stkvar	_timerVal @ sp[(0)+-2]
 30681  01A60A  0EFE               	movlw	-2
 30682  01A60C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 30683                           
 30684                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 30685  01A612  809A               	bsf	154,0,c	;volatile
 30686                           
 30687                           ;mcc_generated_files/tmr5.c: 142:  } else {
 30688  01A614  D00C               	goto	l1000
 30689  01A616                     l10244:
 30690                           
 30691                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 30692                           ;stkvar	_timerVal @ sp[(0)+-2]
 30693  01A616  0EFF               	movlw	255
 30694  01A618  24E1               	addwf	fsr1l,w,c
 30695  01A61A  6ED9               	movwf	fsr2l,c
 30696  01A61C  0EFF               	movlw	255
 30697  01A61E  20E2               	addwfc	fsr1h,w,c
 30698  01A620  6EDA               	movwf	fsr2h,c
 30699  01A622  50DF               	movf	indf2,w,c
 30700  01A624  6E99               	movwf	153,c	;volatile
 30701                           
 30702                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 30703                           ;stkvar	_timerVal @ sp[(0)+-2]
 30704  01A626  0EFE               	movlw	-2
 30705  01A628  006F FF8F FF98     	movff	plusw1,16280	;volatile
 30706  01A62E                     l1000:
 30707                           
 30708                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 30709  01A62E  52E5               	movf	postdec1,f,c
 30710  01A630  52E5               	movf	postdec1,f,c
 30711  01A632  0012               	return		;funcret
 30712  01A634                     __end_of_TMR5_WriteTimer:
 30713                           	opt callstack 0
 30714                           
 30715 ;; *************** function _TMR5_CallBack *****************
 30716 ;; Defined at:
 30717 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 30718 ;; Parameters:    Size  Location     Type
 30719 ;;		None
 30720 ;; Auto vars:     Size  Location     Type
 30721 ;;		None
 30722 ;; Return value:  Size  Location     Type
 30723 ;;                  1  [STACK] void 
 30724 ;; Registers used:
 30725 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 30726 ;; Tracked objects:
 30727 ;;		On entry : 3F/2
 30728 ;;		On exit  : 0/0
 30729 ;;		Unchanged: 0/0
 30730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30735 ;;Total ram usage:        0 bytes
 30736 ;; Hardware stack levels used:    1
 30737 ;; Hardware stack levels required when called:    4
 30738 ;; This function calls:
 30739 ;;		Absolute function
 30740 ;;		_TMR5_DefaultInterruptHandler
 30741 ;; This function is called by:
 30742 ;;		_TMR5_ISR
 30743 ;; This function uses a reentrant model
 30744 ;;
 30745                           
 30746                           	psect	text141
 30747  01AD14                     __ptext141:
 30748                           	opt callstack 0
 30749  01AD14                     _TMR5_CallBack:
 30750                           	opt callstack 12
 30751                           
 30752                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 30753                           
 30754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30755                           ;incstack = 0
 30756  01AD14  0100               	movlb	0	; () banked
 30757  01AD16  519F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 30758  01AD18  11A0               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 30759  01AD1A  11A1               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 30760  01AD1C  B4D8               	btfsc	status,2,c
 30761  01AD1E  0012               	return	
 30762                           
 30763                           ; BSR set to: 0
 30764                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 30765  01AD20  D801               	call	u952_28
 30766  01AD22  0012               	return	
 30767  01AD24                     u952_28:
 30768  01AD24  0005               	push	
 30769  01AD26  6EFA               	movwf	pclath,c
 30770  01AD28  519F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 30771  01AD2A  6EFD               	movwf	tosl,c
 30772  01AD2C  51A0               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 30773  01AD2E  6EFE               	movwf	tosh,c
 30774  01AD30  51A1               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 30775  01AD32  6EFF               	movwf	tosu,c
 30776  01AD34  50FA               	movf	pclath,w,c
 30777  01AD36  0012               	return		;indir
 30778  01AD38                     __end_of_TMR5_CallBack:
 30779                           	opt callstack 0
 30780                           
 30781 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 30782 ;; Defined at:
 30783 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 30784 ;; Parameters:    Size  Location     Type
 30785 ;;		None
 30786 ;; Auto vars:     Size  Location     Type
 30787 ;;		None
 30788 ;; Return value:  Size  Location     Type
 30789 ;;                  1  [STACK] void 
 30790 ;; Registers used:
 30791 ;;		wreg, status,2, status,0, btemp+11
 30792 ;; Tracked objects:
 30793 ;;		On entry : 3F/0
 30794 ;;		On exit  : 3F/2
 30795 ;;		Unchanged: 0/0
 30796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30801 ;;Total ram usage:        0 bytes
 30802 ;; Hardware stack levels used:    1
 30803 ;; Hardware stack levels required when called:    3
 30804 ;; This function calls:
 30805 ;;		Nothing
 30806 ;; This function is called by:
 30807 ;;		_TMR5_Initialize
 30808 ;;		_TMR5_CallBack
 30809 ;; This function uses a reentrant model
 30810 ;;
 30811                           
 30812                           	psect	text142
 30813  01A82E                     __ptext142:
 30814                           	opt callstack 0
 30815  01A82E                     _TMR5_DefaultInterruptHandler:
 30816                           	opt callstack 12
 30817                           
 30818                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 30819                           
 30820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30821                           ;incstack = 0
 30822  01A82E  A0BE               	btfss	190,0,c	;volatile
 30823  01A830  D002               	goto	u888_20
 30824  01A832  0E01               	movlw	1
 30825  01A834  D001               	goto	u888_26
 30826  01A836                     u888_20:
 30827  01A836  0E00               	movlw	0
 30828  01A838                     u888_26:
 30829  01A838  0AFF               	xorlw	255
 30830  01A83A  6E0C               	movwf	(btemp+11)^0,c
 30831  01A83C  50BE               	movf	190,w,c	;volatile
 30832  01A83E  180C               	xorwf	(btemp+11)^0,w,c
 30833  01A840  0BFE               	andlw	-2
 30834  01A842  180C               	xorwf	(btemp+11)^0,w,c
 30835  01A844  6EBE               	movwf	190,c	;volatile
 30836                           
 30837                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 30838  01A846  0E01               	movlw	1
 30839  01A848  0102               	movlb	2	; () banked
 30840  01A84A  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 30841  01A84C  0E00               	movlw	0
 30842  01A84E  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 30843  01A850  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 30844  01A852  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 30845                           
 30846                           ; BSR set to: 2
 30847                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 30848  01A854  0E01               	movlw	1
 30849  01A856  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 30850  01A858  0E00               	movlw	0
 30851  01A85A  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 30852  01A85C  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 30853  01A85E  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 30854                           
 30855                           ; BSR set to: 2
 30856                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30857  01A860  0012               	return		;funcret
 30858  01A862                     __end_of_TMR5_DefaultInterruptHandler:
 30859                           	opt callstack 0
 30860                           
 30861 ;; *************** function _TMR3_ISR *****************
 30862 ;; Defined at:
 30863 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 30864 ;; Parameters:    Size  Location     Type
 30865 ;;		None
 30866 ;; Auto vars:     Size  Location     Type
 30867 ;;		None
 30868 ;; Return value:  Size  Location     Type
 30869 ;;                  1    wreg      void 
 30870 ;; Registers used:
 30871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 30872 ;; Tracked objects:
 30873 ;;		On entry : 0/0
 30874 ;;		On exit  : 3F/0
 30875 ;;		Unchanged: 0/0
 30876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30879 ;;      Temps:          0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30880 ;;      Totals:         0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30881 ;;Total ram usage:       25 bytes
 30882 ;; Hardware stack levels used:    1
 30883 ;; Hardware stack levels required when called:   14
 30884 ;; This function calls:
 30885 ;;		_TMR3_CallBack
 30886 ;;		_TMR3_WriteTimer
 30887 ;; This function is called by:
 30888 ;;		Interrupt level 1
 30889 ;; This function uses a non-reentrant model
 30890 ;;
 30891                           
 30892                           	psect	text143
 30893  018294                     __ptext143:
 30894                           	opt callstack 0
 30895  018294                     _TMR3_ISR:
 30896                           	opt callstack 3
 30897                           
 30898                           ; BSR set to: 2
 30899                           ;incstack = 0
 30900  018294  006F FF60  F3E4    	movff	status,??_TMR3_ISR
 30901  01829A  006F FFD8  F3E5    	movff	tblptrl,??_TMR3_ISR+1
 30902  0182A0  006F FFDC  F3E6    	movff	tblptrh,??_TMR3_ISR+2
 30903  0182A6  006F FFE0  F3E7    	movff	tblptru,??_TMR3_ISR+3
 30904  0182AC  006F FFD4  F3E8    	movff	tablat,??_TMR3_ISR+4
 30905  0182B2  0060  F004  F3E9   	movff	btemp,??_TMR3_ISR+5
 30906  0182B8  0060  F008  F3EA   	movff	btemp+1,??_TMR3_ISR+6
 30907  0182BE  0060  F00C  F3EB   	movff	btemp+2,??_TMR3_ISR+7
 30908  0182C4  0060  F010  F3EC   	movff	btemp+3,??_TMR3_ISR+8
 30909  0182CA  0060  F014  F3ED   	movff	btemp+4,??_TMR3_ISR+9
 30910  0182D0  0060  F018  F3EE   	movff	btemp+5,??_TMR3_ISR+10
 30911  0182D6  0060  F01C  F3EF   	movff	btemp+6,??_TMR3_ISR+11
 30912  0182DC  0060  F020  F3F0   	movff	btemp+7,??_TMR3_ISR+12
 30913  0182E2  0060  F024  F3F1   	movff	btemp+8,??_TMR3_ISR+13
 30914  0182E8  0060  F028  F3F2   	movff	btemp+9,??_TMR3_ISR+14
 30915  0182EE  0060  F02C  F3F3   	movff	btemp+10,??_TMR3_ISR+15
 30916  0182F4  0060  F030  F3F4   	movff	btemp+11,??_TMR3_ISR+16
 30917  0182FA  0060  F044  F3F5   	movff	btemp+16,??_TMR3_ISR+17
 30918  018300  0060  F048  F3F6   	movff	btemp+17,??_TMR3_ISR+18
 30919  018306  0060  F04C  F3F7   	movff	btemp+18,??_TMR3_ISR+19
 30920  01830C  0060  F050  F3F8   	movff	btemp+19,??_TMR3_ISR+20
 30921  018312  0060  F054  F3F9   	movff	btemp+20,??_TMR3_ISR+21
 30922  018318  0060  F058  F3FA   	movff	btemp+21,??_TMR3_ISR+22
 30923  01831E  0060  F05C  F3FB   	movff	btemp+22,??_TMR3_ISR+23
 30924  018324  0060  F060  F3FC   	movff	btemp+23,??_TMR3_ISR+24
 30925  01832A  EE16  F061         	lfsr	1,___intlo_sp
 30926                           
 30927                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 30928  01832E  0139               	movlb	57	; () banked
 30929  018330  9DA6               	bcf	166,6,b	;volatile
 30930                           
 30931                           ; BSR set to: 57
 30932                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 30933  018332  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 30934  018338  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 30935  01833E  EC1A  F0D3         	call	_TMR3_WriteTimer	;wreg free
 30936                           
 30937                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 30938  018342  0100               	movlb	0	; () banked
 30939  018344  4BBC               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 30940  018346  2BBD               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 30941  018348  51BD               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 30942  01834A  E104               	bnz	i1u1177_20
 30943  01834C  0E28               	movlw	40
 30944  01834E  5DBC               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 30945  018350  A0D8               	btfss	status,0,c
 30946  018352  D005               	goto	i1l1205
 30947  018354                     i1u1177_20:
 30948                           
 30949                           ; BSR set to: 0
 30950                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 30951  018354  EC9C  F0D6         	call	_TMR3_CallBack	;wreg free
 30952                           
 30953                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 30954  018358  0100               	movlb	0	; () banked
 30955  01835A  6BBC               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 30956  01835C  6BBD               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 30957  01835E                     i1l1205:
 30958                           
 30959                           ; BSR set to: 0
 30960  01835E  0060  FFF0  F018   	movff	??_TMR3_ISR+24,btemp+23
 30961  018364  0060  FFEC  F017   	movff	??_TMR3_ISR+23,btemp+22
 30962  01836A  0060  FFE8  F016   	movff	??_TMR3_ISR+22,btemp+21
 30963  018370  0060  FFE4  F015   	movff	??_TMR3_ISR+21,btemp+20
 30964  018376  0060  FFE0  F014   	movff	??_TMR3_ISR+20,btemp+19
 30965  01837C  0060  FFDC  F013   	movff	??_TMR3_ISR+19,btemp+18
 30966  018382  0060  FFD8  F012   	movff	??_TMR3_ISR+18,btemp+17
 30967  018388  0060  FFD4  F011   	movff	??_TMR3_ISR+17,btemp+16
 30968  01838E  0060  FFD0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 30969  018394  0060  FFCC  F00B   	movff	??_TMR3_ISR+15,btemp+10
 30970  01839A  0060  FFC8  F00A   	movff	??_TMR3_ISR+14,btemp+9
 30971  0183A0  0060  FFC4  F009   	movff	??_TMR3_ISR+13,btemp+8
 30972  0183A6  0060  FFC0  F008   	movff	??_TMR3_ISR+12,btemp+7
 30973  0183AC  0060  FFBC  F007   	movff	??_TMR3_ISR+11,btemp+6
 30974  0183B2  0060  FFB8  F006   	movff	??_TMR3_ISR+10,btemp+5
 30975  0183B8  0060  FFB4  F005   	movff	??_TMR3_ISR+9,btemp+4
 30976  0183BE  0060  FFB0  F004   	movff	??_TMR3_ISR+8,btemp+3
 30977  0183C4  0060  FFAC  F003   	movff	??_TMR3_ISR+7,btemp+2
 30978  0183CA  0060  FFA8  F002   	movff	??_TMR3_ISR+6,btemp+1
 30979  0183D0  0060  FFA4  F001   	movff	??_TMR3_ISR+5,btemp
 30980  0183D6  0060  FFA3  FFF5   	movff	??_TMR3_ISR+4,tablat
 30981  0183DC  0060  FF9F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 30982  0183E2  0060  FF9B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 30983  0183E8  0060  FF97  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 30984  0183EE  0060  FF93  FFD8   	movff	??_TMR3_ISR,status
 30985  0183F4  0011               	retfie		f
 30986  0183F6                     __end_of_TMR3_ISR:
 30987                           	opt callstack 0
 30988                           
 30989 ;; *************** function _TMR3_WriteTimer *****************
 30990 ;; Defined at:
 30991 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 30992 ;; Parameters:    Size  Location     Type
 30993 ;;  timerVal        2  [STACK] unsigned short 
 30994 ;; Auto vars:     Size  Location     Type
 30995 ;;		None
 30996 ;; Return value:  Size  Location     Type
 30997 ;;                  1  [STACK] void 
 30998 ;; Registers used:
 30999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31000 ;; Tracked objects:
 31001 ;;		On entry : 3F/39
 31002 ;;		On exit  : 0/0
 31003 ;;		Unchanged: 0/0
 31004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31009 ;;Total ram usage:        0 bytes
 31010 ;; Hardware stack levels used:    1
 31011 ;; Hardware stack levels required when called:    3
 31012 ;; This function calls:
 31013 ;;		Nothing
 31014 ;; This function is called by:
 31015 ;;		_TMR3_ISR
 31016 ;; This function uses a reentrant model
 31017 ;;
 31018                           
 31019                           	psect	text144
 31020  01A634                     __ptext144:
 31021                           	opt callstack 0
 31022  01A634                     _TMR3_WriteTimer:
 31023                           	opt callstack 13
 31024                           
 31025                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 31026                           
 31027                           ; BSR set to: 0
 31028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31029                           ;incstack = 0
 31030  01A634  A4A6               	btfss	166,2,c	;volatile
 31031  01A636  D00F               	goto	l10262
 31032                           
 31033                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 31034  01A638  90A6               	bcf	166,0,c	;volatile
 31035                           
 31036                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 31037                           ;stkvar	_timerVal @ sp[(0)+-2]
 31038  01A63A  0EFF               	movlw	255
 31039  01A63C  24E1               	addwf	fsr1l,w,c
 31040  01A63E  6ED9               	movwf	fsr2l,c
 31041  01A640  0EFF               	movlw	255
 31042  01A642  20E2               	addwfc	fsr1h,w,c
 31043  01A644  6EDA               	movwf	fsr2h,c
 31044  01A646  50DF               	movf	indf2,w,c
 31045  01A648  6EA5               	movwf	165,c	;volatile
 31046                           
 31047                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 31048                           ;stkvar	_timerVal @ sp[(0)+-2]
 31049  01A64A  0EFE               	movlw	-2
 31050  01A64C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31051                           
 31052                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 31053  01A652  80A6               	bsf	166,0,c	;volatile
 31054                           
 31055                           ;mcc_generated_files/tmr3.c: 141:     }
 31056  01A654  D00C               	goto	l1188
 31057  01A656                     l10262:
 31058                           
 31059                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 31060                           ;stkvar	_timerVal @ sp[(0)+-2]
 31061  01A656  0EFF               	movlw	255
 31062  01A658  24E1               	addwf	fsr1l,w,c
 31063  01A65A  6ED9               	movwf	fsr2l,c
 31064  01A65C  0EFF               	movlw	255
 31065  01A65E  20E2               	addwfc	fsr1h,w,c
 31066  01A660  6EDA               	movwf	fsr2h,c
 31067  01A662  50DF               	movf	indf2,w,c
 31068  01A664  6EA5               	movwf	165,c	;volatile
 31069                           
 31070                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 31071                           ;stkvar	_timerVal @ sp[(0)+-2]
 31072  01A666  0EFE               	movlw	-2
 31073  01A668  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31074  01A66E                     l1188:
 31075                           
 31076                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31077  01A66E  52E5               	movf	postdec1,f,c
 31078  01A670  52E5               	movf	postdec1,f,c
 31079  01A672  0012               	return		;funcret
 31080  01A674                     __end_of_TMR3_WriteTimer:
 31081                           	opt callstack 0
 31082                           
 31083 ;; *************** function _TMR3_CallBack *****************
 31084 ;; Defined at:
 31085 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 31086 ;; Parameters:    Size  Location     Type
 31087 ;;		None
 31088 ;; Auto vars:     Size  Location     Type
 31089 ;;		None
 31090 ;; Return value:  Size  Location     Type
 31091 ;;                  1  [STACK] void 
 31092 ;; Registers used:
 31093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31094 ;; Tracked objects:
 31095 ;;		On entry : 3F/0
 31096 ;;		On exit  : 0/0
 31097 ;;		Unchanged: 0/0
 31098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31103 ;;Total ram usage:        0 bytes
 31104 ;; Hardware stack levels used:    1
 31105 ;; Hardware stack levels required when called:   13
 31106 ;; This function calls:
 31107 ;;		Absolute function
 31108 ;;		_TMR3_DefaultInterruptHandler
 31109 ;;		_calc_bsoc
 31110 ;; This function is called by:
 31111 ;;		_TMR3_ISR
 31112 ;; This function uses a reentrant model
 31113 ;;
 31114                           
 31115                           	psect	text145
 31116  01AD38                     __ptext145:
 31117                           	opt callstack 0
 31118  01AD38                     _TMR3_CallBack:
 31119                           	opt callstack 3
 31120                           
 31121                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 31122                           
 31123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31124                           ;incstack = 0
 31125  01AD38  0100               	movlb	0	; () banked
 31126  01AD3A  519C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31127  01AD3C  119D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31128  01AD3E  119E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31129  01AD40  B4D8               	btfsc	status,2,c
 31130  01AD42  0012               	return	
 31131                           
 31132                           ; BSR set to: 0
 31133                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 31134  01AD44  D801               	call	u1168_28
 31135  01AD46  0012               	return	
 31136  01AD48                     u1168_28:
 31137  01AD48  0005               	push	
 31138  01AD4A  6EFA               	movwf	pclath,c
 31139  01AD4C  519C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31140  01AD4E  6EFD               	movwf	tosl,c
 31141  01AD50  519D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31142  01AD52  6EFE               	movwf	tosh,c
 31143  01AD54  519E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31144  01AD56  6EFF               	movwf	tosu,c
 31145  01AD58  50FA               	movf	pclath,w,c
 31146  01AD5A  0012               	return		;indir
 31147  01AD5C                     __end_of_TMR3_CallBack:
 31148                           	opt callstack 0
 31149                           
 31150 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 31151 ;; Defined at:
 31152 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 31153 ;; Parameters:    Size  Location     Type
 31154 ;;		None
 31155 ;; Auto vars:     Size  Location     Type
 31156 ;;		None
 31157 ;; Return value:  Size  Location     Type
 31158 ;;                  1  [STACK] void 
 31159 ;; Registers used:
 31160 ;;		None
 31161 ;; Tracked objects:
 31162 ;;		On entry : 3F/0
 31163 ;;		On exit  : 0/0
 31164 ;;		Unchanged: 0/0
 31165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31170 ;;Total ram usage:        0 bytes
 31171 ;; Hardware stack levels used:    1
 31172 ;; Hardware stack levels required when called:    3
 31173 ;; This function calls:
 31174 ;;		Nothing
 31175 ;; This function is called by:
 31176 ;;		_TMR3_Initialize
 31177 ;;		_TMR3_CallBack
 31178 ;; This function uses a reentrant model
 31179 ;;
 31180                           
 31181                           	psect	text146
 31182  01B070                     __ptext146:
 31183                           	opt callstack 0
 31184  01B070                     _TMR3_DefaultInterruptHandler:
 31185                           	opt callstack 12
 31186                           
 31187                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31188                           
 31189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31190                           ;incstack = 0
 31191  01B070  0012               	return		;funcret
 31192  01B072                     __end_of_TMR3_DefaultInterruptHandler:
 31193                           	opt callstack 0
 31194                           
 31195 ;; *************** function _calc_bsoc *****************
 31196 ;; Defined at:
 31197 ;;		line 39 in file "bsoc.c"
 31198 ;; Parameters:    Size  Location     Type
 31199 ;;		None
 31200 ;; Auto vars:     Size  Location     Type
 31201 ;;  log_ptr         2  [STACK] PTR unsigned char 
 31202 ;;		 -> port_data(512), 
 31203 ;; Return value:  Size  Location     Type
 31204 ;;                  1  [STACK] void 
 31205 ;; Registers used:
 31206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 31207 ;; Tracked objects:
 31208 ;;		On entry : 3F/0
 31209 ;;		On exit  : 3F/1
 31210 ;;		Unchanged: 0/0
 31211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31216 ;;Total ram usage:        0 bytes
 31217 ;; Hardware stack levels used:    1
 31218 ;; Hardware stack levels required when called:   12
 31219 ;; This function calls:
 31220 ;;		_StartTimer
 31221 ;;		___fladd
 31222 ;;		___fldiv
 31223 ;;		___flge
 31224 ;;		___flmul
 31225 ;;		___flneg
 31226 ;;		___fltol
 31227 ;;		_port_data_dma_ptr
 31228 ;;		_send_port_data_dma
 31229 ;;		_sprintf
 31230 ;;		_strlen
 31231 ;; This function is called by:
 31232 ;;		_init_bsoc
 31233 ;;		_TMR3_CallBack
 31234 ;; This function uses a reentrant model
 31235 ;;
 31236                           
 31237                           	psect	text147
 31238  013DC4                     __ptext147:
 31239                           	opt callstack 0
 31240  013DC4                     _calc_bsoc:
 31241                           	opt callstack 0
 31242                           
 31243                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31244  013DC4  52E6               	movf	postinc1,f,c
 31245  013DC6  52E6               	movf	postinc1,f,c
 31246                           
 31247                           ;incstack = 0
 31248                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 31249  013DC8  82BE               	bsf	190,1,c	;volatile
 31250                           
 31251                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 31252  013DCA  0E00               	movlw	0
 31253  013DCC  6EE6               	movwf	postinc1,c
 31254  013DCE  0E00               	movlw	0
 31255  013DD0  6EE6               	movwf	postinc1,c
 31256  013DD2  0E61               	movlw	97
 31257  013DD4  6EE6               	movwf	postinc1,c
 31258  013DD6  0E45               	movlw	69
 31259  013DD8  6EE6               	movwf	postinc1,c
 31260  013DDA  0060  F513  FFE6   	movff	_C+68,postinc1
 31261  013DE0  0060  F517  FFE6   	movff	_C+69,postinc1
 31262  013DE6  0060  F51B  FFE6   	movff	_C+70,postinc1
 31263  013DEC  0060  F51F  FFE6   	movff	_C+71,postinc1
 31264  013DF2  EC31  F0A2         	call	___fldiv	;wreg free
 31265  013DF6  0060  F007  FFE6   	movff	btemp,postinc1
 31266  013DFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31267  013E02  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31268  013E08  0060  F013  FFE6   	movff	btemp+3,postinc1
 31269  013E0E  0060  F633  FFE6   	movff	_C+140,postinc1
 31270  013E14  0060  F637  FFE6   	movff	_C+141,postinc1
 31271  013E1A  0060  F63B  FFE6   	movff	_C+142,postinc1
 31272  013E20  0060  F63F  FFE6   	movff	_C+143,postinc1
 31273  013E26  EC04  F09B         	call	___fladd	;wreg free
 31274  013E2A  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 31275  013E30  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 31276  013E36  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 31277  013E3C  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 31278                           
 31279                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 31280  013E42  0060  F633  FFE6   	movff	_C+140,postinc1
 31281  013E48  0060  F637  FFE6   	movff	_C+141,postinc1
 31282  013E4E  0060  F63B  FFE6   	movff	_C+142,postinc1
 31283  013E54  0060  F63F  FFE6   	movff	_C+143,postinc1
 31284  013E5A  0060  F623  FFE6   	movff	_C+136,postinc1
 31285  013E60  0060  F627  FFE6   	movff	_C+137,postinc1
 31286  013E66  0060  F62B  FFE6   	movff	_C+138,postinc1
 31287  013E6C  0060  F62F  FFE6   	movff	_C+139,postinc1
 31288  013E72  EC99  F0C0         	call	___flge	;wreg free
 31289  013E76  B001               	btfsc	btemp& (0+255),0,c
 31290  013E78  D008               	goto	l12066
 31291                           
 31292                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 31293  013E7A  C188  F18C         	movff	_C+136,_C+140	;volatile
 31294  013E7E  C189  F18D         	movff	_C+137,_C+141	;volatile
 31295  013E82  C18A  F18E         	movff	_C+138,_C+142	;volatile
 31296  013E86  C18B  F18F         	movff	_C+139,_C+143	;volatile
 31297  013E8A                     l12066:
 31298                           
 31299                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 31300  013E8A  0ECD               	movlw	205
 31301  013E8C  6EE6               	movwf	postinc1,c
 31302  013E8E  0ECC               	movlw	204
 31303  013E90  6EE6               	movwf	postinc1,c
 31304  013E92  0ECC               	movlw	204
 31305  013E94  6EE6               	movwf	postinc1,c
 31306  013E96  0E3D               	movlw	61
 31307  013E98  6EE6               	movwf	postinc1,c
 31308  013E9A  0060  F633  FFE6   	movff	_C+140,postinc1
 31309  013EA0  0060  F637  FFE6   	movff	_C+141,postinc1
 31310  013EA6  0060  F63B  FFE6   	movff	_C+142,postinc1
 31311  013EAC  0060  F63F  FFE6   	movff	_C+143,postinc1
 31312  013EB2  EC99  F0C0         	call	___flge	;wreg free
 31313  013EB6  B001               	btfsc	btemp& (0+255),0,c
 31314  013EB8  D009               	goto	l12070
 31315                           
 31316                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 31317  013EBA  0ECD               	movlw	205
 31318  013EBC  0101               	movlb	1	; () banked
 31319  013EBE  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 31320  013EC0  0ECC               	movlw	204
 31321  013EC2  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 31322  013EC4  0ECC               	movlw	204
 31323  013EC6  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 31324  013EC8  0E3D               	movlw	61
 31325  013ECA  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 31326  013ECC                     l12070:
 31327                           
 31328                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 31329  013ECC  0E00               	movlw	0
 31330  013ECE  6EE6               	movwf	postinc1,c
 31331  013ED0  0E00               	movlw	0
 31332  013ED2  6EE6               	movwf	postinc1,c
 31333  013ED4  0E61               	movlw	97
 31334  013ED6  6EE6               	movwf	postinc1,c
 31335  013ED8  0E45               	movlw	69
 31336  013EDA  6EE6               	movwf	postinc1,c
 31337  013EDC  0060  F523  FFE6   	movff	_C+72,postinc1
 31338  013EE2  0060  F527  FFE6   	movff	_C+73,postinc1
 31339  013EE8  0060  F52B  FFE6   	movff	_C+74,postinc1
 31340  013EEE  0060  F52F  FFE6   	movff	_C+75,postinc1
 31341  013EF4  EC31  F0A2         	call	___fldiv	;wreg free
 31342  013EF8  0060  F007  FFE6   	movff	btemp,postinc1
 31343  013EFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31344  013F04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31345  013F0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 31346  013F10  0060  F643  FFE6   	movff	_C+144,postinc1
 31347  013F16  0060  F647  FFE6   	movff	_C+145,postinc1
 31348  013F1C  0060  F64B  FFE6   	movff	_C+146,postinc1
 31349  013F22  0060  F64F  FFE6   	movff	_C+147,postinc1
 31350  013F28  EC04  F09B         	call	___fladd	;wreg free
 31351  013F2C  0060  F004  F190   	movff	btemp,_C+144	;volatile
 31352  013F32  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 31353  013F38  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 31354  013F3E  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 31355                           
 31356                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 31357  013F44  0E00               	movlw	0
 31358  013F46  6EE6               	movwf	postinc1,c
 31359  013F48  0E00               	movlw	0
 31360  013F4A  6EE6               	movwf	postinc1,c
 31361  013F4C  0E61               	movlw	97
 31362  013F4E  6EE6               	movwf	postinc1,c
 31363  013F50  0E45               	movlw	69
 31364  013F52  6EE6               	movwf	postinc1,c
 31365  013F54  0060  F5E3  FFE6   	movff	_C+120,postinc1
 31366  013F5A  0060  F5E7  FFE6   	movff	_C+121,postinc1
 31367  013F60  0060  F5EB  FFE6   	movff	_C+122,postinc1
 31368  013F66  0060  F5EF  FFE6   	movff	_C+123,postinc1
 31369  013F6C  EC31  F0A2         	call	___fldiv	;wreg free
 31370  013F70  0060  F007  FFE6   	movff	btemp,postinc1
 31371  013F76  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31372  013F7C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31373  013F82  0060  F013  FFE6   	movff	btemp+3,postinc1
 31374  013F88  0060  F683  FFE6   	movff	_C+160,postinc1
 31375  013F8E  0060  F687  FFE6   	movff	_C+161,postinc1
 31376  013F94  0060  F68B  FFE6   	movff	_C+162,postinc1
 31377  013F9A  0060  F68F  FFE6   	movff	_C+163,postinc1
 31378  013FA0  EC04  F09B         	call	___fladd	;wreg free
 31379  013FA4  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 31380  013FAA  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 31381  013FB0  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 31382  013FB6  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 31383                           
 31384                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 31385  013FBC  0E00               	movlw	0
 31386  013FBE  6EE6               	movwf	postinc1,c
 31387  013FC0  0E00               	movlw	0
 31388  013FC2  6EE6               	movwf	postinc1,c
 31389  013FC4  0E61               	movlw	97
 31390  013FC6  6EE6               	movwf	postinc1,c
 31391  013FC8  0E45               	movlw	69
 31392  013FCA  6EE6               	movwf	postinc1,c
 31393  013FCC  0060  F5D3  FFE6   	movff	_C+116,postinc1
 31394  013FD2  0060  F5D7  FFE6   	movff	_C+117,postinc1
 31395  013FD8  0060  F5DB  FFE6   	movff	_C+118,postinc1
 31396  013FDE  0060  F5DF  FFE6   	movff	_C+119,postinc1
 31397  013FE4  EC31  F0A2         	call	___fldiv	;wreg free
 31398  013FE8  0060  F007  FFE6   	movff	btemp,postinc1
 31399  013FEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31400  013FF4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31401  013FFA  0060  F013  FFE6   	movff	btemp+3,postinc1
 31402  014000  0060  F693  FFE6   	movff	_C+164,postinc1
 31403  014006  0060  F697  FFE6   	movff	_C+165,postinc1
 31404  01400C  0060  F69B  FFE6   	movff	_C+166,postinc1
 31405  014012  0060  F69F  FFE6   	movff	_C+167,postinc1
 31406  014018  EC04  F09B         	call	___fladd	;wreg free
 31407  01401C  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 31408  014022  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 31409  014028  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 31410  01402E  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 31411                           
 31412                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 31413  014034  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31414  01403A  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31415  014040  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31416  014046  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31417  01404C  0E00               	movlw	0
 31418  01404E  6EE6               	movwf	postinc1,c
 31419  014050  0E00               	movlw	0
 31420  014052  6EE6               	movwf	postinc1,c
 31421  014054  0E00               	movlw	0
 31422  014056  6EE6               	movwf	postinc1,c
 31423  014058  0E00               	movlw	0
 31424  01405A  6EE6               	movwf	postinc1,c
 31425  01405C  EC99  F0C0         	call	___flge	;wreg free
 31426  014060  B001               	btfsc	btemp& (0+255),0,c
 31427  014062  D03C               	goto	l12080
 31428                           
 31429                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 31430  014064  0E00               	movlw	0
 31431  014066  6EE6               	movwf	postinc1,c
 31432  014068  0E00               	movlw	0
 31433  01406A  6EE6               	movwf	postinc1,c
 31434  01406C  0E61               	movlw	97
 31435  01406E  6EE6               	movwf	postinc1,c
 31436  014070  0E45               	movlw	69
 31437  014072  6EE6               	movwf	postinc1,c
 31438  014074  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31439  01407A  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31440  014080  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31441  014086  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31442  01408C  EC31  F0A2         	call	___fldiv	;wreg free
 31443  014090  0060  F007  FFE6   	movff	btemp,postinc1
 31444  014096  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31445  01409C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31446  0140A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 31447  0140A8  0060  F663  FFE6   	movff	_C+152,postinc1
 31448  0140AE  0060  F667  FFE6   	movff	_C+153,postinc1
 31449  0140B4  0060  F66B  FFE6   	movff	_C+154,postinc1
 31450  0140BA  0060  F66F  FFE6   	movff	_C+155,postinc1
 31451  0140C0  EC04  F09B         	call	___fladd	;wreg free
 31452  0140C4  0060  F004  F198   	movff	btemp,_C+152	;volatile
 31453  0140CA  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 31454  0140D0  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 31455  0140D6  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 31456  0140DC                     l12080:
 31457                           
 31458                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 31459  0140DC  0101               	movlb	1	; () banked
 31460  0140DE  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 31461  0140E0  D03C               	goto	l12084
 31462                           
 31463                           ; BSR set to: 1
 31464                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 31465  0140E2  0E00               	movlw	0
 31466  0140E4  6EE6               	movwf	postinc1,c
 31467  0140E6  0E00               	movlw	0
 31468  0140E8  6EE6               	movwf	postinc1,c
 31469  0140EA  0E61               	movlw	97
 31470  0140EC  6EE6               	movwf	postinc1,c
 31471  0140EE  0E45               	movlw	69
 31472  0140F0  6EE6               	movwf	postinc1,c
 31473  0140F2  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31474  0140F8  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31475  0140FE  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31476  014104  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31477  01410A  EC31  F0A2         	call	___fldiv	;wreg free
 31478  01410E  0060  F007  FFE6   	movff	btemp,postinc1
 31479  014114  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31480  01411A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31481  014120  0060  F013  FFE6   	movff	btemp+3,postinc1
 31482  014126  0060  F673  FFE6   	movff	_C+156,postinc1
 31483  01412C  0060  F677  FFE6   	movff	_C+157,postinc1
 31484  014132  0060  F67B  FFE6   	movff	_C+158,postinc1
 31485  014138  0060  F67F  FFE6   	movff	_C+159,postinc1
 31486  01413E  EC04  F09B         	call	___fladd	;wreg free
 31487  014142  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 31488  014148  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 31489  01414E  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 31490  014154  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 31491  01415A                     l12084:
 31492                           
 31493                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 31494  01415A  0E00               	movlw	0
 31495  01415C  6EE6               	movwf	postinc1,c
 31496  01415E  0E00               	movlw	0
 31497  014160  6EE6               	movwf	postinc1,c
 31498  014162  0EC8               	movlw	200
 31499  014164  6EE6               	movwf	postinc1,c
 31500  014166  0E42               	movlw	66
 31501  014168  6EE6               	movwf	postinc1,c
 31502  01416A  0060  F623  FFE6   	movff	_C+136,postinc1
 31503  014170  0060  F627  FFE6   	movff	_C+137,postinc1
 31504  014176  0060  F62B  FFE6   	movff	_C+138,postinc1
 31505  01417C  0060  F62F  FFE6   	movff	_C+139,postinc1
 31506  014182  0060  F633  FFE6   	movff	_C+140,postinc1
 31507  014188  0060  F637  FFE6   	movff	_C+141,postinc1
 31508  01418E  0060  F63B  FFE6   	movff	_C+142,postinc1
 31509  014194  0060  F63F  FFE6   	movff	_C+143,postinc1
 31510  01419A  EC31  F0A2         	call	___fldiv	;wreg free
 31511  01419E  0060  F007  FFE6   	movff	btemp,postinc1
 31512  0141A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31513  0141AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31514  0141B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 31515  0141B6  ECEF  F096         	call	___flmul	;wreg free
 31516  0141BA  0060  F007  FFE6   	movff	btemp,postinc1
 31517  0141C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31518  0141C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31519  0141CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 31520  0141D2  EC28  F0BF         	call	___fltol	;wreg free
 31521  0141D6  0060  F004  F00B   	movff	btemp,btemp+10
 31522  0141DC  0060  F008  F00C   	movff	btemp+1,btemp+11
 31523  0141E2  0E01               	movlw	1
 31524  0141E4  240B               	addwf	(btemp+10)^0,w,c
 31525  0141E6  0101               	movlb	1	; () banked
 31526  0141E8  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 31527  0141EA  0E00               	movlw	0
 31528  0141EC  200C               	addwfc	(btemp+11)^0,w,c
 31529  0141EE  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 31530                           
 31531                           ; BSR set to: 1
 31532                           ;bsoc.c: 60:  if (C.soc > 100)
 31533  0141F0  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
 31534  0141F2  E104               	bnz	u1164_20
 31535  0141F4  0E65               	movlw	101
 31536  0141F6  5DAA               	subwf	(_C+170)& (0+255),w,b	;volatile
 31537  0141F8  A0D8               	btfss	status,0,c
 31538  0141FA  D004               	goto	l12090
 31539  0141FC                     u1164_20:
 31540                           
 31541                           ; BSR set to: 1
 31542                           ;bsoc.c: 61:   C.soc = 100;
 31543  0141FC  0E00               	movlw	0
 31544  0141FE  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 31545  014200  0E64               	movlw	100
 31546  014202  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 31547  014204                     l12090:
 31548                           
 31549                           ; BSR set to: 1
 31550                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 31551  014204  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 31552  014206  D043               	goto	l12094
 31553                           
 31554                           ; BSR set to: 1
 31555                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 31556  014208  0060  F513  FFE6   	movff	_C+68,postinc1
 31557  01420E  0060  F517  FFE6   	movff	_C+69,postinc1
 31558  014214  0060  F51B  FFE6   	movff	_C+70,postinc1
 31559  01421A  0060  F51F  FFE6   	movff	_C+71,postinc1
 31560  014220  0060  F633  FFE6   	movff	_C+140,postinc1
 31561  014226  0060  F637  FFE6   	movff	_C+141,postinc1
 31562  01422C  0060  F63B  FFE6   	movff	_C+142,postinc1
 31563  014232  0060  F63F  FFE6   	movff	_C+143,postinc1
 31564  014238  EC31  F0A2         	call	___fldiv	;wreg free
 31565  01423C  0060  F007  FFE6   	movff	btemp,postinc1
 31566  014242  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31567  014248  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31568  01424E  0060  F013  FFE6   	movff	btemp+3,postinc1
 31569  014254  ECA4  F0D1         	call	___flneg	;wreg free
 31570  014258  0060  F007  FFE6   	movff	btemp,postinc1
 31571  01425E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31572  014264  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31573  01426A  0060  F013  FFE6   	movff	btemp+3,postinc1
 31574  014270  EC28  F0BF         	call	___fltol	;wreg free
 31575  014274  0060  F004  F00B   	movff	btemp,btemp+10
 31576  01427A  0060  F008  F00C   	movff	btemp+1,btemp+11
 31577  014280  0060  F02C  F1A8   	movff	btemp+10,_C+168	;volatile
 31578  014286  0060  F030  F1A9   	movff	btemp+11,_C+169	;volatile
 31579                           
 31580                           ;bsoc.c: 65:  } else {
 31581  01428C  D004               	goto	l12096
 31582  01428E                     l12094:
 31583                           
 31584                           ; BSR set to: 1
 31585                           ;bsoc.c: 66:   C.runtime = 120;
 31586  01428E  0E00               	movlw	0
 31587  014290  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 31588  014292  0E78               	movlw	120
 31589  014294  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 31590  014296                     l12096:
 31591                           
 31592                           ;bsoc.c: 68:  if (C.runtime > 120)
 31593  014296  0101               	movlb	1	; () banked
 31594  014298  51A9               	movf	(_C+169)& (0+255),w,b	;volatile
 31595  01429A  E104               	bnz	u1166_20
 31596  01429C  0E79               	movlw	121
 31597  01429E  5DA8               	subwf	(_C+168)& (0+255),w,b	;volatile
 31598  0142A0  A0D8               	btfss	status,0,c
 31599  0142A2  D004               	goto	l12100
 31600  0142A4                     u1166_20:
 31601                           
 31602                           ; BSR set to: 1
 31603                           ;bsoc.c: 69:   C.runtime = 120;
 31604  0142A4  0E00               	movlw	0
 31605  0142A6  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 31606  0142A8  0E78               	movlw	120
 31607  0142AA  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 31608  0142AC                     l12100:
 31609                           
 31610                           ; BSR set to: 1
 31611                           ;bsoc.c: 71:  V.lowint_count++;
 31612  0142AC  0E01               	movlw	1
 31613  0142AE  0102               	movlb	2	; () banked
 31614  0142B0  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 31615  0142B2  0E00               	movlw	0
 31616  0142B4  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 31617  0142B6  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 31618  0142B8  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 31619                           
 31620                           ; BSR set to: 2
 31621                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 31622  0142BA  ECFC  F0D7         	call	_port_data_dma_ptr	;wreg free
 31623                           
 31624                           ;stkvar	_log_ptr @ sp[(-2)+0]
 31625  0142BE  0EFF               	movlw	-1
 31626  0142C0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 31627  0142C6  0EFE               	movlw	-2
 31628  0142C8  0060  F007  FFE3   	movff	btemp,plusw1
 31629                           
 31630                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 31631  0142CE  0060  F613  FFE6   	movff	_C+132,postinc1
 31632  0142D4  0060  F617  FFE6   	movff	_C+133,postinc1
 31633  0142DA  0060  F61B  FFE6   	movff	_C+134,postinc1
 31634  0142E0  0060  F61F  FFE6   	movff	_C+135,postinc1
 31635  0142E6  0060  F6A3  FFE6   	movff	_C+168,postinc1
 31636  0142EC  0060  F6A7  FFE6   	movff	_C+169,postinc1
 31637  0142F2  0060  F6AB  FFE6   	movff	_C+170,postinc1
 31638  0142F8  0060  F6AF  FFE6   	movff	_C+171,postinc1
 31639  0142FE  0060  F643  FFE6   	movff	_C+144,postinc1
 31640  014304  0060  F647  FFE6   	movff	_C+145,postinc1
 31641  01430A  0060  F64B  FFE6   	movff	_C+146,postinc1
 31642  014310  0060  F64F  FFE6   	movff	_C+147,postinc1
 31643  014316  0060  F633  FFE6   	movff	_C+140,postinc1
 31644  01431C  0060  F637  FFE6   	movff	_C+141,postinc1
 31645  014322  0060  F63B  FFE6   	movff	_C+142,postinc1
 31646  014328  0060  F63F  FFE6   	movff	_C+143,postinc1
 31647  01432E  0060  F5D3  FFE6   	movff	_C+116,postinc1
 31648  014334  0060  F5D7  FFE6   	movff	_C+117,postinc1
 31649  01433A  0060  F5DB  FFE6   	movff	_C+118,postinc1
 31650  014340  0060  F5DF  FFE6   	movff	_C+119,postinc1
 31651  014346  0060  F5C3  FFE6   	movff	_C+112,postinc1
 31652  01434C  0060  F5C7  FFE6   	movff	_C+113,postinc1
 31653  014352  0060  F5CB  FFE6   	movff	_C+114,postinc1
 31654  014358  0060  F5CF  FFE6   	movff	_C+115,postinc1
 31655  01435E  0060  F5E3  FFE6   	movff	_C+120,postinc1
 31656  014364  0060  F5E7  FFE6   	movff	_C+121,postinc1
 31657  01436A  0060  F5EB  FFE6   	movff	_C+122,postinc1
 31658  014370  0060  F5EF  FFE6   	movff	_C+123,postinc1
 31659  014376  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31660  01437C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31661  014382  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31662  014388  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31663  01438E  0060  F593  FFE6   	movff	_C+100,postinc1
 31664  014394  0060  F597  FFE6   	movff	_C+101,postinc1
 31665  01439A  0060  F59B  FFE6   	movff	_C+102,postinc1
 31666  0143A0  0060  F59F  FFE6   	movff	_C+103,postinc1
 31667  0143A6  0060  F533  FFE6   	movff	_C+76,postinc1
 31668  0143AC  0060  F537  FFE6   	movff	_C+77,postinc1
 31669  0143B2  0060  F53B  FFE6   	movff	_C+78,postinc1
 31670  0143B8  0060  F53F  FFE6   	movff	_C+79,postinc1
 31671  0143BE  0060  F543  FFE6   	movff	_C+80,postinc1
 31672  0143C4  0060  F547  FFE6   	movff	_C+81,postinc1
 31673  0143CA  0060  F54B  FFE6   	movff	_C+82,postinc1
 31674  0143D0  0060  F54F  FFE6   	movff	_C+83,postinc1
 31675  0143D6  0060  F553  FFE6   	movff	_C+84,postinc1
 31676  0143DC  0060  F557  FFE6   	movff	_C+85,postinc1
 31677  0143E2  0060  F55B  FFE6   	movff	_C+86,postinc1
 31678  0143E8  0060  F55F  FFE6   	movff	_C+87,postinc1
 31679  0143EE  0060  FA07  FFE6   	movff	_V+129,postinc1
 31680  0143F4  0060  FA0B  FFE6   	movff	_V+130,postinc1
 31681  0143FA  0060  FA0F  FFE6   	movff	_V+131,postinc1
 31682  014400  0060  FA13  FFE6   	movff	_V+132,postinc1
 31683  014406  0E2D               	movlw	low STR_55
 31684  014408  6EE6               	movwf	postinc1,c
 31685  01440A  0EFD               	movlw	high STR_55
 31686  01440C  6EE6               	movwf	postinc1,c
 31687                           
 31688                           ;stkvar	_log_ptr @ sp[(-56)+0]
 31689  01440E  0EC8               	movlw	-56
 31690  014410  006F FF8F FFE6     	movff	plusw1,postinc1
 31691  014416  006F FF8F FFE6     	movff	plusw1,postinc1
 31692  01441C  0E38               	movlw	56
 31693  01441E  6EE6               	movwf	postinc1,c
 31694  014420  ECA7  F0C6         	call	_sprintf	;wreg free
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;bsoc.c: 80:  StartTimer(TMR_DISPLAY, 125);
 31698  014424  0E7D               	movlw	125
 31699  014426  6EE6               	movwf	postinc1,c
 31700  014428  0E00               	movlw	0
 31701  01442A  6EE6               	movwf	postinc1,c
 31702  01442C  0E0A               	movlw	10
 31703  01442E  6EE6               	movwf	postinc1,c
 31704  014430  ECBA  F0D2         	call	_StartTimer	;wreg free
 31705                           
 31706                           ;bsoc.c: 81:  send_port_data_dma(strlen((char*) log_ptr));
 31707                           ;stkvar	_log_ptr @ sp[(-2)+0]
 31708  014434  0EFE               	movlw	-2
 31709  014436  006F FF8F FFE6     	movff	plusw1,postinc1
 31710  01443C  006F FF8F FFE6     	movff	plusw1,postinc1
 31711  014442  ECF8  F0CB         	call	_strlen	;wreg free
 31712  014446  0060  F007  FFE6   	movff	btemp,postinc1
 31713  01444C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31714  014452  EC2F  F0D1         	call	_send_port_data_dma	;wreg free
 31715                           
 31716                           ; BSR set to: 59
 31717                           ;bsoc.c: 82:  C.update = 0;
 31718  014456  0101               	movlb	1	; () banked
 31719  014458  6BAC               	clrf	(_C+172)& (0+255),b	;volatile
 31720                           
 31721                           ; BSR set to: 1
 31722  01445A  92BE               	bcf	190,1,c	;volatile
 31723                           
 31724                           ; BSR set to: 1
 31725                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 31726  01445C  52E5               	movf	postdec1,f,c
 31727  01445E  52E5               	movf	postdec1,f,c
 31728  014460  0012               	return		;funcret
 31729  014462                     __end_of_calc_bsoc:
 31730                           	opt callstack 0
 31731                           
 31732 ;; *************** function _send_port_data_dma *****************
 31733 ;; Defined at:
 31734 ;;		line 258 in file "eadog.c"
 31735 ;; Parameters:    Size  Location     Type
 31736 ;;  dsize           2  [STACK] unsigned short 
 31737 ;; Auto vars:     Size  Location     Type
 31738 ;;		None
 31739 ;; Return value:  Size  Location     Type
 31740 ;;                  1  [STACK] void 
 31741 ;; Registers used:
 31742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 31743 ;; Tracked objects:
 31744 ;;		On entry : 0/0
 31745 ;;		On exit  : 3F/3B
 31746 ;;		Unchanged: 0/0
 31747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31752 ;;Total ram usage:        0 bytes
 31753 ;; Hardware stack levels used:    1
 31754 ;; Hardware stack levels required when called:    3
 31755 ;; This function calls:
 31756 ;;		Nothing
 31757 ;; This function is called by:
 31758 ;;		_calc_bsoc
 31759 ;; This function uses a reentrant model
 31760 ;;
 31761                           
 31762                           	psect	text148
 31763  01A25E                     __ptext148:
 31764                           	opt callstack 0
 31765  01A25E                     _send_port_data_dma:
 31766                           	opt callstack 11
 31767                           
 31768                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 31769                           ;stkvar	_dsize @ sp[(0)+-2]
 31770                           
 31771                           ; BSR set to: 1
 31772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31773                           ;incstack = 0
 31774  01A25E  0EFE               	movlw	-2
 31775  01A260  04E3               	decf	plusw1,w,c
 31776  01A262  0EFF               	movlw	-1
 31777  01A264  006F FF8C  F001    	movff	plusw1,btemp
 31778  01A26A  0E02               	movlw	2
 31779  01A26C  5A01               	subwfb	btemp^0,f,c
 31780  01A26E  A0D8               	btfss	status,0,c
 31781  01A270  D00C               	goto	l9346
 31782                           
 31783                           ;eadog.c: 261:   dsize = 512;
 31784  01A272  0E00               	movlw	0
 31785  01A274  6E0B               	movwf	(btemp+10)^0,c
 31786  01A276  0E02               	movlw	2
 31787  01A278  6E0C               	movwf	(btemp+11)^0,c
 31788                           
 31789                           ;stkvar	_dsize @ sp[(0)+-2]
 31790  01A27A  0EFE               	movlw	-2
 31791  01A27C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31792  01A282  0EFF               	movlw	-1
 31793  01A284  0060  F033  FFE3   	movff	btemp+11,plusw1
 31794  01A28A                     l9346:
 31795                           
 31796                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 31797  01A28A  013B               	movlb	59	; () banked
 31798  01A28C  9FDC               	bcf	220,7,b	;volatile
 31799                           
 31800                           ; BSR set to: 59
 31801                           ;eadog.c: 264:  DMA2SSZ = dsize;
 31802                           ;stkvar	_dsize @ sp[(0)+-2]
 31803  01A28E  0EFE               	movlw	-2
 31804  01A290  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 31805  01A296  0EFF               	movlw	-1
 31806  01A298  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 31807                           
 31808                           ; BSR set to: 59
 31809                           ;eadog.c: 265:  DMA2DSZ = 1;
 31810  01A29E  0E00               	movlw	0
 31811  01A2A0  6FCF               	movwf	207,b	;volatile
 31812  01A2A2  0E01               	movlw	1
 31813  01A2A4  6FCE               	movwf	206,b	;volatile
 31814                           
 31815                           ; BSR set to: 59
 31816                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 31817  01A2A6  8FDC               	bsf	220,7,b	;volatile
 31818                           
 31819                           ; BSR set to: 59
 31820                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 31821  01A2A8  8DDC               	bsf	220,6,b	;volatile
 31822                           
 31823                           ; BSR set to: 59
 31824                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 31825  01A2AA  52E5               	movf	postdec1,f,c
 31826  01A2AC  52E5               	movf	postdec1,f,c
 31827  01A2AE  0012               	return		;funcret
 31828  01A2B0                     __end_of_send_port_data_dma:
 31829                           	opt callstack 0
 31830                           
 31831 ;; *************** function _port_data_dma_ptr *****************
 31832 ;; Defined at:
 31833 ;;		line 273 in file "eadog.c"
 31834 ;; Parameters:    Size  Location     Type
 31835 ;;		None
 31836 ;; Auto vars:     Size  Location     Type
 31837 ;;		None
 31838 ;; Return value:  Size  Location     Type
 31839 ;;                  2  [STACK] PTR unsigned char 
 31840 ;; Registers used:
 31841 ;;		wreg, status,2, status,0, btemp, btemp+1
 31842 ;; Tracked objects:
 31843 ;;		On entry : 3F/2
 31844 ;;		On exit  : 0/0
 31845 ;;		Unchanged: 0/0
 31846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31851 ;;Total ram usage:        0 bytes
 31852 ;; Hardware stack levels used:    1
 31853 ;; Hardware stack levels required when called:    3
 31854 ;; This function calls:
 31855 ;;		Nothing
 31856 ;; This function is called by:
 31857 ;;		_calc_bsoc
 31858 ;; This function uses a reentrant model
 31859 ;;
 31860                           
 31861                           	psect	text149
 31862  01AFF8                     __ptext149:
 31863                           	opt callstack 0
 31864  01AFF8                     _port_data_dma_ptr:
 31865                           	opt callstack 11
 31866                           
 31867                           ;eadog.c: 275:  return port_data;
 31868                           
 31869                           ; BSR set to: 59
 31870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31871                           ;incstack = 0
 31872  01AFF8  0EFF               	movlw	low _port_data
 31873  01AFFA  6E01               	movwf	btemp^0,c
 31874  01AFFC  0E05               	movlw	high _port_data
 31875  01AFFE  6E02               	movwf	(btemp+1)^0,c
 31876                           
 31877                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31878  01B000  0012               	return		;funcret
 31879  01B002                     __end_of_port_data_dma_ptr:
 31880                           	opt callstack 0
 31881                           
 31882 ;; *************** function _INT0_ISR *****************
 31883 ;; Defined at:
 31884 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 31885 ;; Parameters:    Size  Location     Type
 31886 ;;		None
 31887 ;; Auto vars:     Size  Location     Type
 31888 ;;		None
 31889 ;; Return value:  Size  Location     Type
 31890 ;;                  1    wreg      void 
 31891 ;; Registers used:
 31892 ;;		wreg, status,2, status,0, pclath, tosl
 31893 ;; Tracked objects:
 31894 ;;		On entry : 0/0
 31895 ;;		On exit  : 0/0
 31896 ;;		Unchanged: 0/0
 31897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31902 ;;Total ram usage:        0 bytes
 31903 ;; Hardware stack levels used:    1
 31904 ;; Hardware stack levels required when called:    2
 31905 ;; This function calls:
 31906 ;;		_INT0_CallBack
 31907 ;; This function is called by:
 31908 ;;		Interrupt level 2
 31909 ;; This function uses a non-reentrant model
 31910 ;;
 31911                           
 31912                           	psect	text150
 31913  01AFD0                     __ptext150:
 31914                           	opt callstack 0
 31915  01AFD0                     _INT0_ISR:
 31916                           	opt callstack 3
 31917                           
 31918                           ;incstack = 0
 31919  01AFD0  EE14  F0C2         	lfsr	1,___inthi_sp
 31920                           
 31921                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 31922  01AFD4  0139               	movlb	57	; () banked
 31923  01AFD6  91A1               	bcf	161,0,b	;volatile
 31924                           
 31925                           ; BSR set to: 57
 31926                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 31927  01AFD8  ECAE  F0D6         	call	_INT0_CallBack	;wreg free
 31928  01AFDC  0011               	retfie		f
 31929  01AFDE                     __end_of_INT0_ISR:
 31930                           	opt callstack 0
 31931                           
 31932 ;; *************** function _INT0_CallBack *****************
 31933 ;; Defined at:
 31934 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 31935 ;; Parameters:    Size  Location     Type
 31936 ;;		None
 31937 ;; Auto vars:     Size  Location     Type
 31938 ;;		None
 31939 ;; Return value:  Size  Location     Type
 31940 ;;                  1  [STACK] void 
 31941 ;; Registers used:
 31942 ;;		wreg, status,2, status,0, pclath, tosl
 31943 ;; Tracked objects:
 31944 ;;		On entry : 3F/39
 31945 ;;		On exit  : 0/0
 31946 ;;		Unchanged: 0/0
 31947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31952 ;;Total ram usage:        0 bytes
 31953 ;; Hardware stack levels used:    1
 31954 ;; Hardware stack levels required when called:    1
 31955 ;; This function calls:
 31956 ;;		Absolute function
 31957 ;;		_INT0_DefaultInterruptHandler
 31958 ;; This function is called by:
 31959 ;;		_INT0_ISR
 31960 ;; This function uses a reentrant model
 31961 ;;
 31962                           
 31963                           	psect	text151
 31964  01AD5C                     __ptext151:
 31965                           	opt callstack 0
 31966  01AD5C                     _INT0_CallBack:
 31967                           	opt callstack 3
 31968                           
 31969                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 31970                           
 31971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31972                           ;incstack = 0
 31973  01AD5C  0100               	movlb	0	; () banked
 31974  01AD5E  51B7               	movf	_INT0_InterruptHandler& (0+255),w,b
 31975  01AD60  11B8               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31976  01AD62  11B9               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31977  01AD64  B4D8               	btfsc	status,2,c
 31978  01AD66  0012               	return	
 31979                           
 31980                           ; BSR set to: 0
 31981                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 31982  01AD68  D801               	call	u941_48
 31983  01AD6A  0012               	return	
 31984  01AD6C                     u941_48:
 31985  01AD6C  0005               	push	
 31986  01AD6E  6EFA               	movwf	pclath,c
 31987  01AD70  51B7               	movf	_INT0_InterruptHandler& (0+255),w,b
 31988  01AD72  6EFD               	movwf	tosl,c
 31989  01AD74  51B8               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31990  01AD76  6EFE               	movwf	tosh,c
 31991  01AD78  51B9               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31992  01AD7A  6EFF               	movwf	tosu,c
 31993  01AD7C  50FA               	movf	pclath,w,c
 31994  01AD7E  0012               	return		;indir
 31995  01AD80                     __end_of_INT0_CallBack:
 31996                           	opt callstack 0
 31997                           
 31998 ;; *************** function _INT0_DefaultInterruptHandler *****************
 31999 ;; Defined at:
 32000 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 32001 ;; Parameters:    Size  Location     Type
 32002 ;;		None
 32003 ;; Auto vars:     Size  Location     Type
 32004 ;;		None
 32005 ;; Return value:  Size  Location     Type
 32006 ;;                  1  [STACK] void 
 32007 ;; Registers used:
 32008 ;;		None
 32009 ;; Tracked objects:
 32010 ;;		On entry : 3F/0
 32011 ;;		On exit  : 0/0
 32012 ;;		Unchanged: 0/0
 32013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32018 ;;Total ram usage:        0 bytes
 32019 ;; Hardware stack levels used:    1
 32020 ;; This function calls:
 32021 ;;		Nothing
 32022 ;; This function is called by:
 32023 ;;		_EXT_INT_Initialize
 32024 ;;		_INT0_CallBack
 32025 ;; This function uses a reentrant model
 32026 ;;
 32027                           
 32028                           	psect	text152
 32029  01B072                     __ptext152:
 32030                           	opt callstack 0
 32031  01B072                     _INT0_DefaultInterruptHandler:
 32032                           	opt callstack 3
 32033                           
 32034                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32035                           
 32036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32037                           ;incstack = 0
 32038  01B072  0012               	return		;funcret
 32039  01B074                     __end_of_INT0_DefaultInterruptHandler:
 32040                           	opt callstack 0
 32041                           
 32042 ;; *************** function _Default_ISR *****************
 32043 ;; Defined at:
 32044 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 32045 ;; Parameters:    Size  Location     Type
 32046 ;;		None
 32047 ;; Auto vars:     Size  Location     Type
 32048 ;;		None
 32049 ;; Return value:  Size  Location     Type
 32050 ;;                  1    wreg      void 
 32051 ;; Registers used:
 32052 ;;		None
 32053 ;; Tracked objects:
 32054 ;;		On entry : 0/0
 32055 ;;		On exit  : 0/0
 32056 ;;		Unchanged: 0/0
 32057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32062 ;;Total ram usage:        0 bytes
 32063 ;; Hardware stack levels used:    1
 32064 ;; This function calls:
 32065 ;;		Nothing
 32066 ;; This function is called by:
 32067 ;;		Interrupt level 2
 32068 ;; This function uses a non-reentrant model
 32069 ;;
 32070                           
 32071                           	psect	text153
 32072  01B068                     __ptext153:
 32073                           	opt callstack 0
 32074  01B068                     _Default_ISR:
 32075                           	opt callstack 5
 32076                           
 32077                           ;incstack = 0
 32078  01B068  EE14  F0C2         	lfsr	1,___inthi_sp
 32079  01B06C  0011               	retfie		f
 32080  01B06E                     __end_of_Default_ISR:
 32081                           	opt callstack 0
 32082                           
 32083 ;; *************** function _ADCC_ISR *****************
 32084 ;; Defined at:
 32085 ;;		line 314 in file "mcc_generated_files/adcc.c"
 32086 ;; Parameters:    Size  Location     Type
 32087 ;;		None
 32088 ;; Auto vars:     Size  Location     Type
 32089 ;;		None
 32090 ;; Return value:  Size  Location     Type
 32091 ;;                  1    wreg      void 
 32092 ;; Registers used:
 32093 ;;		wreg, status,2, status,0, pclath, tosl
 32094 ;; Tracked objects:
 32095 ;;		On entry : 0/0
 32096 ;;		On exit  : 0/0
 32097 ;;		Unchanged: 0/0
 32098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32103 ;;Total ram usage:        0 bytes
 32104 ;; Hardware stack levels used:    1
 32105 ;; Hardware stack levels required when called:    1
 32106 ;; This function calls:
 32107 ;;		Absolute function
 32108 ;;		_ADCC_DefaultInterruptHandler
 32109 ;;		_adc_int_handler
 32110 ;; This function is called by:
 32111 ;;		Interrupt level 2
 32112 ;; This function uses a non-reentrant model
 32113 ;;
 32114                           
 32115                           	psect	text154
 32116  01A97C                     __ptext154:
 32117                           	opt callstack 0
 32118  01A97C                     _ADCC_ISR:
 32119                           	opt callstack 4
 32120                           
 32121                           ;incstack = 0
 32122  01A97C  EE14  F0C2         	lfsr	1,___inthi_sp
 32123                           
 32124                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 32125  01A980  0139               	movlb	57	; () banked
 32126  01A982  95A1               	bcf	161,2,b	;volatile
 32127                           
 32128                           ; BSR set to: 57
 32129                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 32130  01A984  0100               	movlb	0	; () banked
 32131  01A986  51A8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32132  01A988  11A9               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32133  01A98A  11AA               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32134  01A98C  B4D8               	btfsc	status,2,c
 32135  01A98E  0011               	retfie		f
 32136                           
 32137                           ; BSR set to: 0
 32138                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 32139  01A990  D801               	call	i2u977_48
 32140  01A992  0011               	retfie		f
 32141  01A994                     i2u977_48:
 32142  01A994  0005               	push	
 32143  01A996  6EFA               	movwf	pclath,c
 32144  01A998  51A8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32145  01A99A  6EFD               	movwf	tosl,c
 32146  01A99C  51A9               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32147  01A99E  6EFE               	movwf	tosh,c
 32148  01A9A0  51AA               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32149  01A9A2  6EFF               	movwf	tosu,c
 32150  01A9A4  50FA               	movf	pclath,w,c
 32151  01A9A6  0012               	return		;indir
 32152  01A9A8                     __end_of_ADCC_ISR:
 32153                           	opt callstack 0
 32154                           
 32155 ;; *************** function _adc_int_t_handler *****************
 32156 ;; Defined at:
 32157 ;;		line 143 in file "daq.c"
 32158 ;; Parameters:    Size  Location     Type
 32159 ;;		None
 32160 ;; Auto vars:     Size  Location     Type
 32161 ;;		None
 32162 ;; Return value:  Size  Location     Type
 32163 ;;                  1  [STACK] void 
 32164 ;; Registers used:
 32165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 32166 ;; Tracked objects:
 32167 ;;		On entry : 3F/0
 32168 ;;		On exit  : 1/0
 32169 ;;		Unchanged: 0/0
 32170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32175 ;;Total ram usage:        0 bytes
 32176 ;; Hardware stack levels used:    1
 32177 ;; Hardware stack levels required when called:    1
 32178 ;; This function calls:
 32179 ;;		_ADCC_DischargeSampleCapacitor
 32180 ;;		_ADCC_StartConversion
 32181 ;; This function is called by:
 32182 ;;		_start_adc_scan
 32183 ;;		_ADCC_ThresholdISR
 32184 ;; This function uses a reentrant model
 32185 ;;
 32186                           
 32187                           	psect	text155
 32188  019D00                     __ptext155:
 32189                           	opt callstack 0
 32190  019D00                     _adc_int_t_handler:
 32191                           	opt callstack 3
 32192                           
 32193                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 32194                           
 32195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32196                           ;incstack = 0
 32197  019D00  013E               	movlb	62	; () banked
 32198  019D02  51E6               	movf	230,w,b	;volatile
 32199  019D04  006F FB9C  F001    	movff	16103,btemp	;volatile
 32200  019D0A  6A02               	clrf	(btemp+1)^0,c
 32201  019D0C  0060  F004  F002   	movff	btemp,btemp+1
 32202  019D12  6A01               	clrf	btemp^0,c
 32203  019D14  2601               	addwf	btemp^0,f,c
 32204  019D16  0E00               	movlw	0
 32205  019D18  2202               	addwfc	(btemp+1)^0,f,c
 32206  019D1A  0100               	movlb	0	; () banked
 32207  019D1C  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
 32208  019D1E  0D02               	mullw	2
 32209  019D20  50F3               	movf	243,w,c
 32210  019D22  0FC6               	addlw	low _R
 32211  019D24  6ED9               	movwf	fsr2l,c
 32212  019D26  6ADA               	clrf	fsr2h,c
 32213  019D28  0060  F007  FFDE   	movff	btemp,postinc2
 32214  019D2E  0060  F00B  FFDD   	movff	btemp+1,postdec2
 32215  019D34                     l10556:
 32216                           
 32217                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 32218  019D34  0100               	movlb	0	; () banked
 32219  019D36  2BEA               	incf	(_R+36)& (0+255),f,b	;volatile
 32220  019D38  0E0D               	movlw	13
 32221  019D3A  65EA               	cpfsgt	(_R+36)& (0+255),b	;volatile
 32222  019D3C  D003               	goto	l10562
 32223                           
 32224                           ; BSR set to: 0
 32225                           ;daq.c: 151:    R.done = 1;
 32226  019D3E  0E01               	movlw	1
 32227  019D40  6FED               	movwf	(_R+39)& (0+255),b	;volatile
 32228  019D42  0012               	return	
 32229  019D44                     l10562:
 32230                           
 32231                           ; BSR set to: 0
 32232                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 32233  019D44  0060  F3A8  F00C   	movff	_R+36,btemp+11	;volatile
 32234  019D4A  EE20  F0EB         	lfsr	2,_R+37	;volatile
 32235  019D4E  006F FF78  F009    	movff	postinc2,btemp+8
 32236  019D54  006F FF74  F00A    	movff	postdec2,btemp+9
 32237  019D5A  2A0C               	incf	(btemp+11)^0,f,c
 32238  019D5C  D003               	goto	u974_44
 32239  019D5E                     u974_45:
 32240  019D5E  90D8               	bcf	status,0,c
 32241  019D60  320A               	rrcf	(btemp+9)^0,f,c
 32242  019D62  3209               	rrcf	(btemp+8)^0,f,c
 32243  019D64                     u974_44:
 32244  019D64  2E0C               	decfsz	(btemp+11)^0,f,c
 32245  019D66  D7FB               	goto	u974_45
 32246  019D68  A009               	btfss	(btemp+8)^0,0,c
 32247  019D6A  D7E4               	goto	l10556
 32248                           
 32249                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 32250  019D6C  EC13  F0D8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 32251                           
 32252                           ; BSR set to: 62
 32253                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 32254  019D70  0100               	movlb	0	; () banked
 32255  019D72  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
 32256  019D74  0B0F               	andlw	15
 32257  019D76  6EE6               	movwf	postinc1,c
 32258  019D78  ECB8  F0D7         	call	_ADCC_StartConversion	;wreg free
 32259                           
 32260                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32261  019D7C  0012               	return		;funcret
 32262  019D7E                     __end_of_adc_int_t_handler:
 32263                           	opt callstack 0
 32264                           
 32265 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 32266 ;; Defined at:
 32267 ;;		line 339 in file "mcc_generated_files/adcc.c"
 32268 ;; Parameters:    Size  Location     Type
 32269 ;;		None
 32270 ;; Auto vars:     Size  Location     Type
 32271 ;;		None
 32272 ;; Return value:  Size  Location     Type
 32273 ;;                  1  [STACK] void 
 32274 ;; Registers used:
 32275 ;;		None
 32276 ;; Tracked objects:
 32277 ;;		On entry : 3F/0
 32278 ;;		On exit  : 0/0
 32279 ;;		Unchanged: 0/0
 32280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32285 ;;Total ram usage:        0 bytes
 32286 ;; Hardware stack levels used:    1
 32287 ;; This function calls:
 32288 ;;		Nothing
 32289 ;; This function is called by:
 32290 ;;		_ADCC_Initialize
 32291 ;;		_ADCC_ISR
 32292 ;;		_ADCC_ThresholdISR
 32293 ;; This function uses a reentrant model
 32294 ;;
 32295                           
 32296                           	psect	text156
 32297  01B074                     __ptext156:
 32298                           	opt callstack 0
 32299  01B074                     _ADCC_DefaultInterruptHandler:
 32300                           	opt callstack 4
 32301                           
 32302                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32303                           
 32304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32305                           ;incstack = 0
 32306  01B074  0012               	return		;funcret
 32307  01B076                     __end_of_ADCC_DefaultInterruptHandler:
 32308                           	opt callstack 0
 32309                           
 32310 ;; *************** function _adc_int_handler *****************
 32311 ;; Defined at:
 32312 ;;		line 133 in file "daq.c"
 32313 ;; Parameters:    Size  Location     Type
 32314 ;;		None
 32315 ;; Auto vars:     Size  Location     Type
 32316 ;;		None
 32317 ;; Return value:  Size  Location     Type
 32318 ;;                  1  [STACK] void 
 32319 ;; Registers used:
 32320 ;;		None
 32321 ;; Tracked objects:
 32322 ;;		On entry : 3F/0
 32323 ;;		On exit  : 0/0
 32324 ;;		Unchanged: 0/0
 32325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32330 ;;Total ram usage:        0 bytes
 32331 ;; Hardware stack levels used:    1
 32332 ;; This function calls:
 32333 ;;		Nothing
 32334 ;; This function is called by:
 32335 ;;		_start_adc_scan
 32336 ;;		_ADCC_ISR
 32337 ;; This function uses a reentrant model
 32338 ;;
 32339                           
 32340                           	psect	text157
 32341  01B076                     __ptext157:
 32342                           	opt callstack 0
 32343  01B076                     _adc_int_handler:
 32344                           	opt callstack 4
 32345                           
 32346                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32347                           
 32348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32349                           ;incstack = 0
 32350  01B076  0012               	return		;funcret
 32351  01B078                     __end_of_adc_int_handler:
 32352                           	opt callstack 0
 32353                           
 32354 ;; *************** function _ADCC_ThresholdISR *****************
 32355 ;; Defined at:
 32356 ;;		line 327 in file "mcc_generated_files/adcc.c"
 32357 ;; Parameters:    Size  Location     Type
 32358 ;;		None
 32359 ;; Auto vars:     Size  Location     Type
 32360 ;;		None
 32361 ;; Return value:  Size  Location     Type
 32362 ;;                  1    wreg      void 
 32363 ;; Registers used:
 32364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 32365 ;; Tracked objects:
 32366 ;;		On entry : 0/0
 32367 ;;		On exit  : 0/0
 32368 ;;		Unchanged: 0/0
 32369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32372 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32373 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32374 ;;Total ram usage:        5 bytes
 32375 ;; Hardware stack levels used:    1
 32376 ;; Hardware stack levels required when called:    2
 32377 ;; This function calls:
 32378 ;;		Absolute function
 32379 ;;		_ADCC_DefaultInterruptHandler
 32380 ;;		_adc_int_t_handler
 32381 ;; This function is called by:
 32382 ;;		Interrupt level 2
 32383 ;; This function uses a non-reentrant model
 32384 ;;
 32385                           
 32386                           	psect	text158
 32387  019E54                     __ptext158:
 32388                           	opt callstack 0
 32389  019E54                     _ADCC_ThresholdISR:
 32390                           	opt callstack 3
 32391                           
 32392                           ;incstack = 0
 32393  019E54  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 32394  019E5A  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 32395  019E60  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 32396  019E66  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 32397  019E6C  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 32398  019E72  EE14  F0C2         	lfsr	1,___inthi_sp
 32399                           
 32400                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 32401  019E76  0139               	movlb	57	; () banked
 32402  019E78  97A1               	bcf	161,3,b	;volatile
 32403                           
 32404                           ; BSR set to: 57
 32405                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 32406  019E7A  0100               	movlb	0	; () banked
 32407  019E7C  51A5               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 32408  019E7E  11A6               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 32409  019E80  11A7               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 32410  019E82  B4D8               	btfsc	status,2,c
 32411  019E84  D00C               	goto	i2u979_49
 32412                           
 32413                           ; BSR set to: 0
 32414                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 32415  019E86  D801               	call	i2u979_48
 32416  019E88  D00A               	goto	i2u979_49
 32417  019E8A                     i2u979_48:
 32418  019E8A  0005               	push	
 32419  019E8C  6EFA               	movwf	pclath,c
 32420  019E8E  51A5               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 32421  019E90  6EFD               	movwf	tosl,c
 32422  019E92  51A6               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 32423  019E94  6EFE               	movwf	tosh,c
 32424  019E96  51A7               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 32425  019E98  6EFF               	movwf	tosu,c
 32426  019E9A  50FA               	movf	pclath,w,c
 32427  019E9C  0012               	return		;indir
 32428  019E9E                     i2u979_49:
 32429  019E9E  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 32430  019EA4  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 32431  019EAA  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 32432  019EB0  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 32433  019EB6  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 32434  019EBC  0011               	retfie		f
 32435  019EBE                     __end_of_ADCC_ThresholdISR:
 32436                           	opt callstack 0
 32437                           
 32438 ;; *************** function _UART1_rx_vect_isr *****************
 32439 ;; Defined at:
 32440 ;;		line 181 in file "mcc_generated_files/uart1.c"
 32441 ;; Parameters:    Size  Location     Type
 32442 ;;		None
 32443 ;; Auto vars:     Size  Location     Type
 32444 ;;		None
 32445 ;; Return value:  Size  Location     Type
 32446 ;;                  1    wreg      void 
 32447 ;; Registers used:
 32448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32449 ;; Tracked objects:
 32450 ;;		On entry : 0/0
 32451 ;;		On exit  : 0/0
 32452 ;;		Unchanged: 0/0
 32453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32458 ;;Total ram usage:        0 bytes
 32459 ;; Hardware stack levels used:    1
 32460 ;; Hardware stack levels required when called:    1
 32461 ;; This function calls:
 32462 ;;		Absolute function
 32463 ;;		_UART1_Receive_ISR
 32464 ;; This function is called by:
 32465 ;;		Interrupt level 2
 32466 ;; This function uses a non-reentrant model
 32467 ;;
 32468                           
 32469                           	psect	text159
 32470  01AC30                     __ptext159:
 32471                           	opt callstack 0
 32472  01AC30                     _UART1_rx_vect_isr:
 32473                           	opt callstack 4
 32474                           
 32475                           ;incstack = 0
 32476  01AC30  EE14  F0C2         	lfsr	1,___inthi_sp
 32477                           
 32478                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 32479  01AC34  0100               	movlb	0	; () banked
 32480  01AC36  51AB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32481  01AC38  11AC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32482  01AC3A  11AD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 32483  01AC3C  B4D8               	btfsc	status,2,c
 32484  01AC3E  0011               	retfie		f
 32485                           
 32486                           ; BSR set to: 0
 32487                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 32488  01AC40  D801               	call	i2u981_48
 32489  01AC42  0011               	retfie		f
 32490  01AC44                     i2u981_48:
 32491  01AC44  0005               	push	
 32492  01AC46  6EFA               	movwf	pclath,c
 32493  01AC48  51AB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32494  01AC4A  6EFD               	movwf	tosl,c
 32495  01AC4C  51AC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32496  01AC4E  6EFE               	movwf	tosh,c
 32497  01AC50  51AD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 32498  01AC52  6EFF               	movwf	tosu,c
 32499  01AC54  50FA               	movf	pclath,w,c
 32500  01AC56  0012               	return		;indir
 32501  01AC58                     __end_of_UART1_rx_vect_isr:
 32502                           	opt callstack 0
 32503                           
 32504 ;; *************** function _UART1_Receive_ISR *****************
 32505 ;; Defined at:
 32506 ;;		line 192 in file "mcc_generated_files/uart1.c"
 32507 ;; Parameters:    Size  Location     Type
 32508 ;;		None
 32509 ;; Auto vars:     Size  Location     Type
 32510 ;;		None
 32511 ;; Return value:  Size  Location     Type
 32512 ;;                  1  [STACK] void 
 32513 ;; Registers used:
 32514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32515 ;; Tracked objects:
 32516 ;;		On entry : 3F/0
 32517 ;;		On exit  : 0/0
 32518 ;;		Unchanged: 0/0
 32519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32524 ;;Total ram usage:        0 bytes
 32525 ;; Hardware stack levels used:    1
 32526 ;; This function calls:
 32527 ;;		Nothing
 32528 ;; This function is called by:
 32529 ;;		_UART1_Initialize
 32530 ;;		_UART1_rx_vect_isr
 32531 ;; This function uses a reentrant model
 32532 ;;
 32533                           
 32534                           	psect	text160
 32535  01AE98                     __ptext160:
 32536                           	opt callstack 0
 32537  01AE98                     _UART1_Receive_ISR:
 32538                           	opt callstack 4
 32539                           
 32540                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 32541                           
 32542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32543                           ;incstack = 0
 32544  01AE98  5037               	movf	_uart1RxHead^0,w,c
 32545  01AE9A  0F6C               	addlw	low _uart1RxBuffer
 32546  01AE9C  6ED9               	movwf	fsr2l,c
 32547  01AE9E  6ADA               	clrf	fsr2h,c
 32548  01AEA0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 32549  01AEA6  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 32550                           
 32551                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 32552  01AEA8  0E07               	movlw	7
 32553  01AEAA  6437               	cpfsgt	_uart1RxHead^0,c
 32554  01AEAC  D001               	goto	l10206
 32555                           
 32556                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 32557  01AEAE  6A37               	clrf	_uart1RxHead^0,c	;volatile
 32558  01AEB0                     l10206:
 32559                           
 32560                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 32561  01AEB0  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 32562                           
 32563                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32564  01AEB2  0012               	return		;funcret
 32565  01AEB4                     __end_of_UART1_Receive_ISR:
 32566                           	opt callstack 0
 32567                           
 32568 ;; *************** function _UART2_tx_vect_isr *****************
 32569 ;; Defined at:
 32570 ;;		line 195 in file "mcc_generated_files/uart2.c"
 32571 ;; Parameters:    Size  Location     Type
 32572 ;;		None
 32573 ;; Auto vars:     Size  Location     Type
 32574 ;;		None
 32575 ;; Return value:  Size  Location     Type
 32576 ;;                  1    wreg      void 
 32577 ;; Registers used:
 32578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32579 ;; Tracked objects:
 32580 ;;		On entry : 0/0
 32581 ;;		On exit  : 0/0
 32582 ;;		Unchanged: 0/0
 32583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32588 ;;Total ram usage:        0 bytes
 32589 ;; Hardware stack levels used:    1
 32590 ;; Hardware stack levels required when called:    1
 32591 ;; This function calls:
 32592 ;;		Absolute function
 32593 ;;		_UART2_Transmit_ISR
 32594 ;; This function is called by:
 32595 ;;		Interrupt level 2
 32596 ;; This function uses a non-reentrant model
 32597 ;;
 32598                           
 32599                           	psect	text161
 32600  01AC58                     __ptext161:
 32601                           	opt callstack 0
 32602  01AC58                     _UART2_tx_vect_isr:
 32603                           	opt callstack 4
 32604                           
 32605                           ;incstack = 0
 32606  01AC58  EE14  F0C2         	lfsr	1,___inthi_sp
 32607                           
 32608                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 32609  01AC5C  0100               	movlb	0	; () banked
 32610  01AC5E  51AE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 32611  01AC60  11AF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 32612  01AC62  11B0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 32613  01AC64  B4D8               	btfsc	status,2,c
 32614  01AC66  0011               	retfie		f
 32615                           
 32616                           ; BSR set to: 0
 32617                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 32618  01AC68  D801               	call	i2u983_48
 32619  01AC6A  0011               	retfie		f
 32620  01AC6C                     i2u983_48:
 32621  01AC6C  0005               	push	
 32622  01AC6E  6EFA               	movwf	pclath,c
 32623  01AC70  51AE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 32624  01AC72  6EFD               	movwf	tosl,c
 32625  01AC74  51AF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 32626  01AC76  6EFE               	movwf	tosh,c
 32627  01AC78  51B0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 32628  01AC7A  6EFF               	movwf	tosu,c
 32629  01AC7C  50FA               	movf	pclath,w,c
 32630  01AC7E  0012               	return		;indir
 32631  01AC80                     __end_of_UART2_tx_vect_isr:
 32632                           	opt callstack 0
 32633                           
 32634 ;; *************** function _UART2_Transmit_ISR *****************
 32635 ;; Defined at:
 32636 ;;		line 213 in file "mcc_generated_files/uart2.c"
 32637 ;; Parameters:    Size  Location     Type
 32638 ;;		None
 32639 ;; Auto vars:     Size  Location     Type
 32640 ;;		None
 32641 ;; Return value:  Size  Location     Type
 32642 ;;                  1  [STACK] void 
 32643 ;; Registers used:
 32644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32645 ;; Tracked objects:
 32646 ;;		On entry : 3F/0
 32647 ;;		On exit  : 3B/39
 32648 ;;		Unchanged: 0/0
 32649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32654 ;;Total ram usage:        0 bytes
 32655 ;; Hardware stack levels used:    1
 32656 ;; This function calls:
 32657 ;;		Nothing
 32658 ;; This function is called by:
 32659 ;;		_UART2_Initialize
 32660 ;;		_UART2_tx_vect_isr
 32661 ;; This function uses a reentrant model
 32662 ;;
 32663                           
 32664                           	psect	text162
 32665  01A9A8                     __ptext162:
 32666                           	opt callstack 0
 32667  01A9A8                     _UART2_Transmit_ISR:
 32668                           	opt callstack 4
 32669                           
 32670                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 32671                           
 32672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32673                           ;incstack = 0
 32674  01A9A8  0E40               	movlw	64
 32675  01A9AA  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 32676  01A9AC  D010               	goto	l673
 32677                           
 32678                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 32679  01A9AE  0E54               	movlw	low _uart2TxBuffer
 32680  01A9B0  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 32681  01A9B2  6ED9               	movwf	fsr2l,c
 32682  01A9B4  6ADA               	clrf	fsr2h,c
 32683  01A9B6  0E03               	movlw	high _uart2TxBuffer
 32684  01A9B8  22DA               	addwfc	fsr2h,f,c
 32685  01A9BA  50DF               	movf	indf2,w,c
 32686  01A9BC  013D               	movlb	61	; () banked
 32687  01A9BE  6FD2               	movwf	210,b	;volatile
 32688                           
 32689                           ; BSR set to: 61
 32690  01A9C0  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 32691                           
 32692                           ; BSR set to: 61
 32693                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 32694  01A9C2  0E3F               	movlw	63
 32695  01A9C4  6433               	cpfsgt	_uart2TxTail^0,c
 32696  01A9C6  D001               	goto	l10218
 32697                           
 32698                           ; BSR set to: 61
 32699                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 32700  01A9C8  6A33               	clrf	_uart2TxTail^0,c	;volatile
 32701  01A9CA                     l10218:
 32702                           
 32703                           ; BSR set to: 61
 32704                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 32705  01A9CA  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 32706                           
 32707                           ;mcc_generated_files/uart2.c: 224:     }
 32708  01A9CC  0012               	return	
 32709  01A9CE                     l673:
 32710                           
 32711                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 32712  01A9CE  0139               	movlb	57	; () banked
 32713  01A9D0  9796               	bcf	150,3,b	;volatile
 32714                           
 32715                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 32716  01A9D2  0012               	return		;funcret
 32717  01A9D4                     __end_of_UART2_Transmit_ISR:
 32718                           	opt callstack 0
 32719                           
 32720 ;; *************** function _UART2_rx_vect_isr *****************
 32721 ;; Defined at:
 32722 ;;		line 203 in file "mcc_generated_files/uart2.c"
 32723 ;; Parameters:    Size  Location     Type
 32724 ;;		None
 32725 ;; Auto vars:     Size  Location     Type
 32726 ;;		None
 32727 ;; Return value:  Size  Location     Type
 32728 ;;                  1    wreg      void 
 32729 ;; Registers used:
 32730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32731 ;; Tracked objects:
 32732 ;;		On entry : 0/0
 32733 ;;		On exit  : 0/0
 32734 ;;		Unchanged: 0/0
 32735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32740 ;;Total ram usage:        0 bytes
 32741 ;; Hardware stack levels used:    1
 32742 ;; Hardware stack levels required when called:    1
 32743 ;; This function calls:
 32744 ;;		Absolute function
 32745 ;;		_UART2_Receive_ISR
 32746 ;; This function is called by:
 32747 ;;		Interrupt level 2
 32748 ;; This function uses a non-reentrant model
 32749 ;;
 32750                           
 32751                           	psect	text163
 32752  01AC80                     __ptext163:
 32753                           	opt callstack 0
 32754  01AC80                     _UART2_rx_vect_isr:
 32755                           	opt callstack 4
 32756                           
 32757                           ;incstack = 0
 32758  01AC80  EE14  F0C2         	lfsr	1,___inthi_sp
 32759                           
 32760                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 32761  01AC84  0100               	movlb	0	; () banked
 32762  01AC86  51B1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 32763  01AC88  11B2               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 32764  01AC8A  11B3               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 32765  01AC8C  B4D8               	btfsc	status,2,c
 32766  01AC8E  0011               	retfie		f
 32767                           
 32768                           ; BSR set to: 0
 32769                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 32770  01AC90  D801               	call	i2u985_48
 32771  01AC92  0011               	retfie		f
 32772  01AC94                     i2u985_48:
 32773  01AC94  0005               	push	
 32774  01AC96  6EFA               	movwf	pclath,c
 32775  01AC98  51B1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 32776  01AC9A  6EFD               	movwf	tosl,c
 32777  01AC9C  51B2               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 32778  01AC9E  6EFE               	movwf	tosh,c
 32779  01ACA0  51B3               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 32780  01ACA2  6EFF               	movwf	tosu,c
 32781  01ACA4  50FA               	movf	pclath,w,c
 32782  01ACA6  0012               	return		;indir
 32783  01ACA8                     __end_of_UART2_rx_vect_isr:
 32784                           	opt callstack 0
 32785                           
 32786 ;; *************** function _UART2_Receive_ISR *****************
 32787 ;; Defined at:
 32788 ;;		line 233 in file "mcc_generated_files/uart2.c"
 32789 ;; Parameters:    Size  Location     Type
 32790 ;;		None
 32791 ;; Auto vars:     Size  Location     Type
 32792 ;;		None
 32793 ;; Return value:  Size  Location     Type
 32794 ;;                  1  [STACK] void 
 32795 ;; Registers used:
 32796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32797 ;; Tracked objects:
 32798 ;;		On entry : 3F/0
 32799 ;;		On exit  : 0/0
 32800 ;;		Unchanged: 0/0
 32801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32806 ;;Total ram usage:        0 bytes
 32807 ;; Hardware stack levels used:    1
 32808 ;; This function calls:
 32809 ;;		Nothing
 32810 ;; This function is called by:
 32811 ;;		_UART2_Initialize
 32812 ;;		_UART2_rx_vect_isr
 32813 ;; This function uses a reentrant model
 32814 ;;
 32815                           
 32816                           	psect	text164
 32817  01AE5E                     __ptext164:
 32818                           	opt callstack 0
 32819  01AE5E                     _UART2_Receive_ISR:
 32820                           	opt callstack 4
 32821                           
 32822                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 32823                           
 32824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32825                           ;incstack = 0
 32826  01AE5E  0E00               	movlw	low _uart2RxBuffer
 32827  01AE60  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 32828  01AE62  6ED9               	movwf	fsr2l,c
 32829  01AE64  6ADA               	clrf	fsr2h,c
 32830  01AE66  0E05               	movlw	high _uart2RxBuffer
 32831  01AE68  22DA               	addwfc	fsr2h,f,c
 32832  01AE6A  006F F743 FFDF     	movff	15824,indf2	;volatile
 32833  01AE70  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 32834                           
 32835                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 32836  01AE72  2831               	incf	_uart2RxHead^0,w,c
 32837  01AE74  B4D8               	btfsc	status,2,c
 32838                           
 32839                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 32840  01AE76  6A31               	clrf	_uart2RxHead^0,c	;volatile
 32841                           
 32842                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 32843  01AE78  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 32844                           
 32845                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32846  01AE7A  0012               	return		;funcret
 32847  01AE7C                     __end_of_UART2_Receive_ISR:
 32848                           	opt callstack 0
 32849                           
 32850 ;; *************** function _TMR6_ISR *****************
 32851 ;; Defined at:
 32852 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 32853 ;; Parameters:    Size  Location     Type
 32854 ;;		None
 32855 ;; Auto vars:     Size  Location     Type
 32856 ;;		None
 32857 ;; Return value:  Size  Location     Type
 32858 ;;                  1    wreg      void 
 32859 ;; Registers used:
 32860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 32861 ;; Tracked objects:
 32862 ;;		On entry : 0/0
 32863 ;;		On exit  : 0/0
 32864 ;;		Unchanged: 0/0
 32865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32870 ;;Total ram usage:        1 bytes
 32871 ;; Hardware stack levels used:    1
 32872 ;; Hardware stack levels required when called:    2
 32873 ;; This function calls:
 32874 ;;		_TMR6_CallBack
 32875 ;; This function is called by:
 32876 ;;		Interrupt level 2
 32877 ;; This function uses a non-reentrant model
 32878 ;;
 32879                           
 32880                           	psect	text165
 32881  01AED0                     __ptext165:
 32882                           	opt callstack 0
 32883  01AED0                     _TMR6_ISR:
 32884                           	opt callstack 3
 32885                           
 32886                           ;incstack = 0
 32887  01AED0  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 32888  01AED6  EE14  F0C2         	lfsr	1,___inthi_sp
 32889                           
 32890                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 32891  01AEDA  0139               	movlb	57	; () banked
 32892  01AEDC  91A9               	bcf	169,0,b	;volatile
 32893                           
 32894                           ; BSR set to: 57
 32895                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 32896  01AEDE  ECC0  F0D6         	call	_TMR6_CallBack	;wreg free
 32897  01AEE2  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 32898  01AEE8  0011               	retfie		f
 32899  01AEEA                     __end_of_TMR6_ISR:
 32900                           	opt callstack 0
 32901                           
 32902 ;; *************** function _TMR6_CallBack *****************
 32903 ;; Defined at:
 32904 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 32905 ;; Parameters:    Size  Location     Type
 32906 ;;		None
 32907 ;; Auto vars:     Size  Location     Type
 32908 ;;		None
 32909 ;; Return value:  Size  Location     Type
 32910 ;;                  1  [STACK] void 
 32911 ;; Registers used:
 32912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 32913 ;; Tracked objects:
 32914 ;;		On entry : 3F/39
 32915 ;;		On exit  : 0/0
 32916 ;;		Unchanged: 0/0
 32917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32922 ;;Total ram usage:        0 bytes
 32923 ;; Hardware stack levels used:    1
 32924 ;; Hardware stack levels required when called:    1
 32925 ;; This function calls:
 32926 ;;		Absolute function
 32927 ;;		_TMR6_DefaultInterruptHandler
 32928 ;; This function is called by:
 32929 ;;		_TMR6_ISR
 32930 ;; This function uses a reentrant model
 32931 ;;
 32932                           
 32933                           	psect	text166
 32934  01AD80                     __ptext166:
 32935                           	opt callstack 0
 32936  01AD80                     _TMR6_CallBack:
 32937                           	opt callstack 3
 32938                           
 32939                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 32940                           
 32941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32942                           ;incstack = 0
 32943  01AD80  0100               	movlb	0	; () banked
 32944  01AD82  51A2               	movf	_TMR6_InterruptHandler& (0+255),w,b
 32945  01AD84  11A3               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 32946  01AD86  11A4               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 32947  01AD88  B4D8               	btfsc	status,2,c
 32948  01AD8A  0012               	return	
 32949                           
 32950                           ; BSR set to: 0
 32951                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 32952  01AD8C  D801               	call	u949_48
 32953  01AD8E  0012               	return	
 32954  01AD90                     u949_48:
 32955  01AD90  0005               	push	
 32956  01AD92  6EFA               	movwf	pclath,c
 32957  01AD94  51A2               	movf	_TMR6_InterruptHandler& (0+255),w,b
 32958  01AD96  6EFD               	movwf	tosl,c
 32959  01AD98  51A3               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 32960  01AD9A  6EFE               	movwf	tosh,c
 32961  01AD9C  51A4               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 32962  01AD9E  6EFF               	movwf	tosu,c
 32963  01ADA0  50FA               	movf	pclath,w,c
 32964  01ADA2  0012               	return		;indir
 32965  01ADA4                     __end_of_TMR6_CallBack:
 32966                           	opt callstack 0
 32967                           
 32968 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 32969 ;; Defined at:
 32970 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 32971 ;; Parameters:    Size  Location     Type
 32972 ;;		None
 32973 ;; Auto vars:     Size  Location     Type
 32974 ;;  i               1  [STACK] unsigned char 
 32975 ;; Return value:  Size  Location     Type
 32976 ;;                  1  [STACK] void 
 32977 ;; Registers used:
 32978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 32979 ;; Tracked objects:
 32980 ;;		On entry : 3F/0
 32981 ;;		On exit  : 0/0
 32982 ;;		Unchanged: 0/0
 32983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32988 ;;Total ram usage:        0 bytes
 32989 ;; Hardware stack levels used:    1
 32990 ;; This function calls:
 32991 ;;		Nothing
 32992 ;; This function is called by:
 32993 ;;		_TMR6_Initialize
 32994 ;;		_TMR6_CallBack
 32995 ;; This function uses a reentrant model
 32996 ;;
 32997                           
 32998                           	psect	text167
 32999  01A2B0                     __ptext167:
 33000                           	opt callstack 0
 33001  01A2B0                     _TMR6_DefaultInterruptHandler:
 33002                           	opt callstack 0
 33003                           
 33004                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33005  01A2B0  52E6               	movf	postinc1,f,c
 33006                           
 33007                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 33008                           ;stkvar	_i @ sp[(-1)+0]
 33009                           
 33010                           ;incstack = 0
 33011  01A2B2  0EFF               	movlw	-1
 33012  01A2B4  6AE3               	clrf	plusw1,c
 33013  01A2B6                     l9788:
 33014                           
 33015                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 33016                           ;stkvar	_i @ sp[(-1)+0]
 33017  01A2B6  0EFF               	movlw	-1
 33018  01A2B8  50E3               	movf	plusw1,w,c
 33019  01A2BA  0D02               	mullw	2
 33020  01A2BC  0EE5               	movlw	low _tickCount
 33021  01A2BE  24F3               	addwf	243,w,c
 33022  01A2C0  6ED9               	movwf	fsr2l,c
 33023  01A2C2  0E02               	movlw	high _tickCount
 33024  01A2C4  20F4               	addwfc	prodh,w,c
 33025  01A2C6  6EDA               	movwf	fsr2h,c
 33026  01A2C8  50DE               	movf	postinc2,w,c
 33027  01A2CA  10DE               	iorwf	postinc2,w,c
 33028  01A2CC  B4D8               	btfsc	status,2,c
 33029  01A2CE  D00C               	goto	l9792
 33030                           
 33031                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 33032                           ;stkvar	_i @ sp[(-1)+0]
 33033  01A2D0  0EFF               	movlw	-1
 33034  01A2D2  50E3               	movf	plusw1,w,c
 33035  01A2D4  0D02               	mullw	2
 33036  01A2D6  0EE5               	movlw	low _tickCount
 33037  01A2D8  24F3               	addwf	243,w,c
 33038  01A2DA  6ED9               	movwf	fsr2l,c
 33039  01A2DC  0E02               	movlw	high _tickCount
 33040  01A2DE  20F4               	addwfc	prodh,w,c
 33041  01A2E0  6EDA               	movwf	fsr2h,c
 33042  01A2E2  06DE               	decf	postinc2,f,c
 33043  01A2E4  0E00               	movlw	0
 33044  01A2E6  5ADD               	subwfb	postdec2,f,c
 33045  01A2E8                     l9792:
 33046                           
 33047                           ;mcc_generated_files/tmr6.c: 207:  }
 33048                           ;stkvar	_i @ sp[(-1)+0]
 33049  01A2E8  0EFF               	movlw	-1
 33050  01A2EA  2AE3               	incf	plusw1,f,c
 33051                           
 33052                           ;stkvar	_i @ sp[(-1)+0]
 33053  01A2EC  0EFF               	movlw	-1
 33054  01A2EE  006F FF8C  F001    	movff	plusw1,btemp
 33055  01A2F4  0E0B               	movlw	11
 33056  01A2F6  6401               	cpfsgt	btemp^0,c
 33057  01A2F8  D7DE               	goto	l9788
 33058                           
 33059                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33060  01A2FA  52E5               	movf	postdec1,f,c
 33061  01A2FC  0012               	return		;funcret
 33062  01A2FE                     __end_of_TMR6_DefaultInterruptHandler:
 33063                           	opt callstack 0
 33064                           
 33065 ;; *************** function _DMA1_DMASCNT_ISR *****************
 33066 ;; Defined at:
 33067 ;;		line 126 in file "mcc_generated_files/dma1.c"
 33068 ;; Parameters:    Size  Location     Type
 33069 ;;		None
 33070 ;; Auto vars:     Size  Location     Type
 33071 ;;		None
 33072 ;; Return value:  Size  Location     Type
 33073 ;;                  1    wreg      void 
 33074 ;; Registers used:
 33075 ;;		None
 33076 ;; Tracked objects:
 33077 ;;		On entry : 0/0
 33078 ;;		On exit  : 3F/0
 33079 ;;		Unchanged: 0/0
 33080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33085 ;;Total ram usage:        0 bytes
 33086 ;; Hardware stack levels used:    1
 33087 ;; This function calls:
 33088 ;;		Nothing
 33089 ;; This function is called by:
 33090 ;;		Interrupt level 2
 33091 ;; This function uses a non-reentrant model
 33092 ;;
 33093                           
 33094                           	psect	text168
 33095  01AFE0                     __ptext168:
 33096                           	opt callstack 0
 33097  01AFE0                     _DMA1_DMASCNT_ISR:
 33098                           	opt callstack 5
 33099                           
 33100                           ;incstack = 0
 33101  01AFE0  EE14  F0C2         	lfsr	1,___inthi_sp
 33102                           
 33103                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 33104  01AFE4  0139               	movlb	57	; () banked
 33105  01AFE6  91A2               	bcf	162,0,b	;volatile
 33106                           
 33107                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 33108  01AFE8  0100               	movlb	0	; () banked
 33109  01AFEA  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 33110                           
 33111                           ; BSR set to: 0
 33112  01AFEC  0011               	retfie		f
 33113  01AFEE                     __end_of_DMA1_DMASCNT_ISR:
 33114                           	opt callstack 0
 33115                           
 33116 ;; *************** function _DMA1_DMADCNT_ISR *****************
 33117 ;; Defined at:
 33118 ;;		line 134 in file "mcc_generated_files/dma1.c"
 33119 ;; Parameters:    Size  Location     Type
 33120 ;;		None
 33121 ;; Auto vars:     Size  Location     Type
 33122 ;;		None
 33123 ;; Return value:  Size  Location     Type
 33124 ;;                  1    wreg      void 
 33125 ;; Registers used:
 33126 ;;		None
 33127 ;; Tracked objects:
 33128 ;;		On entry : 0/0
 33129 ;;		On exit  : 3F/39
 33130 ;;		Unchanged: 0/0
 33131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33136 ;;Total ram usage:        0 bytes
 33137 ;; Hardware stack levels used:    1
 33138 ;; This function calls:
 33139 ;;		Nothing
 33140 ;; This function is called by:
 33141 ;;		Interrupt level 2
 33142 ;; This function uses a non-reentrant model
 33143 ;;
 33144                           
 33145                           	psect	text169
 33146  01B004                     __ptext169:
 33147                           	opt callstack 0
 33148  01B004                     _DMA1_DMADCNT_ISR:
 33149                           	opt callstack 5
 33150                           
 33151                           ; BSR set to: 0
 33152                           ;incstack = 0
 33153  01B004  EE14  F0C2         	lfsr	1,___inthi_sp
 33154                           
 33155                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 33156  01B008  0139               	movlb	57	; () banked
 33157  01B00A  93A2               	bcf	162,1,b	;volatile
 33158                           
 33159                           ; BSR set to: 57
 33160  01B00C  0011               	retfie		f
 33161  01B00E                     __end_of_DMA1_DMADCNT_ISR:
 33162                           	opt callstack 0
 33163                           
 33164 ;; *************** function _DMA1_DMAA_ISR *****************
 33165 ;; Defined at:
 33166 ;;		line 144 in file "mcc_generated_files/dma1.c"
 33167 ;; Parameters:    Size  Location     Type
 33168 ;;		None
 33169 ;; Auto vars:     Size  Location     Type
 33170 ;;		None
 33171 ;; Return value:  Size  Location     Type
 33172 ;;                  1    wreg      void 
 33173 ;; Registers used:
 33174 ;;		None
 33175 ;; Tracked objects:
 33176 ;;		On entry : 0/0
 33177 ;;		On exit  : 3F/39
 33178 ;;		Unchanged: 0/0
 33179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33184 ;;Total ram usage:        0 bytes
 33185 ;; Hardware stack levels used:    1
 33186 ;; This function calls:
 33187 ;;		Nothing
 33188 ;; This function is called by:
 33189 ;;		Interrupt level 2
 33190 ;; This function uses a non-reentrant model
 33191 ;;
 33192                           
 33193                           	psect	text170
 33194  01B010                     __ptext170:
 33195                           	opt callstack 0
 33196  01B010                     _DMA1_DMAA_ISR:
 33197                           	opt callstack 5
 33198                           
 33199                           ; BSR set to: 57
 33200                           ;incstack = 0
 33201  01B010  EE14  F0C2         	lfsr	1,___inthi_sp
 33202                           
 33203                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 33204  01B014  0139               	movlb	57	; () banked
 33205  01B016  97A2               	bcf	162,3,b	;volatile
 33206                           
 33207                           ; BSR set to: 57
 33208  01B018  0011               	retfie		f
 33209  01B01A                     __end_of_DMA1_DMAA_ISR:
 33210                           	opt callstack 0
 33211                           
 33212 ;; *************** function _DMA1_DMAOR_ISR *****************
 33213 ;; Defined at:
 33214 ;;		line 155 in file "mcc_generated_files/dma1.c"
 33215 ;; Parameters:    Size  Location     Type
 33216 ;;		None
 33217 ;; Auto vars:     Size  Location     Type
 33218 ;;		None
 33219 ;; Return value:  Size  Location     Type
 33220 ;;                  1    wreg      void 
 33221 ;; Registers used:
 33222 ;;		None
 33223 ;; Tracked objects:
 33224 ;;		On entry : 0/0
 33225 ;;		On exit  : 3F/39
 33226 ;;		Unchanged: 0/0
 33227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33232 ;;Total ram usage:        0 bytes
 33233 ;; Hardware stack levels used:    1
 33234 ;; This function calls:
 33235 ;;		Nothing
 33236 ;; This function is called by:
 33237 ;;		Interrupt level 2
 33238 ;; This function uses a non-reentrant model
 33239 ;;
 33240                           
 33241                           	psect	text171
 33242  01B01C                     __ptext171:
 33243                           	opt callstack 0
 33244  01B01C                     _DMA1_DMAOR_ISR:
 33245                           	opt callstack 5
 33246                           
 33247                           ; BSR set to: 57
 33248                           ;incstack = 0
 33249  01B01C  EE14  F0C2         	lfsr	1,___inthi_sp
 33250                           
 33251                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 33252  01B020  0139               	movlb	57	; () banked
 33253  01B022  95A2               	bcf	162,2,b	;volatile
 33254                           
 33255                           ; BSR set to: 57
 33256  01B024  0011               	retfie		f
 33257  01B026                     __end_of_DMA1_DMAOR_ISR:
 33258                           	opt callstack 0
 33259                           
 33260                           ;
 33261                           ; Interrupt Vector Table @ 0x8
 33262                           ;
 33263                           
 33264                           	psect	ivt0x8
 33265  000008                     __pivt0x8:
 33266                           	opt callstack 0
 33267  000008                     ivt0x8_base:
 33268                           	opt callstack 0
 33269                           
 33270                           ; Vector 0 : SWINT
 33271  000008  6C1A               	dw	_Default_ISR shr (0+2)
 33272                           
 33273                           ; Vector 1 : HLVD
 33274  00000A  6C1A               	dw	_Default_ISR shr (0+2)
 33275                           
 33276                           ; Vector 2 : OSF
 33277  00000C  6C1A               	dw	_Default_ISR shr (0+2)
 33278                           
 33279                           ; Vector 3 : CSW
 33280  00000E  6C1A               	dw	_Default_ISR shr (0+2)
 33281                           
 33282                           ; Vector 4 : NVM
 33283  000010  6C1A               	dw	_Default_ISR shr (0+2)
 33284                           
 33285                           ; Vector 5 : SCAN
 33286  000012  6C1A               	dw	_Default_ISR shr (0+2)
 33287                           
 33288                           ; Vector 6 : CRC
 33289  000014  6C1A               	dw	_Default_ISR shr (0+2)
 33290                           
 33291                           ; Vector 7 : IOC
 33292  000016  6C1A               	dw	_Default_ISR shr (0+2)
 33293                           
 33294                           ; Vector 8 : INT0
 33295  000018  6BF4               	dw	_INT0_ISR shr (0+2)
 33296                           
 33297                           ; Vector 9 : ZCD
 33298  00001A  6C1A               	dw	_Default_ISR shr (0+2)
 33299                           
 33300                           ; Vector 10 : AD
 33301  00001C  6A5F               	dw	_ADCC_ISR shr (0+2)
 33302                           
 33303                           ; Vector 11 : ADT
 33304  00001E  6795               	dw	_ADCC_ThresholdISR shr (0+2)
 33305                           
 33306                           ; Vector 12 : CMP1
 33307  000020  6C1A               	dw	_Default_ISR shr (0+2)
 33308                           
 33309                           ; Vector 13 : SMT1
 33310  000022  6C1A               	dw	_Default_ISR shr (0+2)
 33311                           
 33312                           ; Vector 14 : SMT1PRA
 33313  000024  6C1A               	dw	_Default_ISR shr (0+2)
 33314                           
 33315                           ; Vector 15 : SMT1PRW
 33316  000026  6C1A               	dw	_Default_ISR shr (0+2)
 33317                           
 33318                           ; Vector 16 : DMA1SCNT
 33319  000028  6BF8               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 33320                           
 33321                           ; Vector 17 : DMA1DCNT
 33322  00002A  6C01               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 33323                           
 33324                           ; Vector 18 : DMA1OR
 33325  00002C  6C07               	dw	_DMA1_DMAOR_ISR shr (0+2)
 33326                           
 33327                           ; Vector 19 : DMA1A
 33328  00002E  6C04               	dw	_DMA1_DMAA_ISR shr (0+2)
 33329                           
 33330                           ; Vector 20 : SPI1RX
 33331  000030  6C1A               	dw	_Default_ISR shr (0+2)
 33332                           
 33333                           ; Vector 21 : SPI1TX
 33334  000032  6C1A               	dw	_Default_ISR shr (0+2)
 33335                           
 33336                           ; Vector 22 : SPI1
 33337  000034  6C1A               	dw	_Default_ISR shr (0+2)
 33338                           
 33339                           ; Vector 23 : I2C1RX
 33340  000036  6C1A               	dw	_Default_ISR shr (0+2)
 33341                           
 33342                           ; Vector 24 : I2C1TX
 33343  000038  6C1A               	dw	_Default_ISR shr (0+2)
 33344                           
 33345                           ; Vector 25 : I2C1
 33346  00003A  6C1A               	dw	_Default_ISR shr (0+2)
 33347                           
 33348                           ; Vector 26 : I2C1E
 33349  00003C  6C1A               	dw	_Default_ISR shr (0+2)
 33350                           
 33351                           ; Vector 27 : U1RX
 33352  00003E  6B0C               	dw	_UART1_rx_vect_isr shr (0+2)
 33353                           
 33354                           ; Vector 28 : U1TX
 33355  000040  6C1A               	dw	_Default_ISR shr (0+2)
 33356                           
 33357                           ; Vector 29 : U1E
 33358  000042  6C1A               	dw	_Default_ISR shr (0+2)
 33359                           
 33360                           ; Vector 30 : U1
 33361  000044  6C1A               	dw	_Default_ISR shr (0+2)
 33362                           
 33363                           ; Vector 31 : TMR0
 33364  000046  6C1A               	dw	_Default_ISR shr (0+2)
 33365                           
 33366                           ; Vector 32 : TMR1
 33367  000048  6C1A               	dw	_Default_ISR shr (0+2)
 33368                           
 33369                           ; Vector 33 : TMR1G
 33370  00004A  6C1A               	dw	_Default_ISR shr (0+2)
 33371                           
 33372                           ; Vector 34 : TMR2
 33373  00004C  6C1A               	dw	_Default_ISR shr (0+2)
 33374                           
 33375                           ; Vector 35 : CCP1
 33376  00004E  6C1A               	dw	_Default_ISR shr (0+2)
 33377                           
 33378                           ; Vector 36 : Undefined
 33379  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33380                           
 33381                           ; Vector 37 : NCO1
 33382  000052  6C1A               	dw	_Default_ISR shr (0+2)
 33383                           
 33384                           ; Vector 38 : CWG1
 33385  000054  6C1A               	dw	_Default_ISR shr (0+2)
 33386                           
 33387                           ; Vector 39 : CLC1
 33388  000056  6C1A               	dw	_Default_ISR shr (0+2)
 33389                           
 33390                           ; Vector 40 : INT1
 33391  000058  699D               	dw	_INT1_ISR shr (0+2)
 33392                           
 33393                           ; Vector 41 : CMP2
 33394  00005A  6C1A               	dw	_Default_ISR shr (0+2)
 33395                           
 33396                           ; Vector 42 : DMA2SCNT
 33397  00005C  6C1A               	dw	_Default_ISR shr (0+2)
 33398                           
 33399                           ; Vector 43 : DMA2DCNT
 33400  00005E  6C1A               	dw	_Default_ISR shr (0+2)
 33401                           
 33402                           ; Vector 44 : DMA2OR
 33403  000060  6C1A               	dw	_Default_ISR shr (0+2)
 33404                           
 33405                           ; Vector 45 : DMA2A
 33406  000062  6C1A               	dw	_Default_ISR shr (0+2)
 33407                           
 33408                           ; Vector 46 : I2C2RX
 33409  000064  6C1A               	dw	_Default_ISR shr (0+2)
 33410                           
 33411                           ; Vector 47 : I2C2TX
 33412  000066  6C1A               	dw	_Default_ISR shr (0+2)
 33413                           
 33414                           ; Vector 48 : I2C2
 33415  000068  6C1A               	dw	_Default_ISR shr (0+2)
 33416                           
 33417                           ; Vector 49 : I2C2E
 33418  00006A  6C1A               	dw	_Default_ISR shr (0+2)
 33419                           
 33420                           ; Vector 50 : U2RX
 33421  00006C  6B20               	dw	_UART2_rx_vect_isr shr (0+2)
 33422                           
 33423                           ; Vector 51 : U2TX
 33424  00006E  6B16               	dw	_UART2_tx_vect_isr shr (0+2)
 33425                           
 33426                           ; Vector 52 : U2E
 33427  000070  6C1A               	dw	_Default_ISR shr (0+2)
 33428                           
 33429                           ; Vector 53 : U2
 33430  000072  6C1A               	dw	_Default_ISR shr (0+2)
 33431                           
 33432                           ; Vector 54 : TMR3
 33433  000074  60A5               	dw	_TMR3_ISR shr (0+2)
 33434                           
 33435                           ; Vector 55 : TMR3G
 33436  000076  6C1A               	dw	_Default_ISR shr (0+2)
 33437                           
 33438                           ; Vector 56 : TMR4
 33439  000078  6C1A               	dw	_Default_ISR shr (0+2)
 33440                           
 33441                           ; Vector 57 : CCP2
 33442  00007A  6C1A               	dw	_Default_ISR shr (0+2)
 33443                           
 33444                           ; Vector 58 : Undefined
 33445  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 33446                           
 33447                           ; Vector 59 : CWG2
 33448  00007E  6C1A               	dw	_Default_ISR shr (0+2)
 33449                           
 33450                           ; Vector 60 : CLC2
 33451  000080  6C1A               	dw	_Default_ISR shr (0+2)
 33452                           
 33453                           ; Vector 61 : INT2
 33454  000082  6C1A               	dw	_Default_ISR shr (0+2)
 33455                           
 33456                           ; Vector 62 : Undefined
 33457  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 33458                           
 33459                           ; Vector 63 : Undefined
 33460  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 33461                           
 33462                           ; Vector 64 : Undefined
 33463  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 33464                           
 33465                           ; Vector 65 : Undefined
 33466  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 33467                           
 33468                           ; Vector 66 : Undefined
 33469  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 33470                           
 33471                           ; Vector 67 : Undefined
 33472  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 33473                           
 33474                           ; Vector 68 : Undefined
 33475  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 33476                           
 33477                           ; Vector 69 : Undefined
 33478  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 33479                           
 33480                           ; Vector 70 : TMR5
 33481  000094  6858               	dw	_TMR5_ISR shr (0+2)
 33482                           
 33483                           ; Vector 71 : TMR5G
 33484  000096  6C1A               	dw	_Default_ISR shr (0+2)
 33485                           
 33486                           ; Vector 72 : TMR6
 33487  000098  6BB4               	dw	_TMR6_ISR shr (0+2)
 33488                           
 33489                           ; Vector 73 : CCP3
 33490  00009A  6C1A               	dw	_Default_ISR shr (0+2)
 33491                           
 33492                           ; Vector 74 : CWG3
 33493  00009C  6C1A               	dw	_Default_ISR shr (0+2)
 33494                           
 33495                           ; Vector 75 : CLC3
 33496  00009E  6C1A               	dw	_Default_ISR shr (0+2)
 33497                           
 33498                           ; Vector 76 : Undefined
 33499  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 33500                           
 33501                           ; Vector 77 : Undefined
 33502  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 33503                           
 33504                           ; Vector 78 : Undefined
 33505  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 33506                           
 33507                           ; Vector 79 : Undefined
 33508  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 33509                           
 33510                           ; Vector 80 : CCP4
 33511  0000A8  6C1A               	dw	_Default_ISR shr (0+2)
 33512                           
 33513                           ; Vector 81 : CLC4
 33514  0000AA  6C1A               	dw	_Default_ISR shr (0+2)
 33515  0000AC                     ivt0x8_undefint:
 33516                           	opt callstack 0
 33517  0000AC  00FF               	reset	
 33518                           
 33519                           	psect	text172
 33520  000000                     __ptext172:
 33521                           	opt callstack 0
 33522                           
 33523                           	psect	rparam
 33524  0000                     
 33525                           	psect	temp
 33526  000001                     btemp:
 33527                           	opt callstack 0
 33528  000001                     	ds	32
 33529  0000                     wtemp0	set	btemp
 33530  0000                     wtemp1	set	btemp+2
 33531  0000                     wtemp2	set	btemp+4
 33532  0000                     wtemp3	set	btemp+6
 33533  0000                     wtemp4	set	btemp+8
 33534  0000                     wtemp5	set	btemp+10
 33535  0000                     wtemp8	set	btemp+1
 33536  0000                     ttemp0	set	btemp
 33537  0000                     ttemp1	set	btemp+3
 33538  0000                     ttemp2	set	btemp+6
 33539  0000                     ttemp3	set	btemp+9
 33540  0000                     ttemp5	set	btemp+1
 33541  0000                     ttemp6	set	btemp+4
 33542  0000                     ttemp7	set	btemp+8
 33543  0000                     ltemp0	set	btemp
 33544  0000                     ltemp1	set	btemp+4
 33545  0000                     ltemp2	set	btemp+8
 33546  0000                     lltemp0	set	btemp
 33547  0000                     lltemp1	set	btemp+8
 33548  0000                     lltemp2	set	btemp+16
 33549  0000                     lltemp3	set	btemp+24
 33550                           tosu	equ	0x3FFF
 33551                           tosh	equ	0x3FFE
 33552                           tosl	equ	0x3FFD
 33553                           stkptr	equ	0x3FFC
 33554                           pclatu	equ	0x3FFB
 33555                           pclath	equ	0x3FFA
 33556                           pcl	equ	0x3FF9
 33557                           tblptru	equ	0x3FF8
 33558                           tblptrh	equ	0x3FF7
 33559                           tblptrl	equ	0x3FF6
 33560                           tablat	equ	0x3FF5
 33561                           prodh	equ	0x3FF4
 33562                           prodl	equ	0x3FF3
 33563                           indf0	equ	0x3FEF
 33564                           postinc0	equ	0x3FEE
 33565                           postdec0	equ	0x3FED
 33566                           preinc0	equ	0x3FEC
 33567                           plusw0	equ	0x3FEB
 33568                           fsr0h	equ	0x3FEA
 33569                           fsr0l	equ	0x3FE9
 33570                           wreg	equ	0x3FE8
 33571                           indf1	equ	0x3FE7
 33572                           postinc1	equ	0x3FE6
 33573                           postdec1	equ	0x3FE5
 33574                           preinc1	equ	0x3FE4
 33575                           plusw1	equ	0x3FE3
 33576                           fsr1h	equ	0x3FE2
 33577                           fsr1l	equ	0x3FE1
 33578                           bsr	equ	0x3FE0
 33579                           indf2	equ	0x3FDF
 33580                           postinc2	equ	0x3FDE
 33581                           postdec2	equ	0x3FDD
 33582                           preinc2	equ	0x3FDC
 33583                           plusw2	equ	0x3FDB
 33584                           fsr2h	equ	0x3FDA
 33585                           fsr2l	equ	0x3FD9
 33586                           status	equ	0x3FD8


Data Sizes:
    Strings     721
    Constant    372
    Data        997
    BSS         1097
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     156
    BANK1           256      0     243
    BANK2           256      0     253
    BANK3           256     25     253
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_92(CODE[1]), STR_54(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_89(CODE[3]), STR_85(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[3]), STR_66(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_89(CODE[3]), STR_85(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[3]), STR_66(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[19]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[22]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[19]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[22]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_37(CODE[9]), STR_36(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_37(CODE[9]), STR_36(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_61(CODE[4]), STR_60(CODE[4]), STR_57(CODE[4]), STR_56(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_61(CODE[4]), STR_60(CODE[4]), STR_57(CODE[4]), STR_56(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[19]), STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[19]), STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[22]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5923_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[19]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[22]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[19]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[22]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_55(CODE[85]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[19]), 
		 -> STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[24]), STR_44(CODE[15]), STR_43(CODE[15]), 
		 -> STR_42(CODE[15]), STR_41(CODE[10]), STR_40(CODE[10]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[17]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[19]), 
		 -> STR_28(CODE[20]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[19]), 
		 -> STR_20(CODE[17]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[26]), 
		 -> STR_16(CODE[26]), STR_15(CODE[22]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[22]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_37(CODE[9]), STR_36(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_37(CODE[9]), STR_36(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_37(CODE[9]), 
		 -> STR_36(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4451tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_37(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  371221
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                             ___flge
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            0     0      0    8599
                             _WaitMs
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK3     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___flge
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F3       7       94.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9C       5       97.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     533      58        0.0%
DATA                 0      0     855       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 12 18:24:46 2019

                     _SPI1_Exchange8bit ADE6                __end_of_set_display_info AE40  
                                     _C 0100                                       _D 07FF  
                                     _H 00F5                                       _P 0098  
                                     _R 00C6                                       _S 02BC  
                                     _T FC89                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler AB66            __end_of_start_switch_handler ADE6  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FD19                  __end_of_FVR_Initialize B04E  
                           __CFG_LVP$ON 000000                                     l169 AF56  
                                   l807 ADF4                                     l673 A9CE  
                                   _GIE 01FE97                                     _abs A390  
                                   _pad 8B2A                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize AF02                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack AD5C                       _update_adc_result A6B2  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack ACF0                            __CFG_ZCD$OFF 000000  
                                  l1000 A62E                                    l2120 123A  
                                  l3010 A3D0                                    l3002 7B52  
                                  l2202 64E6                                    l1330 274E  
                                  l1340 27EC                                    l1332 2754  
                                  l3110 8A08                                    l1342 28B2  
                                  l1318 224E                                    l2223 5E14  
                                  l1343 29C0                                    l2064 8B86  
                                  l3041 6BA4                                    l1347 2DA2  
                       _timer3ReloadVal 0027                                    l1188 A66E  
                                  l2084 4F66                                    l2164 0B1A  
                                  l1428 A0B4                                    l2149 066A  
                                  l2238 534C                                    l1703 AE3C  
                                  l1812 79BC                                    l1572 9A46  
                                  l3405 9C72                                    l1646 A708  
                                  l1663 8D4A                                    l1655 70C0  
                                  l1568 9742                                    l2288 21E6  
                                  l1656 721C                                    l2618 7FB8  
                                  l1587 A772                                    l1907 9B6C  
                                  l2580 93C8                                    l1916 9058  
                                  l1765 4E82                    _ADCC_StartConversion AF70  
                                  l2591 828A                                    l2903 49D2  
                                  l2584 81B6                                    l3392 9CF6  
                                  l3377 7004                                    l2870 3C4A  
                                  l8000 3434                                    l8010 347E  
                                  l2858 3DBA                                    l2939 35FE  
                                  l8014 3484                                    l7310 365E  
                                  l8110 8A32                                    l8024 34F8  
                                  l7320 36B4                                    l8042 35AC  
                                  l8034 3568                                    l7402 39E2  
                                  l7322 36E4                                    l8114 8A44  
                                  l2979 741A                                    l8044 35C6  
                                  l8028 353E                                    l7340 378E  
                                  l7316 369E                                    l8220 7F50  
                                  l8212 7F24                                    l7510 3D5A  
                                  l7430 3ACA                                    l7406 3A12  
                                  l7334 374E                                    l8070 8430  
                                  l8118 8A5C                                    l8222 7F66  
                                  l8214 7F40                                    l7512 3D6A  
                                  l7424 3AAE                                    l7352 37F6  
                                  l7344 37A4                                    l7328 371C  
                                  l8160 8174                                    l8064 841A  
                                  l8136 8B10                                    l8128 8ADC  
                                  l8152 93C6                                    l8144 9350  
                                  l7506 3D42                                    l7426 3AC0  
                                  l7434 3AFC                                    l7346 37D4  
                                  l8170 8252                                    l7282 9816  
                                  l8090 84F6                                    l7284 9838  
                                  l8076 8450                                    l8148 9392  
                                  l8236 7BAA                                    l8260 857E  
                                  l7518 3D9A                                    l7470 3C8A  
                                  l7446 3BD4                                    l7382 3934  
                                  l8166 8204                                    l7710 6C0C  
                                  l7622 5CA0                                    l7480 3CB2  
                                  l7464 3C6C                                    l7456 3C2E  
                                  l7448 3BFA                                    l7392 39A6  
                                  l7552 A3C0                                    l7632 5DA6  
                                  l7624 5CF0                                    l7608 5B82  
                                  l8248 7C7C                                    l7466 3C7E  
                                  l8178 8288                                    l8098 852A  
                                  l8186 A366                                    l7570 7AF4  
                                  l7650 9C62                                    l7484 3CB8  
                                  l7396 39C6                                    l8284 A24E  
                                  l8196 7EA2                                    l7628 5D38  
                                  l8268 862A                                    l7910 2E7A  
                                  l7902 2E34                                    l7398 39D8  
                                  l9406 7398                                    l7726 6D40  
                                  l7718 6C94                                    l7566 7AF0  
                                  l7920 2F02                                    l7912 2EAA  
                                  l7496 3D16                                    l7832 480C  
                                  l7824 47DA                                    l7816 4774  
                                  l7808 473E                                    l7752 44F8  
                                  l9416 73FA                                    l7672 6770  
                                  l7576 7B4A                                    l9346 A28A  
                                  l7930 2F78                                    l7842 484E  
                                  l7818 4786                                    l7826 47DE  
                                  l7746 44B8                                    l7690 6888  
                                  l7666 671C                                    l7594 9CE6  
                                  l9338 A962                                    l7908 2E74  
                                  l7852 4898                                    l7772 45D6  
                                  l7756 450E                                    l9196 AA96  
                                  l8900 69EA                                    l9284 A77C  
                                  l7926 2F42                                    l7838 4828  
                                  l7790 4694                                    l7766 4596  
                                  l7758 453E                                    l9382 72D6  
                                  l9374 726A                                    l8910 6A52  
                                  l7678 67B6                                    l7928 2F48  
                                  l7872 494E                                    l7856 489E  
                                  l7784 465A                                    l7776 45EC  
                                  l9384 72E4                                    l8912 6A90  
                                  l7938 2F9A                                    l7866 4912  
                                  l7778 461C                                    l9394 7346  
                                  l9386 72FA                                    l8906 6A16  
                                  l7884 49A6                                    l9396 7364  
                                  l9388 7318                                    l8916 6AF8  
                                  l8908 6A2E                                    l7990 33F2  
                                  l7886 49B6                                    l7878 497E  
                                  l7798 46AE                                    l9398 737A  
                                  l8926 6B94                                    l8942 6E76  
                                  l8944 6EE2                                    l8890 6954  
                                  l7996 340E                                    l9924 786E  
                                  l9916 7842                                    l9844 4A0E  
                                  l8892 6976                                    l9870 4CD4  
                                  l9854 4B2C                                    l9838 49DE  
                                  STR_1 FF50                                    l9792 A2E8  
                                  l9928 7882                                    STR_2 FFA2  
                                  STR_3 FFD0                                    l9866 4C38  
                                  l9858 4C06                                    l9962 A71E  
                                  STR_4 FF1D                                    STR_5 FE3C  
                                  l9788 A2B6                                    l9884 4E50  
                                  l9892 4E62                                    STR_6 FE3C  
                                  STR_7 FE3C                                    l9878 4DB4  
                                  STR_8 FF0B                                    STR_9 FDFA  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5100 A8E8  
                                  u5200 395A                                    u5210 397A  
                                  u5211 3974                                    u5060 9866  
                                  u6100 6DCA                                    u6020 6C06  
                                  u5400 3C90                                    u5320 3AF2  
                                  u6040 6C5C                                    u7000 8662  
                                  u5250 3A0A                                    u6050 6C8E  
                                  u5090 A8E6                                    _T6PR 003F93  
                                  u5067 9858                                    u5420 3CAA  
                                  u5260 3A2A                                    u5228 397C  
                                  u7020 A22A                                    u6060 6CC0  
                                  _PMD0 0039C0                                    u5325 3AE2  
                                  _PMD1 0039C1                                    u7030 A24A  
                                  _PMD2 0039C2                                    u5255 39FA  
                                  _PMD3 0039C3                                    u5360 3C1C  
                                  u6320 48EC                                    u6240 4806  
                                  u6080 6D78                                    u5600 7A74  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u6330 4926                                    u5530 A8B6  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u6500 3476                                    u5460 3D06  
                                  u6340 4962                                    u5700 9CA6  
                                  u5540 A8B8                                    u6325 48DC  
                                  u5605 7A6A                                    u6430 2F88  
                                  u6280 4890                                    u8200 6B40  
                                  u5720 5B1A                                    u5465 3CF6  
                                  u5490 3D26                                    u6610 847C  
                                  u5650 7B42                                    u5730 5B66  
                                  u6540 34D2                                    u5900 6716  
                                  u6700 8AFC                                    u5660 7B44  
                                  u5820 A526                                    u6445 311C  
                                  u5645 7B24                                    u5725 5B10  
                                  u6550 350C                                    u9014 4CEE  
                                  u5590 A3A4                                    u6630 8516  
                                  u5830 A528                                    u6455 31E4  
                                  u9015 4CE8                                    u6560 3552  
                                  u9040 4D18                                    u5920 676C  
                                  u6800 A362                                    u8240 6F10  
                                  u5840 9C20                                    u6545 34C2  
                                  u6465 33AC                                    u9034 4D10  
                                  u8170 69E6                                    u6810 7E82  
                                  u5770 5C46                                    u5690 9CA4  
                                  u5850 9C22                                    u9035 4D0A  
                                  u5931 6776                                    u5755 5BA0  
                                  u9060 7820                                    u5940 67B0  
                                  u6740 93C2                                    u6900 7F98  
                                  u6820 7E96                                    u5756 5BA6  
                                  u5757 5BB4                                    u9150 ADB0  
                                  u5870 A916                                    u8190 6B3E  
                                  u5950 67E2                                    u6830 7ED0  
                                  u5790 5D1E                                    u6815 7E78  
                                  u5775 5C3C                                    u8247 6F02  
                                  u6911 7B6A                                    u5880 A918  
                                  u6680 8A88                                    u8280 6FAA  
                                  u6920 7BA4                                    u5970 68C0  
                                  u8290 6FD8                                    u6930 7BD6  
                                  u6835 7EC6                                    u5795 5D14  
                                  u9156 ADB2                                    u9308 9B5A  
                                  u9260 9B12                                    u8285 6FA4  
                                  u5990 6912                                    u6950 7CB4  
                                  u8287 6F96                                    u6880 7F6E  
                                  u8297 6FCA                                    u6970 8578  
                                  u9290 9B58                                    u8820 9ECC  
                                  u6980 85AA                                    u9278 9B14  
                                  u8905 AF8C                                    u8906 AF8E  
                                  _PLLR 01CEE0                                    u8675 A562  
                                  u8780 738E                                    u8845 9F00  
                                  u8846 9F02                                    u8838 9ECE  
                                  u8934 49F8                                    u8935 49F2  
                                  u8954 4A28                                    u8955 4A22  
                                  u8974 4A4A                                    u8975 4A44  
                                  u8895 AF9C                                    u8896 AF9E  
                                  u8994 4C20                                    u8995 4C1A  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR A9A8                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                                    _cp_h FD29  
                                  _cp_l FD25                                    _atoi 693A  
                                  _ctoa 9B70                                    _main 21F0  
                                  _dtoa 4E88                                    _nanf 9FEA  
                                  _seed 00BE                                    _prec 0023  
                                  _nout 00BA                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 63FC                                    btemp 0001  
                                  _utoa 5DD0                                    _xtoa 5308  
                __end_of_check_adc_scan B036                           ___fpclassifyf 79C6  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit AE04               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize A4A8             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr AC30                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR AFDE  
                      __end_of_INT1_ISR A6B2          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 974A           __end_of_OSCILLATOR_Initialize AF5C  
                                 l10004 A6D2                                   l10040 86B2  
                                 l10042 86C0                                   l10034 8696  
                                 l10036 86A6                                   l10206 AEB0  
                                 l10062 87A6                                   l10054 872C  
                                 l10038 86AC                                   l10046 86C8  
                                 l11110 98E0                                   l10142 9932  
                                 l10048 86F4                                   l11120 8B7E  
                                 l10218 A9CA                                   l11106 98A2  
                                 l11130 8C16                                   l11122 8B90  
                                 l11210 4F56                                   l10410 94D2  
                                 l10074 9B26                                   l10146 999A  
                                 l12100 42AC                                   l10244 A616  
                                 l11116 8B56                                   l11300 01EA  
                                 l10262 A656                                   l11126 8BCC  
                                 l11222 4FBE                                   l11302 0216  
                                 l10406 9494                                   l11232 51D0  
                                 l11136 9282                                   l11304 022C  
                                 l11152 61A8                                   l10450 5A58  
                                 l11218 4FA0                                   l12026 8C62  
                                 l11252 5282                                   l11500 0F3A  
                                 l11404 077A                                   l11340 0470  
                                 l11308 0258                                   l11172 637E  
                                 l11164 62D0                                   l12070 3ECC  
                                 l10358 7E2A                                   l10550 A5EC  
                                 l11094 891E                                   l11414 0926  
                                 l11334 0396                                   l11318 02FC  
                                 l11326 032A                                   l11270 00AC  
                                 l11158 6266                                   l12222 71B8  
                                 l12080 40DC                                   l11184 9B8E  
                                 l11256 52BE                                   l11360 057C  
                                 l11344 04D2                                   l12208 7090  
                                 l10456 8F66                                   l12400 27BA  
                                 l10562 9D44                                   l12090 4204  
                                 l12066 3E8A                                   l11186 9BBA  
                                 l11514 0FD6                                   l11362 058E  
                                 l11338 0406                                   l11282 00F0  
                                 l11290 0146                                   l11610 667A  
                                 l11602 6612                                   l10556 9D34  
                                 l12084 415A                                   l11516 0FF0  
                                 l11452 0C32                                   l11436 0B12  
                                 l11428 0A48                                   l11356 0554  
                                 l11700 5508                                   l10468 8FC2  
                                 l12420 2A9E                                   l12094 428E  
                                 l11526 1092                                   l11438 0B34  
                                 l11606 663E                                   l10478 9032  
                                 l12270 2230                                   l12096 4296  
                                 l11552 119A                                   l11536 10E2  
                                 l11464 0CBA                                   l11472 0D24  
                                 l11480 0D90                                   l11376 05F6  
                                 l11368 0594                                   l11632 5E60  
                                 l11624 5E04                                   l11800 165C  
                                 l12424 2B00                                   l12408 27DE  
                                 l12328 241A                                   l12272 2238  
                                 l11394 06B8                                   l11378 0602  
                                 l11642 6056                                   l11810 16F4  
                                 l12434 2C7C                                   l12442 2CC6  
                                 l11572 6468                                   l11724 5678  
                                 l11708 558E                                   l12460 2D34  
                                 l12452 2D0A                                   l12436 2CA6  
                                 l12276 2256                                   PRLOCK 0039EF  
                                 l11398 06F0                                   l11670 5376  
                                 l11910 1FDC                                   l11822 1834  
                                 l12470 2D78                                   l12278 2268  
                                 l11488 0EA2                                   l11592 6558  
                                 l11664 533C                                   l11760 1360  
                                 l12480 2DCC                                   l11930 216E  
                                 l11842 1A46                                   l11834 198E  
                                 l11818 17E0                                   l11762 1376  
                                 l12466 2D52                                   l12458 2D1C  
                                 l12386 2758                                   l11596 6588  
                                 l11588 651C                                   l11684 5412  
                                 l11676 53B2                                   l11924 2114  
                                 l11780 14A8                                   l11940 2192  
                                 l12388 2786                                   l11934 2172  
                                 l11846 1A7A                                   l11782 14E2  
                                 l11758 1326                                   l11784 14F8  
                                 l11866 1BDA                                   l11876 1C88  
                                 l11980 97A2                                   l11886 1DAA  
                                 l11896 1E60                                   l11994 9620  
                                 l11996 9662                         __end_of___aodiv 693A  
                          _Volts_to_SOC 992A                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 3DC4  
                                 _ADCLK 003EFF                         __end_of___aomod 6DEE  
                                 _ADPCH 003EF1                         __end_of___fldiv 49DC  
                                 _ADREF 003EFD                         __end_of___awdiv 8544  
                       __end_of___flneg A390                                   STR_10 FDE4  
                                 STR_11 FE10                                   STR_20 FF61  
                                 STR_12 FF2E                                   STR_13 FF3F  
                                 STR_21 FE86                                   STR_30 FF83  
                                 STR_14 FF72                                   STR_22 FEAC  
                                 STR_31 FF83                                   STR_23 FE99  
                                 STR_15 FDCE                                   STR_32 FF61  
                                 STR_40 FFBD                                   STR_24 FEF8  
                                 STR_16 FD82                                   STR_41 FFBD  
                                 STR_33 FFFB                                   STR_25 FED2  
                                 STR_17 FD9C                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFF8                                   STR_42 FF93  
                                 STR_18 FF83                                   STR_26 FEE5  
                                 STR_43 FF93                                   STR_27 FEBF  
                                 STR_44 FF93                                   STR_60 FFDA  
                                 STR_36 FFB1                                   STR_28 FE26  
                       __end_of___awmod 8B2A                                   STR_61 FFE2  
                                 STR_37 FFC7                                   STR_29 FE73  
                                 STR_45 FDB6                                   STR_54 FD81  
                                 STR_70 FFEF                                   STR_38 FE4D  
                                 STR_39 FE4D                                   STR_47 FE60  
                                 STR_55 FD2D                                   STR_80 FFF2  
                                 STR_64 FFE9                                   STR_56 FFD6  
                                 STR_48 FE3A                                   _ADRPT 003EEC  
                                 STR_73 FFEC                                   STR_57 FFDE  
                                 STR_66 FFE9                                   STR_75 FFEC  
                                 STR_83 FFF5                                   STR_68 FFEF  
                                 STR_85 FFF5                                   STR_78 FFF2  
                                 STR_87 FFE6                         __end_of___flmul 3608  
                                 STR_89 FFE6                         __end_of___flsub A41C  
                       __end_of___fltol 7FC2                                   u10030 8912  
                                 u10110 92FC                                   u10200 4EB8  
                                 u10050 898E                                   u10210 4EBA  
                                 u10300 522A                                   u11100 540A  
                                 u10301 5228                                   u10117 92EE  
                                 u11021 6098                                   u10310 523E  
                                 u10230 4F2A                                   u11030 60AE  
                                 u11110 545E                                   u11031 60AC  
                                 u10320 5242                                   u11040 60C2  
                                 u11200 55F0                                   u11120 5460  
                                 u11201 55EE                                   u10250 4F3C  
                                 u10410 0194                                   u11050 60C6  
                                 u11210 5604                                   u10170 63F2  
                                 u10340 5258                                   u10500 050E  
                                 u10420 0196                                   u11220 5608  
                                 u11140 54BE                                   u11300 13E6  
                                 u10270 4F8C                                   u11150 54C0  
                                 u11070 5322                                   u10280 51E4  
                                 u10600 0648                                   u11400 1748  
                                 u10530 0562                                   u10450 02A6  
                                 u11170 558A                                   u11330 1540  
                                 u10291 5214                         __end_of___lodiv 7CDC  
                                 u10460 02A8                                   u10380 00DA  
                                 u11180 55AA                                   u11420 18BC  
                                 u11340 1542                                   u11350 1568  
                                 u11191 55DA                                   u11175 556C  
                                 u10560 05C6                                   u11520 1EB4  
                                 u11280 13BE                                   u11450 1B34  
                                 u11290 13C0                                   _U1P1H 003DED  
                                 u11540 2064                                   u11460 1B36  
                                 _U1P2H 003DEF                                   u10830 10B8  
                                 u10670 0A18                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u11560 9782                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10850 116E  
                                 u10770 0EE4                                   u10930 657E  
                                 u11810 2524                                   _U1P3L 003DF0  
                                 u10860 1170                                   u10940 65C4  
                                 u11750 7208                                   _U2P1L 003DD4  
                                 u11760 720A                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10970 66A0  
                                 _U2P3L 003DD8                                   u10947 65B6  
                                 u10990 5DEA                                   _T5CLK 003F9D  
                       __end_of___lomod 8684                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00A5                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003D                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result A6EC  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR B068                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 83F6  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A1BA                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR AEEA                            _DMA1CON1bits 003BFD  
                                 _fabsf 9546                                   _flags 0025  
              __size_of_calc_model_data 03A2                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 88EE  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha A532  
                                 _fputs 9892                         __end_of_isdigit A922  
                       __end_of_ivln2_h FD25                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand A7C6                                   _width 0021  
                                 _putch AEB4                         __end_of_islower A8C2  
                       __end_of_isspace A25E                _INT1_SetInterruptHandler AB8E  
                       __end_of_isupper A8F2                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler AB16  
           _UART1_SetRxInterruptHandler AAEE                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 8E58                         __end_of_tolower 9D00  
                       __end_of_strncmp 700E                         __end_of_toupper 9C7C  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr AC58  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize A462  
                 __end_of_ringBufS_init AA76                         __initialization 8E58  
                     _UART2_rx_vect_isr AC80                            __end_of_cp_h FD2D  
                          __end_of_cp_l FD29                            __end_of_atoi 6BAE  
                          __end_of_ctoa 9BF8                            __end_of_main 2DDE  
                          __end_of_dtoa 5308                            __end_of_nanf A04C  
                          __end_of_stoa 66BA                            __end_of_utoa 6110  
                          __end_of_xtoa 56C2                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize AF1A  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button A5F4  
              _TMR5_SetInterruptHandler AB3E                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 009C  
                     _port_data_dma_ptr AFF8                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize A9D4  
                       _PWM8_Initialize AF30                        _UART1_Initialize A41C  
                     _UART2_tx_vect_isr AC58                      _UART2_Transmit_ISR A9A8  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 9F24  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue A532  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 A1AC                                  _RB6PPS 003A0E  
                                i1l1205 835E                    _start_switch_handler ADC6  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize A4EE                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright AFC0  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u923_24 879C                                  u923_25 8798  
                                u916_28 869C                                  u941_48 AD6C  
                                u919_20 86BC                                  u919_21 86B6  
                                u943_28 AD00                                  u952_28 AD24  
                  __size_of_hid_display 0102                                  u949_48 AD90  
                                u974_44 9D64                                  u974_45 9D5E  
                                u888_20 A836                                  u888_26 A838  
                      __end_of___xxtofl 7424   __end_of_ADCC_DischargeSampleCapacitor B02E  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor B026  
              __end_of_send_lcd_cmd_dma A20C                         _TMR3_WriteTimer A634  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr ACA8  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize AFEE  
                      _UART2_Initialize A04C                                  _WaitMs A75A  
                       _conv_raw_result 49DC                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8132  
                                ___fleq 930E                       _ADCC_ThresholdISR 9E54  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 99BC  
                                _efgtoa 0000                                  _floorf 5A64  
                    ?_ADCC_ThresholdISR 0038                                  _memset 6110  
                  __size_of_help_button 0038                                  clear_0 8EEC  
                                clear_1 8F00                                  clear_2 8F12  
                                clear_3 8F1E                                  clear_4 8F2A  
                                clear_5 8F36                                  clear_6 8F42  
             __end_of_port_data_dma_ptr B002                                  _printf 9F88  
                    _eaDogM_WriteString 974A                                  _strcpy 923A  
                             ?_ADCC_ISR 0038                                  _strlen 97F0  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize 9DE8                          _PMD_Initialize AF5C  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr AC80  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan 9F88  
                          __mediumconst FBB8                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A104                        __end_of_vfprintf 96A0  
                            _StartTimer A574           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize A4A8                       _SYSTEM_Initialize A2FE  
                            __accesstop 0060                 __end_of__initialization 8F54  
                             ?_INT0_ISR 0038                               ?_INT1_ISR 0038  
                  __end_of_display_help B046                    __end_of_display_info B03E  
             __end_of_CLKREF_Initialize AFF8                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer A5F4  
                 _set_temp_display_help AFA2                        _clear_hid_pflags ACCC  
                 __end_of_TMR3_CallBack AD5C               __end_of_ADCC_ThresholdISR 9EBE  
                    __size_of_calc_bsoc 069E                  __end_of_ringBufS_flush 9A4E  
                        __pcstackCOMRAM 0038                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 A724  
                          __pidataBANK1 905C                            __pidataBANK2 93D2  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf 95F4  
                             ?_TMR3_ISR 0038                               ?_TMR5_ISR 0038  
                             ?_TMR6_ISR 0038                          ivt0x8_undefint 00AC  
                         __end_of_fputc 8A12                           __end_of_fputs 992A  
                         __end_of_srand A7FA                   __end_of_TMR5_CallBack AD38  
                         __end_of_putch AECE                 __end_of_PWM8_Initialize AF46  
               __end_of_TMR6_Initialize A9FE                       _adc_int_t_handler 9D00  
                __end_of_PMD_Initialize AF70                              __end_of_bp FD21  
                            ??_ADCC_ISR 0038                   __end_of_TMR6_CallBack ADA4  
           __size_of_EXT_INT_Initialize 0034                  __size_of_calc_ror_data 0174  
                         _DMA1_DMAA_ISR B010                   TMR3_ISR@CountCallBack 00BC  
                        _clear_adc_scan B04E                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00B1  
             __end_of_SYSTEM_Initialize A348                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer A674  
                            __pbssBANK0 0060                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 700E  
               __end_of_conv_raw_result 4E88                      __size_of_esr_check 01E6  
                 _INT0_InterruptHandler 00B7                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone AA9E  
                      _DMA1_DMADCNT_ISR B004                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma A862  
                 __end_of_wait_lcd_done AE98        __end_of_TMR3_SetInterruptHandler AB8E  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler AB3E  
                            ??_TMR3_ISR 03E4                 __end_of_ADCC_Initialize 9E52  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 9D7E  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler AC06  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler ABDE  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR AE98  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan B054                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR AFE0                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               u1164_20 41FC                                 _U2ERRIE 003DE2  
                               u1166_20 42A4                                 _U2ERRIR 003DE1  
                               u1168_28 AD48                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4462                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch A950                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer A634                 __size_of_switch_handler 013C  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one AFA2  
            __end_of_set_load_relay_two AF92       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 7CDC  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim AEEA  
                               __Lparam 0000                __end_of_UART1_Initialize A462  
                     __end_of_hid_input 9B70                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 66BA                                 ___fladd 3608  
                               ___aomod 6BAE                                 ___fldiv 4462  
                               ___awdiv 83F6                                 ___flneg A348  
                               ___awmod 8A12                                 ___flmul 2DDE  
                               ___flsub A3D6                                 ___fltol 7E50  
                               ___lodiv 7B5C                                 ___lomod 8544  
             __end_of_UART1_Receive_ISR AEB4                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 923A  
                               __pcinit 8E58                __end_of_mode_lamp_bright AFCE  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand AFB2                                 __ramtop 2000  
                               __ptext0 21F0                                 __ptext1 ACA8  
                               __ptext2 ADC6                                 __ptext3 A7C6  
                               __ptext4 A862                                 __ptext5 9150  
                               __ptext6 A9FE                                 __ptext7 AA26  
                               __ptext8 ADE6                                 __ptext9 AA4E  
                     __end_of_esr_check 780A                       _UART2_Receive_ISR AE5E  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                               us600999 6924                                 us611999 6DDC  
                 _OSCILLATOR_Initialize AF46                                 us701999 8674  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 8132                                 _isalpha A4EE  
                               _isdigit A8F2                                 _ivln2_h FD21  
                             _T3CONbits 003FA6                                 us696999 7CC6  
                               _mode_sw 002E                       __end_of_lp_filter 79C6  
                               _islower A892                                 _isspace A20C  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize A0AA                                 _isupper A8C2  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 8D4E  
                               _tolower 9C7C                   __size_of_display_help 0008  
                               _utctime 0090                   __size_of_display_info 0008  
                               _strncmp 6DEE                                 _toupper 9BF8  
                  end_of_initialization 8F54               __size_of_convert_adc_data 00B8  
                    _check_enter_button A5B4                               i1u1177_20 8354  
   __end_of_UART2_SetRxInterruptHandler AAEE             _UART2_SetRxInterruptHandler AAC6  
                     __end_of_set_vterm AE22                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd B060  
             __end_of_UART2_Receive_ISR AE7C                          wdtdelay@dcount 0094  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003E  
                 _INT1_InterruptHandler 00B4                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc B066                _TMR3_SetInterruptHandler AB66  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler AB16  
                          _display_help B03E                   _TMR5_InterruptHandler 009F  
                          _display_info B036    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags ACF0                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler AC2E             _ADCC_SetADIInterruptHandler AC06  
                            _update_lcd 8C3E                         _calc_model_data 56C2  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc ACA8                         _DMA1_Initialize 9D7E  
                            _start_bsoc ADA4                         _SPI1_Initialize AF1A  
                 __end_of_get_vterm_ptr A950                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs A790  
          __end_of_INTERRUPT_Initialize 9F24                              _vterm_dump 87C0  
                        __end_of___flge 8294                          __end_of___fleq 93D2  
  __end_of_INT0_DefaultInterruptHandler B074   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler B072              __size_of_UART1_Receive_ISR 001C  
                       _DMA2_Initialize A104                           __pidataBIGRAM 7424  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 5DD0  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0074  
                        __end_of_memset 63FC                          __end_of_printf 9FEA  
              __end_of_DMA1_DMADCNT_ISR B00E             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack AD80                          __end_of_strcpy 930E  
                        __end_of_strlen 9892                     start_initialization 8E58  
  __end_of_TMR5_DefaultInterruptHandler A862   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler A82E         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs A3D6                   __end_of_INT1_CallBack AD14  
             __size_of_set_display_info 001E                             __end_of_pad 8C3E  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd AA4E  
                        _switch_handler 8684           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 006C  
                 __end_of___fpclassifyf 7B5C                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR AFEE                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR B01C                     __end_of_hid_display 905C  
            __end_of_send_port_data_dma A2B0                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone AA76                           _ringBufS_init AA4E  
                           __pdataBANK0 00C6                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize A82E  
               __end_of_calc_model_data 5A64                     __end_of_help_button A724  
       __end_of_eaDogM_WriteStringAtPos A7C6                     __end_of_BVSOC_TABLE FC89  
                  calc_model_data@bcror 0088                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize 9DE8                    calc_model_data@bvror 008C  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler ABDE  
                         __pcstackBANK3 03E4                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 87C0  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize AF30  
              _UART1_RxInterruptHandler 00AB                _UART2_TxInterruptHandler 00AE  
                             __end_of_T FD19                        _convert_adc_data 948E  
                             _calc_bsoc 3DC4               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9150                  __end_of_DMA1_DMAOR_ISR B026  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A2  
                    calc_ror_data@bcror 0080                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A15E                      calc_ror_data@bvror 0084  
                _PIN_MANAGER_Initialize 9A4E                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B05A                           __pmediumconst FBB8  
                             __ptext100 B060                               __ptext101 ADA4  
                             __ptext110 A41C                               __ptext102 780A  
                             __ptext111 AAEE                               __ptext103 A3D6  
                             __ptext120 AF30                               __ptext112 A9D4  
                             __ptext104 3608                               __ptext121 AF5C  
                             __ptext113 AB16                               __ptext105 2DDE  
                             __ptext130 9D7E                               __ptext122 9A4E  
                             __ptext114 A462                               __ptext106 A2FE  
                             __ptext131 AFEE                               __ptext123 AF46  
                             __ptext115 AB3E                               __ptext107 A04C  
                             __ptext140 A5F4                               __ptext132 9DE8  
                             __ptext124 9EBE                               __ptext116 A4A8  
                             __ptext108 AA9E                               __ptext141 AD14  
                             __ptext133 ABDE                               __ptext125 B046  
                             __ptext117 AB66                               __ptext109 AAC6  
                             __ptext150 AFD0                               __ptext142 A82E  
                             __ptext134 AC06                               __ptext126 A7FA  
                             __ptext118 AF02                               __ptext151 AD5C  
                             __ptext143 8294                               __ptext135 A674  
                             __ptext127 AB8E                               __ptext119 AF1A  
                             __ptext160 AE98                               __ptext152 B072  
                             __ptext144 A634                               __ptext136 ACF0  
                             __ptext128 ABB6                               __ptext161 AC58  
                             __ptext153 B068                               __ptext145 AD38  
                             __ptext137 B06E                               __ptext129 A104  
                             __ptext170 B010                               __ptext162 A9A8  
                             __ptext154 A97C                               __ptext146 B070  
                             __ptext138 8684                               __ptext171 B01C  
                             __ptext163 AC80                               __ptext155 9D00  
                             __ptext147 3DC4                               __ptext139 A160  
                             __ptext172 0000                               __ptext164 AE5E  
                             __ptext156 B074                               __ptext148 A25E  
                             __ptext165 AED0                               __ptext157 B076  
                             __ptext149 AFF8                               __ptext166 AD80  
                             __ptext158 9E54                               __ptext167 A2B0  
                             __ptext159 AC30                               __ptext168 AFE0  
                             __ptext169 B004                               _hid_input 9AE0  
                    __end_of_StartTimer A5B4                      _set_load_relay_one AF92  
                    _set_load_relay_two AF82                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR A97C  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 0078  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 7624                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 7FC2  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 780A                             _hid_display 8F5A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 9EBE                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0038  
                              _INT0_ISR AFD0                                _INT1_ISR A674  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 02E5  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack AD38  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                                i2u981_48 AC44  
                              i2u983_48 AC6C                                i2u985_48 AC94  
                              i2u977_48 A994                                i2u979_48 9E8A  
                              i2u979_49 9E9E                               _set_vterm AE04  
                   __size_of_update_lcd 0110                             _help_button A6EC  
                              _TMR3_ISR 8294                             _BVSOC_TABLE FBB9  
                              _TMR5_ISR A160                                _TMR6_ISR AED0  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack AD14  
                            _ADCON0bits 003EF8                      __end_of_check_help 7220  
                             _start_lcd B05A                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack AD80  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B060                        _set_display_info AE22  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 8E6C  
                             copy_data1 8E92                               copy_data2 8EB4  
                             copy_data3 8ED6                _INT0_SetInterruptHandler ABB6  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler AAC6  
           _UART2_SetTxInterruptHandler AA9E                            _uart1RxCount 0035  
                          _uart2RxCount 002F                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done AE7C  
                          _send_lcd_cmd AA26                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B076                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch A97C                   __end_of_DMA1_DMAA_ISR B01A  
                    ___fpclassifyf@F463 007C    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 7220  
                     ?_DMA1_DMADCNT_ISR 0038             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand AFC0  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 003E  
                              __ptext10 7FC2                                __ptext11 992A  
                              __ptext20 B04E                                __ptext12 8F5A  
                              __ptext21 B02E                                __ptext13 9AE0  
                              __ptext30 A922                                __ptext22 AF82  
                              __ptext14 A950                                __ptext31 A75A  
                              __ptext23 AF92                                __ptext15 7624  
                              __ptext40 99BC                                __ptext32 8C3E  
                              __ptext24 AFB2                                __ptext16 A6B2  
                              __ptext41 6110                                __ptext33 A790  
                              __ptext25 948E                                __ptext17 9F24  
                              __ptext50 8544                                __ptext42 9F88  
                              __ptext34 A1BA                                __ptext26 ACCC  
                              __ptext18 AF70                                __ptext51 7B5C  
                              __ptext43 95F4                                __ptext35 AE7C  
                              __ptext27 700E                                __ptext19 B026  
                              __ptext60 7E50                                __ptext52 6DEE  
                              __ptext44 1244                                __ptext36 A0AA  
                              __ptext28 87C0                                __ptext61 A348  
                              __ptext53 63FC                                __ptext45 5308  
                              __ptext37 974A                                __ptext29 8D4E  
                              __ptext70 8B2A                                __ptext62 930E  
                              __ptext54 0000                                __ptext46 9BF8  
                              __ptext38 B054                                __ptext71 97F0  
                              __ptext63 8A12                                __ptext55 9C7C  
                              __ptext47 A892                                __ptext39 B05A  
                              __ptext80 AFA2                                __ptext72 9892  
                              __ptext64 83F6                                __ptext56 A8C2  
                              __ptext48 A4EE                                __ptext81 AE22  
                              __ptext73 88EE                                __ptext65 4E88  
                              __ptext57 923A                                __ptext49 5DD0  
                              __ptext90 A5B4                                __ptext82 AEEA  
                              __ptext74 AEB4                                __ptext66 A390  
                              __ptext58 5A64                                __ptext91 7CDC  
                              __ptext83 AFC0                                __ptext75 96A0  
                              __ptext67 6BAE                                __ptext59 79C6  
                              __ptext92 9546                                __ptext84 A532  
                              __ptext76 693A                                __ptext68 66BA  
                              __ptext93 49DC                                __ptext85 A6EC  
                              __ptext77 A20C                                __ptext69 9B70  
                              __ptext94 9FEA                                __ptext86 AA76  
                              __ptext78 A8F2                                __ptext95 AE40  
                              __ptext87 A574                                __ptext79 AE04  
                              __ptext96 7220                                __ptext88 B036  
                              __ptext97 4462                                __ptext89 B03E  
                              __ptext98 8132                                __ptext99 56C2  
                      __size_of_isupper 0030                                us1100999 5E36  
                              us1019999 4EA2                                us1109999 5388  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1088999 640E                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 96A0  
                  __end_of_Volts_to_SOC 99BC                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 0BEE  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0038  
                 __end_of_init_port_dma A892                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00A8  
                             stoa@F1166 00EE                      ??_DMA1_DMASCNT_ISR 003E  
          __end_of_ADCC_StartConversion AF82                                _spi_link 0060  
                              _wdtdelay A0AA              __end_of_UART2_Transmit_ISR A9D4  
                              _vfprintf 95F4                __end_of_convert_adc_data 9546  
            __end_of_PWM8_LoadDutyValue A574    __end_of_TMR3_DefaultInterruptHandler B072  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler B070  
  __end_of_INT1_DefaultInterruptHandler B070   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler B06E                      _send_port_data_dma A25E  
                         ??_Default_ISR 0038                             _uart1RxHead 0037  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0031  
                           _uart1RxTail 0036                          _get_raw_result AE40  
                           _uart2TxHead 0034                             _uart2RxTail 0030  
                           _uart2TxTail 0033                            _wait_lcd_set B054  
                      Volts_to_SOC@slot 002D                      _EXT_INT_Initialize A7FA  
  __end_of_TMR6_DefaultInterruptHandler A2FE   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler A2B0    __end_of_ADCC_DefaultInterruptHandler B076  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler B074  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long A9FE          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help AFB2                   __end_of_calc_ror_data 7E50  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 97F0  
                 __end_of_mode_lamp_dim AF02                 __end_of_adc_int_handler B078  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 8D4E                  _uart2TxBufferRemaining 0032  
                    __end_of_static_soc ACCC                      __end_of_start_bsoc ADC6  
                        _FVR_Initialize B046                  __end_of_get_raw_result AE5E  
                      _send_lcd_cmd_dma A1BA                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler ABB6  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003E  
             __end_of_send_lcd_cmd_long AA26                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR B06E          __end_of_PIN_MANAGER_Initialize 9AE0  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 88EE  
               _eaDogM_WriteStringAtPos A790                           _get_vterm_ptr A922  
                        _check_adc_scan B02E               __size_of_UART2_Initialize 005E  
