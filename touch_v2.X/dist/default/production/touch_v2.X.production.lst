

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr  3 21:07:10 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=4,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=4,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=4,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=4,class=CODE,delta=1
   122                           	psect	text95,global,reloc=4,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=4,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=4,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1
   128                           	psect	text101,global,reloc=4,class=CODE,delta=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=4,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=4,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=4,class=CODE,delta=1
   136                           	psect	text109,global,reloc=4,class=CODE,delta=1
   137                           	psect	text110,global,reloc=4,class=CODE,delta=1
   138                           	psect	text111,global,reloc=4,class=CODE,delta=1
   139                           	psect	text112,global,reloc=4,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   144                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   145                           	psect	text116,global,reloc=2,class=CODE,delta=1
   146                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   147                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   148  0000                     
   149                           ; Version 2.05
   150                           ; Generated 20/12/2018 GMT
   151                           ; 
   152                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   153                           ; All rights reserved.
   154                           ; 
   155                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   156                           ; 
   157                           ; Redistribution and use in source and binary forms, with or without modification, are
   158                           ; permitted provided that the following conditions are met:
   159                           ; 
   160                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   161                           ;        conditions and the following disclaimer.
   162                           ; 
   163                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   164                           ;        of conditions and the following disclaimer in the documentation and/or other
   165                           ;        materials provided with the distribution.
   166                           ; 
   167                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   168                           ;        software without specific prior written permission.
   169                           ; 
   170                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   171                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   172                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   173                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   174                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   175                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   176                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   177                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   178                           ; 
   179                           ; 
   180                           ; Code-generator required, PIC18F57K42 Definitions
   181                           ; 
   182                           ; SFR Addresses
   183  0000                     
   184 ;;_mode	offset	0
   185 ;;_rxData	offset	0
   186 ;;_t_link	offset=-1 (param)
   187 ;;_stream	offset=-6 (param)
   188 ;;_function	offset=-7 (param)
   189 ;;_s	offset=-2 (param)
   190 ;;_f	offset	0
   191 ;;_ap	offset	5
   192 ;;_s	offset=-2 (param)
   193 ;;_fmt	offset=-3 (param)
   194 ;;_rxData	offset	0
   195 ;;_r_link	offset=-1 (param)
   196 ;;_rxData	offset	0
   197 ;;_m_link	offset=-1 (param)
   198 ;;_k	offset	0
   199 ;;_checksum	offset	2
   200 ;;_i	offset	4
   201 ;;_byte_block	offset=-2 (param)
   202 ;;_length	offset=-3 (param)
   203 ;;_fake	offset=-4 (param)
   204 ;;_s_uart	offset=-5 (param)
   205 ;;_i	offset	0
   206 ;;_sum	offset	2
   207 ;;_byte_block	offset=-2 (param)
   208 ;;_byte_count	offset=-4 (param)
   209 ;;_product	offset	0
   210 ;;_multiplier	offset=-8 (param)
   211 ;;_multiplicand	offset=-16 (param)
   212 ;;_bufData	offset=-1 (param)
   213 ;;_txData	offset=-1 (param)
   214 ;;_bufData	offset=-1 (param)
   215 ;;_txData	offset=-1 (param)
   216 ;;_stream	offset=-1 (param)
   217 ;;_function	offset=-2 (param)
   218 ;;_byte_block	offset=-1 (param)
   219 ;;_clear	offset=-2 (param)
   220 ;;_numMilliseconds	offset=-2 (param)
   221 ;;_timer	offset=-1 (param)
   222 ;;_timer	offset=-1 (param)
   223 ;;_count	offset=-3 (param)
   224 ;;_readValue	offset	0
   225 ;;_readValue	offset	0
   226 ;;_cmd	offset=-1 (param)
   227 ;;_cmd	offset=-1 (param)
   228 ;;_data	offset=-1 (param)
   229 ;;__this	offset=-2 (param)
   230 ;;_r	offset=-1 (param)
   231 ;;_c	offset=-2 (param)
   232 ;;_strPtr	offset=-3 (param)
   233 ;;_strPtr	offset=-1 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_strPtr	offset=-1 (param)
   236 ;;_delay	offset=-4 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_clearBuffer	offset=-3 (param)
   239 ;;_s	offset	0
   240 ;;_k	offset	2
   241 ;;_dest	offset=-2 (param)
   242 ;;_c	offset=-4 (param)
   243 ;;_n	offset=-6 (param)
   244 ;;_ap	offset	0
   245 ;;_fmt	offset=-2 (param)
   246 ;;_cfmt	offset	0
   247 ;;_fp	offset=-2 (param)
   248 ;;_fmt	offset=-3 (param)
   249 ;;_ap	offset=-5 (param)
   250 ;;_ll	offset	0
   251 ;;_cp	offset	8
   252 ;;_c	offset	10
   253 ;;_fp	offset=-2 (param)
   254 ;;_fmt	offset=-4 (param)
   255 ;;_ap	offset=-6 (param)
   256 ;;_r	offset	0
   257 ;;_l	offset	1
   258 ;;__l	offset=-1 (param)
   259 ;;__r	offset=-2 (param)
   260 ;;_n	offset=-4 (param)
   261 ;;_nuls	offset	0
   262 ;;_l	offset	7
   263 ;;_p	offset	9
   264 ;;_cp	offset	11
   265 ;;_w	offset	13
   266 ;;_i	offset	15
   267 ;;_fp	offset=-2 (param)
   268 ;;_s	offset=-4 (param)
   269 ;;_dtoa$4035	offset	0
   270 ;;_n	offset	2
   271 ;;_i	offset	10
   272 ;;_s	offset	12
   273 ;;_w	offset	14
   274 ;;_p	offset	16
   275 ;;_fp	offset=-2 (param)
   276 ;;_d	offset=-10 (param)
   277 ;;_a	offset=-2 (param)
   278 ;;_sign	offset	0
   279 ;;_counter	offset	1
   280 ;;_dividend	offset=-8 (param)
   281 ;;_divisor	offset=-16 (param)
   282 ;;_quotient	offset	0
   283 ;;_sign	offset	8
   284 ;;_counter	offset	9
   285 ;;_dividend	offset=-8 (param)
   286 ;;_divisor	offset=-16 (param)
   287 ;;_w	offset	0
   288 ;;_fp	offset=-2 (param)
   289 ;;_c	offset=-3 (param)
   290 ;;_w	offset	0
   291 ;;_i	offset	2
   292 ;;_fp	offset=-2 (param)
   293 ;;_buf	offset=-4 (param)
   294 ;;_p	offset=-6 (param)
   295 ;;_a	offset	0
   296 ;;_s	offset=-2 (param)
   297 ;;_i	offset	0
   298 ;;_c	offset	2
   299 ;;_s	offset=-2 (param)
   300 ;;_fp	offset=-4 (param)
   301 ;;_c	offset=-2 (param)
   302 ;;_fp	offset=-4 (param)
   303 ;;_c	offset=-1 (param)
   304 ;;__this	offset=-2 (param)
   305 ;;_c	offset=-3 (param)
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_InterruptHandler	offset=-3 (param)
   310 ;;_InterruptHandler	offset=-3 (param)
   311 ;;_InterruptHandler	offset=-3 (param)
   312 ;;_state	offset	0
   313 ;;_InterruptHandler	offset=-3 (param)
   314 ;;_InterruptHandler	offset=-3 (param)
   315 ;;_InterruptHandler	offset=-3 (param)
   316 ;;_InterruptHandler	offset=-3 (param)
   317 ;;_i	offset	0
   318 ;;_timerVal	offset=-2 (param)
   319                           
   320                           	psect	idataCOMRAM
   321  006AA6                     __pidataCOMRAM:
   322                           	opt callstack 0
   323                           
   324                           ;initializer for r_protocol@retry
   325  006AA6  03                 	db	3
   326                           
   327                           	psect	idataBIGRAM
   328  005314                     __pidataBIGRAM:
   329                           	opt callstack 0
   330                           
   331                           ;initializer for _H254
   332  005314  0000               	dw	0
   333  005316  00                 	db	0
   334  005317  00                 	db	0
   335  005318  00                 	db	0
   336  005319  00                 	db	0
   337  00531A  00                 	db	0
   338  00531B  00                 	db	0
   339  00531C  00                 	db	0
   340  00531D  00                 	db	0
   341  00531E  00                 	db	0
   342  00531F  00                 	db	0
   343  005320  00                 	db	0
   344  005321  00                 	db	0
   345  005322  00                 	db	0
   346  005323  00                 	db	0
   347  005324  00                 	db	0
   348  005325  00                 	db	0
   349  005326  00                 	db	0
   350  005327  00                 	db	0
   351  005328  00                 	db	0
   352  005329  00                 	db	0
   353  00532A  00                 	db	0
   354  00532B  00                 	db	0
   355  00532C  00                 	db	0
   356  00532D  00                 	db	0
   357  00532E  00                 	db	0
   358  00532F  00                 	db	0
   359  005330  00                 	db	0
   360  005331  00                 	db	0
   361  005332  00                 	db	0
   362  005333  00                 	db	0
   363  005334  00                 	db	0
   364  005335  00                 	db	0
   365  005336  00                 	db	0
   366  005337  00                 	db	0
   367  005338  00                 	db	0
   368  005339  00                 	db	0
   369  00533A  00                 	db	0
   370  00533B  00                 	db	0
   371  00533C  00                 	db	0
   372  00533D  00                 	db	0
   373  00533E  00                 	db	0
   374  00533F  00                 	db	0
   375  005340  00                 	db	0
   376  005341  00                 	db	0
   377  005342  00                 	db	0
   378  005343  00                 	db	0
   379  005344  00                 	db	0
   380  005345  00                 	db	0
   381  005346  00                 	db	0
   382  005347  00                 	db	0
   383  005348  00                 	db	0
   384  005349  00                 	db	0
   385  00534A  00                 	db	0
   386  00534B  00                 	db	0
   387  00534C  00                 	db	0
   388  00534D  00                 	db	0
   389  00534E  00                 	db	0
   390  00534F  00                 	db	0
   391  005350  00                 	db	0
   392  005351  00                 	db	0
   393  005352  00                 	db	0
   394  005353  00                 	db	0
   395  005354  00                 	db	0
   396  005355  00                 	db	0
   397  005356  00                 	db	0
   398  005357  00                 	db	0
   399  005358  00                 	db	0
   400  005359  00                 	db	0
   401  00535A  00                 	db	0
   402  00535B  00                 	db	0
   403  00535C  00                 	db	0
   404  00535D  00                 	db	0
   405  00535E  00                 	db	0
   406  00535F  00                 	db	0
   407  005360  00                 	db	0
   408  005361  00                 	db	0
   409  005362  00                 	db	0
   410  005363  00                 	db	0
   411  005364  00                 	db	0
   412  005365  00                 	db	0
   413  005366  00                 	db	0
   414  005367  00                 	db	0
   415  005368  00                 	db	0
   416  005369  00                 	db	0
   417  00536A  00                 	db	0
   418  00536B  00                 	db	0
   419  00536C  00                 	db	0
   420  00536D  00                 	db	0
   421  00536E  00                 	db	0
   422  00536F  00                 	db	0
   423  005370  00                 	db	0
   424  005371  00                 	db	0
   425  005372  00                 	db	0
   426  005373  00                 	db	0
   427  005374  00                 	db	0
   428  005375  00                 	db	0
   429  005376  00                 	db	0
   430  005377  00                 	db	0
   431  005378  00                 	db	0
   432  005379  00                 	db	0
   433  00537A  00                 	db	0
   434  00537B  00                 	db	0
   435  00537C  00                 	db	0
   436  00537D  00                 	db	0
   437  00537E  00                 	db	0
   438  00537F  00                 	db	0
   439  005380  00                 	db	0
   440  005381  00                 	db	0
   441  005382  00                 	db	0
   442  005383  00                 	db	0
   443  005384  00                 	db	0
   444  005385  00                 	db	0
   445  005386  00                 	db	0
   446  005387  00                 	db	0
   447  005388  00                 	db	0
   448  005389  00                 	db	0
   449  00538A  00                 	db	0
   450  00538B  00                 	db	0
   451  00538C  00                 	db	0
   452  00538D  00                 	db	0
   453  00538E  00                 	db	0
   454  00538F  00                 	db	0
   455  005390  00                 	db	0
   456  005391  00                 	db	0
   457  005392  00                 	db	0
   458  005393  00                 	db	0
   459  005394  00                 	db	0
   460  005395  00                 	db	0
   461  005396  00                 	db	0
   462  005397  00                 	db	0
   463  005398  00                 	db	0
   464  005399  00                 	db	0
   465  00539A  00                 	db	0
   466  00539B  00                 	db	0
   467  00539C  00                 	db	0
   468  00539D  00                 	db	0
   469  00539E  00                 	db	0
   470  00539F  00                 	db	0
   471  0053A0  00                 	db	0
   472  0053A1  00                 	db	0
   473  0053A2  00                 	db	0
   474  0053A3  00                 	db	0
   475  0053A4  00                 	db	0
   476  0053A5  00                 	db	0
   477  0053A6  00                 	db	0
   478  0053A7  00                 	db	0
   479  0053A8  00                 	db	0
   480  0053A9  00                 	db	0
   481  0053AA  00                 	db	0
   482  0053AB  00                 	db	0
   483  0053AC  00                 	db	0
   484  0053AD  00                 	db	0
   485  0053AE  00                 	db	0
   486  0053AF  00                 	db	0
   487  0053B0  00                 	db	0
   488  0053B1  00                 	db	0
   489  0053B2  00                 	db	0
   490  0053B3  00                 	db	0
   491  0053B4  00                 	db	0
   492  0053B5  00                 	db	0
   493  0053B6  00                 	db	0
   494  0053B7  00                 	db	0
   495  0053B8  00                 	db	0
   496  0053B9  00                 	db	0
   497  0053BA  00                 	db	0
   498  0053BB  00                 	db	0
   499  0053BC  00                 	db	0
   500  0053BD  00                 	db	0
   501  0053BE  00                 	db	0
   502  0053BF  00                 	db	0
   503  0053C0  00                 	db	0
   504  0053C1  00                 	db	0
   505  0053C2  00                 	db	0
   506  0053C3  00                 	db	0
   507  0053C4  00                 	db	0
   508  0053C5  00                 	db	0
   509  0053C6  00                 	db	0
   510  0053C7  00                 	db	0
   511  0053C8  00                 	db	0
   512  0053C9  00                 	db	0
   513  0053CA  00                 	db	0
   514  0053CB  00                 	db	0
   515  0053CC  00                 	db	0
   516  0053CD  00                 	db	0
   517  0053CE  00                 	db	0
   518  0053CF  00                 	db	0
   519  0053D0  00                 	db	0
   520  0053D1  00                 	db	0
   521  0053D2  00                 	db	0
   522  0053D3  00                 	db	0
   523  0053D4  00                 	db	0
   524  0053D5  00                 	db	0
   525  0053D6  00                 	db	0
   526  0053D7  00                 	db	0
   527  0053D8  00                 	db	0
   528  0053D9  00                 	db	0
   529  0053DA  00                 	db	0
   530  0053DB  00                 	db	0
   531  0053DC  00                 	db	0
   532  0053DD  00                 	db	0
   533  0053DE  00                 	db	0
   534  0053DF  00                 	db	0
   535  0053E0  00                 	db	0
   536  0053E1  00                 	db	0
   537  0053E2  00                 	db	0
   538  0053E3  00                 	db	0
   539  0053E4  00                 	db	0
   540  0053E5  00                 	db	0
   541  0053E6  00                 	db	0
   542  0053E7  00                 	db	0
   543  0053E8  00                 	db	0
   544  0053E9  00                 	db	0
   545  0053EA  00                 	db	0
   546  0053EB  00                 	db	0
   547  0053EC  00                 	db	0
   548  0053ED  00                 	db	0
   549  0053EE  00                 	db	0
   550  0053EF  00                 	db	0
   551  0053F0  00                 	db	0
   552  0053F1  00                 	db	0
   553  0053F2  00                 	db	0
   554  0053F3  00                 	db	0
   555  0053F4  00                 	db	0
   556  0053F5  00                 	db	0
   557  0053F6  00                 	db	0
   558  0053F7  00                 	db	0
   559  0053F8  00                 	db	0
   560  0053F9  00                 	db	0
   561  0053FA  00                 	db	0
   562  0053FB  00                 	db	0
   563  0053FC  00                 	db	0
   564  0053FD  00                 	db	0
   565  0053FE  00                 	db	0
   566  0053FF  00                 	db	0
   567  005400  00                 	db	0
   568  005401  00                 	db	0
   569  005402  00                 	db	0
   570  005403  00                 	db	0
   571  005404  00                 	db	0
   572  005405  00                 	db	0
   573  005406  00                 	db	0
   574  005407  00                 	db	0
   575  005408  00                 	db	0
   576  005409  00                 	db	0
   577  00540A  0001               	dw	1
   578  00540C  0000               	dw	0
   579  00540E  01                 	db	1
   580  00540F  80                 	db	128
   581  005410  03                 	db	3
   582  005411  8A                 	db	138
   583  005412  00                 	db	0
   584  005413  00                 	db	0
   585  005414  FE                 	db	254
   586                           
   587                           	psect	idataBANK0
   588  005D78                     __pidataBANK0:
   589                           	opt callstack 0
   590                           
   591                           ;initializer for _V
   592  005D78  00                 	db	0
   593  005D79  00                 	db	0
   594  005D7A  00                 	db	0
   595  005D7B  00                 	db	0
   596  005D7C  00                 	db	0
   597  005D7D  00                 	db	0
   598  005D7E  00                 	db	0
   599  005D7F  00                 	db	0
   600  005D80  00                 	db	0
   601  005D81  00                 	db	0
   602  005D82  00                 	db	0
   603  005D83  00                 	db	0
   604  005D84  00                 	db	0
   605  005D85  00                 	db	0
   606  005D86  00                 	db	0
   607  005D87  00                 	db	0
   608  005D88  00                 	db	0
   609  005D89  00                 	db	0
   610  005D8A  00                 	db	0
   611  005D8B  00                 	db	0
   612  005D8C  00                 	db	0
   613  005D8D  00                 	db	0
   614  005D8E  00                 	db	0
   615  005D8F  00                 	db	0
   616  005D90  00                 	db	0
   617  005D91  00                 	db	0
   618  005D92  00                 	db	0
   619  005D93  00                 	db	0
   620  005D94  00                 	db	0
   621  005D95  00                 	db	0
   622  005D96  00                 	db	0
   623  005D97  00                 	db	0
   624  005D98  00                 	db	0
   625  005D99  00                 	db	0
   626  005D9A  00                 	db	0
   627  005D9B  00                 	db	0
   628  005D9C  00                 	db	0
   629  005D9D  00                 	db	0
   630  005D9E  00                 	db	0
   631  005D9F  00                 	db	0
   632  005DA0  00                 	db	0
   633  005DA1  00                 	db	0
   634  005DA2  00                 	db	0
   635  005DA3  00                 	db	0
   636  005DA4  00                 	db	0
   637  005DA5  00                 	db	0
   638  005DA6  00                 	db	0
   639  005DA7  00                 	db	0
   640  005DA8  00                 	db	0
   641  005DA9  00                 	db	0
   642  005DAA  00                 	db	0
   643  005DAB  00                 	db	0
   644  005DAC  00                 	db	0
   645  005DAD  00                 	db	0
   646  005DAE  00                 	db	0
   647  005DAF  00                 	db	0
   648  005DB0  00                 	db	0
   649  005DB1  00                 	db	0
   650  005DB2  00                 	db	0
   651  005DB3  00                 	db	0
   652  005DB4  00                 	db	0
   653  005DB5  00                 	db	0
   654  005DB6  00                 	db	0
   655  005DB7  00                 	db	0
   656  005DB8  00                 	db	0
   657  005DB9  00                 	db	0
   658  005DBA  00                 	db	0
   659  005DBB  00                 	db	0
   660  005DBC  00                 	db	0
   661  005DBD  00                 	db	0
   662  005DBE  0000               	dw	0
   663  005DC0  0000               	dw	0
   664  005DC2  0000               	dw	0
   665  005DC4  0000               	dw	0
   666  005DC6  00                 	db	0
   667  005DC7  00                 	db	0
   668  005DC8  00                 	db	0
   669  005DC9  00                 	db	0
   670  005DCA  00                 	db	0
   671  005DCB  0000               	dw	0
   672  005DCD  0000               	dw	0
   673  005DCF  0000               	dw	0
   674  005DD1  0000               	dw	0
   675  005DD3  00                 	db	0
   676  005DD4  00                 	db	0
   677  005DD5  00                 	db	0
   678  005DD6  00                 	db	0
   679  005DD7  00                 	db	0
   680  005DD8  01                 	db	1
   681  005DD9  2D                 	db	45
   682                           
   683                           	psect	idataBANK1
   684  0056AC                     __pidataBANK1:
   685                           	opt callstack 0
   686                           
   687                           ;initializer for stoa@F1144
   688  0056AC  28                 	db	40
   689  0056AD  6E                 	db	110
   690  0056AE  75                 	db	117
   691  0056AF  6C                 	db	108
   692  0056B0  6C                 	db	108
   693  0056B1  29                 	db	41
   694  0056B2  00                 	db	0
   695                           
   696                           ;initializer for _H10
   697  0056B3  0000               	dw	0
   698  0056B5  0001               	dw	1
   699  0056B7  0000               	dw	0
   700  0056B9  01                 	db	1
   701  0056BA  80                 	db	128
   702  0056BB  01                 	db	1
   703  0056BC  81                 	db	129
   704  0056BD  00                 	db	0
   705  0056BE  00                 	db	0
   706  0056BF  0A                 	db	10
   707  0056C0  0000               	dw	0
   708  0056C2  00                 	db	0
   709  0056C3  00                 	db	0
   710  0056C4  00                 	db	0
   711  0056C5  00                 	db	0
   712  0056C6  00                 	db	0
   713  0056C7  00                 	db	0
   714  0056C8  00                 	db	0
   715  0056C9  00                 	db	0
   716  0056CA  00                 	db	0
   717  0056CB  00                 	db	0
   718  0056CC  0A                 	db	10
   719  0056CD  0000               	dw	0
   720  0056CF  0001               	dw	1
   721  0056D1  0000               	dw	0
   722  0056D3  01                 	db	1
   723  0056D4  80                 	db	128
   724  0056D5  00                 	db	0
   725  0056D6  01                 	db	1
   726  0056D7  00                 	db	0
   727  0056D8  00                 	db	0
   728  0056D9  0A                 	db	10
   729  0056DA  0000               	dw	0
   730  0056DC  0001               	dw	1
   731  0056DE  0000               	dw	0
   732  0056E0  01                 	db	1
   733  0056E1  80                 	db	128
   734  0056E2  01                 	db	1
   735  0056E3  81                 	db	129
   736  0056E4  00                 	db	0
   737  0056E5  80                 	db	128
   738  0056E6  0A                 	db	10
   739  0056E7  0000               	dw	0
   740  0056E9  0001               	dw	1
   741  0056EB  0000               	dw	0
   742  0056ED  01                 	db	1
   743  0056EE  80                 	db	128
   744  0056EF  11                 	db	17
   745  0056F0  82                 	db	130
   746  0056F1  00                 	db	0
   747  0056F2  00                 	db	0
   748  0056F3  0A                 	db	10
   749  0056F4  0000               	dw	0
   750  0056F6  0001               	dw	1
   751  0056F8  0000               	dw	0
   752  0056FA  01                 	db	1
   753  0056FB  80                 	db	128
   754  0056FC  0F                 	db	15
   755  0056FD  81                 	db	129
   756  0056FE  00                 	db	0
   757  0056FF  00                 	db	0
   758  005700  0A                 	db	10
   759  005701  0000               	dw	0
   760  005703  0001               	dw	1
   761  005705  0000               	dw	0
   762  005707  01                 	db	1
   763  005708  80                 	db	128
   764  005709  11                 	db	17
   765  00570A  81                 	db	129
   766  00570B  00                 	db	0
   767  00570C  00                 	db	0
   768  00570D  0A                 	db	10
   769                           
   770                           ;initializer for _H12
   771  00570E  0000               	dw	0
   772  005710  00                 	db	0
   773  005711  01                 	db	1
   774  005712  0001               	dw	1
   775  005714  0000               	dw	0
   776  005716  01                 	db	1
   777  005717  80                 	db	128
   778  005718  02                 	db	2
   779  005719  01                 	db	1
   780  00571A  00                 	db	0
   781  00571B  00                 	db	0
   782  00571C  0C                 	db	12
   783  00571D  0000               	dw	0
   784  00571F  00                 	db	0
   785  005720  01                 	db	1
   786  005721  0001               	dw	1
   787  005723  0000               	dw	0
   788  005725  01                 	db	1
   789  005726  80                 	db	128
   790  005727  0D                 	db	13
   791  005728  81                 	db	129
   792  005729  00                 	db	0
   793  00572A  00                 	db	0
   794  00572B  0C                 	db	12
   795                           
   796                           ;initializer for _H24
   797  00572C  0000               	dw	0
   798  00572E  41                 	db	65
   799  00572F  20                 	db	32
   800  005730  30                 	db	48
   801  005731  31                 	db	49
   802  005732  30                 	db	48
   803  005733  39                 	db	57
   804  005734  31                 	db	49
   805  005735  31                 	db	49
   806  005736  30                 	db	48
   807  005737  38                 	db	56
   808  005738  34                 	db	52
   809  005739  36                 	db	54
   810  00573A  30                 	db	48
   811  00573B  30                 	db	48
   812  00573C  0001               	dw	1
   813  00573E  0000               	dw	0
   814  005740  01                 	db	1
   815  005741  80                 	db	128
   816  005742  12                 	db	18
   817  005743  02                 	db	2
   818  005744  00                 	db	0
   819  005745  00                 	db	0
   820  005746  18                 	db	24
   821                           
   822                           ;initializer for _H17
   823  005747  0000               	dw	0
   824  005749  00                 	db	0
   825  00574A  01                 	db	1
   826  00574B  00                 	db	0
   827  00574C  01                 	db	1
   828  00574D  21                 	db	33
   829  00574E  02                 	db	2
   830  00574F  01                 	db	1
   831  005750  0001               	dw	1
   832  005752  0000               	dw	0
   833  005754  01                 	db	1
   834  005755  80                 	db	128
   835  005756  0E                 	db	14
   836  005757  01                 	db	1
   837  005758  00                 	db	0
   838  005759  00                 	db	0
   839  00575A  11                 	db	17
   840                           
   841                           ;initializer for _H14
   842  00575B  0000               	dw	0
   843  00575D  00                 	db	0
   844  00575E  41                 	db	65
   845  00575F  11                 	db	17
   846  005760  01                 	db	1
   847  005761  0001               	dw	1
   848  005763  0000               	dw	0
   849  005765  01                 	db	1
   850  005766  80                 	db	128
   851  005767  04                 	db	4
   852  005768  01                 	db	1
   853  005769  00                 	db	0
   854  00576A  00                 	db	0
   855  00576B  0E                 	db	14
   856                           
   857                           	psect	idataBANK2
   858  005F46                     __pidataBANK2:
   859                           	opt callstack 0
   860                           
   861                           ;initializer for _H13
   862  005F46  0000               	dw	0
   863  005F48  00                 	db	0
   864  005F49  01                 	db	1
   865  005F4A  21                 	db	33
   866  005F4B  0001               	dw	1
   867  005F4D  0000               	dw	0
   868  005F4F  01                 	db	1
   869  005F50  80                 	db	128
   870  005F51  0C                 	db	12
   871  005F52  06                 	db	6
   872  005F53  00                 	db	0
   873  005F54  00                 	db	0
   874  005F55  0D                 	db	13
   875  005F56  0000               	dw	0
   876  005F58  00                 	db	0
   877  005F59  01                 	db	1
   878  005F5A  21                 	db	33
   879  005F5B  0001               	dw	1
   880  005F5D  0000               	dw	0
   881  005F5F  01                 	db	1
   882  005F60  80                 	db	128
   883  005F61  02                 	db	2
   884  005F62  0A                 	db	10
   885  005F63  00                 	db	0
   886  005F64  00                 	db	0
   887  005F65  0D                 	db	13
   888  005F66  0000               	dw	0
   889  005F68  00                 	db	0
   890  005F69  01                 	db	1
   891  005F6A  21                 	db	33
   892  005F6B  0001               	dw	1
   893  005F6D  0000               	dw	0
   894  005F6F  01                 	db	1
   895  005F70  80                 	db	128
   896  005F71  02                 	db	2
   897  005F72  05                 	db	5
   898  005F73  00                 	db	0
   899  005F74  00                 	db	0
   900  005F75  0D                 	db	13
   901                           
   902                           ;initializer for _H27
   903  005F76  0000               	dw	0
   904  005F78  00                 	db	0
   905  005F79  00                 	db	0
   906  005F7A  00                 	db	0
   907  005F7B  00                 	db	0
   908  005F7C  00                 	db	0
   909  005F7D  00                 	db	0
   910  005F7E  00                 	db	0
   911  005F7F  00                 	db	0
   912  005F80  00                 	db	0
   913  005F81  00                 	db	0
   914  005F82  00                 	db	0
   915  005F83  00                 	db	0
   916  005F84  00                 	db	0
   917  005F85  00                 	db	0
   918  005F86  00                 	db	0
   919  005F87  00                 	db	0
   920  005F88  00                 	db	0
   921  005F89  0001               	dw	1
   922  005F8B  0000               	dw	0
   923  005F8D  01                 	db	1
   924  005F8E  80                 	db	128
   925  005F8F  0D                 	db	13
   926  005F90  81                 	db	129
   927  005F91  00                 	db	0
   928  005F92  80                 	db	128
   929  005F93  1B                 	db	27
   930                           
   931                           	psect	idataBANK3
   932  00630E                     __pidataBANK3:
   933                           	opt callstack 0
   934                           
   935                           ;initializer for _H53
   936  00630E  0000               	dw	0
   937  006310  00                 	db	0
   938  006311  00                 	db	0
   939  006312  00                 	db	0
   940  006313  00                 	db	0
   941  006314  00                 	db	0
   942  006315  00                 	db	0
   943  006316  00                 	db	0
   944  006317  00                 	db	0
   945  006318  00                 	db	0
   946  006319  00                 	db	0
   947  00631A  00                 	db	0
   948  00631B  00                 	db	0
   949  00631C  00                 	db	0
   950  00631D  00                 	db	0
   951  00631E  00                 	db	0
   952  00631F  00                 	db	0
   953  006320  00                 	db	0
   954  006321  00                 	db	0
   955  006322  00                 	db	0
   956  006323  00                 	db	0
   957  006324  00                 	db	0
   958  006325  00                 	db	0
   959  006326  00                 	db	0
   960  006327  00                 	db	0
   961  006328  00                 	db	0
   962  006329  00                 	db	0
   963  00632A  00                 	db	0
   964  00632B  2A                 	db	42
   965  00632C  2A                 	db	42
   966  00632D  2A                 	db	42
   967  00632E  2A                 	db	42
   968  00632F  44                 	db	68
   969  006330  45                 	db	69
   970  006331  52                 	db	82
   971  006332  46                 	db	70
   972  006333  23                 	db	35
   973  006334  01                 	db	1
   974  006335  41                 	db	65
   975  006336  00                 	db	0
   976  006337  01                 	db	1
   977  006338  21                 	db	33
   978  006339  02                 	db	2
   979  00633A  01                 	db	1
   980  00633B  0001               	dw	1
   981  00633D  0000               	dw	0
   982  00633F  01                 	db	1
   983  006340  80                 	db	128
   984  006341  03                 	db	3
   985  006342  8A                 	db	138
   986  006343  00                 	db	0
   987  006344  00                 	db	0
   988  006345  35                 	db	53
   989  0000                     _IVTADL	set	14493
   990  0000                     _IVTADH	set	14494
   991  0000                     _IVTADU	set	14495
   992  0000                     _PIE8bits	set	14744
   993  0000                     _PIR8bits	set	14760
   994  0000                     _SCANPR	set	14839
   995  0000                     _DMA2PR	set	14836
   996  0000                     _DMA1PR	set	14835
   997  0000                     _MAINPR	set	14834
   998  0000                     _ISRPR	set	14833
   999  0000                     _PIE2bits	set	14738
  1000  0000                     _PIR2bits	set	14754
  1001  0000                     _PIE9bits	set	14745
  1002  0000                     _PIR9bits	set	14761
  1003  0000                     _PIE6bits	set	14742
  1004  0000                     _PIE3bits	set	14739
  1005  0000                     _PMD7	set	14791
  1006  0000                     _PMD6	set	14790
  1007  0000                     _PMD5	set	14789
  1008  0000                     _PMD4	set	14788
  1009  0000                     _PMD3	set	14787
  1010  0000                     _PMD2	set	14786
  1011  0000                     _PMD1	set	14785
  1012  0000                     _PMD0	set	14784
  1013  0000                     _OSCTUNE	set	14814
  1014  0000                     _OSCFRQ	set	14815
  1015  0000                     _OSCEN	set	14813
  1016  0000                     _OSCCON3	set	14811
  1017  0000                     _OSCCON1	set	14809
  1018  0000                     _IPR8bits	set	14728
  1019  0000                     _IPR9bits	set	14729
  1020  0000                     _IPR7bits	set	14727
  1021  0000                     _IPR5bits	set	14725
  1022  0000                     _IPR1bits	set	14721
  1023  0000                     _IPR3bits	set	14723
  1024  0000                     _IPR6bits	set	14726
  1025  0000                     _IPR2bits	set	14722
  1026  0000                     _PIE7bits	set	14743
  1027  0000                     _PIE5bits	set	14741
  1028  0000                     _PIE1bits	set	14737
  1029  0000                     _PIR7bits	set	14759
  1030  0000                     _PIR5bits	set	14757
  1031  0000                     _PIR1bits	set	14753
  1032  0000                     _PLLR	set	118496
  1033  0000                     _SPI1SDIPPS	set	15071
  1034  0000                     _RC6PPS	set	14870
  1035  0000                     _RC5PPS	set	14869
  1036  0000                     _RA6PPS	set	14854
  1037  0000                     _RA5PPS	set	14853
  1038  0000                     _RA4PPS	set	14852
  1039  0000                     _SPI1SCKPPS	set	15070
  1040  0000                     _U1RXPPS	set	15077
  1041  0000                     _INT1PPS	set	15041
  1042  0000                     _INT2PPS	set	15042
  1043  0000                     _INT0PPS	set	15040
  1044  0000                     _RC3PPS	set	14867
  1045  0000                     _RB6PPS	set	14862
  1046  0000                     _U2RXPPS	set	15080
  1047  0000                     _SLRCONF	set	14995
  1048  0000                     _SLRCONE	set	14979
  1049  0000                     _SLRCOND	set	14963
  1050  0000                     _SLRCONC	set	14947
  1051  0000                     _SLRCONB	set	14931
  1052  0000                     _SLRCONA	set	14915
  1053  0000                     _ODCOND	set	14962
  1054  0000                     _ODCONC	set	14946
  1055  0000                     _ODCONB	set	14930
  1056  0000                     _ODCONA	set	14914
  1057  0000                     _ODCONF	set	14994
  1058  0000                     _ODCONE	set	14978
  1059  0000                     _WPUC	set	14945
  1060  0000                     _WPUA	set	14913
  1061  0000                     _WPUB	set	14929
  1062  0000                     _WPUE	set	14977
  1063  0000                     _WPUF	set	14993
  1064  0000                     _WPUD	set	14961
  1065  0000                     _ANSELA	set	14912
  1066  0000                     _ANSELF	set	14992
  1067  0000                     _ANSELE	set	14976
  1068  0000                     _ANSELB	set	14928
  1069  0000                     _ANSELC	set	14944
  1070  0000                     _ANSELD	set	14960
  1071  0000                     _DMA1SSA	set	15353
  1072  0000                     _DMA1DSZ	set	15342
  1073  0000                     _DMA1SSZ	set	15351
  1074  0000                     _DMA1DSA	set	15344
  1075  0000                     _DMA1CON0bits	set	15356
  1076  0000                     _DMA1CON1bits	set	15357
  1077  0000                     _DMA1CON0	set	15356
  1078  0000                     _DMA1AIRQ	set	15358
  1079  0000                     _DMA1SIRQ	set	15359
  1080  0000                     _DMA1CON1	set	15357
  1081  0000                     _CLC1CON	set	15476
  1082  0000                     _CLC1GLS3	set	15485
  1083  0000                     _CLC1GLS2	set	15484
  1084  0000                     _CLC1GLS1	set	15483
  1085  0000                     _CLC1GLS0	set	15482
  1086  0000                     _CLC1SEL3	set	15481
  1087  0000                     _CLC1SEL2	set	15480
  1088  0000                     _CLC1SEL1	set	15479
  1089  0000                     _CLC1SEL0	set	15478
  1090  0000                     _CLC1POL	set	15477
  1091  0000                     _CLKRCON	set	15589
  1092  0000                     _CLKRCLK	set	15590
  1093  0000                     _MD1CARL	set	15613
  1094  0000                     _MD1CARH	set	15614
  1095  0000                     _MD1SRC	set	15612
  1096  0000                     _MD1CON1bits	set	15611
  1097  0000                     _MD1CON0bits	set	15610
  1098  0000                     _SPI1INTFbits	set	15642
  1099  0000                     _SPI1RXB	set	15632
  1100  0000                     _SPI1TXB	set	15633
  1101  0000                     _SPI1TCNTL	set	15634
  1102  0000                     _SPI1CON0	set	15636
  1103  0000                     _SPI1CLK	set	15644
  1104  0000                     _SPI1BAUD	set	15641
  1105  0000                     _SPI1CON2	set	15638
  1106  0000                     _SPI1CON1	set	15637
  1107  0000                     _U2RXB	set	15824
  1108  0000                     _U2TXB	set	15826
  1109  0000                     _U2ERRIE	set	15842
  1110  0000                     _U2ERRIR	set	15841
  1111  0000                     _U2UIR	set	15840
  1112  0000                     _U2FIFO	set	15839
  1113  0000                     _U2BRGH	set	15838
  1114  0000                     _U2BRGL	set	15837
  1115  0000                     _U2CON2	set	15836
  1116  0000                     _U2CON1	set	15835
  1117  0000                     _U2CON0	set	15834
  1118  0000                     _U2P3L	set	15832
  1119  0000                     _U2P2L	set	15830
  1120  0000                     _U2P1L	set	15828
  1121  0000                     _U1RXB	set	15848
  1122  0000                     _U1TXB	set	15850
  1123  0000                     _U1ERRIE	set	15866
  1124  0000                     _U1ERRIR	set	15865
  1125  0000                     _U1UIR	set	15864
  1126  0000                     _U1FIFO	set	15863
  1127  0000                     _U1BRGH	set	15862
  1128  0000                     _U1BRGL	set	15861
  1129  0000                     _U1CON2	set	15860
  1130  0000                     _U1CON1	set	15859
  1131  0000                     _U1CON0	set	15858
  1132  0000                     _U1P3H	set	15857
  1133  0000                     _U1P3L	set	15856
  1134  0000                     _U1P2H	set	15855
  1135  0000                     _U1P2L	set	15854
  1136  0000                     _U1P1H	set	15853
  1137  0000                     _U1P1L	set	15852
  1138  0000                     _ADCON0	set	16120
  1139  0000                     _ADCLK	set	16127
  1140  0000                     _ADACT	set	16126
  1141  0000                     _ADREF	set	16125
  1142  0000                     _ADSTAT	set	16124
  1143  0000                     _ADCON3	set	16123
  1144  0000                     _ADCON2	set	16122
  1145  0000                     _ADCON1	set	16121
  1146  0000                     _ADPREH	set	16119
  1147  0000                     _ADPREL	set	16118
  1148  0000                     _ADCAP	set	16117
  1149  0000                     _ADACQH	set	16116
  1150  0000                     _ADACQL	set	16115
  1151  0000                     _ADPCH	set	16113
  1152  0000                     _ADRPT	set	16108
  1153  0000                     _ADACCU	set	16106
  1154  0000                     _ADSTPTH	set	16101
  1155  0000                     _ADSTPTL	set	16100
  1156  0000                     _ADUTHH	set	16097
  1157  0000                     _ADUTHL	set	16096
  1158  0000                     _ADLTHH	set	16095
  1159  0000                     _ADLTHL	set	16094
  1160  0000                     _NCO1CONbits	set	16190
  1161  0000                     _NCO1INCL	set	16187
  1162  0000                     _NCO1INCH	set	16188
  1163  0000                     _NCO1INCU	set	16189
  1164  0000                     _NCO1ACCL	set	16184
  1165  0000                     _NCO1ACCH	set	16185
  1166  0000                     _NCO1ACCU	set	16186
  1167  0000                     _NCO1CLK	set	16191
  1168  0000                     _NCO1CON	set	16190
  1169  0000                     _LATCbits	set	16316
  1170  0000                     _LATDbits	set	16317
  1171  0000                     _PORTBbits	set	16331
  1172  0000                     _T5CONbits	set	16282
  1173  0000                     _T5CON	set	16282
  1174  0000                     _TMR5L	set	16280
  1175  0000                     _TMR5H	set	16281
  1176  0000                     _T5CLK	set	16285
  1177  0000                     _T5GATE	set	16284
  1178  0000                     _T5GCON	set	16283
  1179  0000                     _LATEbits	set	16318
  1180  0000                     _T6CON	set	16276
  1181  0000                     _T6TMR	set	16274
  1182  0000                     _T6PR	set	16275
  1183  0000                     _T6RST	set	16279
  1184  0000                     _T6HLT	set	16277
  1185  0000                     _T6CLKCON	set	16278
  1186  0000                     _TRISD	set	16325
  1187  0000                     _TRISC	set	16324
  1188  0000                     _TRISB	set	16323
  1189  0000                     _TRISA	set	16322
  1190  0000                     _TRISF	set	16327
  1191  0000                     _TRISE	set	16326
  1192  0000                     _LATC	set	16316
  1193  0000                     _LATB	set	16315
  1194  0000                     _LATF	set	16319
  1195  0000                     _LATA	set	16314
  1196  0000                     _LATD	set	16317
  1197  0000                     _LATE	set	16318
  1198  0000                     _IVTLOCKbits	set	16340
  1199  0000                     _IVTLOCK	set	16340
  1200  0000                     _INTCON0bits	set	16338
  1201  0000                     _GIE	set	130711
  1202                           
  1203                           	psect	smallconst
  1204  002000                     __psmallconst:
  1205                           	opt callstack 0
  1206  002000  00                 	db	0
  1207  002001                     STR_11:
  1208  002001  4C                 	db	76	;'L'
  1209  002002  4F                 	db	79	;'O'
  1210  002003  47                 	db	71	;'G'
  1211  002004  3A                 	db	58	;':'
  1212  002005  20                 	db	32
  1213  002006  55                 	db	85	;'U'
  1214  002007  25                 	db	37
  1215  002008  64                 	db	100	;'d'
  1216  002009  20                 	db	32
  1217  00200A  47                 	db	71	;'G'
  1218  00200B  25                 	db	37
  1219  00200C  64                 	db	100	;'d'
  1220  00200D  20                 	db	32
  1221  00200E  25                 	db	37
  1222  00200F  64                 	db	100	;'d'
  1223  002010  20                 	db	32
  1224  002011  25                 	db	37
  1225  002012  64                 	db	100	;'d'
  1226  002013  20                 	db	32
  1227  002014  20                 	db	32
  1228  002015  20                 	db	32
  1229  002016  20                 	db	32
  1230  002017  20                 	db	32
  1231  002018  20                 	db	32
  1232  002019  23                 	db	35
  1233  00201A  00                 	db	0
  1234  00201B                     STR_15:
  1235  00201B  52                 	db	82	;'R'
  1236  00201C  25                 	db	37
  1237  00201D  64                 	db	100	;'d'
  1238  00201E  20                 	db	32
  1239  00201F  25                 	db	37
  1240  002020  64                 	db	100	;'d'
  1241  002021  2C                 	db	44
  1242  002022  20                 	db	32
  1243  002023  54                 	db	84	;'T'
  1244  002024  25                 	db	37
  1245  002025  64                 	db	100	;'d'
  1246  002026  20                 	db	32
  1247  002027  25                 	db	37
  1248  002028  64                 	db	100	;'d'
  1249  002029  20                 	db	32
  1250  00202A  43                 	db	67	;'C'
  1251  00202B  25                 	db	37
  1252  00202C  64                 	db	100	;'d'
  1253  00202D  20                 	db	32
  1254  00202E  20                 	db	32
  1255  00202F  20                 	db	32
  1256  002030  20                 	db	32
  1257  002031  20                 	db	32
  1258  002032  20                 	db	32
  1259  002033  23                 	db	35
  1260  002034  00                 	db	0
  1261  002035                     STR_5:
  1262  002035  48                 	db	72	;'H'
  1263  002036  4F                 	db	79	;'O'
  1264  002037  53                 	db	83	;'S'
  1265  002038  54                 	db	84	;'T'
  1266  002039  3A                 	db	58	;':'
  1267  00203A  20                 	db	32
  1268  00203B  25                 	db	37
  1269  00203C  6C                 	db	108	;'l'
  1270  00203D  64                 	db	100	;'d'
  1271  00203E  20                 	db	32
  1272  00203F  47                 	db	71	;'G'
  1273  002040  25                 	db	37
  1274  002041  64                 	db	100	;'d'
  1275  002042  20                 	db	32
  1276  002043  20                 	db	32
  1277  002044  20                 	db	32
  1278  002045  20                 	db	32
  1279  002046  20                 	db	32
  1280  002047  20                 	db	32
  1281  002048  23                 	db	35
  1282  002049  00                 	db	0
  1283  00204A                     STR_12:
  1284  00204A  20                 	db	32
  1285  00204B  53                 	db	83	;'S'
  1286  00204C  25                 	db	37
  1287  00204D  64                 	db	100	;'d'
  1288  00204E  46                 	db	70	;'F'
  1289  00204F  25                 	db	37
  1290  002050  64                 	db	100	;'d'
  1291  002051  20                 	db	32
  1292  002052  23                 	db	35
  1293  002053  25                 	db	37
  1294  002054  6C                 	db	108	;'l'
  1295  002055  64                 	db	100	;'d'
  1296  002056  20                 	db	32
  1297  002057  20                 	db	32
  1298  002058  20                 	db	32
  1299  002059  20                 	db	32
  1300  00205A  20                 	db	32
  1301  00205B  20                 	db	32
  1302  00205C  00                 	db	0
  1303  00205D                     STR_9:
  1304  00205D  45                 	db	69	;'E'
  1305  00205E  25                 	db	37
  1306  00205F  64                 	db	100	;'d'
  1307  002060  20                 	db	32
  1308  002061  41                 	db	65	;'A'
  1309  002062  25                 	db	37
  1310  002063  64                 	db	100	;'d'
  1311  002064  20                 	db	32
  1312  002065  54                 	db	84	;'T'
  1313  002066  25                 	db	37
  1314  002067  64                 	db	100	;'d'
  1315  002068  20                 	db	32
  1316  002069  47                 	db	71	;'G'
  1317  00206A  25                 	db	37
  1318  00206B  64                 	db	100	;'d'
  1319  00206C  20                 	db	32
  1320  00206D  23                 	db	35
  1321  00206E  00                 	db	0
  1322  00206F                     STR_1:
  1323  00206F  20                 	db	32
  1324  002070  52                 	db	82	;'R'
  1325  002071  56                 	db	86	;'V'
  1326  002072  49                 	db	73	;'I'
  1327  002073  20                 	db	32
  1328  002074  48                 	db	72	;'H'
  1329  002075  4F                 	db	79	;'O'
  1330  002076  53                 	db	83	;'S'
  1331  002077  54                 	db	84	;'T'
  1332  002078  20                 	db	32
  1333  002079  54                 	db	84	;'T'
  1334  00207A  45                 	db	69	;'E'
  1335  00207B  53                 	db	83	;'S'
  1336  00207C  54                 	db	84	;'T'
  1337  00207D  45                 	db	69	;'E'
  1338  00207E  52                 	db	82	;'R'
  1339  00207F  00                 	db	0
  1340  002080                     STR_4:
  1341  002080  20                 	db	32
  1342  002081  46                 	db	70	;'F'
  1343  002082  47                 	db	71	;'G'
  1344  002083  42                 	db	66	;'B'
  1345  002084  40                 	db	64	;'@'
  1346  002085  4D                 	db	77	;'M'
  1347  002086  43                 	db	67	;'C'
  1348  002087  48                 	db	72	;'H'
  1349  002088  50                 	db	80	;'P'
  1350  002089  20                 	db	32
  1351  00208A  46                 	db	70	;'F'
  1352  00208B  41                 	db	65	;'A'
  1353  00208C  42                 	db	66	;'B'
  1354  00208D  34                 	db	52	;'4'
  1355  00208E  00                 	db	0
  1356  00208F                     STR_6:
  1357  00208F  20                 	db	32
  1358  002090  53                 	db	83	;'S'
  1359  002091  25                 	db	37
  1360  002092  64                 	db	100	;'d'
  1361  002093  46                 	db	70	;'F'
  1362  002094  25                 	db	37
  1363  002095  64                 	db	100	;'d'
  1364  002096  20                 	db	32
  1365  002097  23                 	db	35
  1366  002098  20                 	db	32
  1367  002099  20                 	db	32
  1368  00209A  20                 	db	32
  1369  00209B  20                 	db	32
  1370  00209C  00                 	db	0
  1371  00209D                     STR_2:
  1372  00209D  20                 	db	32
  1373  00209E  56                 	db	86	;'V'
  1374  00209F  65                 	db	101	;'e'
  1375  0020A0  72                 	db	114	;'r'
  1376  0020A1  73                 	db	115	;'s'
  1377  0020A2  69                 	db	105	;'i'
  1378  0020A3  6F                 	db	111	;'o'
  1379  0020A4  6E                 	db	110	;'n'
  1380  0020A5  20                 	db	32
  1381  0020A6  25                 	db	37
  1382  0020A7  73                 	db	115	;'s'
  1383  0020A8  00                 	db	0
  1384  0020A9                     STR_8:
  1385  0020A9  20                 	db	32
  1386  0020AA  4F                 	db	79	;'O'
  1387  0020AB  4B                 	db	75	;'K'
  1388  0020AC  20                 	db	32
  1389  0020AD  23                 	db	35
  1390  0020AE  00                 	db	0
  1391  0020AF                     STR_7:
  1392  0020AF  20                 	db	32
  1393  0020B0  4F                 	db	79	;'O'
  1394  0020B1  4B                 	db	75	;'K'
  1395  0020B2  51                 	db	81	;'Q'
  1396  0020B3  23                 	db	35
  1397  0020B4  00                 	db	0
  1398  0020B5                     STR_3:
  1399  0020B5  30                 	db	48	;'0'
  1400  0020B6  2E                 	db	46
  1401  0020B7  38                 	db	56	;'8'
  1402  0020B8  37                 	db	55	;'7'
  1403  0020B9  42                 	db	66	;'B'
  1404  0020BA  00                 	db	0
  1405  0020BB                     STR_19:
  1406  0020BB  6C                 	db	108	;'l'
  1407  0020BC  64                 	db	100	;'d'
  1408  0020BD  00                 	db	0
  1409  0020BE                     STR_23:
  1410  0020BE  6C                 	db	108	;'l'
  1411  0020BF  69                 	db	105	;'i'
  1412  0020C0  00                 	db	0
  1413  0020C1                     STR_17:
  1414  0020C1  25                 	db	37
  1415  0020C2  63                 	db	99	;'c'
  1416  0020C3  00                 	db	0
  1417  0000                     
  1418                           ; #config settings
  1419  0020C4  00                 	db	0	; dummy byte at the end
  1420  0000                     
  1421                           	psect	cinit
  1422  004ED0                     __pcinit:
  1423                           	opt callstack 0
  1424  004ED0                     start_initialization:
  1425                           	opt callstack 0
  1426  004ED0                     __initialization:
  1427                           	opt callstack 0
  1428                           
  1429                           ; Initialize objects allocated to BIGRAM (257 bytes)
  1430                           ; load TBLPTR registers with __pidataBIGRAM
  1431  004ED0  0E14               	movlw	low __pidataBIGRAM
  1432  004ED2  6EF6               	movwf	tblptrl,c
  1433  004ED4  0E53               	movlw	high __pidataBIGRAM
  1434  004ED6  6EF7               	movwf	tblptrh,c
  1435  004ED8  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  1436  004EDA  6EF8               	movwf	tblptru,c
  1437  004EDC  EE01  F043         	lfsr	0,__pdataBIGRAM
  1438  004EE0  EE20 F101          	lfsr	2,257
  1439  004EE4                     copy_data0:
  1440  004EE4  0009               	tblrd		*+
  1441  004EE6  006F FFD7 FFEE     	movff	tablat,postinc0
  1442  004EEC  50DD               	movf	postdec2,w,c
  1443  004EEE  50D9               	movf	fsr2l,w,c
  1444  004EF0  E1F9               	bnz	copy_data0
  1445  004EF2  50DA               	movf	fsr2h,w,c
  1446  004EF4  E1F7               	bnz	copy_data0
  1447                           
  1448                           ; Initialize objects allocated to BANK3 (56 bytes)
  1449                           ; load TBLPTR registers with __pidataBANK3
  1450  004EF6  0E0E               	movlw	low __pidataBANK3
  1451  004EF8  6EF6               	movwf	tblptrl,c
  1452  004EFA  0E63               	movlw	high __pidataBANK3
  1453  004EFC  6EF7               	movwf	tblptrh,c
  1454  004EFE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1455  004F00  6EF8               	movwf	tblptru,c
  1456  004F02  EE00  F3C3         	lfsr	0,__pdataBANK3
  1457  004F06  EE20 F038          	lfsr	2,56
  1458  004F0A                     copy_data1:
  1459  004F0A  0009               	tblrd		*+
  1460  004F0C  006F FFD7 FFEE     	movff	tablat,postinc0
  1461  004F12  50DD               	movf	postdec2,w,c
  1462  004F14  50D9               	movf	fsr2l,w,c
  1463  004F16  E1F9               	bnz	copy_data1
  1464                           
  1465                           ; Initialize objects allocated to BANK2 (78 bytes)
  1466                           ; load TBLPTR registers with __pidataBANK2
  1467  004F18  0E46               	movlw	low __pidataBANK2
  1468  004F1A  6EF6               	movwf	tblptrl,c
  1469  004F1C  0E5F               	movlw	high __pidataBANK2
  1470  004F1E  6EF7               	movwf	tblptrh,c
  1471  004F20  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1472  004F22  6EF8               	movwf	tblptru,c
  1473  004F24  EE00  F280         	lfsr	0,__pdataBANK2
  1474  004F28  EE20 F04E          	lfsr	2,78
  1475  004F2C                     copy_data2:
  1476  004F2C  0009               	tblrd		*+
  1477  004F2E  006F FFD7 FFEE     	movff	tablat,postinc0
  1478  004F34  50DD               	movf	postdec2,w,c
  1479  004F36  50D9               	movf	fsr2l,w,c
  1480  004F38  E1F9               	bnz	copy_data2
  1481                           
  1482                           ; Initialize objects allocated to BANK1 (192 bytes)
  1483                           ; load TBLPTR registers with __pidataBANK1
  1484  004F3A  0EAC               	movlw	low __pidataBANK1
  1485  004F3C  6EF6               	movwf	tblptrl,c
  1486  004F3E  0E56               	movlw	high __pidataBANK1
  1487  004F40  6EF7               	movwf	tblptrh,c
  1488  004F42  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1489  004F44  6EF8               	movwf	tblptru,c
  1490  004F46  EE00  F100         	lfsr	0,__pdataBANK1
  1491  004F4A  EE20 F0C0          	lfsr	2,192
  1492  004F4E                     copy_data3:
  1493  004F4E  0009               	tblrd		*+
  1494  004F50  006F FFD7 FFEE     	movff	tablat,postinc0
  1495  004F56  50DD               	movf	postdec2,w,c
  1496  004F58  50D9               	movf	fsr2l,w,c
  1497  004F5A  E1F9               	bnz	copy_data3
  1498                           
  1499                           ; Initialize objects allocated to BANK0 (98 bytes)
  1500                           ; load TBLPTR registers with __pidataBANK0
  1501  004F5C  0E78               	movlw	low __pidataBANK0
  1502  004F5E  6EF6               	movwf	tblptrl,c
  1503  004F60  0E5D               	movlw	high __pidataBANK0
  1504  004F62  6EF7               	movwf	tblptrh,c
  1505  004F64  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1506  004F66  6EF8               	movwf	tblptru,c
  1507  004F68  EE00  F060         	lfsr	0,__pdataBANK0
  1508  004F6C  EE20 F062          	lfsr	2,98
  1509  004F70                     copy_data4:
  1510  004F70  0009               	tblrd		*+
  1511  004F72  006F FFD7 FFEE     	movff	tablat,postinc0
  1512  004F78  50DD               	movf	postdec2,w,c
  1513  004F7A  50D9               	movf	fsr2l,w,c
  1514  004F7C  E1F9               	bnz	copy_data4
  1515                           
  1516                           ; Initialize objects allocated to COMRAM (1 bytes)
  1517                           ; load TBLPTR registers with __pidataCOMRAM
  1518  004F7E  0EA6               	movlw	low __pidataCOMRAM
  1519  004F80  6EF6               	movwf	tblptrl,c
  1520  004F82  0E6A               	movlw	high __pidataCOMRAM
  1521  004F84  6EF7               	movwf	tblptrh,c
  1522  004F86  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1523  004F88  6EF8               	movwf	tblptru,c
  1524  004F8A  0009               	tblrd		*+	;fetch initializer
  1525  004F8C  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1526                           
  1527                           ; Clear objects allocated to BANK4 (67 bytes)
  1528  004F92  EE01  F000         	lfsr	0,__pbssBANK4
  1529  004F96  0E43               	movlw	67
  1530  004F98                     clear_0:
  1531  004F98  6AEE               	clrf	postinc0,c
  1532  004F9A  06E8               	decf	wreg,f,c
  1533  004F9C  E1FD               	bnz	clear_0
  1534                           
  1535                           ; Clear objects allocated to BANK3 (195 bytes)
  1536  004F9E  EE00  F300         	lfsr	0,__pbssBANK3
  1537  004FA2  0EC3               	movlw	195
  1538  004FA4                     clear_1:
  1539  004FA4  6AEE               	clrf	postinc0,c
  1540  004FA6  06E8               	decf	wreg,f,c
  1541  004FA8  E1FD               	bnz	clear_1
  1542                           
  1543                           ; Clear objects allocated to BANK2 (128 bytes)
  1544  004FAA  EE00  F200         	lfsr	0,__pbssBANK2
  1545  004FAE  0E80               	movlw	128
  1546  004FB0                     clear_2:
  1547  004FB0  6AEE               	clrf	postinc0,c
  1548  004FB2  06E8               	decf	wreg,f,c
  1549  004FB4  E1FD               	bnz	clear_2
  1550                           
  1551                           ; Clear objects allocated to BANK1 (46 bytes)
  1552  004FB6  EE00  F1C0         	lfsr	0,__pbssBANK1
  1553  004FBA  0E2E               	movlw	46
  1554  004FBC                     clear_3:
  1555  004FBC  6AEE               	clrf	postinc0,c
  1556  004FBE  06E8               	decf	wreg,f,c
  1557  004FC0  E1FD               	bnz	clear_3
  1558                           
  1559                           ; Clear objects allocated to BANK0 (55 bytes)
  1560  004FC2  EE00  F0C2         	lfsr	0,__pbssBANK0
  1561  004FC6  0E37               	movlw	55
  1562  004FC8                     clear_4:
  1563  004FC8  6AEE               	clrf	postinc0,c
  1564  004FCA  06E8               	decf	wreg,f,c
  1565  004FCC  E1FD               	bnz	clear_4
  1566                           
  1567                           ; Clear objects allocated to COMRAM (60 bytes)
  1568  004FCE  EE00  F001         	lfsr	0,__pbssCOMRAM
  1569  004FD2  0E3C               	movlw	60
  1570  004FD4                     clear_5:
  1571  004FD4  6AEE               	clrf	postinc0,c
  1572  004FD6  06E8               	decf	wreg,f,c
  1573  004FD8  E1FD               	bnz	clear_5
  1574                           
  1575                           ;
  1576                           ; Setup IVTBASE
  1577                           ;
  1578  004FDA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1579  004FDC  6ED5               	movwf	213,c
  1580  004FDE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1581  004FE0  6ED6               	movwf	214,c
  1582  004FE2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1583  004FE4  6ED7               	movwf	215,c
  1584  004FE6                     end_of_initialization:
  1585                           	opt callstack 0
  1586  004FE6                     __end_of__initialization:
  1587                           	opt callstack 0
  1588  004FE6  0100               	movlb	0
  1589  004FE8  EF63  F010         	goto	_main	;jump to C main() function
  1590                           
  1591                           	psect	bssCOMRAM
  1592  000001                     __pbssCOMRAM:
  1593                           	opt callstack 0
  1594  000001                     secs_II_message@block:
  1595                           	opt callstack 0
  1596  000001                     	ds	7
  1597  000008                     _UART1_TxInterruptHandler:
  1598                           	opt callstack 0
  1599  000008                     	ds	3
  1600  00000B                     _UART1_RxInterruptHandler:
  1601                           	opt callstack 0
  1602  00000B                     	ds	3
  1603  00000E                     _UART2_TxInterruptHandler:
  1604                           	opt callstack 0
  1605  00000E                     	ds	3
  1606  000011                     _UART2_RxInterruptHandler:
  1607                           	opt callstack 0
  1608  000011                     	ds	3
  1609  000014                     _INT2_InterruptHandler:
  1610                           	opt callstack 0
  1611  000014                     	ds	3
  1612  000017                     _INT1_InterruptHandler:
  1613                           	opt callstack 0
  1614  000017                     	ds	3
  1615  00001A                     _INT0_InterruptHandler:
  1616                           	opt callstack 0
  1617  00001A                     	ds	3
  1618  00001D                     _width:
  1619                           	opt callstack 0
  1620  00001D                     	ds	2
  1621  00001F                     _prec:
  1622                           	opt callstack 0
  1623  00001F                     	ds	2
  1624  000021                     _flags:
  1625                           	opt callstack 0
  1626  000021                     	ds	2
  1627  000023                     r_protocol@b_block:
  1628                           	opt callstack 0
  1629  000023                     	ds	2
  1630  000025                     run_checksum@sum:
  1631                           	opt callstack 0
  1632  000025                     	ds	2
  1633  000027                     TMR5_ISR@CountCallBack:
  1634                           	opt callstack 0
  1635  000027                     	ds	2
  1636  000029                     _timer5ReloadVal:
  1637                           	opt callstack 0
  1638  000029                     	ds	2
  1639  00002B                     secs_gem_state@block:
  1640                           	opt callstack 0
  1641  00002B                     	ds	1
  1642  00002C                     t_protocol@requeue:
  1643                           	opt callstack 0
  1644  00002C                     	ds	1
  1645  00002D                     t_protocol@retry:
  1646                           	opt callstack 0
  1647  00002D                     	ds	1
  1648  00002E                     r_protocol@rxData_l:
  1649                           	opt callstack 0
  1650  00002E                     	ds	1
  1651  00002F                     m_protocol@rxData_l:
  1652                           	opt callstack 0
  1653  00002F                     	ds	1
  1654  000030                     _mode_sw:
  1655                           	opt callstack 0
  1656  000030                     	ds	1
  1657  000031                     _uart2RxCount:
  1658                           	opt callstack 0
  1659  000031                     	ds	1
  1660  000032                     _uart2RxTail:
  1661                           	opt callstack 0
  1662  000032                     	ds	1
  1663  000033                     _uart2RxHead:
  1664                           	opt callstack 0
  1665  000033                     	ds	1
  1666  000034                     _uart2TxBufferRemaining:
  1667                           	opt callstack 0
  1668  000034                     	ds	1
  1669  000035                     _uart2TxTail:
  1670                           	opt callstack 0
  1671  000035                     	ds	1
  1672  000036                     _uart2TxHead:
  1673                           	opt callstack 0
  1674  000036                     	ds	1
  1675  000037                     _uart1RxCount:
  1676                           	opt callstack 0
  1677  000037                     	ds	1
  1678  000038                     _uart1RxTail:
  1679                           	opt callstack 0
  1680  000038                     	ds	1
  1681  000039                     _uart1RxHead:
  1682                           	opt callstack 0
  1683  000039                     	ds	1
  1684  00003A                     _uart1TxBufferRemaining:
  1685                           	opt callstack 0
  1686  00003A                     	ds	1
  1687  00003B                     _uart1TxTail:
  1688                           	opt callstack 0
  1689  00003B                     	ds	1
  1690  00003C                     _uart1TxHead:
  1691                           	opt callstack 0
  1692  00003C                     	ds	1
  1693                           
  1694                           	psect	dataCOMRAM
  1695  00005D                     __pdataCOMRAM:
  1696                           	opt callstack 0
  1697  00005D                     r_protocol@retry:
  1698                           	opt callstack 0
  1699  00005D                     	ds	1
  1700                           
  1701                           	psect	bssBANK0
  1702  0000C2                     __pbssBANK0:
  1703                           	opt callstack 0
  1704  0000C2                     _r_block:
  1705                           	opt callstack 0
  1706  0000C2                     	ds	13
  1707  0000CF                     _spi_link:
  1708                           	opt callstack 0
  1709  0000CF                     	ds	12
  1710  0000DB                     t_protocol@block:
  1711                           	opt callstack 0
  1712  0000DB                     	ds	7
  1713  0000E2                     wdtdelay@dcount:
  1714                           	opt callstack 0
  1715  0000E2                     	ds	4
  1716  0000E6                     _TMR5_InterruptHandler:
  1717                           	opt callstack 0
  1718  0000E6                     	ds	3
  1719  0000E9                     _TMR6_InterruptHandler:
  1720                           	opt callstack 0
  1721  0000E9                     	ds	3
  1722  0000EC                     _ADCC_ADI_InterruptHandler:
  1723                           	opt callstack 0
  1724  0000EC                     	ds	3
  1725  0000EF                     _nout:
  1726                           	opt callstack 0
  1727  0000EF                     	ds	2
  1728  0000F1                     _seed:
  1729                           	opt callstack 0
  1730  0000F1                     	ds	8
  1731                           
  1732                           	psect	dataBANK0
  1733  000060                     __pdataBANK0:
  1734                           	opt callstack 0
  1735  000060                     _V:
  1736                           	opt callstack 0
  1737  000060                     	ds	98
  1738                           
  1739                           	psect	bssBANK1
  1740  0001C0                     __pbssBANK1:
  1741                           	opt callstack 0
  1742  0001C0                     _tickCount:
  1743                           	opt callstack 0
  1744  0001C0                     	ds	14
  1745  0001CE                     _dbuf:
  1746                           	opt callstack 0
  1747  0001CE                     	ds	32
  1748                           
  1749                           	psect	dataBANK1
  1750  000100                     __pdataBANK1:
  1751                           	opt callstack 0
  1752  000100                     stoa@F1144:
  1753                           	opt callstack 0
  1754  000100                     	ds	7
  1755  000107                     _H10:
  1756                           	opt callstack 0
  1757  000107                     	ds	91
  1758  000162                     _H12:
  1759                           	opt callstack 0
  1760  000162                     	ds	30
  1761  000180                     _H24:
  1762                           	opt callstack 0
  1763  000180                     	ds	27
  1764  00019B                     _H17:
  1765                           	opt callstack 0
  1766  00019B                     	ds	20
  1767  0001AF                     _H14:
  1768                           	opt callstack 0
  1769  0001AF                     	ds	17
  1770                           
  1771                           	psect	bssBANK2
  1772  000200                     __pbssBANK2:
  1773                           	opt callstack 0
  1774  000200                     _uart2RxBuffer:
  1775                           	opt callstack 0
  1776  000200                     	ds	64
  1777  000240                     _uart1RxBuffer:
  1778                           	opt callstack 0
  1779  000240                     	ds	64
  1780                           
  1781                           	psect	dataBANK2
  1782  000280                     __pdataBANK2:
  1783                           	opt callstack 0
  1784  000280                     _H13:
  1785                           	opt callstack 0
  1786  000280                     	ds	48
  1787  0002B0                     _H27:
  1788                           	opt callstack 0
  1789  0002B0                     	ds	30
  1790                           
  1791                           	psect	bssBANK3
  1792  000300                     __pbssBANK3:
  1793                           	opt callstack 0
  1794  000300                     _uart2TxBuffer:
  1795                           	opt callstack 0
  1796  000300                     	ds	64
  1797  000340                     _uart1TxBuffer:
  1798                           	opt callstack 0
  1799  000340                     	ds	64
  1800  000380                     _ring_buf1:
  1801                           	opt callstack 0
  1802  000380                     	ds	67
  1803                           
  1804                           	psect	dataBANK3
  1805  0003C3                     __pdataBANK3:
  1806                           	opt callstack 0
  1807  0003C3                     _H53:
  1808                           	opt callstack 0
  1809  0003C3                     	ds	56
  1810                           
  1811                           	psect	bssBANK4
  1812  000400                     __pbssBANK4:
  1813                           	opt callstack 0
  1814  000400                     _ring_buf2:
  1815                           	opt callstack 0
  1816  000400                     	ds	67
  1817                           
  1818                           	psect	dataBIGRAM
  1819  000443                     __pdataBIGRAM:
  1820                           	opt callstack 0
  1821  000443                     _H254:
  1822                           	opt callstack 0
  1823  000443                     	ds	257
  1824                           
  1825                           	psect	cstackBANK0
  1826  0000F9                     __pcstackBANK0:
  1827                           	opt callstack 0
  1828  0000F9                     ??_TMR5_ISR:
  1829                           
  1830                           ; 1 bytes @ 0x0
  1831  0000F9                     	ds	3
  1832                           
  1833                           	psect	cstackCOMRAM
  1834  00005E                     __pcstackCOMRAM:
  1835                           	opt callstack 0
  1836  00005E                     ??_TMR6_ISR:
  1837  00005E                     
  1838                           ; 1 bytes @ 0x0
  1839  00005E                     	ds	1
  1840  00005F                     
  1841                           ; 1 bytes @ 0x1
  1842 ;;
  1843 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1844 ;;
  1845 ;; *************** function _main *****************
  1846 ;; Defined at:
  1847 ;;		line 373 in file "main.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  mode            1  [STACK] enum E16897
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1  [STACK] void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 4/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels required when called:   14
  1867 ;; This function calls:
  1868 ;;		_SYSTEM_Initialize
  1869 ;;		_StartTimer
  1870 ;;		_TimerDone
  1871 ;;		_UART1_put_buffer
  1872 ;;		_UART2_put_buffer
  1873 ;;		_WaitMs
  1874 ;;		_eaDogM_WriteCommand
  1875 ;;		_eaDogM_WriteStringAtPos
  1876 ;;		_hb_message
  1877 ;;		_init_display
  1878 ;;		_m_protocol
  1879 ;;		_r_protocol
  1880 ;;		_sprintf
  1881 ;;		_srand
  1882 ;;		_t_protocol
  1883 ;;		_wait_lcd_done
  1884 ;; This function is called by:
  1885 ;;		Startup code after reset
  1886 ;; This function uses a reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text0
  1890  0020C6                     __ptext0:
  1891                           	opt callstack 0
  1892  0020C6                     _main:
  1893                           	opt callstack 0
  1894                           
  1895                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1896  0020C6  52E6               	movf	postinc1,f,c
  1897                           
  1898                           ;main.c: 375:  UI_STATES mode;;main.c: 378:  SYSTEM_Initialize();
  1899                           
  1900                           ;incstack = 0
  1901  0020C8  ECAA  F030         	call	_SYSTEM_Initialize	;wreg free
  1902                           
  1903                           ; BSR set to: 60
  1904                           ;main.c: 381:  (INTCON0bits.GIEH = 1);
  1905  0020CC  8ED2               	bsf	16338,7,c	;volatile
  1906                           
  1907                           ; BSR set to: 60
  1908                           ;main.c: 384:  (INTCON0bits.GIEL = 1);
  1909  0020CE  8CD2               	bsf	16338,6,c	;volatile
  1910                           
  1911                           ; BSR set to: 60
  1912                           ;main.c: 386:  V.ui_state = UI_STATE_INIT;
  1913  0020D0  0100               	movlb	0	; () banked
  1914  0020D2  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 391:  WaitMs(300);
  1918  0020D4  0E2C               	movlw	44
  1919  0020D6  6EE6               	movwf	postinc1,c
  1920  0020D8  0E01               	movlw	1
  1921  0020DA  6EE6               	movwf	postinc1,c
  1922  0020DC  ECA3  F031         	call	_WaitMs	;wreg free
  1923                           
  1924                           ;main.c: 392:  if (PORTBbits.RB0) {
  1925  0020E0  A0CB               	btfss	16331,0,c	;volatile
  1926  0020E2  D004               	goto	l9407
  1927                           
  1928                           ;main.c: 393:   mode = UI_STATE_HOST;
  1929                           ;stkvar	_mode @ sp[(-1)+0]
  1930  0020E4  0EFF               	movlw	-1
  1931  0020E6  6AE3               	clrf	plusw1,c
  1932  0020E8  2AE3               	incf	plusw1,f,c
  1933                           
  1934                           ;main.c: 394:  } else {
  1935  0020EA  D004               	goto	l9409
  1936  0020EC                     l9407:
  1937                           
  1938                           ;main.c: 395:   mode = UI_STATE_LOG;
  1939                           ;stkvar	_mode @ sp[(-1)+0]
  1940  0020EC  0EFF               	movlw	-1
  1941  0020EE  6AE3               	clrf	plusw1,c
  1942  0020F0  80E3               	bsf	plusw1,0,c
  1943  0020F2  82E3               	bsf	plusw1,1,c	;indir
  1944  0020F4                     l9409:
  1945                           
  1946                           ;main.c: 398:  if (mode == UI_STATE_HOST) {
  1947                           ;stkvar	_mode @ sp[(-1)+0]
  1948  0020F4  0EFF               	movlw	-1
  1949  0020F6  04E3               	decf	plusw1,w,c
  1950  0020F8  A4D8               	btfss	status,2,c
  1951  0020FA  D003               	goto	l1242
  1952                           
  1953                           ;main.c: 399:   do { LATDbits.LATD0 = 1; } while(0);
  1954  0020FC  80BD               	bsf	16317,0,c	;volatile
  1955                           
  1956                           ;main.c: 400:   do { LATDbits.LATD1 = 1; } while(0);
  1957  0020FE  82BD               	bsf	16317,1,c	;volatile
  1958  002100  D275               	goto	l9595
  1959  002102                     l1242:
  1960  002102  90BD               	bcf	16317,0,c	;volatile
  1961                           
  1962                           ;main.c: 403:   do { LATDbits.LATD1 = 0; } while(0);
  1963  002104  92BD               	bcf	16317,1,c	;volatile
  1964  002106  D272               	goto	l9595
  1965  002108                     l9411:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;main.c: 409:    init_display();
  1969  002108  EC0B  F02A         	call	_init_display	;wreg free
  1970                           
  1971                           ; BSR set to: 61
  1972                           ;main.c: 410:    eaDogM_WriteCommand(0b00001100);
  1973  00210C  0E0C               	movlw	12
  1974  00210E  6EE6               	movwf	postinc1,c
  1975  002110  EC01  F035         	call	_eaDogM_WriteCommand	;wreg free
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;main.c: 412:    V.ui_state = mode;
  1979                           ;stkvar	_mode @ sp[(-1)+0]
  1980  002114  0EFF               	movlw	-1
  1981  002116  006F FF8C  F061    	movff	plusw1,_V+1	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;main.c: 413:    V.s_state = SEQ_STATE_INIT;
  1985  00211C  6B60               	clrf	_V& (0+255),b	;volatile
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;main.c: 414:    srand(1957);
  1989  00211E  0EA5               	movlw	165
  1990  002120  6EE6               	movwf	postinc1,c
  1991  002122  0E07               	movlw	7
  1992  002124  6EE6               	movwf	postinc1,c
  1993  002126  ECBE  F031         	call	_srand	;wreg free
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;main.c: 415:    sprintf(V.buf, " RVI HOST TESTER");
  1997  00212A  0E6F               	movlw	STR_1& (0+255)
  1998  00212C  6EE6               	movwf	postinc1,c
  1999  00212E  0E60               	movlw	_V& (0+255)
  2000  002130  0F06               	addlw	6
  2001  002132  6EE6               	movwf	postinc1,c
  2002  002134  0E02               	movlw	2
  2003  002136  6EE6               	movwf	postinc1,c
  2004  002138  ECF2  F02A         	call	_sprintf	;wreg free
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;main.c: 416:    wait_lcd_done();
  2008  00213C  EC80  F034         	call	_wait_lcd_done	;wreg free
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 417:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  2012  002140  0E60               	movlw	_V& (0+255)
  2013  002142  0F06               	addlw	6
  2014  002144  6EE6               	movwf	postinc1,c
  2015  002146  0E00               	movlw	0
  2016  002148  6EE6               	movwf	postinc1,c
  2017  00214A  0E00               	movlw	0
  2018  00214C  6EE6               	movwf	postinc1,c
  2019  00214E  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2020                           
  2021                           ; BSR set to: 59
  2022                           ;main.c: 418:    sprintf(V.buf, " Version %s", "0.87B");
  2023  002152  0EB5               	movlw	STR_3& (0+255)
  2024  002154  6E48               	movwf	btemp+11,c
  2025  002156  0060  F123  FFE6   	movff	btemp+11,postinc1
  2026  00215C  0E20               	movlw	high __smallconst
  2027  00215E  6EE6               	movwf	postinc1,c
  2028  002160  0E9D               	movlw	STR_2& (0+255)
  2029  002162  6EE6               	movwf	postinc1,c
  2030  002164  0E60               	movlw	_V& (0+255)
  2031  002166  0F06               	addlw	6
  2032  002168  6EE6               	movwf	postinc1,c
  2033  00216A  0E04               	movlw	4
  2034  00216C  6EE6               	movwf	postinc1,c
  2035  00216E  ECF2  F02A         	call	_sprintf	;wreg free
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;main.c: 419:    wait_lcd_done();
  2039  002172  EC80  F034         	call	_wait_lcd_done	;wreg free
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main.c: 420:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2043  002176  0E60               	movlw	_V& (0+255)
  2044  002178  0F06               	addlw	6
  2045  00217A  6EE6               	movwf	postinc1,c
  2046  00217C  0E00               	movlw	0
  2047  00217E  6EE6               	movwf	postinc1,c
  2048  002180  0E01               	movlw	1
  2049  002182  6EE6               	movwf	postinc1,c
  2050  002184  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2051                           
  2052                           ; BSR set to: 59
  2053                           ;main.c: 421:    sprintf(V.buf, " FGB@MCHP FAB4");
  2054  002188  0E80               	movlw	STR_4& (0+255)
  2055  00218A  6EE6               	movwf	postinc1,c
  2056  00218C  0E60               	movlw	_V& (0+255)
  2057  00218E  0F06               	addlw	6
  2058  002190  6EE6               	movwf	postinc1,c
  2059  002192  0E02               	movlw	2
  2060  002194  6EE6               	movwf	postinc1,c
  2061  002196  ECF2  F02A         	call	_sprintf	;wreg free
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;main.c: 422:    wait_lcd_done();
  2065  00219A  EC80  F034         	call	_wait_lcd_done	;wreg free
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;main.c: 423:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  2069  00219E  0E60               	movlw	_V& (0+255)
  2070  0021A0  0F06               	addlw	6
  2071  0021A2  6EE6               	movwf	postinc1,c
  2072  0021A4  0E00               	movlw	0
  2073  0021A6  6EE6               	movwf	postinc1,c
  2074  0021A8  0E02               	movlw	2
  2075  0021AA  6EE6               	movwf	postinc1,c
  2076  0021AC  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2077                           
  2078                           ; BSR set to: 59
  2079                           ;main.c: 424:    WaitMs(3000);
  2080  0021B0  0EB8               	movlw	184
  2081  0021B2  6EE6               	movwf	postinc1,c
  2082  0021B4  0E0B               	movlw	11
  2083  0021B6  6EE6               	movwf	postinc1,c
  2084  0021B8  ECA3  F031         	call	_WaitMs	;wreg free
  2085                           
  2086                           ;main.c: 425:    break;
  2087  0021BC  D22B               	goto	l1287
  2088  0021BE                     l1252:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;main.c: 429:     V.r_l_state = LINK_STATE_IDLE;
  2092  0021BE  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  2093                           
  2094                           ;main.c: 430:     V.t_l_state = LINK_STATE_IDLE;
  2095  0021C0  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;main.c: 431:     V.s_state = SEQ_STATE_RX;
  2099  0021C2  0E01               	movlw	1
  2100  0021C4  6F60               	movwf	_V& (0+255),b	;volatile
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;main.c: 432:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2104  0021C6  0E0A               	movlw	10
  2105  0021C8  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2106  0021CA  A4D8               	btfss	status,2,c
  2107  0021CC  D029               	goto	l9455
  2108                           
  2109                           ; BSR set to: 0
  2110  0021CE  0E0A               	movlw	10
  2111  0021D0  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2112  0021D2  A4D8               	btfss	status,2,c
  2113  0021D4  D025               	goto	l9455
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;main.c: 433:      sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2117  0021D6  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2118  0021D8  6EE6               	movwf	postinc1,c
  2119  0021DA  0E00               	movlw	0
  2120  0021DC  6EE6               	movwf	postinc1,c
  2121  0021DE  0060  F29B  FFE6   	movff	_V+70,postinc1
  2122  0021E4  0060  F29F  FFE6   	movff	_V+71,postinc1
  2123  0021EA  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2124  0021F0  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2125  0021F6  0E35               	movlw	STR_5& (0+255)
  2126  0021F8  6EE6               	movwf	postinc1,c
  2127  0021FA  0E60               	movlw	_V& (0+255)
  2128  0021FC  0F06               	addlw	6
  2129  0021FE  6EE6               	movwf	postinc1,c
  2130  002200  0E08               	movlw	8
  2131  002202  6EE6               	movwf	postinc1,c
  2132  002204  ECF2  F02A         	call	_sprintf	;wreg free
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 434:      V.buf[16] = 0;
  2136  002208  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;main.c: 435:      wait_lcd_done();
  2140  00220A  EC80  F034         	call	_wait_lcd_done	;wreg free
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;main.c: 436:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  2144  00220E  0E60               	movlw	_V& (0+255)
  2145  002210  0F06               	addlw	6
  2146  002212  6EE6               	movwf	postinc1,c
  2147  002214  0E00               	movlw	0
  2148  002216  6EE6               	movwf	postinc1,c
  2149  002218  0E02               	movlw	2
  2150  00221A  6EE6               	movwf	postinc1,c
  2151  00221C  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2152  002220                     l9455:
  2153                           
  2154                           ;main.c: 439:     WaitMs(50);
  2155  002220  0E32               	movlw	50
  2156  002222  6EE6               	movwf	postinc1,c
  2157  002224  0E00               	movlw	0
  2158  002226  6EE6               	movwf	postinc1,c
  2159  002228  ECA3  F031         	call	_WaitMs	;wreg free
  2160                           
  2161                           ;main.c: 440:     UART1_put_buffer(0x05);
  2162  00222C  0E05               	movlw	5
  2163  00222E  6EE6               	movwf	postinc1,c
  2164  002230  EC45  F032         	call	_UART1_put_buffer	;wreg free
  2165                           
  2166                           ;main.c: 442:     break;
  2167  002234  D0C1               	goto	l9519
  2168  002236                     l9459:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;main.c: 447:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  2172  002236  0E60               	movlw	_V& (0+255)
  2173  002238  0F04               	addlw	4
  2174  00223A  6EE6               	movwf	postinc1,c
  2175  00223C  EC8B  F01A         	call	_r_protocol	;wreg free
  2176  002240  0E04               	movlw	4
  2177  002242  183D               	xorwf	btemp,w,c
  2178  002244  A4D8               	btfss	status,2,c
  2179  002246  D02F               	goto	l9479
  2180                           
  2181                           ;main.c: 448:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  2182  002248  0100               	movlb	0	; () banked
  2183  00224A  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2184  00224C  6EE6               	movwf	postinc1,c
  2185  00224E  0E00               	movlw	0
  2186  002250  6EE6               	movwf	postinc1,c
  2187  002252  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2188  002254  6EE6               	movwf	postinc1,c
  2189  002256  0E00               	movlw	0
  2190  002258  6EE6               	movwf	postinc1,c
  2191  00225A  0E8F               	movlw	STR_6& (0+255)
  2192  00225C  6EE6               	movwf	postinc1,c
  2193  00225E  0E60               	movlw	_V& (0+255)
  2194  002260  0F06               	addlw	6
  2195  002262  6EE6               	movwf	postinc1,c
  2196  002264  0E06               	movlw	6
  2197  002266  6EE6               	movwf	postinc1,c
  2198  002268  ECF2  F02A         	call	_sprintf	;wreg free
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;main.c: 449:      V.buf[11] = 0;
  2202  00226C  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;main.c: 450:      wait_lcd_done();
  2206  00226E  EC80  F034         	call	_wait_lcd_done	;wreg free
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;main.c: 451:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  2210  002272  0E60               	movlw	_V& (0+255)
  2211  002274  0F06               	addlw	6
  2212  002276  6EE6               	movwf	postinc1,c
  2213  002278  0E00               	movlw	0
  2214  00227A  6EE6               	movwf	postinc1,c
  2215  00227C  0E00               	movlw	0
  2216  00227E  6EE6               	movwf	postinc1,c
  2217  002280  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2218                           
  2219                           ; BSR set to: 59
  2220                           ;main.c: 453:      WaitMs(5);
  2221  002284  0E05               	movlw	5
  2222  002286  6EE6               	movwf	postinc1,c
  2223  002288  0E00               	movlw	0
  2224  00228A  6EE6               	movwf	postinc1,c
  2225  00228C  ECA3  F031         	call	_WaitMs	;wreg free
  2226                           
  2227                           ;main.c: 455:      if (V.wbit) {
  2228  002290  0100               	movlb	0	; () banked
  2229  002292  A3BB               	btfss	(_V+91)& (0+255),1,b	;volatile
  2230  002294  D006               	goto	l9477
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;main.c: 456:       V.s_state = SEQ_STATE_TX;
  2234  002296  0E02               	movlw	2
  2235  002298  6F60               	movwf	_V& (0+255),b	;volatile
  2236                           
  2237                           ;main.c: 457:       V.failed_send = 0;
  2238  00229A  0E87               	movlw	-121
  2239  00229C  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;main.c: 458:       V.t_l_state = LINK_STATE_IDLE;
  2243  00229E  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2244                           
  2245                           ;main.c: 459:      } else {
  2246  0022A0  D002               	goto	l9479
  2247  0022A2                     l9477:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;main.c: 460:       V.s_state = SEQ_STATE_TRIGGER;
  2251  0022A2  0E03               	movlw	3
  2252  0022A4  6F60               	movwf	_V& (0+255),b	;volatile
  2253  0022A6                     l9479:
  2254                           
  2255                           ;main.c: 463:     if (V.r_l_state == LINK_STATE_ERROR)
  2256  0022A6  0E06               	movlw	6
  2257  0022A8  0100               	movlb	0	; () banked
  2258  0022AA  1964               	xorwf	(_V+4)& (0+255),w,b	;volatile
  2259  0022AC  D00F               	goto	L28
  2260  0022AE                     l9483:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;main.c: 470:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  2264  0022AE  0E60               	movlw	_V& (0+255)
  2265  0022B0  0F05               	addlw	5
  2266  0022B2  6EE6               	movwf	postinc1,c
  2267  0022B4  ECCF  F01D         	call	_t_protocol	;wreg free
  2268  0022B8  0E04               	movlw	4
  2269  0022BA  183D               	xorwf	btemp,w,c
  2270  0022BC  A4D8               	btfss	status,2,c
  2271  0022BE  D003               	goto	l9487
  2272                           
  2273                           ;main.c: 471:      V.s_state = SEQ_STATE_TRIGGER;
  2274  0022C0  0E03               	movlw	3
  2275  0022C2  0100               	movlb	0	; () banked
  2276  0022C4  6F60               	movwf	_V& (0+255),b	;volatile
  2277  0022C6                     l9487:
  2278                           
  2279                           ;main.c: 473:     if (V.t_l_state == LINK_STATE_ERROR)
  2280  0022C6  0E06               	movlw	6
  2281  0022C8  0100               	movlb	0	; () banked
  2282  0022CA  1965               	xorwf	(_V+5)& (0+255),w,b	;volatile
  2283  0022CC                     L28:
  2284  0022CC  A4D8               	btfss	status,2,c
  2285  0022CE  D074               	goto	l9519
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;main.c: 474:      V.s_state = SEQ_STATE_ERROR;
  2289  0022D0  0E06               	movlw	6
  2290  0022D2  6F60               	movwf	_V& (0+255),b	;volatile
  2291  0022D4  D071               	goto	l9519
  2292  0022D6                     l1263:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;main.c: 477:     if (V.queue) {
  2296  0022D6  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  2297  0022D8  D00E               	goto	l9497
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;main.c: 478:      V.r_l_state = LINK_STATE_IDLE;
  2301  0022DA  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  2302                           
  2303                           ;main.c: 479:      V.t_l_state = LINK_STATE_IDLE;
  2304  0022DC  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;main.c: 480:      V.s_state = SEQ_STATE_TX;
  2308  0022DE  0E02               	movlw	2
  2309  0022E0  6F60               	movwf	_V& (0+255),b	;volatile
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;main.c: 481:      sprintf(V.buf, " OKQ#");
  2313  0022E2  0EAF               	movlw	STR_7& (0+255)
  2314  0022E4  6EE6               	movwf	postinc1,c
  2315  0022E6  0E60               	movlw	_V& (0+255)
  2316  0022E8  0F06               	addlw	6
  2317  0022EA  6EE6               	movwf	postinc1,c
  2318  0022EC  0E02               	movlw	2
  2319  0022EE  6EE6               	movwf	postinc1,c
  2320  0022F0  ECF2  F02A         	call	_sprintf	;wreg free
  2321                           
  2322                           ;main.c: 482:     } else {
  2323  0022F4  D00B               	goto	l9501
  2324  0022F6                     l9497:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;main.c: 483:      V.s_state = SEQ_STATE_DONE;
  2328  0022F6  0E05               	movlw	5
  2329  0022F8  6F60               	movwf	_V& (0+255),b	;volatile
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 484:      sprintf(V.buf, " OK #");
  2333  0022FA  0EA9               	movlw	STR_8& (0+255)
  2334  0022FC  6EE6               	movwf	postinc1,c
  2335  0022FE  0E60               	movlw	_V& (0+255)
  2336  002300  0F06               	addlw	6
  2337  002302  6EE6               	movwf	postinc1,c
  2338  002304  0E02               	movlw	2
  2339  002306  6EE6               	movwf	postinc1,c
  2340  002308  ECF2  F02A         	call	_sprintf	;wreg free
  2341  00230C                     l9501:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;main.c: 486:     wait_lcd_done();
  2345  00230C  EC80  F034         	call	_wait_lcd_done	;wreg free
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;main.c: 487:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2349  002310  0E60               	movlw	_V& (0+255)
  2350  002312  0F06               	addlw	6
  2351  002314  6EE6               	movwf	postinc1,c
  2352  002316  0E0B               	movlw	11
  2353  002318  6EE6               	movwf	postinc1,c
  2354  00231A  0E00               	movlw	0
  2355  00231C  6EE6               	movwf	postinc1,c
  2356  00231E  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2357                           
  2358                           ;main.c: 488:     break;
  2359  002322  D04A               	goto	l9519
  2360  002324                     l1266:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;main.c: 490:     V.s_state = SEQ_STATE_INIT;
  2364  002324  6B60               	clrf	_V& (0+255),b	;volatile
  2365                           
  2366                           ;main.c: 491:     break;
  2367  002326  D048               	goto	l9519
  2368  002328                     l1268:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;main.c: 494:     V.s_state = SEQ_STATE_INIT;
  2372  002328  6B60               	clrf	_V& (0+255),b	;volatile
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;main.c: 495:     sprintf(V.buf, "E%d A%d T%d G%d #", V.error, V.abort, V.timer_error, V
      +                          .g_state);
  2376  00232A  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2377  00232C  6EE6               	movwf	postinc1,c
  2378  00232E  0E00               	movlw	0
  2379  002330  6EE6               	movwf	postinc1,c
  2380  002332  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2381  002338  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2382  00233E  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2383  002340  6EE6               	movwf	postinc1,c
  2384  002342  0E00               	movlw	0
  2385  002344  6EE6               	movwf	postinc1,c
  2386  002346  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2387  002348  6EE6               	movwf	postinc1,c
  2388  00234A  0E00               	movlw	0
  2389  00234C  6EE6               	movwf	postinc1,c
  2390  00234E  0E5D               	movlw	STR_9& (0+255)
  2391  002350  6EE6               	movwf	postinc1,c
  2392  002352  0E60               	movlw	_V& (0+255)
  2393  002354  0F06               	addlw	6
  2394  002356  6EE6               	movwf	postinc1,c
  2395  002358  0E0A               	movlw	10
  2396  00235A  6EE6               	movwf	postinc1,c
  2397  00235C  ECF2  F02A         	call	_sprintf	;wreg free
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;main.c: 496:     V.buf[16] = 0;
  2401  002360  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;main.c: 497:     wait_lcd_done();
  2405  002362  EC80  F034         	call	_wait_lcd_done	;wreg free
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;main.c: 498:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2409  002366  0E60               	movlw	_V& (0+255)
  2410  002368  0F06               	addlw	6
  2411  00236A  6EE6               	movwf	postinc1,c
  2412  00236C  0E00               	movlw	0
  2413  00236E  6EE6               	movwf	postinc1,c
  2414  002370  0E02               	movlw	2
  2415  002372  6EE6               	movwf	postinc1,c
  2416  002374  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2417                           
  2418                           ; BSR set to: 59
  2419                           ;main.c: 499:     WaitMs(2000);
  2420  002378  0ED0               	movlw	208
  2421  00237A  6EE6               	movwf	postinc1,c
  2422  00237C  0E07               	movlw	7
  2423  00237E  6EE6               	movwf	postinc1,c
  2424  002380  ECA3  F031         	call	_WaitMs	;wreg free
  2425                           
  2426                           ;main.c: 500:     break;
  2427  002384  D019               	goto	l9519
  2428  002386                     l9517:
  2429                           
  2430                           ; BSR set to: 0
  2431  002386  5160               	movf	_V& (0+255),w,b	;volatile
  2432  002388  6E47               	movwf	btemp+10,c
  2433  00238A  6A48               	clrf	btemp+11,c
  2434                           
  2435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2436                           ; Switch size 1, requested type "simple"
  2437                           ; Number of cases is 1, Range of values is 0 to 0
  2438                           ; switch strategies available:
  2439                           ; Name         Instructions Cycles
  2440                           ; simple_byte            4     3 (average)
  2441                           ;	Chosen strategy is simple_byte
  2442  00238C  5048               	movf	btemp+11,w,c
  2443  00238E  0A00               	xorlw	0	; case 0
  2444  002390  A4D8               	btfss	status,2,c
  2445  002392  D7CA               	goto	l1268
  2446                           
  2447                           ; BSR set to: 0
  2448                           ; Switch size 1, requested type "simple"
  2449                           ; Number of cases is 6, Range of values is 0 to 6
  2450                           ; switch strategies available:
  2451                           ; Name         Instructions Cycles
  2452                           ; simple_byte           19    10 (average)
  2453                           ;	Chosen strategy is simple_byte
  2454  002394  5047               	movf	btemp+10,w,c
  2455  002396  0A00               	xorlw	0	; case 0
  2456  002398  B4D8               	btfsc	status,2,c
  2457  00239A  D711               	goto	l1252
  2458  00239C  0A01               	xorlw	1	; case 1
  2459  00239E  B4D8               	btfsc	status,2,c
  2460  0023A0  D74A               	goto	l9459
  2461  0023A2  0A03               	xorlw	3	; case 2
  2462  0023A4  B4D8               	btfsc	status,2,c
  2463  0023A6  D783               	goto	l9483
  2464  0023A8  0A01               	xorlw	1	; case 3
  2465  0023AA  B4D8               	btfsc	status,2,c
  2466  0023AC  D794               	goto	l1263
  2467  0023AE  0A06               	xorlw	6	; case 5
  2468  0023B0  B4D8               	btfsc	status,2,c
  2469  0023B2  D7B8               	goto	l1266
  2470  0023B4  0A03               	xorlw	3	; case 6
  2471  0023B6  D7B8               	goto	l1268
  2472  0023B8                     l9519:
  2473                           
  2474                           ;main.c: 502:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2475  0023B8  0E0A               	movlw	10
  2476  0023BA  0100               	movlb	0	; () banked
  2477  0023BC  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2478  0023BE  A4D8               	btfss	status,2,c
  2479  0023C0  D129               	goto	l1287
  2480                           
  2481                           ; BSR set to: 0
  2482  0023C2  0E0A               	movlw	10
  2483  0023C4  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2484  0023C6  A4D8               	btfss	status,2,c
  2485  0023C8  D125               	goto	l1287
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;main.c: 503:     sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2489  0023CA  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2490  0023CC  6EE6               	movwf	postinc1,c
  2491  0023CE  0E00               	movlw	0
  2492  0023D0  6EE6               	movwf	postinc1,c
  2493  0023D2  0060  F29B  FFE6   	movff	_V+70,postinc1
  2494  0023D8  0060  F29F  FFE6   	movff	_V+71,postinc1
  2495  0023DE  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2496  0023E4  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2497  0023EA  0E35               	movlw	STR_5& (0+255)
  2498  0023EC  6EE6               	movwf	postinc1,c
  2499  0023EE  0E60               	movlw	_V& (0+255)
  2500  0023F0  0F06               	addlw	6
  2501  0023F2  6EE6               	movwf	postinc1,c
  2502  0023F4  0E08               	movlw	8
  2503  0023F6  6EE6               	movwf	postinc1,c
  2504  0023F8  ECF2  F02A         	call	_sprintf	;wreg free
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;main.c: 504:     V.buf[16] = 0;
  2508  0023FC  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;main.c: 505:     wait_lcd_done();
  2512  0023FE  EC80  F034         	call	_wait_lcd_done	;wreg free
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;main.c: 506:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2516  002402  0E60               	movlw	_V& (0+255)
  2517  002404  0F06               	addlw	6
  2518  002406  6EE6               	movwf	postinc1,c
  2519  002408  0E00               	movlw	0
  2520  00240A  6EE6               	movwf	postinc1,c
  2521  00240C  0E02               	movlw	2
  2522  00240E  6EE6               	movwf	postinc1,c
  2523  002410  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2524                           
  2525                           ; BSR set to: 59
  2526                           ;main.c: 510:     if (V.g_state == GEM_STATE_REMOTE && V.s_state == SEQ_STATE_RX) {
  2527  002414  0E04               	movlw	4
  2528  002416  0100               	movlb	0	; () banked
  2529  002418  1962               	xorwf	(_V+2)& (0+255),w,b	;volatile
  2530  00241A  A4D8               	btfss	status,2,c
  2531  00241C  D0FB               	goto	l1287
  2532                           
  2533                           ; BSR set to: 0
  2534  00241E  0560               	decf	_V& (0+255),w,b	;volatile
  2535  002420  A4D8               	btfss	status,2,c
  2536  002422  D0F8               	goto	l1287
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;main.c: 511:      if (TimerDone(TMR_HBIO)) {
  2540  002424  0E06               	movlw	6
  2541  002426  6EE6               	movwf	postinc1,c
  2542  002428  EC6E  F032         	call	_TimerDone	;wreg free
  2543  00242C  503D               	movf	btemp,w,c
  2544  00242E  B4D8               	btfsc	status,2,c
  2545  002430  D0F1               	goto	l1287
  2546                           
  2547                           ;main.c: 512:       StartTimer(TMR_HBIO, 30000);
  2548  002432  0E30               	movlw	48
  2549  002434  6EE6               	movwf	postinc1,c
  2550  002436  0E75               	movlw	117
  2551  002438  6EE6               	movwf	postinc1,c
  2552  00243A  0E06               	movlw	6
  2553  00243C  6EE6               	movwf	postinc1,c
  2554  00243E  ECCB  F030         	call	_StartTimer	;wreg free
  2555                           
  2556                           ;main.c: 514:       hb_message();
  2557  002442  ECFA  F034         	call	_hb_message	;wreg free
  2558                           
  2559                           ;main.c: 519:    break;
  2560                           
  2561                           ;main.c: 518:    }
  2562  002446  D0E6               	goto	l1287
  2563  002448                     l1274:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;main.c: 523:     V.m_l_state = LINK_STATE_IDLE;
  2567  002448  6B63               	clrf	(_V+3)& (0+255),b	;volatile
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;main.c: 524:     V.s_state = SEQ_STATE_RX;
  2571  00244A  0E01               	movlw	1
  2572  00244C  6F60               	movwf	_V& (0+255),b	;volatile
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;main.c: 525:     sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer
      +                          _error, V.checksum_error);
  2576  00244E  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2577  002454  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2578  00245A  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2579  002460  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2580  002466  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2581  002468  6EE6               	movwf	postinc1,c
  2582  00246A  0E00               	movlw	0
  2583  00246C  6EE6               	movwf	postinc1,c
  2584  00246E  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2585  002470  6EE6               	movwf	postinc1,c
  2586  002472  0E00               	movlw	0
  2587  002474  6EE6               	movwf	postinc1,c
  2588  002476  0E01               	movlw	STR_11& (0+255)
  2589  002478  6EE6               	movwf	postinc1,c
  2590  00247A  0E60               	movlw	_V& (0+255)
  2591  00247C  0F06               	addlw	6
  2592  00247E  6EE6               	movwf	postinc1,c
  2593  002480  0E0A               	movlw	10
  2594  002482  6EE6               	movwf	postinc1,c
  2595  002484  ECF2  F02A         	call	_sprintf	;wreg free
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;main.c: 526:     V.buf[16] = 0;
  2599  002488  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;main.c: 527:     wait_lcd_done();
  2603  00248A  EC80  F034         	call	_wait_lcd_done	;wreg free
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;main.c: 528:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2607  00248E  0E60               	movlw	_V& (0+255)
  2608  002490  0F06               	addlw	6
  2609  002492  6EE6               	movwf	postinc1,c
  2610  002494  0E00               	movlw	0
  2611  002496  6EE6               	movwf	postinc1,c
  2612  002498  0E02               	movlw	2
  2613  00249A  6EE6               	movwf	postinc1,c
  2614  00249C  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2615                           
  2616                           ; BSR set to: 59
  2617                           ;main.c: 530:     if (LATEbits.LATE0) {
  2618  0024A0  A0BE               	btfss	16318,0,c	;volatile
  2619  0024A2  D005               	goto	l9555
  2620                           
  2621                           ; BSR set to: 59
  2622                           ;main.c: 531:      UART2_put_buffer(0x05);
  2623  0024A4  0E05               	movlw	5
  2624  0024A6  6EE6               	movwf	postinc1,c
  2625  0024A8  EC30  F032         	call	_UART2_put_buffer	;wreg free
  2626                           
  2627                           ;main.c: 532:     } else {
  2628  0024AC  D072               	goto	l9585
  2629  0024AE                     l9555:
  2630                           
  2631                           ; BSR set to: 59
  2632                           ;main.c: 533:      UART1_put_buffer(0x05);
  2633  0024AE  0E05               	movlw	5
  2634  0024B0  6EE6               	movwf	postinc1,c
  2635  0024B2  EC45  F032         	call	_UART1_put_buffer	;wreg free
  2636  0024B6  D06D               	goto	l9585
  2637  0024B8                     l9557:
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;main.c: 541:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2641  0024B8  0E60               	movlw	_V& (0+255)
  2642  0024BA  0F03               	addlw	3
  2643  0024BC  6EE6               	movwf	postinc1,c
  2644  0024BE  EC61  F013         	call	_m_protocol	;wreg free
  2645  0024C2  0E04               	movlw	4
  2646  0024C4  183D               	xorwf	btemp,w,c
  2647  0024C6  A4D8               	btfss	status,2,c
  2648  0024C8  D02D               	goto	l9569
  2649                           
  2650                           ;main.c: 542:      sprintf(V.buf, " S%dF%d #%ld      ", V.stream, V.function, V.ticks);
  2651  0024CA  0060  F29B  FFE6   	movff	_V+70,postinc1
  2652  0024D0  0060  F29F  FFE6   	movff	_V+71,postinc1
  2653  0024D6  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2654  0024DC  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2655  0024E2  0100               	movlb	0	; () banked
  2656  0024E4  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2657  0024E6  6EE6               	movwf	postinc1,c
  2658  0024E8  0E00               	movlw	0
  2659  0024EA  6EE6               	movwf	postinc1,c
  2660  0024EC  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2661  0024EE  6EE6               	movwf	postinc1,c
  2662  0024F0  0E00               	movlw	0
  2663  0024F2  6EE6               	movwf	postinc1,c
  2664  0024F4  0E4A               	movlw	STR_12& (0+255)
  2665  0024F6  6EE6               	movwf	postinc1,c
  2666  0024F8  0E60               	movlw	_V& (0+255)
  2667  0024FA  0F06               	addlw	6
  2668  0024FC  6EE6               	movwf	postinc1,c
  2669  0024FE  0E0A               	movlw	10
  2670  002500  6EE6               	movwf	postinc1,c
  2671  002502  ECF2  F02A         	call	_sprintf	;wreg free
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;main.c: 543:      V.buf[13] = 0;
  2675  002506  6B73               	clrf	(_V+19)& (0+255),b	;volatile
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;main.c: 544:      wait_lcd_done();
  2679  002508  EC80  F034         	call	_wait_lcd_done	;wreg free
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;main.c: 545:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2683  00250C  0E60               	movlw	_V& (0+255)
  2684  00250E  0F06               	addlw	6
  2685  002510  6EE6               	movwf	postinc1,c
  2686  002512  0E00               	movlw	0
  2687  002514  6EE6               	movwf	postinc1,c
  2688  002516  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2689  002518  6EE6               	movwf	postinc1,c
  2690  00251A  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2691                           
  2692                           ; BSR set to: 59
  2693                           ;main.c: 546:      V.s_state = SEQ_STATE_TRIGGER;
  2694  00251E  0E03               	movlw	3
  2695  002520  0100               	movlb	0	; () banked
  2696  002522  6F60               	movwf	_V& (0+255),b	;volatile
  2697  002524                     l9569:
  2698                           
  2699                           ;main.c: 548:     if (V.m_l_state == LINK_STATE_ERROR)
  2700  002524  0E06               	movlw	6
  2701  002526  0100               	movlb	0	; () banked
  2702  002528  1963               	xorwf	(_V+3)& (0+255),w,b	;volatile
  2703  00252A  A4D8               	btfss	status,2,c
  2704  00252C  D032               	goto	l9585
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;main.c: 549:      V.s_state = SEQ_STATE_ERROR;
  2708  00252E  0E06               	movlw	6
  2709  002530  6F60               	movwf	_V& (0+255),b	;volatile
  2710  002532  D02F               	goto	l9585
  2711  002534                     l9573:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;main.c: 552:     V.s_state = SEQ_STATE_DONE;
  2715  002534  0E05               	movlw	5
  2716  002536  6F60               	movwf	_V& (0+255),b	;volatile
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;main.c: 553:     sprintf(V.buf, " OK #");
  2720  002538  0EA9               	movlw	STR_8& (0+255)
  2721  00253A  6EE6               	movwf	postinc1,c
  2722  00253C  0E60               	movlw	_V& (0+255)
  2723  00253E  0F06               	addlw	6
  2724  002540  6EE6               	movwf	postinc1,c
  2725  002542  0E02               	movlw	2
  2726  002544  6EE6               	movwf	postinc1,c
  2727  002546  ECF2  F02A         	call	_sprintf	;wreg free
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;main.c: 554:     wait_lcd_done();
  2731  00254A  EC80  F034         	call	_wait_lcd_done	;wreg free
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;main.c: 555:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  2735  00254E  0E60               	movlw	_V& (0+255)
  2736  002550  0F06               	addlw	6
  2737  002552  6EE6               	movwf	postinc1,c
  2738  002554  0E0D               	movlw	13
  2739  002556  6EE6               	movwf	postinc1,c
  2740  002558  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2741  00255A  6EE6               	movwf	postinc1,c
  2742  00255C  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2743                           
  2744                           ;main.c: 556:     break;
  2745  002560  D018               	goto	l9585
  2746  002562                     l1282:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;main.c: 562:     V.s_state = SEQ_STATE_INIT;
  2750                           
  2751                           ;main.c: 561:    default:
  2752                           
  2753                           ;main.c: 559:     break;
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;main.c: 558:     V.s_state = SEQ_STATE_INIT;
  2757  002562  6B60               	clrf	_V& (0+255),b	;volatile
  2758                           
  2759                           ;main.c: 563:     break;
  2760  002564  D016               	goto	l9585
  2761  002566                     l9583:
  2762                           
  2763                           ; BSR set to: 0
  2764  002566  5160               	movf	_V& (0+255),w,b	;volatile
  2765  002568  6E47               	movwf	btemp+10,c
  2766  00256A  6A48               	clrf	btemp+11,c
  2767                           
  2768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2769                           ; Switch size 1, requested type "simple"
  2770                           ; Number of cases is 1, Range of values is 0 to 0
  2771                           ; switch strategies available:
  2772                           ; Name         Instructions Cycles
  2773                           ; simple_byte            4     3 (average)
  2774                           ;	Chosen strategy is simple_byte
  2775  00256C  5048               	movf	btemp+11,w,c
  2776  00256E  0A00               	xorlw	0	; case 0
  2777  002570  A4D8               	btfss	status,2,c
  2778  002572  D7F7               	goto	l1282
  2779                           
  2780                           ; BSR set to: 0
  2781                           ; Switch size 1, requested type "simple"
  2782                           ; Number of cases is 5, Range of values is 0 to 6
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte           16     9 (average)
  2786                           ;	Chosen strategy is simple_byte
  2787  002574  5047               	movf	btemp+10,w,c
  2788  002576  0A00               	xorlw	0	; case 0
  2789  002578  B4D8               	btfsc	status,2,c
  2790  00257A  D766               	goto	l1274
  2791  00257C  0A01               	xorlw	1	; case 1
  2792  00257E  B4D8               	btfsc	status,2,c
  2793  002580  D79B               	goto	l9557
  2794  002582  0A02               	xorlw	2	; case 3
  2795  002584  B4D8               	btfsc	status,2,c
  2796  002586  D7D6               	goto	l9573
  2797  002588  0A06               	xorlw	6	; case 5
  2798  00258A  B4D8               	btfsc	status,2,c
  2799  00258C  D7EA               	goto	l1282
  2800  00258E  0A03               	xorlw	3	; case 6
  2801  002590  D7E8               	goto	l1282
  2802  002592                     l9585:
  2803                           
  2804                           ;main.c: 565:    sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer_
      +                          error, V.checksum_error);
  2805  002592  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2806  002598  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2807  00259E  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2808  0025A4  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2809  0025AA  0100               	movlb	0	; () banked
  2810  0025AC  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2811  0025AE  6EE6               	movwf	postinc1,c
  2812  0025B0  0E00               	movlw	0
  2813  0025B2  6EE6               	movwf	postinc1,c
  2814  0025B4  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2815  0025B6  6EE6               	movwf	postinc1,c
  2816  0025B8  0E00               	movlw	0
  2817  0025BA  6EE6               	movwf	postinc1,c
  2818  0025BC  0E01               	movlw	STR_11& (0+255)
  2819  0025BE  6EE6               	movwf	postinc1,c
  2820  0025C0  0E60               	movlw	_V& (0+255)
  2821  0025C2  0F06               	addlw	6
  2822  0025C4  6EE6               	movwf	postinc1,c
  2823  0025C6  0E0A               	movlw	10
  2824  0025C8  6EE6               	movwf	postinc1,c
  2825  0025CA  ECF2  F02A         	call	_sprintf	;wreg free
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;main.c: 566:    V.buf[16] = 0;
  2829  0025CE  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;main.c: 567:    wait_lcd_done();
  2833  0025D0  EC80  F034         	call	_wait_lcd_done	;wreg free
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;main.c: 568:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  2837  0025D4  0E60               	movlw	_V& (0+255)
  2838  0025D6  0F06               	addlw	6
  2839  0025D8  6EE6               	movwf	postinc1,c
  2840  0025DA  0E00               	movlw	0
  2841  0025DC  6EE6               	movwf	postinc1,c
  2842  0025DE  0E02               	movlw	2
  2843  0025E0  6EE6               	movwf	postinc1,c
  2844  0025E2  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  2845                           
  2846                           ;main.c: 569:    break;
  2847  0025E6  D016               	goto	l1287
  2848  0025E8                     l1286:
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;main.c: 572:    V.ui_state = UI_STATE_INIT;
  2852  0025E8  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  2853                           
  2854                           ;main.c: 573:    break;
  2855  0025EA  D014               	goto	l1287
  2856  0025EC                     l9595:
  2857  0025EC  0100               	movlb	0	; () banked
  2858  0025EE  5161               	movf	(_V+1)& (0+255),w,b	;volatile
  2859  0025F0  6E47               	movwf	btemp+10,c
  2860  0025F2  6A48               	clrf	btemp+11,c
  2861                           
  2862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2863                           ; Switch size 1, requested type "simple"
  2864                           ; Number of cases is 1, Range of values is 0 to 0
  2865                           ; switch strategies available:
  2866                           ; Name         Instructions Cycles
  2867                           ; simple_byte            4     3 (average)
  2868                           ;	Chosen strategy is simple_byte
  2869  0025F4  5048               	movf	btemp+11,w,c
  2870  0025F6  0A00               	xorlw	0	; case 0
  2871  0025F8  A4D8               	btfss	status,2,c
  2872  0025FA  D7F6               	goto	l1286
  2873                           
  2874                           ; BSR set to: 0
  2875                           ; Switch size 1, requested type "simple"
  2876                           ; Number of cases is 4, Range of values is 0 to 4
  2877                           ; switch strategies available:
  2878                           ; Name         Instructions Cycles
  2879                           ; simple_byte           13     7 (average)
  2880                           ;	Chosen strategy is simple_byte
  2881  0025FC  5047               	movf	btemp+10,w,c
  2882  0025FE  0A00               	xorlw	0	; case 0
  2883  002600  B4D8               	btfsc	status,2,c
  2884  002602  D582               	goto	l9411
  2885  002604  0A01               	xorlw	1	; case 1
  2886  002606  B4D8               	btfsc	status,2,c
  2887  002608  D6BE               	goto	l9517
  2888  00260A  0A02               	xorlw	2	; case 3
  2889  00260C  B4D8               	btfsc	status,2,c
  2890  00260E  D7AB               	goto	l9583
  2891  002610  0A07               	xorlw	7	; case 4
  2892  002612  D7EA               	goto	l1286
  2893  002614                     l1287:
  2894  002614  84BE               	bsf	16318,2,c	;volatile
  2895                           
  2896                           ;main.c: 576:   if (V.ticks) {
  2897  002616  0100               	movlb	0	; () banked
  2898  002618  51A6               	movf	(_V+70)& (0+255),w,b	;volatile
  2899  00261A  11A7               	iorwf	(_V+71)& (0+255),w,b	;volatile
  2900  00261C  11A8               	iorwf	(_V+72)& (0+255),w,b	;volatile
  2901  00261E  11A9               	iorwf	(_V+73)& (0+255),w,b	;volatile
  2902  002620  B4D8               	btfsc	status,2,c
  2903  002622  D016               	goto	l9603
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;main.c: 577:    if (V.failed_receive) {
  2907  002624  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2908  002626  0B0F               	andlw	15
  2909  002628  0900               	iorlw	0
  2910  00262A  B4D8               	btfsc	status,2,c
  2911  00262C  D003               	goto	l1296
  2912                           
  2913                           ; BSR set to: 0
  2914                           
  2915                           ;main.c: 578:     do { LATDbits.LATD4 = 0; } while(0);
  2916  00262E  98BD               	bcf	16317,4,c	;volatile
  2917                           
  2918                           ; BSR set to: 0
  2919                           
  2920                           ;main.c: 579:     do { LATDbits.LATD5 = 1; } while(0);
  2921  002630  8ABD               	bsf	16317,5,c	;volatile
  2922  002632  D002               	goto	l9601
  2923  002634                     l1296:
  2924                           
  2925                           ; BSR set to: 0
  2926  002634  88BD               	bsf	16317,4,c	;volatile
  2927                           
  2928                           ; BSR set to: 0
  2929                           
  2930                           ;main.c: 582:     do { LATDbits.LATD5 = 0; } while(0);
  2931  002636  9ABD               	bcf	16317,5,c	;volatile
  2932  002638                     l9601:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;main.c: 584:    if (V.failed_send) {
  2936  002638  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2937  00263A  32E8               	rrcf	wreg,f,c
  2938  00263C  32E8               	rrcf	wreg,f,c
  2939  00263E  0B0F               	andlw	15
  2940  002640  0900               	iorlw	0
  2941  002642  B4D8               	btfsc	status,2,c
  2942  002644  D003               	goto	l1306
  2943                           
  2944                           ; BSR set to: 0
  2945                           
  2946                           ;main.c: 585:     do { LATDbits.LATD6 = 0; } while(0);
  2947  002646  9CBD               	bcf	16317,6,c	;volatile
  2948                           
  2949                           ; BSR set to: 0
  2950                           
  2951                           ;main.c: 586:     do { LATDbits.LATD7 = 1; } while(0);
  2952  002648  8EBD               	bsf	16317,7,c	;volatile
  2953  00264A  D002               	goto	l9603
  2954  00264C                     l1306:
  2955                           
  2956                           ; BSR set to: 0
  2957  00264C  8CBD               	bsf	16317,6,c	;volatile
  2958                           
  2959                           ; BSR set to: 0
  2960                           
  2961                           ;main.c: 589:     do { LATDbits.LATD7 = 0; } while(0);
  2962  00264E  9EBD               	bcf	16317,7,c	;volatile
  2963  002650                     l9603:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;main.c: 592:   sprintf(V.buf, "R%d %d, T%d %d C%d      #", V.r_l_state, V.failed_receiv
      +                          e, V.t_l_state, V.failed_send, V.checksum_error);
  2967  002650  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2968  002656  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2969  00265C  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2970  00265E  32E8               	rrcf	wreg,f,c
  2971  002660  32E8               	rrcf	wreg,f,c
  2972  002662  0B0F               	andlw	15
  2973  002664  6EE6               	movwf	postinc1,c
  2974  002666  0E00               	movlw	0
  2975  002668  6EE6               	movwf	postinc1,c
  2976  00266A  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2977  00266C  6EE6               	movwf	postinc1,c
  2978  00266E  0E00               	movlw	0
  2979  002670  6EE6               	movwf	postinc1,c
  2980  002672  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2981  002674  0B0F               	andlw	15
  2982  002676  6EE6               	movwf	postinc1,c
  2983  002678  0E00               	movlw	0
  2984  00267A  6EE6               	movwf	postinc1,c
  2985  00267C  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2986  00267E  6EE6               	movwf	postinc1,c
  2987  002680  0E00               	movlw	0
  2988  002682  6EE6               	movwf	postinc1,c
  2989  002684  0E1B               	movlw	STR_15& (0+255)
  2990  002686  6EE6               	movwf	postinc1,c
  2991  002688  0E60               	movlw	_V& (0+255)
  2992  00268A  0F06               	addlw	6
  2993  00268C  6EE6               	movwf	postinc1,c
  2994  00268E  0E0C               	movlw	12
  2995  002690  6EE6               	movwf	postinc1,c
  2996  002692  ECF2  F02A         	call	_sprintf	;wreg free
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;main.c: 593:   V.buf[16] = 0;
  3000  002696  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;main.c: 594:   wait_lcd_done();
  3004  002698  EC80  F034         	call	_wait_lcd_done	;wreg free
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;main.c: 595:   if (mode != UI_STATE_LOG)
  3008                           ;stkvar	_mode @ sp[(-1)+0]
  3009  00269C  0EFF               	movlw	-1
  3010  00269E  006F FF8C  F03D    	movff	plusw1,btemp
  3011  0026A4  0E03               	movlw	3
  3012  0026A6  183D               	xorwf	btemp,w,c
  3013  0026A8  B4D8               	btfsc	status,2,c
  3014  0026AA  D009               	goto	l9613
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;main.c: 596:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  3018  0026AC  0E60               	movlw	_V& (0+255)
  3019  0026AE  0F06               	addlw	6
  3020  0026B0  6EE6               	movwf	postinc1,c
  3021  0026B2  0E00               	movlw	0
  3022  0026B4  6EE6               	movwf	postinc1,c
  3023  0026B6  0E01               	movlw	1
  3024  0026B8  6EE6               	movwf	postinc1,c
  3025  0026BA  ECD8  F031         	call	_eaDogM_WriteStringAtPos	;wreg free
  3026  0026BE                     l9613:
  3027  0026BE  94BE               	bcf	16318,2,c	;volatile
  3028  0026C0  D795               	goto	l9595
  3029  0026C2                     __end_of_main:
  3030                           	opt callstack 0
  3031                           
  3032 ;; *************** function _t_protocol *****************
  3033 ;; Defined at:
  3034 ;;		line 334 in file "gemsecs.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  t_link          1  [STACK] PTR enum E16173
  3037 ;;		 -> V(98), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  rxData          1  [STACK] unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1  [STACK] enum E16913
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    7
  3056 ;; This function calls:
  3057 ;;		_StartTimer
  3058 ;;		_TimerDone
  3059 ;;		_UART1_Read
  3060 ;;		_UART1_Write
  3061 ;;		_UART1_is_rx_ready
  3062 ;;		_UART1_put_buffer
  3063 ;;		_WaitMs
  3064 ;;		_rand
  3065 ;;		_secs_II_message
  3066 ;;		_secs_send
  3067 ;; This function is called by:
  3068 ;;		_main
  3069 ;; This function uses a reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text1
  3073  003B9E                     __ptext1:
  3074                           	opt callstack 0
  3075  003B9E                     _t_protocol:
  3076                           	opt callstack 0
  3077                           
  3078                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3079  003B9E  52E6               	movf	postinc1,f,c
  3080                           
  3081                           ;gemsecs.c: 334: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 335: {;gemsecs.
      +                          c: 336:  uint8_t rxData;;gemsecs.c: 337:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          338:  static response_type block;;gemsecs.c: 340:  switch (*t_link) {
  3082                           
  3083                           ;incstack = 0
  3084  003BA0  D134               	goto	l9161
  3085  003BA2                     l9053:
  3086                           
  3087                           ;gemsecs.c: 342:   V.error = LINK_ERROR_NONE;
  3088  003BA2  0E0A               	movlw	10
  3089  003BA4  0100               	movlb	0	; () banked
  3090  003BA6  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3091                           
  3092                           ;gemsecs.c: 343:   retry = 3;
  3093  003BA8  0E03               	movlw	3
  3094  003BAA  6E2D               	movwf	t_protocol@retry,c
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;gemsecs.c: 344:   UART1_Write(0x05);
  3098  003BAC  0E05               	movlw	5
  3099  003BAE  6EE6               	movwf	postinc1,c
  3100  003BB0  EC2A  F031         	call	_UART1_Write	;wreg free
  3101                           
  3102                           ; BSR set to: 57
  3103                           ;gemsecs.c: 345:   StartTimer(TMR_T2, 2000);
  3104  003BB4  0ED0               	movlw	208
  3105  003BB6  6EE6               	movwf	postinc1,c
  3106  003BB8  0E07               	movlw	7
  3107  003BBA  6EE6               	movwf	postinc1,c
  3108  003BBC  0E02               	movlw	2
  3109  003BBE  6EE6               	movwf	postinc1,c
  3110  003BC0  ECCB  F030         	call	_StartTimer	;wreg free
  3111                           
  3112                           ;gemsecs.c: 346:   *t_link = LINK_STATE_ENQ;
  3113                           ;stkvar	_t_link @ sp[(-1)+-1]
  3114  003BC4  0EFE               	movlw	-2
  3115  003BC6  50E3               	movf	plusw1,w,c
  3116  003BC8  6ED9               	movwf	fsr2l,c
  3117  003BCA  6ADA               	clrf	fsr2h,c
  3118  003BCC  0E01               	movlw	1
  3119  003BCE  6EDF               	movwf	indf2,c
  3120                           
  3121                           ;gemsecs.c: 348:   WaitMs(5);
  3122  003BD0  0E05               	movlw	5
  3123  003BD2  6EE6               	movwf	postinc1,c
  3124  003BD4  0E00               	movlw	0
  3125  003BD6  6EE6               	movwf	postinc1,c
  3126  003BD8  ECA3  F031         	call	_WaitMs	;wreg free
  3127                           
  3128                           ;gemsecs.c: 349:   UART1_put_buffer(0x04);
  3129  003BDC  0E04               	movlw	4
  3130  003BDE  6EE6               	movwf	postinc1,c
  3131  003BE0  EC45  F032         	call	_UART1_put_buffer	;wreg free
  3132                           
  3133                           ;gemsecs.c: 351:   break;
  3134  003BE4  D133               	goto	l9163
  3135  003BE6                     l9065:
  3136                           
  3137                           ;gemsecs.c: 353:   if (TimerDone(TMR_T2)) {
  3138  003BE6  0E02               	movlw	2
  3139  003BE8  6EE6               	movwf	postinc1,c
  3140  003BEA  EC6E  F032         	call	_TimerDone	;wreg free
  3141  003BEE  503D               	movf	btemp,w,c
  3142  003BF0  B4D8               	btfsc	status,2,c
  3143  003BF2  D01C               	goto	l9077
  3144                           
  3145                           ;gemsecs.c: 354:    V.timer_error++;
  3146  003BF4  0100               	movlb	0	; () banked
  3147  003BF6  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  3148  003BF8  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;gemsecs.c: 355:    if (!retry--) {
  3152  003BFA  062D               	decf	t_protocol@retry,f,c
  3153  003BFC  282D               	incf	t_protocol@retry,w,c
  3154  003BFE  A4D8               	btfss	status,2,c
  3155  003C00  D00C               	goto	l9075
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;gemsecs.c: 356:     V.error = LINK_ERROR_T2;
  3159  003C02  0E0C               	movlw	12
  3160  003C04  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3161                           
  3162                           ;gemsecs.c: 357:     V.failed_send = 1;
  3163  003C06  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3164  003C08  0B87               	andlw	-121
  3165  003C0A  0908               	iorlw	8
  3166  003C0C  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;gemsecs.c: 358:     *t_link = LINK_STATE_NAK;
  3170                           ;stkvar	_t_link @ sp[(-1)+-1]
  3171  003C0E  0EFE               	movlw	-2
  3172  003C10  50E3               	movf	plusw1,w,c
  3173  003C12  6ED9               	movwf	fsr2l,c
  3174  003C14  6ADA               	clrf	fsr2h,c
  3175  003C16  0E05               	movlw	5
  3176  003C18  D0F6               	goto	L2
  3177  003C1A                     l9075:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;gemsecs.c: 360:     StartTimer(TMR_T2, 2000);
  3181  003C1A  0ED0               	movlw	208
  3182  003C1C  6EE6               	movwf	postinc1,c
  3183  003C1E  0E07               	movlw	7
  3184  003C20  6EE6               	movwf	postinc1,c
  3185  003C22  0E02               	movlw	2
  3186  003C24  6EE6               	movwf	postinc1,c
  3187  003C26  ECCB  F030         	call	_StartTimer	;wreg free
  3188  003C2A  D110               	goto	l9163
  3189  003C2C                     l9077:
  3190                           
  3191                           ;gemsecs.c: 363:    if (UART1_is_rx_ready()) {
  3192  003C2C  EC41  F035         	call	_UART1_is_rx_ready	;wreg free
  3193  003C30  503D               	movf	btemp,w,c
  3194  003C32  B4D8               	btfsc	status,2,c
  3195  003C34  D10B               	goto	l9163
  3196                           
  3197                           ;gemsecs.c: 364:     rxData = UART1_Read();
  3198  003C36  EC68  F031         	call	_UART1_Read	;wreg free
  3199                           
  3200                           ;stkvar	_rxData @ sp[(-1)+0]
  3201  003C3A  0EFF               	movlw	-1
  3202  003C3C  0060  F0F7  FFE3   	movff	btemp,plusw1
  3203                           
  3204                           ; BSR set to: 57
  3205                           ;gemsecs.c: 365:     if (rxData == 0x04) {
  3206                           ;stkvar	_rxData @ sp[(-1)+0]
  3207  003C42  0EFF               	movlw	-1
  3208  003C44  006F FF8C  F03D    	movff	plusw1,btemp
  3209  003C4A  0E04               	movlw	4
  3210  003C4C  183D               	xorwf	btemp,w,c
  3211  003C4E  A4D8               	btfss	status,2,c
  3212  003C50  D00E               	goto	l9087
  3213                           
  3214                           ; BSR set to: 57
  3215                           ;gemsecs.c: 366:      StartTimer(TMR_T3, 5000);
  3216  003C52  0E88               	movlw	136
  3217  003C54  6EE6               	movwf	postinc1,c
  3218  003C56  0E13               	movlw	19
  3219  003C58  6EE6               	movwf	postinc1,c
  3220  003C5A  0E03               	movlw	3
  3221  003C5C  6EE6               	movwf	postinc1,c
  3222  003C5E  ECCB  F030         	call	_StartTimer	;wreg free
  3223                           
  3224                           ;gemsecs.c: 367:      *t_link = LINK_STATE_EOT;
  3225                           ;stkvar	_t_link @ sp[(-1)+-1]
  3226  003C62  0EFE               	movlw	-2
  3227  003C64  50E3               	movf	plusw1,w,c
  3228  003C66  6ED9               	movwf	fsr2l,c
  3229  003C68  6ADA               	clrf	fsr2h,c
  3230  003C6A  0E02               	movlw	2
  3231  003C6C  6EDF               	movwf	indf2,c
  3232  003C6E                     l9087:
  3233                           
  3234                           ;gemsecs.c: 369:     if (rxData == 0x05) {
  3235                           ;stkvar	_rxData @ sp[(-1)+0]
  3236  003C6E  0EFF               	movlw	-1
  3237  003C70  006F FF8C  F03D    	movff	plusw1,btemp
  3238  003C76  0E05               	movlw	5
  3239  003C78  183D               	xorwf	btemp,w,c
  3240  003C7A  A4D8               	btfss	status,2,c
  3241  003C7C  D0E7               	goto	l9163
  3242                           
  3243                           ;gemsecs.c: 370:      UART1_put_buffer(0x04);
  3244  003C7E  0E04               	movlw	4
  3245  003C80  6EE6               	movwf	postinc1,c
  3246  003C82  EC45  F032         	call	_UART1_put_buffer	;wreg free
  3247  003C86                     l9091:
  3248                           
  3249                           ;gemsecs.c: 371:      *t_link = LINK_STATE_DONE;
  3250                           ;stkvar	_t_link @ sp[(-1)+-1]
  3251  003C86  0EFE               	movlw	-2
  3252  003C88  50E3               	movf	plusw1,w,c
  3253  003C8A  6ED9               	movwf	fsr2l,c
  3254  003C8C  6ADA               	clrf	fsr2h,c
  3255  003C8E  0E04               	movlw	4
  3256  003C90  D0BA               	goto	L2
  3257  003C92                     l9093:
  3258                           
  3259                           ;gemsecs.c: 377:   if (!requeue)
  3260  003C92  502C               	movf	t_protocol@requeue,w,c
  3261  003C94  A4D8               	btfss	status,2,c
  3262  003C96  D010               	goto	l9097
  3263                           
  3264                           ;gemsecs.c: 378:    block = secs_II_message(V.stream, V.function);
  3265  003C98  0100               	movlb	0	; () banked
  3266  003C9A  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  3267  003C9C  6EE6               	movwf	postinc1,c
  3268  003C9E  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  3269  003CA0  6EE6               	movwf	postinc1,c
  3270  003CA2  EC8E  F020         	call	_secs_II_message	;wreg free
  3271  003CA6  EE20  F0DB         	lfsr	2,t_protocol@block
  3272  003CAA  0E06               	movlw	6
  3273  003CAC                     u5801:
  3274  003CAC  52E5               	movf	postdec1,f,c
  3275  003CAE  006F FF9F FFDB     	movff	indf1,plusw2
  3276  003CB4  06E8               	decf	wreg,f,c
  3277  003CB6  E2FA               	bc	u5801
  3278  003CB8                     l9097:
  3279                           
  3280                           ;gemsecs.c: 380:   if (V.abort == LINK_ERROR_ABORT) {
  3281  003CB8  0E11               	movlw	17
  3282  003CBA  0100               	movlb	0	; () banked
  3283  003CBC  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  3284  003CBE  A4D8               	btfss	status,2,c
  3285  003CC0  D019               	goto	l9105
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;gemsecs.c: 381:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  3289  003CC2  0E01               	movlw	1
  3290  003CC4  6EE6               	movwf	postinc1,c
  3291  003CC6  0E00               	movlw	0
  3292  003CC8  6EE6               	movwf	postinc1,c
  3293  003CCA  51DD               	movf	(t_protocol@block+2)& (0+255),w,b
  3294  003CCC  6EE6               	movwf	postinc1,c
  3295  003CCE  0060  F36F  FFE6   	movff	t_protocol@block,postinc1
  3296  003CD4  0060  F373  FFE6   	movff	t_protocol@block+1,postinc1
  3297  003CDA  EC0F  F023         	call	_secs_send	;wreg free
  3298                           
  3299                           ;gemsecs.c: 382:    V.failed_send = 2;
  3300  003CDE  0100               	movlb	0	; () banked
  3301  003CE0  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3302  003CE2  0B87               	andlw	-121
  3303  003CE4  0910               	iorlw	16
  3304  003CE6  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;gemsecs.c: 383:    *t_link = LINK_STATE_ERROR;
  3308                           ;stkvar	_t_link @ sp[(-1)+-1]
  3309  003CE8  0EFE               	movlw	-2
  3310  003CEA  50E3               	movf	plusw1,w,c
  3311  003CEC  6ED9               	movwf	fsr2l,c
  3312  003CEE  6ADA               	clrf	fsr2h,c
  3313  003CF0  0E06               	movlw	6
  3314  003CF2  D031               	goto	L3
  3315  003CF4                     l9105:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;gemsecs.c: 385:    if (!requeue) {
  3319  003CF4  502C               	movf	t_protocol@requeue,w,c
  3320  003CF6  A4D8               	btfss	status,2,c
  3321  003CF8  D014               	goto	l1715
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;gemsecs.c: 386:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  3325  003CFA  0E01               	movlw	1
  3326  003CFC  6EE6               	movwf	postinc1,c
  3327  003CFE  0E00               	movlw	0
  3328  003D00  6EE6               	movwf	postinc1,c
  3329  003D02  51DD               	movf	(t_protocol@block+2)& (0+255),w,b
  3330  003D04  6EE6               	movwf	postinc1,c
  3331  003D06  0060  F36F  FFE6   	movff	t_protocol@block,postinc1
  3332  003D0C  0060  F373  FFE6   	movff	t_protocol@block+1,postinc1
  3333  003D12  EC0F  F023         	call	_secs_send	;wreg free
  3334                           
  3335                           ;gemsecs.c: 387:     if (V.queue)
  3336  003D16  0100               	movlb	0	; () banked
  3337  003D18  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  3338  003D1A  D013               	goto	l9115
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;gemsecs.c: 388:      requeue = 1;
  3342  003D1C  0E01               	movlw	1
  3343  003D1E  6E2C               	movwf	t_protocol@requeue,c
  3344  003D20  D010               	goto	l9115
  3345  003D22                     l1715:
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;gemsecs.c: 390:     requeue = 0;
  3349  003D22  6A2C               	clrf	t_protocol@requeue,c
  3350                           
  3351                           ;gemsecs.c: 391:     V.queue = 0;
  3352  003D24  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;gemsecs.c: 392:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  3356  003D26  0E01               	movlw	1
  3357  003D28  6EE6               	movwf	postinc1,c
  3358  003D2A  0E00               	movlw	0
  3359  003D2C  6EE6               	movwf	postinc1,c
  3360  003D2E  51E0               	movf	(t_protocol@block+5)& (0+255),w,b
  3361  003D30  6EE6               	movwf	postinc1,c
  3362  003D32  0060  F37B  FFE6   	movff	t_protocol@block+3,postinc1
  3363  003D38  0060  F37F  FFE6   	movff	t_protocol@block+4,postinc1
  3364  003D3E  EC0F  F023         	call	_secs_send	;wreg free
  3365  003D42                     l9115:
  3366                           
  3367                           ;gemsecs.c: 394:    if (V.error == LINK_ERROR_NONE) {
  3368  003D42  0E0A               	movlw	10
  3369  003D44  0100               	movlb	0	; () banked
  3370  003D46  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  3371  003D48  A4D8               	btfss	status,2,c
  3372  003D4A  D007               	goto	l9119
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;gemsecs.c: 395:     *t_link = LINK_STATE_ACK;
  3376                           ;stkvar	_t_link @ sp[(-1)+-1]
  3377  003D4C  0EFE               	movlw	-2
  3378  003D4E  50E3               	movf	plusw1,w,c
  3379  003D50  6ED9               	movwf	fsr2l,c
  3380  003D52  6ADA               	clrf	fsr2h,c
  3381  003D54  0E03               	movlw	3
  3382  003D56                     L3:
  3383  003D56  6EDF               	movwf	indf2,c
  3384                           
  3385                           ;gemsecs.c: 396:    } else {
  3386  003D58  D004               	goto	l9123
  3387  003D5A                     l9119:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;gemsecs.c: 397:     V.failed_send = 3;
  3391  003D5A  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3392  003D5C  0B87               	andlw	-121
  3393  003D5E  0918               	iorlw	24
  3394  003D60  D7C2               	goto	L4
  3395  003D62                     l9123:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;gemsecs.c: 402:   WaitMs(5);
  3399  003D62  0E05               	movlw	5
  3400  003D64  6EE6               	movwf	postinc1,c
  3401  003D66  0E00               	movlw	0
  3402  003D68  6EE6               	movwf	postinc1,c
  3403  003D6A  ECA3  F031         	call	_WaitMs	;wreg free
  3404                           
  3405                           ;gemsecs.c: 404:   if (rand() < 31000)
  3406  003D6E  ECD9  F026         	call	_rand	;wreg free
  3407  003D72  BE3E               	btfsc	btemp+1,7,c
  3408  003D74  D006               	goto	u5850
  3409  003D76  0E18               	movlw	24
  3410  003D78  5C3D               	subwf	btemp,w,c
  3411  003D7A  0E79               	movlw	121
  3412  003D7C  583E               	subwfb	btemp+1,w,c
  3413  003D7E  B0D8               	btfsc	status,0,c
  3414  003D80  D065               	goto	l9163
  3415  003D82                     u5850:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;gemsecs.c: 406:    UART1_put_buffer(0x06);
  3419  003D82  0E06               	movlw	6
  3420  003D84  6EE6               	movwf	postinc1,c
  3421  003D86  EC45  F032         	call	_UART1_put_buffer	;wreg free
  3422  003D8A  D060               	goto	l9163
  3423  003D8C                     l9129:
  3424                           
  3425                           ;gemsecs.c: 410:   if (TimerDone(TMR_T3)) {
  3426  003D8C  0E03               	movlw	3
  3427  003D8E  6EE6               	movwf	postinc1,c
  3428  003D90  EC6E  F032         	call	_TimerDone	;wreg free
  3429  003D94  503D               	movf	btemp,w,c
  3430  003D96  B4D8               	btfsc	status,2,c
  3431  003D98  D009               	goto	l9139
  3432                           
  3433                           ;gemsecs.c: 411:    V.timer_error++;
  3434  003D9A  0100               	movlb	0	; () banked
  3435  003D9C  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  3436  003D9E  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;gemsecs.c: 412:    V.error = LINK_ERROR_T3;
  3440  003DA0  0E0D               	movlw	13
  3441  003DA2  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;gemsecs.c: 413:    V.failed_send = 4;
  3445  003DA4  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3446  003DA6  0B87               	andlw	-121
  3447  003DA8  0920               	iorlw	32
  3448  003DAA  D730               	goto	L5
  3449  003DAC                     l9139:
  3450                           
  3451                           ;gemsecs.c: 416:    if (UART1_is_rx_ready()) {
  3452  003DAC  EC41  F035         	call	_UART1_is_rx_ready	;wreg free
  3453  003DB0  503D               	movf	btemp,w,c
  3454  003DB2  B4D8               	btfsc	status,2,c
  3455  003DB4  D04B               	goto	l9163
  3456                           
  3457                           ;gemsecs.c: 417:     rxData = UART1_Read();
  3458  003DB6  EC68  F031         	call	_UART1_Read	;wreg free
  3459                           
  3460                           ;stkvar	_rxData @ sp[(-1)+0]
  3461  003DBA  0EFF               	movlw	-1
  3462  003DBC  0060  F0F7  FFE3   	movff	btemp,plusw1
  3463                           
  3464                           ; BSR set to: 57
  3465                           ;gemsecs.c: 418:     if (rxData == 0x06) {
  3466                           ;stkvar	_rxData @ sp[(-1)+0]
  3467  003DC2  0EFF               	movlw	-1
  3468  003DC4  006F FF8C  F03D    	movff	plusw1,btemp
  3469  003DCA  0E06               	movlw	6
  3470  003DCC  183D               	xorwf	btemp,w,c
  3471  003DCE  A4D8               	btfss	status,2,c
  3472  003DD0  D03D               	goto	l9163
  3473                           
  3474                           ; BSR set to: 57
  3475                           ;gemsecs.c: 419:      V.failed_send = 0;
  3476  003DD2  0E87               	movlw	-121
  3477  003DD4  0100               	movlb	0	; () banked
  3478  003DD6  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  3479  003DD8  D756               	goto	l9091
  3480  003DDA                     l9149:
  3481                           
  3482                           ;gemsecs.c: 426:   *t_link = LINK_STATE_ERROR;
  3483                           ;stkvar	_t_link @ sp[(-1)+-1]
  3484  003DDA  0EFE               	movlw	-2
  3485  003DDC  50E3               	movf	plusw1,w,c
  3486  003DDE  6ED9               	movwf	fsr2l,c
  3487  003DE0  6ADA               	clrf	fsr2h,c
  3488  003DE2  0E06               	movlw	6
  3489  003DE4  6EDF               	movwf	indf2,c
  3490                           
  3491                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3492  003DE6  D002               	goto	l9153
  3493  003DE8                     l9151:
  3494                           
  3495                           ;gemsecs.c: 428:    UART1_Read();
  3496  003DE8  EC68  F031         	call	_UART1_Read	;wreg free
  3497  003DEC                     l9153:
  3498                           
  3499                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3500  003DEC  5037               	movf	_uart1RxCount,w,c	;volatile
  3501  003DEE  B4D8               	btfsc	status,2,c
  3502  003DF0  D02D               	goto	l9163
  3503  003DF2  D7FA               	goto	l9151
  3504  003DF4                     l9155:
  3505                           
  3506                           ;gemsecs.c: 434:   V.failed_send = 0;
  3507  003DF4  0E87               	movlw	-121
  3508  003DF6  0100               	movlb	0	; () banked
  3509  003DF8  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  3510                           
  3511                           ;gemsecs.c: 435:   break;
  3512  003DFA  D028               	goto	l9163
  3513  003DFC                     l9157:
  3514                           
  3515                           ;gemsecs.c: 437:   *t_link = LINK_STATE_IDLE;
  3516                           ;stkvar	_t_link @ sp[(-1)+-1]
  3517  003DFC  0EFE               	movlw	-2
  3518  003DFE  50E3               	movf	plusw1,w,c
  3519  003E00  6ED9               	movwf	fsr2l,c
  3520  003E02  6ADA               	clrf	fsr2h,c
  3521  003E04  0E00               	movlw	0
  3522  003E06                     L2:
  3523  003E06  6EDF               	movwf	indf2,c
  3524                           
  3525                           ;gemsecs.c: 439:   break;
  3526  003E08  D021               	goto	l9163
  3527  003E0A                     l9161:
  3528                           
  3529                           ;stkvar	_t_link @ sp[(-1)+-1]
  3530  003E0A  0EFE               	movlw	-2
  3531  003E0C  50E3               	movf	plusw1,w,c
  3532  003E0E  6ED9               	movwf	fsr2l,c
  3533  003E10  6ADA               	clrf	fsr2h,c
  3534  003E12  50DF               	movf	indf2,w,c
  3535  003E14  6E47               	movwf	btemp+10,c
  3536  003E16  6A48               	clrf	btemp+11,c
  3537                           
  3538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3539                           ; Switch size 1, requested type "simple"
  3540                           ; Number of cases is 1, Range of values is 0 to 0
  3541                           ; switch strategies available:
  3542                           ; Name         Instructions Cycles
  3543                           ; simple_byte            4     3 (average)
  3544                           ;	Chosen strategy is simple_byte
  3545  003E18  5048               	movf	btemp+11,w,c
  3546  003E1A  0A00               	xorlw	0	; case 0
  3547  003E1C  A4D8               	btfss	status,2,c
  3548  003E1E  D7EE               	goto	l9157
  3549                           
  3550                           ; Switch size 1, requested type "simple"
  3551                           ; Number of cases is 7, Range of values is 0 to 6
  3552                           ; switch strategies available:
  3553                           ; Name         Instructions Cycles
  3554                           ; simple_byte           22    12 (average)
  3555                           ;	Chosen strategy is simple_byte
  3556  003E20  5047               	movf	btemp+10,w,c
  3557  003E22  0A00               	xorlw	0	; case 0
  3558  003E24  B4D8               	btfsc	status,2,c
  3559  003E26  D6BD               	goto	l9053
  3560  003E28  0A01               	xorlw	1	; case 1
  3561  003E2A  B4D8               	btfsc	status,2,c
  3562  003E2C  D6DC               	goto	l9065
  3563  003E2E  0A03               	xorlw	3	; case 2
  3564  003E30  B4D8               	btfsc	status,2,c
  3565  003E32  D72F               	goto	l9093
  3566  003E34  0A01               	xorlw	1	; case 3
  3567  003E36  B4D8               	btfsc	status,2,c
  3568  003E38  D7A9               	goto	l9129
  3569  003E3A  0A07               	xorlw	7	; case 4
  3570  003E3C  B4D8               	btfsc	status,2,c
  3571  003E3E  D7DA               	goto	l9155
  3572  003E40  0A01               	xorlw	1	; case 5
  3573  003E42  B4D8               	btfsc	status,2,c
  3574  003E44  D7CA               	goto	l9149
  3575  003E46  0A03               	xorlw	3	; case 6
  3576  003E48  A4D8               	btfss	status,2,c
  3577  003E4A  D7D8               	goto	l9157
  3578  003E4C                     l9163:
  3579                           
  3580                           ;gemsecs.c: 442:  return *t_link;
  3581                           ;stkvar	_t_link @ sp[(-1)+-1]
  3582  003E4C  0EFE               	movlw	-2
  3583  003E4E  50E3               	movf	plusw1,w,c
  3584  003E50  6ED9               	movwf	fsr2l,c
  3585  003E52  6ADA               	clrf	fsr2h,c
  3586  003E54  50DF               	movf	indf2,w,c
  3587  003E56  6E3D               	movwf	btemp,c
  3588                           
  3589                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3590  003E58  52E5               	movf	postdec1,f,c
  3591  003E5A  52E5               	movf	postdec1,f,c
  3592  003E5C  0012               	return		;funcret
  3593  003E5E                     __end_of_t_protocol:
  3594                           	opt callstack 0
  3595                           
  3596 ;; *************** function _secs_II_message *****************
  3597 ;; Defined at:
  3598 ;;		line 509 in file "gemsecs.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  stream          1  [STACK] unsigned char 
  3601 ;;  function        1  [STACK] unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  7  [STACK] struct response_type
  3606 ;; Registers used:
  3607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3608 ;; Tracked objects:
  3609 ;;		On entry : 3F/0
  3610 ;;		On exit  : 3E/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    3
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_t_protocol
  3624 ;; This function uses a reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text2
  3628  00411C                     __ptext2:
  3629                           	opt callstack 0
  3630  00411C                     _secs_II_message:
  3631                           	opt callstack 0
  3632                           
  3633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3634  00411C  0E05               	movlw	5
  3635  00411E  26E1               	addwf	fsr1l,f,c
  3636  004120  0E00               	movlw	0
  3637  004122  22E2               	addwfc	fsr1h,f,c
  3638                           
  3639                           ;gemsecs.c: 509: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 510: {;gemsecs.c: 511:  static response_type block;;gemsecs.c: 513:  V.abort = LINK_
      +                          ERROR_NONE;
  3640                           
  3641                           ;incstack = 0
  3642  004124  0E0A               	movlw	10
  3643  004126  0100               	movlb	0	; () banked
  3644  004128  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;gemsecs.c: 514:  V.queue = 0;
  3648  00412A  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;gemsecs.c: 515:  block.respond = 0;
  3652  00412C  9007               	bcf	secs_II_message@block+6,0,c
  3653                           
  3654                           ;gemsecs.c: 517:  switch (stream) {
  3655  00412E  D10F               	goto	l6809
  3656  004130                     l6659:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;gemsecs.c: 521:    block.header = (uint8_t*) & H12[0];
  3660  004130  0E62               	movlw	low _H12
  3661  004132  6E01               	movwf	secs_II_message@block,c
  3662  004134  0E01               	movlw	high _H12
  3663  004136  6E02               	movwf	secs_II_message@block+1,c
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;gemsecs.c: 522:    block.length = sizeof(header12);
  3667  004138  0E0F               	movlw	15
  3668  00413A  6E03               	movwf	secs_II_message@block+2,c
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;gemsecs.c: 523:    H12[0].block.block.systemb = V.systemb;
  3672  00413C  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  3673  004140  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  3674  004144  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  3675  004148  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;gemsecs.c: 524:    H10[0].block.block.systemb = V.systemb;
  3679  00414C  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  3680  004150  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  3681  004154  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  3682  004158  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;gemsecs.c: 525:    block.respond = 1;
  3686  00415C  8007               	bsf	secs_II_message@block+6,0,c
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;gemsecs.c: 526:    block.reply = (uint8_t*) & H10[0];
  3690  00415E  0E07               	movlw	low _H10
  3691  004160  6E04               	movwf	secs_II_message@block+3,c
  3692  004162  0E01               	movlw	high _H10
  3693  004164  6E05               	movwf	secs_II_message@block+4,c
  3694                           
  3695                           ;gemsecs.c: 527:    block.reply_length = sizeof(header10);
  3696  004166  0E0D               	movlw	13
  3697  004168                     L6:
  3698  004168  6E06               	movwf	secs_II_message@block+5,c
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;gemsecs.c: 528:    V.queue = 1;
  3702  00416A  89BC               	bsf	(_V+92)& (0+255),4,b	;volatile
  3703                           
  3704                           ;gemsecs.c: 529:    break;
  3705  00416C  D10C               	goto	l6811
  3706  00416E                     l6673:
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;gemsecs.c: 531:    block.header = (uint8_t*) & H14[0];
  3710  00416E  0EAF               	movlw	low _H14
  3711  004170  6E01               	movwf	secs_II_message@block,c
  3712  004172  0E01               	movlw	high _H14
  3713  004174  6E02               	movwf	secs_II_message@block+1,c
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;gemsecs.c: 532:    block.length = sizeof(header14);
  3717  004176  0E11               	movlw	17
  3718  004178  6E03               	movwf	secs_II_message@block+2,c
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;gemsecs.c: 533:    H14[0].block.block.systemb = V.systemb;
  3722  00417A  C0AA  F1B5         	movff	_V+74,_H14+6	;volatile
  3723  00417E  C0AB  F1B6         	movff	_V+75,_H14+7	;volatile
  3724  004182  C0AC  F1B7         	movff	_V+76,_H14+8	;volatile
  3725  004186  C0AD  F1B8         	movff	_V+77,_H14+9	;volatile
  3726                           
  3727                           ;gemsecs.c: 534:    break;
  3728  00418A  D0FD               	goto	l6811
  3729  00418C                     l6679:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;gemsecs.c: 536:    block.header = (uint8_t*) & H17[0];
  3733  00418C  0E9B               	movlw	low _H17
  3734  00418E  6E01               	movwf	secs_II_message@block,c
  3735  004190  0E01               	movlw	high _H17
  3736  004192  6E02               	movwf	secs_II_message@block+1,c
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;gemsecs.c: 537:    block.length = sizeof(header17);
  3740  004194  0E14               	movlw	20
  3741  004196  6E03               	movwf	secs_II_message@block+2,c
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;gemsecs.c: 538:    H17[0].block.block.systemb = V.systemb;
  3745  004198  C0AA  F1A4         	movff	_V+74,_H17+9	;volatile
  3746  00419C  C0AB  F1A5         	movff	_V+75,_H17+10	;volatile
  3747  0041A0  C0AC  F1A6         	movff	_V+76,_H17+11	;volatile
  3748  0041A4  C0AD  F1A7         	movff	_V+77,_H17+12	;volatile
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;gemsecs.c: 539:    H12[1].block.block.systemb = V.systemb;
  3752  0041A8  C0AA  F175         	movff	_V+74,_H12+19	;volatile
  3753  0041AC  C0AB  F176         	movff	_V+75,_H12+20	;volatile
  3754  0041B0  C0AC  F177         	movff	_V+76,_H12+21	;volatile
  3755  0041B4  C0AD  F178         	movff	_V+77,_H12+22	;volatile
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;gemsecs.c: 540:    block.respond = 1;
  3759  0041B8  8007               	bsf	secs_II_message@block+6,0,c
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;gemsecs.c: 541:    block.reply = (uint8_t*) & H12[1];
  3763  0041BA  0E71               	movlw	low (_H12+15)
  3764  0041BC  6E04               	movwf	secs_II_message@block+3,c
  3765  0041BE  0E01               	movlw	high (_H12+15)
  3766  0041C0  6E05               	movwf	secs_II_message@block+4,c
  3767                           
  3768                           ;gemsecs.c: 542:    block.reply_length = sizeof(header12);
  3769  0041C2  0E0F               	movlw	15
  3770  0041C4  D7D1               	goto	L6
  3771  0041C6                     l6693:
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;gemsecs.c: 546:    block.header = (uint8_t*) & H10[2];
  3775  0041C6  0E21               	movlw	low (_H10+26)
  3776  0041C8  6E01               	movwf	secs_II_message@block,c
  3777  0041CA  0E01               	movlw	high (_H10+26)
  3778  0041CC  6E02               	movwf	secs_II_message@block+1,c
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;gemsecs.c: 547:    block.length = sizeof(header10);
  3782  0041CE  0E0D               	movlw	13
  3783  0041D0  6E03               	movwf	secs_II_message@block+2,c
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;gemsecs.c: 548:    H10[2].block.block.systemb = V.systemb;
  3787  0041D2  C0AA  F123         	movff	_V+74,_H10+28	;volatile
  3788  0041D6  C0AB  F124         	movff	_V+75,_H10+29	;volatile
  3789  0041DA  C0AC  F125         	movff	_V+76,_H10+30	;volatile
  3790  0041DE  C0AD  F126         	movff	_V+77,_H10+31	;volatile
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;gemsecs.c: 549:    V.abort = LINK_ERROR_ABORT;
  3794  0041E2  0E11               	movlw	17
  3795  0041E4  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  3796                           
  3797                           ;gemsecs.c: 550:    break;
  3798  0041E6  D0CF               	goto	l6811
  3799  0041E8                     l6703:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;stkvar	_function @ sp[(0)+-7]
  3803  0041E8  0EF9               	movlw	-7
  3804  0041EA  50E3               	movf	plusw1,w,c
  3805  0041EC  6E47               	movwf	btemp+10,c
  3806  0041EE  6A48               	clrf	btemp+11,c
  3807                           
  3808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3809                           ; Switch size 1, requested type "simple"
  3810                           ; Number of cases is 1, Range of values is 0 to 0
  3811                           ; switch strategies available:
  3812                           ; Name         Instructions Cycles
  3813                           ; simple_byte            4     3 (average)
  3814                           ;	Chosen strategy is simple_byte
  3815  0041F0  5048               	movf	btemp+11,w,c
  3816  0041F2  0A00               	xorlw	0	; case 0
  3817  0041F4  A4D8               	btfss	status,2,c
  3818  0041F6  D7E7               	goto	l6693
  3819                           
  3820                           ; BSR set to: 0
  3821                           ; Switch size 1, requested type "simple"
  3822                           ; Number of cases is 3, Range of values is 1 to 13
  3823                           ; switch strategies available:
  3824                           ; Name         Instructions Cycles
  3825                           ; simple_byte           10     6 (average)
  3826                           ;	Chosen strategy is simple_byte
  3827  0041F8  5047               	movf	btemp+10,w,c
  3828  0041FA  0A01               	xorlw	1	; case 1
  3829  0041FC  B4D8               	btfsc	status,2,c
  3830  0041FE  D798               	goto	l6659
  3831  004200  0A02               	xorlw	2	; case 3
  3832  004202  B4D8               	btfsc	status,2,c
  3833  004204  D7B4               	goto	l6673
  3834  004206  0A0E               	xorlw	14	; case 13
  3835  004208  B4D8               	btfsc	status,2,c
  3836  00420A  D7C0               	goto	l6679
  3837  00420C  D7DC               	goto	l6693
  3838  00420E                     l6705:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;gemsecs.c: 556:    block.header = (uint8_t*) & H24[0];
  3842  00420E  0E80               	movlw	low _H24
  3843  004210  6E01               	movwf	secs_II_message@block,c
  3844  004212  0E01               	movlw	high _H24
  3845  004214  6E02               	movwf	secs_II_message@block+1,c
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;gemsecs.c: 557:    block.length = sizeof(header24);
  3849  004216  0E1B               	movlw	27
  3850  004218  6E03               	movwf	secs_II_message@block+2,c
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;gemsecs.c: 558:    H24[0].block.block.systemb = V.systemb;
  3854  00421A  C0AA  F190         	movff	_V+74,_H24+16	;volatile
  3855  00421E  C0AB  F191         	movff	_V+75,_H24+17	;volatile
  3856  004222  C0AC  F192         	movff	_V+76,_H24+18	;volatile
  3857  004226  C0AD  F193         	movff	_V+77,_H24+19	;volatile
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;gemsecs.c: 559:    H24[0].data[12] = 12;
  3861  00422A  0E0C               	movlw	12
  3862  00422C  0101               	movlb	1	; () banked
  3863  00422E  6F8E               	movwf	(_H24+14)& (0+255),b
  3864                           
  3865                           ;gemsecs.c: 560:    break;
  3866  004230  D0AA               	goto	l6811
  3867  004232                     l6723:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;stkvar	_function @ sp[(0)+-7]
  3871  004232  0EF9               	movlw	-7
  3872  004234  50E3               	movf	plusw1,w,c
  3873  004236  6E47               	movwf	btemp+10,c
  3874  004238  6A48               	clrf	btemp+11,c
  3875                           
  3876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3877                           ; Switch size 1, requested type "simple"
  3878                           ; Number of cases is 1, Range of values is 0 to 0
  3879                           ; switch strategies available:
  3880                           ; Name         Instructions Cycles
  3881                           ; simple_byte            4     3 (average)
  3882                           ;	Chosen strategy is simple_byte
  3883  00423A  5048               	movf	btemp+11,w,c
  3884  00423C  0A00               	xorlw	0	; case 0
  3885  00423E  A4D8               	btfss	status,2,c
  3886  004240  D7C2               	goto	l6693
  3887                           
  3888                           ; BSR set to: 0
  3889                           ; Switch size 1, requested type "simple"
  3890                           ; Number of cases is 1, Range of values is 17 to 17
  3891                           ; switch strategies available:
  3892                           ; Name         Instructions Cycles
  3893                           ; simple_byte            4     3 (average)
  3894                           ;	Chosen strategy is simple_byte
  3895  004242  5047               	movf	btemp+10,w,c
  3896  004244  0A11               	xorlw	17	; case 17
  3897  004246  B4D8               	btfsc	status,2,c
  3898  004248  D7E2               	goto	l6705
  3899  00424A  D7BD               	goto	l6693
  3900  00424C                     l6725:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;gemsecs.c: 572:    block.header = (uint8_t*) & H13[2];
  3904  00424C  0EA0               	movlw	low (_H13+32)
  3905  00424E  6E01               	movwf	secs_II_message@block,c
  3906  004250  0E02               	movlw	high (_H13+32)
  3907  004252  6E02               	movwf	secs_II_message@block+1,c
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;gemsecs.c: 573:    block.length = sizeof(header13);
  3911  004254  0E10               	movlw	16
  3912  004256  6E03               	movwf	secs_II_message@block+2,c
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;gemsecs.c: 574:    H13[2].block.block.systemb = V.systemb;
  3916  004258  C0AA  F2A5         	movff	_V+74,_H13+37	;volatile
  3917  00425C  C0AB  F2A6         	movff	_V+75,_H13+38	;volatile
  3918  004260  C0AC  F2A7         	movff	_V+76,_H13+39	;volatile
  3919  004264  C0AD  F2A8         	movff	_V+77,_H13+40	;volatile
  3920                           
  3921                           ;gemsecs.c: 575:    break;
  3922  004268  D08E               	goto	l6811
  3923  00426A                     l6741:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;stkvar	_function @ sp[(0)+-7]
  3927  00426A  0EF9               	movlw	-7
  3928  00426C  50E3               	movf	plusw1,w,c
  3929  00426E  6E47               	movwf	btemp+10,c
  3930  004270  6A48               	clrf	btemp+11,c
  3931                           
  3932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3933                           ; Switch size 1, requested type "simple"
  3934                           ; Number of cases is 1, Range of values is 0 to 0
  3935                           ; switch strategies available:
  3936                           ; Name         Instructions Cycles
  3937                           ; simple_byte            4     3 (average)
  3938                           ;	Chosen strategy is simple_byte
  3939  004272  5048               	movf	btemp+11,w,c
  3940  004274  0A00               	xorlw	0	; case 0
  3941  004276  A4D8               	btfss	status,2,c
  3942  004278  D7A6               	goto	l6693
  3943                           
  3944                           ; BSR set to: 0
  3945                           ; Switch size 1, requested type "simple"
  3946                           ; Number of cases is 1, Range of values is 1 to 1
  3947                           ; switch strategies available:
  3948                           ; Name         Instructions Cycles
  3949                           ; simple_byte            4     3 (average)
  3950                           ;	Chosen strategy is simple_byte
  3951  00427A  5047               	movf	btemp+10,w,c
  3952  00427C  0A01               	xorlw	1	; case 1
  3953  00427E  B4D8               	btfsc	status,2,c
  3954  004280  D7E5               	goto	l6725
  3955  004282  D7A1               	goto	l6693
  3956  004284                     l6743:
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;gemsecs.c: 587:    block.header = (uint8_t*) & H13[0];
  3960  004284  0E80               	movlw	low _H13
  3961  004286  6E01               	movwf	secs_II_message@block,c
  3962  004288  0E02               	movlw	high _H13
  3963  00428A  6E02               	movwf	secs_II_message@block+1,c
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;gemsecs.c: 588:    block.length = sizeof(header13);
  3967  00428C  0E10               	movlw	16
  3968  00428E  6E03               	movwf	secs_II_message@block+2,c
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;gemsecs.c: 589:    H13[0].block.block.systemb = V.systemb;
  3972  004290  C0AA  F285         	movff	_V+74,_H13+5	;volatile
  3973  004294  C0AB  F286         	movff	_V+75,_H13+6	;volatile
  3974  004298  C0AC  F287         	movff	_V+76,_H13+7	;volatile
  3975  00429C  C0AD  F288         	movff	_V+77,_H13+8	;volatile
  3976                           
  3977                           ;gemsecs.c: 590:    break;
  3978  0042A0  D072               	goto	l6811
  3979  0042A2                     l6759:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;stkvar	_function @ sp[(0)+-7]
  3983  0042A2  0EF9               	movlw	-7
  3984  0042A4  50E3               	movf	plusw1,w,c
  3985  0042A6  6E47               	movwf	btemp+10,c
  3986  0042A8  6A48               	clrf	btemp+11,c
  3987                           
  3988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3989                           ; Switch size 1, requested type "simple"
  3990                           ; Number of cases is 1, Range of values is 0 to 0
  3991                           ; switch strategies available:
  3992                           ; Name         Instructions Cycles
  3993                           ; simple_byte            4     3 (average)
  3994                           ;	Chosen strategy is simple_byte
  3995  0042AA  5048               	movf	btemp+11,w,c
  3996  0042AC  0A00               	xorlw	0	; case 0
  3997  0042AE  A4D8               	btfss	status,2,c
  3998  0042B0  D78A               	goto	l6693
  3999                           
  4000                           ; BSR set to: 0
  4001                           ; Switch size 1, requested type "simple"
  4002                           ; Number of cases is 1, Range of values is 11 to 11
  4003                           ; switch strategies available:
  4004                           ; Name         Instructions Cycles
  4005                           ; simple_byte            4     3 (average)
  4006                           ;	Chosen strategy is simple_byte
  4007  0042B2  5047               	movf	btemp+10,w,c
  4008  0042B4  0A0B               	xorlw	11	; case 11
  4009  0042B6  B4D8               	btfsc	status,2,c
  4010  0042B8  D7E5               	goto	l6743
  4011  0042BA  D785               	goto	l6693
  4012  0042BC                     l6771:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;stkvar	_function @ sp[(0)+-7]
  4016  0042BC  0EF9               	movlw	-7
  4017  0042BE  50E3               	movf	plusw1,w,c
  4018  0042C0  6E47               	movwf	btemp+10,c
  4019  0042C2  6A48               	clrf	btemp+11,c
  4020                           
  4021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4022                           ; Switch size 1, requested type "simple"
  4023                           ; Number of cases is 1, Range of values is 0 to 0
  4024                           ; switch strategies available:
  4025                           ; Name         Instructions Cycles
  4026                           ; simple_byte            4     3 (average)
  4027                           ;	Chosen strategy is simple_byte
  4028  0042C4  5048               	movf	btemp+11,w,c
  4029  0042C6  0A00               	xorlw	0	; case 0
  4030  0042C8  A4D8               	btfss	status,2,c
  4031  0042CA  D77D               	goto	l6693
  4032                           
  4033                           ; BSR set to: 0
  4034                           ; Switch size 1, requested type "simple"
  4035                           ; Number of cases is 7, Range of values is 1 to 13
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte           22    12 (average)
  4039                           ;	Chosen strategy is simple_byte
  4040  0042CC  5047               	movf	btemp+10,w,c
  4041  0042CE  0A01               	xorlw	1	; case 1
  4042  0042D0  B4D8               	btfsc	status,2,c
  4043  0042D2  D059               	goto	l6811
  4044  0042D4  0A02               	xorlw	2	; case 3
  4045  0042D6  B4D8               	btfsc	status,2,c
  4046  0042D8  D056               	goto	l6811
  4047  0042DA  0A06               	xorlw	6	; case 5
  4048  0042DC  B4D8               	btfsc	status,2,c
  4049  0042DE  D053               	goto	l6811
  4050  0042E0  0A02               	xorlw	2	; case 7
  4051  0042E2  B4D8               	btfsc	status,2,c
  4052  0042E4  D050               	goto	l6811
  4053  0042E6  0A0E               	xorlw	14	; case 9
  4054  0042E8  B4D8               	btfsc	status,2,c
  4055  0042EA  D04D               	goto	l6811
  4056  0042EC  0A02               	xorlw	2	; case 11
  4057  0042EE  B4D8               	btfsc	status,2,c
  4058  0042F0  D04A               	goto	l6811
  4059  0042F2  0A06               	xorlw	6	; case 13
  4060  0042F4  B4D8               	btfsc	status,2,c
  4061  0042F6  D047               	goto	l6811
  4062  0042F8  D766               	goto	l6693
  4063  0042FA                     l6773:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;gemsecs.c: 626:    block.header = (uint8_t*) & H13[1];
  4067  0042FA  0E90               	movlw	low (_H13+16)
  4068  0042FC  6E01               	movwf	secs_II_message@block,c
  4069  0042FE  0E02               	movlw	high (_H13+16)
  4070  004300  6E02               	movwf	secs_II_message@block+1,c
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;gemsecs.c: 627:    block.length = sizeof(header13);
  4074  004302  0E10               	movlw	16
  4075  004304  6E03               	movwf	secs_II_message@block+2,c
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;gemsecs.c: 628:    H13[1].block.block.systemb = V.systemb;
  4079  004306  C0AA  F295         	movff	_V+74,_H13+21	;volatile
  4080  00430A  C0AB  F296         	movff	_V+75,_H13+22	;volatile
  4081  00430E  C0AC  F297         	movff	_V+76,_H13+23	;volatile
  4082  004312  C0AD  F298         	movff	_V+77,_H13+24	;volatile
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;gemsecs.c: 629:    H53[0].block.block.systemb = V.systemb;
  4086  004316  C0AA  F3F0         	movff	_V+74,_H53+45	;volatile
  4087  00431A  C0AB  F3F1         	movff	_V+75,_H53+46	;volatile
  4088  00431E  C0AC  F3F2         	movff	_V+76,_H53+47	;volatile
  4089  004322  C0AD  F3F3         	movff	_V+77,_H53+48	;volatile
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;gemsecs.c: 630:    block.respond = 1;
  4093  004326  8007               	bsf	secs_II_message@block+6,0,c
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;gemsecs.c: 631:    block.reply = (uint8_t*) & H53[0];
  4097  004328  0EC3               	movlw	low _H53
  4098  00432A  6E04               	movwf	secs_II_message@block+3,c
  4099  00432C  0E03               	movlw	high _H53
  4100  00432E  6E05               	movwf	secs_II_message@block+4,c
  4101                           
  4102                           ;gemsecs.c: 632:    block.reply_length = sizeof(header53);
  4103  004330  0E38               	movlw	56
  4104  004332  D71A               	goto	L6
  4105  004334                     l6797:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;stkvar	_function @ sp[(0)+-7]
  4109  004334  0EF9               	movlw	-7
  4110  004336  50E3               	movf	plusw1,w,c
  4111  004338  6E47               	movwf	btemp+10,c
  4112  00433A  6A48               	clrf	btemp+11,c
  4113                           
  4114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4115                           ; Switch size 1, requested type "simple"
  4116                           ; Number of cases is 1, Range of values is 0 to 0
  4117                           ; switch strategies available:
  4118                           ; Name         Instructions Cycles
  4119                           ; simple_byte            4     3 (average)
  4120                           ;	Chosen strategy is simple_byte
  4121  00433C  5048               	movf	btemp+11,w,c
  4122  00433E  0A00               	xorlw	0	; case 0
  4123  004340  A4D8               	btfss	status,2,c
  4124  004342  D741               	goto	l6693
  4125                           
  4126                           ; BSR set to: 0
  4127                           ; Switch size 1, requested type "simple"
  4128                           ; Number of cases is 1, Range of values is 1 to 1
  4129                           ; switch strategies available:
  4130                           ; Name         Instructions Cycles
  4131                           ; simple_byte            4     3 (average)
  4132                           ;	Chosen strategy is simple_byte
  4133  004344  5047               	movf	btemp+10,w,c
  4134  004346  0A01               	xorlw	1	; case 1
  4135  004348  B4D8               	btfsc	status,2,c
  4136  00434A  D7D7               	goto	l6773
  4137  00434C  D73C               	goto	l6693
  4138  00434E                     l6809:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;stkvar	_stream @ sp[(0)+-6]
  4142  00434E  0EFA               	movlw	-6
  4143  004350  50E3               	movf	plusw1,w,c
  4144  004352  6E47               	movwf	btemp+10,c
  4145  004354  6A48               	clrf	btemp+11,c
  4146                           
  4147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4148                           ; Switch size 1, requested type "simple"
  4149                           ; Number of cases is 1, Range of values is 0 to 0
  4150                           ; switch strategies available:
  4151                           ; Name         Instructions Cycles
  4152                           ; simple_byte            4     3 (average)
  4153                           ;	Chosen strategy is simple_byte
  4154  004356  5048               	movf	btemp+11,w,c
  4155  004358  0A00               	xorlw	0	; case 0
  4156  00435A  A4D8               	btfss	status,2,c
  4157  00435C  D734               	goto	l6693
  4158                           
  4159                           ; BSR set to: 0
  4160                           ; Switch size 1, requested type "simple"
  4161                           ; Number of cases is 6, Range of values is 1 to 10
  4162                           ; switch strategies available:
  4163                           ; Name         Instructions Cycles
  4164                           ; simple_byte           19    10 (average)
  4165                           ;	Chosen strategy is simple_byte
  4166  00435E  5047               	movf	btemp+10,w,c
  4167  004360  0A01               	xorlw	1	; case 1
  4168  004362  B4D8               	btfsc	status,2,c
  4169  004364  D741               	goto	l6703
  4170  004366  0A03               	xorlw	3	; case 2
  4171  004368  B4D8               	btfsc	status,2,c
  4172  00436A  D763               	goto	l6723
  4173  00436C  0A07               	xorlw	7	; case 5
  4174  00436E  B4D8               	btfsc	status,2,c
  4175  004370  D77C               	goto	l6741
  4176  004372  0A03               	xorlw	3	; case 6
  4177  004374  B4D8               	btfsc	status,2,c
  4178  004376  D795               	goto	l6759
  4179  004378  0A0F               	xorlw	15	; case 9
  4180  00437A  B4D8               	btfsc	status,2,c
  4181  00437C  D79F               	goto	l6771
  4182  00437E  0A03               	xorlw	3	; case 10
  4183  004380  B4D8               	btfsc	status,2,c
  4184  004382  D7D8               	goto	l6797
  4185  004384  D720               	goto	l6693
  4186  004386                     l6811:
  4187                           
  4188                           ;gemsecs.c: 651:  return(block);
  4189  004386  EE20  F001         	lfsr	2,secs_II_message@block
  4190                           
  4191                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  4192  00438A  0E07               	movlw	7
  4193  00438C  6E3D               	movwf	btemp,c
  4194  00438E  0EF9               	movlw	-7
  4195  004390                     us376999:
  4196  004390  006F FF7B FFE3     	movff	postinc2,plusw1
  4197  004396  28E8               	incf	wreg,w,c
  4198  004398  2E3D               	decfsz	btemp,f,c
  4199  00439A  D7FA               	bra	us376999
  4200                           
  4201                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  4202  00439C  0012               	return		;funcret
  4203  00439E                     __end_of_secs_II_message:
  4204                           	opt callstack 0
  4205                           
  4206 ;; *************** function _srand *****************
  4207 ;; Defined at:
  4208 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  s               2  [STACK] unsigned int 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1  [STACK] void 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4217 ;; Tracked objects:
  4218 ;;		On entry : 3F/0
  4219 ;;		On exit  : 3F/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;Total ram usage:        0 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    3
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_main
  4233 ;; This function uses a reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text3
  4237  00637C                     __ptext3:
  4238                           	opt callstack 0
  4239  00637C                     _srand:
  4240                           	opt callstack 27
  4241                           
  4242                           ;stkvar	_s @ sp[(0)+-2]
  4243                           
  4244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4245                           ;incstack = 0
  4246  00637C  0EFE               	movlw	-2
  4247  00637E  50E3               	movf	plusw1,w,c
  4248  006380  0FFF               	addlw	255
  4249  006382  6E47               	movwf	btemp+10,c
  4250  006384  0EFF               	movlw	-1
  4251  006386  006F FF8C  F048    	movff	plusw1,btemp+11
  4252  00638C  0EFF               	movlw	255
  4253  00638E  2248               	addwfc	btemp+11,f,c
  4254  006390  0060  F11C  F0F1   	movff	btemp+10,_seed
  4255  006396  0060  F120  F0F2   	movff	btemp+11,_seed+1
  4256  00639C  0100               	movlb	0	; () banked
  4257  00639E  6BF3               	clrf	(_seed+2)& (0+255),b
  4258  0063A0  6BF4               	clrf	(_seed+3)& (0+255),b
  4259  0063A2  6BF5               	clrf	(_seed+4)& (0+255),b
  4260  0063A4  6BF6               	clrf	(_seed+5)& (0+255),b
  4261  0063A6  6BF7               	clrf	(_seed+6)& (0+255),b
  4262  0063A8  6BF8               	clrf	(_seed+7)& (0+255),b
  4263                           
  4264                           ; BSR set to: 0
  4265                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4266  0063AA  52E5               	movf	postdec1,f,c
  4267  0063AC  52E5               	movf	postdec1,f,c
  4268  0063AE  0012               	return		;funcret
  4269  0063B0                     __end_of_srand:
  4270                           	opt callstack 0
  4271                           
  4272 ;; *************** function _sprintf *****************
  4273 ;; Defined at:
  4274 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  s               1  [STACK] PTR unsigned char 
  4277 ;;		 -> V(98), 
  4278 ;;  fmt             1  [STACK] PTR const unsigned char 
  4279 ;;		 -> STR_15(26), STR_14(26), STR_13(6), STR_12(19), 
  4280 ;;		 -> STR_11(26), STR_10(21), STR_9(18), STR_8(6), 
  4281 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
  4282 ;;		 -> STR_2(12), STR_1(17), 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  f               5  [STACK] struct _IO_FILE
  4285 ;;  ap              2  [STACK] PTR void [1]
  4286 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4287 ;;  ret             2    0        int 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  2  [STACK] int 
  4290 ;; Registers used:
  4291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4292 ;; Tracked objects:
  4293 ;;		On entry : 4/0
  4294 ;;		On exit  : 3F/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:   11
  4304 ;; This function calls:
  4305 ;;		_vfprintf
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text4
  4312  0055E4                     __ptext4:
  4313                           	opt callstack 0
  4314  0055E4                     _sprintf:
  4315                           	opt callstack 0
  4316                           
  4317                           ; BSR set to: 0
  4318                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4319  0055E4  0E07               	movlw	7
  4320  0055E6  26E1               	addwf	fsr1l,f,c
  4321  0055E8  0E00               	movlw	0
  4322  0055EA  22E2               	addwfc	fsr1h,f,c
  4323                           
  4324                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  4325                           
  4326                           ;incstack = 0
  4327  0055EC  0EF6               	movlw	246
  4328  0055EE  24E1               	addwf	fsr1l,w,c
  4329  0055F0  6E47               	movwf	btemp+10,c
  4330  0055F2  0EFF               	movlw	255
  4331  0055F4  20E2               	addwfc	fsr1h,w,c
  4332  0055F6  6E48               	movwf	btemp+11,c
  4333                           
  4334                           ;stkvar	_ap @ sp[(-7)+5]
  4335  0055F8  0EFF               	movlw	-1
  4336  0055FA  0060  F123  FFE3   	movff	btemp+11,plusw1
  4337  005600  0EFE               	movlw	-2
  4338  005602  0060  F11F  FFE3   	movff	btemp+10,plusw1
  4339                           
  4340                           ;stkvar	_s @ sp[(-7)+-2]
  4341  005608  0EF7               	movlw	-9
  4342  00560A  006F FF8C  F048    	movff	plusw1,btemp+11
  4343                           
  4344                           ;stkvar	_f @ sp[(-7)+0]
  4345  005610  0EF9               	movlw	-7
  4346  005612  0060  F123  FFE3   	movff	btemp+11,plusw1
  4347                           
  4348                           ;stkvar	_f @ sp[(-7)+0]
  4349  005618  0EFA               	movlw	250
  4350  00561A  24E1               	addwf	fsr1l,w,c
  4351  00561C  6ED9               	movwf	fsr2l,c
  4352  00561E  0EFF               	movlw	255
  4353  005620  20E2               	addwfc	fsr1h,w,c
  4354  005622  6EDA               	movwf	fsr2h,c
  4355  005624  0E00               	movlw	0
  4356  005626  6EDE               	movwf	postinc2,c
  4357  005628  0E00               	movlw	0
  4358  00562A  6EDD               	movwf	postdec2,c
  4359                           
  4360                           ;stkvar	_f @ sp[(-7)+0]
  4361  00562C  0EFC               	movlw	252
  4362  00562E  24E1               	addwf	fsr1l,w,c
  4363  005630  6ED9               	movwf	fsr2l,c
  4364  005632  0EFF               	movlw	255
  4365  005634  20E2               	addwfc	fsr1h,w,c
  4366  005636  6EDA               	movwf	fsr2h,c
  4367  005638  0E00               	movlw	0
  4368  00563A  6EDE               	movwf	postinc2,c
  4369  00563C  0E00               	movlw	0
  4370  00563E  6EDD               	movwf	postdec2,c
  4371                           
  4372                           ;stkvar	_ap @ sp[(-7)+5]
  4373  005640  0EFE               	movlw	254
  4374  005642  24E1               	addwf	fsr1l,w,c
  4375  005644  6E3D               	movwf	btemp,c
  4376  005646  0EFF               	movlw	255
  4377  005648  20E2               	addwfc	fsr1h,w,c
  4378  00564A  6E3E               	movwf	btemp+1,c
  4379  00564C  0060  F0F7  FFE6   	movff	btemp,postinc1
  4380  005652  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  4381                           
  4382                           ;stkvar	_fmt @ sp[(-9)+-3]
  4383  005658  0EF4               	movlw	-12
  4384  00565A  50E3               	movf	plusw1,w,c
  4385  00565C  6EE6               	movwf	postinc1,c
  4386                           
  4387                           ;stkvar	_f @ sp[(-10)+0]
  4388  00565E  0EF6               	movlw	246
  4389  005660  24E1               	addwf	fsr1l,w,c
  4390  005662  6E3D               	movwf	btemp,c
  4391  005664  0EFF               	movlw	255
  4392  005666  20E2               	addwfc	fsr1h,w,c
  4393  005668  6E3E               	movwf	btemp+1,c
  4394  00566A  0060  F0F7  FFE6   	movff	btemp,postinc1
  4395  005670  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  4396  005676  ECFD  F02C         	call	_vfprintf	;wreg free
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;stkvar	_f @ sp[(-7)+0]
  4400  00567A  0EFA               	movlw	250
  4401  00567C  24E1               	addwf	fsr1l,w,c
  4402  00567E  6ED9               	movwf	fsr2l,c
  4403  005680  0EFF               	movlw	255
  4404  005682  20E2               	addwfc	fsr1h,w,c
  4405  005684  6EDA               	movwf	fsr2h,c
  4406  005686  50DF               	movf	indf2,w,c
  4407  005688  6E48               	movwf	btemp+11,c
  4408                           
  4409                           ;stkvar	_s @ sp[(-7)+-2]
  4410  00568A  0EF7               	movlw	-9
  4411  00568C  50E3               	movf	plusw1,w,c
  4412  00568E  2448               	addwf	btemp+11,w,c
  4413  005690  6ED9               	movwf	fsr2l,c
  4414  005692  6ADA               	clrf	fsr2h,c
  4415  005694  0E00               	movlw	0
  4416  005696  6EDF               	movwf	indf2,c
  4417                           
  4418                           ; BSR set to: 0
  4419                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  4420  005698  0EF9               	movlw	249
  4421  00569A  26E1               	addwf	fsr1l,f,c
  4422  00569C  0EFF               	movlw	255
  4423  00569E  22E2               	addwfc	fsr1h,f,c
  4424  0056A0  52E5               	movf	postdec1,f,c
  4425  0056A2  50E7               	movf	indf1,w,c
  4426  0056A4  5EE1               	subwf	fsr1l,f,c
  4427  0056A6  0E00               	movlw	0
  4428  0056A8  5AE2               	subwfb	fsr1h,f,c
  4429  0056AA  0012               	return		;funcret
  4430  0056AC                     __end_of_sprintf:
  4431                           	opt callstack 0
  4432                           
  4433 ;; *************** function _r_protocol *****************
  4434 ;; Defined at:
  4435 ;;		line 213 in file "gemsecs.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  r_link          1  [STACK] PTR enum E16173
  4438 ;;		 -> V(98), 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  rxData          1  [STACK] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1  [STACK] enum E16913
  4443 ;; Registers used:
  4444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    7
  4457 ;; This function calls:
  4458 ;;		_StartTimer
  4459 ;;		_TimerDone
  4460 ;;		_UART1_Read
  4461 ;;		_UART1_Write
  4462 ;;		_UART1_is_rx_ready
  4463 ;;		_WaitMs
  4464 ;;		_run_checksum
  4465 ;;		_secs_gem_state
  4466 ;;		_secs_send
  4467 ;; This function is called by:
  4468 ;;		_main
  4469 ;; This function uses a reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text5
  4473  003516                     __ptext5:
  4474                           	opt callstack 0
  4475  003516                     _r_protocol:
  4476                           	opt callstack 0
  4477                           
  4478                           ; BSR set to: 0
  4479                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4480  003516  52E6               	movf	postinc1,f,c
  4481                           
  4482                           ;gemsecs.c: 213: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 214: {;gemsecs.
      +                          c: 215:  uint8_t rxData;;gemsecs.c: 216:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck;;gemsecs.c: 218:  switch (*r_link) {
  4483                           
  4484                           ;incstack = 0
  4485  003518  D1A2               	goto	l9039
  4486  00351A                     l8901:
  4487                           
  4488                           ;gemsecs.c: 220:   if (UART1_is_rx_ready()) {
  4489  00351A  EC41  F035         	call	_UART1_is_rx_ready	;wreg free
  4490  00351E  503D               	movf	btemp,w,c
  4491  003520  B4D8               	btfsc	status,2,c
  4492  003522  D1BE               	goto	l9041
  4493                           
  4494                           ;gemsecs.c: 221:    rxData = UART1_Read();
  4495  003524  EC68  F031         	call	_UART1_Read	;wreg free
  4496                           
  4497                           ;stkvar	_rxData @ sp[(-1)+0]
  4498  003528  0EFF               	movlw	-1
  4499  00352A  0060  F0F7  FFE3   	movff	btemp,plusw1
  4500                           
  4501                           ; BSR set to: 57
  4502                           ;gemsecs.c: 222:    if (rxData == 0x05) {
  4503                           ;stkvar	_rxData @ sp[(-1)+0]
  4504  003530  0EFF               	movlw	-1
  4505  003532  006F FF8C  F03D    	movff	plusw1,btemp
  4506  003538  0E05               	movlw	5
  4507  00353A  183D               	xorwf	btemp,w,c
  4508  00353C  A4D8               	btfss	status,2,c
  4509  00353E  D1B0               	goto	l9041
  4510                           
  4511                           ; BSR set to: 57
  4512                           ;gemsecs.c: 223:     V.error = LINK_ERROR_NONE;
  4513  003540  0E0A               	movlw	10
  4514  003542  0100               	movlb	0	; () banked
  4515  003544  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;gemsecs.c: 224:     *r_link = LINK_STATE_ENQ;
  4519                           ;stkvar	_r_link @ sp[(-1)+-1]
  4520  003546  0EFE               	movlw	-2
  4521  003548  50E3               	movf	plusw1,w,c
  4522  00354A  6ED9               	movwf	fsr2l,c
  4523  00354C  6ADA               	clrf	fsr2h,c
  4524  00354E  0E01               	movlw	1
  4525  003550  D16D               	goto	L10
  4526  003552                     l1661:
  4527                           
  4528                           ;gemsecs.c: 229:   rxData_l = 0;
  4529  003552  6A2E               	clrf	r_protocol@rxData_l,c
  4530                           
  4531                           ;gemsecs.c: 230:   b_block = (uint8_t*) & H254[0];
  4532  003554  0E43               	movlw	low _H254
  4533  003556  6E23               	movwf	r_protocol@b_block,c
  4534  003558  0E04               	movlw	high _H254
  4535  00355A  6E24               	movwf	r_protocol@b_block+1,c
  4536                           
  4537                           ;gemsecs.c: 231:   UART1_Write(0x04);
  4538  00355C  0E04               	movlw	4
  4539  00355E  6EE6               	movwf	postinc1,c
  4540  003560  EC2A  F031         	call	_UART1_Write	;wreg free
  4541                           
  4542                           ; BSR set to: 57
  4543                           ;gemsecs.c: 232:   StartTimer(TMR_T2, 2000);
  4544  003564  0ED0               	movlw	208
  4545  003566  6EE6               	movwf	postinc1,c
  4546  003568  0E07               	movlw	7
  4547  00356A  6EE6               	movwf	postinc1,c
  4548  00356C  0E02               	movlw	2
  4549  00356E  6EE6               	movwf	postinc1,c
  4550  003570  ECCB  F030         	call	_StartTimer	;wreg free
  4551                           
  4552                           ;gemsecs.c: 233:   *r_link = LINK_STATE_EOT;
  4553                           ;stkvar	_r_link @ sp[(-1)+-1]
  4554  003574  0EFE               	movlw	-2
  4555  003576  50E3               	movf	plusw1,w,c
  4556  003578  6ED9               	movwf	fsr2l,c
  4557  00357A  6ADA               	clrf	fsr2h,c
  4558  00357C  0E02               	movlw	2
  4559  00357E  6EDF               	movwf	indf2,c
  4560                           
  4561                           ;gemsecs.c: 235:   WaitMs(5);
  4562  003580  0E05               	movlw	5
  4563  003582  6EE6               	movwf	postinc1,c
  4564  003584  0E00               	movlw	0
  4565  003586  6EE6               	movwf	postinc1,c
  4566  003588  ECA3  F031         	call	_WaitMs	;wreg free
  4567                           
  4568                           ;gemsecs.c: 238:   H10[3].block.block.systemb = V.ticks;
  4569  00358C  C0A6  F130         	movff	_V+70,_H10+41	;volatile
  4570  003590  C0A7  F131         	movff	_V+71,_H10+42	;volatile
  4571  003594  C0A8  F132         	movff	_V+72,_H10+43	;volatile
  4572  003598  C0A9  F133         	movff	_V+73,_H10+44	;volatile
  4573                           
  4574                           ;gemsecs.c: 239:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1, 1);
  4575  00359C  0E01               	movlw	1
  4576  00359E  6EE6               	movwf	postinc1,c
  4577  0035A0  0E01               	movlw	1
  4578  0035A2  6EE6               	movwf	postinc1,c
  4579  0035A4  0E0D               	movlw	13
  4580  0035A6  6EE6               	movwf	postinc1,c
  4581  0035A8  0E2E               	movlw	low (_H10+39)
  4582  0035AA  6EE6               	movwf	postinc1,c
  4583  0035AC  0E01               	movlw	high (_H10+39)
  4584  0035AE  6EE6               	movwf	postinc1,c
  4585  0035B0  EC0F  F023         	call	_secs_send	;wreg free
  4586                           
  4587                           ;gemsecs.c: 241:   break;
  4588  0035B4  D175               	goto	l9041
  4589  0035B6                     l8925:
  4590                           
  4591                           ;gemsecs.c: 243:   if (TimerDone(TMR_T2)) {
  4592  0035B6  0E02               	movlw	2
  4593  0035B8  6EE6               	movwf	postinc1,c
  4594  0035BA  EC6E  F032         	call	_TimerDone	;wreg free
  4595  0035BE  503D               	movf	btemp,w,c
  4596  0035C0  B4D8               	btfsc	status,2,c
  4597  0035C2  D019               	goto	l8937
  4598                           
  4599                           ;gemsecs.c: 244:    V.timer_error++;
  4600  0035C4  0100               	movlb	0	; () banked
  4601  0035C6  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  4602  0035C8  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;gemsecs.c: 245:    if (!retry--) {
  4606  0035CA  065D               	decf	r_protocol@retry,f,c
  4607  0035CC  285D               	incf	r_protocol@retry,w,c
  4608  0035CE  A4D8               	btfss	status,2,c
  4609  0035D0  D00C               	goto	l8935
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;gemsecs.c: 246:     V.error = LINK_ERROR_T2;
  4613  0035D2  0E0C               	movlw	12
  4614  0035D4  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4615                           
  4616                           ;gemsecs.c: 247:     V.failed_receive = 1;
  4617  0035D6  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4618  0035D8  0BF0               	andlw	-16
  4619  0035DA  0901               	iorlw	1
  4620  0035DC  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;gemsecs.c: 248:     *r_link = LINK_STATE_NAK;
  4624                           ;stkvar	_r_link @ sp[(-1)+-1]
  4625  0035DE  0EFE               	movlw	-2
  4626  0035E0  50E3               	movf	plusw1,w,c
  4627  0035E2  6ED9               	movwf	fsr2l,c
  4628  0035E4  6ADA               	clrf	fsr2h,c
  4629  0035E6  0E05               	movlw	5
  4630  0035E8  D121               	goto	L10
  4631  0035EA                     l8935:
  4632                           
  4633                           ;gemsecs.c: 250:     *r_link = LINK_STATE_IDLE;
  4634                           ;stkvar	_r_link @ sp[(-1)+-1]
  4635  0035EA  0EFE               	movlw	-2
  4636  0035EC  50E3               	movf	plusw1,w,c
  4637  0035EE  6ED9               	movwf	fsr2l,c
  4638  0035F0  6ADA               	clrf	fsr2h,c
  4639  0035F2  0E00               	movlw	0
  4640  0035F4  D11B               	goto	L10
  4641  0035F6                     l8937:
  4642                           
  4643                           ;gemsecs.c: 253:    if (UART1_is_rx_ready()) {
  4644  0035F6  EC41  F035         	call	_UART1_is_rx_ready	;wreg free
  4645  0035FA  503D               	movf	btemp,w,c
  4646  0035FC  B4D8               	btfsc	status,2,c
  4647  0035FE  D150               	goto	l9041
  4648                           
  4649                           ;gemsecs.c: 254:     rxData = UART1_Read();
  4650  003600  EC68  F031         	call	_UART1_Read	;wreg free
  4651                           
  4652                           ;stkvar	_rxData @ sp[(-1)+0]
  4653  003604  0EFF               	movlw	-1
  4654  003606  0060  F0F7  FFE3   	movff	btemp,plusw1
  4655                           
  4656                           ; BSR set to: 57
  4657                           ;gemsecs.c: 255:     if (rxData_l == 0) {
  4658  00360C  502E               	movf	r_protocol@rxData_l,w,c
  4659  00360E  A4D8               	btfss	status,2,c
  4660  003610  D01C               	goto	l8951
  4661                           
  4662                           ; BSR set to: 57
  4663                           ;gemsecs.c: 256:      r_block.length = rxData;
  4664                           ;stkvar	_rxData @ sp[(-1)+0]
  4665  003612  0EFF               	movlw	-1
  4666  003614  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  4667                           
  4668                           ; BSR set to: 57
  4669                           ;gemsecs.c: 257:      run_checksum(0, 1);
  4670  00361A  0E01               	movlw	1
  4671  00361C  6EE6               	movwf	postinc1,c
  4672  00361E  0E00               	movlw	0
  4673  003620  6EE6               	movwf	postinc1,c
  4674  003622  EC5A  F032         	call	_run_checksum	;wreg free
  4675                           
  4676                           ;gemsecs.c: 258:      rxData_l++;
  4677  003626  2A2E               	incf	r_protocol@rxData_l,f,c
  4678                           
  4679                           ;gemsecs.c: 259:      b_block[sizeof(header254) - rxData_l] = rxData;
  4680                           ;stkvar	_rxData @ sp[(-1)+0]
  4681  003628  502E               	movf	r_protocol@rxData_l,w,c
  4682  00362A  5C23               	subwf	r_protocol@b_block,w,c
  4683  00362C  6E47               	movwf	btemp+10,c
  4684  00362E  0E00               	movlw	0
  4685  003630  5824               	subwfb	r_protocol@b_block+1,w,c
  4686  003632  6E48               	movwf	btemp+11,c
  4687  003634  0E01               	movlw	1
  4688  003636  2447               	addwf	btemp+10,w,c
  4689  003638  6ED9               	movwf	fsr2l,c
  4690  00363A  0E01               	movlw	1
  4691  00363C  2048               	addwfc	btemp+11,w,c
  4692  00363E  6EDA               	movwf	fsr2h,c
  4693  003640  0EFF               	movlw	-1
  4694  003642  006F FF8F FFDF     	movff	plusw1,indf2
  4695                           
  4696                           ;gemsecs.c: 260:     } else {
  4697  003648  D12B               	goto	l9041
  4698  00364A                     l8951:
  4699                           
  4700                           ; BSR set to: 57
  4701                           ;gemsecs.c: 264:      if (rxData_l <= sizeof(block10))
  4702  00364A  0E0B               	movlw	11
  4703  00364C  602E               	cpfslt	r_protocol@rxData_l,c
  4704  00364E  D00C               	goto	l8955
  4705                           
  4706                           ; BSR set to: 57
  4707                           ;gemsecs.c: 265:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4708                           ;stkvar	_rxData @ sp[(-1)+0]
  4709  003650  502E               	movf	r_protocol@rxData_l,w,c
  4710  003652  0820               	sublw	low (_H10+25)
  4711  003654  6ED9               	movwf	fsr2l,c
  4712  003656  0E00               	movlw	0
  4713  003658  A0D8               	btfss	status,0,c
  4714  00365A  2AE8               	incf	wreg,f,c
  4715  00365C  0801               	sublw	high (_H10+25)
  4716  00365E  6EDA               	movwf	fsr2h,c
  4717  003660  0EFF               	movlw	-1
  4718  003662  006F FF8F FFDF     	movff	plusw1,indf2
  4719  003668                     l8955:
  4720                           
  4721                           ; BSR set to: 57
  4722                           ;gemsecs.c: 267:      if (rxData_l == sizeof(block10) + 1)
  4723  003668  0E0B               	movlw	11
  4724  00366A  182E               	xorwf	r_protocol@rxData_l,w,c
  4725  00366C  A4D8               	btfss	status,2,c
  4726  00366E  D004               	goto	l8959
  4727                           
  4728                           ; BSR set to: 57
  4729                           ;gemsecs.c: 268:       V.ack[2] = rxData;
  4730                           ;stkvar	_rxData @ sp[(-1)+0]
  4731  003670  0EFF               	movlw	-1
  4732  003672  006F FF8C  F0BF    	movff	plusw1,_V+95	;volatile
  4733  003678                     l8959:
  4734                           
  4735                           ; BSR set to: 57
  4736                           ;gemsecs.c: 269:      if (rxData_l == sizeof(block10) + 2)
  4737  003678  0E0C               	movlw	12
  4738  00367A  182E               	xorwf	r_protocol@rxData_l,w,c
  4739  00367C  A4D8               	btfss	status,2,c
  4740  00367E  D004               	goto	l8963
  4741                           
  4742                           ; BSR set to: 57
  4743                           ;gemsecs.c: 270:       V.ack[1] = rxData;
  4744                           ;stkvar	_rxData @ sp[(-1)+0]
  4745  003680  0EFF               	movlw	-1
  4746  003682  006F FF8C  F0BE    	movff	plusw1,_V+94	;volatile
  4747  003688                     l8963:
  4748                           
  4749                           ; BSR set to: 57
  4750                           ;gemsecs.c: 271:      if (rxData_l == sizeof(block10) + 3)
  4751  003688  0E0D               	movlw	13
  4752  00368A  182E               	xorwf	r_protocol@rxData_l,w,c
  4753  00368C  A4D8               	btfss	status,2,c
  4754  00368E  D004               	goto	l8967
  4755                           
  4756                           ; BSR set to: 57
  4757                           ;gemsecs.c: 272:       V.ack[0] = rxData;
  4758                           ;stkvar	_rxData @ sp[(-1)+0]
  4759  003690  0EFF               	movlw	-1
  4760  003692  006F FF8C  F0BD    	movff	plusw1,_V+93	;volatile
  4761  003698                     l8967:
  4762                           
  4763                           ; BSR set to: 57
  4764                           ;gemsecs.c: 274:      if (rxData_l <= r_block.length)
  4765  003698  502E               	movf	r_protocol@rxData_l,w,c
  4766  00369A  0100               	movlb	0	; () banked
  4767  00369C  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  4768  00369E  A0D8               	btfss	status,0,c
  4769  0036A0  D00D               	goto	l8971
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;gemsecs.c: 275:       V.r_checksum = run_checksum(rxData, 0);
  4773  0036A2  0E00               	movlw	0
  4774  0036A4  6EE6               	movwf	postinc1,c
  4775                           
  4776                           ;stkvar	_rxData @ sp[(-2)+0]
  4777  0036A6  0EFE               	movlw	-2
  4778  0036A8  50E3               	movf	plusw1,w,c
  4779  0036AA  6EE6               	movwf	postinc1,c
  4780  0036AC  EC5A  F032         	call	_run_checksum	;wreg free
  4781  0036B0  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  4782  0036B6  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  4783  0036BC                     l8971:
  4784                           
  4785                           ;gemsecs.c: 277:      if (rxData_l == r_block.length + 1)
  4786  0036BC  502E               	movf	r_protocol@rxData_l,w,c
  4787  0036BE  6E47               	movwf	btemp+10,c
  4788  0036C0  6A48               	clrf	btemp+11,c
  4789  0036C2  0100               	movlb	0	; () banked
  4790  0036C4  51CE               	movf	(_r_block+12)& (0+255),w,b
  4791  0036C6  6E45               	movwf	btemp+8,c
  4792  0036C8  6A46               	clrf	btemp+9,c
  4793  0036CA  0E01               	movlw	1
  4794  0036CC  2645               	addwf	btemp+8,f,c
  4795  0036CE  0E00               	movlw	0
  4796  0036D0  2246               	addwfc	btemp+9,f,c
  4797  0036D2  5047               	movf	btemp+10,w,c
  4798  0036D4  1845               	xorwf	btemp+8,w,c
  4799  0036D6  E109               	bnz	l8975
  4800  0036D8  5048               	movf	btemp+11,w,c
  4801  0036DA  1846               	xorwf	btemp+9,w,c
  4802  0036DC  A4D8               	btfss	status,2,c
  4803  0036DE  D005               	goto	l8975
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;gemsecs.c: 278:       H10[1].checksum = (uint16_t) rxData << 8;
  4807                           ;stkvar	_rxData @ sp[(-1)+0]
  4808  0036E0  0EFF               	movlw	-1
  4809  0036E2  50E3               	movf	plusw1,w,c
  4810  0036E4  0101               	movlb	1	; () banked
  4811  0036E6  6F15               	movwf	(_H10+14)& (0+255),b
  4812  0036E8  6B14               	clrf	(_H10+13)& (0+255),b
  4813  0036EA                     l8975:
  4814                           
  4815                           ;gemsecs.c: 279:      if (rxData_l == r_block.length + 2)
  4816  0036EA  502E               	movf	r_protocol@rxData_l,w,c
  4817  0036EC  6E47               	movwf	btemp+10,c
  4818  0036EE  6A48               	clrf	btemp+11,c
  4819  0036F0  0100               	movlb	0	; () banked
  4820  0036F2  51CE               	movf	(_r_block+12)& (0+255),w,b
  4821  0036F4  6E45               	movwf	btemp+8,c
  4822  0036F6  6A46               	clrf	btemp+9,c
  4823  0036F8  0E02               	movlw	2
  4824  0036FA  2645               	addwf	btemp+8,f,c
  4825  0036FC  0E00               	movlw	0
  4826  0036FE  2246               	addwfc	btemp+9,f,c
  4827  003700  5047               	movf	btemp+10,w,c
  4828  003702  1845               	xorwf	btemp+8,w,c
  4829  003704  E10A               	bnz	l8979
  4830  003706  5048               	movf	btemp+11,w,c
  4831  003708  1846               	xorwf	btemp+9,w,c
  4832  00370A  A4D8               	btfss	status,2,c
  4833  00370C  D006               	goto	l8979
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;gemsecs.c: 280:       H10[1].checksum += rxData;
  4837                           ;stkvar	_rxData @ sp[(-1)+0]
  4838  00370E  0EFF               	movlw	-1
  4839  003710  50E3               	movf	plusw1,w,c
  4840  003712  0101               	movlb	1	; () banked
  4841  003714  2714               	addwf	(_H10+13)& (0+255),f,b
  4842  003716  0E00               	movlw	0
  4843  003718  2315               	addwfc	(_H10+14)& (0+255),f,b
  4844  00371A                     l8979:
  4845                           
  4846                           ;gemsecs.c: 282:      rxData_l++;
  4847  00371A  2A2E               	incf	r_protocol@rxData_l,f,c
  4848                           
  4849                           ;gemsecs.c: 283:      b_block[sizeof(header254) - rxData_l] = rxData;
  4850                           ;stkvar	_rxData @ sp[(-1)+0]
  4851  00371C  502E               	movf	r_protocol@rxData_l,w,c
  4852  00371E  5C23               	subwf	r_protocol@b_block,w,c
  4853  003720  6E47               	movwf	btemp+10,c
  4854  003722  0E00               	movlw	0
  4855  003724  5824               	subwfb	r_protocol@b_block+1,w,c
  4856  003726  6E48               	movwf	btemp+11,c
  4857  003728  0E01               	movlw	1
  4858  00372A  2447               	addwf	btemp+10,w,c
  4859  00372C  6ED9               	movwf	fsr2l,c
  4860  00372E  0E01               	movlw	1
  4861  003730  2048               	addwfc	btemp+11,w,c
  4862  003732  6EDA               	movwf	fsr2h,c
  4863  003734  0EFF               	movlw	-1
  4864  003736  006F FF8F FFDF     	movff	plusw1,indf2
  4865                           
  4866                           ;gemsecs.c: 284:      if (rxData_l > (r_block.length + 2)) {
  4867  00373C  502E               	movf	r_protocol@rxData_l,w,c
  4868  00373E  6E47               	movwf	btemp+10,c
  4869  003740  6A48               	clrf	btemp+11,c
  4870  003742  0100               	movlb	0	; () banked
  4871  003744  51CE               	movf	(_r_block+12)& (0+255),w,b
  4872  003746  6E45               	movwf	btemp+8,c
  4873  003748  6A46               	clrf	btemp+9,c
  4874  00374A  0E02               	movlw	2
  4875  00374C  2645               	addwf	btemp+8,f,c
  4876  00374E  0E00               	movlw	0
  4877  003750  2246               	addwfc	btemp+9,f,c
  4878  003752  5047               	movf	btemp+10,w,c
  4879  003754  5C45               	subwf	btemp+8,w,c
  4880  003756  5046               	movf	btemp+9,w,c
  4881  003758  0A80               	xorlw	128
  4882  00375A  6E3D               	movwf	btemp,c
  4883  00375C  5048               	movf	btemp+11,w,c
  4884  00375E  0A80               	xorlw	128
  4885  003760  583D               	subwfb	btemp,w,c
  4886  003762  B0D8               	btfsc	status,0,c
  4887  003764  D09D               	goto	l9041
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;gemsecs.c: 285:       if (V.r_checksum == H10[1].checksum) {
  4891  003766  0101               	movlb	1	; () banked
  4892  003768  5114               	movf	(_H10+13)& (0+255),w,b
  4893  00376A  0100               	movlb	0	; () banked
  4894  00376C  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  4895  00376E  E10E               	bnz	l8991
  4896  003770  0101               	movlb	1	; () banked
  4897  003772  5115               	movf	(_H10+14)& (0+255),w,b
  4898  003774  0100               	movlb	0	; () banked
  4899  003776  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  4900  003778  A4D8               	btfss	status,2,c
  4901  00377A  D008               	goto	l8991
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;gemsecs.c: 286:        *r_link = LINK_STATE_ACK;
  4905                           ;stkvar	_r_link @ sp[(-1)+-1]
  4906  00377C  0EFE               	movlw	-2
  4907  00377E  50E3               	movf	plusw1,w,c
  4908  003780  6ED9               	movwf	fsr2l,c
  4909  003782  6ADA               	clrf	fsr2h,c
  4910  003784  0E03               	movlw	3
  4911  003786  D052               	goto	L10
  4912  003788                     l8989:
  4913  003788  EC68  F031         	call	_UART1_Read	;wreg free
  4914  00378C                     l8991:
  4915                           
  4916                           ;gemsecs.c: 288:        while (UART1_is_rx_ready())
  4917  00378C  EC41  F035         	call	_UART1_is_rx_ready	;wreg free
  4918  003790  503D               	movf	btemp,w,c
  4919  003792  A4D8               	btfss	status,2,c
  4920  003794  D7F9               	goto	l8989
  4921                           
  4922                           ;gemsecs.c: 290:        WaitMs(500);
  4923  003796  0EF4               	movlw	244
  4924  003798  6EE6               	movwf	postinc1,c
  4925  00379A  0E01               	movlw	1
  4926  00379C  6EE6               	movwf	postinc1,c
  4927  00379E  ECA3  F031         	call	_WaitMs	;wreg free
  4928                           
  4929                           ;gemsecs.c: 291:        V.error = LINK_ERROR_CHECKSUM;
  4930  0037A2  0E0F               	movlw	15
  4931  0037A4  0100               	movlb	0	; () banked
  4932  0037A6  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;gemsecs.c: 292:        V.checksum_error++;
  4936  0037A8  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  4937  0037AA  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;gemsecs.c: 293:        V.failed_receive = 2;
  4941  0037AC  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4942  0037AE  0BF0               	andlw	-16
  4943  0037B0  0902               	iorlw	2
  4944  0037B2  D714               	goto	L11
  4945  0037B4                     l9003:
  4946                           
  4947                           ;gemsecs.c: 302:   V.stream = H10[1].block.block.stream;
  4948  0037B4  0101               	movlb	1	; () banked
  4949  0037B6  511D               	movf	(_H10+22)& (0+255),w,b
  4950  0037B8  0B7F               	andlw	127
  4951  0037BA  0100               	movlb	0	; () banked
  4952  0037BC  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;gemsecs.c: 303:   V.function = H10[1].block.block.function;
  4956  0037BE  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;gemsecs.c: 304:   V.systemb = H10[1].block.block.systemb;
  4960  0037C2  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  4961  0037C6  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  4962  0037CA  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  4963  0037CE  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;gemsecs.c: 305:   V.rbit = H10[1].block.block.rbit;
  4967  0037D2  0101               	movlb	1	; () banked
  4968  0037D4  AF1F               	btfss	(_H10+24)& (0+255),7,b
  4969  0037D6  D003               	bra	u5705
  4970  0037D8  0100               	movlb	0	; () banked
  4971  0037DA  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  4972  0037DC  D002               	bra	u5707
  4973  0037DE                     u5705:
  4974  0037DE  0100               	movlb	0	; () banked
  4975  0037E0  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  4976  0037E2                     u5707:
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;gemsecs.c: 306:   V.wbit = H10[1].block.block.wbit;
  4980  0037E2  0101               	movlb	1	; () banked
  4981  0037E4  AF1D               	btfss	(_H10+22)& (0+255),7,b
  4982  0037E6  D003               	bra	u5715
  4983  0037E8  0100               	movlb	0	; () banked
  4984  0037EA  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  4985  0037EC  D002               	bra	u5717
  4986  0037EE                     u5715:
  4987  0037EE  0100               	movlb	0	; () banked
  4988  0037F0  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  4989  0037F2                     u5717:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;gemsecs.c: 307:   V.ebit = H10[1].block.block.ebit;
  4993  0037F2  0101               	movlb	1	; () banked
  4994  0037F4  AF1B               	btfss	(_H10+20)& (0+255),7,b
  4995  0037F6  D003               	bra	u5725
  4996  0037F8  0100               	movlb	0	; () banked
  4997  0037FA  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  4998  0037FC  D002               	bra	u5727
  4999  0037FE                     u5725:
  5000  0037FE  0100               	movlb	0	; () banked
  5001  003800  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  5002  003802                     u5727:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;gemsecs.c: 308:   V.g_state = secs_gem_state(V.stream, V.function);
  5006  003802  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  5007  003804  6EE6               	movwf	postinc1,c
  5008  003806  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  5009  003808  6EE6               	movwf	postinc1,c
  5010  00380A  EC80  F02A         	call	_secs_gem_state	;wreg free
  5011  00380E  503D               	movf	btemp,w,c
  5012  003810  0100               	movlb	0	; () banked
  5013  003812  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;gemsecs.c: 309:   UART1_Write(0x06);
  5017  003814  0E06               	movlw	6
  5018  003816  6EE6               	movwf	postinc1,c
  5019  003818  EC2A  F031         	call	_UART1_Write	;wreg free
  5020                           
  5021                           ; BSR set to: 57
  5022                           ;gemsecs.c: 310:   V.failed_receive = 0;
  5023  00381C  0EF0               	movlw	-16
  5024  00381E  0100               	movlb	0	; () banked
  5025  003820  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;gemsecs.c: 311:   *r_link = LINK_STATE_DONE;
  5029                           ;stkvar	_r_link @ sp[(-1)+-1]
  5030  003822  0EFE               	movlw	-2
  5031  003824  50E3               	movf	plusw1,w,c
  5032  003826  6ED9               	movwf	fsr2l,c
  5033  003828  6ADA               	clrf	fsr2h,c
  5034  00382A  0E04               	movlw	4
  5035  00382C                     L10:
  5036  00382C  6EDF               	movwf	indf2,c
  5037                           
  5038                           ;gemsecs.c: 312:   break;
  5039  00382E  D038               	goto	l9041
  5040  003830                     l9023:
  5041                           
  5042                           ;gemsecs.c: 314:   UART1_Write(0x15);
  5043  003830  0E15               	movlw	21
  5044  003832  6EE6               	movwf	postinc1,c
  5045  003834  EC2A  F031         	call	_UART1_Write	;wreg free
  5046                           
  5047                           ; BSR set to: 57
  5048                           ;gemsecs.c: 315:   *r_link = LINK_STATE_ERROR;
  5049                           ;stkvar	_r_link @ sp[(-1)+-1]
  5050  003838  0EFE               	movlw	-2
  5051  00383A  50E3               	movf	plusw1,w,c
  5052  00383C  6ED9               	movwf	fsr2l,c
  5053  00383E  6ADA               	clrf	fsr2h,c
  5054  003840  0E06               	movlw	6
  5055  003842  6EDF               	movwf	indf2,c
  5056                           
  5057                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  5058  003844  D002               	goto	l9029
  5059  003846                     l9027:
  5060                           
  5061                           ; BSR set to: 57
  5062                           ;gemsecs.c: 317:    UART1_Read();
  5063  003846  EC68  F031         	call	_UART1_Read	;wreg free
  5064  00384A                     l9029:
  5065                           
  5066                           ; BSR set to: 57
  5067                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  5068  00384A  5037               	movf	_uart1RxCount,w,c	;volatile
  5069  00384C  A4D8               	btfss	status,2,c
  5070  00384E  D7FB               	goto	l9027
  5071                           
  5072                           ; BSR set to: 57
  5073                           ;gemsecs.c: 319:   retry = 3;
  5074  003850  0E03               	movlw	3
  5075  003852  6E5D               	movwf	r_protocol@retry,c
  5076                           
  5077                           ;gemsecs.c: 320:   break;
  5078  003854  D025               	goto	l9041
  5079  003856                     l9033:
  5080                           
  5081                           ;gemsecs.c: 324:   V.failed_receive = 0;
  5082  003856  0EF0               	movlw	-16
  5083  003858  0100               	movlb	0	; () banked
  5084  00385A  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5085  00385C  D6C6               	goto	l8935
  5086  00385E                     l9039:
  5087                           
  5088                           ;stkvar	_r_link @ sp[(-1)+-1]
  5089  00385E  0EFE               	movlw	-2
  5090  003860  50E3               	movf	plusw1,w,c
  5091  003862  6ED9               	movwf	fsr2l,c
  5092  003864  6ADA               	clrf	fsr2h,c
  5093  003866  50DF               	movf	indf2,w,c
  5094  003868  6E47               	movwf	btemp+10,c
  5095  00386A  6A48               	clrf	btemp+11,c
  5096                           
  5097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5098                           ; Switch size 1, requested type "simple"
  5099                           ; Number of cases is 1, Range of values is 0 to 0
  5100                           ; switch strategies available:
  5101                           ; Name         Instructions Cycles
  5102                           ; simple_byte            4     3 (average)
  5103                           ;	Chosen strategy is simple_byte
  5104  00386C  5048               	movf	btemp+11,w,c
  5105  00386E  0A00               	xorlw	0	; case 0
  5106  003870  A4D8               	btfss	status,2,c
  5107  003872  D6BB               	goto	l8935
  5108                           
  5109                           ; Switch size 1, requested type "simple"
  5110                           ; Number of cases is 7, Range of values is 0 to 6
  5111                           ; switch strategies available:
  5112                           ; Name         Instructions Cycles
  5113                           ; simple_byte           22    12 (average)
  5114                           ;	Chosen strategy is simple_byte
  5115  003874  5047               	movf	btemp+10,w,c
  5116  003876  0A00               	xorlw	0	; case 0
  5117  003878  B4D8               	btfsc	status,2,c
  5118  00387A  D64F               	goto	l8901
  5119  00387C  0A01               	xorlw	1	; case 1
  5120  00387E  B4D8               	btfsc	status,2,c
  5121  003880  D668               	goto	l1661
  5122  003882  0A03               	xorlw	3	; case 2
  5123  003884  B4D8               	btfsc	status,2,c
  5124  003886  D697               	goto	l8925
  5125  003888  0A01               	xorlw	1	; case 3
  5126  00388A  B4D8               	btfsc	status,2,c
  5127  00388C  D793               	goto	l9003
  5128  00388E  0A07               	xorlw	7	; case 4
  5129  003890  B4D8               	btfsc	status,2,c
  5130  003892  D7E1               	goto	l9033
  5131  003894  0A01               	xorlw	1	; case 5
  5132  003896  B4D8               	btfsc	status,2,c
  5133  003898  D7CB               	goto	l9023
  5134  00389A  0A03               	xorlw	3	; case 6
  5135  00389C  A4D8               	btfss	status,2,c
  5136  00389E  D6A5               	goto	l8935
  5137  0038A0                     l9041:
  5138                           
  5139                           ;gemsecs.c: 331:  return *r_link;
  5140                           ;stkvar	_r_link @ sp[(-1)+-1]
  5141  0038A0  0EFE               	movlw	-2
  5142  0038A2  50E3               	movf	plusw1,w,c
  5143  0038A4  6ED9               	movwf	fsr2l,c
  5144  0038A6  6ADA               	clrf	fsr2h,c
  5145  0038A8  50DF               	movf	indf2,w,c
  5146  0038AA  6E3D               	movwf	btemp,c
  5147                           
  5148                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5149  0038AC  52E5               	movf	postdec1,f,c
  5150  0038AE  52E5               	movf	postdec1,f,c
  5151  0038B0  0012               	return		;funcret
  5152  0038B2                     __end_of_r_protocol:
  5153                           	opt callstack 0
  5154                           
  5155 ;; *************** function _m_protocol *****************
  5156 ;; Defined at:
  5157 ;;		line 47 in file "gemsecs.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  m_link          1  [STACK] PTR enum E16173
  5160 ;;		 -> V(98), 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  rxData          1  [STACK] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1  [STACK] enum E16913
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    7
  5179 ;; This function calls:
  5180 ;;		_StartTimer
  5181 ;;		_TimerDone
  5182 ;;		_UART1_Read
  5183 ;;		_UART1_is_rx_ready
  5184 ;;		_UART2_Read
  5185 ;;		_UART2_is_rx_ready
  5186 ;;		_WaitMs
  5187 ;;		_rand
  5188 ;;		_run_checksum
  5189 ;;		_secs_gem_state
  5190 ;;		_secs_send
  5191 ;; This function is called by:
  5192 ;;		_main
  5193 ;; This function uses a reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text6
  5197  0026C2                     __ptext6:
  5198                           	opt callstack 0
  5199  0026C2                     _m_protocol:
  5200                           	opt callstack 0
  5201                           
  5202                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5203  0026C2  52E6               	movf	postinc1,f,c
  5204                           
  5205                           ;gemsecs.c: 47: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 48: {;gemsecs.c: 
      +                          49:  uint8_t rxData;;gemsecs.c: 50:  static uint8_t rxData_l = 0;;gemsecs.c: 52:  switch
      +                           (*m_link) {
  5206                           
  5207                           ;incstack = 0
  5208  0026C4  D267               	goto	l9371
  5209  0026C6                     l9175:
  5210                           
  5211                           ;gemsecs.c: 55:   WaitMs(50);
  5212  0026C6  0E32               	movlw	50
  5213  0026C8  6EE6               	movwf	postinc1,c
  5214  0026CA  0E00               	movlw	0
  5215  0026CC  6EE6               	movwf	postinc1,c
  5216  0026CE  ECA3  F031         	call	_WaitMs	;wreg free
  5217                           
  5218                           ;gemsecs.c: 57:   if (UART1_is_rx_ready()) {
  5219  0026D2  EC41  F035         	call	_UART1_is_rx_ready	;wreg free
  5220  0026D6  503D               	movf	btemp,w,c
  5221  0026D8  B4D8               	btfsc	status,2,c
  5222  0026DA  D022               	goto	l9191
  5223                           
  5224                           ;gemsecs.c: 58:    rxData = UART1_Read();
  5225  0026DC  EC68  F031         	call	_UART1_Read	;wreg free
  5226                           
  5227                           ;stkvar	_rxData @ sp[(-1)+0]
  5228  0026E0  0EFF               	movlw	-1
  5229  0026E2  0060  F0F7  FFE3   	movff	btemp,plusw1
  5230                           
  5231                           ; BSR set to: 57
  5232                           ;gemsecs.c: 59:    if (rxData == 0x05) {
  5233                           ;stkvar	_rxData @ sp[(-1)+0]
  5234  0026E8  0EFF               	movlw	-1
  5235  0026EA  006F FF8C  F03D    	movff	plusw1,btemp
  5236  0026F0  0E05               	movlw	5
  5237  0026F2  183D               	xorwf	btemp,w,c
  5238  0026F4  A4D8               	btfss	status,2,c
  5239  0026F6  D014               	goto	l9191
  5240                           
  5241                           ; BSR set to: 57
  5242                           ;gemsecs.c: 60:     V.uart = 1;
  5243  0026F8  0E01               	movlw	1
  5244  0026FA  0100               	movlb	0	; () banked
  5245  0026FC  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;gemsecs.c: 61:     StartTimer(TMR_T2, 2000);
  5249  0026FE  0ED0               	movlw	208
  5250  002700  6EE6               	movwf	postinc1,c
  5251  002702  0E07               	movlw	7
  5252  002704  6EE6               	movwf	postinc1,c
  5253  002706  0E02               	movlw	2
  5254  002708  6EE6               	movwf	postinc1,c
  5255  00270A  ECCB  F030         	call	_StartTimer	;wreg free
  5256                           
  5257                           ;gemsecs.c: 62:     V.error = LINK_ERROR_NONE;
  5258  00270E  0E0A               	movlw	10
  5259  002710  0100               	movlb	0	; () banked
  5260  002712  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;gemsecs.c: 63:     *m_link = LINK_STATE_ENQ;
  5264                           ;stkvar	_m_link @ sp[(-1)+-1]
  5265  002714  0EFE               	movlw	-2
  5266  002716  50E3               	movf	plusw1,w,c
  5267  002718  6ED9               	movwf	fsr2l,c
  5268  00271A  6ADA               	clrf	fsr2h,c
  5269  00271C  0E01               	movlw	1
  5270  00271E  6EDF               	movwf	indf2,c
  5271  002720                     l9191:
  5272                           
  5273                           ;gemsecs.c: 66:   if (UART2_is_rx_ready()) {
  5274  002720  EC3D  F035         	call	_UART2_is_rx_ready	;wreg free
  5275  002724  503D               	movf	btemp,w,c
  5276  002726  B4D8               	btfsc	status,2,c
  5277  002728  D256               	goto	l9373
  5278                           
  5279                           ;gemsecs.c: 67:    rxData = UART2_Read();
  5280  00272A  EC49  F031         	call	_UART2_Read	;wreg free
  5281                           
  5282                           ;stkvar	_rxData @ sp[(-1)+0]
  5283  00272E  0EFF               	movlw	-1
  5284  002730  0060  F0F7  FFE3   	movff	btemp,plusw1
  5285                           
  5286                           ; BSR set to: 57
  5287                           ;gemsecs.c: 68:    if (rxData == 0x05) {
  5288                           ;stkvar	_rxData @ sp[(-1)+0]
  5289  002736  0EFF               	movlw	-1
  5290  002738  006F FF8C  F03D    	movff	plusw1,btemp
  5291  00273E  0E05               	movlw	5
  5292  002740  183D               	xorwf	btemp,w,c
  5293  002742  A4D8               	btfss	status,2,c
  5294  002744  D248               	goto	l9373
  5295                           
  5296                           ; BSR set to: 57
  5297                           ;gemsecs.c: 69:     V.uart = 2;
  5298  002746  0E02               	movlw	2
  5299  002748  0100               	movlb	0	; () banked
  5300  00274A  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;gemsecs.c: 70:     StartTimer(TMR_T2, 2000);
  5304  00274C  0ED0               	movlw	208
  5305  00274E  6EE6               	movwf	postinc1,c
  5306  002750  0E07               	movlw	7
  5307  002752  6EE6               	movwf	postinc1,c
  5308  002754  0E02               	movlw	2
  5309  002756  6EE6               	movwf	postinc1,c
  5310  002758  ECCB  F030         	call	_StartTimer	;wreg free
  5311                           
  5312                           ;gemsecs.c: 71:     V.error = LINK_ERROR_NONE;
  5313  00275C  0E0A               	movlw	10
  5314  00275E  0100               	movlb	0	; () banked
  5315  002760  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;gemsecs.c: 72:     *m_link = LINK_STATE_ENQ;
  5319                           ;stkvar	_m_link @ sp[(-1)+-1]
  5320  002762  0EFE               	movlw	-2
  5321  002764  50E3               	movf	plusw1,w,c
  5322  002766  6ED9               	movwf	fsr2l,c
  5323  002768  6ADA               	clrf	fsr2h,c
  5324  00276A  0E01               	movlw	1
  5325  00276C  D211               	goto	L17
  5326  00276E                     l1602:
  5327                           
  5328                           ;gemsecs.c: 77:   rxData_l = 0;
  5329  00276E  6A2F               	clrf	m_protocol@rxData_l,c
  5330                           
  5331                           ;gemsecs.c: 79:   WaitMs(50);
  5332  002770  0E32               	movlw	50
  5333  002772  6EE6               	movwf	postinc1,c
  5334  002774  0E00               	movlw	0
  5335  002776  6EE6               	movwf	postinc1,c
  5336  002778  ECA3  F031         	call	_WaitMs	;wreg free
  5337                           
  5338                           ;gemsecs.c: 80:   if (V.uart == 1)
  5339  00277C  0100               	movlb	0	; () banked
  5340  00277E  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  5341  002780  A4D8               	btfss	status,2,c
  5342  002782  D016               	goto	l9213
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;gemsecs.c: 82:    if (rand() < 31000)
  5346  002784  ECD9  F026         	call	_rand	;wreg free
  5347  002788  BE3E               	btfsc	btemp+1,7,c
  5348  00278A  D006               	goto	u5950
  5349  00278C  0E18               	movlw	24
  5350  00278E  5C3D               	subwf	btemp,w,c
  5351  002790  0E79               	movlw	121
  5352  002792  583E               	subwfb	btemp+1,w,c
  5353  002794  B0D8               	btfsc	status,0,c
  5354  002796  D00C               	goto	l9213
  5355  002798                     u5950:
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;gemsecs.c: 84:     secs_send((uint8_t*) & H27[0], sizeof(header27), 1, V.uart);
  5359  002798  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  5360  00279A  6EE6               	movwf	postinc1,c
  5361  00279C  0E01               	movlw	1
  5362  00279E  6EE6               	movwf	postinc1,c
  5363  0027A0  0E1E               	movlw	30
  5364  0027A2  6EE6               	movwf	postinc1,c
  5365  0027A4  0EB0               	movlw	low _H27
  5366  0027A6  6EE6               	movwf	postinc1,c
  5367  0027A8  0E02               	movlw	high _H27
  5368  0027AA  6EE6               	movwf	postinc1,c
  5369  0027AC  EC0F  F023         	call	_secs_send	;wreg free
  5370  0027B0                     l9213:
  5371                           
  5372                           ;gemsecs.c: 85:   if (V.uart == 2)
  5373  0027B0  0E02               	movlw	2
  5374  0027B2  0100               	movlb	0	; () banked
  5375  0027B4  19C0               	xorwf	(_V+96)& (0+255),w,b	;volatile
  5376  0027B6  A4D8               	btfss	status,2,c
  5377  0027B8  D016               	goto	l9219
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;gemsecs.c: 87:    if (rand() < 31000)
  5381  0027BA  ECD9  F026         	call	_rand	;wreg free
  5382  0027BE  BE3E               	btfsc	btemp+1,7,c
  5383  0027C0  D006               	goto	u5970
  5384  0027C2  0E18               	movlw	24
  5385  0027C4  5C3D               	subwf	btemp,w,c
  5386  0027C6  0E79               	movlw	121
  5387  0027C8  583E               	subwfb	btemp+1,w,c
  5388  0027CA  B0D8               	btfsc	status,0,c
  5389  0027CC  D00C               	goto	l9219
  5390  0027CE                     u5970:
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;gemsecs.c: 89:     secs_send((uint8_t*) & H10[0], sizeof(header10), 1, V.uart);
  5394  0027CE  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  5395  0027D0  6EE6               	movwf	postinc1,c
  5396  0027D2  0E01               	movlw	1
  5397  0027D4  6EE6               	movwf	postinc1,c
  5398  0027D6  0E0D               	movlw	13
  5399  0027D8  6EE6               	movwf	postinc1,c
  5400  0027DA  0E07               	movlw	low _H10
  5401  0027DC  6EE6               	movwf	postinc1,c
  5402  0027DE  0E01               	movlw	high _H10
  5403  0027E0  6EE6               	movwf	postinc1,c
  5404  0027E2  EC0F  F023         	call	_secs_send	;wreg free
  5405  0027E6                     l9219:
  5406                           
  5407                           ;gemsecs.c: 91:   V.error = LINK_ERROR_NONE;
  5408  0027E6  0E0A               	movlw	10
  5409  0027E8  0100               	movlb	0	; () banked
  5410  0027EA  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;gemsecs.c: 92:   *m_link = LINK_STATE_EOT;
  5414                           ;stkvar	_m_link @ sp[(-1)+-1]
  5415  0027EC  0EFE               	movlw	-2
  5416  0027EE  50E3               	movf	plusw1,w,c
  5417  0027F0  6ED9               	movwf	fsr2l,c
  5418  0027F2  6ADA               	clrf	fsr2h,c
  5419  0027F4  0E02               	movlw	2
  5420  0027F6  6EDF               	movwf	indf2,c
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;gemsecs.c: 93:   StartTimer(TMR_T2, 2000);
  5424  0027F8  0ED0               	movlw	208
  5425  0027FA  6EE6               	movwf	postinc1,c
  5426  0027FC  0E07               	movlw	7
  5427  0027FE  6EE6               	movwf	postinc1,c
  5428  002800  0E02               	movlw	2
  5429  002802  6EE6               	movwf	postinc1,c
  5430  002804  ECCB  F030         	call	_StartTimer	;wreg free
  5431                           
  5432                           ;gemsecs.c: 94:   break;
  5433  002808  D1E6               	goto	l9373
  5434  00280A                     l9225:
  5435                           
  5436                           ;gemsecs.c: 96:   if (TimerDone(TMR_T2)) {
  5437  00280A  0E02               	movlw	2
  5438  00280C  6EE6               	movwf	postinc1,c
  5439  00280E  EC6E  F032         	call	_TimerDone	;wreg free
  5440  002812  503D               	movf	btemp,w,c
  5441  002814  B4D8               	btfsc	status,2,c
  5442  002816  D00F               	goto	l9235
  5443                           
  5444                           ;gemsecs.c: 97:    V.error = LINK_ERROR_T2;
  5445  002818  0E0C               	movlw	12
  5446  00281A  0100               	movlb	0	; () banked
  5447  00281C  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;gemsecs.c: 98:    V.timer_error++;
  5451  00281E  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  5452  002820  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;gemsecs.c: 99:    V.failed_receive = 2;
  5456  002822  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5457  002824  0BF0               	andlw	-16
  5458  002826  0902               	iorlw	2
  5459  002828  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;gemsecs.c: 100:    *m_link = LINK_STATE_NAK;
  5463                           ;stkvar	_m_link @ sp[(-1)+-1]
  5464  00282A  0EFE               	movlw	-2
  5465  00282C  50E3               	movf	plusw1,w,c
  5466  00282E  6ED9               	movwf	fsr2l,c
  5467  002830  6ADA               	clrf	fsr2h,c
  5468  002832  0E05               	movlw	5
  5469  002834  D1AD               	goto	L17
  5470  002836                     l9235:
  5471                           
  5472                           ;gemsecs.c: 102:    if (UART1_is_rx_ready()) {
  5473  002836  EC41  F035         	call	_UART1_is_rx_ready	;wreg free
  5474  00283A  503D               	movf	btemp,w,c
  5475  00283C  B4D8               	btfsc	status,2,c
  5476  00283E  D0A8               	goto	l9285
  5477                           
  5478                           ;gemsecs.c: 103:     rxData = UART1_Read();
  5479  002840  EC68  F031         	call	_UART1_Read	;wreg free
  5480                           
  5481                           ;stkvar	_rxData @ sp[(-1)+0]
  5482  002844  0EFF               	movlw	-1
  5483  002846  0060  F0F7  FFE3   	movff	btemp,plusw1
  5484                           
  5485                           ; BSR set to: 57
  5486                           ;gemsecs.c: 104:     if (rxData_l == 0) {
  5487  00284C  502F               	movf	m_protocol@rxData_l,w,c
  5488  00284E  A4D8               	btfss	status,2,c
  5489  002850  D00C               	goto	l9247
  5490                           
  5491                           ; BSR set to: 57
  5492                           ;gemsecs.c: 105:      r_block.length = rxData;
  5493                           ;stkvar	_rxData @ sp[(-1)+0]
  5494  002852  0EFF               	movlw	-1
  5495  002854  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  5496                           
  5497                           ; BSR set to: 57
  5498                           ;gemsecs.c: 106:      run_checksum(0, 1);
  5499  00285A  0E01               	movlw	1
  5500  00285C  6EE6               	movwf	postinc1,c
  5501  00285E  0E00               	movlw	0
  5502  002860  6EE6               	movwf	postinc1,c
  5503  002862  EC5A  F032         	call	_run_checksum	;wreg free
  5504                           
  5505                           ;gemsecs.c: 107:      rxData_l++;
  5506  002866  2A2F               	incf	m_protocol@rxData_l,f,c
  5507                           
  5508                           ;gemsecs.c: 108:     } else {
  5509  002868  D093               	goto	l9285
  5510  00286A                     l9247:
  5511                           
  5512                           ; BSR set to: 57
  5513                           ;gemsecs.c: 112:      if (rxData_l <= sizeof(block10))
  5514  00286A  0E0B               	movlw	11
  5515  00286C  602F               	cpfslt	m_protocol@rxData_l,c
  5516  00286E  D00C               	goto	l9251
  5517                           
  5518                           ; BSR set to: 57
  5519                           ;gemsecs.c: 113:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5520                           ;stkvar	_rxData @ sp[(-1)+0]
  5521  002870  502F               	movf	m_protocol@rxData_l,w,c
  5522  002872  0820               	sublw	low (_H10+25)
  5523  002874  6ED9               	movwf	fsr2l,c
  5524  002876  0E00               	movlw	0
  5525  002878  A0D8               	btfss	status,0,c
  5526  00287A  2AE8               	incf	wreg,f,c
  5527  00287C  0801               	sublw	high (_H10+25)
  5528  00287E  6EDA               	movwf	fsr2h,c
  5529  002880  0EFF               	movlw	-1
  5530  002882  006F FF8F FFDF     	movff	plusw1,indf2
  5531  002888                     l9251:
  5532                           
  5533                           ; BSR set to: 57
  5534                           ;gemsecs.c: 114:      if (rxData_l <= r_block.length)
  5535  002888  502F               	movf	m_protocol@rxData_l,w,c
  5536  00288A  0100               	movlb	0	; () banked
  5537  00288C  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  5538  00288E  A0D8               	btfss	status,0,c
  5539  002890  D00D               	goto	l9255
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;gemsecs.c: 115:       V.r_checksum = run_checksum(rxData, 0);
  5543  002892  0E00               	movlw	0
  5544  002894  6EE6               	movwf	postinc1,c
  5545                           
  5546                           ;stkvar	_rxData @ sp[(-2)+0]
  5547  002896  0EFE               	movlw	-2
  5548  002898  50E3               	movf	plusw1,w,c
  5549  00289A  6EE6               	movwf	postinc1,c
  5550  00289C  EC5A  F032         	call	_run_checksum	;wreg free
  5551  0028A0  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  5552  0028A6  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  5553  0028AC                     l9255:
  5554                           
  5555                           ;gemsecs.c: 117:      if (rxData_l == r_block.length + 1)
  5556  0028AC  502F               	movf	m_protocol@rxData_l,w,c
  5557  0028AE  6E47               	movwf	btemp+10,c
  5558  0028B0  6A48               	clrf	btemp+11,c
  5559  0028B2  0100               	movlb	0	; () banked
  5560  0028B4  51CE               	movf	(_r_block+12)& (0+255),w,b
  5561  0028B6  6E45               	movwf	btemp+8,c
  5562  0028B8  6A46               	clrf	btemp+9,c
  5563  0028BA  0E01               	movlw	1
  5564  0028BC  2645               	addwf	btemp+8,f,c
  5565  0028BE  0E00               	movlw	0
  5566  0028C0  2246               	addwfc	btemp+9,f,c
  5567  0028C2  5047               	movf	btemp+10,w,c
  5568  0028C4  1845               	xorwf	btemp+8,w,c
  5569  0028C6  E109               	bnz	l9259
  5570  0028C8  5048               	movf	btemp+11,w,c
  5571  0028CA  1846               	xorwf	btemp+9,w,c
  5572  0028CC  A4D8               	btfss	status,2,c
  5573  0028CE  D005               	goto	l9259
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;gemsecs.c: 118:       H10[1].checksum = (uint16_t) rxData << 8;
  5577                           ;stkvar	_rxData @ sp[(-1)+0]
  5578  0028D0  0EFF               	movlw	-1
  5579  0028D2  50E3               	movf	plusw1,w,c
  5580  0028D4  0101               	movlb	1	; () banked
  5581  0028D6  6F15               	movwf	(_H10+14)& (0+255),b
  5582  0028D8  6B14               	clrf	(_H10+13)& (0+255),b
  5583  0028DA                     l9259:
  5584                           
  5585                           ;gemsecs.c: 119:      if (rxData_l == r_block.length + 2)
  5586  0028DA  502F               	movf	m_protocol@rxData_l,w,c
  5587  0028DC  6E47               	movwf	btemp+10,c
  5588  0028DE  6A48               	clrf	btemp+11,c
  5589  0028E0  0100               	movlb	0	; () banked
  5590  0028E2  51CE               	movf	(_r_block+12)& (0+255),w,b
  5591  0028E4  6E45               	movwf	btemp+8,c
  5592  0028E6  6A46               	clrf	btemp+9,c
  5593  0028E8  0E02               	movlw	2
  5594  0028EA  2645               	addwf	btemp+8,f,c
  5595  0028EC  0E00               	movlw	0
  5596  0028EE  2246               	addwfc	btemp+9,f,c
  5597  0028F0  5047               	movf	btemp+10,w,c
  5598  0028F2  1845               	xorwf	btemp+8,w,c
  5599  0028F4  E10A               	bnz	l9263
  5600  0028F6  5048               	movf	btemp+11,w,c
  5601  0028F8  1846               	xorwf	btemp+9,w,c
  5602  0028FA  A4D8               	btfss	status,2,c
  5603  0028FC  D006               	goto	l9263
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;gemsecs.c: 120:       H10[1].checksum += rxData;
  5607                           ;stkvar	_rxData @ sp[(-1)+0]
  5608  0028FE  0EFF               	movlw	-1
  5609  002900  50E3               	movf	plusw1,w,c
  5610  002902  0101               	movlb	1	; () banked
  5611  002904  2714               	addwf	(_H10+13)& (0+255),f,b
  5612  002906  0E00               	movlw	0
  5613  002908  2315               	addwfc	(_H10+14)& (0+255),f,b
  5614  00290A                     l9263:
  5615                           
  5616                           ;gemsecs.c: 122:      rxData_l++;
  5617  00290A  2A2F               	incf	m_protocol@rxData_l,f,c
  5618                           
  5619                           ;gemsecs.c: 123:      if (rxData_l > (r_block.length + 2)) {
  5620  00290C  502F               	movf	m_protocol@rxData_l,w,c
  5621  00290E  6E47               	movwf	btemp+10,c
  5622  002910  6A48               	clrf	btemp+11,c
  5623  002912  0100               	movlb	0	; () banked
  5624  002914  51CE               	movf	(_r_block+12)& (0+255),w,b
  5625  002916  6E45               	movwf	btemp+8,c
  5626  002918  6A46               	clrf	btemp+9,c
  5627  00291A  0E02               	movlw	2
  5628  00291C  2645               	addwf	btemp+8,f,c
  5629  00291E  0E00               	movlw	0
  5630  002920  2246               	addwfc	btemp+9,f,c
  5631  002922  5047               	movf	btemp+10,w,c
  5632  002924  5C45               	subwf	btemp+8,w,c
  5633  002926  5046               	movf	btemp+9,w,c
  5634  002928  0A80               	xorlw	128
  5635  00292A  6E3D               	movwf	btemp,c
  5636  00292C  5048               	movf	btemp+11,w,c
  5637  00292E  0A80               	xorlw	128
  5638  002930  583D               	subwfb	btemp,w,c
  5639  002932  B0D8               	btfsc	status,0,c
  5640  002934  D02D               	goto	l9285
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;gemsecs.c: 124:       if (V.r_checksum == H10[1].checksum) {
  5644  002936  0101               	movlb	1	; () banked
  5645  002938  5114               	movf	(_H10+13)& (0+255),w,b
  5646  00293A  0100               	movlb	0	; () banked
  5647  00293C  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5648  00293E  E10E               	bnz	l9273
  5649  002940  0101               	movlb	1	; () banked
  5650  002942  5115               	movf	(_H10+14)& (0+255),w,b
  5651  002944  0100               	movlb	0	; () banked
  5652  002946  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5653  002948  A4D8               	btfss	status,2,c
  5654  00294A  D008               	goto	l9273
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;gemsecs.c: 125:        *m_link = LINK_STATE_ACK;
  5658                           ;stkvar	_m_link @ sp[(-1)+-1]
  5659  00294C  0EFE               	movlw	-2
  5660  00294E  50E3               	movf	plusw1,w,c
  5661  002950  6ED9               	movwf	fsr2l,c
  5662  002952  6ADA               	clrf	fsr2h,c
  5663  002954  0E03               	movlw	3
  5664  002956  D01B               	goto	L14
  5665  002958                     l9271:
  5666  002958  EC68  F031         	call	_UART1_Read	;wreg free
  5667  00295C                     l9273:
  5668                           
  5669                           ;gemsecs.c: 127:        while (UART1_is_rx_ready())
  5670  00295C  EC41  F035         	call	_UART1_is_rx_ready	;wreg free
  5671  002960  503D               	movf	btemp,w,c
  5672  002962  A4D8               	btfss	status,2,c
  5673  002964  D7F9               	goto	l9271
  5674                           
  5675                           ;gemsecs.c: 129:        WaitMs(500);
  5676  002966  0EF4               	movlw	244
  5677  002968  6EE6               	movwf	postinc1,c
  5678  00296A  0E01               	movlw	1
  5679  00296C  6EE6               	movwf	postinc1,c
  5680  00296E  ECA3  F031         	call	_WaitMs	;wreg free
  5681                           
  5682                           ;gemsecs.c: 130:        V.error = LINK_ERROR_CHECKSUM;
  5683  002972  0E0F               	movlw	15
  5684  002974  0100               	movlb	0	; () banked
  5685  002976  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;gemsecs.c: 131:        V.checksum_error++;
  5689  002978  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5690  00297A  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;gemsecs.c: 132:        V.failed_receive = 3;
  5694  00297C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5695  00297E  0BF0               	andlw	-16
  5696  002980  0903               	iorlw	3
  5697  002982  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;gemsecs.c: 133:        *m_link = LINK_STATE_NAK;
  5701                           ;stkvar	_m_link @ sp[(-1)+-1]
  5702  002984  0EFE               	movlw	-2
  5703  002986  50E3               	movf	plusw1,w,c
  5704  002988  6ED9               	movwf	fsr2l,c
  5705  00298A  6ADA               	clrf	fsr2h,c
  5706  00298C  0E05               	movlw	5
  5707  00298E                     L14:
  5708  00298E  6EDF               	movwf	indf2,c
  5709  002990                     l9285:
  5710                           
  5711                           ;gemsecs.c: 139:    if (UART2_is_rx_ready()) {
  5712  002990  EC3D  F035         	call	_UART2_is_rx_ready	;wreg free
  5713  002994  503D               	movf	btemp,w,c
  5714  002996  B4D8               	btfsc	status,2,c
  5715  002998  D11E               	goto	l9373
  5716                           
  5717                           ;gemsecs.c: 140:     rxData = UART2_Read();
  5718  00299A  EC49  F031         	call	_UART2_Read	;wreg free
  5719                           
  5720                           ;stkvar	_rxData @ sp[(-1)+0]
  5721  00299E  0EFF               	movlw	-1
  5722  0029A0  0060  F0F7  FFE3   	movff	btemp,plusw1
  5723                           
  5724                           ; BSR set to: 57
  5725                           ;gemsecs.c: 141:     if (rxData_l == 0) {
  5726  0029A6  502F               	movf	m_protocol@rxData_l,w,c
  5727  0029A8  A4D8               	btfss	status,2,c
  5728  0029AA  D00C               	goto	l9297
  5729                           
  5730                           ; BSR set to: 57
  5731                           ;gemsecs.c: 142:      r_block.length = rxData;
  5732                           ;stkvar	_rxData @ sp[(-1)+0]
  5733  0029AC  0EFF               	movlw	-1
  5734  0029AE  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  5735                           
  5736                           ; BSR set to: 57
  5737                           ;gemsecs.c: 143:      run_checksum(0, 1);
  5738  0029B4  0E01               	movlw	1
  5739  0029B6  6EE6               	movwf	postinc1,c
  5740  0029B8  0E00               	movlw	0
  5741  0029BA  6EE6               	movwf	postinc1,c
  5742  0029BC  EC5A  F032         	call	_run_checksum	;wreg free
  5743                           
  5744                           ;gemsecs.c: 144:      rxData_l++;
  5745  0029C0  2A2F               	incf	m_protocol@rxData_l,f,c
  5746                           
  5747                           ;gemsecs.c: 145:     } else {
  5748  0029C2  D109               	goto	l9373
  5749  0029C4                     l9297:
  5750                           
  5751                           ; BSR set to: 57
  5752                           ;gemsecs.c: 149:      if (rxData_l <= sizeof(block10))
  5753  0029C4  0E0B               	movlw	11
  5754  0029C6  602F               	cpfslt	m_protocol@rxData_l,c
  5755  0029C8  D00C               	goto	l9301
  5756                           
  5757                           ; BSR set to: 57
  5758                           ;gemsecs.c: 150:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5759                           ;stkvar	_rxData @ sp[(-1)+0]
  5760  0029CA  502F               	movf	m_protocol@rxData_l,w,c
  5761  0029CC  0820               	sublw	low (_H10+25)
  5762  0029CE  6ED9               	movwf	fsr2l,c
  5763  0029D0  0E00               	movlw	0
  5764  0029D2  A0D8               	btfss	status,0,c
  5765  0029D4  2AE8               	incf	wreg,f,c
  5766  0029D6  0801               	sublw	high (_H10+25)
  5767  0029D8  6EDA               	movwf	fsr2h,c
  5768  0029DA  0EFF               	movlw	-1
  5769  0029DC  006F FF8F FFDF     	movff	plusw1,indf2
  5770  0029E2                     l9301:
  5771                           
  5772                           ; BSR set to: 57
  5773                           ;gemsecs.c: 151:      if (rxData_l <= r_block.length)
  5774  0029E2  502F               	movf	m_protocol@rxData_l,w,c
  5775  0029E4  0100               	movlb	0	; () banked
  5776  0029E6  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  5777  0029E8  A0D8               	btfss	status,0,c
  5778  0029EA  D00D               	goto	l9305
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;gemsecs.c: 152:       V.r_checksum = run_checksum(rxData, 0);
  5782  0029EC  0E00               	movlw	0
  5783  0029EE  6EE6               	movwf	postinc1,c
  5784                           
  5785                           ;stkvar	_rxData @ sp[(-2)+0]
  5786  0029F0  0EFE               	movlw	-2
  5787  0029F2  50E3               	movf	plusw1,w,c
  5788  0029F4  6EE6               	movwf	postinc1,c
  5789  0029F6  EC5A  F032         	call	_run_checksum	;wreg free
  5790  0029FA  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  5791  002A00  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  5792  002A06                     l9305:
  5793                           
  5794                           ;gemsecs.c: 154:      if (rxData_l == r_block.length + 1)
  5795  002A06  502F               	movf	m_protocol@rxData_l,w,c
  5796  002A08  6E47               	movwf	btemp+10,c
  5797  002A0A  6A48               	clrf	btemp+11,c
  5798  002A0C  0100               	movlb	0	; () banked
  5799  002A0E  51CE               	movf	(_r_block+12)& (0+255),w,b
  5800  002A10  6E45               	movwf	btemp+8,c
  5801  002A12  6A46               	clrf	btemp+9,c
  5802  002A14  0E01               	movlw	1
  5803  002A16  2645               	addwf	btemp+8,f,c
  5804  002A18  0E00               	movlw	0
  5805  002A1A  2246               	addwfc	btemp+9,f,c
  5806  002A1C  5047               	movf	btemp+10,w,c
  5807  002A1E  1845               	xorwf	btemp+8,w,c
  5808  002A20  E109               	bnz	l9309
  5809  002A22  5048               	movf	btemp+11,w,c
  5810  002A24  1846               	xorwf	btemp+9,w,c
  5811  002A26  A4D8               	btfss	status,2,c
  5812  002A28  D005               	goto	l9309
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;gemsecs.c: 155:       H10[1].checksum = (uint16_t) rxData << 8;
  5816                           ;stkvar	_rxData @ sp[(-1)+0]
  5817  002A2A  0EFF               	movlw	-1
  5818  002A2C  50E3               	movf	plusw1,w,c
  5819  002A2E  0101               	movlb	1	; () banked
  5820  002A30  6F15               	movwf	(_H10+14)& (0+255),b
  5821  002A32  6B14               	clrf	(_H10+13)& (0+255),b
  5822  002A34                     l9309:
  5823                           
  5824                           ;gemsecs.c: 156:      if (rxData_l == r_block.length + 2)
  5825  002A34  502F               	movf	m_protocol@rxData_l,w,c
  5826  002A36  6E47               	movwf	btemp+10,c
  5827  002A38  6A48               	clrf	btemp+11,c
  5828  002A3A  0100               	movlb	0	; () banked
  5829  002A3C  51CE               	movf	(_r_block+12)& (0+255),w,b
  5830  002A3E  6E45               	movwf	btemp+8,c
  5831  002A40  6A46               	clrf	btemp+9,c
  5832  002A42  0E02               	movlw	2
  5833  002A44  2645               	addwf	btemp+8,f,c
  5834  002A46  0E00               	movlw	0
  5835  002A48  2246               	addwfc	btemp+9,f,c
  5836  002A4A  5047               	movf	btemp+10,w,c
  5837  002A4C  1845               	xorwf	btemp+8,w,c
  5838  002A4E  E10A               	bnz	l9313
  5839  002A50  5048               	movf	btemp+11,w,c
  5840  002A52  1846               	xorwf	btemp+9,w,c
  5841  002A54  A4D8               	btfss	status,2,c
  5842  002A56  D006               	goto	l9313
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;gemsecs.c: 157:       H10[1].checksum += rxData;
  5846                           ;stkvar	_rxData @ sp[(-1)+0]
  5847  002A58  0EFF               	movlw	-1
  5848  002A5A  50E3               	movf	plusw1,w,c
  5849  002A5C  0101               	movlb	1	; () banked
  5850  002A5E  2714               	addwf	(_H10+13)& (0+255),f,b
  5851  002A60  0E00               	movlw	0
  5852  002A62  2315               	addwfc	(_H10+14)& (0+255),f,b
  5853  002A64                     l9313:
  5854                           
  5855                           ;gemsecs.c: 159:      rxData_l++;
  5856  002A64  2A2F               	incf	m_protocol@rxData_l,f,c
  5857                           
  5858                           ;gemsecs.c: 160:      if (rxData_l > (r_block.length + 2)) {
  5859  002A66  502F               	movf	m_protocol@rxData_l,w,c
  5860  002A68  6E47               	movwf	btemp+10,c
  5861  002A6A  6A48               	clrf	btemp+11,c
  5862  002A6C  0100               	movlb	0	; () banked
  5863  002A6E  51CE               	movf	(_r_block+12)& (0+255),w,b
  5864  002A70  6E45               	movwf	btemp+8,c
  5865  002A72  6A46               	clrf	btemp+9,c
  5866  002A74  0E02               	movlw	2
  5867  002A76  2645               	addwf	btemp+8,f,c
  5868  002A78  0E00               	movlw	0
  5869  002A7A  2246               	addwfc	btemp+9,f,c
  5870  002A7C  5047               	movf	btemp+10,w,c
  5871  002A7E  5C45               	subwf	btemp+8,w,c
  5872  002A80  5046               	movf	btemp+9,w,c
  5873  002A82  0A80               	xorlw	128
  5874  002A84  6E3D               	movwf	btemp,c
  5875  002A86  5048               	movf	btemp+11,w,c
  5876  002A88  0A80               	xorlw	128
  5877  002A8A  583D               	subwfb	btemp,w,c
  5878  002A8C  B0D8               	btfsc	status,0,c
  5879  002A8E  D0A3               	goto	l9373
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;gemsecs.c: 161:       if (V.r_checksum == H10[1].checksum) {
  5883  002A90  0101               	movlb	1	; () banked
  5884  002A92  5114               	movf	(_H10+13)& (0+255),w,b
  5885  002A94  0100               	movlb	0	; () banked
  5886  002A96  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5887  002A98  E10E               	bnz	l9323
  5888  002A9A  0101               	movlb	1	; () banked
  5889  002A9C  5115               	movf	(_H10+14)& (0+255),w,b
  5890  002A9E  0100               	movlb	0	; () banked
  5891  002AA0  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5892  002AA2  A4D8               	btfss	status,2,c
  5893  002AA4  D008               	goto	l9323
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;gemsecs.c: 162:        *m_link = LINK_STATE_ACK;
  5897                           ;stkvar	_m_link @ sp[(-1)+-1]
  5898  002AA6  0EFE               	movlw	-2
  5899  002AA8  50E3               	movf	plusw1,w,c
  5900  002AAA  6ED9               	movwf	fsr2l,c
  5901  002AAC  6ADA               	clrf	fsr2h,c
  5902  002AAE  0E03               	movlw	3
  5903  002AB0  D06F               	goto	L17
  5904  002AB2                     l9321:
  5905  002AB2  EC49  F031         	call	_UART2_Read	;wreg free
  5906  002AB6                     l9323:
  5907                           
  5908                           ;gemsecs.c: 164:        while (UART2_is_rx_ready())
  5909  002AB6  EC3D  F035         	call	_UART2_is_rx_ready	;wreg free
  5910  002ABA  503D               	movf	btemp,w,c
  5911  002ABC  A4D8               	btfss	status,2,c
  5912  002ABE  D7F9               	goto	l9321
  5913                           
  5914                           ;gemsecs.c: 166:        WaitMs(500);
  5915  002AC0  0EF4               	movlw	244
  5916  002AC2  6EE6               	movwf	postinc1,c
  5917  002AC4  0E01               	movlw	1
  5918  002AC6  6EE6               	movwf	postinc1,c
  5919  002AC8  ECA3  F031         	call	_WaitMs	;wreg free
  5920                           
  5921                           ;gemsecs.c: 167:        V.error = LINK_ERROR_CHECKSUM;
  5922  002ACC  0E0F               	movlw	15
  5923  002ACE  0100               	movlb	0	; () banked
  5924  002AD0  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;gemsecs.c: 168:        V.checksum_error++;
  5928  002AD2  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5929  002AD4  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;gemsecs.c: 169:        V.failed_receive = 4;
  5933  002AD6  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5934  002AD8  0BF0               	andlw	-16
  5935  002ADA  0904               	iorlw	4
  5936  002ADC  D6A5               	goto	L16
  5937  002ADE                     l9335:
  5938                           
  5939                           ;gemsecs.c: 179:   WaitMs(50);
  5940  002ADE  0E32               	movlw	50
  5941  002AE0  6EE6               	movwf	postinc1,c
  5942  002AE2  0E00               	movlw	0
  5943  002AE4  6EE6               	movwf	postinc1,c
  5944  002AE6  ECA3  F031         	call	_WaitMs	;wreg free
  5945                           
  5946                           ;gemsecs.c: 181:   V.stream = H10[1].block.block.stream;
  5947  002AEA  0101               	movlb	1	; () banked
  5948  002AEC  511D               	movf	(_H10+22)& (0+255),w,b
  5949  002AEE  0B7F               	andlw	127
  5950  002AF0  0100               	movlb	0	; () banked
  5951  002AF2  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;gemsecs.c: 182:   V.function = H10[1].block.block.function;
  5955  002AF4  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;gemsecs.c: 183:   V.systemb = H10[1].block.block.systemb;
  5959  002AF8  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  5960  002AFC  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  5961  002B00  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  5962  002B04  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;gemsecs.c: 184:   V.rbit = H10[1].block.block.rbit;
  5966  002B08  0101               	movlb	1	; () banked
  5967  002B0A  AF1F               	btfss	(_H10+24)& (0+255),7,b
  5968  002B0C  D003               	bra	u6175
  5969  002B0E  0100               	movlb	0	; () banked
  5970  002B10  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  5971  002B12  D002               	bra	u6177
  5972  002B14                     u6175:
  5973  002B14  0100               	movlb	0	; () banked
  5974  002B16  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  5975  002B18                     u6177:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;gemsecs.c: 185:   V.wbit = H10[1].block.block.wbit;
  5979  002B18  0101               	movlb	1	; () banked
  5980  002B1A  AF1D               	btfss	(_H10+22)& (0+255),7,b
  5981  002B1C  D003               	bra	u6185
  5982  002B1E  0100               	movlb	0	; () banked
  5983  002B20  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  5984  002B22  D002               	bra	u6187
  5985  002B24                     u6185:
  5986  002B24  0100               	movlb	0	; () banked
  5987  002B26  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  5988  002B28                     u6187:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;gemsecs.c: 186:   V.ebit = H10[1].block.block.ebit;
  5992  002B28  0101               	movlb	1	; () banked
  5993  002B2A  AF1B               	btfss	(_H10+20)& (0+255),7,b
  5994  002B2C  D003               	bra	u6195
  5995  002B2E  0100               	movlb	0	; () banked
  5996  002B30  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  5997  002B32  D002               	bra	u6197
  5998  002B34                     u6195:
  5999  002B34  0100               	movlb	0	; () banked
  6000  002B36  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  6001  002B38                     u6197:
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;gemsecs.c: 187:   V.failed_receive = 0;
  6005  002B38  0EF0               	movlw	-16
  6006  002B3A  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;gemsecs.c: 188:   V.g_state = secs_gem_state(V.stream, V.function);
  6010  002B3C  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  6011  002B3E  6EE6               	movwf	postinc1,c
  6012  002B40  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  6013  002B42  6EE6               	movwf	postinc1,c
  6014  002B44  EC80  F02A         	call	_secs_gem_state	;wreg free
  6015  002B48  503D               	movf	btemp,w,c
  6016  002B4A  0100               	movlb	0	; () banked
  6017  002B4C  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;gemsecs.c: 189:   *m_link = LINK_STATE_DONE;
  6021                           ;stkvar	_m_link @ sp[(-1)+-1]
  6022  002B4E  0EFE               	movlw	-2
  6023  002B50  50E3               	movf	plusw1,w,c
  6024  002B52  6ED9               	movwf	fsr2l,c
  6025  002B54  6ADA               	clrf	fsr2h,c
  6026  002B56  0E04               	movlw	4
  6027  002B58  D01B               	goto	L17
  6028  002B5A                     l9355:
  6029                           
  6030                           ;gemsecs.c: 192:   *m_link = LINK_STATE_ERROR;
  6031                           ;stkvar	_m_link @ sp[(-1)+-1]
  6032  002B5A  0EFE               	movlw	-2
  6033  002B5C  50E3               	movf	plusw1,w,c
  6034  002B5E  6ED9               	movwf	fsr2l,c
  6035  002B60  6ADA               	clrf	fsr2h,c
  6036  002B62  0E06               	movlw	6
  6037  002B64  6EDF               	movwf	indf2,c
  6038                           
  6039                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  6040  002B66  D002               	goto	l9359
  6041  002B68                     l9357:
  6042                           
  6043                           ;gemsecs.c: 194:    UART1_Read();
  6044  002B68  EC68  F031         	call	_UART1_Read	;wreg free
  6045  002B6C                     l9359:
  6046                           
  6047                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  6048  002B6C  5037               	movf	_uart1RxCount,w,c	;volatile
  6049  002B6E  B4D8               	btfsc	status,2,c
  6050  002B70  D003               	goto	l9363
  6051  002B72  D7FA               	goto	l9357
  6052  002B74                     l9361:
  6053                           
  6054                           ;gemsecs.c: 197:    UART2_Read();
  6055  002B74  EC49  F031         	call	_UART2_Read	;wreg free
  6056  002B78                     l9363:
  6057                           
  6058                           ;gemsecs.c: 196:   while ((uart2RxCount)) {
  6059  002B78  5031               	movf	_uart2RxCount,w,c	;volatile
  6060  002B7A  B4D8               	btfsc	status,2,c
  6061  002B7C  D02C               	goto	l9373
  6062  002B7E  D7FA               	goto	l9361
  6063  002B80                     l9365:
  6064                           
  6065                           ;gemsecs.c: 203:   V.failed_receive = 0;
  6066  002B80  0EF0               	movlw	-16
  6067  002B82  0100               	movlb	0	; () banked
  6068  002B84  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  6069  002B86                     l9367:
  6070                           
  6071                           ;gemsecs.c: 205:   *m_link = LINK_STATE_IDLE;
  6072                           ;stkvar	_m_link @ sp[(-1)+-1]
  6073  002B86  0EFE               	movlw	-2
  6074  002B88  50E3               	movf	plusw1,w,c
  6075  002B8A  6ED9               	movwf	fsr2l,c
  6076  002B8C  6ADA               	clrf	fsr2h,c
  6077  002B8E  0E00               	movlw	0
  6078  002B90                     L17:
  6079  002B90  6EDF               	movwf	indf2,c
  6080                           
  6081                           ;gemsecs.c: 207:   break;
  6082  002B92  D021               	goto	l9373
  6083  002B94                     l9371:
  6084                           
  6085                           ;stkvar	_m_link @ sp[(-1)+-1]
  6086  002B94  0EFE               	movlw	-2
  6087  002B96  50E3               	movf	plusw1,w,c
  6088  002B98  6ED9               	movwf	fsr2l,c
  6089  002B9A  6ADA               	clrf	fsr2h,c
  6090  002B9C  50DF               	movf	indf2,w,c
  6091  002B9E  6E47               	movwf	btemp+10,c
  6092  002BA0  6A48               	clrf	btemp+11,c
  6093                           
  6094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6095                           ; Switch size 1, requested type "simple"
  6096                           ; Number of cases is 1, Range of values is 0 to 0
  6097                           ; switch strategies available:
  6098                           ; Name         Instructions Cycles
  6099                           ; simple_byte            4     3 (average)
  6100                           ;	Chosen strategy is simple_byte
  6101  002BA2  5048               	movf	btemp+11,w,c
  6102  002BA4  0A00               	xorlw	0	; case 0
  6103  002BA6  A4D8               	btfss	status,2,c
  6104  002BA8  D7EE               	goto	l9367
  6105                           
  6106                           ; Switch size 1, requested type "simple"
  6107                           ; Number of cases is 7, Range of values is 0 to 6
  6108                           ; switch strategies available:
  6109                           ; Name         Instructions Cycles
  6110                           ; simple_byte           22    12 (average)
  6111                           ;	Chosen strategy is simple_byte
  6112  002BAA  5047               	movf	btemp+10,w,c
  6113  002BAC  0A00               	xorlw	0	; case 0
  6114  002BAE  B4D8               	btfsc	status,2,c
  6115  002BB0  D58A               	goto	l9175
  6116  002BB2  0A01               	xorlw	1	; case 1
  6117  002BB4  B4D8               	btfsc	status,2,c
  6118  002BB6  D5DB               	goto	l1602
  6119  002BB8  0A03               	xorlw	3	; case 2
  6120  002BBA  B4D8               	btfsc	status,2,c
  6121  002BBC  D626               	goto	l9225
  6122  002BBE  0A01               	xorlw	1	; case 3
  6123  002BC0  B4D8               	btfsc	status,2,c
  6124  002BC2  D78D               	goto	l9335
  6125  002BC4  0A07               	xorlw	7	; case 4
  6126  002BC6  B4D8               	btfsc	status,2,c
  6127  002BC8  D7DB               	goto	l9365
  6128  002BCA  0A01               	xorlw	1	; case 5
  6129  002BCC  B4D8               	btfsc	status,2,c
  6130  002BCE  D7C5               	goto	l9355
  6131  002BD0  0A03               	xorlw	3	; case 6
  6132  002BD2  A4D8               	btfss	status,2,c
  6133  002BD4  D7D8               	goto	l9367
  6134  002BD6                     l9373:
  6135                           
  6136                           ;gemsecs.c: 210:  return *m_link;
  6137                           ;stkvar	_m_link @ sp[(-1)+-1]
  6138  002BD6  0EFE               	movlw	-2
  6139  002BD8  50E3               	movf	plusw1,w,c
  6140  002BDA  6ED9               	movwf	fsr2l,c
  6141  002BDC  6ADA               	clrf	fsr2h,c
  6142  002BDE  50DF               	movf	indf2,w,c
  6143  002BE0  6E3D               	movwf	btemp,c
  6144                           
  6145                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6146  002BE2  52E5               	movf	postdec1,f,c
  6147  002BE4  52E5               	movf	postdec1,f,c
  6148  002BE6  0012               	return		;funcret
  6149  002BE8                     __end_of_m_protocol:
  6150                           	opt callstack 0
  6151                           
  6152 ;; *************** function _secs_send *****************
  6153 ;; Defined at:
  6154 ;;		line 446 in file "gemsecs.c"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;  byte_block      2  [STACK] PTR unsigned char 
  6157 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  6158 ;;		 -> H14(17), H13(48), H12(30), H10(91), 
  6159 ;;  length          1  [STACK] unsigned char 
  6160 ;;  fake            1  [STACK] _Bool 
  6161 ;;  s_uart          1  [STACK] unsigned char 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  k               2  [STACK] PTR unsigned char 
  6164 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  6165 ;;		 -> H14(17), H13(48), H12(30), H10(91), 
  6166 ;;  checksum        2  [STACK] unsigned short 
  6167 ;;  i               1  [STACK] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1  [STACK] _Bool 
  6170 ;; Registers used:
  6171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6181 ;;Total ram usage:        0 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    6
  6184 ;; This function calls:
  6185 ;;		_UART1_Write
  6186 ;;		_UART1_is_tx_ready
  6187 ;;		_UART1_put_buffer
  6188 ;;		_UART2_Write
  6189 ;;		_UART2_is_tx_ready
  6190 ;;		_UART2_put_buffer
  6191 ;;		_block_checksum
  6192 ;; This function is called by:
  6193 ;;		_m_protocol
  6194 ;;		_r_protocol
  6195 ;;		_t_protocol
  6196 ;; This function uses a reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text7
  6200  00461E                     __ptext7:
  6201                           	opt callstack 0
  6202  00461E                     _secs_send:
  6203                           	opt callstack 0
  6204                           
  6205                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6206  00461E  0E05               	movlw	5
  6207  004620  26E1               	addwf	fsr1l,f,c
  6208  004622  0E00               	movlw	0
  6209  004624  22E2               	addwfc	fsr1h,f,c
  6210                           
  6211                           ;gemsecs.c: 446: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 447: {;gemsecs.c: 448:  uint8_t i, *k;;gemsecs.c: 449:  uint16_t ch
      +                          ecksum;;gemsecs.c: 451:  k = (uint8_t *) byte_block;
  6212                           ;stkvar	_byte_block @ sp[(-5)+-2]
  6213                           
  6214                           ;incstack = 0
  6215  004626  0EF9               	movlw	-7
  6216  004628  006F FF8C  F047    	movff	plusw1,btemp+10
  6217  00462E  0EFA               	movlw	-6
  6218  004630  006F FF8C  F048    	movff	plusw1,btemp+11
  6219                           
  6220                           ;stkvar	_k @ sp[(-5)+0]
  6221  004636  0EFC               	movlw	-4
  6222  004638  0060  F123  FFE3   	movff	btemp+11,plusw1
  6223  00463E  0EFB               	movlw	-5
  6224  004640  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6225                           
  6226                           ;gemsecs.c: 453:  ++V.ticks;
  6227  004646  0E01               	movlw	1
  6228  004648  0100               	movlb	0	; () banked
  6229  00464A  27A6               	addwf	(_V+70)& (0+255),f,b	;volatile
  6230  00464C  0E00               	movlw	0
  6231  00464E  23A7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  6232  004650  23A8               	addwfc	(_V+72)& (0+255),f,b	;volatile
  6233  004652  23A9               	addwfc	(_V+73)& (0+255),f,b	;volatile
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;gemsecs.c: 454:  V.error = LINK_ERROR_NONE;
  6237  004654  0E0A               	movlw	10
  6238  004656  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;gemsecs.c: 455:  if ((length - 3) != k[length - 1]) {
  6242                           ;stkvar	_length @ sp[(-5)+-3]
  6243  004658  0EF8               	movlw	-8
  6244  00465A  50E3               	movf	plusw1,w,c
  6245  00465C  6E47               	movwf	btemp+10,c
  6246  00465E  6A48               	clrf	btemp+11,c
  6247                           
  6248                           ;stkvar	_k @ sp[(-5)+0]
  6249  004660  0EFB               	movlw	-5
  6250  004662  50E3               	movf	plusw1,w,c
  6251  004664  2647               	addwf	btemp+10,f,c
  6252  004666  0EFC               	movlw	-4
  6253  004668  50E3               	movf	plusw1,w,c
  6254  00466A  2248               	addwfc	btemp+11,f,c
  6255  00466C  0EFF               	movlw	255
  6256  00466E  2447               	addwf	btemp+10,w,c
  6257  004670  6ED9               	movwf	fsr2l,c
  6258  004672  0EFF               	movlw	255
  6259  004674  2048               	addwfc	btemp+11,w,c
  6260  004676  6EDA               	movwf	fsr2h,c
  6261  004678  50DF               	movf	indf2,w,c
  6262  00467A  6E47               	movwf	btemp+10,c
  6263  00467C  6A48               	clrf	btemp+11,c
  6264  00467E  0EFD               	movlw	253
  6265  004680  6E45               	movwf	btemp+8,c
  6266  004682  0EFF               	movlw	255
  6267  004684  6E46               	movwf	btemp+9,c
  6268                           
  6269                           ;stkvar	_length @ sp[(-5)+-3]
  6270  004686  0EF8               	movlw	-8
  6271  004688  50E3               	movf	plusw1,w,c
  6272  00468A  6E43               	movwf	btemp+6,c
  6273  00468C  6A44               	clrf	btemp+7,c
  6274  00468E  5045               	movf	btemp+8,w,c
  6275  004690  2643               	addwf	btemp+6,f,c
  6276  004692  5046               	movf	btemp+9,w,c
  6277  004694  2244               	addwfc	btemp+7,f,c
  6278  004696  5047               	movf	btemp+10,w,c
  6279  004698  1843               	xorwf	btemp+6,w,c
  6280  00469A  E104               	bnz	u5470
  6281  00469C  5048               	movf	btemp+11,w,c
  6282  00469E  1844               	xorwf	btemp+7,w,c
  6283  0046A0  B4D8               	btfsc	status,2,c
  6284  0046A2  D003               	goto	l8767
  6285  0046A4                     u5470:
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;gemsecs.c: 456:   V.error = LINK_ERROR_SEND;
  6289  0046A4  0E12               	movlw	18
  6290  0046A6  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6291  0046A8  D0EA               	goto	l1737
  6292  0046AA                     l8767:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;gemsecs.c: 465:  checksum = block_checksum(&k[2], length - 3);
  6296  0046AA  0EFD               	movlw	253
  6297  0046AC  6E47               	movwf	btemp+10,c
  6298  0046AE  0EFF               	movlw	255
  6299  0046B0  6E48               	movwf	btemp+11,c
  6300                           
  6301                           ;stkvar	_length @ sp[(-5)+-3]
  6302  0046B2  0EF8               	movlw	-8
  6303  0046B4  50E3               	movf	plusw1,w,c
  6304  0046B6  6E45               	movwf	btemp+8,c
  6305  0046B8  6A46               	clrf	btemp+9,c
  6306  0046BA  5047               	movf	btemp+10,w,c
  6307  0046BC  2645               	addwf	btemp+8,f,c
  6308  0046BE  5048               	movf	btemp+11,w,c
  6309  0046C0  2246               	addwfc	btemp+9,f,c
  6310  0046C2  0060  F117  FFE6   	movff	btemp+8,postinc1
  6311  0046C8  0060  F11B  FFE6   	movff	btemp+9,postinc1
  6312                           
  6313                           ;stkvar	_k @ sp[(-7)+0]
  6314  0046CE  0EF9               	movlw	-7
  6315  0046D0  50E3               	movf	plusw1,w,c
  6316  0046D2  0F02               	addlw	2
  6317  0046D4  6E47               	movwf	btemp+10,c
  6318  0046D6  0EFA               	movlw	-6
  6319  0046D8  006F FF8C  F048    	movff	plusw1,btemp+11
  6320  0046DE  0E00               	movlw	0
  6321  0046E0  2248               	addwfc	btemp+11,f,c
  6322  0046E2  0060  F11F  FFE6   	movff	btemp+10,postinc1
  6323  0046E8  0060  F123  FFE6   	movff	btemp+11,postinc1
  6324  0046EE  EC06  F029         	call	_block_checksum	;wreg free
  6325                           
  6326                           ;stkvar	_checksum @ sp[(-5)+2]
  6327  0046F2  0EFD               	movlw	-3
  6328  0046F4  0060  F0F7  FFE3   	movff	btemp,plusw1
  6329  0046FA  0EFE               	movlw	-2
  6330  0046FC  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;gemsecs.c: 466:  k[0] = checksum & 0xff;
  6334                           ;stkvar	_checksum @ sp[(-5)+2]
  6335                           ;stkvar	_k @ sp[(-5)+0]
  6336  004702  0EFB               	movlw	-5
  6337  004704  006F FF8F FFD9     	movff	plusw1,fsr2l
  6338  00470A  0EFC               	movlw	-4
  6339  00470C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6340  004712  0EFD               	movlw	-3
  6341  004714  006F FF8F FFDF     	movff	plusw1,indf2
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;gemsecs.c: 467:  k[1] = (checksum >> 8)&0xff;
  6345                           ;stkvar	_checksum @ sp[(-5)+2]
  6346  00471A  0EFE               	movlw	254
  6347  00471C  24E1               	addwf	fsr1l,w,c
  6348  00471E  6ED9               	movwf	fsr2l,c
  6349  004720  0EFF               	movlw	255
  6350  004722  20E2               	addwfc	fsr1h,w,c
  6351  004724  6EDA               	movwf	fsr2h,c
  6352                           
  6353                           ;stkvar	_k @ sp[(-5)+0]
  6354  004726  0EFB               	movlw	-5
  6355  004728  006F FF8C  F047    	movff	plusw1,btemp+10
  6356  00472E  0EFC               	movlw	-4
  6357  004730  006F FF8C  F048    	movff	plusw1,btemp+11
  6358  004736  0E01               	movlw	1
  6359  004738  2447               	addwf	btemp+10,w,c
  6360  00473A  6EE9               	movwf	fsr0l,c
  6361  00473C  0E00               	movlw	0
  6362  00473E  2048               	addwfc	btemp+11,w,c
  6363  004740  6EEA               	movwf	fsr0h,c
  6364  004742  006F FF7F FFEF     	movff	indf2,indf0
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;gemsecs.c: 468:  V.t_checksum = checksum;
  6368                           ;stkvar	_checksum @ sp[(-5)+2]
  6369  004748  0EFD               	movlw	-3
  6370  00474A  006F FF8C  F0B5    	movff	plusw1,_V+85	;volatile
  6371  004750  0EFE               	movlw	-2
  6372  004752  006F FF8C  F0B6    	movff	plusw1,_V+86	;volatile
  6373                           
  6374                           ;gemsecs.c: 470:  switch (s_uart) {
  6375  004758  D082               	goto	l8813
  6376  00475A                     l8775:
  6377  00475A  EC35  F035         	call	_UART2_is_tx_ready	;wreg free
  6378  00475E  0E3F               	movlw	63
  6379  004760  643D               	cpfsgt	btemp,c
  6380  004762  D7FB               	goto	l8775
  6381                           
  6382                           ;gemsecs.c: 473:   for (i = length; i > 0; i--) {
  6383                           ;stkvar	_length @ sp[(-5)+-3]
  6384                           ;stkvar	_i @ sp[(-5)+4]
  6385  004764  0EF8               	movlw	-8
  6386  004766  006F FF8C  F03D    	movff	plusw1,btemp
  6387  00476C  0EFF               	movlw	-1
  6388  00476E  0060  F0F7  FFE3   	movff	btemp,plusw1
  6389  004774                     l8779:
  6390                           
  6391                           ;stkvar	_i @ sp[(-5)+4]
  6392  004774  0EFF               	movlw	-1
  6393  004776  50E3               	movf	plusw1,w,c
  6394  004778  B4D8               	btfsc	status,2,c
  6395  00477A  D081               	goto	l1737
  6396                           
  6397                           ;gemsecs.c: 474:    if (fake) {
  6398                           ;stkvar	_fake @ sp[(-5)+-4]
  6399  00477C  0EF7               	movlw	-9
  6400  00477E  50E3               	movf	plusw1,w,c
  6401  004780  B4D8               	btfsc	status,2,c
  6402  004782  D015               	goto	l8787
  6403                           
  6404                           ;gemsecs.c: 475:     UART2_put_buffer(k[i - 1]);
  6405                           ;stkvar	_i @ sp[(-5)+4]
  6406  004784  0EFF               	movlw	-1
  6407  004786  50E3               	movf	plusw1,w,c
  6408  004788  6E47               	movwf	btemp+10,c
  6409  00478A  6A48               	clrf	btemp+11,c
  6410                           
  6411                           ;stkvar	_k @ sp[(-5)+0]
  6412  00478C  0EFB               	movlw	-5
  6413  00478E  50E3               	movf	plusw1,w,c
  6414  004790  2647               	addwf	btemp+10,f,c
  6415  004792  0EFC               	movlw	-4
  6416  004794  50E3               	movf	plusw1,w,c
  6417  004796  2248               	addwfc	btemp+11,f,c
  6418  004798  0EFF               	movlw	255
  6419  00479A  2447               	addwf	btemp+10,w,c
  6420  00479C  6ED9               	movwf	fsr2l,c
  6421  00479E  0EFF               	movlw	255
  6422  0047A0  2048               	addwfc	btemp+11,w,c
  6423  0047A2  6EDA               	movwf	fsr2h,c
  6424  0047A4  50DF               	movf	indf2,w,c
  6425  0047A6  6EE6               	movwf	postinc1,c
  6426  0047A8  EC30  F032         	call	_UART2_put_buffer	;wreg free
  6427                           
  6428                           ;gemsecs.c: 476:    } else {
  6429  0047AC  D014               	goto	l8789
  6430  0047AE                     l8787:
  6431                           
  6432                           ;gemsecs.c: 478:     UART2_Write(k[i - 1]);
  6433                           ;stkvar	_i @ sp[(-5)+4]
  6434  0047AE  0EFF               	movlw	-1
  6435  0047B0  50E3               	movf	plusw1,w,c
  6436  0047B2  6E47               	movwf	btemp+10,c
  6437  0047B4  6A48               	clrf	btemp+11,c
  6438                           
  6439                           ;stkvar	_k @ sp[(-5)+0]
  6440  0047B6  0EFB               	movlw	-5
  6441  0047B8  50E3               	movf	plusw1,w,c
  6442  0047BA  2647               	addwf	btemp+10,f,c
  6443  0047BC  0EFC               	movlw	-4
  6444  0047BE  50E3               	movf	plusw1,w,c
  6445  0047C0  2248               	addwfc	btemp+11,f,c
  6446  0047C2  0EFF               	movlw	255
  6447  0047C4  2447               	addwf	btemp+10,w,c
  6448  0047C6  6ED9               	movwf	fsr2l,c
  6449  0047C8  0EFF               	movlw	255
  6450  0047CA  2048               	addwfc	btemp+11,w,c
  6451  0047CC  6EDA               	movwf	fsr2h,c
  6452  0047CE  50DF               	movf	indf2,w,c
  6453  0047D0  6EE6               	movwf	postinc1,c
  6454  0047D2  EC0B  F031         	call	_UART2_Write	;wreg free
  6455  0047D6                     l8789:
  6456                           
  6457                           ; BSR set to: 57
  6458                           ;gemsecs.c: 480:   }
  6459                           ;stkvar	_i @ sp[(-5)+4]
  6460  0047D6  0EFF               	movlw	-1
  6461  0047D8  06E3               	decf	plusw1,f,c
  6462  0047DA  D7CC               	goto	l8779
  6463  0047DC                     l8793:
  6464  0047DC  EC39  F035         	call	_UART1_is_tx_ready	;wreg free
  6465  0047E0  0E3F               	movlw	63
  6466  0047E2  643D               	cpfsgt	btemp,c
  6467  0047E4  D7FB               	goto	l8793
  6468                           
  6469                           ;gemsecs.c: 485:   for (i = length; i > 0; i--) {
  6470                           ;stkvar	_length @ sp[(-5)+-3]
  6471                           ;stkvar	_i @ sp[(-5)+4]
  6472  0047E6  0EF8               	movlw	-8
  6473  0047E8  006F FF8C  F03D    	movff	plusw1,btemp
  6474  0047EE  0EFF               	movlw	-1
  6475  0047F0  0060  F0F7  FFE3   	movff	btemp,plusw1
  6476  0047F6                     l8797:
  6477                           
  6478                           ;stkvar	_i @ sp[(-5)+4]
  6479  0047F6  0EFF               	movlw	-1
  6480  0047F8  50E3               	movf	plusw1,w,c
  6481  0047FA  B4D8               	btfsc	status,2,c
  6482  0047FC  D040               	goto	l1737
  6483                           
  6484                           ;gemsecs.c: 486:    if (fake) {
  6485                           ;stkvar	_fake @ sp[(-5)+-4]
  6486  0047FE  0EF7               	movlw	-9
  6487  004800  50E3               	movf	plusw1,w,c
  6488  004802  B4D8               	btfsc	status,2,c
  6489  004804  D015               	goto	l8805
  6490                           
  6491                           ;gemsecs.c: 487:     UART1_put_buffer(k[i - 1]);
  6492                           ;stkvar	_i @ sp[(-5)+4]
  6493  004806  0EFF               	movlw	-1
  6494  004808  50E3               	movf	plusw1,w,c
  6495  00480A  6E47               	movwf	btemp+10,c
  6496  00480C  6A48               	clrf	btemp+11,c
  6497                           
  6498                           ;stkvar	_k @ sp[(-5)+0]
  6499  00480E  0EFB               	movlw	-5
  6500  004810  50E3               	movf	plusw1,w,c
  6501  004812  2647               	addwf	btemp+10,f,c
  6502  004814  0EFC               	movlw	-4
  6503  004816  50E3               	movf	plusw1,w,c
  6504  004818  2248               	addwfc	btemp+11,f,c
  6505  00481A  0EFF               	movlw	255
  6506  00481C  2447               	addwf	btemp+10,w,c
  6507  00481E  6ED9               	movwf	fsr2l,c
  6508  004820  0EFF               	movlw	255
  6509  004822  2048               	addwfc	btemp+11,w,c
  6510  004824  6EDA               	movwf	fsr2h,c
  6511  004826  50DF               	movf	indf2,w,c
  6512  004828  6EE6               	movwf	postinc1,c
  6513  00482A  EC45  F032         	call	_UART1_put_buffer	;wreg free
  6514                           
  6515                           ;gemsecs.c: 488:    } else {
  6516  00482E  D014               	goto	l8807
  6517  004830                     l8805:
  6518                           
  6519                           ;gemsecs.c: 490:     UART1_Write(k[i - 1]);
  6520                           ;stkvar	_i @ sp[(-5)+4]
  6521  004830  0EFF               	movlw	-1
  6522  004832  50E3               	movf	plusw1,w,c
  6523  004834  6E47               	movwf	btemp+10,c
  6524  004836  6A48               	clrf	btemp+11,c
  6525                           
  6526                           ;stkvar	_k @ sp[(-5)+0]
  6527  004838  0EFB               	movlw	-5
  6528  00483A  50E3               	movf	plusw1,w,c
  6529  00483C  2647               	addwf	btemp+10,f,c
  6530  00483E  0EFC               	movlw	-4
  6531  004840  50E3               	movf	plusw1,w,c
  6532  004842  2248               	addwfc	btemp+11,f,c
  6533  004844  0EFF               	movlw	255
  6534  004846  2447               	addwf	btemp+10,w,c
  6535  004848  6ED9               	movwf	fsr2l,c
  6536  00484A  0EFF               	movlw	255
  6537  00484C  2048               	addwfc	btemp+11,w,c
  6538  00484E  6EDA               	movwf	fsr2h,c
  6539  004850  50DF               	movf	indf2,w,c
  6540  004852  6EE6               	movwf	postinc1,c
  6541  004854  EC2A  F031         	call	_UART1_Write	;wreg free
  6542  004858                     l8807:
  6543                           
  6544                           ; BSR set to: 57
  6545                           ;gemsecs.c: 492:   }
  6546                           ;stkvar	_i @ sp[(-5)+4]
  6547  004858  0EFF               	movlw	-1
  6548  00485A  06E3               	decf	plusw1,f,c
  6549  00485C  D7CC               	goto	l8797
  6550  00485E                     l8813:
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;stkvar	_s_uart @ sp[(-5)+-5]
  6554  00485E  0EF6               	movlw	-10
  6555  004860  50E3               	movf	plusw1,w,c
  6556  004862  6E47               	movwf	btemp+10,c
  6557  004864  6A48               	clrf	btemp+11,c
  6558                           
  6559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6560                           ; Switch size 1, requested type "simple"
  6561                           ; Number of cases is 1, Range of values is 0 to 0
  6562                           ; switch strategies available:
  6563                           ; Name         Instructions Cycles
  6564                           ; simple_byte            4     3 (average)
  6565                           ;	Chosen strategy is simple_byte
  6566  004866  5048               	movf	btemp+11,w,c
  6567  004868  0A00               	xorlw	0	; case 0
  6568  00486A  A4D8               	btfss	status,2,c
  6569  00486C  D7B7               	goto	l8793
  6570                           
  6571                           ; BSR set to: 0
  6572                           ; Switch size 1, requested type "simple"
  6573                           ; Number of cases is 2, Range of values is 1 to 2
  6574                           ; switch strategies available:
  6575                           ; Name         Instructions Cycles
  6576                           ; simple_byte            7     4 (average)
  6577                           ;	Chosen strategy is simple_byte
  6578  00486E  5047               	movf	btemp+10,w,c
  6579  004870  0A01               	xorlw	1	; case 1
  6580  004872  B4D8               	btfsc	status,2,c
  6581  004874  D7B3               	goto	l8793
  6582  004876  0A03               	xorlw	3	; case 2
  6583  004878  B4D8               	btfsc	status,2,c
  6584  00487A  D76F               	goto	l8775
  6585  00487C  D7AF               	goto	l8793
  6586  00487E                     l1737:
  6587                           
  6588                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  6589  00487E  0EF6               	movlw	246
  6590  004880  26E1               	addwf	fsr1l,f,c
  6591  004882  0EFF               	movlw	255
  6592  004884  22E2               	addwfc	fsr1h,f,c
  6593  004886  0012               	return		;funcret
  6594  004888                     __end_of_secs_send:
  6595                           	opt callstack 0
  6596                           
  6597 ;; *************** function _block_checksum *****************
  6598 ;; Defined at:
  6599 ;;		line 19 in file "gemsecs.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  byte_block      2  [STACK] PTR unsigned char 
  6602 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  6603 ;;		 -> H14(17), H13(48), H12(30), H10(91), 
  6604 ;;  byte_count      2  [STACK] unsigned short 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;  i               2  [STACK] unsigned short 
  6607 ;;  sum             2  [STACK] unsigned short 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  2  [STACK] unsigned short 
  6610 ;; Registers used:
  6611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btem
      +p+23
  6612 ;; Tracked objects:
  6613 ;;		On entry : 3F/0
  6614 ;;		On exit  : 3F/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6621 ;;Total ram usage:        0 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    5
  6624 ;; This function calls:
  6625 ;;		_rand
  6626 ;; This function is called by:
  6627 ;;		_secs_send
  6628 ;; This function uses a reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text8
  6632  00520C                     __ptext8:
  6633                           	opt callstack 0
  6634  00520C                     _block_checksum:
  6635                           	opt callstack 0
  6636                           
  6637                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6638  00520C  52E6               	movf	postinc1,f,c
  6639  00520E  52E6               	movf	postinc1,f,c
  6640  005210  52E6               	movf	postinc1,f,c
  6641  005212  52E6               	movf	postinc1,f,c
  6642                           
  6643                           ;gemsecs.c: 19: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 20: {;gemsecs.c: 21:  uint16_t sum = 0, i;
  6644                           ;stkvar	_sum @ sp[(-4)+2]
  6645                           
  6646                           ;incstack = 0
  6647  005214  0EFE               	movlw	-2
  6648  005216  6AE3               	clrf	plusw1,c
  6649  005218  0EFF               	movlw	-1
  6650  00521A  6AE3               	clrf	plusw1,c
  6651                           
  6652                           ;gemsecs.c: 23:  for (i = 0; i < byte_count; i++) {
  6653                           ;stkvar	_i @ sp[(-4)+0]
  6654  00521C  0EFC               	movlw	-4
  6655  00521E  6AE3               	clrf	plusw1,c
  6656  005220  0EFD               	movlw	-3
  6657  005222  6AE3               	clrf	plusw1,c
  6658  005224  D039               	goto	l8705
  6659  005226                     l8701:
  6660                           
  6661                           ;gemsecs.c: 24:   sum += byte_block[i];
  6662                           ;stkvar	_i @ sp[(-4)+0]
  6663  005226  0EFC               	movlw	-4
  6664  005228  006F FF8C  F047    	movff	plusw1,btemp+10
  6665  00522E  0EFD               	movlw	-3
  6666  005230  006F FF8C  F048    	movff	plusw1,btemp+11
  6667                           
  6668                           ;stkvar	_byte_block @ sp[(-4)+-2]
  6669  005236  0EFA               	movlw	-6
  6670  005238  006F FF8C  F045    	movff	plusw1,btemp+8
  6671  00523E  0EFB               	movlw	-5
  6672  005240  006F FF8C  F046    	movff	plusw1,btemp+9
  6673  005246  5047               	movf	btemp+10,w,c
  6674  005248  2445               	addwf	btemp+8,w,c
  6675  00524A  6ED9               	movwf	fsr2l,c
  6676  00524C  5048               	movf	btemp+11,w,c
  6677  00524E  2046               	addwfc	btemp+9,w,c
  6678  005250  6EDA               	movwf	fsr2h,c
  6679  005252  50DF               	movf	indf2,w,c
  6680  005254  6E48               	movwf	btemp+11,c
  6681                           
  6682                           ;stkvar	_sum @ sp[(-4)+2]
  6683  005256  0EFE               	movlw	-2
  6684  005258  50E3               	movf	plusw1,w,c
  6685  00525A  2448               	addwf	btemp+11,w,c
  6686  00525C  6E3D               	movwf	btemp,c
  6687  00525E  0EFE               	movlw	-2
  6688  005260  0060  F0F7  FFE3   	movff	btemp,plusw1
  6689  005266  6A3D               	clrf	btemp,c
  6690  005268  0EFF               	movlw	-1
  6691  00526A  50E3               	movf	plusw1,w,c
  6692  00526C  223D               	addwfc	btemp,f,c
  6693  00526E  0EFF               	movlw	-1
  6694  005270  0060  F0F7  FFE3   	movff	btemp,plusw1
  6695                           
  6696                           ;gemsecs.c: 25:  }
  6697                           ;stkvar	_i @ sp[(-4)+0]
  6698  005276  0EFC               	movlw	-4
  6699  005278  50E3               	movf	plusw1,w,c
  6700  00527A  0F01               	addlw	1
  6701  00527C  6E3D               	movwf	btemp,c
  6702  00527E  0EFC               	movlw	-4
  6703  005280  0060  F0F7  FFE3   	movff	btemp,plusw1
  6704  005286  6A3D               	clrf	btemp,c
  6705  005288  0EFD               	movlw	-3
  6706  00528A  50E3               	movf	plusw1,w,c
  6707  00528C  203D               	addwfc	btemp,w,c
  6708  00528E  6E3D               	movwf	btemp,c
  6709  005290  0EFD               	movlw	-3
  6710  005292  0060  F0F7  FFE3   	movff	btemp,plusw1
  6711  005298                     l8705:
  6712                           
  6713                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6714  005298  0EF8               	movlw	-8
  6715  00529A  006F FF8C  F047    	movff	plusw1,btemp+10
  6716  0052A0  0EF9               	movlw	-7
  6717  0052A2  006F FF8C  F048    	movff	plusw1,btemp+11
  6718                           
  6719                           ;stkvar	_i @ sp[(-4)+0]
  6720  0052A8  0EFC               	movlw	-4
  6721  0052AA  006F FF8C  F045    	movff	plusw1,btemp+8
  6722  0052B0  0EFD               	movlw	-3
  6723  0052B2  006F FF8C  F046    	movff	plusw1,btemp+9
  6724  0052B8  5047               	movf	btemp+10,w,c
  6725  0052BA  5C45               	subwf	btemp+8,w,c
  6726  0052BC  5048               	movf	btemp+11,w,c
  6727  0052BE  5846               	subwfb	btemp+9,w,c
  6728  0052C0  A0D8               	btfss	status,0,c
  6729  0052C2  D7B1               	goto	l8701
  6730                           
  6731                           ;gemsecs.c: 27:  if (rand() > 30000)
  6732  0052C4  ECD9  F026         	call	_rand	;wreg free
  6733  0052C8  BE3E               	btfsc	btemp+1,7,c
  6734  0052CA  D017               	goto	l8711
  6735  0052CC  0E31               	movlw	49
  6736  0052CE  5C3D               	subwf	btemp,w,c
  6737  0052D0  0E75               	movlw	117
  6738  0052D2  583E               	subwfb	btemp+1,w,c
  6739  0052D4  A0D8               	btfss	status,0,c
  6740  0052D6  D011               	goto	l8711
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;gemsecs.c: 28:   sum++;
  6744                           ;stkvar	_sum @ sp[(-4)+2]
  6745  0052D8  0EFE               	movlw	-2
  6746  0052DA  50E3               	movf	plusw1,w,c
  6747  0052DC  0F01               	addlw	1
  6748  0052DE  6E3D               	movwf	btemp,c
  6749  0052E0  0EFE               	movlw	-2
  6750  0052E2  0060  F0F7  FFE3   	movff	btemp,plusw1
  6751  0052E8  6A3D               	clrf	btemp,c
  6752  0052EA  0EFF               	movlw	-1
  6753  0052EC  50E3               	movf	plusw1,w,c
  6754  0052EE  203D               	addwfc	btemp,w,c
  6755  0052F0  6E3D               	movwf	btemp,c
  6756  0052F2  0EFF               	movlw	-1
  6757  0052F4  0060  F0F7  FFE3   	movff	btemp,plusw1
  6758  0052FA                     l8711:
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;gemsecs.c: 30:  return sum;
  6762                           ;stkvar	_sum @ sp[(-4)+2]
  6763  0052FA  0EFE               	movlw	-2
  6764  0052FC  006F FF8C  F03D    	movff	plusw1,btemp
  6765  005302  0EFF               	movlw	-1
  6766  005304  006F FF8C  F03E    	movff	plusw1,btemp+1
  6767                           
  6768                           ; BSR set to: 0
  6769                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  6770  00530A  0EF8               	movlw	248
  6771  00530C  26E1               	addwf	fsr1l,f,c
  6772  00530E  0EFF               	movlw	255
  6773  005310  22E2               	addwfc	fsr1h,f,c
  6774  005312  0012               	return		;funcret
  6775  005314                     __end_of_block_checksum:
  6776                           	opt callstack 0
  6777                           
  6778 ;; *************** function _rand *****************
  6779 ;; Defined at:
  6780 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;		None
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;		None
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  2  [STACK] int 
  6787 ;; Registers used:
  6788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 3F/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6798 ;;Total ram usage:        0 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    4
  6801 ;; This function calls:
  6802 ;;		___omul
  6803 ;; This function is called by:
  6804 ;;		_block_checksum
  6805 ;;		_m_protocol
  6806 ;;		_t_protocol
  6807 ;; This function uses a reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text9
  6811  004DB2                     __ptext9:
  6812                           	opt callstack 0
  6813  004DB2                     _rand:
  6814                           	opt callstack 23
  6815                           
  6816                           ; BSR set to: 0
  6817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6818                           ;incstack = 0
  6819  004DB2  0E2D               	movlw	45
  6820  004DB4  6EE6               	movwf	postinc1,c
  6821  004DB6  0E7F               	movlw	127
  6822  004DB8  6EE6               	movwf	postinc1,c
  6823  004DBA  0E95               	movlw	149
  6824  004DBC  6EE6               	movwf	postinc1,c
  6825  004DBE  0E4C               	movlw	76
  6826  004DC0  6EE6               	movwf	postinc1,c
  6827  004DC2  0E2D               	movlw	45
  6828  004DC4  6EE6               	movwf	postinc1,c
  6829  004DC6  0EF4               	movlw	244
  6830  004DC8  6EE6               	movwf	postinc1,c
  6831  004DCA  0E51               	movlw	81
  6832  004DCC  6EE6               	movwf	postinc1,c
  6833  004DCE  0E58               	movlw	88
  6834  004DD0  6EE6               	movwf	postinc1,c
  6835  004DD2  EE20  F0F1         	lfsr	2,_seed
  6836  004DD6  006F FF7B FFE6     	movff	postinc2,postinc1
  6837  004DDC  006F FF7B FFE6     	movff	postinc2,postinc1
  6838  004DE2  006F FF7B FFE6     	movff	postinc2,postinc1
  6839  004DE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6840  004DEE  006F FF7B FFE6     	movff	postinc2,postinc1
  6841  004DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6842  004DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6843  004E00  006F FF7B FFE6     	movff	postinc2,postinc1
  6844  004E06  EC2C  F026         	call	___omul	;wreg free
  6845  004E0A  52E5               	movf	postdec1,f,c
  6846  004E0C  006F FF9C  F054    	movff	indf1,btemp+23
  6847  004E12  52E5               	movf	postdec1,f,c
  6848  004E14  006F FF9C  F053    	movff	indf1,btemp+22
  6849  004E1A  52E5               	movf	postdec1,f,c
  6850  004E1C  006F FF9C  F052    	movff	indf1,btemp+21
  6851  004E22  52E5               	movf	postdec1,f,c
  6852  004E24  006F FF9C  F051    	movff	indf1,btemp+20
  6853  004E2A  52E5               	movf	postdec1,f,c
  6854  004E2C  006F FF9C  F050    	movff	indf1,btemp+19
  6855  004E32  52E5               	movf	postdec1,f,c
  6856  004E34  006F FF9C  F04F    	movff	indf1,btemp+18
  6857  004E3A  52E5               	movf	postdec1,f,c
  6858  004E3C  006F FF9C  F04E    	movff	indf1,btemp+17
  6859  004E42  52E5               	movf	postdec1,f,c
  6860  004E44  006F FF9C  F04D    	movff	indf1,btemp+16
  6861  004E4A  0EF8               	movlw	248
  6862  004E4C  26E1               	addwf	fsr1l,f,c
  6863  004E4E  0EFF               	movlw	255
  6864  004E50  22E2               	addwfc	fsr1h,f,c
  6865  004E52  0E01               	movlw	1
  6866  004E54  244D               	addwf	btemp+16,w,c
  6867  004E56  0100               	movlb	0	; () banked
  6868  004E58  6FF1               	movwf	_seed& (0+255),b
  6869  004E5A  0E00               	movlw	0
  6870  004E5C  204E               	addwfc	btemp+17,w,c
  6871  004E5E  6FF2               	movwf	(_seed+1)& (0+255),b
  6872  004E60  0E00               	movlw	0
  6873  004E62  204F               	addwfc	btemp+18,w,c
  6874  004E64  6FF3               	movwf	(_seed+2)& (0+255),b
  6875  004E66  0E00               	movlw	0
  6876  004E68  2050               	addwfc	btemp+19,w,c
  6877  004E6A  6FF4               	movwf	(_seed+3)& (0+255),b
  6878  004E6C  0E00               	movlw	0
  6879  004E6E  2051               	addwfc	btemp+20,w,c
  6880  004E70  6FF5               	movwf	(_seed+4)& (0+255),b
  6881  004E72  0E00               	movlw	0
  6882  004E74  2052               	addwfc	btemp+21,w,c
  6883  004E76  6FF6               	movwf	(_seed+5)& (0+255),b
  6884  004E78  0E00               	movlw	0
  6885  004E7A  2053               	addwfc	btemp+22,w,c
  6886  004E7C  6FF7               	movwf	(_seed+6)& (0+255),b
  6887  004E7E  0E00               	movlw	0
  6888  004E80  2054               	addwfc	btemp+23,w,c
  6889  004E82  6FF8               	movwf	(_seed+7)& (0+255),b
  6890                           
  6891                           ; BSR set to: 0
  6892  004E84  0060  F3C4  F03D   	movff	_seed,btemp
  6893  004E8A  0060  F3C8  F03E   	movff	_seed+1,btemp+1
  6894  004E90  0060  F3CC  F03F   	movff	_seed+2,btemp+2
  6895  004E96  0060  F3D0  F040   	movff	_seed+3,btemp+3
  6896  004E9C  0060  F3D4  F041   	movff	_seed+4,btemp+4
  6897  004EA2  0060  F3D8  F042   	movff	_seed+5,btemp+5
  6898  004EA8  0060  F3DC  F043   	movff	_seed+6,btemp+6
  6899  004EAE  0060  F3E0  F044   	movff	_seed+7,btemp+7
  6900  004EB4  0E08               	movlw	8
  6901  004EB6  D009               	goto	u3350
  6902  004EB8                     u3355:
  6903  004EB8  90D8               	bcf	status,0,c
  6904  004EBA  3244               	rrcf	btemp+7,f,c
  6905  004EBC  3243               	rrcf	btemp+6,f,c
  6906  004EBE  3242               	rrcf	btemp+5,f,c
  6907  004EC0  3241               	rrcf	btemp+4,f,c
  6908  004EC2  3240               	rrcf	btemp+3,f,c
  6909  004EC4  323F               	rrcf	btemp+2,f,c
  6910  004EC6  323E               	rrcf	btemp+1,f,c
  6911  004EC8  323D               	rrcf	btemp,f,c
  6912  004ECA                     u3350:
  6913  004ECA  2EE8               	decfsz	wreg,f,c
  6914  004ECC  D7F5               	goto	u3355
  6915                           
  6916                           ; BSR set to: 0
  6917                           ; _rand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize 
      +                          = 0, vargsize = 0
  6918  004ECE  0012               	return		;funcret
  6919  004ED0                     __end_of_rand:
  6920                           	opt callstack 0
  6921                           
  6922 ;; *************** function ___omul *****************
  6923 ;; Defined at:
  6924 ;;		line 91 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul64.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  multiplier      8  [STACK] unsigned long long 
  6927 ;;  multiplicand    8  [STACK] unsigned long long 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;  product         8  [STACK] unsigned long long 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  8  [STACK] unsigned long long 
  6932 ;; Registers used:
  6933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6943 ;;Total ram usage:        0 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    3
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_rand
  6950 ;; This function uses a reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text10
  6954  004C58                     __ptext10:
  6955                           	opt callstack 0
  6956  004C58                     ___omul:
  6957                           	opt callstack 0
  6958                           
  6959                           ; BSR set to: 0
  6960                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  6961  004C58  0E08               	movlw	8
  6962  004C5A  26E1               	addwf	fsr1l,f,c
  6963  004C5C  0E00               	movlw	0
  6964  004C5E  22E2               	addwfc	fsr1h,f,c
  6965                           
  6966                           ;stkvar	_product @ sp[(-8)+0]
  6967                           
  6968                           ;incstack = 0
  6969  004C60  0E07               	movlw	7
  6970  004C62  6E3D               	movwf	btemp,c
  6971  004C64  0EF8               	movlw	-8
  6972  004C66                     u3251:
  6973  004C66  6AE3               	clrf	plusw1,c
  6974  004C68  2AE8               	incf	wreg,f,c
  6975  004C6A  063D               	decf	btemp,f,c
  6976  004C6C  E2FC               	bc	u3251
  6977  004C6E                     l5849:
  6978                           
  6979                           ;stkvar	_multiplier @ sp[(-8)+-8]
  6980  004C6E  0EF0               	movlw	-16
  6981  004C70  A0E3               	btfss	plusw1,0,c
  6982  004C72  D050               	goto	l5853
  6983                           
  6984                           ;stkvar	_multiplicand @ sp[(-8)+-16]
  6985                           ;stkvar	_product @ sp[(-8)+0]
  6986  004C74  0EF8               	movlw	-8
  6987  004C76  50E3               	movf	plusw1,w,c
  6988  004C78  6E3D               	movwf	btemp,c
  6989  004C7A  0EE8               	movlw	-24
  6990  004C7C  50E3               	movf	plusw1,w,c
  6991  004C7E  263D               	addwf	btemp,f,c
  6992  004C80  0EF8               	movlw	-8
  6993  004C82  0060  F0F7  FFE3   	movff	btemp,plusw1
  6994  004C88  0EF9               	movlw	-7
  6995  004C8A  50E3               	movf	plusw1,w,c
  6996  004C8C  6E3D               	movwf	btemp,c
  6997  004C8E  0EE9               	movlw	-23
  6998  004C90  50E3               	movf	plusw1,w,c
  6999  004C92  223D               	addwfc	btemp,f,c
  7000  004C94  0EF9               	movlw	-7
  7001  004C96  0060  F0F7  FFE3   	movff	btemp,plusw1
  7002  004C9C  0EFA               	movlw	-6
  7003  004C9E  50E3               	movf	plusw1,w,c
  7004  004CA0  6E3D               	movwf	btemp,c
  7005  004CA2  0EEA               	movlw	-22
  7006  004CA4  50E3               	movf	plusw1,w,c
  7007  004CA6  223D               	addwfc	btemp,f,c
  7008  004CA8  0EFA               	movlw	-6
  7009  004CAA  0060  F0F7  FFE3   	movff	btemp,plusw1
  7010  004CB0  0EFB               	movlw	-5
  7011  004CB2  50E3               	movf	plusw1,w,c
  7012  004CB4  6E3D               	movwf	btemp,c
  7013  004CB6  0EEB               	movlw	-21
  7014  004CB8  50E3               	movf	plusw1,w,c
  7015  004CBA  223D               	addwfc	btemp,f,c
  7016  004CBC  0EFB               	movlw	-5
  7017  004CBE  0060  F0F7  FFE3   	movff	btemp,plusw1
  7018  004CC4  0EFC               	movlw	-4
  7019  004CC6  50E3               	movf	plusw1,w,c
  7020  004CC8  6E3D               	movwf	btemp,c
  7021  004CCA  0EEC               	movlw	-20
  7022  004CCC  50E3               	movf	plusw1,w,c
  7023  004CCE  223D               	addwfc	btemp,f,c
  7024  004CD0  0EFC               	movlw	-4
  7025  004CD2  0060  F0F7  FFE3   	movff	btemp,plusw1
  7026  004CD8  0EFD               	movlw	-3
  7027  004CDA  50E3               	movf	plusw1,w,c
  7028  004CDC  6E3D               	movwf	btemp,c
  7029  004CDE  0EED               	movlw	-19
  7030  004CE0  50E3               	movf	plusw1,w,c
  7031  004CE2  223D               	addwfc	btemp,f,c
  7032  004CE4  0EFD               	movlw	-3
  7033  004CE6  0060  F0F7  FFE3   	movff	btemp,plusw1
  7034  004CEC  0EFE               	movlw	-2
  7035  004CEE  50E3               	movf	plusw1,w,c
  7036  004CF0  6E3D               	movwf	btemp,c
  7037  004CF2  0EEE               	movlw	-18
  7038  004CF4  50E3               	movf	plusw1,w,c
  7039  004CF6  223D               	addwfc	btemp,f,c
  7040  004CF8  0EFE               	movlw	-2
  7041  004CFA  0060  F0F7  FFE3   	movff	btemp,plusw1
  7042  004D00  0EFF               	movlw	-1
  7043  004D02  50E3               	movf	plusw1,w,c
  7044  004D04  6E3D               	movwf	btemp,c
  7045  004D06  0EEF               	movlw	-17
  7046  004D08  50E3               	movf	plusw1,w,c
  7047  004D0A  223D               	addwfc	btemp,f,c
  7048  004D0C  0EFF               	movlw	-1
  7049  004D0E  0060  F0F7  FFE3   	movff	btemp,plusw1
  7050  004D14                     l5853:
  7051                           
  7052                           ;stkvar	_multiplicand @ sp[(-8)+-16]
  7053  004D14  90D8               	bcf	status,0,c
  7054  004D16  0EE8               	movlw	-24
  7055  004D18  36E3               	rlcf	plusw1,f,c
  7056  004D1A  0EE9               	movlw	-23
  7057  004D1C  36E3               	rlcf	plusw1,f,c
  7058  004D1E  0EEA               	movlw	-22
  7059  004D20  36E3               	rlcf	plusw1,f,c
  7060  004D22  0EEB               	movlw	-21
  7061  004D24  36E3               	rlcf	plusw1,f,c
  7062  004D26  0EEC               	movlw	-20
  7063  004D28  36E3               	rlcf	plusw1,f,c
  7064  004D2A  0EED               	movlw	-19
  7065  004D2C  36E3               	rlcf	plusw1,f,c
  7066  004D2E  0EEE               	movlw	-18
  7067  004D30  36E3               	rlcf	plusw1,f,c
  7068  004D32  0EEF               	movlw	-17
  7069  004D34  36E3               	rlcf	plusw1,f,c
  7070                           
  7071                           ;stkvar	_multiplier @ sp[(-8)+-8]
  7072  004D36  90D8               	bcf	status,0,c
  7073  004D38  0EF7               	movlw	-9
  7074  004D3A  32E3               	rrcf	plusw1,f,c
  7075  004D3C  0EF6               	movlw	-10
  7076  004D3E  32E3               	rrcf	plusw1,f,c
  7077  004D40  0EF5               	movlw	-11
  7078  004D42  32E3               	rrcf	plusw1,f,c
  7079  004D44  0EF4               	movlw	-12
  7080  004D46  32E3               	rrcf	plusw1,f,c
  7081  004D48  0EF3               	movlw	-13
  7082  004D4A  32E3               	rrcf	plusw1,f,c
  7083  004D4C  0EF2               	movlw	-14
  7084  004D4E  32E3               	rrcf	plusw1,f,c
  7085  004D50  0EF1               	movlw	-15
  7086  004D52  32E3               	rrcf	plusw1,f,c
  7087  004D54  0EF0               	movlw	-16
  7088  004D56  32E3               	rrcf	plusw1,f,c
  7089                           
  7090                           ;stkvar	_multiplier @ sp[(-8)+-8]
  7091  004D58  0EF0               	movlw	-16
  7092  004D5A  50E3               	movf	plusw1,w,c
  7093  004D5C  E188               	bnz	l5849
  7094  004D5E  0EF1               	movlw	-15
  7095  004D60  50E3               	movf	plusw1,w,c
  7096  004D62  E185               	bnz	l5849
  7097  004D64  0EF2               	movlw	-14
  7098  004D66  50E3               	movf	plusw1,w,c
  7099  004D68  E182               	bnz	l5849
  7100  004D6A  0EF3               	movlw	-13
  7101  004D6C  50E3               	movf	plusw1,w,c
  7102  004D6E  E10C               	bnz	u3271
  7103  004D70  0EF4               	movlw	-12
  7104  004D72  50E3               	movf	plusw1,w,c
  7105  004D74  E109               	bnz	u3271
  7106  004D76  0EF5               	movlw	-11
  7107  004D78  50E3               	movf	plusw1,w,c
  7108  004D7A  E106               	bnz	u3271
  7109  004D7C  0EF6               	movlw	-10
  7110  004D7E  50E3               	movf	plusw1,w,c
  7111  004D80  E103               	bnz	u3271
  7112  004D82  0EF7               	movlw	-9
  7113  004D84  50E3               	movf	plusw1,w,c
  7114  004D86  A4D8               	btfss	status,2,c
  7115  004D88                     u3271:
  7116  004D88  D772               	goto	l5849
  7117                           
  7118                           ;stkvar	_product @ sp[(-8)+0]
  7119  004D8A  0EF8               	movlw	248
  7120  004D8C  24E1               	addwf	fsr1l,w,c
  7121  004D8E  6ED9               	movwf	fsr2l,c
  7122  004D90  0EFF               	movlw	255
  7123  004D92  20E2               	addwfc	fsr1h,w,c
  7124  004D94  6EDA               	movwf	fsr2h,c
  7125                           
  7126                           ;stkvar	?___omul @ sp[(-8)+-8]
  7127  004D96  0E08               	movlw	8
  7128  004D98  6E3D               	movwf	btemp,c
  7129  004D9A  0EF0               	movlw	-16
  7130  004D9C                     us328999:
  7131  004D9C  006F FF7B FFE3     	movff	postinc2,plusw1
  7132  004DA2  28E8               	incf	wreg,w,c
  7133  004DA4  2E3D               	decfsz	btemp,f,c
  7134  004DA6  D7FA               	bra	us328999
  7135                           
  7136                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
  7137  004DA8  0EF8               	movlw	248
  7138  004DAA  26E1               	addwf	fsr1l,f,c
  7139  004DAC  0EFF               	movlw	255
  7140  004DAE  22E2               	addwfc	fsr1h,f,c
  7141  004DB0  0012               	return		;funcret
  7142  004DB2                     __end_of___omul:
  7143                           	opt callstack 0
  7144                           
  7145 ;; *************** function _UART2_put_buffer *****************
  7146 ;; Defined at:
  7147 ;;		line 257 in file "mcc_generated_files/uart2.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  bufData         1  [STACK] unsigned char 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;		None
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1  [STACK] void 
  7154 ;; Registers used:
  7155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/3B
  7158 ;;		On exit  : 3F/39
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7165 ;;Total ram usage:        0 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    3
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_main
  7172 ;;		_secs_send
  7173 ;; This function uses a reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text11
  7177  006460                     __ptext11:
  7178                           	opt callstack 0
  7179  006460                     _UART2_put_buffer:
  7180                           	opt callstack 25
  7181                           
  7182                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  7183                           
  7184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7185                           ;incstack = 0
  7186  006460  0139               	movlb	57	; () banked
  7187  006462  9596               	bcf	150,2,b	;volatile
  7188                           
  7189                           ; BSR set to: 57
  7190                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  7191                           ;stkvar	_bufData @ sp[(0)+-1]
  7192  006464  0E00               	movlw	low _uart2RxBuffer
  7193  006466  2433               	addwf	_uart2RxHead,w,c	;volatile
  7194  006468  6ED9               	movwf	fsr2l,c
  7195  00646A  6ADA               	clrf	fsr2h,c
  7196  00646C  0E02               	movlw	high _uart2RxBuffer
  7197  00646E  22DA               	addwfc	fsr2h,f,c
  7198  006470  0EFF               	movlw	-1
  7199  006472  006F FF8F FFDF     	movff	plusw1,indf2
  7200                           
  7201                           ; BSR set to: 57
  7202  006478  2A33               	incf	_uart2RxHead,f,c	;volatile
  7203                           
  7204                           ; BSR set to: 57
  7205                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  7206  00647A  0E3F               	movlw	63
  7207  00647C  6433               	cpfsgt	_uart2RxHead,c
  7208  00647E  D001               	goto	l6011
  7209                           
  7210                           ; BSR set to: 57
  7211                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  7212  006480  6A33               	clrf	_uart2RxHead,c	;volatile
  7213  006482                     l6011:
  7214                           
  7215                           ; BSR set to: 57
  7216                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  7217  006482  2A31               	incf	_uart2RxCount,f,c	;volatile
  7218                           
  7219                           ; BSR set to: 57
  7220                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  7221  006484  8596               	bsf	150,2,b	;volatile
  7222                           
  7223                           ; BSR set to: 57
  7224                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7225  006486  52E5               	movf	postdec1,f,c
  7226  006488  0012               	return		;funcret
  7227  00648A                     __end_of_UART2_put_buffer:
  7228                           	opt callstack 0
  7229                           
  7230 ;; *************** function _UART2_is_tx_ready *****************
  7231 ;; Defined at:
  7232 ;;		line 142 in file "mcc_generated_files/uart2.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1  [STACK] unsigned char 
  7239 ;; Registers used:
  7240 ;;		btemp
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    3
  7253 ;; This function calls:
  7254 ;;		Nothing
  7255 ;; This function is called by:
  7256 ;;		_secs_send
  7257 ;; This function uses a reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text12
  7261  006A6A                     __ptext12:
  7262                           	opt callstack 0
  7263  006A6A                     _UART2_is_tx_ready:
  7264                           	opt callstack 25
  7265                           
  7266                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  7267                           
  7268                           ; BSR set to: 57
  7269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7270                           ;incstack = 0
  7271  006A6A  0060  F0D0  F03D   	movff	_uart2TxBufferRemaining,btemp	;volatile
  7272                           
  7273                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7274  006A70  0012               	return		;funcret
  7275  006A72                     __end_of_UART2_is_tx_ready:
  7276                           	opt callstack 0
  7277                           
  7278 ;; *************** function _UART2_Write *****************
  7279 ;; Defined at:
  7280 ;;		line 172 in file "mcc_generated_files/uart2.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  txData          1  [STACK] unsigned char 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1  [STACK] void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 3F/39
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    3
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_secs_send
  7305 ;; This function uses a reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text13
  7309  006216                     __ptext13:
  7310                           	opt callstack 0
  7311  006216                     _UART2_Write:
  7312                           	opt callstack 25
  7313                           
  7314                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  7315                           
  7316                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  7317                           
  7318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7319                           ;incstack = 0
  7320  006216  5034               	movf	_uart2TxBufferRemaining,w,c	;volatile
  7321  006218  B4D8               	btfsc	status,2,c
  7322  00621A  D7FD               	goto	_UART2_Write
  7323                           
  7324                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  7325  00621C  0139               	movlb	57	; () banked
  7326  00621E  B796               	btfsc	150,3,b	;volatile
  7327  006220  D005               	goto	l699
  7328                           
  7329                           ; BSR set to: 57
  7330                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  7331                           ;stkvar	_txData @ sp[(0)+-1]
  7332  006222  0EFF               	movlw	-1
  7333  006224  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  7334                           
  7335                           ;mcc_generated_files/uart2.c: 181:     }
  7336  00622A  D011               	goto	l5999
  7337  00622C                     l699:
  7338                           
  7339                           ; BSR set to: 57
  7340                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  7341  00622C  9796               	bcf	150,3,b	;volatile
  7342                           
  7343                           ; BSR set to: 57
  7344                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  7345                           ;stkvar	_txData @ sp[(0)+-1]
  7346  00622E  0E00               	movlw	low _uart2TxBuffer
  7347  006230  2436               	addwf	_uart2TxHead,w,c	;volatile
  7348  006232  6ED9               	movwf	fsr2l,c
  7349  006234  6ADA               	clrf	fsr2h,c
  7350  006236  0E03               	movlw	high _uart2TxBuffer
  7351  006238  22DA               	addwfc	fsr2h,f,c
  7352  00623A  0EFF               	movlw	-1
  7353  00623C  006F FF8F FFDF     	movff	plusw1,indf2
  7354                           
  7355                           ; BSR set to: 57
  7356  006242  2A36               	incf	_uart2TxHead,f,c	;volatile
  7357                           
  7358                           ; BSR set to: 57
  7359                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  7360  006244  0E3F               	movlw	63
  7361  006246  6436               	cpfsgt	_uart2TxHead,c
  7362  006248  D001               	goto	l5997
  7363                           
  7364                           ; BSR set to: 57
  7365                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  7366  00624A  6A36               	clrf	_uart2TxHead,c	;volatile
  7367  00624C                     l5997:
  7368                           
  7369                           ; BSR set to: 57
  7370                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  7371  00624C  0634               	decf	_uart2TxBufferRemaining,f,c	;volatile
  7372  00624E                     l5999:
  7373                           
  7374                           ; BSR set to: 57
  7375                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  7376  00624E  8796               	bsf	150,3,b	;volatile
  7377                           
  7378                           ; BSR set to: 57
  7379                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7380  006250  52E5               	movf	postdec1,f,c
  7381  006252  0012               	return		;funcret
  7382  006254                     __end_of_UART2_Write:
  7383                           	opt callstack 0
  7384                           
  7385 ;; *************** function _UART1_put_buffer *****************
  7386 ;; Defined at:
  7387 ;;		line 250 in file "mcc_generated_files/uart1.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  bufData         1  [STACK] unsigned char 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1  [STACK] void 
  7394 ;; Registers used:
  7395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 3F/39
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7405 ;;Total ram usage:        0 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    3
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_main
  7412 ;;		_t_protocol
  7413 ;;		_secs_send
  7414 ;; This function uses a reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text14
  7418  00648A                     __ptext14:
  7419                           	opt callstack 0
  7420  00648A                     _UART1_put_buffer:
  7421                           	opt callstack 25
  7422                           
  7423                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  7424                           
  7425                           ; BSR set to: 57
  7426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7427                           ;incstack = 0
  7428  00648A  0139               	movlb	57	; () banked
  7429  00648C  9793               	bcf	147,3,b	;volatile
  7430                           
  7431                           ; BSR set to: 57
  7432                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  7433                           ;stkvar	_bufData @ sp[(0)+-1]
  7434  00648E  0E40               	movlw	low _uart1RxBuffer
  7435  006490  2439               	addwf	_uart1RxHead,w,c	;volatile
  7436  006492  6ED9               	movwf	fsr2l,c
  7437  006494  6ADA               	clrf	fsr2h,c
  7438  006496  0E02               	movlw	high _uart1RxBuffer
  7439  006498  22DA               	addwfc	fsr2h,f,c
  7440  00649A  0EFF               	movlw	-1
  7441  00649C  006F FF8F FFDF     	movff	plusw1,indf2
  7442                           
  7443                           ; BSR set to: 57
  7444  0064A2  2A39               	incf	_uart1RxHead,f,c	;volatile
  7445                           
  7446                           ; BSR set to: 57
  7447                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  7448  0064A4  0E3F               	movlw	63
  7449  0064A6  6439               	cpfsgt	_uart1RxHead,c
  7450  0064A8  D001               	goto	l5971
  7451                           
  7452                           ; BSR set to: 57
  7453                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  7454  0064AA  6A39               	clrf	_uart1RxHead,c	;volatile
  7455  0064AC                     l5971:
  7456                           
  7457                           ; BSR set to: 57
  7458                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  7459  0064AC  2A37               	incf	_uart1RxCount,f,c	;volatile
  7460                           
  7461                           ; BSR set to: 57
  7462                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  7463  0064AE  8793               	bsf	147,3,b	;volatile
  7464                           
  7465                           ; BSR set to: 57
  7466                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7467  0064B0  52E5               	movf	postdec1,f,c
  7468  0064B2  0012               	return		;funcret
  7469  0064B4                     __end_of_UART1_put_buffer:
  7470                           	opt callstack 0
  7471                           
  7472 ;; *************** function _UART1_is_tx_ready *****************
  7473 ;; Defined at:
  7474 ;;		line 151 in file "mcc_generated_files/uart1.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;		None
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1  [STACK] unsigned char 
  7481 ;; Registers used:
  7482 ;;		btemp
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7492 ;;Total ram usage:        0 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    3
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_secs_send
  7499 ;; This function uses a reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text15
  7503  006A72                     __ptext15:
  7504                           	opt callstack 0
  7505  006A72                     _UART1_is_tx_ready:
  7506                           	opt callstack 25
  7507                           
  7508                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  7509                           
  7510                           ; BSR set to: 57
  7511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7512                           ;incstack = 0
  7513  006A72  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  7514                           
  7515                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7516  006A78  0012               	return		;funcret
  7517  006A7A                     __end_of_UART1_is_tx_ready:
  7518                           	opt callstack 0
  7519                           
  7520 ;; *************** function _UART1_Write *****************
  7521 ;; Defined at:
  7522 ;;		line 179 in file "mcc_generated_files/uart1.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  txData          1  [STACK] unsigned char 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1  [STACK] void 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 3F/39
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7540 ;;Total ram usage:        0 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    3
  7543 ;; This function calls:
  7544 ;;		Nothing
  7545 ;; This function is called by:
  7546 ;;		_r_protocol
  7547 ;;		_t_protocol
  7548 ;;		_secs_send
  7549 ;; This function uses a reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text16
  7553  006254                     __ptext16:
  7554                           	opt callstack 0
  7555  006254                     _UART1_Write:
  7556                           	opt callstack 25
  7557                           
  7558                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  7559                           
  7560                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  7561                           
  7562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7563                           ;incstack = 0
  7564  006254  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  7565  006256  B4D8               	btfsc	status,2,c
  7566  006258  D7FD               	goto	_UART1_Write
  7567                           
  7568                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  7569  00625A  0139               	movlb	57	; () banked
  7570  00625C  B993               	btfsc	147,4,b	;volatile
  7571  00625E  D005               	goto	l579
  7572                           
  7573                           ; BSR set to: 57
  7574                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  7575                           ;stkvar	_txData @ sp[(0)+-1]
  7576  006260  0EFF               	movlw	-1
  7577  006262  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  7578                           
  7579                           ;mcc_generated_files/uart1.c: 186:  } else {
  7580  006268  D011               	goto	l5959
  7581  00626A                     l579:
  7582                           
  7583                           ; BSR set to: 57
  7584                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  7585  00626A  9993               	bcf	147,4,b	;volatile
  7586                           
  7587                           ; BSR set to: 57
  7588                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  7589                           ;stkvar	_txData @ sp[(0)+-1]
  7590  00626C  0E40               	movlw	low _uart1TxBuffer
  7591  00626E  243C               	addwf	_uart1TxHead,w,c	;volatile
  7592  006270  6ED9               	movwf	fsr2l,c
  7593  006272  6ADA               	clrf	fsr2h,c
  7594  006274  0E03               	movlw	high _uart1TxBuffer
  7595  006276  22DA               	addwfc	fsr2h,f,c
  7596  006278  0EFF               	movlw	-1
  7597  00627A  006F FF8F FFDF     	movff	plusw1,indf2
  7598                           
  7599                           ; BSR set to: 57
  7600  006280  2A3C               	incf	_uart1TxHead,f,c	;volatile
  7601                           
  7602                           ; BSR set to: 57
  7603                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  7604  006282  0E3F               	movlw	63
  7605  006284  643C               	cpfsgt	_uart1TxHead,c
  7606  006286  D001               	goto	l5957
  7607                           
  7608                           ; BSR set to: 57
  7609                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  7610  006288  6A3C               	clrf	_uart1TxHead,c	;volatile
  7611  00628A                     l5957:
  7612                           
  7613                           ; BSR set to: 57
  7614                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  7615  00628A  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  7616  00628C                     l5959:
  7617                           
  7618                           ; BSR set to: 57
  7619                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  7620  00628C  8993               	bsf	147,4,b	;volatile
  7621                           
  7622                           ; BSR set to: 57
  7623                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7624  00628E  52E5               	movf	postdec1,f,c
  7625  006290  0012               	return		;funcret
  7626  006292                     __end_of_UART1_Write:
  7627                           	opt callstack 0
  7628                           
  7629 ;; *************** function _secs_gem_state *****************
  7630 ;; Defined at:
  7631 ;;		line 657 in file "gemsecs.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  stream          1  [STACK] unsigned char 
  7634 ;;  function        1  [STACK] unsigned char 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1  [STACK] enum E16164
  7639 ;; Registers used:
  7640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7641 ;; Tracked objects:
  7642 ;;		On entry : 3F/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7650 ;;Total ram usage:        0 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    4
  7653 ;; This function calls:
  7654 ;;		_StartTimer
  7655 ;; This function is called by:
  7656 ;;		_m_protocol
  7657 ;;		_r_protocol
  7658 ;; This function uses a reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text17
  7662  005500                     __ptext17:
  7663                           	opt callstack 0
  7664  005500                     _secs_gem_state:
  7665                           	opt callstack 25
  7666                           
  7667                           ;gemsecs.c: 657: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          658: {;gemsecs.c: 659:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 661:  sw
      +                          itch (stream) {
  7668                           
  7669                           ; BSR set to: 57
  7670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7671                           ;incstack = 0
  7672  005500  D058               	goto	l6639
  7673  005502                     l6593:
  7674                           
  7675                           ;gemsecs.c: 668:    block = GEM_STATE_REMOTE;
  7676  005502  0E04               	movlw	4
  7677  005504  6E2B               	movwf	secs_gem_state@block,c
  7678                           
  7679                           ;gemsecs.c: 669:    V.ticker = 0;
  7680  005506  0100               	movlb	0	; () banked
  7681  005508  6BC1               	clrf	(_V+97)& (0+255),b	;volatile
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;gemsecs.c: 670:    StartTimer(TMR_HBIO, 30000);
  7685  00550A  0E30               	movlw	48
  7686  00550C  6EE6               	movwf	postinc1,c
  7687  00550E  0E75               	movlw	117
  7688  005510  6EE6               	movwf	postinc1,c
  7689  005512  0E06               	movlw	6
  7690  005514  6EE6               	movwf	postinc1,c
  7691  005516  ECCB  F030         	call	_StartTimer	;wreg free
  7692                           
  7693                           ;gemsecs.c: 671:    break;
  7694  00551A  D05E               	goto	l6641
  7695  00551C                     l6599:
  7696                           
  7697                           ;gemsecs.c: 676:    block = GEM_STATE_COMM;
  7698  00551C  0E01               	movlw	1
  7699  00551E  6E2B               	movwf	secs_gem_state@block,c
  7700                           
  7701                           ;gemsecs.c: 677:    V.ticker = 15;
  7702  005520  0E0F               	movlw	15
  7703  005522  D044               	goto	L21
  7704  005524                     l6601:
  7705                           
  7706                           ;gemsecs.c: 683:    block = GEM_STATE_OFFLINE;
  7707  005524  0E02               	movlw	2
  7708  005526  6E2B               	movwf	secs_gem_state@block,c
  7709                           
  7710                           ;gemsecs.c: 684:    V.ticker = 0;
  7711  005528  0100               	movlb	0	; () banked
  7712  00552A  6BC1               	clrf	(_V+97)& (0+255),b	;volatile
  7713                           
  7714                           ;gemsecs.c: 685:    break;
  7715  00552C  D055               	goto	l6641
  7716  00552E                     l6605:
  7717                           
  7718                           ;gemsecs.c: 690:    block = GEM_STATE_ONLINE;
  7719  00552E  0E03               	movlw	3
  7720  005530  D7FA               	goto	L19
  7721  005532                     l6609:
  7722                           
  7723                           ;gemsecs.c: 694:    if (block == GEM_STATE_DISABLE) {
  7724  005532  502B               	movf	secs_gem_state@block,w,c
  7725  005534  B4D8               	btfsc	status,2,c
  7726  005536  D7F2               	goto	l6599
  7727  005538  D04F               	goto	l6641
  7728  00553A                     l6615:
  7729                           
  7730                           ;stkvar	_function @ sp[(0)+-2]
  7731  00553A  0EFE               	movlw	-2
  7732  00553C  50E3               	movf	plusw1,w,c
  7733  00553E  6E47               	movwf	btemp+10,c
  7734  005540  6A48               	clrf	btemp+11,c
  7735                           
  7736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7737                           ; Switch size 1, requested type "simple"
  7738                           ; Number of cases is 1, Range of values is 0 to 0
  7739                           ; switch strategies available:
  7740                           ; Name         Instructions Cycles
  7741                           ; simple_byte            4     3 (average)
  7742                           ;	Chosen strategy is simple_byte
  7743  005542  5048               	movf	btemp+11,w,c
  7744  005544  0A00               	xorlw	0	; case 0
  7745  005546  A4D8               	btfss	status,2,c
  7746  005548  D7F4               	goto	l6609
  7747                           
  7748                           ; Switch size 1, requested type "simple"
  7749                           ; Number of cases is 8, Range of values is 1 to 18
  7750                           ; switch strategies available:
  7751                           ; Name         Instructions Cycles
  7752                           ; simple_byte           25    13 (average)
  7753                           ;	Chosen strategy is simple_byte
  7754  00554A  5047               	movf	btemp+10,w,c
  7755  00554C  0A01               	xorlw	1	; case 1
  7756  00554E  B4D8               	btfsc	status,2,c
  7757  005550  D7D8               	goto	l6593
  7758  005552  0A03               	xorlw	3	; case 2
  7759  005554  B4D8               	btfsc	status,2,c
  7760  005556  D7D5               	goto	l6593
  7761  005558  0A0F               	xorlw	15	; case 13
  7762  00555A  B4D8               	btfsc	status,2,c
  7763  00555C  D7DF               	goto	l6599
  7764  00555E  0A03               	xorlw	3	; case 14
  7765  005560  B4D8               	btfsc	status,2,c
  7766  005562  D7DC               	goto	l6599
  7767  005564  0A01               	xorlw	1	; case 15
  7768  005566  B4D8               	btfsc	status,2,c
  7769  005568  D7DD               	goto	l6601
  7770  00556A  0A1F               	xorlw	31	; case 16
  7771  00556C  B4D8               	btfsc	status,2,c
  7772  00556E  D7DA               	goto	l6601
  7773  005570  0A01               	xorlw	1	; case 17
  7774  005572  B4D8               	btfsc	status,2,c
  7775  005574  D7DC               	goto	l6605
  7776  005576  0A03               	xorlw	3	; case 18
  7777  005578  B4D8               	btfsc	status,2,c
  7778  00557A  D7D9               	goto	l6605
  7779  00557C  D7DA               	goto	l6609
  7780  00557E                     l6617:
  7781                           
  7782                           ;gemsecs.c: 704:    block = GEM_STATE_ALARM;
  7783  00557E  0E05               	movlw	5
  7784  005580  6E2B               	movwf	secs_gem_state@block,c
  7785                           
  7786                           ;gemsecs.c: 705:    if (V.ticker != 45)
  7787  005582  0E2D               	movlw	45
  7788  005584  0100               	movlb	0	; () banked
  7789  005586  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  7790  005588  B4D8               	btfsc	status,2,c
  7791  00558A  D026               	goto	l6641
  7792  00558C                     u3730:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;gemsecs.c: 706:     V.ticker = 15;
  7796  00558C  0E0F               	movlw	15
  7797  00558E  D00F               	goto	L20
  7798  005590                     l6625:
  7799                           
  7800                           ;gemsecs.c: 713:    block = GEM_STATE_ERROR;
  7801  005590  0E06               	movlw	6
  7802  005592  6E2B               	movwf	secs_gem_state@block,c
  7803                           
  7804                           ;gemsecs.c: 714:    if (V.ticker != 45)
  7805  005594  0E2D               	movlw	45
  7806  005596  0100               	movlb	0	; () banked
  7807  005598  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  7808  00559A  A4D8               	btfss	status,2,c
  7809  00559C  D7F7               	goto	u3730
  7810  00559E  D01C               	goto	l6641
  7811  0055A0                     l6633:
  7812                           
  7813                           ;gemsecs.c: 720:   if (block == GEM_STATE_DISABLE) {
  7814  0055A0  502B               	movf	secs_gem_state@block,w,c
  7815  0055A2  A4D8               	btfss	status,2,c
  7816  0055A4  D019               	goto	l6641
  7817                           
  7818                           ;gemsecs.c: 721:    block = GEM_STATE_COMM;
  7819  0055A6  0E01               	movlw	1
  7820  0055A8  6E2B               	movwf	secs_gem_state@block,c
  7821                           
  7822                           ;gemsecs.c: 722:    V.ticker = 45;
  7823  0055AA  0E2D               	movlw	45
  7824  0055AC                     L21:
  7825  0055AC  0100               	movlb	0	; () banked
  7826  0055AE                     L20:
  7827  0055AE  6FC1               	movwf	(_V+97)& (0+255),b	;volatile
  7828  0055B0  D013               	goto	l6641
  7829  0055B2                     l6639:
  7830                           
  7831                           ;stkvar	_stream @ sp[(0)+-1]
  7832  0055B2  0EFF               	movlw	-1
  7833  0055B4  50E3               	movf	plusw1,w,c
  7834  0055B6  6E47               	movwf	btemp+10,c
  7835  0055B8  6A48               	clrf	btemp+11,c
  7836                           
  7837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7838                           ; Switch size 1, requested type "simple"
  7839                           ; Number of cases is 1, Range of values is 0 to 0
  7840                           ; switch strategies available:
  7841                           ; Name         Instructions Cycles
  7842                           ; simple_byte            4     3 (average)
  7843                           ;	Chosen strategy is simple_byte
  7844  0055BA  5048               	movf	btemp+11,w,c
  7845  0055BC  0A00               	xorlw	0	; case 0
  7846  0055BE  A4D8               	btfss	status,2,c
  7847  0055C0  D7EF               	goto	l6633
  7848                           
  7849                           ; Switch size 1, requested type "simple"
  7850                           ; Number of cases is 3, Range of values is 1 to 9
  7851                           ; switch strategies available:
  7852                           ; Name         Instructions Cycles
  7853                           ; simple_byte           10     6 (average)
  7854                           ;	Chosen strategy is simple_byte
  7855  0055C2  5047               	movf	btemp+10,w,c
  7856  0055C4  0A01               	xorlw	1	; case 1
  7857  0055C6  B4D8               	btfsc	status,2,c
  7858  0055C8  D7B8               	goto	l6615
  7859  0055CA  0A04               	xorlw	4	; case 5
  7860  0055CC  B4D8               	btfsc	status,2,c
  7861  0055CE  D7D7               	goto	l6617
  7862  0055D0  0A0C               	xorlw	12	; case 9
  7863  0055D2  B4D8               	btfsc	status,2,c
  7864  0055D4  D7DD               	goto	l6625
  7865  0055D6  D7E4               	goto	l6633
  7866  0055D8                     l6641:
  7867                           
  7868                           ;gemsecs.c: 727:  return(block);
  7869  0055D8  0060  F0AC  F03D   	movff	secs_gem_state@block,btemp
  7870                           
  7871                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  7872  0055DE  52E5               	movf	postdec1,f,c
  7873  0055E0  52E5               	movf	postdec1,f,c
  7874  0055E2  0012               	return		;funcret
  7875  0055E4                     __end_of_secs_gem_state:
  7876                           	opt callstack 0
  7877                           
  7878 ;; *************** function _run_checksum *****************
  7879 ;; Defined at:
  7880 ;;		line 36 in file "gemsecs.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  byte_block      1  [STACK] unsigned char 
  7883 ;;  clear           1  [STACK] _Bool 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  2  [STACK] unsigned short 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7890 ;; Tracked objects:
  7891 ;;		On entry : 6/39
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7899 ;;Total ram usage:        0 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    3
  7902 ;; This function calls:
  7903 ;;		Nothing
  7904 ;; This function is called by:
  7905 ;;		_m_protocol
  7906 ;;		_r_protocol
  7907 ;; This function uses a reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text18
  7911  0064B4                     __ptext18:
  7912                           	opt callstack 0
  7913  0064B4                     _run_checksum:
  7914                           	opt callstack 26
  7915                           
  7916                           ;gemsecs.c: 36: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 37: {;
      +                          gemsecs.c: 38:  static uint16_t sum = 0;;gemsecs.c: 40:  if (clear)
  7917                           ;stkvar	_clear @ sp[(0)+-2]
  7918                           
  7919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7920                           ;incstack = 0
  7921  0064B4  0EFE               	movlw	-2
  7922  0064B6  50E3               	movf	plusw1,w,c
  7923  0064B8  B4D8               	btfsc	status,2,c
  7924  0064BA  D002               	goto	l6519
  7925                           
  7926                           ;gemsecs.c: 41:   sum = 0;
  7927  0064BC  6A25               	clrf	run_checksum@sum,c
  7928  0064BE  6A26               	clrf	run_checksum@sum+1,c
  7929  0064C0                     l6519:
  7930                           
  7931                           ;gemsecs.c: 43:  sum += byte_block;
  7932                           ;stkvar	_byte_block @ sp[(0)+-1]
  7933  0064C0  0EFF               	movlw	-1
  7934  0064C2  50E3               	movf	plusw1,w,c
  7935  0064C4  2625               	addwf	run_checksum@sum,f,c
  7936  0064C6  0E00               	movlw	0
  7937  0064C8  2226               	addwfc	run_checksum@sum+1,f,c
  7938                           
  7939                           ;gemsecs.c: 44:  return sum;
  7940  0064CA  0060  F094  F03D   	movff	run_checksum@sum,btemp
  7941  0064D0  0060  F098  F03E   	movff	run_checksum@sum+1,btemp+1
  7942                           
  7943                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  7944  0064D6  52E5               	movf	postdec1,f,c
  7945  0064D8  52E5               	movf	postdec1,f,c
  7946  0064DA  0012               	return		;funcret
  7947  0064DC                     __end_of_run_checksum:
  7948                           	opt callstack 0
  7949                           
  7950 ;; *************** function _WaitMs *****************
  7951 ;; Defined at:
  7952 ;;		line 32 in file "timers.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  numMilliseco    2  [STACK] unsigned short 
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;		None
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1  [STACK] void 
  7959 ;; Registers used:
  7960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7970 ;;Total ram usage:        0 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; Hardware stack levels required when called:    4
  7973 ;; This function calls:
  7974 ;;		_StartTimer
  7975 ;;		_TimerDone
  7976 ;; This function is called by:
  7977 ;;		_main
  7978 ;;		_m_protocol
  7979 ;;		_r_protocol
  7980 ;;		_t_protocol
  7981 ;; This function uses a reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text19
  7985  006346                     __ptext19:
  7986                           	opt callstack 0
  7987  006346                     _WaitMs:
  7988                           	opt callstack 25
  7989                           
  7990                           ;timers.c: 32: void WaitMs(uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  7991                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7992                           
  7993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7994                           ;incstack = 0
  7995  006346  0EFE               	movlw	-2
  7996  006348  006F FF8F FFE6     	movff	plusw1,postinc1
  7997  00634E  006F FF8F FFE6     	movff	plusw1,postinc1
  7998  006354  0E00               	movlw	0
  7999  006356  6EE6               	movwf	postinc1,c
  8000  006358  ECCB  F030         	call	_StartTimer	;wreg free
  8001                           
  8002                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8003  00635C  D005               	goto	l6461
  8004  00635E                     l1852:
  8005                           
  8006                           ;timers.c: 36:   __nop();
  8007  00635E  F000               	nop	
  8008                           
  8009                           ;timers.c: 37:   __nop();
  8010  006360  F000               	nop	
  8011                           
  8012                           ;timers.c: 38:   __nop();
  8013  006362  F000               	nop	
  8014                           
  8015                           ;timers.c: 39:   __nop();
  8016  006364  F000               	nop	
  8017  006366  0004               	clrwdt		;# 
  8018  006368                     l6461:
  8019                           
  8020                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8021  006368  0E00               	movlw	0
  8022  00636A  6EE6               	movwf	postinc1,c
  8023  00636C  EC6E  F032         	call	_TimerDone	;wreg free
  8024  006370  503D               	movf	btemp,w,c
  8025  006372  B4D8               	btfsc	status,2,c
  8026  006374  D7F4               	goto	l1852
  8027                           
  8028                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8029  006376  52E5               	movf	postdec1,f,c
  8030  006378  52E5               	movf	postdec1,f,c
  8031  00637A  0012               	return		;funcret
  8032  00637C                     __end_of_WaitMs:
  8033                           	opt callstack 0
  8034                           
  8035 ;; *************** function _TimerDone *****************
  8036 ;; Defined at:
  8037 ;;		line 20 in file "timers.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  timer           1  [STACK] unsigned char 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1  [STACK] _Bool 
  8044 ;; Registers used:
  8045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8055 ;;Total ram usage:        0 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    3
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_main
  8062 ;;		_m_protocol
  8063 ;;		_r_protocol
  8064 ;;		_t_protocol
  8065 ;;		_WaitMs
  8066 ;; This function uses a reentrant model
  8067 ;;
  8068                           
  8069                           	psect	text20
  8070  0064DC                     __ptext20:
  8071                           	opt callstack 0
  8072  0064DC                     _TimerDone:
  8073                           	opt callstack 25
  8074                           
  8075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8076                           ;incstack = 0
  8077  0064DC  0004               	clrwdt		;# 
  8078                           
  8079                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  8080                           ;stkvar	_timer @ sp[(0)+-1]
  8081  0064DE  0EFF               	movlw	-1
  8082  0064E0  50E3               	movf	plusw1,w,c
  8083  0064E2  0D02               	mullw	2
  8084  0064E4  0EC0               	movlw	low _tickCount
  8085  0064E6  24F3               	addwf	prodl,w,c
  8086  0064E8  6ED9               	movwf	fsr2l,c
  8087  0064EA  0E01               	movlw	high _tickCount
  8088  0064EC  20F4               	addwfc	prodh,w,c
  8089  0064EE  6EDA               	movwf	fsr2h,c
  8090  0064F0  50DE               	movf	postinc2,w,c
  8091  0064F2  10DE               	iorwf	postinc2,w,c
  8092  0064F4  A4D8               	btfss	status,2,c
  8093  0064F6  D002               	goto	l6039
  8094                           
  8095                           ;timers.c: 24:   return 1;
  8096  0064F8  0E01               	movlw	1
  8097  0064FA  D001               	goto	L22
  8098  0064FC                     l6039:
  8099                           
  8100                           ;timers.c: 26:  return 0;
  8101  0064FC  0E00               	movlw	0
  8102  0064FE                     L22:
  8103  0064FE  6E3D               	movwf	btemp,c
  8104                           
  8105                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8106  006500  52E5               	movf	postdec1,f,c
  8107  006502  0012               	return		;funcret
  8108  006504                     __end_of_TimerDone:
  8109                           	opt callstack 0
  8110                           
  8111 ;; *************** function _StartTimer *****************
  8112 ;; Defined at:
  8113 ;;		line 12 in file "timers.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;  timer           1  [STACK] unsigned char 
  8116 ;;  count           2  [STACK] unsigned short 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1  [STACK] void 
  8121 ;; Registers used:
  8122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8132 ;;Total ram usage:        0 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    3
  8135 ;; This function calls:
  8136 ;;		Nothing
  8137 ;; This function is called by:
  8138 ;;		_main
  8139 ;;		_m_protocol
  8140 ;;		_r_protocol
  8141 ;;		_t_protocol
  8142 ;;		_secs_gem_state
  8143 ;;		_WaitMs
  8144 ;; This function uses a reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text21
  8148  006196                     __ptext21:
  8149                           	opt callstack 0
  8150  006196                     _StartTimer:
  8151                           	opt callstack 25
  8152                           
  8153                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  8154                           ;stkvar	_count @ sp[(0)+-3]
  8155                           
  8156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8157                           ;incstack = 0
  8158  006196  0EFD               	movlw	-3
  8159  006198  006F FF8C  F047    	movff	plusw1,btemp+10
  8160  00619E  0EFE               	movlw	-2
  8161  0061A0  006F FF8C  F048    	movff	plusw1,btemp+11
  8162  0061A6  90D8               	bcf	status,0,c
  8163  0061A8  3447               	rlcf	btemp+10,w,c
  8164  0061AA  6E45               	movwf	btemp+8,c
  8165  0061AC  3448               	rlcf	btemp+11,w,c
  8166  0061AE  6E46               	movwf	btemp+9,c
  8167                           
  8168                           ;stkvar	_timer @ sp[(0)+-1]
  8169  0061B0  0EFF               	movlw	-1
  8170  0061B2  50E3               	movf	plusw1,w,c
  8171  0061B4  0D02               	mullw	2
  8172  0061B6  0EC0               	movlw	low _tickCount
  8173  0061B8  24F3               	addwf	prodl,w,c
  8174  0061BA  6ED9               	movwf	fsr2l,c
  8175  0061BC  0E01               	movlw	high _tickCount
  8176  0061BE  20F4               	addwfc	prodh,w,c
  8177  0061C0  6EDA               	movwf	fsr2h,c
  8178  0061C2  0060  F117  FFDE   	movff	btemp+8,postinc2
  8179  0061C8  0060  F11B  FFDD   	movff	btemp+9,postdec2
  8180                           
  8181                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  8182  0061CE  52E5               	movf	postdec1,f,c
  8183  0061D0  52E5               	movf	postdec1,f,c
  8184  0061D2  52E5               	movf	postdec1,f,c
  8185  0061D4  0012               	return		;funcret
  8186  0061D6                     __end_of_StartTimer:
  8187                           	opt callstack 0
  8188                           
  8189 ;; *************** function _UART2_is_rx_ready *****************
  8190 ;; Defined at:
  8191 ;;		line 137 in file "mcc_generated_files/uart2.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1  [STACK] unsigned char 
  8198 ;; Registers used:
  8199 ;;		btemp
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:    3
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_m_protocol
  8216 ;; This function uses a reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text22
  8220  006A7A                     __ptext22:
  8221                           	opt callstack 0
  8222  006A7A                     _UART2_is_rx_ready:
  8223                           	opt callstack 26
  8224                           
  8225                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  8226                           
  8227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8228                           ;incstack = 0
  8229  006A7A  0060  F0C4  F03D   	movff	_uart2RxCount,btemp	;volatile
  8230                           
  8231                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  8232  006A80  0012               	return		;funcret
  8233  006A82                     __end_of_UART2_is_rx_ready:
  8234                           	opt callstack 0
  8235                           
  8236 ;; *************** function _UART2_Read *****************
  8237 ;; Defined at:
  8238 ;;		line 152 in file "mcc_generated_files/uart2.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;		None
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  readValue       1  [STACK] unsigned char 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  1  [STACK] unsigned char 
  8245 ;; Registers used:
  8246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 3F/39
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8256 ;;Total ram usage:        0 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    3
  8259 ;; This function calls:
  8260 ;;		Nothing
  8261 ;; This function is called by:
  8262 ;;		_m_protocol
  8263 ;; This function uses a reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text23
  8267  006292                     __ptext23:
  8268                           	opt callstack 0
  8269  006292                     _UART2_Read:
  8270                           	opt callstack 0
  8271                           
  8272                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8273  006292  52E6               	movf	postinc1,f,c
  8274  006294                     
  8275                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  8276                           
  8277                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  8278  006294  5031               	movf	_uart2RxCount,w,c	;volatile
  8279  006296  B4D8               	btfsc	status,2,c
  8280  006298  D7FD               	goto	l6423
  8281                           
  8282                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  8283  00629A  0E00               	movlw	low _uart2RxBuffer
  8284  00629C  2432               	addwf	_uart2RxTail,w,c	;volatile
  8285  00629E  6ED9               	movwf	fsr2l,c
  8286  0062A0  6ADA               	clrf	fsr2h,c
  8287  0062A2  0E02               	movlw	high _uart2RxBuffer
  8288  0062A4  22DA               	addwfc	fsr2h,f,c
  8289  0062A6  50DF               	movf	indf2,w,c
  8290  0062A8  6E48               	movwf	btemp+11,c
  8291                           
  8292                           ;stkvar	_readValue @ sp[(-1)+0]
  8293  0062AA  0EFF               	movlw	-1
  8294  0062AC  0060  F123  FFE3   	movff	btemp+11,plusw1
  8295  0062B2  2A32               	incf	_uart2RxTail,f,c	;volatile
  8296                           
  8297                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  8298  0062B4  0E3F               	movlw	63
  8299  0062B6  6432               	cpfsgt	_uart2RxTail,c
  8300  0062B8  D001               	goto	l692
  8301                           
  8302                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  8303  0062BA  6A32               	clrf	_uart2RxTail,c	;volatile
  8304  0062BC                     l692:
  8305                           
  8306                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  8307  0062BC  0139               	movlb	57	; () banked
  8308  0062BE  9596               	bcf	150,2,b	;volatile
  8309                           
  8310                           ; BSR set to: 57
  8311                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  8312  0062C0  0631               	decf	_uart2RxCount,f,c	;volatile
  8313                           
  8314                           ; BSR set to: 57
  8315                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  8316  0062C2  8596               	bsf	150,2,b	;volatile
  8317                           
  8318                           ; BSR set to: 57
  8319                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  8320                           ;stkvar	_readValue @ sp[(-1)+0]
  8321  0062C4  0EFF               	movlw	-1
  8322  0062C6  006F FF8C  F03D    	movff	plusw1,btemp
  8323                           
  8324                           ; BSR set to: 57
  8325                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8326  0062CC  52E5               	movf	postdec1,f,c
  8327  0062CE  0012               	return		;funcret
  8328  0062D0                     __end_of_UART2_Read:
  8329                           	opt callstack 0
  8330                           
  8331 ;; *************** function _UART1_is_rx_ready *****************
  8332 ;; Defined at:
  8333 ;;		line 146 in file "mcc_generated_files/uart1.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;		None
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;		None
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1  [STACK] unsigned char 
  8340 ;; Registers used:
  8341 ;;		btemp
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8351 ;;Total ram usage:        0 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; Hardware stack levels required when called:    3
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_m_protocol
  8358 ;;		_r_protocol
  8359 ;;		_t_protocol
  8360 ;; This function uses a reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text24
  8364  006A82                     __ptext24:
  8365                           	opt callstack 0
  8366  006A82                     _UART1_is_rx_ready:
  8367                           	opt callstack 26
  8368                           
  8369                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  8370                           
  8371                           ; BSR set to: 57
  8372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8373                           ;incstack = 0
  8374  006A82  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  8375                           
  8376                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  8377  006A88  0012               	return		;funcret
  8378  006A8A                     __end_of_UART1_is_rx_ready:
  8379                           	opt callstack 0
  8380                           
  8381 ;; *************** function _UART1_Read *****************
  8382 ;; Defined at:
  8383 ;;		line 161 in file "mcc_generated_files/uart1.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  readValue       1  [STACK] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1  [STACK] unsigned char 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 3F/39
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;Total ram usage:        0 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    3
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_m_protocol
  8408 ;;		_r_protocol
  8409 ;;		_t_protocol
  8410 ;; This function uses a reentrant model
  8411 ;;
  8412                           
  8413                           	psect	text25
  8414  0062D0                     __ptext25:
  8415                           	opt callstack 0
  8416  0062D0                     _UART1_Read:
  8417                           	opt callstack 0
  8418                           
  8419                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8420  0062D0  52E6               	movf	postinc1,f,c
  8421  0062D2                     
  8422                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  8423                           
  8424                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  8425  0062D2  5037               	movf	_uart1RxCount,w,c	;volatile
  8426  0062D4  B4D8               	btfsc	status,2,c
  8427  0062D6  D7FD               	goto	l6399
  8428                           
  8429                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  8430  0062D8  0E40               	movlw	low _uart1RxBuffer
  8431  0062DA  2438               	addwf	_uart1RxTail,w,c	;volatile
  8432  0062DC  6ED9               	movwf	fsr2l,c
  8433  0062DE  6ADA               	clrf	fsr2h,c
  8434  0062E0  0E02               	movlw	high _uart1RxBuffer
  8435  0062E2  22DA               	addwfc	fsr2h,f,c
  8436  0062E4  50DF               	movf	indf2,w,c
  8437  0062E6  6E48               	movwf	btemp+11,c
  8438                           
  8439                           ;stkvar	_readValue @ sp[(-1)+0]
  8440  0062E8  0EFF               	movlw	-1
  8441  0062EA  0060  F123  FFE3   	movff	btemp+11,plusw1
  8442  0062F0  2A38               	incf	_uart1RxTail,f,c	;volatile
  8443                           
  8444                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  8445  0062F2  0E3F               	movlw	63
  8446  0062F4  6438               	cpfsgt	_uart1RxTail,c
  8447  0062F6  D001               	goto	l572
  8448                           
  8449                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  8450  0062F8  6A38               	clrf	_uart1RxTail,c	;volatile
  8451  0062FA                     l572:
  8452                           
  8453                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  8454  0062FA  0139               	movlb	57	; () banked
  8455  0062FC  9793               	bcf	147,3,b	;volatile
  8456                           
  8457                           ; BSR set to: 57
  8458                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  8459  0062FE  0637               	decf	_uart1RxCount,f,c	;volatile
  8460                           
  8461                           ; BSR set to: 57
  8462                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  8463  006300  8793               	bsf	147,3,b	;volatile
  8464                           
  8465                           ; BSR set to: 57
  8466                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  8467                           ;stkvar	_readValue @ sp[(-1)+0]
  8468  006302  0EFF               	movlw	-1
  8469  006304  006F FF8C  F03D    	movff	plusw1,btemp
  8470                           
  8471                           ; BSR set to: 57
  8472                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8473  00630A  52E5               	movf	postdec1,f,c
  8474  00630C  0012               	return		;funcret
  8475  00630E                     __end_of_UART1_Read:
  8476                           	opt callstack 0
  8477                           
  8478 ;; *************** function _init_display *****************
  8479 ;; Defined at:
  8480 ;;		line 35 in file "eadog.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1  [STACK] void 
  8487 ;; Registers used:
  8488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 3F/3D
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8498 ;;Total ram usage:        0 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    5
  8501 ;; This function calls:
  8502 ;;		_ringBufS_init
  8503 ;;		_send_lcd_cmd
  8504 ;;		_send_lcd_cmd_long
  8505 ;;		_wdtdelay
  8506 ;; This function is called by:
  8507 ;;		_main
  8508 ;; This function uses a reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text26
  8512  005416                     __ptext26:
  8513                           	opt callstack 0
  8514  005416                     _init_display:
  8515                           	opt callstack 25
  8516                           
  8517                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  8518                           
  8519                           ; BSR set to: 57
  8520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8521                           ;incstack = 0
  8522  005416  0E80               	movlw	low _ring_buf1
  8523  005418  0100               	movlb	0	; () banked
  8524  00541A  6FD5               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8525  00541C  0E03               	movlw	high _ring_buf1
  8526  00541E  6FD6               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8527                           
  8528                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  8529  005420  0E00               	movlw	low _ring_buf2
  8530  005422  6FD3               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8531  005424  0E04               	movlw	high _ring_buf2
  8532  005426  6FD4               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  8536  005428  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  8537  00542E  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  8538  005434  ECAA  F032         	call	_ringBufS_init	;wreg free
  8539                           
  8540                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  8541  005438  0060  F34F  FFE6   	movff	_spi_link+4,postinc1
  8542  00543E  0060  F353  FFE6   	movff	_spi_link+5,postinc1
  8543  005444  ECAA  F032         	call	_ringBufS_init	;wreg free
  8544                           
  8545                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  8546  005448  80BE               	bsf	16318,0,c	;volatile
  8547  00544A  84BC               	bsf	16316,2,c	;volatile
  8548                           
  8549                           ;eadog.c: 44:  wdtdelay(350000);
  8550  00544C  0E30               	movlw	48
  8551  00544E  6EE6               	movwf	postinc1,c
  8552  005450  0E57               	movlw	87
  8553  005452  6EE6               	movwf	postinc1,c
  8554  005454  0E05               	movlw	5
  8555  005456  6EE6               	movwf	postinc1,c
  8556  005458  0E00               	movlw	0
  8557  00545A  6EE6               	movwf	postinc1,c
  8558  00545C  EC4D  F02F         	call	_wdtdelay	;wreg free
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  8562  005460  0E39               	movlw	57
  8563  005462  6EE6               	movwf	postinc1,c
  8564  005464  EC96  F032         	call	_send_lcd_cmd	;wreg free
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  8568  005468  0E1D               	movlw	29
  8569  00546A  6EE6               	movwf	postinc1,c
  8570  00546C  EC96  F032         	call	_send_lcd_cmd	;wreg free
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  8574  005470  0E50               	movlw	80
  8575  005472  6EE6               	movwf	postinc1,c
  8576  005474  EC96  F032         	call	_send_lcd_cmd	;wreg free
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  8580  005478  0E6C               	movlw	108
  8581  00547A  6EE6               	movwf	postinc1,c
  8582  00547C  EC96  F032         	call	_send_lcd_cmd	;wreg free
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  8586  005480  0E76               	movlw	118
  8587  005482  6EE6               	movwf	postinc1,c
  8588  005484  EC96  F032         	call	_send_lcd_cmd	;wreg free
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  8592  005488  0E38               	movlw	56
  8593  00548A  6EE6               	movwf	postinc1,c
  8594  00548C  EC82  F032         	call	_send_lcd_cmd_long	;wreg free
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  8598  005490  0E0F               	movlw	15
  8599  005492  6EE6               	movwf	postinc1,c
  8600  005494  EC96  F032         	call	_send_lcd_cmd	;wreg free
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  8604  005498  0E01               	movlw	1
  8605  00549A  6EE6               	movwf	postinc1,c
  8606  00549C  EC82  F032         	call	_send_lcd_cmd_long	;wreg free
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  8610  0054A0  0E02               	movlw	2
  8611  0054A2  6EE6               	movwf	postinc1,c
  8612  0054A4  EC96  F032         	call	_send_lcd_cmd	;wreg free
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  8616  0054A8  0E06               	movlw	6
  8617  0054AA  6EE6               	movwf	postinc1,c
  8618  0054AC  EC96  F032         	call	_send_lcd_cmd	;wreg free
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;eadog.c: 55:  wdtdelay(30);
  8622  0054B0  0E1E               	movlw	30
  8623  0054B2  6EE6               	movwf	postinc1,c
  8624  0054B4  0E00               	movlw	0
  8625  0054B6  6EE6               	movwf	postinc1,c
  8626  0054B8  0E00               	movlw	0
  8627  0054BA  6EE6               	movwf	postinc1,c
  8628  0054BC  0E00               	movlw	0
  8629  0054BE  6EE6               	movwf	postinc1,c
  8630  0054C0  EC4D  F02F         	call	_wdtdelay	;wreg free
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  8634  0054C4  0E02               	movlw	2
  8635  0054C6  013D               	movlb	61	; () banked
  8636  0054C8  6F16               	movwf	22,b	;volatile
  8637                           
  8638                           ; BSR set to: 61
  8639                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  8640  0054CA  0E40               	movlw	64
  8641  0054CC  6F15               	movwf	21,b	;volatile
  8642                           
  8643                           ; BSR set to: 61
  8644                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  8645  0054CE  0E83               	movlw	131
  8646  0054D0  6F14               	movwf	20,b	;volatile
  8647                           
  8648                           ; BSR set to: 61
  8649                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  8650  0054D2  931A               	bcf	26,1,b	;volatile
  8651                           
  8652                           ; BSR set to: 61
  8653                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  8654  0054D4  0E3F               	movlw	-193
  8655  0054D6  013B               	movlb	59	; () banked
  8656  0054D8  17FD               	andwf	253,f,b	;volatile
  8657                           
  8658                           ; BSR set to: 59
  8659                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  8660  0054DA  9BFD               	bcf	253,5,b	;volatile
  8661                           
  8662                           ; BSR set to: 59
  8663                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  8664  0054DC  51FD               	movf	253,w,b	;volatile
  8665  0054DE  0BF9               	andlw	-7
  8666  0054E0  0902               	iorlw	2
  8667  0054E2  6FFD               	movwf	253,b	;volatile
  8668                           
  8669                           ; BSR set to: 59
  8670                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  8671  0054E4  0EE7               	movlw	-25
  8672  0054E6  17FD               	andwf	253,f,b	;volatile
  8673                           
  8674                           ; BSR set to: 59
  8675                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  8676  0054E8  81FD               	bsf	253,0,b	;volatile
  8677                           
  8678                           ; BSR set to: 59
  8679                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  8680  0054EA  0E80               	movlw	low _ring_buf1
  8681  0054EC  6FF9               	movwf	249,b	;volatile
  8682  0054EE  0E03               	movlw	high _ring_buf1
  8683  0054F0  6FFA               	movwf	250,b	;volatile
  8684  0054F2  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8685  0054F4  6FFB               	movwf	251,b	;volatile
  8686                           
  8687                           ; BSR set to: 59
  8688                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  8689  0054F6  9BFC               	bcf	252,5,b	;volatile
  8690                           
  8691                           ; BSR set to: 59
  8692                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  8693  0054F8  013D               	movlb	61	; () banked
  8694  0054FA  831A               	bsf	26,1,b	;volatile
  8695                           
  8696                           ; BSR set to: 61
  8697                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  8698  0054FC  90BE               	bcf	16318,0,c	;volatile
  8699                           
  8700                           ; BSR set to: 61
  8701                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8702  0054FE  0012               	return		;funcret
  8703  005500                     __end_of_init_display:
  8704                           	opt callstack 0
  8705                           
  8706 ;; *************** function _send_lcd_cmd_long *****************
  8707 ;; Defined at:
  8708 ;;		line 97 in file "eadog.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  cmd             1  [STACK] unsigned char 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;		None
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1  [STACK] void 
  8715 ;; Registers used:
  8716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8717 ;; Tracked objects:
  8718 ;;		On entry : 3F/0
  8719 ;;		On exit  : 3F/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8726 ;;Total ram usage:        0 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    4
  8729 ;; This function calls:
  8730 ;;		_SPI1_Exchange8bit
  8731 ;;		_wdtdelay
  8732 ;; This function is called by:
  8733 ;;		_init_display
  8734 ;; This function uses a reentrant model
  8735 ;;
  8736                           
  8737                           	psect	text27
  8738  006504                     __ptext27:
  8739                           	opt callstack 0
  8740  006504                     _send_lcd_cmd_long:
  8741                           	opt callstack 25
  8742                           
  8743                           ; BSR set to: 61
  8744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8745                           ;incstack = 0
  8746                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  8747  006504  92BC               	bcf	16316,1,c	;volatile
  8748                           
  8749                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  8750  006506  94BC               	bcf	16316,2,c	;volatile
  8751                           
  8752                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  8753                           ;stkvar	_cmd @ sp[(0)+-1]
  8754  006508  0EFF               	movlw	-1
  8755  00650A  50E3               	movf	plusw1,w,c
  8756  00650C  6EE6               	movwf	postinc1,c
  8757  00650E  EC71  F034         	call	_SPI1_Exchange8bit	;wreg free
  8758                           
  8759                           ; BSR set to: 57
  8760                           ;eadog.c: 102:  wdtdelay(800);
  8761  006512  0E20               	movlw	32
  8762  006514  6EE6               	movwf	postinc1,c
  8763  006516  0E03               	movlw	3
  8764  006518  6EE6               	movwf	postinc1,c
  8765  00651A  0E00               	movlw	0
  8766  00651C  6EE6               	movwf	postinc1,c
  8767  00651E  0E00               	movlw	0
  8768  006520  6EE6               	movwf	postinc1,c
  8769  006522  EC4D  F02F         	call	_wdtdelay	;wreg free
  8770                           
  8771                           ; BSR set to: 0
  8772  006526  82BC               	bsf	16316,1,c	;volatile
  8773                           
  8774                           ; BSR set to: 0
  8775                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8776  006528  52E5               	movf	postdec1,f,c
  8777  00652A  0012               	return		;funcret
  8778  00652C                     __end_of_send_lcd_cmd_long:
  8779                           	opt callstack 0
  8780                           
  8781 ;; *************** function _send_lcd_cmd *****************
  8782 ;; Defined at:
  8783 ;;		line 85 in file "eadog.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  cmd             1  [STACK] unsigned char 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1  [STACK] void 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8792 ;; Tracked objects:
  8793 ;;		On entry : 3F/0
  8794 ;;		On exit  : 3F/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:    4
  8804 ;; This function calls:
  8805 ;;		_SPI1_Exchange8bit
  8806 ;;		_wdtdelay
  8807 ;; This function is called by:
  8808 ;;		_init_display
  8809 ;; This function uses a reentrant model
  8810 ;;
  8811                           
  8812                           	psect	text28
  8813  00652C                     __ptext28:
  8814                           	opt callstack 0
  8815  00652C                     _send_lcd_cmd:
  8816                           	opt callstack 25
  8817                           
  8818                           ; BSR set to: 0
  8819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8820                           ;incstack = 0
  8821                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  8822  00652C  92BC               	bcf	16316,1,c	;volatile
  8823                           
  8824                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  8825  00652E  94BC               	bcf	16316,2,c	;volatile
  8826                           
  8827                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  8828                           ;stkvar	_cmd @ sp[(0)+-1]
  8829  006530  0EFF               	movlw	-1
  8830  006532  50E3               	movf	plusw1,w,c
  8831  006534  6EE6               	movwf	postinc1,c
  8832  006536  EC71  F034         	call	_SPI1_Exchange8bit	;wreg free
  8833                           
  8834                           ; BSR set to: 57
  8835                           ;eadog.c: 90:  wdtdelay(30);
  8836  00653A  0E1E               	movlw	30
  8837  00653C  6EE6               	movwf	postinc1,c
  8838  00653E  0E00               	movlw	0
  8839  006540  6EE6               	movwf	postinc1,c
  8840  006542  0E00               	movlw	0
  8841  006544  6EE6               	movwf	postinc1,c
  8842  006546  0E00               	movlw	0
  8843  006548  6EE6               	movwf	postinc1,c
  8844  00654A  EC4D  F02F         	call	_wdtdelay	;wreg free
  8845                           
  8846                           ; BSR set to: 0
  8847  00654E  82BC               	bsf	16316,1,c	;volatile
  8848                           
  8849                           ; BSR set to: 0
  8850                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8851  006550  52E5               	movf	postdec1,f,c
  8852  006552  0012               	return		;funcret
  8853  006554                     __end_of_send_lcd_cmd:
  8854                           	opt callstack 0
  8855                           
  8856 ;; *************** function _SPI1_Exchange8bit *****************
  8857 ;; Defined at:
  8858 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  data            1  [STACK] unsigned char 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1  [STACK] unsigned char 
  8865 ;; Registers used:
  8866 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 3F/39
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8876 ;;Total ram usage:        0 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:    3
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_send_lcd_cmd
  8883 ;;		_send_lcd_cmd_long
  8884 ;; This function uses a reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text29
  8888  0068E2                     __ptext29:
  8889                           	opt callstack 0
  8890  0068E2                     _SPI1_Exchange8bit:
  8891                           	opt callstack 25
  8892                           
  8893                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8894                           
  8895                           ; BSR set to: 0
  8896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8897                           ;incstack = 0
  8898  0068E2  0E01               	movlw	1
  8899  0068E4  013D               	movlb	61	; () banked
  8900  0068E6  6F12               	movwf	18,b	;volatile
  8901                           
  8902                           ; BSR set to: 61
  8903                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8904                           ;stkvar	_data @ sp[(0)+-1]
  8905  0068E8  0EFF               	movlw	-1
  8906  0068EA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8907  0068F0                     l851:
  8908                           
  8909                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8910  0068F0  0139               	movlb	57	; () banked
  8911  0068F2  A9A2               	btfss	162,4,b	;volatile
  8912  0068F4  D7FD               	goto	l851
  8913                           
  8914                           ; BSR set to: 57
  8915                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8916  0068F6  006F F440  F03D    	movff	15632,btemp	;volatile
  8917                           
  8918                           ; BSR set to: 57
  8919                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8920  0068FC  52E5               	movf	postdec1,f,c
  8921  0068FE  0012               	return		;funcret
  8922  006900                     __end_of_SPI1_Exchange8bit:
  8923                           	opt callstack 0
  8924                           
  8925 ;; *************** function _ringBufS_init *****************
  8926 ;; Defined at:
  8927 ;;		line 22 in file "ringbufs.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  _this           2  [STACK] PTR volatile struct ring
  8930 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1  [STACK] void 
  8935 ;; Registers used:
  8936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8946 ;;Total ram usage:        0 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    4
  8949 ;; This function calls:
  8950 ;;		_memset
  8951 ;; This function is called by:
  8952 ;;		_init_display
  8953 ;; This function uses a reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text30
  8957  006554                     __ptext30:
  8958                           	opt callstack 0
  8959  006554                     _ringBufS_init:
  8960                           	opt callstack 25
  8961                           
  8962                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8963                           
  8964                           ; BSR set to: 57
  8965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8966                           ;incstack = 0
  8967  006554  0E43               	movlw	67
  8968  006556  6EE6               	movwf	postinc1,c
  8969  006558  0E00               	movlw	0
  8970  00655A  6EE6               	movwf	postinc1,c
  8971  00655C  0E00               	movlw	0
  8972  00655E  6EE6               	movwf	postinc1,c
  8973  006560  0E00               	movlw	0
  8974  006562  6EE6               	movwf	postinc1,c
  8975                           
  8976                           ;stkvar	__this @ sp[(-4)+-2]
  8977  006564  0EFA               	movlw	-6
  8978  006566  006F FF8F FFE6     	movff	plusw1,postinc1
  8979  00656C  006F FF8F FFE6     	movff	plusw1,postinc1
  8980  006572  EC59  F01C         	call	_memset	;wreg free
  8981                           
  8982                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8983  006576  52E5               	movf	postdec1,f,c
  8984  006578  52E5               	movf	postdec1,f,c
  8985  00657A  0012               	return		;funcret
  8986  00657C                     __end_of_ringBufS_init:
  8987                           	opt callstack 0
  8988                           
  8989 ;; *************** function _hb_message *****************
  8990 ;; Defined at:
  8991 ;;		line 499 in file "gemsecs.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1  [STACK] void 
  8998 ;; Registers used:
  8999 ;;		wreg, status,2
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 3F/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9009 ;;Total ram usage:        0 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    3
  9012 ;; This function calls:
  9013 ;;		Nothing
  9014 ;; This function is called by:
  9015 ;;		_main
  9016 ;; This function uses a reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text31
  9020  0069F4                     __ptext31:
  9021                           	opt callstack 0
  9022  0069F4                     _hb_message:
  9023                           	opt callstack 27
  9024                           
  9025                           ;gemsecs.c: 501:  V.s_state = SEQ_STATE_TX;
  9026                           
  9027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9028                           ;incstack = 0
  9029  0069F4  0E02               	movlw	2
  9030  0069F6  0100               	movlb	0	; () banked
  9031  0069F8  6F60               	movwf	_V& (0+255),b	;volatile
  9032                           
  9033                           ;gemsecs.c: 502:  V.failed_send = 0;
  9034  0069FA  0E87               	movlw	-121
  9035  0069FC  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;gemsecs.c: 503:  V.t_l_state = LINK_STATE_IDLE;
  9039  0069FE  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  9040                           
  9041                           ; BSR set to: 0
  9042                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9043  006A00  0012               	return		;funcret
  9044  006A02                     __end_of_hb_message:
  9045                           	opt callstack 0
  9046                           
  9047 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9048 ;; Defined at:
  9049 ;;		line 223 in file "eadog.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  r               1  [STACK] unsigned char 
  9052 ;;  c               1  [STACK] unsigned char 
  9053 ;;  strPtr          1  [STACK] PTR unsigned char 
  9054 ;;		 -> V(98), 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1  [STACK] void 
  9059 ;; Registers used:
  9060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  9061 ;; Tracked objects:
  9062 ;;		On entry : 3F/0
  9063 ;;		On exit  : 3F/3B
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9070 ;;Total ram usage:        0 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:   13
  9073 ;; This function calls:
  9074 ;;		_eaDogM_WriteString
  9075 ;;		_send_lcd_cmd_dma
  9076 ;; This function is called by:
  9077 ;;		_main
  9078 ;; This function uses a reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text32
  9082  0063B0                     __ptext32:
  9083                           	opt callstack 0
  9084  0063B0                     _eaDogM_WriteStringAtPos:
  9085                           	opt callstack 17
  9086                           
  9087                           ;eadog.c: 223: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           224: {;eadog.c: 225:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9088                           ;stkvar	_c @ sp[(0)+-2]
  9089                           
  9090                           ; BSR set to: 0
  9091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9092                           ;incstack = 0
  9093  0063B0  0EFE               	movlw	-2
  9094  0063B2  006F FF8C  F048    	movff	plusw1,btemp+11
  9095                           
  9096                           ;stkvar	_r @ sp[(0)+-1]
  9097  0063B8  0EFF               	movlw	-1
  9098  0063BA  50E3               	movf	plusw1,w,c
  9099  0063BC  0D10               	mullw	16
  9100  0063BE  50F3               	movf	prodl,w,c
  9101  0063C0  2448               	addwf	btemp+11,w,c
  9102  0063C2  0F80               	addlw	128
  9103  0063C4  6EE6               	movwf	postinc1,c
  9104  0063C6  EC7B  F02F         	call	_send_lcd_cmd_dma	;wreg free
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;eadog.c: 226:  eaDogM_WriteString(strPtr);
  9108                           ;stkvar	_strPtr @ sp[(0)+-3]
  9109  0063CA  0EFD               	movlw	-3
  9110  0063CC  50E3               	movf	plusw1,w,c
  9111  0063CE  6EE6               	movwf	postinc1,c
  9112  0063D0  ECAE  F02C         	call	_eaDogM_WriteString	;wreg free
  9113                           
  9114                           ; BSR set to: 59
  9115                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  9116  0063D4  52E5               	movf	postdec1,f,c
  9117  0063D6  52E5               	movf	postdec1,f,c
  9118  0063D8  52E5               	movf	postdec1,f,c
  9119  0063DA  0012               	return		;funcret
  9120  0063DC                     __end_of_eaDogM_WriteStringAtPos:
  9121                           	opt callstack 0
  9122                           
  9123 ;; *************** function _eaDogM_WriteString *****************
  9124 ;; Defined at:
  9125 ;;		line 167 in file "eadog.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  strPtr          1  [STACK] PTR unsigned char 
  9128 ;;		 -> V(98), 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1  [STACK] void 
  9133 ;; Registers used:
  9134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9135 ;; Tracked objects:
  9136 ;;		On entry : 3F/0
  9137 ;;		On exit  : 3F/3B
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:   12
  9147 ;; This function calls:
  9148 ;;		_printf
  9149 ;;		_ringBufS_flush
  9150 ;;		_start_lcd
  9151 ;;		_strlen
  9152 ;;		_wait_lcd_set
  9153 ;; This function is called by:
  9154 ;;		_eaDogM_WriteStringAtPos
  9155 ;; This function uses a reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text33
  9159  00595C                     __ptext33:
  9160                           	opt callstack 0
  9161  00595C                     _eaDogM_WriteString:
  9162                           	opt callstack 17
  9163                           
  9164                           ; BSR set to: 59
  9165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9166                           ;incstack = 0
  9167                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  9168  00595C  82BE               	bsf	16318,1,c	;volatile
  9169                           
  9170                           ;eadog.c: 170:  wait_lcd_set();
  9171  00595E  EC45  F035         	call	_wait_lcd_set	;wreg free
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;eadog.c: 172:  ringBufS_flush(spi_link.tx1a, 0);
  9175  005962  0E00               	movlw	0
  9176  005964  6EE6               	movwf	postinc1,c
  9177  005966  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  9178  00596C  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  9179  005972  EC95  F02D         	call	_ringBufS_flush	;wreg free
  9180  005976  94BC               	bcf	16316,2,c	;volatile
  9181                           
  9182                           ;eadog.c: 174:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9183                           ;stkvar	_strPtr @ sp[(0)+-1]
  9184  005978  0EFF               	movlw	-1
  9185  00597A  006F FF8C  F048    	movff	plusw1,btemp+11
  9186  005980  0060  F123  FFE6   	movff	btemp+11,postinc1
  9187  005986  0E00               	movlw	0
  9188  005988  6EE6               	movwf	postinc1,c
  9189  00598A  EC5D  F02C         	call	_strlen	;wreg free
  9190  00598E  503E               	movf	btemp+1,w,c
  9191  005990  E104               	bnz	u5460
  9192  005992  0E41               	movlw	65
  9193  005994  5C3D               	subwf	btemp,w,c
  9194  005996  A0D8               	btfss	status,0,c
  9195  005998  D008               	goto	l8745
  9196  00599A                     u5460:
  9197                           
  9198                           ;stkvar	_strPtr @ sp[(0)+-1]
  9199  00599A  0EFF               	movlw	-1
  9200  00599C  50E3               	movf	plusw1,w,c
  9201  00599E  6ED9               	movwf	fsr2l,c
  9202  0059A0  6ADA               	clrf	fsr2h,c
  9203  0059A2  0E40               	movlw	64
  9204  0059A4  26D9               	addwf	fsr2l,f,c
  9205  0059A6  0E00               	movlw	0
  9206  0059A8  6EDF               	movwf	indf2,c
  9207  0059AA                     l8745:
  9208                           
  9209                           ;eadog.c: 175:  DMA1CON0bits.EN = 0;
  9210  0059AA  013B               	movlb	59	; () banked
  9211  0059AC  9FFC               	bcf	252,7,b	;volatile
  9212                           
  9213                           ; BSR set to: 59
  9214                           ;eadog.c: 176:  DMA1SSZ = strlen(strPtr);
  9215                           ;stkvar	_strPtr @ sp[(0)+-1]
  9216  0059AE  0EFF               	movlw	-1
  9217  0059B0  006F FF8C  F048    	movff	plusw1,btemp+11
  9218  0059B6  0060  F123  FFE6   	movff	btemp+11,postinc1
  9219  0059BC  0E00               	movlw	0
  9220  0059BE  6EE6               	movwf	postinc1,c
  9221  0059C0  EC5D  F02C         	call	_strlen	;wreg free
  9222  0059C4  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  9223  0059CA  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  9224                           
  9225                           ;eadog.c: 177:  DMA1CON0bits.EN = 1;
  9226  0059D0  013B               	movlb	59	; () banked
  9227  0059D2  8FFC               	bsf	252,7,b	;volatile
  9228                           
  9229                           ; BSR set to: 59
  9230                           ;eadog.c: 178:  printf("%s", strPtr);
  9231                           ;stkvar	_strPtr @ sp[(0)+-1]
  9232  0059D4  0EFF               	movlw	-1
  9233  0059D6  006F FF8C  F048    	movff	plusw1,btemp+11
  9234  0059DC  0060  F123  FFE6   	movff	btemp+11,postinc1
  9235  0059E2  0E00               	movlw	0
  9236  0059E4  6EE6               	movwf	postinc1,c
  9237  0059E6  0EA6               	movlw	(STR_2+9)& (0+255)
  9238  0059E8  6EE6               	movwf	postinc1,c
  9239  0059EA  0E03               	movlw	3
  9240  0059EC  6EE6               	movwf	postinc1,c
  9241  0059EE  ECED  F02E         	call	_printf	;wreg free
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;eadog.c: 179:  start_lcd();
  9245  0059F2  EC48  F035         	call	_start_lcd	;wreg free
  9246                           
  9247                           ; BSR set to: 59
  9248                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9249  0059F6  52E5               	movf	postdec1,f,c
  9250  0059F8  0012               	return		;funcret
  9251  0059FA                     __end_of_eaDogM_WriteString:
  9252                           	opt callstack 0
  9253                           
  9254 ;; *************** function _eaDogM_WriteCommand *****************
  9255 ;; Defined at:
  9256 ;;		line 143 in file "eadog.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  cmd             1  [STACK] unsigned char 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;		None
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1  [STACK] void 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9265 ;; Tracked objects:
  9266 ;;		On entry : 3F/3D
  9267 ;;		On exit  : 3F/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9274 ;;Total ram usage:        0 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:   13
  9277 ;; This function calls:
  9278 ;;		_send_lcd_cmd_dma
  9279 ;; This function is called by:
  9280 ;;		_main
  9281 ;; This function uses a reentrant model
  9282 ;;
  9283                           
  9284                           	psect	text34
  9285  006A02                     __ptext34:
  9286                           	opt callstack 0
  9287  006A02                     _eaDogM_WriteCommand:
  9288                           	opt callstack 17
  9289                           
  9290                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  9291                           ;stkvar	_cmd @ sp[(0)+-1]
  9292                           
  9293                           ; BSR set to: 59
  9294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9295                           ;incstack = 0
  9296  006A02  0EFF               	movlw	-1
  9297  006A04  50E3               	movf	plusw1,w,c
  9298  006A06  6EE6               	movwf	postinc1,c
  9299  006A08  EC7B  F02F         	call	_send_lcd_cmd_dma	;wreg free
  9300                           
  9301                           ; BSR set to: 0
  9302                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9303  006A0C  52E5               	movf	postdec1,f,c
  9304  006A0E  0012               	return		;funcret
  9305  006A10                     __end_of_eaDogM_WriteCommand:
  9306                           	opt callstack 0
  9307                           
  9308 ;; *************** function _send_lcd_cmd_dma *****************
  9309 ;; Defined at:
  9310 ;;		line 188 in file "eadog.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;  strPtr          1  [STACK] unsigned char 
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;		None
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1  [STACK] void 
  9317 ;; Registers used:
  9318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 3F/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9328 ;;Total ram usage:        0 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:   12
  9331 ;; This function calls:
  9332 ;;		_printf
  9333 ;;		_ringBufS_flush
  9334 ;;		_start_lcd
  9335 ;;		_wait_lcd_done
  9336 ;;		_wait_lcd_set
  9337 ;; This function is called by:
  9338 ;;		_eaDogM_WriteCommand
  9339 ;;		_eaDogM_WriteStringAtPos
  9340 ;; This function uses a reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text35
  9344  005EF6                     __ptext35:
  9345                           	opt callstack 0
  9346  005EF6                     _send_lcd_cmd_dma:
  9347                           	opt callstack 17
  9348                           
  9349                           ; BSR set to: 0
  9350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9351                           ;incstack = 0
  9352                           ;eadog.c: 188: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 189: {;eadog.c: 190:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  9353  005EF6  82BE               	bsf	16318,1,c	;volatile
  9354                           
  9355                           ;eadog.c: 191:  wait_lcd_set();
  9356  005EF8  EC45  F035         	call	_wait_lcd_set	;wreg free
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;eadog.c: 193:  ringBufS_flush(spi_link.tx1a, 0);
  9360  005EFC  0E00               	movlw	0
  9361  005EFE  6EE6               	movwf	postinc1,c
  9362  005F00  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  9363  005F06  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  9364  005F0C  EC95  F02D         	call	_ringBufS_flush	;wreg free
  9365  005F10  92BC               	bcf	16316,1,c	;volatile
  9366  005F12  94BC               	bcf	16316,2,c	;volatile
  9367                           
  9368                           ;eadog.c: 196:  DMA1CON0bits.EN = 0;
  9369  005F14  013B               	movlb	59	; () banked
  9370  005F16  9FFC               	bcf	252,7,b	;volatile
  9371                           
  9372                           ; BSR set to: 59
  9373                           ;eadog.c: 197:  DMA1SSZ = 1;
  9374  005F18  0E00               	movlw	0
  9375  005F1A  6FF8               	movwf	248,b	;volatile
  9376  005F1C  0E01               	movlw	1
  9377  005F1E  6FF7               	movwf	247,b	;volatile
  9378                           
  9379                           ; BSR set to: 59
  9380                           ;eadog.c: 198:  DMA1CON0bits.EN = 1;
  9381  005F20  8FFC               	bsf	252,7,b	;volatile
  9382                           
  9383                           ; BSR set to: 59
  9384                           ;eadog.c: 199:  printf("%c", strPtr);
  9385                           ;stkvar	_strPtr @ sp[(0)+-1]
  9386  005F22  0EFF               	movlw	-1
  9387  005F24  50E3               	movf	plusw1,w,c
  9388  005F26  6EE6               	movwf	postinc1,c
  9389  005F28  0E00               	movlw	0
  9390  005F2A  6EE6               	movwf	postinc1,c
  9391  005F2C  0EC1               	movlw	STR_17& (0+255)
  9392  005F2E  6EE6               	movwf	postinc1,c
  9393  005F30  0E03               	movlw	3
  9394  005F32  6EE6               	movwf	postinc1,c
  9395  005F34  ECED  F02E         	call	_printf	;wreg free
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;eadog.c: 200:  start_lcd();
  9399  005F38  EC48  F035         	call	_start_lcd	;wreg free
  9400                           
  9401                           ; BSR set to: 59
  9402                           ;eadog.c: 201:  wait_lcd_done();
  9403  005F3C  EC80  F034         	call	_wait_lcd_done	;wreg free
  9404                           
  9405                           ; BSR set to: 0
  9406  005F40  82BC               	bsf	16316,1,c	;volatile
  9407                           
  9408                           ; BSR set to: 0
  9409                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9410  005F42  52E5               	movf	postdec1,f,c
  9411  005F44  0012               	return		;funcret
  9412  005F46                     __end_of_send_lcd_cmd_dma:
  9413                           	opt callstack 0
  9414                           
  9415 ;; *************** function _wait_lcd_set *****************
  9416 ;; Defined at:
  9417 ;;		line 114 in file "eadog.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;		None
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;		None
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1  [STACK] void 
  9424 ;; Registers used:
  9425 ;;		None
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 3F/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9435 ;;Total ram usage:        0 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    3
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		_eaDogM_WriteString
  9442 ;;		_send_lcd_cmd_dma
  9443 ;; This function uses a reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text36
  9447  006A8A                     __ptext36:
  9448                           	opt callstack 0
  9449  006A8A                     _wait_lcd_set:
  9450                           	opt callstack 25
  9451                           
  9452                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  9453                           
  9454                           ; BSR set to: 0
  9455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9456                           ;incstack = 0
  9457  006A8A  0100               	movlb	0	; () banked
  9458  006A8C  87CF               	bsf	_spi_link& (0+255),3,b	;volatile
  9459                           
  9460                           ; BSR set to: 0
  9461                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9462  006A8E  0012               	return		;funcret
  9463  006A90                     __end_of_wait_lcd_set:
  9464                           	opt callstack 0
  9465                           
  9466 ;; *************** function _wait_lcd_done *****************
  9467 ;; Defined at:
  9468 ;;		line 124 in file "eadog.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;		None
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;		None
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1  [STACK] void 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9477 ;; Tracked objects:
  9478 ;;		On entry : 4/0
  9479 ;;		On exit  : 3F/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9486 ;;Total ram usage:        0 bytes
  9487 ;; Hardware stack levels used:    1
  9488 ;; Hardware stack levels required when called:    4
  9489 ;; This function calls:
  9490 ;;		_wdtdelay
  9491 ;; This function is called by:
  9492 ;;		_main
  9493 ;;		_send_lcd_cmd_dma
  9494 ;; This function uses a reentrant model
  9495 ;;
  9496                           
  9497                           	psect	text37
  9498  006900                     __ptext37:
  9499                           	opt callstack 0
  9500  006900                     _wait_lcd_done:
  9501                           	opt callstack 26
  9502                           
  9503                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  9504                           
  9505                           ; BSR set to: 0
  9506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9507                           ;incstack = 0
  9508  006900  0100               	movlb	0	; () banked
  9509  006902  B7CF               	btfsc	_spi_link& (0+255),3,b	;volatile
  9510  006904  D7FD               	goto	_wait_lcd_done
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;eadog.c: 127:  wdtdelay(50);
  9514  006906  0E32               	movlw	50
  9515  006908  6EE6               	movwf	postinc1,c
  9516  00690A  0E00               	movlw	0
  9517  00690C  6EE6               	movwf	postinc1,c
  9518  00690E  0E00               	movlw	0
  9519  006910  6EE6               	movwf	postinc1,c
  9520  006912  0E00               	movlw	0
  9521  006914  6EE6               	movwf	postinc1,c
  9522  006916  EC4D  F02F         	call	_wdtdelay	;wreg free
  9523                           
  9524                           ; BSR set to: 0
  9525                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9526  00691A  0012               	return		;funcret
  9527  00691C                     __end_of_wait_lcd_done:
  9528                           	opt callstack 0
  9529                           
  9530 ;; *************** function _wdtdelay *****************
  9531 ;; Defined at:
  9532 ;;		line 21 in file "eadog.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;  delay           4  [STACK] unsigned long 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1  [STACK] void 
  9539 ;; Registers used:
  9540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 3F/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9550 ;;Total ram usage:        0 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    3
  9553 ;; This function calls:
  9554 ;;		Nothing
  9555 ;; This function is called by:
  9556 ;;		_init_display
  9557 ;;		_send_lcd_cmd
  9558 ;;		_send_lcd_cmd_long
  9559 ;;		_wait_lcd_done
  9560 ;; This function uses a reentrant model
  9561 ;;
  9562                           
  9563                           	psect	text38
  9564  005E9A                     __ptext38:
  9565                           	opt callstack 0
  9566  005E9A                     _wdtdelay:
  9567                           	opt callstack 26
  9568                           
  9569                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  9570                           
  9571                           ; BSR set to: 0
  9572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9573                           ;incstack = 0
  9574  005E9A  0100               	movlb	0	; () banked
  9575  005E9C  6BE2               	clrf	wdtdelay@dcount& (0+255),b
  9576  005E9E  6BE3               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9577  005EA0  6BE4               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9578  005EA2  6BE5               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9579  005EA4  D009               	goto	l5865
  9580  005EA6                     l1369:
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;eadog.c: 26:   __nop();
  9584  005EA6  F000               	nop	
  9585  005EA8  0004               	clrwdt		;# 
  9586                           
  9587                           ;eadog.c: 28:  };
  9588  005EAA  0E01               	movlw	1
  9589  005EAC  0100               	movlb	0	; () banked
  9590  005EAE  27E2               	addwf	wdtdelay@dcount& (0+255),f,b
  9591  005EB0  0E00               	movlw	0
  9592  005EB2  23E3               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9593  005EB4  23E4               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9594  005EB6  23E5               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9595  005EB8                     l5865:
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;stkvar	_delay @ sp[(0)+-4]
  9599  005EB8  0EFC               	movlw	-4
  9600  005EBA  006F FF8C  F03D    	movff	plusw1,btemp
  9601  005EC0  51E2               	movf	wdtdelay@dcount& (0+255),w,b
  9602  005EC2  5C3D               	subwf	btemp,w,c
  9603  005EC4  0EFD               	movlw	-3
  9604  005EC6  006F FF8C  F03D    	movff	plusw1,btemp
  9605  005ECC  51E3               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9606  005ECE  583D               	subwfb	btemp,w,c
  9607  005ED0  0EFE               	movlw	-2
  9608  005ED2  006F FF8C  F03D    	movff	plusw1,btemp
  9609  005ED8  51E4               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9610  005EDA  583D               	subwfb	btemp,w,c
  9611  005EDC  0EFF               	movlw	-1
  9612  005EDE  006F FF8C  F03D    	movff	plusw1,btemp
  9613  005EE4  51E5               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9614  005EE6  583D               	subwfb	btemp,w,c
  9615  005EE8  B0D8               	btfsc	status,0,c
  9616  005EEA  D7DD               	goto	l1369
  9617                           
  9618                           ; BSR set to: 0
  9619                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9620  005EEC  52E5               	movf	postdec1,f,c
  9621  005EEE  52E5               	movf	postdec1,f,c
  9622  005EF0  52E5               	movf	postdec1,f,c
  9623  005EF2  52E5               	movf	postdec1,f,c
  9624  005EF4  0012               	return		;funcret
  9625  005EF6                     __end_of_wdtdelay:
  9626                           	opt callstack 0
  9627                           
  9628 ;; *************** function _start_lcd *****************
  9629 ;; Defined at:
  9630 ;;		line 109 in file "eadog.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;		None
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1  [STACK] void 
  9637 ;; Registers used:
  9638 ;;		None
  9639 ;; Tracked objects:
  9640 ;;		On entry : 3F/0
  9641 ;;		On exit  : 3F/3B
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9648 ;;Total ram usage:        0 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    3
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_eaDogM_WriteString
  9655 ;;		_send_lcd_cmd_dma
  9656 ;; This function uses a reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text39
  9660  006A90                     __ptext39:
  9661                           	opt callstack 0
  9662  006A90                     _start_lcd:
  9663                           	opt callstack 25
  9664                           
  9665                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  9666                           
  9667                           ; BSR set to: 0
  9668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9669                           ;incstack = 0
  9670  006A90  013B               	movlb	59	; () banked
  9671  006A92  8DFC               	bsf	252,6,b	;volatile
  9672                           
  9673                           ; BSR set to: 59
  9674                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9675  006A94  0012               	return		;funcret
  9676  006A96                     __end_of_start_lcd:
  9677                           	opt callstack 0
  9678                           
  9679 ;; *************** function _ringBufS_flush *****************
  9680 ;; Defined at:
  9681 ;;		line 76 in file "ringbufs.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9684 ;;		 -> ring_buf1(67), 
  9685 ;;  clearBuffer     1  [STACK] const char 
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1  [STACK] void 
  9690 ;; Registers used:
  9691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9692 ;; Tracked objects:
  9693 ;;		On entry : 3F/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;Total ram usage:        0 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:    4
  9704 ;; This function calls:
  9705 ;;		_memset
  9706 ;; This function is called by:
  9707 ;;		_eaDogM_WriteString
  9708 ;;		_send_lcd_cmd_dma
  9709 ;; This function uses a reentrant model
  9710 ;;
  9711                           
  9712                           	psect	text40
  9713  005B2A                     __ptext40:
  9714                           	opt callstack 0
  9715  005B2A                     _ringBufS_flush:
  9716                           	opt callstack 24
  9717                           
  9718                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9719                           ;stkvar	__this @ sp[(0)+-2]
  9720                           
  9721                           ; BSR set to: 59
  9722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9723                           ;incstack = 0
  9724  005B2A  0EFE               	movlw	-2
  9725  005B2C  006F FF8C  F047    	movff	plusw1,btemp+10
  9726  005B32  0EFF               	movlw	-1
  9727  005B34  006F FF8C  F048    	movff	plusw1,btemp+11
  9728  005B3A  0E42               	movlw	66
  9729  005B3C  2447               	addwf	btemp+10,w,c
  9730  005B3E  6ED9               	movwf	fsr2l,c
  9731  005B40  0E00               	movlw	0
  9732  005B42  2048               	addwfc	btemp+11,w,c
  9733  005B44  6EDA               	movwf	fsr2h,c
  9734  005B46  0E00               	movlw	0
  9735  005B48  6EDF               	movwf	indf2,c
  9736                           
  9737                           ;ringbufs.c: 79:  _this->head = 0;
  9738                           ;stkvar	__this @ sp[(0)+-2]
  9739  005B4A  0EFE               	movlw	-2
  9740  005B4C  006F FF8C  F047    	movff	plusw1,btemp+10
  9741  005B52  0EFF               	movlw	-1
  9742  005B54  006F FF8C  F048    	movff	plusw1,btemp+11
  9743  005B5A  0E40               	movlw	64
  9744  005B5C  2447               	addwf	btemp+10,w,c
  9745  005B5E  6ED9               	movwf	fsr2l,c
  9746  005B60  0E00               	movlw	0
  9747  005B62  2048               	addwfc	btemp+11,w,c
  9748  005B64  6EDA               	movwf	fsr2h,c
  9749  005B66  0E00               	movlw	0
  9750  005B68  6EDF               	movwf	indf2,c
  9751                           
  9752                           ;ringbufs.c: 80:  _this->tail = 0;
  9753                           ;stkvar	__this @ sp[(0)+-2]
  9754  005B6A  0EFE               	movlw	-2
  9755  005B6C  006F FF8C  F047    	movff	plusw1,btemp+10
  9756  005B72  0EFF               	movlw	-1
  9757  005B74  006F FF8C  F048    	movff	plusw1,btemp+11
  9758  005B7A  0E41               	movlw	65
  9759  005B7C  2447               	addwf	btemp+10,w,c
  9760  005B7E  6ED9               	movwf	fsr2l,c
  9761  005B80  0E00               	movlw	0
  9762  005B82  2048               	addwfc	btemp+11,w,c
  9763  005B84  6EDA               	movwf	fsr2h,c
  9764  005B86  0E00               	movlw	0
  9765  005B88  6EDF               	movwf	indf2,c
  9766                           
  9767                           ;ringbufs.c: 81:  if (clearBuffer) {
  9768                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9769  005B8A  0EFD               	movlw	-3
  9770  005B8C  50E3               	movf	plusw1,w,c
  9771  005B8E  B4D8               	btfsc	status,2,c
  9772  005B90  D011               	goto	l1509
  9773                           
  9774                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9775  005B92  0E40               	movlw	64
  9776  005B94  6EE6               	movwf	postinc1,c
  9777  005B96  0E00               	movlw	0
  9778  005B98  6EE6               	movwf	postinc1,c
  9779  005B9A  0E00               	movlw	0
  9780  005B9C  6EE6               	movwf	postinc1,c
  9781  005B9E  0E00               	movlw	0
  9782  005BA0  6EE6               	movwf	postinc1,c
  9783                           
  9784                           ;stkvar	__this @ sp[(-4)+-2]
  9785  005BA2  0EFA               	movlw	-6
  9786  005BA4  006F FF8F FFE6     	movff	plusw1,postinc1
  9787  005BAA  006F FF8F FFE6     	movff	plusw1,postinc1
  9788  005BB0  EC59  F01C         	call	_memset	;wreg free
  9789  005BB4                     l1509:
  9790                           
  9791                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9792  005BB4  52E5               	movf	postdec1,f,c
  9793  005BB6  52E5               	movf	postdec1,f,c
  9794  005BB8  52E5               	movf	postdec1,f,c
  9795  005BBA  0012               	return		;funcret
  9796  005BBC                     __end_of_ringBufS_flush:
  9797                           	opt callstack 0
  9798                           
  9799 ;; *************** function _memset *****************
  9800 ;; Defined at:
  9801 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;  dest            2  [STACK] PTR void 
  9804 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9805 ;;  c               2  [STACK] int 
  9806 ;;  n               2  [STACK] unsigned int 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  s               2  [STACK] PTR unsigned char 
  9809 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9810 ;;  k               2  [STACK] unsigned int 
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  2  [STACK] PTR void 
  9813 ;; Registers used:
  9814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9824 ;;Total ram usage:        0 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:    3
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_ringBufS_init
  9831 ;;		_ringBufS_flush
  9832 ;; This function uses a reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text41
  9836  0038B2                     __ptext41:
  9837                           	opt callstack 0
  9838  0038B2                     _memset:
  9839                           	opt callstack 0
  9840                           
  9841                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9842  0038B2  52E6               	movf	postinc1,f,c
  9843  0038B4  52E6               	movf	postinc1,f,c
  9844  0038B6  52E6               	movf	postinc1,f,c
  9845  0038B8  52E6               	movf	postinc1,f,c
  9846                           
  9847                           ;stkvar	_dest @ sp[(-4)+-2]
  9848                           
  9849                           ;incstack = 0
  9850  0038BA  0EFA               	movlw	-6
  9851  0038BC  006F FF8C  F047    	movff	plusw1,btemp+10
  9852  0038C2  0EFB               	movlw	-5
  9853  0038C4  006F FF8C  F048    	movff	plusw1,btemp+11
  9854                           
  9855                           ;stkvar	_s @ sp[(-4)+0]
  9856  0038CA  0EFD               	movlw	-3
  9857  0038CC  0060  F123  FFE3   	movff	btemp+11,plusw1
  9858  0038D2  0EFC               	movlw	-4
  9859  0038D4  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9860                           
  9861                           ;stkvar	_n @ sp[(-4)+-6]
  9862  0038DA  0EF6               	movlw	-10
  9863  0038DC  006F FF8C  F03D    	movff	plusw1,btemp
  9864  0038E2  0EF7               	movlw	-9
  9865  0038E4  50E3               	movf	plusw1,w,c
  9866  0038E6  103D               	iorwf	btemp,w,c
  9867  0038E8  B4D8               	btfsc	status,2,c
  9868  0038EA  D154               	goto	u5410
  9869                           
  9870                           ;stkvar	_c @ sp[(-4)+-4]
  9871                           ;stkvar	_s @ sp[(-4)+0]
  9872  0038EC  0EFC               	movlw	-4
  9873  0038EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9874  0038F4  0EFD               	movlw	-3
  9875  0038F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9876  0038FC  0EF8               	movlw	-8
  9877  0038FE  006F FF8F FFDF     	movff	plusw1,indf2
  9878                           
  9879                           ;stkvar	_c @ sp[(-4)+-4]
  9880                           ;stkvar	_n @ sp[(-4)+-6]
  9881                           ;stkvar	_s @ sp[(-4)+0]
  9882  003904  0EFC               	movlw	-4
  9883  003906  006F FF8C  F047    	movff	plusw1,btemp+10
  9884  00390C  0EFD               	movlw	-3
  9885  00390E  006F FF8C  F048    	movff	plusw1,btemp+11
  9886  003914  0EF6               	movlw	-10
  9887  003916  50E3               	movf	plusw1,w,c
  9888  003918  2647               	addwf	btemp+10,f,c
  9889  00391A  0EF7               	movlw	-9
  9890  00391C  50E3               	movf	plusw1,w,c
  9891  00391E  2248               	addwfc	btemp+11,f,c
  9892  003920  0EFF               	movlw	255
  9893  003922  2447               	addwf	btemp+10,w,c
  9894  003924  6ED9               	movwf	fsr2l,c
  9895  003926  0EFF               	movlw	255
  9896  003928  2048               	addwfc	btemp+11,w,c
  9897  00392A  6EDA               	movwf	fsr2h,c
  9898  00392C  0EF8               	movlw	-8
  9899  00392E  006F FF8F FFDF     	movff	plusw1,indf2
  9900                           
  9901                           ;stkvar	_n @ sp[(-4)+-6]
  9902  003934  0EF7               	movlw	-9
  9903  003936  50E3               	movf	plusw1,w,c
  9904  003938  E108               	bnz	l8647
  9905  00393A  0EF6               	movlw	-10
  9906  00393C  006F FF8C  F03D    	movff	plusw1,btemp
  9907  003942  0E03               	movlw	3
  9908  003944  5E3D               	subwf	btemp,f,c
  9909  003946  A0D8               	btfss	status,0,c
  9910  003948  D125               	goto	u5410
  9911  00394A                     l8647:
  9912                           
  9913                           ;stkvar	_c @ sp[(-4)+-4]
  9914                           ;stkvar	_s @ sp[(-4)+0]
  9915  00394A  0EFC               	movlw	-4
  9916  00394C  006F FF8C  F047    	movff	plusw1,btemp+10
  9917  003952  0EFD               	movlw	-3
  9918  003954  006F FF8C  F048    	movff	plusw1,btemp+11
  9919  00395A  0E01               	movlw	1
  9920  00395C  2447               	addwf	btemp+10,w,c
  9921  00395E  6ED9               	movwf	fsr2l,c
  9922  003960  0E00               	movlw	0
  9923  003962  2048               	addwfc	btemp+11,w,c
  9924  003964  6EDA               	movwf	fsr2h,c
  9925  003966  0EF8               	movlw	-8
  9926  003968  006F FF8F FFDF     	movff	plusw1,indf2
  9927                           
  9928                           ;stkvar	_c @ sp[(-4)+-4]
  9929                           ;stkvar	_s @ sp[(-4)+0]
  9930  00396E  0EFC               	movlw	-4
  9931  003970  006F FF8C  F047    	movff	plusw1,btemp+10
  9932  003976  0EFD               	movlw	-3
  9933  003978  006F FF8C  F048    	movff	plusw1,btemp+11
  9934  00397E  0E02               	movlw	2
  9935  003980  2447               	addwf	btemp+10,w,c
  9936  003982  6ED9               	movwf	fsr2l,c
  9937  003984  0E00               	movlw	0
  9938  003986  2048               	addwfc	btemp+11,w,c
  9939  003988  6EDA               	movwf	fsr2h,c
  9940  00398A  0EF8               	movlw	-8
  9941  00398C  006F FF8F FFDF     	movff	plusw1,indf2
  9942                           
  9943                           ;stkvar	_c @ sp[(-4)+-4]
  9944                           ;stkvar	_n @ sp[(-4)+-6]
  9945                           ;stkvar	_s @ sp[(-4)+0]
  9946  003992  0EFC               	movlw	-4
  9947  003994  006F FF8C  F047    	movff	plusw1,btemp+10
  9948  00399A  0EFD               	movlw	-3
  9949  00399C  006F FF8C  F048    	movff	plusw1,btemp+11
  9950  0039A2  0EF6               	movlw	-10
  9951  0039A4  50E3               	movf	plusw1,w,c
  9952  0039A6  2647               	addwf	btemp+10,f,c
  9953  0039A8  0EF7               	movlw	-9
  9954  0039AA  50E3               	movf	plusw1,w,c
  9955  0039AC  2248               	addwfc	btemp+11,f,c
  9956  0039AE  0EFE               	movlw	254
  9957  0039B0  2447               	addwf	btemp+10,w,c
  9958  0039B2  6ED9               	movwf	fsr2l,c
  9959  0039B4  0EFF               	movlw	255
  9960  0039B6  2048               	addwfc	btemp+11,w,c
  9961  0039B8  6EDA               	movwf	fsr2h,c
  9962  0039BA  0EF8               	movlw	-8
  9963  0039BC  006F FF8F FFDF     	movff	plusw1,indf2
  9964                           
  9965                           ;stkvar	_c @ sp[(-4)+-4]
  9966                           ;stkvar	_n @ sp[(-4)+-6]
  9967                           ;stkvar	_s @ sp[(-4)+0]
  9968  0039C2  0EFC               	movlw	-4
  9969  0039C4  006F FF8C  F047    	movff	plusw1,btemp+10
  9970  0039CA  0EFD               	movlw	-3
  9971  0039CC  006F FF8C  F048    	movff	plusw1,btemp+11
  9972  0039D2  0EF6               	movlw	-10
  9973  0039D4  50E3               	movf	plusw1,w,c
  9974  0039D6  2647               	addwf	btemp+10,f,c
  9975  0039D8  0EF7               	movlw	-9
  9976  0039DA  50E3               	movf	plusw1,w,c
  9977  0039DC  2248               	addwfc	btemp+11,f,c
  9978  0039DE  0EFD               	movlw	253
  9979  0039E0  2447               	addwf	btemp+10,w,c
  9980  0039E2  6ED9               	movwf	fsr2l,c
  9981  0039E4  0EFF               	movlw	255
  9982  0039E6  2048               	addwfc	btemp+11,w,c
  9983  0039E8  6EDA               	movwf	fsr2h,c
  9984  0039EA  0EF8               	movlw	-8
  9985  0039EC  006F FF8F FFDF     	movff	plusw1,indf2
  9986                           
  9987                           ;stkvar	_n @ sp[(-4)+-6]
  9988  0039F2  0EF7               	movlw	-9
  9989  0039F4  50E3               	movf	plusw1,w,c
  9990  0039F6  E108               	bnz	l8653
  9991  0039F8  0EF6               	movlw	-10
  9992  0039FA  006F FF8C  F03D    	movff	plusw1,btemp
  9993  003A00  0E07               	movlw	7
  9994  003A02  5E3D               	subwf	btemp,f,c
  9995  003A04  A0D8               	btfss	status,0,c
  9996  003A06  D0C6               	goto	u5410
  9997  003A08                     l8653:
  9998                           
  9999                           ;stkvar	_c @ sp[(-4)+-4]
 10000                           ;stkvar	_s @ sp[(-4)+0]
 10001  003A08  0EFC               	movlw	-4
 10002  003A0A  006F FF8C  F047    	movff	plusw1,btemp+10
 10003  003A10  0EFD               	movlw	-3
 10004  003A12  006F FF8C  F048    	movff	plusw1,btemp+11
 10005  003A18  0E03               	movlw	3
 10006  003A1A  2447               	addwf	btemp+10,w,c
 10007  003A1C  6ED9               	movwf	fsr2l,c
 10008  003A1E  0E00               	movlw	0
 10009  003A20  2048               	addwfc	btemp+11,w,c
 10010  003A22  6EDA               	movwf	fsr2h,c
 10011  003A24  0EF8               	movlw	-8
 10012  003A26  006F FF8F FFDF     	movff	plusw1,indf2
 10013                           
 10014                           ;stkvar	_c @ sp[(-4)+-4]
 10015                           ;stkvar	_n @ sp[(-4)+-6]
 10016                           ;stkvar	_s @ sp[(-4)+0]
 10017  003A2C  0EFC               	movlw	-4
 10018  003A2E  006F FF8C  F047    	movff	plusw1,btemp+10
 10019  003A34  0EFD               	movlw	-3
 10020  003A36  006F FF8C  F048    	movff	plusw1,btemp+11
 10021  003A3C  0EF6               	movlw	-10
 10022  003A3E  50E3               	movf	plusw1,w,c
 10023  003A40  2647               	addwf	btemp+10,f,c
 10024  003A42  0EF7               	movlw	-9
 10025  003A44  50E3               	movf	plusw1,w,c
 10026  003A46  2248               	addwfc	btemp+11,f,c
 10027  003A48  0EFC               	movlw	252
 10028  003A4A  2447               	addwf	btemp+10,w,c
 10029  003A4C  6ED9               	movwf	fsr2l,c
 10030  003A4E  0EFF               	movlw	255
 10031  003A50  2048               	addwfc	btemp+11,w,c
 10032  003A52  6EDA               	movwf	fsr2h,c
 10033  003A54  0EF8               	movlw	-8
 10034  003A56  006F FF8F FFDF     	movff	plusw1,indf2
 10035                           
 10036                           ;stkvar	_n @ sp[(-4)+-6]
 10037  003A5C  0EF7               	movlw	-9
 10038  003A5E  50E3               	movf	plusw1,w,c
 10039  003A60  E108               	bnz	l8659
 10040  003A62  0EF6               	movlw	-10
 10041  003A64  006F FF8C  F03D    	movff	plusw1,btemp
 10042  003A6A  0E09               	movlw	9
 10043  003A6C  5E3D               	subwf	btemp,f,c
 10044  003A6E  A0D8               	btfss	status,0,c
 10045  003A70  D091               	goto	u5410
 10046  003A72                     l8659:
 10047                           
 10048                           ;stkvar	_s @ sp[(-4)+0]
 10049  003A72  0EFC               	movlw	-4
 10050  003A74  006F FF8C  F047    	movff	plusw1,btemp+10
 10051  003A7A  1E47               	comf	btemp+10,f,c
 10052  003A7C  0EFD               	movlw	-3
 10053  003A7E  006F FF8C  F048    	movff	plusw1,btemp+11
 10054  003A84  1E48               	comf	btemp+11,f,c
 10055  003A86  2A47               	incf	btemp+10,f,c
 10056  003A88  B4D8               	btfsc	status,2,c
 10057  003A8A  2A48               	incf	btemp+11,f,c
 10058  003A8C  0E03               	movlw	3
 10059  003A8E  1647               	andwf	btemp+10,f,c
 10060  003A90  0E00               	movlw	0
 10061  003A92  1648               	andwf	btemp+11,f,c
 10062                           
 10063                           ;stkvar	_k @ sp[(-4)+2]
 10064  003A94  0EFE               	movlw	-2
 10065  003A96  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10066  003A9C  0EFF               	movlw	-1
 10067  003A9E  0060  F123  FFE3   	movff	btemp+11,plusw1
 10068                           
 10069                           ;stkvar	_k @ sp[(-4)+2]
 10070                           ;stkvar	_s @ sp[(-4)+0]
 10071  003AA4  0EFC               	movlw	-4
 10072  003AA6  50E3               	movf	plusw1,w,c
 10073  003AA8  6E3D               	movwf	btemp,c
 10074  003AAA  0EFE               	movlw	-2
 10075  003AAC  50E3               	movf	plusw1,w,c
 10076  003AAE  263D               	addwf	btemp,f,c
 10077  003AB0  0EFC               	movlw	-4
 10078  003AB2  0060  F0F7  FFE3   	movff	btemp,plusw1
 10079  003AB8  0EFD               	movlw	-3
 10080  003ABA  50E3               	movf	plusw1,w,c
 10081  003ABC  6E3D               	movwf	btemp,c
 10082  003ABE  0EFF               	movlw	-1
 10083  003AC0  50E3               	movf	plusw1,w,c
 10084  003AC2  223D               	addwfc	btemp,f,c
 10085  003AC4  0EFD               	movlw	-3
 10086  003AC6  0060  F0F7  FFE3   	movff	btemp,plusw1
 10087                           
 10088                           ;stkvar	_k @ sp[(-4)+2]
 10089                           ;stkvar	_n @ sp[(-4)+-6]
 10090  003ACC  0EF6               	movlw	-10
 10091  003ACE  50E3               	movf	plusw1,w,c
 10092  003AD0  6E3D               	movwf	btemp,c
 10093  003AD2  0EFE               	movlw	-2
 10094  003AD4  50E3               	movf	plusw1,w,c
 10095  003AD6  5E3D               	subwf	btemp,f,c
 10096  003AD8  0EF6               	movlw	-10
 10097  003ADA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10098  003AE0  0EF7               	movlw	-9
 10099  003AE2  50E3               	movf	plusw1,w,c
 10100  003AE4  6E3D               	movwf	btemp,c
 10101  003AE6  0EFF               	movlw	-1
 10102  003AE8  50E3               	movf	plusw1,w,c
 10103  003AEA  5A3D               	subwfb	btemp,f,c
 10104  003AEC  0EF7               	movlw	-9
 10105  003AEE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10106  003AF4  0EFC               	movlw	252
 10107  003AF6  6E47               	movwf	btemp+10,c
 10108  003AF8  0EFF               	movlw	255
 10109  003AFA  6E48               	movwf	btemp+11,c
 10110                           
 10111                           ;stkvar	_n @ sp[(-4)+-6]
 10112  003AFC  0EF6               	movlw	-10
 10113  003AFE  006F FF8C  F03D    	movff	plusw1,btemp
 10114  003B04  5047               	movf	btemp+10,w,c
 10115  003B06  163D               	andwf	btemp,f,c
 10116  003B08  0EF6               	movlw	-10
 10117  003B0A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10118  003B10  0EF7               	movlw	-9
 10119  003B12  006F FF8C  F03D    	movff	plusw1,btemp
 10120  003B18  5048               	movf	btemp+11,w,c
 10121  003B1A  163D               	andwf	btemp,f,c
 10122  003B1C  0EF7               	movlw	-9
 10123  003B1E  D02E               	goto	L23
 10124  003B20                     l8667:
 10125                           
 10126                           ;stkvar	_c @ sp[(-4)+-4]
 10127                           ;stkvar	_s @ sp[(-4)+0]
 10128  003B20  0EFC               	movlw	-4
 10129  003B22  006F FF8F FFD9     	movff	plusw1,fsr2l
 10130  003B28  0EFD               	movlw	-3
 10131  003B2A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10132  003B30  0EF8               	movlw	-8
 10133  003B32  006F FF8F FFDF     	movff	plusw1,indf2
 10134                           
 10135                           ;stkvar	_n @ sp[(-4)+-6]
 10136  003B38  0EF6               	movlw	-10
 10137  003B3A  006F FF8C  F03D    	movff	plusw1,btemp
 10138  003B40  0E01               	movlw	1
 10139  003B42  5E3D               	subwf	btemp,f,c
 10140  003B44  0EF6               	movlw	-10
 10141  003B46  0060  F0F7  FFE3   	movff	btemp,plusw1
 10142  003B4C  0EF7               	movlw	-9
 10143  003B4E  006F FF8C  F03D    	movff	plusw1,btemp
 10144  003B54  0E00               	movlw	0
 10145  003B56  5A3D               	subwfb	btemp,f,c
 10146  003B58  0EF7               	movlw	-9
 10147  003B5A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10148                           
 10149                           ;stkvar	_s @ sp[(-4)+0]
 10150  003B60  0EFC               	movlw	-4
 10151  003B62  50E3               	movf	plusw1,w,c
 10152  003B64  0F01               	addlw	1
 10153  003B66  6E3D               	movwf	btemp,c
 10154  003B68  0EFC               	movlw	-4
 10155  003B6A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10156  003B70  6A3D               	clrf	btemp,c
 10157  003B72  0EFD               	movlw	-3
 10158  003B74  50E3               	movf	plusw1,w,c
 10159  003B76  203D               	addwfc	btemp,w,c
 10160  003B78  6E3D               	movwf	btemp,c
 10161  003B7A  0EFD               	movlw	-3
 10162  003B7C                     L23:
 10163  003B7C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10164                           
 10165                           ;stkvar	_n @ sp[(-4)+-6]
 10166  003B82  0EF6               	movlw	-10
 10167  003B84  006F FF8C  F03D    	movff	plusw1,btemp
 10168  003B8A  0EF7               	movlw	-9
 10169  003B8C  50E3               	movf	plusw1,w,c
 10170  003B8E  103D               	iorwf	btemp,w,c
 10171  003B90  A4D8               	btfss	status,2,c
 10172  003B92  D7C6               	goto	l8667
 10173  003B94                     u5410:
 10174                           
 10175                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10176  003B94  0EF6               	movlw	246
 10177  003B96  26E1               	addwf	fsr1l,f,c
 10178  003B98  0EFF               	movlw	255
 10179  003B9A  22E2               	addwfc	fsr1h,f,c
 10180  003B9C  0012               	return		;funcret
 10181  003B9E                     __end_of_memset:
 10182                           	opt callstack 0
 10183                           
 10184 ;; *************** function _printf *****************
 10185 ;; Defined at:
 10186 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  fmt             1  [STACK] PTR const unsigned char 
 10189 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;  ap              2  [STACK] PTR void [1]
 10192 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10193 ;;  ret             2    0        int 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  2  [STACK] int 
 10196 ;; Registers used:
 10197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10198 ;; Tracked objects:
 10199 ;;		On entry : 3F/3B
 10200 ;;		On exit  : 3F/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;Total ram usage:        0 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:   11
 10210 ;; This function calls:
 10211 ;;		_vfprintf
 10212 ;; This function is called by:
 10213 ;;		_eaDogM_WriteString
 10214 ;;		_send_lcd_cmd_dma
 10215 ;; This function uses a reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text42
 10219  005DDA                     __ptext42:
 10220                           	opt callstack 0
 10221  005DDA                     _printf:
 10222                           	opt callstack 0
 10223                           
 10224                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10225  005DDA  52E6               	movf	postinc1,f,c
 10226  005DDC  52E6               	movf	postinc1,f,c
 10227                           
 10228                           ;stkvar	?_printf @ sp[(-2)+-3]
 10229                           
 10230                           ;incstack = 0
 10231  005DDE  0EFB               	movlw	251
 10232  005DE0  24E1               	addwf	fsr1l,w,c
 10233  005DE2  6E47               	movwf	btemp+10,c
 10234  005DE4  0EFF               	movlw	255
 10235  005DE6  20E2               	addwfc	fsr1h,w,c
 10236  005DE8  6E48               	movwf	btemp+11,c
 10237  005DEA  0E01               	movlw	1
 10238  005DEC  2647               	addwf	btemp+10,f,c
 10239  005DEE  0E00               	movlw	0
 10240  005DF0  2248               	addwfc	btemp+11,f,c
 10241                           
 10242                           ;stkvar	_ap @ sp[(-2)+0]
 10243  005DF2  0EFF               	movlw	-1
 10244  005DF4  0060  F123  FFE3   	movff	btemp+11,plusw1
 10245  005DFA  0EFE               	movlw	-2
 10246  005DFC  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10247                           
 10248                           ;stkvar	_ap @ sp[(-2)+0]
 10249  005E02  0EFE               	movlw	254
 10250  005E04  24E1               	addwf	fsr1l,w,c
 10251  005E06  6E3D               	movwf	btemp,c
 10252  005E08  0EFF               	movlw	255
 10253  005E0A  20E2               	addwfc	fsr1h,w,c
 10254  005E0C  6E3E               	movwf	btemp+1,c
 10255  005E0E  0060  F0F7  FFE6   	movff	btemp,postinc1
 10256  005E14  0060  F0FB  FFE6   	movff	btemp+1,postinc1
 10257                           
 10258                           ;stkvar	_fmt @ sp[(-4)+-2]
 10259  005E1A  0EFA               	movlw	-6
 10260  005E1C  50E3               	movf	plusw1,w,c
 10261  005E1E  6EE6               	movwf	postinc1,c
 10262  005E20  0E00               	movlw	0
 10263  005E22  6EE6               	movwf	postinc1,c
 10264  005E24  0E00               	movlw	0
 10265  005E26  6EE6               	movwf	postinc1,c
 10266  005E28  ECFD  F02C         	call	_vfprintf	;wreg free
 10267                           
 10268                           ; BSR set to: 0
 10269                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
 10270  005E2C  52E5               	movf	postdec1,f,c
 10271  005E2E  52E5               	movf	postdec1,f,c
 10272  005E30  52E5               	movf	postdec1,f,c
 10273  005E32  50E7               	movf	indf1,w,c
 10274  005E34  5EE1               	subwf	fsr1l,f,c
 10275  005E36  0E00               	movlw	0
 10276  005E38  5AE2               	subwfb	fsr1h,f,c
 10277  005E3A  0012               	return		;funcret
 10278  005E3C                     __end_of_printf:
 10279                           	opt callstack 0
 10280                           
 10281 ;; *************** function _vfprintf *****************
 10282 ;; Defined at:
 10283 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10286 ;;		 -> f(5), NULL(0), 
 10287 ;;  fmt             1  [STACK] PTR const unsigned char 
 10288 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 10289 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 10290 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 10291 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 10292 ;;		 -> STR_1(17), 
 10293 ;;  ap              2  [STACK] PTR PTR void 
 10294 ;;		 -> ap(2), ap(2), 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;  cfmt            1  [STACK] PTR unsigned char 
 10297 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 10298 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 10299 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 10300 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 10301 ;;		 -> STR_1(17), 
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  2  [STACK] int 
 10304 ;; Registers used:
 10305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 3F/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10315 ;;Total ram usage:        0 bytes
 10316 ;; Hardware stack levels used:    1
 10317 ;; Hardware stack levels required when called:   10
 10318 ;; This function calls:
 10319 ;;		_vfpfcnvrt
 10320 ;; This function is called by:
 10321 ;;		_sprintf
 10322 ;;		_printf
 10323 ;; This function uses a reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text43
 10327  0059FA                     __ptext43:
 10328                           	opt callstack 0
 10329  0059FA                     _vfprintf:
 10330                           	opt callstack 0
 10331                           
 10332                           ; BSR set to: 0
 10333                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10334  0059FA  52E6               	movf	postinc1,f,c
 10335                           
 10336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10337                           ;stkvar	_fmt @ sp[(-1)+-3]
 10338                           
 10339                           ;incstack = 0
 10340  0059FC  0EFC               	movlw	-4
 10341  0059FE  006F FF8C  F048    	movff	plusw1,btemp+11
 10342                           
 10343                           ;stkvar	_cfmt @ sp[(-1)+0]
 10344  005A04  0EFF               	movlw	-1
 10345  005A06  0060  F123  FFE3   	movff	btemp+11,plusw1
 10346                           
 10347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10348  005A0C  0100               	movlb	0	; () banked
 10349  005A0E  6BEF               	clrf	_nout& (0+255),b
 10350  005A10  6BF0               	clrf	(_nout+1)& (0+255),b
 10351                           
 10352                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10353  005A12  D021               	goto	l8681
 10354  005A14                     l8679:
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10358                           ;stkvar	_ap @ sp[(-1)+-5]
 10359  005A14  0EFA               	movlw	-6
 10360  005A16  006F FF8F FFE6     	movff	plusw1,postinc1
 10361  005A1C  006F FF8F FFE6     	movff	plusw1,postinc1
 10362                           
 10363                           ;stkvar	_cfmt @ sp[(-3)+0]
 10364  005A22  0EFD               	movlw	253
 10365  005A24  24E1               	addwf	fsr1l,w,c
 10366  005A26  6E3D               	movwf	btemp,c
 10367  005A28  0EFF               	movlw	255
 10368  005A2A  20E2               	addwfc	fsr1h,w,c
 10369  005A2C  6E3E               	movwf	btemp+1,c
 10370  005A2E  0060  F0F7  FFE6   	movff	btemp,postinc1
 10371  005A34  0060  F0FB  FFE6   	movff	btemp+1,postinc1
 10372                           
 10373                           ;stkvar	_fp @ sp[(-5)+-2]
 10374  005A3A  0EF9               	movlw	-7
 10375  005A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10376  005A42  006F FF8F FFE6     	movff	plusw1,postinc1
 10377  005A48  ECF4  F015         	call	_vfpfcnvrt	;wreg free
 10378  005A4C  503D               	movf	btemp,w,c
 10379  005A4E  0100               	movlb	0	; () banked
 10380  005A50  27EF               	addwf	_nout& (0+255),f,b
 10381  005A52  503E               	movf	btemp+1,w,c
 10382  005A54  23F0               	addwfc	(_nout+1)& (0+255),f,b
 10383  005A56                     l8681:
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10387                           ;stkvar	_cfmt @ sp[(-1)+0]
 10388  005A56  50E1               	movf	fsr1l,w,c
 10389  005A58  0FFF               	addlw	-1
 10390  005A5A  6ED9               	movwf	fsr2l,c
 10391  005A5C  50E2               	movf	fsr1h,w,c
 10392  005A5E  6EDA               	movwf	fsr2h,c
 10393  005A60  0EFF               	movlw	255
 10394  005A62  22DA               	addwfc	fsr2h,f,c
 10395  005A64  006F FF7F FFF6     	movff	indf2,tblptrl
 10396  005A6A                     	if	1	;There is more than 1 active tblptr byte
 10397  005A6A  0E20               	movlw	high __smallconst
 10398  005A6C  6EF7               	movwf	tblptrh,c
 10399  005A6E                     	endif
 10400  005A6E                     	if	0	;tblptru may be non-zero
 10401  005A6E                     	endif
 10402  005A6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10403  005A6E  0E00               	movlw	low (__smallconst shr (0+16))
 10404  005A70  6EF8               	movwf	tblptru,c
 10405  005A72                     	endif
 10406  005A72  0008               	tblrd		*
 10407  005A74  50F5               	movf	tablat,w,c
 10408  005A76  0900               	iorlw	0
 10409  005A78  A4D8               	btfss	status,2,c
 10410  005A7A  D7CC               	goto	l8679
 10411                           
 10412                           ; BSR set to: 0
 10413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10414  005A7C  0060  F3BC  F03D   	movff	_nout,btemp
 10415  005A82  0060  F3C0  F03E   	movff	_nout+1,btemp+1
 10416                           
 10417                           ; BSR set to: 0
 10418                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 10419  005A88  0EFA               	movlw	250
 10420  005A8A  26E1               	addwf	fsr1l,f,c
 10421  005A8C  0EFF               	movlw	255
 10422  005A8E  22E2               	addwfc	fsr1h,f,c
 10423  005A90  0012               	return		;funcret
 10424  005A92                     __end_of_vfprintf:
 10425                           	opt callstack 0
 10426                           
 10427 ;; *************** function _vfpfcnvrt *****************
 10428 ;; Defined at:
 10429 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10432 ;;		 -> f(5), NULL(0), 
 10433 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10434 ;;		 -> cfmt(1), 
 10435 ;;  ap              2  [STACK] PTR PTR void 
 10436 ;;		 -> ap(2), ap(2), 
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;  ll              8  [STACK] long long 
 10439 ;;  llu             8    0        unsigned long long 
 10440 ;;  f               4    0        unsigned long long 
 10441 ;;  vp              3    0        PTR void 
 10442 ;;  ct              3    0        unsigned char [3]
 10443 ;;  cp              2  [STACK] PTR unsigned char 
 10444 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
 10445 ;;  i               2    0        int 
 10446 ;;  done            2    0        int 
 10447 ;;  c               1  [STACK] unsigned char 
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  2  [STACK] int 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10461 ;;Total ram usage:        0 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:    9
 10464 ;; This function calls:
 10465 ;;		_ctoa
 10466 ;;		_dtoa
 10467 ;;		_fputc
 10468 ;;		_stoa
 10469 ;;		_strncmp
 10470 ;; This function is called by:
 10471 ;;		_vfprintf
 10472 ;; This function uses a reentrant model
 10473 ;;
 10474                           
 10475                           	psect	text44
 10476  002BE8                     __ptext44:
 10477                           	opt callstack 0
 10478  002BE8                     _vfpfcnvrt:
 10479                           	opt callstack 0
 10480                           
 10481                           ; BSR set to: 0
 10482                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10483  002BE8  0E0B               	movlw	11
 10484  002BEA  26E1               	addwf	fsr1l,f,c
 10485  002BEC  0E00               	movlw	0
 10486  002BEE  22E2               	addwfc	fsr1h,f,c
 10487                           
 10488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10489                           ;stkvar	_fmt @ sp[(-11)+-4]
 10490                           
 10491                           ;incstack = 0
 10492  002BF0  0EF1               	movlw	-15
 10493  002BF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10494  002BF8  0EF2               	movlw	-14
 10495  002BFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10496  002C00  006F FF7F FFF6     	movff	indf2,tblptrl
 10497  002C06                     	if	1	;There is more than 1 active tblptr byte
 10498  002C06  0E20               	movlw	high __smallconst
 10499  002C08  6EF7               	movwf	tblptrh,c
 10500  002C0A                     	endif
 10501  002C0A                     	if	0	;tblptru may be non-zero
 10502  002C0A                     	endif
 10503  002C0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10504  002C0A  0E00               	movlw	low (__smallconst shr (0+16))
 10505  002C0C  6EF8               	movwf	tblptru,c
 10506  002C0E                     	endif
 10507  002C0E  0008               	tblrd		*
 10508  002C10  50F5               	movf	tablat,w,c
 10509  002C12  0A25               	xorlw	37
 10510  002C14  A4D8               	btfss	status,2,c
 10511  002C16  D213               	goto	l8625
 10512                           
 10513                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10514                           ;stkvar	_fmt @ sp[(-11)+-4]
 10515  002C18  0EF1               	movlw	-15
 10516  002C1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10517  002C20  0EF2               	movlw	-14
 10518  002C22  006F FF8F FFDA     	movff	plusw1,fsr2h
 10519  002C28  2ADF               	incf	indf2,f,c
 10520                           
 10521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10522  002C2A  6A1D               	clrf	_width,c
 10523  002C2C  6A1E               	clrf	_width+1,c
 10524  002C2E  6A21               	clrf	_flags,c
 10525  002C30  6A22               	clrf	_flags+1,c
 10526                           
 10527                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10528  002C32  681F               	setf	_prec,c
 10529  002C34  6820               	setf	_prec+1,c
 10530                           
 10531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10532                           ;stkvar	_fmt @ sp[(-11)+-4]
 10533  002C36  0EF1               	movlw	-15
 10534  002C38  006F FF8F FFD9     	movff	plusw1,fsr2l
 10535  002C3E  0EF2               	movlw	-14
 10536  002C40  006F FF8F FFDA     	movff	plusw1,fsr2h
 10537  002C46  006F FF7F FFF6     	movff	indf2,tblptrl
 10538  002C4C                     	if	1	;There is more than 1 active tblptr byte
 10539  002C4C  0E20               	movlw	high __smallconst
 10540  002C4E  6EF7               	movwf	tblptrh,c
 10541  002C50                     	endif
 10542  002C50                     	if	0	;tblptru may be non-zero
 10543  002C50                     	endif
 10544  002C50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10545  002C50  0E00               	movlw	low (__smallconst shr (0+16))
 10546  002C52  6EF8               	movwf	tblptru,c
 10547  002C54                     	endif
 10548  002C54  0008               	tblrd		*
 10549  002C56  50F5               	movf	tablat,w,c
 10550  002C58  0A63               	xorlw	99
 10551  002C5A  A4D8               	btfss	status,2,c
 10552  002C5C  D034               	goto	l8575
 10553                           
 10554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10555                           ;stkvar	_fmt @ sp[(-11)+-4]
 10556  002C5E  0EF1               	movlw	-15
 10557  002C60  006F FF8F FFD9     	movff	plusw1,fsr2l
 10558  002C66  0EF2               	movlw	-14
 10559  002C68  006F FF8F FFDA     	movff	plusw1,fsr2h
 10560  002C6E  2ADF               	incf	indf2,f,c
 10561                           
 10562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10563                           ;stkvar	_ap @ sp[(-11)+-6]
 10564  002C70  0EEF               	movlw	-17
 10565  002C72  006F FF8F FFD9     	movff	plusw1,fsr2l
 10566  002C78  0EF0               	movlw	-16
 10567  002C7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10568  002C80  0E02               	movlw	2
 10569  002C82  5EDE               	subwf	postinc2,f,c
 10570  002C84  0E00               	movlw	0
 10571  002C86  5ADD               	subwfb	postdec2,f,c
 10572  002C88  006F FF78  F047    	movff	postinc2,btemp+10
 10573  002C8E  006F FF74  F048    	movff	postdec2,btemp+11
 10574  002C94  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10575  002C9A  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10576  002CA0  50DF               	movf	indf2,w,c
 10577  002CA2  6E48               	movwf	btemp+11,c
 10578                           
 10579                           ;stkvar	_c @ sp[(-11)+10]
 10580  002CA4  0EFF               	movlw	-1
 10581  002CA6  0060  F123  FFE3   	movff	btemp+11,plusw1
 10582                           
 10583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10584                           ;stkvar	_c @ sp[(-11)+10]
 10585  002CAC  0EFF               	movlw	-1
 10586  002CAE  50E3               	movf	plusw1,w,c
 10587  002CB0  6EE6               	movwf	postinc1,c
 10588                           
 10589                           ;stkvar	_fp @ sp[(-12)+-2]
 10590  002CB2  0EF2               	movlw	-14
 10591  002CB4  006F FF8F FFE6     	movff	plusw1,postinc1
 10592  002CBA  006F FF8F FFE6     	movff	plusw1,postinc1
 10593  002CC0  ECDE  F02D         	call	_ctoa	;wreg free
 10594  002CC4  D1E3               	goto	l1949
 10595  002CC6                     l8575:
 10596                           
 10597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10598                           ;stkvar	_fmt @ sp[(-11)+-4]
 10599  002CC6  0EF1               	movlw	-15
 10600  002CC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10601  002CCE  0EF2               	movlw	-14
 10602  002CD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10603  002CD6  006F FF7F FFF6     	movff	indf2,tblptrl
 10604  002CDC                     	if	1	;There is more than 1 active tblptr byte
 10605  002CDC  0E20               	movlw	high __smallconst
 10606  002CDE  6EF7               	movwf	tblptrh,c
 10607  002CE0                     	endif
 10608  002CE0                     	if	0	;tblptru may be non-zero
 10609  002CE0                     	endif
 10610  002CE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10611  002CE0  0E00               	movlw	low (__smallconst shr (0+16))
 10612  002CE2  6EF8               	movwf	tblptru,c
 10613  002CE4                     	endif
 10614  002CE4  0008               	tblrd		*
 10615  002CE6  50F5               	movf	tablat,w,c
 10616  002CE8  0A64               	xorlw	100
 10617  002CEA  B4D8               	btfsc	status,2,c
 10618  002CEC  D014               	goto	u5320
 10619                           
 10620                           ;stkvar	_fmt @ sp[(-11)+-4]
 10621  002CEE  0EF1               	movlw	-15
 10622  002CF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10623  002CF6  0EF2               	movlw	-14
 10624  002CF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10625  002CFE  006F FF7F FFF6     	movff	indf2,tblptrl
 10626  002D04                     	if	1	;There is more than 1 active tblptr byte
 10627  002D04  0E20               	movlw	high __smallconst
 10628  002D06  6EF7               	movwf	tblptrh,c
 10629  002D08                     	endif
 10630  002D08                     	if	0	;tblptru may be non-zero
 10631  002D08                     	endif
 10632  002D08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10633  002D08  0E00               	movlw	low (__smallconst shr (0+16))
 10634  002D0A  6EF8               	movwf	tblptru,c
 10635  002D0C                     	endif
 10636  002D0C  0008               	tblrd		*
 10637  002D0E  50F5               	movf	tablat,w,c
 10638  002D10  0A69               	xorlw	105
 10639  002D12  A4D8               	btfss	status,2,c
 10640  002D14  D073               	goto	l8587
 10641  002D16                     u5320:
 10642                           
 10643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10644                           ;stkvar	_fmt @ sp[(-11)+-4]
 10645  002D16  0EF1               	movlw	-15
 10646  002D18  006F FF8F FFD9     	movff	plusw1,fsr2l
 10647  002D1E  0EF2               	movlw	-14
 10648  002D20  006F FF8F FFDA     	movff	plusw1,fsr2h
 10649  002D26  2ADF               	incf	indf2,f,c
 10650                           
 10651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10652                           ;stkvar	_ap @ sp[(-11)+-6]
 10653  002D28  0EEF               	movlw	-17
 10654  002D2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10655  002D30  0EF0               	movlw	-16
 10656  002D32  006F FF8F FFDA     	movff	plusw1,fsr2h
 10657  002D38  0E02               	movlw	2
 10658  002D3A  5EDE               	subwf	postinc2,f,c
 10659  002D3C  0E00               	movlw	0
 10660  002D3E  5ADD               	subwfb	postdec2,f,c
 10661  002D40  006F FF78  F047    	movff	postinc2,btemp+10
 10662  002D46  006F FF74  F048    	movff	postdec2,btemp+11
 10663  002D4C  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10664  002D52  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10665  002D58  006F FF78  F047    	movff	postinc2,btemp+10
 10666  002D5E  006F FF74  F048    	movff	postdec2,btemp+11
 10667                           
 10668                           ;stkvar	_ll @ sp[(-11)+0]
 10669  002D64  0EF5               	movlw	-11
 10670  002D66  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10671  002D6C  0EF6               	movlw	-10
 10672  002D6E  0060  F123  FFE3   	movff	btemp+11,plusw1
 10673  002D74  6A3D               	clrf	btemp,c
 10674  002D76  BEE3               	btfsc	plusw1,7,c
 10675  002D78  683D               	setf	btemp,c
 10676  002D7A  0EF7               	movlw	-9
 10677  002D7C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10678  002D82  0EF8               	movlw	-8
 10679  002D84  0060  F0F7  FFE3   	movff	btemp,plusw1
 10680  002D8A  0EF9               	movlw	-7
 10681  002D8C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10682  002D92  0EFA               	movlw	-6
 10683  002D94  0060  F0F7  FFE3   	movff	btemp,plusw1
 10684  002D9A  0EFB               	movlw	-5
 10685  002D9C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10686  002DA2  0EFC               	movlw	-4
 10687  002DA4  0060  F0F7  FFE3   	movff	btemp,plusw1
 10688  002DAA                     l8583:
 10689                           
 10690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10691                           ;stkvar	_ll @ sp[(-11)+0]
 10692  002DAA  50E1               	movf	fsr1l,w,c
 10693  002DAC  0FF5               	addlw	-11
 10694  002DAE  6ED9               	movwf	fsr2l,c
 10695  002DB0  50E2               	movf	fsr1h,w,c
 10696  002DB2  6EDA               	movwf	fsr2h,c
 10697  002DB4  0EFF               	movlw	255
 10698  002DB6  22DA               	addwfc	fsr2h,f,c
 10699  002DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 10700  002DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 10701  002DC4  006F FF7B FFE6     	movff	postinc2,postinc1
 10702  002DCA  006F FF7B FFE6     	movff	postinc2,postinc1
 10703  002DD0  006F FF7B FFE6     	movff	postinc2,postinc1
 10704  002DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 10705  002DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 10706  002DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 10707                           
 10708                           ;stkvar	_fp @ sp[(-19)+-2]
 10709  002DE8  0EEB               	movlw	-21
 10710  002DEA  006F FF8F FFE6     	movff	plusw1,postinc1
 10711  002DF0  006F FF8F FFE6     	movff	plusw1,postinc1
 10712  002DF6  EC4B  F018         	call	_dtoa	;wreg free
 10713  002DFA  D148               	goto	l1949
 10714  002DFC                     l8587:
 10715                           
 10716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10717  002DFC  0E02               	movlw	2
 10718  002DFE  6EE6               	movwf	postinc1,c
 10719  002E00  0E00               	movlw	0
 10720  002E02  6EE6               	movwf	postinc1,c
 10721  002E04  0EBB               	movlw	STR_19& (0+255)
 10722  002E06  6EE6               	movwf	postinc1,c
 10723                           
 10724                           ;stkvar	_fmt @ sp[(-14)+-4]
 10725  002E08  0EEE               	movlw	-18
 10726  002E0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10727  002E10  0EEF               	movlw	-17
 10728  002E12  006F FF8F FFDA     	movff	plusw1,fsr2h
 10729  002E18  50DF               	movf	indf2,w,c
 10730  002E1A  6EE6               	movwf	postinc1,c
 10731  002E1C  EC64  F025         	call	_strncmp	;wreg free
 10732  002E20  503D               	movf	btemp,w,c
 10733  002E22  103E               	iorwf	btemp+1,w,c
 10734  002E24  B4D8               	btfsc	status,2,c
 10735  002E26  D016               	goto	u5340
 10736  002E28  0E02               	movlw	2
 10737  002E2A  6EE6               	movwf	postinc1,c
 10738  002E2C  0E00               	movlw	0
 10739  002E2E  6EE6               	movwf	postinc1,c
 10740  002E30  0EBE               	movlw	STR_23& (0+255)
 10741  002E32  6EE6               	movwf	postinc1,c
 10742                           
 10743                           ;stkvar	_fmt @ sp[(-14)+-4]
 10744  002E34  0EEE               	movlw	-18
 10745  002E36  006F FF8F FFD9     	movff	plusw1,fsr2l
 10746  002E3C  0EEF               	movlw	-17
 10747  002E3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10748  002E44  50DF               	movf	indf2,w,c
 10749  002E46  6EE6               	movwf	postinc1,c
 10750  002E48  EC64  F025         	call	_strncmp	;wreg free
 10751  002E4C  503D               	movf	btemp,w,c
 10752  002E4E  103E               	iorwf	btemp+1,w,c
 10753  002E50  A4D8               	btfss	status,2,c
 10754  002E52  D067               	goto	l8599
 10755  002E54                     u5340:
 10756                           
 10757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10758                           ;stkvar	_fmt @ sp[(-11)+-4]
 10759  002E54  0EF1               	movlw	-15
 10760  002E56  006F FF8F FFD9     	movff	plusw1,fsr2l
 10761  002E5C  0EF2               	movlw	-14
 10762  002E5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10763  002E64  0E02               	movlw	2
 10764  002E66  26DF               	addwf	indf2,f,c
 10765                           
 10766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10767                           ;stkvar	_ap @ sp[(-11)+-6]
 10768  002E68  0EEF               	movlw	-17
 10769  002E6A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10770  002E70  0EF0               	movlw	-16
 10771  002E72  006F FF8F FFDA     	movff	plusw1,fsr2h
 10772  002E78  0E04               	movlw	4
 10773  002E7A  5EDE               	subwf	postinc2,f,c
 10774  002E7C  0E00               	movlw	0
 10775  002E7E  5ADD               	subwfb	postdec2,f,c
 10776  002E80  006F FF78  F047    	movff	postinc2,btemp+10
 10777  002E86  006F FF74  F048    	movff	postdec2,btemp+11
 10778  002E8C  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10779  002E92  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10780  002E98  006F FF78  F045    	movff	postinc2,btemp+8
 10781  002E9E  006F FF78  F046    	movff	postinc2,btemp+9
 10782  002EA4  006F FF78  F047    	movff	postinc2,btemp+10
 10783  002EAA  006F FF78  F048    	movff	postinc2,btemp+11
 10784  002EB0  0060  F114  F04D   	movff	btemp+8,btemp+16
 10785  002EB6  0060  F118  F04E   	movff	btemp+9,btemp+17
 10786  002EBC  0060  F11C  F04F   	movff	btemp+10,btemp+18
 10787  002EC2  0060  F120  F050   	movff	btemp+11,btemp+19
 10788  002EC8  6A51               	clrf	btemp+20,c
 10789  002ECA  BE50               	btfsc	btemp+19,7,c
 10790  002ECC  6851               	setf	btemp+20,c
 10791  002ECE  0060  F144  F052   	movff	btemp+20,btemp+21
 10792  002ED4  0060  F144  F053   	movff	btemp+20,btemp+22
 10793  002EDA  0060  F144  F054   	movff	btemp+20,btemp+23
 10794                           
 10795                           ;stkvar	_ll @ sp[(-11)+0]
 10796  002EE0  0EF5               	movlw	-11
 10797  002EE2  0060  F137  FFE3   	movff	btemp+16,plusw1
 10798  002EE8  0EF6               	movlw	-10
 10799  002EEA  0060  F13B  FFE3   	movff	btemp+17,plusw1
 10800  002EF0  0EF7               	movlw	-9
 10801  002EF2  0060  F13F  FFE3   	movff	btemp+18,plusw1
 10802  002EF8  0EF8               	movlw	-8
 10803  002EFA  0060  F143  FFE3   	movff	btemp+19,plusw1
 10804  002F00  0EF9               	movlw	-7
 10805  002F02  0060  F147  FFE3   	movff	btemp+20,plusw1
 10806  002F08  0EFA               	movlw	-6
 10807  002F0A  0060  F14B  FFE3   	movff	btemp+21,plusw1
 10808  002F10  0EFB               	movlw	-5
 10809  002F12  0060  F14F  FFE3   	movff	btemp+22,plusw1
 10810  002F18  0EFC               	movlw	-4
 10811  002F1A  0060  F153  FFE3   	movff	btemp+23,plusw1
 10812  002F20  D744               	goto	l8583
 10813  002F22                     l8599:
 10814                           
 10815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10816                           ;stkvar	_fmt @ sp[(-11)+-4]
 10817  002F22  0EF1               	movlw	-15
 10818  002F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 10819  002F2A  0EF2               	movlw	-14
 10820  002F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10821  002F32  006F FF7F FFF6     	movff	indf2,tblptrl
 10822  002F38                     	if	1	;There is more than 1 active tblptr byte
 10823  002F38  0E20               	movlw	high __smallconst
 10824  002F3A  6EF7               	movwf	tblptrh,c
 10825  002F3C                     	endif
 10826  002F3C                     	if	0	;tblptru may be non-zero
 10827  002F3C                     	endif
 10828  002F3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10829  002F3C  0E00               	movlw	low (__smallconst shr (0+16))
 10830  002F3E  6EF8               	movwf	tblptru,c
 10831  002F40                     	endif
 10832  002F40  0008               	tblrd		*
 10833  002F42  50F5               	movf	tablat,w,c
 10834  002F44  0A73               	xorlw	115
 10835  002F46  A4D8               	btfss	status,2,c
 10836  002F48  D040               	goto	l8609
 10837                           
 10838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10839                           ;stkvar	_fmt @ sp[(-11)+-4]
 10840  002F4A  0EF1               	movlw	-15
 10841  002F4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10842  002F52  0EF2               	movlw	-14
 10843  002F54  006F FF8F FFDA     	movff	plusw1,fsr2h
 10844  002F5A  2ADF               	incf	indf2,f,c
 10845                           
 10846                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10847                           ;stkvar	_ap @ sp[(-11)+-6]
 10848  002F5C  0EEF               	movlw	-17
 10849  002F5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10850  002F64  0EF0               	movlw	-16
 10851  002F66  006F FF8F FFDA     	movff	plusw1,fsr2h
 10852  002F6C  0E02               	movlw	2
 10853  002F6E  5EDE               	subwf	postinc2,f,c
 10854  002F70  0E00               	movlw	0
 10855  002F72  5ADD               	subwfb	postdec2,f,c
 10856  002F74  006F FF78  F047    	movff	postinc2,btemp+10
 10857  002F7A  006F FF74  F048    	movff	postdec2,btemp+11
 10858  002F80  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10859  002F86  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10860  002F8C  006F FF78  F047    	movff	postinc2,btemp+10
 10861  002F92  006F FF74  F048    	movff	postdec2,btemp+11
 10862                           
 10863                           ;stkvar	_cp @ sp[(-11)+8]
 10864  002F98  0EFE               	movlw	-2
 10865  002F9A  0060  F123  FFE3   	movff	btemp+11,plusw1
 10866  002FA0  0EFD               	movlw	-3
 10867  002FA2  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10868                           
 10869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10870                           ;stkvar	_cp @ sp[(-11)+8]
 10871  002FA8  0EFD               	movlw	-3
 10872  002FAA  006F FF8F FFE6     	movff	plusw1,postinc1
 10873  002FB0  006F FF8F FFE6     	movff	plusw1,postinc1
 10874                           
 10875                           ;stkvar	_fp @ sp[(-13)+-2]
 10876  002FB6  0EF1               	movlw	-15
 10877  002FB8  006F FF8F FFE6     	movff	plusw1,postinc1
 10878  002FBE  006F FF8F FFE6     	movff	plusw1,postinc1
 10879  002FC4  EC2F  F01F         	call	_stoa	;wreg free
 10880  002FC8  D061               	goto	l1949
 10881  002FCA                     l8609:
 10882                           
 10883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10884                           ;stkvar	_fmt @ sp[(-11)+-4]
 10885  002FCA  0EF1               	movlw	-15
 10886  002FCC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10887  002FD2  0EF2               	movlw	-14
 10888  002FD4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10889  002FDA  006F FF7F FFF6     	movff	indf2,tblptrl
 10890  002FE0                     	if	1	;There is more than 1 active tblptr byte
 10891  002FE0  0E20               	movlw	high __smallconst
 10892  002FE2  6EF7               	movwf	tblptrh,c
 10893  002FE4                     	endif
 10894  002FE4                     	if	0	;tblptru may be non-zero
 10895  002FE4                     	endif
 10896  002FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10897  002FE4  0E00               	movlw	low (__smallconst shr (0+16))
 10898  002FE6  6EF8               	movwf	tblptru,c
 10899  002FE8                     	endif
 10900  002FE8  0008               	tblrd		*
 10901  002FEA  50F5               	movf	tablat,w,c
 10902  002FEC  0A25               	xorlw	37
 10903  002FEE  A4D8               	btfss	status,2,c
 10904  002FF0  D018               	goto	l8619
 10905                           
 10906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10907                           ;stkvar	_fmt @ sp[(-11)+-4]
 10908  002FF2  0EF1               	movlw	-15
 10909  002FF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10910  002FFA  0EF2               	movlw	-14
 10911  002FFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10912  003002  2ADF               	incf	indf2,f,c
 10913                           
 10914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10915                           ;stkvar	_fp @ sp[(-11)+-2]
 10916  003004  0EF3               	movlw	-13
 10917  003006  006F FF8F FFE6     	movff	plusw1,postinc1
 10918  00300C  006F FF8F FFE6     	movff	plusw1,postinc1
 10919  003012  0E25               	movlw	37
 10920  003014  6EE6               	movwf	postinc1,c
 10921  003016  0E00               	movlw	0
 10922  003018  6EE6               	movwf	postinc1,c
 10923  00301A  EC80  F028         	call	_fputc	;wreg free
 10924  00301E                     l8615:
 10925                           
 10926                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10927  00301E  0E01               	movlw	1
 10928  003020  D00A               	goto	L24
 10929  003022                     l8619:
 10930                           
 10931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10932                           ;stkvar	_fmt @ sp[(-11)+-4]
 10933  003022  0EF1               	movlw	-15
 10934  003024  006F FF8F FFD9     	movff	plusw1,fsr2l
 10935  00302A  0EF2               	movlw	-14
 10936  00302C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10937  003032  2ADF               	incf	indf2,f,c
 10938                           
 10939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10940  003034  0E00               	movlw	0
 10941  003036                     L24:
 10942  003036  6E3D               	movwf	btemp,c
 10943  003038  0E00               	movlw	0
 10944  00303A  6E3E               	movwf	btemp+1,c
 10945  00303C  D027               	goto	l1949
 10946  00303E                     l8625:
 10947                           
 10948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10949                           ;stkvar	_fp @ sp[(-11)+-2]
 10950  00303E  0EF3               	movlw	-13
 10951  003040  006F FF8F FFE6     	movff	plusw1,postinc1
 10952  003046  006F FF8F FFE6     	movff	plusw1,postinc1
 10953                           
 10954                           ;stkvar	_fmt @ sp[(-13)+-4]
 10955  00304C  0EEF               	movlw	-17
 10956  00304E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10957  003054  0EF0               	movlw	-16
 10958  003056  006F FF8F FFDA     	movff	plusw1,fsr2h
 10959  00305C  006F FF7F FFF6     	movff	indf2,tblptrl
 10960  003062                     	if	1	;There is more than 1 active tblptr byte
 10961  003062  0E20               	movlw	high __smallconst
 10962  003064  6EF7               	movwf	tblptrh,c
 10963  003066                     	endif
 10964  003066                     	if	0	;tblptru may be non-zero
 10965  003066                     	endif
 10966  003066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10967  003066  0E00               	movlw	low (__smallconst shr (0+16))
 10968  003068  6EF8               	movwf	tblptru,c
 10969  00306A                     	endif
 10970  00306A  0008               	tblrd		*
 10971  00306C  50F5               	movf	tablat,w,c
 10972  00306E  6EE6               	movwf	postinc1,c
 10973  003070  0E00               	movlw	0
 10974  003072  6EE6               	movwf	postinc1,c
 10975  003074  EC80  F028         	call	_fputc	;wreg free
 10976                           
 10977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10978                           ;stkvar	_fmt @ sp[(-11)+-4]
 10979  003078  0EF1               	movlw	-15
 10980  00307A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10981  003080  0EF2               	movlw	-14
 10982  003082  006F FF8F FFDA     	movff	plusw1,fsr2h
 10983  003088  2ADF               	incf	indf2,f,c
 10984  00308A  D7C9               	goto	l8615
 10985  00308C                     l1949:
 10986                           
 10987                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10988  00308C  0EEF               	movlw	239
 10989  00308E  26E1               	addwf	fsr1l,f,c
 10990  003090  0EFF               	movlw	255
 10991  003092  22E2               	addwfc	fsr1h,f,c
 10992  003094  0012               	return		;funcret
 10993  003096                     __end_of_vfpfcnvrt:
 10994                           	opt callstack 0
 10995                           
 10996 ;; *************** function _strncmp *****************
 10997 ;; Defined at:
 10998 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  _l              1  [STACK] PTR const unsigned char 
 11001 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 11002 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 11003 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 11004 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 11005 ;;		 -> STR_1(17), 
 11006 ;;  _r              1  [STACK] PTR const unsigned char 
 11007 ;;		 -> STR_25(3), STR_21(3), 
 11008 ;;  n               2  [STACK] unsigned int 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  r               1  [STACK] PTR const unsigned char 
 11011 ;;		 -> STR_25(3), STR_21(3), 
 11012 ;;  l               1  [STACK] PTR const unsigned char 
 11013 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 11014 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 11015 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 11016 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 11017 ;;		 -> STR_1(17), 
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  2  [STACK] int 
 11020 ;; Registers used:
 11021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11031 ;;Total ram usage:        0 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:    3
 11034 ;; This function calls:
 11035 ;;		Nothing
 11036 ;; This function is called by:
 11037 ;;		_vfpfcnvrt
 11038 ;; This function uses a reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text45
 11042  004AC8                     __ptext45:
 11043                           	opt callstack 0
 11044  004AC8                     _strncmp:
 11045                           	opt callstack 0
 11046                           
 11047                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11048  004AC8  52E6               	movf	postinc1,f,c
 11049  004ACA  52E6               	movf	postinc1,f,c
 11050                           
 11051                           ;stkvar	__l @ sp[(-2)+-1]
 11052                           
 11053                           ;incstack = 0
 11054  004ACC  0EFD               	movlw	-3
 11055  004ACE  006F FF8C  F048    	movff	plusw1,btemp+11
 11056                           
 11057                           ;stkvar	_l @ sp[(-2)+1]
 11058  004AD4  0EFF               	movlw	-1
 11059  004AD6  0060  F123  FFE3   	movff	btemp+11,plusw1
 11060                           
 11061                           ;stkvar	__r @ sp[(-2)+-2]
 11062  004ADC  0EFC               	movlw	-4
 11063  004ADE  006F FF8C  F048    	movff	plusw1,btemp+11
 11064                           
 11065                           ;stkvar	_r @ sp[(-2)+0]
 11066  004AE4  0EFE               	movlw	-2
 11067  004AE6  0060  F123  FFE3   	movff	btemp+11,plusw1
 11068                           
 11069                           ;stkvar	_n @ sp[(-2)+-4]
 11070  004AEC  0EFA               	movlw	-6
 11071  004AEE  006F FF8C  F03D    	movff	plusw1,btemp
 11072  004AF4  0E01               	movlw	1
 11073  004AF6  5E3D               	subwf	btemp,f,c
 11074  004AF8  0EFA               	movlw	-6
 11075  004AFA  0060  F0F7  FFE3   	movff	btemp,plusw1
 11076  004B00  0EFB               	movlw	-5
 11077  004B02  006F FF8C  F03D    	movff	plusw1,btemp
 11078  004B08  0E00               	movlw	0
 11079  004B0A  5A3D               	subwfb	btemp,f,c
 11080  004B0C  0EFB               	movlw	-5
 11081  004B0E  0060  F0F7  FFE3   	movff	btemp,plusw1
 11082  004B14  0EFA               	movlw	-6
 11083  004B16  28E3               	incf	plusw1,w,c
 11084  004B18  E121               	bnz	l5759
 11085  004B1A  0EFB               	movlw	-5
 11086  004B1C  28E3               	incf	plusw1,w,c
 11087  004B1E  A4D8               	btfss	status,2,c
 11088  004B20  D01D               	goto	l5759
 11089  004B22  0E00               	movlw	0
 11090  004B24  6E3D               	movwf	btemp,c
 11091  004B26  0E00               	movlw	0
 11092  004B28  6E3E               	movwf	btemp+1,c
 11093  004B2A  D091               	goto	l2706
 11094  004B2C                     l5755:
 11095                           
 11096                           ;stkvar	_l @ sp[(-2)+1]
 11097  004B2C  0EFF               	movlw	-1
 11098  004B2E  2AE3               	incf	plusw1,f,c
 11099                           
 11100                           ;stkvar	_r @ sp[(-2)+0]
 11101  004B30  0EFE               	movlw	-2
 11102  004B32  2AE3               	incf	plusw1,f,c
 11103                           
 11104                           ;stkvar	_n @ sp[(-2)+-4]
 11105  004B34  0EFA               	movlw	-6
 11106  004B36  006F FF8C  F03D    	movff	plusw1,btemp
 11107  004B3C  0E01               	movlw	1
 11108  004B3E  5E3D               	subwf	btemp,f,c
 11109  004B40  0EFA               	movlw	-6
 11110  004B42  0060  F0F7  FFE3   	movff	btemp,plusw1
 11111  004B48  0EFB               	movlw	-5
 11112  004B4A  006F FF8C  F03D    	movff	plusw1,btemp
 11113  004B50  0E00               	movlw	0
 11114  004B52  5A3D               	subwfb	btemp,f,c
 11115  004B54  0EFB               	movlw	-5
 11116  004B56  0060  F0F7  FFE3   	movff	btemp,plusw1
 11117  004B5C                     l5759:
 11118                           
 11119                           ;stkvar	_l @ sp[(-2)+1]
 11120  004B5C  50E1               	movf	fsr1l,w,c
 11121  004B5E  0FFF               	addlw	-1
 11122  004B60  6ED9               	movwf	fsr2l,c
 11123  004B62  50E2               	movf	fsr1h,w,c
 11124  004B64  6EDA               	movwf	fsr2h,c
 11125  004B66  0EFF               	movlw	255
 11126  004B68  22DA               	addwfc	fsr2h,f,c
 11127  004B6A  006F FF7F FFF6     	movff	indf2,tblptrl
 11128  004B70                     	if	1	;There is more than 1 active tblptr byte
 11129  004B70  0E20               	movlw	high __smallconst
 11130  004B72  6EF7               	movwf	tblptrh,c
 11131  004B74                     	endif
 11132  004B74                     	if	0	;tblptru may be non-zero
 11133  004B74                     	endif
 11134  004B74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11135  004B74  0E00               	movlw	low (__smallconst shr (0+16))
 11136  004B76  6EF8               	movwf	tblptru,c
 11137  004B78                     	endif
 11138  004B78  0008               	tblrd		*
 11139  004B7A  50F5               	movf	tablat,w,c
 11140  004B7C  0900               	iorlw	0
 11141  004B7E  B4D8               	btfsc	status,2,c
 11142  004B80  D041               	goto	u3160
 11143                           
 11144                           ;stkvar	_r @ sp[(-2)+0]
 11145  004B82  50E1               	movf	fsr1l,w,c
 11146  004B84  0FFE               	addlw	-2
 11147  004B86  6ED9               	movwf	fsr2l,c
 11148  004B88  50E2               	movf	fsr1h,w,c
 11149  004B8A  6EDA               	movwf	fsr2h,c
 11150  004B8C  0EFF               	movlw	255
 11151  004B8E  22DA               	addwfc	fsr2h,f,c
 11152  004B90  006F FF7F FFF6     	movff	indf2,tblptrl
 11153  004B96                     	if	1	;There is more than 1 active tblptr byte
 11154  004B96  0E20               	movlw	high __smallconst
 11155  004B98  6EF7               	movwf	tblptrh,c
 11156  004B9A                     	endif
 11157  004B9A                     	if	0	;tblptru may be non-zero
 11158  004B9A                     	endif
 11159  004B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11160  004B9A  0E00               	movlw	low (__smallconst shr (0+16))
 11161  004B9C  6EF8               	movwf	tblptru,c
 11162  004B9E                     	endif
 11163  004B9E  0008               	tblrd		*
 11164  004BA0  50F5               	movf	tablat,w,c
 11165  004BA2  0900               	iorlw	0
 11166  004BA4  B4D8               	btfsc	status,2,c
 11167  004BA6  D02E               	goto	u3160
 11168                           
 11169                           ;stkvar	_n @ sp[(-2)+-4]
 11170  004BA8  0EFA               	movlw	-6
 11171  004BAA  006F FF8C  F03D    	movff	plusw1,btemp
 11172  004BB0  0EFB               	movlw	-5
 11173  004BB2  50E3               	movf	plusw1,w,c
 11174  004BB4  103D               	iorwf	btemp,w,c
 11175  004BB6  B4D8               	btfsc	status,2,c
 11176  004BB8  D025               	goto	u3160
 11177                           
 11178                           ;stkvar	_l @ sp[(-2)+1]
 11179  004BBA  50E1               	movf	fsr1l,w,c
 11180  004BBC  0FFF               	addlw	-1
 11181  004BBE  6ED9               	movwf	fsr2l,c
 11182  004BC0  50E2               	movf	fsr1h,w,c
 11183  004BC2  6EDA               	movwf	fsr2h,c
 11184  004BC4  0EFF               	movlw	255
 11185  004BC6  22DA               	addwfc	fsr2h,f,c
 11186  004BC8  006F FF7F FFF6     	movff	indf2,tblptrl
 11187  004BCE                     	if	1	;There is more than 1 active tblptr byte
 11188  004BCE  0E20               	movlw	high __smallconst
 11189  004BD0  6EF7               	movwf	tblptrh,c
 11190  004BD2                     	endif
 11191  004BD2                     	if	0	;tblptru may be non-zero
 11192  004BD2                     	endif
 11193  004BD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11194  004BD2  0E00               	movlw	low (__smallconst shr (0+16))
 11195  004BD4  6EF8               	movwf	tblptru,c
 11196  004BD6                     	endif
 11197  004BD6  0008               	tblrd		*
 11198  004BD8  006F FFD4  F048    	movff	tablat,btemp+11
 11199                           
 11200                           ;stkvar	_r @ sp[(-2)+0]
 11201  004BDE  50E1               	movf	fsr1l,w,c
 11202  004BE0  0FFE               	addlw	-2
 11203  004BE2  6ED9               	movwf	fsr2l,c
 11204  004BE4  50E2               	movf	fsr1h,w,c
 11205  004BE6  6EDA               	movwf	fsr2h,c
 11206  004BE8  0EFF               	movlw	255
 11207  004BEA  22DA               	addwfc	fsr2h,f,c
 11208  004BEC  006F FF7F FFF6     	movff	indf2,tblptrl
 11209  004BF2                     	if	1	;There is more than 1 active tblptr byte
 11210  004BF2  0E20               	movlw	high __smallconst
 11211  004BF4  6EF7               	movwf	tblptrh,c
 11212  004BF6                     	endif
 11213  004BF6                     	if	0	;tblptru may be non-zero
 11214  004BF6                     	endif
 11215  004BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11216  004BF6  0E00               	movlw	low (__smallconst shr (0+16))
 11217  004BF8  6EF8               	movwf	tblptru,c
 11218  004BFA                     	endif
 11219  004BFA  0008               	tblrd		*
 11220  004BFC  50F5               	movf	tablat,w,c
 11221  004BFE  1848               	xorwf	btemp+11,w,c
 11222  004C00  B4D8               	btfsc	status,2,c
 11223  004C02  D794               	goto	l5755
 11224  004C04                     u3160:
 11225                           
 11226                           ;stkvar	_l @ sp[(-2)+1]
 11227  004C04  50E1               	movf	fsr1l,w,c
 11228  004C06  0FFF               	addlw	-1
 11229  004C08  6ED9               	movwf	fsr2l,c
 11230  004C0A  50E2               	movf	fsr1h,w,c
 11231  004C0C  6EDA               	movwf	fsr2h,c
 11232  004C0E  0EFF               	movlw	255
 11233  004C10  22DA               	addwfc	fsr2h,f,c
 11234  004C12  006F FF7F FFF6     	movff	indf2,tblptrl
 11235  004C18                     	if	1	;There is more than 1 active tblptr byte
 11236  004C18  0E20               	movlw	high __smallconst
 11237  004C1A  6EF7               	movwf	tblptrh,c
 11238  004C1C                     	endif
 11239  004C1C                     	if	0	;tblptru may be non-zero
 11240  004C1C                     	endif
 11241  004C1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11242  004C1C  0E00               	movlw	low (__smallconst shr (0+16))
 11243  004C1E  6EF8               	movwf	tblptru,c
 11244  004C20                     	endif
 11245  004C20  0008               	tblrd		*
 11246  004C22  50F5               	movf	tablat,w,c
 11247  004C24  6E3D               	movwf	btemp,c
 11248  004C26  6A3E               	clrf	btemp+1,c
 11249                           
 11250                           ;stkvar	_r @ sp[(-2)+0]
 11251  004C28  50E1               	movf	fsr1l,w,c
 11252  004C2A  0FFE               	addlw	-2
 11253  004C2C  6ED9               	movwf	fsr2l,c
 11254  004C2E  50E2               	movf	fsr1h,w,c
 11255  004C30  6EDA               	movwf	fsr2h,c
 11256  004C32  0EFF               	movlw	255
 11257  004C34  22DA               	addwfc	fsr2h,f,c
 11258  004C36  006F FF7F FFF6     	movff	indf2,tblptrl
 11259  004C3C                     	if	1	;There is more than 1 active tblptr byte
 11260  004C3C  0E20               	movlw	high __smallconst
 11261  004C3E  6EF7               	movwf	tblptrh,c
 11262  004C40                     	endif
 11263  004C40                     	if	0	;tblptru may be non-zero
 11264  004C40                     	endif
 11265  004C40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11266  004C40  0E00               	movlw	low (__smallconst shr (0+16))
 11267  004C42  6EF8               	movwf	tblptru,c
 11268  004C44                     	endif
 11269  004C44  0008               	tblrd		*
 11270  004C46  50F5               	movf	tablat,w,c
 11271  004C48  5E3D               	subwf	btemp,f,c
 11272  004C4A  0E00               	movlw	0
 11273  004C4C  5A3E               	subwfb	btemp+1,f,c
 11274  004C4E                     l2706:
 11275                           
 11276                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11277  004C4E  0EFA               	movlw	250
 11278  004C50  26E1               	addwf	fsr1l,f,c
 11279  004C52  0EFF               	movlw	255
 11280  004C54  22E2               	addwfc	fsr1h,f,c
 11281  004C56  0012               	return		;funcret
 11282  004C58                     __end_of_strncmp:
 11283                           	opt callstack 0
 11284                           
 11285 ;; *************** function _stoa *****************
 11286 ;; Defined at:
 11287 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11290 ;;		 -> f(5), NULL(0), 
 11291 ;;  s               2  [STACK] PTR unsigned char 
 11292 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
 11293 ;; Auto vars:     Size  Location     Type
 11294 ;;  nuls            7  [STACK] unsigned char [7]
 11295 ;;  l               2  [STACK] int 
 11296 ;;  p               2  [STACK] int 
 11297 ;;  cp              2  [STACK] PTR unsigned char 
 11298 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 11299 ;;		 -> V(98), 
 11300 ;;  w               2  [STACK] int 
 11301 ;;  i               2  [STACK] int 
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  2  [STACK] int 
 11304 ;; Registers used:
 11305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11315 ;;Total ram usage:        0 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:    6
 11318 ;; This function calls:
 11319 ;;		_fputc
 11320 ;;		_strlen
 11321 ;; This function is called by:
 11322 ;;		_vfpfcnvrt
 11323 ;; This function uses a reentrant model
 11324 ;;
 11325                           
 11326                           	psect	text46
 11327  003E5E                     __ptext46:
 11328                           	opt callstack 0
 11329  003E5E                     _stoa:
 11330                           	opt callstack 0
 11331                           
 11332                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11333  003E5E  0E11               	movlw	17
 11334  003E60  26E1               	addwf	fsr1l,f,c
 11335  003E62  0E00               	movlw	0
 11336  003E64  22E2               	addwfc	fsr1h,f,c
 11337                           
 11338                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11339                           
 11340                           ;incstack = 0
 11341  003E66  EE20  F100         	lfsr	2,stoa@F1144
 11342                           
 11343                           ;stkvar	_nuls @ sp[(-17)+0]
 11344  003E6A  0E07               	movlw	7
 11345  003E6C  6E3D               	movwf	btemp,c
 11346  003E6E  0EEF               	movlw	-17
 11347  003E70                     us519999:
 11348  003E70  006F FF7B FFE3     	movff	postinc2,plusw1
 11349  003E76  28E8               	incf	wreg,w,c
 11350  003E78  2E3D               	decfsz	btemp,f,c
 11351  003E7A  D7FA               	bra	us519999
 11352                           
 11353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 11354                           ;stkvar	_s @ sp[(-17)+-4]
 11355  003E7C  0EEB               	movlw	-21
 11356  003E7E  006F FF8C  F047    	movff	plusw1,btemp+10
 11357  003E84  0EEC               	movlw	-20
 11358  003E86  006F FF8C  F048    	movff	plusw1,btemp+11
 11359                           
 11360                           ;stkvar	_cp @ sp[(-17)+11]
 11361  003E8C  0EFB               	movlw	-5
 11362  003E8E  0060  F123  FFE3   	movff	btemp+11,plusw1
 11363  003E94  0EFA               	movlw	-6
 11364  003E96  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11365                           
 11366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 11367                           ;stkvar	_cp @ sp[(-17)+11]
 11368  003E9C  0EFA               	movlw	-6
 11369  003E9E  006F FF8C  F03D    	movff	plusw1,btemp
 11370  003EA4  0EFB               	movlw	-5
 11371  003EA6  50E3               	movf	plusw1,w,c
 11372  003EA8  103D               	iorwf	btemp,w,c
 11373  003EAA  A4D8               	btfss	status,2,c
 11374  003EAC  D00E               	goto	l8513
 11375                           
 11376                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11377                           ;stkvar	_nuls @ sp[(-17)+0]
 11378  003EAE  0EEF               	movlw	239
 11379  003EB0  24E1               	addwf	fsr1l,w,c
 11380  003EB2  6E47               	movwf	btemp+10,c
 11381  003EB4  0EFF               	movlw	255
 11382  003EB6  20E2               	addwfc	fsr1h,w,c
 11383  003EB8  6E48               	movwf	btemp+11,c
 11384                           
 11385                           ;stkvar	_cp @ sp[(-17)+11]
 11386  003EBA  0EFB               	movlw	-5
 11387  003EBC  0060  F123  FFE3   	movff	btemp+11,plusw1
 11388  003EC2  0EFA               	movlw	-6
 11389  003EC4  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11390  003ECA                     l8513:
 11391                           
 11392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11393                           ;stkvar	_cp @ sp[(-17)+11]
 11394  003ECA  0EFA               	movlw	-6
 11395  003ECC  006F FF8F FFE6     	movff	plusw1,postinc1
 11396  003ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 11397  003ED8  EC5D  F02C         	call	_strlen	;wreg free
 11398                           
 11399                           ;stkvar	_l @ sp[(-17)+7]
 11400  003EDC  0EF6               	movlw	-10
 11401  003EDE  0060  F0F7  FFE3   	movff	btemp,plusw1
 11402  003EE4  0EF7               	movlw	-9
 11403  003EE6  0060  F0FB  FFE3   	movff	btemp+1,plusw1
 11404                           
 11405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11406                           ;stkvar	_p @ sp[(-17)+9]
 11407  003EEC  0EF8               	movlw	-8
 11408  003EEE  0060  F07F  FFE3   	movff	_prec,plusw1
 11409  003EF4  0EF9               	movlw	-7
 11410  003EF6  0060  F083  FFE3   	movff	_prec+1,plusw1
 11411                           
 11412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11413                           ;stkvar	_p @ sp[(-17)+9]
 11414  003EFC  0EF9               	movlw	-7
 11415  003EFE  BEE3               	btfsc	plusw1,7,c
 11416  003F00  D023               	goto	l1930
 11417                           
 11418                           ;stkvar	_l @ sp[(-17)+7]
 11419                           ;stkvar	_p @ sp[(-17)+9]
 11420  003F02  50E1               	movf	fsr1l,w,c
 11421  003F04  0FF8               	addlw	-8
 11422  003F06  6ED9               	movwf	fsr2l,c
 11423  003F08  50E2               	movf	fsr1h,w,c
 11424  003F0A  6EDA               	movwf	fsr2h,c
 11425  003F0C  0EFF               	movlw	255
 11426  003F0E  22DA               	addwfc	fsr2h,f,c
 11427  003F10  0EF6               	movlw	-10
 11428  003F12  50E3               	movf	plusw1,w,c
 11429  003F14  5CDE               	subwf	postinc2,w,c
 11430  003F16  50DE               	movf	postinc2,w,c
 11431  003F18  0A80               	xorlw	128
 11432  003F1A  6E3D               	movwf	btemp,c
 11433  003F1C  0EF7               	movlw	-9
 11434  003F1E  50E3               	movf	plusw1,w,c
 11435  003F20  0A80               	xorlw	128
 11436  003F22  583D               	subwfb	btemp,w,c
 11437  003F24  B0D8               	btfsc	status,0,c
 11438  003F26  D010               	goto	l1930
 11439                           
 11440                           ;stkvar	_p @ sp[(-17)+9]
 11441                           ;stkvar	_l @ sp[(-17)+7]
 11442  003F28  0EF8               	movlw	-8
 11443  003F2A  006F FF8C  F03D    	movff	plusw1,btemp
 11444  003F30  0EF6               	movlw	-10
 11445  003F32  0060  F0F7  FFE3   	movff	btemp,plusw1
 11446  003F38  0EF9               	movlw	-7
 11447  003F3A  006F FF8C  F03D    	movff	plusw1,btemp
 11448  003F40  0EF7               	movlw	-9
 11449  003F42  0060  F0F7  FFE3   	movff	btemp,plusw1
 11450  003F48                     l1930:
 11451                           
 11452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11453                           ;stkvar	_l @ sp[(-17)+7]
 11454                           ;stkvar	_p @ sp[(-17)+9]
 11455  003F48  0EF6               	movlw	-10
 11456  003F4A  006F FF8C  F03D    	movff	plusw1,btemp
 11457  003F50  0EF8               	movlw	-8
 11458  003F52  0060  F0F7  FFE3   	movff	btemp,plusw1
 11459  003F58  0EF7               	movlw	-9
 11460  003F5A  006F FF8C  F03D    	movff	plusw1,btemp
 11461  003F60  0EF9               	movlw	-7
 11462  003F62  0060  F0F7  FFE3   	movff	btemp,plusw1
 11463                           
 11464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11465                           ;stkvar	_w @ sp[(-17)+13]
 11466  003F68  0EFC               	movlw	-4
 11467  003F6A  0060  F077  FFE3   	movff	_width,plusw1
 11468  003F70  0EFD               	movlw	-3
 11469  003F72  0060  F07B  FFE3   	movff	_width+1,plusw1
 11470                           
 11471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11472  003F78  A021               	btfss	_flags,0,c
 11473  003F7A  D01F               	goto	l8533
 11474  003F7C  D031               	goto	u5240
 11475  003F7E                     l8529:
 11476                           
 11477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11478                           ;stkvar	_fp @ sp[(-17)+-2]
 11479  003F7E  0EED               	movlw	-19
 11480  003F80  006F FF8F FFE6     	movff	plusw1,postinc1
 11481  003F86  006F FF8F FFE6     	movff	plusw1,postinc1
 11482  003F8C  0E20               	movlw	32
 11483  003F8E  6EE6               	movwf	postinc1,c
 11484  003F90  0E00               	movlw	0
 11485  003F92  6EE6               	movwf	postinc1,c
 11486  003F94  EC80  F028         	call	_fputc	;wreg free
 11487                           
 11488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11489                           ;stkvar	_l @ sp[(-17)+7]
 11490  003F98  0EF6               	movlw	-10
 11491  003F9A  50E3               	movf	plusw1,w,c
 11492  003F9C  0F01               	addlw	1
 11493  003F9E  6E3D               	movwf	btemp,c
 11494  003FA0  0EF6               	movlw	-10
 11495  003FA2  0060  F0F7  FFE3   	movff	btemp,plusw1
 11496  003FA8  6A3D               	clrf	btemp,c
 11497  003FAA  0EF7               	movlw	-9
 11498  003FAC  50E3               	movf	plusw1,w,c
 11499  003FAE  203D               	addwfc	btemp,w,c
 11500  003FB0  6E3D               	movwf	btemp,c
 11501  003FB2  0EF7               	movlw	-9
 11502  003FB4  0060  F0F7  FFE3   	movff	btemp,plusw1
 11503  003FBA                     l8533:
 11504                           
 11505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11506                           ;stkvar	_w @ sp[(-17)+13]
 11507                           ;stkvar	_l @ sp[(-17)+7]
 11508  003FBA  50E1               	movf	fsr1l,w,c
 11509  003FBC  0FF6               	addlw	-10
 11510  003FBE  6ED9               	movwf	fsr2l,c
 11511  003FC0  50E2               	movf	fsr1h,w,c
 11512  003FC2  6EDA               	movwf	fsr2h,c
 11513  003FC4  0EFF               	movlw	255
 11514  003FC6  22DA               	addwfc	fsr2h,f,c
 11515  003FC8  0EFC               	movlw	-4
 11516  003FCA  50E3               	movf	plusw1,w,c
 11517  003FCC  5CDE               	subwf	postinc2,w,c
 11518  003FCE  50DE               	movf	postinc2,w,c
 11519  003FD0  0A80               	xorlw	128
 11520  003FD2  6E3D               	movwf	btemp,c
 11521  003FD4  0EFD               	movlw	-3
 11522  003FD6  50E3               	movf	plusw1,w,c
 11523  003FD8  0A80               	xorlw	128
 11524  003FDA  583D               	subwfb	btemp,w,c
 11525  003FDC  A0D8               	btfss	status,0,c
 11526  003FDE  D7CF               	goto	l8529
 11527  003FE0                     u5240:
 11528                           
 11529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11530                           ;stkvar	_i @ sp[(-17)+15]
 11531  003FE0  0EFE               	movlw	-2
 11532  003FE2  6AE3               	clrf	plusw1,c
 11533  003FE4  0EFF               	movlw	-1
 11534  003FE6  6AE3               	clrf	plusw1,c
 11535                           
 11536                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11537  003FE8  D045               	goto	l8543
 11538  003FEA                     l8537:
 11539                           
 11540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11541                           ;stkvar	_fp @ sp[(-17)+-2]
 11542  003FEA  0EED               	movlw	-19
 11543  003FEC  006F FF8F FFE6     	movff	plusw1,postinc1
 11544  003FF2  006F FF8F FFE6     	movff	plusw1,postinc1
 11545                           
 11546                           ;stkvar	_cp @ sp[(-19)+11]
 11547  003FF8  0EF8               	movlw	-8
 11548  003FFA  006F FF8F FFF6     	movff	plusw1,tblptrl
 11549  004000  0EF9               	movlw	-7
 11550  004002  006F FF8F FFF7     	movff	plusw1,tblptrh
 11551  004008  0E00               	movlw	low (__smallconst shr (0+16))
 11552  00400A  6EF8               	movwf	tblptru,c
 11553  00400C  0E1F               	movlw	(high __ramtop+-1)
 11554  00400E  64F7               	cpfsgt	tblptrh,c
 11555  004010  D003               	bra	u5257
 11556  004012  0008               	tblrd		*
 11557  004014  50F5               	movf	tablat,w,c
 11558  004016  D007               	bra	u5250
 11559  004018                     u5257:
 11560  004018  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11561  00401E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11562  004024  50EF               	movf	indf0,w,c
 11563  004026                     u5250:
 11564  004026  6EE6               	movwf	postinc1,c
 11565  004028  0E00               	movlw	0
 11566  00402A  6EE6               	movwf	postinc1,c
 11567  00402C  EC80  F028         	call	_fputc	;wreg free
 11568                           
 11569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11570                           ;stkvar	_cp @ sp[(-17)+11]
 11571  004030  0EFA               	movlw	-6
 11572  004032  50E3               	movf	plusw1,w,c
 11573  004034  0F01               	addlw	1
 11574  004036  6E3D               	movwf	btemp,c
 11575  004038  0EFA               	movlw	-6
 11576  00403A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11577  004040  6A3D               	clrf	btemp,c
 11578  004042  0EFB               	movlw	-5
 11579  004044  50E3               	movf	plusw1,w,c
 11580  004046  203D               	addwfc	btemp,w,c
 11581  004048  6E3D               	movwf	btemp,c
 11582  00404A  0EFB               	movlw	-5
 11583  00404C  0060  F0F7  FFE3   	movff	btemp,plusw1
 11584                           
 11585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11586                           ;stkvar	_i @ sp[(-17)+15]
 11587  004052  0EFE               	movlw	-2
 11588  004054  50E3               	movf	plusw1,w,c
 11589  004056  0F01               	addlw	1
 11590  004058  6E3D               	movwf	btemp,c
 11591  00405A  0EFE               	movlw	-2
 11592  00405C  0060  F0F7  FFE3   	movff	btemp,plusw1
 11593  004062  6A3D               	clrf	btemp,c
 11594  004064  0EFF               	movlw	-1
 11595  004066  50E3               	movf	plusw1,w,c
 11596  004068  203D               	addwfc	btemp,w,c
 11597  00406A  6E3D               	movwf	btemp,c
 11598  00406C  0EFF               	movlw	-1
 11599  00406E  0060  F0F7  FFE3   	movff	btemp,plusw1
 11600  004074                     l8543:
 11601                           
 11602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11603                           ;stkvar	_p @ sp[(-17)+9]
 11604                           ;stkvar	_i @ sp[(-17)+15]
 11605  004074  50E1               	movf	fsr1l,w,c
 11606  004076  0FFE               	addlw	-2
 11607  004078  6ED9               	movwf	fsr2l,c
 11608  00407A  50E2               	movf	fsr1h,w,c
 11609  00407C  6EDA               	movwf	fsr2h,c
 11610  00407E  0EFF               	movlw	255
 11611  004080  22DA               	addwfc	fsr2h,f,c
 11612  004082  0EF8               	movlw	-8
 11613  004084  50E3               	movf	plusw1,w,c
 11614  004086  5CDE               	subwf	postinc2,w,c
 11615  004088  50DE               	movf	postinc2,w,c
 11616  00408A  0A80               	xorlw	128
 11617  00408C  6E3D               	movwf	btemp,c
 11618  00408E  0EF9               	movlw	-7
 11619  004090  50E3               	movf	plusw1,w,c
 11620  004092  0A80               	xorlw	128
 11621  004094  583D               	subwfb	btemp,w,c
 11622  004096  A0D8               	btfss	status,0,c
 11623  004098  D7A8               	goto	l8537
 11624                           
 11625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11626  00409A  B021               	btfsc	_flags,0,c
 11627  00409C  D01F               	goto	l8551
 11628  00409E  D031               	goto	u5280
 11629  0040A0                     l8547:
 11630                           
 11631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11632                           ;stkvar	_fp @ sp[(-17)+-2]
 11633  0040A0  0EED               	movlw	-19
 11634  0040A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11635  0040A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11636  0040AE  0E20               	movlw	32
 11637  0040B0  6EE6               	movwf	postinc1,c
 11638  0040B2  0E00               	movlw	0
 11639  0040B4  6EE6               	movwf	postinc1,c
 11640  0040B6  EC80  F028         	call	_fputc	;wreg free
 11641                           
 11642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11643                           ;stkvar	_l @ sp[(-17)+7]
 11644  0040BA  0EF6               	movlw	-10
 11645  0040BC  50E3               	movf	plusw1,w,c
 11646  0040BE  0F01               	addlw	1
 11647  0040C0  6E3D               	movwf	btemp,c
 11648  0040C2  0EF6               	movlw	-10
 11649  0040C4  0060  F0F7  FFE3   	movff	btemp,plusw1
 11650  0040CA  6A3D               	clrf	btemp,c
 11651  0040CC  0EF7               	movlw	-9
 11652  0040CE  50E3               	movf	plusw1,w,c
 11653  0040D0  203D               	addwfc	btemp,w,c
 11654  0040D2  6E3D               	movwf	btemp,c
 11655  0040D4  0EF7               	movlw	-9
 11656  0040D6  0060  F0F7  FFE3   	movff	btemp,plusw1
 11657  0040DC                     l8551:
 11658                           
 11659                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11660                           ;stkvar	_w @ sp[(-17)+13]
 11661                           ;stkvar	_l @ sp[(-17)+7]
 11662  0040DC  50E1               	movf	fsr1l,w,c
 11663  0040DE  0FF6               	addlw	-10
 11664  0040E0  6ED9               	movwf	fsr2l,c
 11665  0040E2  50E2               	movf	fsr1h,w,c
 11666  0040E4  6EDA               	movwf	fsr2h,c
 11667  0040E6  0EFF               	movlw	255
 11668  0040E8  22DA               	addwfc	fsr2h,f,c
 11669  0040EA  0EFC               	movlw	-4
 11670  0040EC  50E3               	movf	plusw1,w,c
 11671  0040EE  5CDE               	subwf	postinc2,w,c
 11672  0040F0  50DE               	movf	postinc2,w,c
 11673  0040F2  0A80               	xorlw	128
 11674  0040F4  6E3D               	movwf	btemp,c
 11675  0040F6  0EFD               	movlw	-3
 11676  0040F8  50E3               	movf	plusw1,w,c
 11677  0040FA  0A80               	xorlw	128
 11678  0040FC  583D               	subwfb	btemp,w,c
 11679  0040FE  A0D8               	btfss	status,0,c
 11680  004100  D7CF               	goto	l8547
 11681  004102                     u5280:
 11682                           
 11683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 11684                           ;stkvar	_l @ sp[(-17)+7]
 11685  004102  0EF6               	movlw	-10
 11686  004104  006F FF8C  F03D    	movff	plusw1,btemp
 11687  00410A  0EF7               	movlw	-9
 11688  00410C  006F FF8C  F03E    	movff	plusw1,btemp+1
 11689                           
 11690                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11691  004112  0EEB               	movlw	235
 11692  004114  26E1               	addwf	fsr1l,f,c
 11693  004116  0EFF               	movlw	255
 11694  004118  22E2               	addwfc	fsr1h,f,c
 11695  00411A  0012               	return		;funcret
 11696  00411C                     __end_of_stoa:
 11697                           	opt callstack 0
 11698                           
 11699 ;; *************** function _dtoa *****************
 11700 ;; Defined at:
 11701 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11704 ;;		 -> f(5), NULL(0), 
 11705 ;;  d               8  [STACK] long long 
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;  n               8  [STACK] long long 
 11708 ;;  i               2  [STACK] int 
 11709 ;;  s               2  [STACK] int 
 11710 ;;  w               2  [STACK] int 
 11711 ;;  p               2  [STACK] int 
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  2  [STACK] int 
 11714 ;; Registers used:
 11715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11725 ;;Total ram usage:        0 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:    8
 11728 ;; This function calls:
 11729 ;;		___aodiv
 11730 ;;		___aomod
 11731 ;;		_abs
 11732 ;;		_pad
 11733 ;; This function is called by:
 11734 ;;		_vfpfcnvrt
 11735 ;; This function uses a reentrant model
 11736 ;;
 11737                           
 11738                           	psect	text47
 11739  003096                     __ptext47:
 11740                           	opt callstack 0
 11741  003096                     _dtoa:
 11742                           	opt callstack 0
 11743                           
 11744                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11745  003096  0E12               	movlw	18
 11746  003098  26E1               	addwf	fsr1l,f,c
 11747  00309A  0E00               	movlw	0
 11748  00309C  22E2               	addwfc	fsr1h,f,c
 11749                           
 11750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 11751                           ;stkvar	_d @ sp[(-18)+-10]
 11752                           
 11753                           ;incstack = 0
 11754  00309E  0EE4               	movlw	228
 11755  0030A0  24E1               	addwf	fsr1l,w,c
 11756  0030A2  6ED9               	movwf	fsr2l,c
 11757  0030A4  0EFF               	movlw	255
 11758  0030A6  20E2               	addwfc	fsr1h,w,c
 11759  0030A8  6EDA               	movwf	fsr2h,c
 11760                           
 11761                           ;stkvar	_n @ sp[(-18)+2]
 11762  0030AA  0E08               	movlw	8
 11763  0030AC  6E3D               	movwf	btemp,c
 11764  0030AE  0EF0               	movlw	-16
 11765  0030B0                     us502999:
 11766  0030B0  006F FF7B FFE3     	movff	postinc2,plusw1
 11767  0030B6  28E8               	incf	wreg,w,c
 11768  0030B8  2E3D               	decfsz	btemp,f,c
 11769  0030BA  D7FA               	bra	us502999
 11770                           
 11771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 11772                           ;stkvar	_n @ sp[(-18)+2]
 11773  0030BC  0EF7               	movlw	-9
 11774  0030BE  AEE3               	btfss	plusw1,7,c
 11775  0030C0  D002               	goto	u5030
 11776  0030C2  0E01               	movlw	1
 11777  0030C4  D001               	goto	u5040
 11778  0030C6                     u5030:
 11779  0030C6  0E00               	movlw	0
 11780  0030C8                     u5040:
 11781  0030C8  6E47               	movwf	btemp+10,c
 11782  0030CA  6A48               	clrf	btemp+11,c
 11783                           
 11784                           ;stkvar	_s @ sp[(-18)+12]
 11785  0030CC  0EFA               	movlw	-6
 11786  0030CE  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11787  0030D4  0EFB               	movlw	-5
 11788  0030D6  0060  F123  FFE3   	movff	btemp+11,plusw1
 11789                           
 11790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 11791                           ;stkvar	_s @ sp[(-18)+12]
 11792  0030DC  0EFA               	movlw	-6
 11793  0030DE  006F FF8C  F03D    	movff	plusw1,btemp
 11794  0030E4  0EFB               	movlw	-5
 11795  0030E6  50E3               	movf	plusw1,w,c
 11796  0030E8  103D               	iorwf	btemp,w,c
 11797  0030EA  B4D8               	btfsc	status,2,c
 11798  0030EC  D025               	goto	u5060
 11799                           
 11800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 11801                           ;stkvar	_n @ sp[(-18)+2]
 11802                           ;stkvar	_n @ sp[(-18)+2]
 11803  0030EE  0EF0               	movlw	-16
 11804  0030F0  6CE3               	negf	plusw1,c
 11805  0030F2  0EF1               	movlw	-15
 11806  0030F4  1EE3               	comf	plusw1,f,c
 11807  0030F6  0EF2               	movlw	-14
 11808  0030F8  1EE3               	comf	plusw1,f,c
 11809  0030FA  0EF3               	movlw	-13
 11810  0030FC  1EE3               	comf	plusw1,f,c
 11811  0030FE  0EF4               	movlw	-12
 11812  003100  1EE3               	comf	plusw1,f,c
 11813  003102  0EF5               	movlw	-11
 11814  003104  1EE3               	comf	plusw1,f,c
 11815  003106  0EF6               	movlw	-10
 11816  003108  1EE3               	comf	plusw1,f,c
 11817  00310A  0EF7               	movlw	-9
 11818  00310C  1EE3               	comf	plusw1,f,c
 11819  00310E  E314               	bnc	u5060
 11820  003110  0EF1               	movlw	-15
 11821  003112  2AE3               	incf	plusw1,f,c
 11822  003114  E311               	bnc	u5060
 11823  003116  0EF2               	movlw	-14
 11824  003118  2AE3               	incf	plusw1,f,c
 11825  00311A  E30E               	bnc	u5060
 11826  00311C  0EF3               	movlw	-13
 11827  00311E  2AE3               	incf	plusw1,f,c
 11828  003120  E30B               	bnc	u5060
 11829  003122  0EF4               	movlw	-12
 11830  003124  2AE3               	incf	plusw1,f,c
 11831  003126  E308               	bnc	u5060
 11832  003128  0EF5               	movlw	-11
 11833  00312A  2AE3               	incf	plusw1,f,c
 11834  00312C  E305               	bnc	u5060
 11835  00312E  0EF6               	movlw	-10
 11836  003130  2AE3               	incf	plusw1,f,c
 11837  003132  E302               	bnc	u5060
 11838  003134  0EF7               	movlw	-9
 11839  003136  2AE3               	incf	plusw1,f,c
 11840  003138                     u5060:
 11841                           
 11842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 11843  003138  AE20               	btfss	_prec+1,7,c
 11844                           
 11845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 11846  00313A  9221               	bcf	_flags,1,c
 11847                           
 11848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 11849  00313C  BE20               	btfsc	_prec+1,7,c
 11850  00313E  D005               	goto	u5080
 11851  003140  5020               	movf	_prec+1,w,c
 11852  003142  E110               	bnz	l8455
 11853  003144  041F               	decf	_prec,w,c
 11854  003146  B0D8               	btfsc	status,0,c
 11855  003148  D00D               	goto	l8455
 11856  00314A                     u5080:
 11857  00314A  0E01               	movlw	1
 11858  00314C  6E47               	movwf	btemp+10,c
 11859  00314E  0E00               	movlw	0
 11860  003150  6E48               	movwf	btemp+11,c
 11861                           
 11862                           ;stkvar	_p @ sp[(-18)+16]
 11863  003152  0EFE               	movlw	-2
 11864  003154  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11865  00315A  0EFF               	movlw	-1
 11866  00315C  0060  F123  FFE3   	movff	btemp+11,plusw1
 11867  003162  D008               	goto	l1903
 11868  003164                     l8455:
 11869                           
 11870                           ;stkvar	_p @ sp[(-18)+16]
 11871  003164  0EFE               	movlw	-2
 11872  003166  0060  F07F  FFE3   	movff	_prec,plusw1
 11873  00316C  0EFF               	movlw	-1
 11874  00316E  0060  F083  FFE3   	movff	_prec+1,plusw1
 11875  003174                     l1903:
 11876                           
 11877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 11878                           ;stkvar	_w @ sp[(-18)+14]
 11879  003174  0EFC               	movlw	-4
 11880  003176  0060  F077  FFE3   	movff	_width,plusw1
 11881  00317C  0EFD               	movlw	-3
 11882  00317E  0060  F07B  FFE3   	movff	_width+1,plusw1
 11883                           
 11884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 11885                           ;stkvar	_s @ sp[(-18)+12]
 11886  003184  0EFA               	movlw	-6
 11887  003186  006F FF8C  F03D    	movff	plusw1,btemp
 11888  00318C  0EFB               	movlw	-5
 11889  00318E  50E3               	movf	plusw1,w,c
 11890  003190  103D               	iorwf	btemp,w,c
 11891  003192  A4D8               	btfss	status,2,c
 11892  003194  D002               	goto	u5100
 11893  003196  A421               	btfss	_flags,2,c
 11894  003198  D00A               	goto	l8463
 11895  00319A                     u5100:
 11896                           
 11897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 11898                           ;stkvar	_w @ sp[(-18)+14]
 11899  00319A  50E1               	movf	fsr1l,w,c
 11900  00319C  0FFC               	addlw	-4
 11901  00319E  6ED9               	movwf	fsr2l,c
 11902  0031A0  50E2               	movf	fsr1h,w,c
 11903  0031A2  6EDA               	movwf	fsr2h,c
 11904  0031A4  0EFF               	movlw	255
 11905  0031A6  22DA               	addwfc	fsr2h,f,c
 11906  0031A8  06DE               	decf	postinc2,f,c
 11907  0031AA  0E00               	movlw	0
 11908  0031AC  5ADD               	subwfb	postdec2,f,c
 11909  0031AE                     l8463:
 11910                           
 11911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 11912  0031AE  0E1F               	movlw	31
 11913  0031B0  6E47               	movwf	btemp+10,c
 11914  0031B2  0E00               	movlw	0
 11915  0031B4  6E48               	movwf	btemp+11,c
 11916                           
 11917                           ;stkvar	_i @ sp[(-18)+10]
 11918  0031B6  0EF8               	movlw	-8
 11919  0031B8  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11920  0031BE  0EF9               	movlw	-7
 11921  0031C0  0060  F123  FFE3   	movff	btemp+11,plusw1
 11922                           
 11923                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 11924  0031C6  0101               	movlb	1	; () banked
 11925  0031C8  6BED               	clrf	(_dbuf+31)& (0+255),b
 11926                           
 11927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11928  0031CA  D109               	goto	l8477
 11929  0031CC                     l8467:
 11930                           
 11931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 11932                           ;stkvar	_i @ sp[(-18)+10]
 11933  0031CC  50E1               	movf	fsr1l,w,c
 11934  0031CE  0FF8               	addlw	-8
 11935  0031D0  6ED9               	movwf	fsr2l,c
 11936  0031D2  50E2               	movf	fsr1h,w,c
 11937  0031D4  6EDA               	movwf	fsr2h,c
 11938  0031D6  0EFF               	movlw	255
 11939  0031D8  22DA               	addwfc	fsr2h,f,c
 11940  0031DA  06DE               	decf	postinc2,f,c
 11941  0031DC  0E00               	movlw	0
 11942  0031DE  5ADD               	subwfb	postdec2,f,c
 11943                           
 11944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 11945  0031E0  0E0A               	movlw	10
 11946  0031E2  6EE6               	movwf	postinc1,c
 11947  0031E4  0E00               	movlw	0
 11948  0031E6  6EE6               	movwf	postinc1,c
 11949  0031E8  0E00               	movlw	0
 11950  0031EA  6EE6               	movwf	postinc1,c
 11951  0031EC  0E00               	movlw	0
 11952  0031EE  6EE6               	movwf	postinc1,c
 11953  0031F0  0E00               	movlw	0
 11954  0031F2  6EE6               	movwf	postinc1,c
 11955  0031F4  0E00               	movlw	0
 11956  0031F6  6EE6               	movwf	postinc1,c
 11957  0031F8  0E00               	movlw	0
 11958  0031FA  6EE6               	movwf	postinc1,c
 11959  0031FC  0E00               	movlw	0
 11960  0031FE  6EE6               	movwf	postinc1,c
 11961                           
 11962                           ;stkvar	_n @ sp[(-26)+2]
 11963  003200  50E1               	movf	fsr1l,w,c
 11964  003202  0FE8               	addlw	-24
 11965  003204  6ED9               	movwf	fsr2l,c
 11966  003206  50E2               	movf	fsr1h,w,c
 11967  003208  6EDA               	movwf	fsr2h,c
 11968  00320A  0EFF               	movlw	255
 11969  00320C  22DA               	addwfc	fsr2h,f,c
 11970  00320E  006F FF7B FFE6     	movff	postinc2,postinc1
 11971  003214  006F FF7B FFE6     	movff	postinc2,postinc1
 11972  00321A  006F FF7B FFE6     	movff	postinc2,postinc1
 11973  003220  006F FF7B FFE6     	movff	postinc2,postinc1
 11974  003226  006F FF7B FFE6     	movff	postinc2,postinc1
 11975  00322C  006F FF7B FFE6     	movff	postinc2,postinc1
 11976  003232  006F FF7B FFE6     	movff	postinc2,postinc1
 11977  003238  006F FF7B FFE6     	movff	postinc2,postinc1
 11978  00323E  EC44  F024         	call	___aomod	;wreg free
 11979  003242  52E5               	movf	postdec1,f,c
 11980  003244  006F FF9C  F054    	movff	indf1,btemp+23
 11981  00324A  52E5               	movf	postdec1,f,c
 11982  00324C  006F FF9C  F053    	movff	indf1,btemp+22
 11983  003252  52E5               	movf	postdec1,f,c
 11984  003254  006F FF9C  F052    	movff	indf1,btemp+21
 11985  00325A  52E5               	movf	postdec1,f,c
 11986  00325C  006F FF9C  F051    	movff	indf1,btemp+20
 11987  003262  52E5               	movf	postdec1,f,c
 11988  003264  006F FF9C  F050    	movff	indf1,btemp+19
 11989  00326A  52E5               	movf	postdec1,f,c
 11990  00326C  006F FF9C  F04F    	movff	indf1,btemp+18
 11991  003272  52E5               	movf	postdec1,f,c
 11992  003274  006F FF9C  F04E    	movff	indf1,btemp+17
 11993  00327A  52E5               	movf	postdec1,f,c
 11994  00327C  006F FF9C  F04D    	movff	indf1,btemp+16
 11995  003282  0EF8               	movlw	248
 11996  003284  26E1               	addwf	fsr1l,f,c
 11997  003286  0EFF               	movlw	255
 11998  003288  22E2               	addwfc	fsr1h,f,c
 11999  00328A  0060  F134  F047   	movff	btemp+16,btemp+10
 12000  003290  0060  F138  F048   	movff	btemp+17,btemp+11
 12001  003296  0060  F11F  FFE6   	movff	btemp+10,postinc1
 12002  00329C  0060  F123  FFE6   	movff	btemp+11,postinc1
 12003  0032A2  EC64  F030         	call	_abs	;wreg free
 12004  0032A6  0E30               	movlw	48
 12005  0032A8  263D               	addwf	btemp,f,c
 12006                           
 12007                           ;stkvar	_i @ sp[(-18)+10]
 12008  0032AA  0EF8               	movlw	-8
 12009  0032AC  006F FF8C  F047    	movff	plusw1,btemp+10
 12010  0032B2  0EF9               	movlw	-7
 12011  0032B4  006F FF8C  F048    	movff	plusw1,btemp+11
 12012  0032BA  0ECE               	movlw	low _dbuf
 12013  0032BC  2447               	addwf	btemp+10,w,c
 12014  0032BE  6ED9               	movwf	fsr2l,c
 12015  0032C0  0E01               	movlw	high _dbuf
 12016  0032C2  2048               	addwfc	btemp+11,w,c
 12017  0032C4  6EDA               	movwf	fsr2h,c
 12018  0032C6  0060  F0F7  FFDF   	movff	btemp,indf2
 12019                           
 12020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 12021                           ;stkvar	_p @ sp[(-18)+16]
 12022  0032CC  50E1               	movf	fsr1l,w,c
 12023  0032CE  0FFE               	addlw	-2
 12024  0032D0  6ED9               	movwf	fsr2l,c
 12025  0032D2  50E2               	movf	fsr1h,w,c
 12026  0032D4  6EDA               	movwf	fsr2h,c
 12027  0032D6  0EFF               	movlw	255
 12028  0032D8  22DA               	addwfc	fsr2h,f,c
 12029  0032DA  06DE               	decf	postinc2,f,c
 12030  0032DC  0E00               	movlw	0
 12031  0032DE  5ADD               	subwfb	postdec2,f,c
 12032                           
 12033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 12034                           ;stkvar	_w @ sp[(-18)+14]
 12035  0032E0  50E1               	movf	fsr1l,w,c
 12036  0032E2  0FFC               	addlw	-4
 12037  0032E4  6ED9               	movwf	fsr2l,c
 12038  0032E6  50E2               	movf	fsr1h,w,c
 12039  0032E8  6EDA               	movwf	fsr2h,c
 12040  0032EA  0EFF               	movlw	255
 12041  0032EC  22DA               	addwfc	fsr2h,f,c
 12042  0032EE  06DE               	decf	postinc2,f,c
 12043  0032F0  0E00               	movlw	0
 12044  0032F2  5ADD               	subwfb	postdec2,f,c
 12045                           
 12046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 12047  0032F4  0E0A               	movlw	10
 12048  0032F6  6EE6               	movwf	postinc1,c
 12049  0032F8  0E00               	movlw	0
 12050  0032FA  6EE6               	movwf	postinc1,c
 12051  0032FC  0E00               	movlw	0
 12052  0032FE  6EE6               	movwf	postinc1,c
 12053  003300  0E00               	movlw	0
 12054  003302  6EE6               	movwf	postinc1,c
 12055  003304  0E00               	movlw	0
 12056  003306  6EE6               	movwf	postinc1,c
 12057  003308  0E00               	movlw	0
 12058  00330A  6EE6               	movwf	postinc1,c
 12059  00330C  0E00               	movlw	0
 12060  00330E  6EE6               	movwf	postinc1,c
 12061  003310  0E00               	movlw	0
 12062  003312  6EE6               	movwf	postinc1,c
 12063                           
 12064                           ;stkvar	_n @ sp[(-26)+2]
 12065  003314  50E1               	movf	fsr1l,w,c
 12066  003316  0FE8               	addlw	-24
 12067  003318  6ED9               	movwf	fsr2l,c
 12068  00331A  50E2               	movf	fsr1h,w,c
 12069  00331C  6EDA               	movwf	fsr2h,c
 12070  00331E  0EFF               	movlw	255
 12071  003320  22DA               	addwfc	fsr2h,f,c
 12072  003322  006F FF7B FFE6     	movff	postinc2,postinc1
 12073  003328  006F FF7B FFE6     	movff	postinc2,postinc1
 12074  00332E  006F FF7B FFE6     	movff	postinc2,postinc1
 12075  003334  006F FF7B FFE6     	movff	postinc2,postinc1
 12076  00333A  006F FF7B FFE6     	movff	postinc2,postinc1
 12077  003340  006F FF7B FFE6     	movff	postinc2,postinc1
 12078  003346  006F FF7B FFE6     	movff	postinc2,postinc1
 12079  00334C  006F FF7B FFE6     	movff	postinc2,postinc1
 12080  003352  ECCF  F021         	call	___aodiv	;wreg free
 12081  003356  52E5               	movf	postdec1,f,c
 12082  003358  006F FF9C  F054    	movff	indf1,btemp+23
 12083  00335E  52E5               	movf	postdec1,f,c
 12084  003360  006F FF9C  F053    	movff	indf1,btemp+22
 12085  003366  52E5               	movf	postdec1,f,c
 12086  003368  006F FF9C  F052    	movff	indf1,btemp+21
 12087  00336E  52E5               	movf	postdec1,f,c
 12088  003370  006F FF9C  F051    	movff	indf1,btemp+20
 12089  003376  52E5               	movf	postdec1,f,c
 12090  003378  006F FF9C  F050    	movff	indf1,btemp+19
 12091  00337E  52E5               	movf	postdec1,f,c
 12092  003380  006F FF9C  F04F    	movff	indf1,btemp+18
 12093  003386  52E5               	movf	postdec1,f,c
 12094  003388  006F FF9C  F04E    	movff	indf1,btemp+17
 12095  00338E  52E5               	movf	postdec1,f,c
 12096  003390  006F FF9C  F04D    	movff	indf1,btemp+16
 12097  003396  0EF8               	movlw	248
 12098  003398  26E1               	addwf	fsr1l,f,c
 12099  00339A  0EFF               	movlw	255
 12100  00339C  22E2               	addwfc	fsr1h,f,c
 12101                           
 12102                           ;stkvar	_n @ sp[(-18)+2]
 12103  00339E  0EF0               	movlw	-16
 12104  0033A0  0060  F137  FFE3   	movff	btemp+16,plusw1
 12105  0033A6  0EF1               	movlw	-15
 12106  0033A8  0060  F13B  FFE3   	movff	btemp+17,plusw1
 12107  0033AE  0EF2               	movlw	-14
 12108  0033B0  0060  F13F  FFE3   	movff	btemp+18,plusw1
 12109  0033B6  0EF3               	movlw	-13
 12110  0033B8  0060  F143  FFE3   	movff	btemp+19,plusw1
 12111  0033BE  0EF4               	movlw	-12
 12112  0033C0  0060  F147  FFE3   	movff	btemp+20,plusw1
 12113  0033C6  0EF5               	movlw	-11
 12114  0033C8  0060  F14B  FFE3   	movff	btemp+21,plusw1
 12115  0033CE  0EF6               	movlw	-10
 12116  0033D0  0060  F14F  FFE3   	movff	btemp+22,plusw1
 12117  0033D6  0EF7               	movlw	-9
 12118  0033D8  0060  F153  FFE3   	movff	btemp+23,plusw1
 12119  0033DE                     l8477:
 12120                           
 12121                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12122                           ;stkvar	_i @ sp[(-18)+10]
 12123  0033DE  0EF9               	movlw	-7
 12124  0033E0  BEE3               	btfsc	plusw1,7,c
 12125  0033E2  D036               	goto	u5150
 12126  0033E4  0EF9               	movlw	-7
 12127  0033E6  50E3               	movf	plusw1,w,c
 12128  0033E8  E104               	bnz	u5110
 12129  0033EA  0EF8               	movlw	-8
 12130  0033EC  04E3               	decf	plusw1,w,c
 12131  0033EE  A0D8               	btfss	status,0,c
 12132  0033F0  D02F               	goto	u5150
 12133  0033F2                     u5110:
 12134                           
 12135                           ;stkvar	_n @ sp[(-18)+2]
 12136  0033F2  0EF0               	movlw	-16
 12137  0033F4  50E3               	movf	plusw1,w,c
 12138  0033F6  E115               	bnz	u5121
 12139  0033F8  0EF1               	movlw	-15
 12140  0033FA  50E3               	movf	plusw1,w,c
 12141  0033FC  E112               	bnz	u5121
 12142  0033FE  0EF2               	movlw	-14
 12143  003400  50E3               	movf	plusw1,w,c
 12144  003402  E10F               	bnz	u5121
 12145  003404  0EF3               	movlw	-13
 12146  003406  50E3               	movf	plusw1,w,c
 12147  003408  E10C               	bnz	u5121
 12148  00340A  0EF4               	movlw	-12
 12149  00340C  50E3               	movf	plusw1,w,c
 12150  00340E  E109               	bnz	u5121
 12151  003410  0EF5               	movlw	-11
 12152  003412  50E3               	movf	plusw1,w,c
 12153  003414  E106               	bnz	u5121
 12154  003416  0EF6               	movlw	-10
 12155  003418  50E3               	movf	plusw1,w,c
 12156  00341A  E103               	bnz	u5121
 12157  00341C  0EF7               	movlw	-9
 12158  00341E  50E3               	movf	plusw1,w,c
 12159  003420  A4D8               	btfss	status,2,c
 12160  003422                     u5121:
 12161  003422  D6D4               	goto	l8467
 12162                           
 12163                           ;stkvar	_p @ sp[(-18)+16]
 12164  003424  0EFF               	movlw	-1
 12165  003426  BEE3               	btfsc	plusw1,7,c
 12166  003428  D007               	goto	u5130
 12167  00342A  0EFF               	movlw	-1
 12168  00342C  50E3               	movf	plusw1,w,c
 12169  00342E  E103               	bnz	u5131
 12170  003430  0EFE               	movlw	-2
 12171  003432  04E3               	decf	plusw1,w,c
 12172  003434  B0D8               	btfsc	status,0,c
 12173  003436                     u5131:
 12174  003436  D6CA               	goto	l8467
 12175  003438                     u5130:
 12176                           
 12177                           ;stkvar	_w @ sp[(-18)+14]
 12178  003438  0EFD               	movlw	-3
 12179  00343A  BEE3               	btfsc	plusw1,7,c
 12180  00343C  D009               	goto	u5150
 12181  00343E  0EFD               	movlw	-3
 12182  003440  50E3               	movf	plusw1,w,c
 12183  003442  E104               	bnz	u5140
 12184  003444  0EFC               	movlw	-4
 12185  003446  04E3               	decf	plusw1,w,c
 12186  003448  A0D8               	btfss	status,0,c
 12187  00344A  D002               	goto	u5150
 12188  00344C                     u5140:
 12189  00344C  B221               	btfsc	_flags,1,c
 12190  00344E  D6BE               	goto	l8467
 12191  003450                     u5150:
 12192                           
 12193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 12194                           ;stkvar	_s @ sp[(-18)+12]
 12195  003450  0EFA               	movlw	-6
 12196  003452  006F FF8C  F03D    	movff	plusw1,btemp
 12197  003458  0EFB               	movlw	-5
 12198  00345A  50E3               	movf	plusw1,w,c
 12199  00345C  103D               	iorwf	btemp,w,c
 12200  00345E  A4D8               	btfss	status,2,c
 12201  003460  D002               	goto	u5170
 12202  003462  A421               	btfss	_flags,2,c
 12203  003464  D033               	goto	l8501
 12204  003466                     u5170:
 12205                           
 12206                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 12207                           ;stkvar	_i @ sp[(-18)+10]
 12208  003466  50E1               	movf	fsr1l,w,c
 12209  003468  0FF8               	addlw	-8
 12210  00346A  6ED9               	movwf	fsr2l,c
 12211  00346C  50E2               	movf	fsr1h,w,c
 12212  00346E  6EDA               	movwf	fsr2h,c
 12213  003470  0EFF               	movlw	255
 12214  003472  22DA               	addwfc	fsr2h,f,c
 12215  003474  06DE               	decf	postinc2,f,c
 12216  003476  0E00               	movlw	0
 12217  003478  5ADD               	subwfb	postdec2,f,c
 12218                           
 12219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 12220                           ;stkvar	_s @ sp[(-18)+12]
 12221  00347A  0EFA               	movlw	-6
 12222  00347C  006F FF8C  F03D    	movff	plusw1,btemp
 12223  003482  0EFB               	movlw	-5
 12224  003484  50E3               	movf	plusw1,w,c
 12225  003486  103D               	iorwf	btemp,w,c
 12226  003488  A4D8               	btfss	status,2,c
 12227  00348A  D002               	goto	l8497
 12228  00348C  0E2B               	movlw	43
 12229  00348E  D001               	goto	L25
 12230  003490                     l8497:
 12231  003490  0E2D               	movlw	45
 12232  003492                     L25:
 12233  003492  6E47               	movwf	btemp+10,c
 12234  003494  0E00               	movlw	0
 12235  003496  6E48               	movwf	btemp+11,c
 12236                           
 12237                           ;stkvar	_dtoa$4035 @ sp[(-18)+0]
 12238  003498  0EEE               	movlw	-18
 12239  00349A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12240  0034A0  0EEF               	movlw	-17
 12241  0034A2  0060  F123  FFE3   	movff	btemp+11,plusw1
 12242                           
 12243                           ;stkvar	_dtoa$4035 @ sp[(-18)+0]
 12244                           ;stkvar	_i @ sp[(-18)+10]
 12245  0034A8  0EF8               	movlw	-8
 12246  0034AA  006F FF8C  F047    	movff	plusw1,btemp+10
 12247  0034B0  0EF9               	movlw	-7
 12248  0034B2  006F FF8C  F048    	movff	plusw1,btemp+11
 12249  0034B8  0ECE               	movlw	low _dbuf
 12250  0034BA  2447               	addwf	btemp+10,w,c
 12251  0034BC  6ED9               	movwf	fsr2l,c
 12252  0034BE  0E01               	movlw	high _dbuf
 12253  0034C0  2048               	addwfc	btemp+11,w,c
 12254  0034C2  6EDA               	movwf	fsr2h,c
 12255  0034C4  0EEE               	movlw	-18
 12256  0034C6  006F FF8F FFDF     	movff	plusw1,indf2
 12257  0034CC                     l8501:
 12258                           
 12259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 12260                           ;stkvar	_w @ sp[(-18)+14]
 12261  0034CC  0EFC               	movlw	-4
 12262  0034CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12263  0034D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12264                           
 12265                           ;stkvar	_i @ sp[(-20)+10]
 12266  0034DA  0ECE               	movlw	low _dbuf
 12267  0034DC  6E47               	movwf	btemp+10,c
 12268  0034DE  0E01               	movlw	high _dbuf
 12269  0034E0  6E48               	movwf	btemp+11,c
 12270  0034E2  0EF6               	movlw	-10
 12271  0034E4  50E3               	movf	plusw1,w,c
 12272  0034E6  2647               	addwf	btemp+10,f,c
 12273  0034E8  0EF7               	movlw	-9
 12274  0034EA  50E3               	movf	plusw1,w,c
 12275  0034EC  2248               	addwfc	btemp+11,f,c
 12276  0034EE  0060  F11F  FFE6   	movff	btemp+10,postinc1
 12277  0034F4  0060  F123  FFE6   	movff	btemp+11,postinc1
 12278                           
 12279                           ;stkvar	_fp @ sp[(-22)+-2]
 12280  0034FA  0EE8               	movlw	-24
 12281  0034FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12282  003502  006F FF8F FFE6     	movff	plusw1,postinc1
 12283  003508  ECF6  F027         	call	_pad	;wreg free
 12284                           
 12285                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12286  00350C  0EE4               	movlw	228
 12287  00350E  26E1               	addwf	fsr1l,f,c
 12288  003510  0EFF               	movlw	255
 12289  003512  22E2               	addwfc	fsr1h,f,c
 12290  003514  0012               	return		;funcret
 12291  003516                     __end_of_dtoa:
 12292                           	opt callstack 0
 12293                           
 12294 ;; *************** function _abs *****************
 12295 ;; Defined at:
 12296 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;  a               2  [STACK] int 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;		None
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  2  [STACK] int 
 12303 ;; Registers used:
 12304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/1
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;Total ram usage:        0 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:    3
 12317 ;; This function calls:
 12318 ;;		Nothing
 12319 ;; This function is called by:
 12320 ;;		_dtoa
 12321 ;; This function uses a reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text48
 12325  0060C8                     __ptext48:
 12326                           	opt callstack 0
 12327  0060C8                     _abs:
 12328                           	opt callstack 23
 12329                           
 12330                           ;stkvar	_a @ sp[(0)+-2]
 12331                           
 12332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12333                           ;incstack = 0
 12334  0060C8  0EFF               	movlw	-1
 12335  0060CA  BEE3               	btfsc	plusw1,7,c
 12336  0060CC  D007               	goto	u2600
 12337  0060CE  0EFF               	movlw	-1
 12338  0060D0  50E3               	movf	plusw1,w,c
 12339  0060D2  E112               	bnz	l5531
 12340  0060D4  0EFE               	movlw	-2
 12341  0060D6  04E3               	decf	plusw1,w,c
 12342  0060D8  B0D8               	btfsc	status,0,c
 12343  0060DA  D00E               	goto	l5531
 12344  0060DC                     u2600:
 12345                           
 12346                           ;stkvar	_a @ sp[(0)+-2]
 12347  0060DC  0EFE               	movlw	-2
 12348  0060DE  006F FF8C  F03D    	movff	plusw1,btemp
 12349  0060E4  1E3D               	comf	btemp,f,c
 12350  0060E6  0EFF               	movlw	-1
 12351  0060E8  006F FF8C  F03E    	movff	plusw1,btemp+1
 12352  0060EE  1E3E               	comf	btemp+1,f,c
 12353  0060F0  2A3D               	incf	btemp,f,c
 12354  0060F2  B4D8               	btfsc	status,2,c
 12355  0060F4  2A3E               	incf	btemp+1,f,c
 12356  0060F6  D008               	goto	l2644
 12357  0060F8                     l5531:
 12358                           
 12359                           ;stkvar	_a @ sp[(0)+-2]
 12360  0060F8  0EFE               	movlw	-2
 12361  0060FA  006F FF8C  F03D    	movff	plusw1,btemp
 12362  006100  0EFF               	movlw	-1
 12363  006102  006F FF8C  F03E    	movff	plusw1,btemp+1
 12364  006108                     l2644:
 12365                           
 12366                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 12367  006108  52E5               	movf	postdec1,f,c
 12368  00610A  52E5               	movf	postdec1,f,c
 12369  00610C  0012               	return		;funcret
 12370  00610E                     __end_of_abs:
 12371                           	opt callstack 0
 12372                           
 12373 ;; *************** function ___aomod *****************
 12374 ;; Defined at:
 12375 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;  dividend        8  [STACK] long long 
 12378 ;;  divisor         8  [STACK] long long 
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;  sign            1  [STACK] unsigned char 
 12381 ;;  counter         1  [STACK] unsigned char 
 12382 ;; Return value:  Size  Location     Type
 12383 ;;                  8  [STACK] long long 
 12384 ;; Registers used:
 12385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12386 ;; Tracked objects:
 12387 ;;		On entry : 0/1
 12388 ;;		On exit  : 0/0
 12389 ;;		Unchanged: 0/0
 12390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12395 ;;Total ram usage:        0 bytes
 12396 ;; Hardware stack levels used:    1
 12397 ;; Hardware stack levels required when called:    3
 12398 ;; This function calls:
 12399 ;;		Nothing
 12400 ;; This function is called by:
 12401 ;;		_dtoa
 12402 ;; This function uses a reentrant model
 12403 ;;
 12404                           
 12405                           	psect	text49
 12406  004888                     __ptext49:
 12407                           	opt callstack 0
 12408  004888                     ___aomod:
 12409                           	opt callstack 0
 12410                           
 12411                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12412  004888  52E6               	movf	postinc1,f,c
 12413  00488A  52E6               	movf	postinc1,f,c
 12414                           
 12415                           ;stkvar	_sign @ sp[(-2)+0]
 12416                           
 12417                           ;incstack = 0
 12418  00488C  0EFE               	movlw	-2
 12419  00488E  6AE3               	clrf	plusw1,c
 12420                           
 12421                           ;stkvar	_dividend @ sp[(-2)+-8]
 12422  004890  0EFD               	movlw	-3
 12423  004892  AEE3               	btfss	plusw1,7,c
 12424  004894  D028               	goto	l5587
 12425                           
 12426                           ;stkvar	_dividend @ sp[(-2)+-8]
 12427                           ;stkvar	_dividend @ sp[(-2)+-8]
 12428  004896  0EF6               	movlw	-10
 12429  004898  6CE3               	negf	plusw1,c
 12430  00489A  0EF7               	movlw	-9
 12431  00489C  1EE3               	comf	plusw1,f,c
 12432  00489E  0EF8               	movlw	-8
 12433  0048A0  1EE3               	comf	plusw1,f,c
 12434  0048A2  0EF9               	movlw	-7
 12435  0048A4  1EE3               	comf	plusw1,f,c
 12436  0048A6  0EFA               	movlw	-6
 12437  0048A8  1EE3               	comf	plusw1,f,c
 12438  0048AA  0EFB               	movlw	-5
 12439  0048AC  1EE3               	comf	plusw1,f,c
 12440  0048AE  0EFC               	movlw	-4
 12441  0048B0  1EE3               	comf	plusw1,f,c
 12442  0048B2  0EFD               	movlw	-3
 12443  0048B4  1EE3               	comf	plusw1,f,c
 12444  0048B6  E314               	bnc	u2740
 12445  0048B8  0EF7               	movlw	-9
 12446  0048BA  2AE3               	incf	plusw1,f,c
 12447  0048BC  E311               	bnc	u2740
 12448  0048BE  0EF8               	movlw	-8
 12449  0048C0  2AE3               	incf	plusw1,f,c
 12450  0048C2  E30E               	bnc	u2740
 12451  0048C4  0EF9               	movlw	-7
 12452  0048C6  2AE3               	incf	plusw1,f,c
 12453  0048C8  E30B               	bnc	u2740
 12454  0048CA  0EFA               	movlw	-6
 12455  0048CC  2AE3               	incf	plusw1,f,c
 12456  0048CE  E308               	bnc	u2740
 12457  0048D0  0EFB               	movlw	-5
 12458  0048D2  2AE3               	incf	plusw1,f,c
 12459  0048D4  E305               	bnc	u2740
 12460  0048D6  0EFC               	movlw	-4
 12461  0048D8  2AE3               	incf	plusw1,f,c
 12462  0048DA  E302               	bnc	u2740
 12463  0048DC  0EFD               	movlw	-3
 12464  0048DE  2AE3               	incf	plusw1,f,c
 12465  0048E0                     u2740:
 12466                           
 12467                           ;stkvar	_sign @ sp[(-2)+0]
 12468  0048E0  0EFE               	movlw	-2
 12469  0048E2  6AE3               	clrf	plusw1,c
 12470  0048E4  2AE3               	incf	plusw1,f,c
 12471  0048E6                     l5587:
 12472                           
 12473                           ;stkvar	_divisor @ sp[(-2)+-16]
 12474  0048E6  0EF5               	movlw	-11
 12475  0048E8  AEE3               	btfss	plusw1,7,c
 12476  0048EA  D025               	goto	u2760
 12477                           
 12478                           ;stkvar	_divisor @ sp[(-2)+-16]
 12479                           ;stkvar	_divisor @ sp[(-2)+-16]
 12480  0048EC  0EEE               	movlw	-18
 12481  0048EE  6CE3               	negf	plusw1,c
 12482  0048F0  0EEF               	movlw	-17
 12483  0048F2  1EE3               	comf	plusw1,f,c
 12484  0048F4  0EF0               	movlw	-16
 12485  0048F6  1EE3               	comf	plusw1,f,c
 12486  0048F8  0EF1               	movlw	-15
 12487  0048FA  1EE3               	comf	plusw1,f,c
 12488  0048FC  0EF2               	movlw	-14
 12489  0048FE  1EE3               	comf	plusw1,f,c
 12490  004900  0EF3               	movlw	-13
 12491  004902  1EE3               	comf	plusw1,f,c
 12492  004904  0EF4               	movlw	-12
 12493  004906  1EE3               	comf	plusw1,f,c
 12494  004908  0EF5               	movlw	-11
 12495  00490A  1EE3               	comf	plusw1,f,c
 12496  00490C  E314               	bnc	u2760
 12497  00490E  0EEF               	movlw	-17
 12498  004910  2AE3               	incf	plusw1,f,c
 12499  004912  E311               	bnc	u2760
 12500  004914  0EF0               	movlw	-16
 12501  004916  2AE3               	incf	plusw1,f,c
 12502  004918  E30E               	bnc	u2760
 12503  00491A  0EF1               	movlw	-15
 12504  00491C  2AE3               	incf	plusw1,f,c
 12505  00491E  E30B               	bnc	u2760
 12506  004920  0EF2               	movlw	-14
 12507  004922  2AE3               	incf	plusw1,f,c
 12508  004924  E308               	bnc	u2760
 12509  004926  0EF3               	movlw	-13
 12510  004928  2AE3               	incf	plusw1,f,c
 12511  00492A  E305               	bnc	u2760
 12512  00492C  0EF4               	movlw	-12
 12513  00492E  2AE3               	incf	plusw1,f,c
 12514  004930  E302               	bnc	u2760
 12515  004932  0EF5               	movlw	-11
 12516  004934  2AE3               	incf	plusw1,f,c
 12517  004936                     u2760:
 12518                           
 12519                           ;stkvar	_divisor @ sp[(-2)+-16]
 12520  004936  0EEE               	movlw	-18
 12521  004938  50E3               	movf	plusw1,w,c
 12522  00493A  E116               	bnz	u2770
 12523  00493C  0EEF               	movlw	-17
 12524  00493E  50E3               	movf	plusw1,w,c
 12525  004940  E113               	bnz	u2770
 12526  004942  0EF0               	movlw	-16
 12527  004944  50E3               	movf	plusw1,w,c
 12528  004946  E110               	bnz	u2770
 12529  004948  0EF1               	movlw	-15
 12530  00494A  50E3               	movf	plusw1,w,c
 12531  00494C  E10D               	bnz	u2770
 12532  00494E  0EF2               	movlw	-14
 12533  004950  50E3               	movf	plusw1,w,c
 12534  004952  E10A               	bnz	u2770
 12535  004954  0EF3               	movlw	-13
 12536  004956  50E3               	movf	plusw1,w,c
 12537  004958  E107               	bnz	u2770
 12538  00495A  0EF4               	movlw	-12
 12539  00495C  50E3               	movf	plusw1,w,c
 12540  00495E  E104               	bnz	u2770
 12541  004960  0EF5               	movlw	-11
 12542  004962  50E3               	movf	plusw1,w,c
 12543  004964  B4D8               	btfsc	status,2,c
 12544  004966  D075               	goto	u2800
 12545  004968                     u2770:
 12546                           
 12547                           ;stkvar	_counter @ sp[(-2)+1]
 12548  004968  0EFF               	movlw	-1
 12549  00496A  6AE3               	clrf	plusw1,c
 12550  00496C  D012               	goto	L26
 12551  00496E                     l5595:
 12552                           
 12553                           ;stkvar	_divisor @ sp[(-2)+-16]
 12554  00496E  90D8               	bcf	status,0,c
 12555  004970  0EEE               	movlw	-18
 12556  004972  36E3               	rlcf	plusw1,f,c
 12557  004974  0EEF               	movlw	-17
 12558  004976  36E3               	rlcf	plusw1,f,c
 12559  004978  0EF0               	movlw	-16
 12560  00497A  36E3               	rlcf	plusw1,f,c
 12561  00497C  0EF1               	movlw	-15
 12562  00497E  36E3               	rlcf	plusw1,f,c
 12563  004980  0EF2               	movlw	-14
 12564  004982  36E3               	rlcf	plusw1,f,c
 12565  004984  0EF3               	movlw	-13
 12566  004986  36E3               	rlcf	plusw1,f,c
 12567  004988  0EF4               	movlw	-12
 12568  00498A  36E3               	rlcf	plusw1,f,c
 12569  00498C  0EF5               	movlw	-11
 12570  00498E  36E3               	rlcf	plusw1,f,c
 12571                           
 12572                           ;stkvar	_counter @ sp[(-2)+1]
 12573  004990  0EFF               	movlw	-1
 12574  004992                     L26:
 12575  004992  2AE3               	incf	plusw1,f,c
 12576                           
 12577                           ;stkvar	_divisor @ sp[(-2)+-16]
 12578  004994  0EF5               	movlw	-11
 12579  004996  AEE3               	btfss	plusw1,7,c
 12580  004998  D7EA               	goto	l5595
 12581  00499A                     u2780:
 12582                           
 12583                           ;stkvar	_divisor @ sp[(-2)+-16]
 12584                           ;stkvar	_dividend @ sp[(-2)+-8]
 12585  00499A  50E1               	movf	fsr1l,w,c
 12586  00499C  0FF6               	addlw	-10
 12587  00499E  6ED9               	movwf	fsr2l,c
 12588  0049A0  50E2               	movf	fsr1h,w,c
 12589  0049A2  6EDA               	movwf	fsr2h,c
 12590  0049A4  0EFF               	movlw	255
 12591  0049A6  22DA               	addwfc	fsr2h,f,c
 12592  0049A8  0EEE               	movlw	-18
 12593  0049AA  50E3               	movf	plusw1,w,c
 12594  0049AC  5CDE               	subwf	postinc2,w,c
 12595  0049AE  0EEF               	movlw	-17
 12596  0049B0  50E3               	movf	plusw1,w,c
 12597  0049B2  58DE               	subwfb	postinc2,w,c
 12598  0049B4  0EF0               	movlw	-16
 12599  0049B6  50E3               	movf	plusw1,w,c
 12600  0049B8  58DE               	subwfb	postinc2,w,c
 12601  0049BA  0EF1               	movlw	-15
 12602  0049BC  50E3               	movf	plusw1,w,c
 12603  0049BE  58DE               	subwfb	postinc2,w,c
 12604  0049C0  0EF2               	movlw	-14
 12605  0049C2  50E3               	movf	plusw1,w,c
 12606  0049C4  58DE               	subwfb	postinc2,w,c
 12607  0049C6  0EF3               	movlw	-13
 12608  0049C8  50E3               	movf	plusw1,w,c
 12609  0049CA  58DE               	subwfb	postinc2,w,c
 12610  0049CC  0EF4               	movlw	-12
 12611  0049CE  50E3               	movf	plusw1,w,c
 12612  0049D0  58DE               	subwfb	postinc2,w,c
 12613  0049D2  0EF5               	movlw	-11
 12614  0049D4  50E3               	movf	plusw1,w,c
 12615  0049D6  58DE               	subwfb	postinc2,w,c
 12616  0049D8  A0D8               	btfss	status,0,c
 12617  0049DA  D01F               	goto	l5603
 12618                           
 12619                           ;stkvar	_divisor @ sp[(-2)+-16]
 12620                           ;stkvar	_dividend @ sp[(-2)+-8]
 12621  0049DC  50E1               	movf	fsr1l,w,c
 12622  0049DE  0FF6               	addlw	-10
 12623  0049E0  6ED9               	movwf	fsr2l,c
 12624  0049E2  50E2               	movf	fsr1h,w,c
 12625  0049E4  6EDA               	movwf	fsr2h,c
 12626  0049E6  0EFF               	movlw	255
 12627  0049E8  22DA               	addwfc	fsr2h,f,c
 12628  0049EA  0EEE               	movlw	-18
 12629  0049EC  50E3               	movf	plusw1,w,c
 12630  0049EE  5EDE               	subwf	postinc2,f,c
 12631  0049F0  0EEF               	movlw	-17
 12632  0049F2  50E3               	movf	plusw1,w,c
 12633  0049F4  5ADE               	subwfb	postinc2,f,c
 12634  0049F6  0EF0               	movlw	-16
 12635  0049F8  50E3               	movf	plusw1,w,c
 12636  0049FA  5ADE               	subwfb	postinc2,f,c
 12637  0049FC  0EF1               	movlw	-15
 12638  0049FE  50E3               	movf	plusw1,w,c
 12639  004A00  5ADE               	subwfb	postinc2,f,c
 12640  004A02  0EF2               	movlw	-14
 12641  004A04  50E3               	movf	plusw1,w,c
 12642  004A06  5ADE               	subwfb	postinc2,f,c
 12643  004A08  0EF3               	movlw	-13
 12644  004A0A  50E3               	movf	plusw1,w,c
 12645  004A0C  5ADE               	subwfb	postinc2,f,c
 12646  004A0E  0EF4               	movlw	-12
 12647  004A10  50E3               	movf	plusw1,w,c
 12648  004A12  5ADE               	subwfb	postinc2,f,c
 12649  004A14  0EF5               	movlw	-11
 12650  004A16  50E3               	movf	plusw1,w,c
 12651  004A18  5ADE               	subwfb	postinc2,f,c
 12652  004A1A                     l5603:
 12653                           
 12654                           ;stkvar	_divisor @ sp[(-2)+-16]
 12655  004A1A  90D8               	bcf	status,0,c
 12656  004A1C  0EF5               	movlw	-11
 12657  004A1E  32E3               	rrcf	plusw1,f,c
 12658  004A20  0EF4               	movlw	-12
 12659  004A22  32E3               	rrcf	plusw1,f,c
 12660  004A24  0EF3               	movlw	-13
 12661  004A26  32E3               	rrcf	plusw1,f,c
 12662  004A28  0EF2               	movlw	-14
 12663  004A2A  32E3               	rrcf	plusw1,f,c
 12664  004A2C  0EF1               	movlw	-15
 12665  004A2E  32E3               	rrcf	plusw1,f,c
 12666  004A30  0EF0               	movlw	-16
 12667  004A32  32E3               	rrcf	plusw1,f,c
 12668  004A34  0EEF               	movlw	-17
 12669  004A36  32E3               	rrcf	plusw1,f,c
 12670  004A38  0EEE               	movlw	-18
 12671  004A3A  32E3               	rrcf	plusw1,f,c
 12672                           
 12673                           ;stkvar	_counter @ sp[(-2)+1]
 12674  004A3C  0EFF               	movlw	-1
 12675  004A3E  50E3               	movf	plusw1,w,c
 12676  004A40  6E3D               	movwf	btemp,c
 12677  004A42  0E01               	movlw	1
 12678  004A44  5E3D               	subwf	btemp,f,c
 12679  004A46  0EFF               	movlw	-1
 12680  004A48  0060  F0F7  FFE3   	movff	btemp,plusw1
 12681  004A4E  A4D8               	btfss	status,2,c
 12682  004A50  D7A4               	goto	u2780
 12683  004A52                     u2800:
 12684                           
 12685                           ;stkvar	_sign @ sp[(-2)+0]
 12686  004A52  0EFE               	movlw	-2
 12687  004A54  50E3               	movf	plusw1,w,c
 12688  004A56  B4D8               	btfsc	status,2,c
 12689  004A58  D025               	goto	u2820
 12690                           
 12691                           ;stkvar	_dividend @ sp[(-2)+-8]
 12692                           ;stkvar	_dividend @ sp[(-2)+-8]
 12693  004A5A  0EF6               	movlw	-10
 12694  004A5C  6CE3               	negf	plusw1,c
 12695  004A5E  0EF7               	movlw	-9
 12696  004A60  1EE3               	comf	plusw1,f,c
 12697  004A62  0EF8               	movlw	-8
 12698  004A64  1EE3               	comf	plusw1,f,c
 12699  004A66  0EF9               	movlw	-7
 12700  004A68  1EE3               	comf	plusw1,f,c
 12701  004A6A  0EFA               	movlw	-6
 12702  004A6C  1EE3               	comf	plusw1,f,c
 12703  004A6E  0EFB               	movlw	-5
 12704  004A70  1EE3               	comf	plusw1,f,c
 12705  004A72  0EFC               	movlw	-4
 12706  004A74  1EE3               	comf	plusw1,f,c
 12707  004A76  0EFD               	movlw	-3
 12708  004A78  1EE3               	comf	plusw1,f,c
 12709  004A7A  E314               	bnc	u2820
 12710  004A7C  0EF7               	movlw	-9
 12711  004A7E  2AE3               	incf	plusw1,f,c
 12712  004A80  E311               	bnc	u2820
 12713  004A82  0EF8               	movlw	-8
 12714  004A84  2AE3               	incf	plusw1,f,c
 12715  004A86  E30E               	bnc	u2820
 12716  004A88  0EF9               	movlw	-7
 12717  004A8A  2AE3               	incf	plusw1,f,c
 12718  004A8C  E30B               	bnc	u2820
 12719  004A8E  0EFA               	movlw	-6
 12720  004A90  2AE3               	incf	plusw1,f,c
 12721  004A92  E308               	bnc	u2820
 12722  004A94  0EFB               	movlw	-5
 12723  004A96  2AE3               	incf	plusw1,f,c
 12724  004A98  E305               	bnc	u2820
 12725  004A9A  0EFC               	movlw	-4
 12726  004A9C  2AE3               	incf	plusw1,f,c
 12727  004A9E  E302               	bnc	u2820
 12728  004AA0  0EFD               	movlw	-3
 12729  004AA2  2AE3               	incf	plusw1,f,c
 12730  004AA4                     u2820:
 12731                           
 12732                           ;stkvar	_dividend @ sp[(-2)+-8]
 12733  004AA4  0EF6               	movlw	246
 12734  004AA6  24E1               	addwf	fsr1l,w,c
 12735  004AA8  6ED9               	movwf	fsr2l,c
 12736  004AAA  0EFF               	movlw	255
 12737  004AAC  20E2               	addwfc	fsr1h,w,c
 12738  004AAE  6EDA               	movwf	fsr2h,c
 12739                           
 12740                           ;stkvar	?___aomod @ sp[(-2)+-8]
 12741  004AB0  0E08               	movlw	8
 12742  004AB2  6E3D               	movwf	btemp,c
 12743  004AB4  0EF6               	movlw	-10
 12744  004AB6                     us283999:
 12745  004AB6  006F FF7B FFE3     	movff	postinc2,plusw1
 12746  004ABC  28E8               	incf	wreg,w,c
 12747  004ABE  2E3D               	decfsz	btemp,f,c
 12748  004AC0  D7FA               	bra	us283999
 12749                           
 12750                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 12751  004AC2  52E5               	movf	postdec1,f,c
 12752  004AC4  52E5               	movf	postdec1,f,c
 12753  004AC6  0012               	return		;funcret
 12754  004AC8                     __end_of___aomod:
 12755                           	opt callstack 0
 12756                           
 12757 ;; *************** function ___aodiv *****************
 12758 ;; Defined at:
 12759 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;  dividend        8  [STACK] long long 
 12762 ;;  divisor         8  [STACK] long long 
 12763 ;; Auto vars:     Size  Location     Type
 12764 ;;  quotient        8  [STACK] long long 
 12765 ;;  sign            1  [STACK] unsigned char 
 12766 ;;  counter         1  [STACK] unsigned char 
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  8  [STACK] long long 
 12769 ;; Registers used:
 12770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/1
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12780 ;;Total ram usage:        0 bytes
 12781 ;; Hardware stack levels used:    1
 12782 ;; Hardware stack levels required when called:    3
 12783 ;; This function calls:
 12784 ;;		Nothing
 12785 ;; This function is called by:
 12786 ;;		_dtoa
 12787 ;; This function uses a reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text50
 12791  00439E                     __ptext50:
 12792                           	opt callstack 0
 12793  00439E                     ___aodiv:
 12794                           	opt callstack 0
 12795                           
 12796                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 12797  00439E  0E0A               	movlw	10
 12798  0043A0  26E1               	addwf	fsr1l,f,c
 12799  0043A2  0E00               	movlw	0
 12800  0043A4  22E2               	addwfc	fsr1h,f,c
 12801                           
 12802                           ;stkvar	_sign @ sp[(-10)+8]
 12803                           
 12804                           ;incstack = 0
 12805  0043A6  0EFE               	movlw	-2
 12806  0043A8  6AE3               	clrf	plusw1,c
 12807                           
 12808                           ;stkvar	_divisor @ sp[(-10)+-16]
 12809  0043AA  0EED               	movlw	-19
 12810  0043AC  AEE3               	btfss	plusw1,7,c
 12811  0043AE  D028               	goto	l5543
 12812                           
 12813                           ;stkvar	_divisor @ sp[(-10)+-16]
 12814                           ;stkvar	_divisor @ sp[(-10)+-16]
 12815  0043B0  0EE6               	movlw	-26
 12816  0043B2  6CE3               	negf	plusw1,c
 12817  0043B4  0EE7               	movlw	-25
 12818  0043B6  1EE3               	comf	plusw1,f,c
 12819  0043B8  0EE8               	movlw	-24
 12820  0043BA  1EE3               	comf	plusw1,f,c
 12821  0043BC  0EE9               	movlw	-23
 12822  0043BE  1EE3               	comf	plusw1,f,c
 12823  0043C0  0EEA               	movlw	-22
 12824  0043C2  1EE3               	comf	plusw1,f,c
 12825  0043C4  0EEB               	movlw	-21
 12826  0043C6  1EE3               	comf	plusw1,f,c
 12827  0043C8  0EEC               	movlw	-20
 12828  0043CA  1EE3               	comf	plusw1,f,c
 12829  0043CC  0EED               	movlw	-19
 12830  0043CE  1EE3               	comf	plusw1,f,c
 12831  0043D0  E314               	bnc	u2620
 12832  0043D2  0EE7               	movlw	-25
 12833  0043D4  2AE3               	incf	plusw1,f,c
 12834  0043D6  E311               	bnc	u2620
 12835  0043D8  0EE8               	movlw	-24
 12836  0043DA  2AE3               	incf	plusw1,f,c
 12837  0043DC  E30E               	bnc	u2620
 12838  0043DE  0EE9               	movlw	-23
 12839  0043E0  2AE3               	incf	plusw1,f,c
 12840  0043E2  E30B               	bnc	u2620
 12841  0043E4  0EEA               	movlw	-22
 12842  0043E6  2AE3               	incf	plusw1,f,c
 12843  0043E8  E308               	bnc	u2620
 12844  0043EA  0EEB               	movlw	-21
 12845  0043EC  2AE3               	incf	plusw1,f,c
 12846  0043EE  E305               	bnc	u2620
 12847  0043F0  0EEC               	movlw	-20
 12848  0043F2  2AE3               	incf	plusw1,f,c
 12849  0043F4  E302               	bnc	u2620
 12850  0043F6  0EED               	movlw	-19
 12851  0043F8  2AE3               	incf	plusw1,f,c
 12852  0043FA                     u2620:
 12853                           
 12854                           ;stkvar	_sign @ sp[(-10)+8]
 12855  0043FA  0EFE               	movlw	-2
 12856  0043FC  6AE3               	clrf	plusw1,c
 12857  0043FE  2AE3               	incf	plusw1,f,c
 12858  004400                     l5543:
 12859                           
 12860                           ;stkvar	_dividend @ sp[(-10)+-8]
 12861  004400  0EF5               	movlw	-11
 12862  004402  AEE3               	btfss	plusw1,7,c
 12863  004404  D027               	goto	l5549
 12864                           
 12865                           ;stkvar	_dividend @ sp[(-10)+-8]
 12866                           ;stkvar	_dividend @ sp[(-10)+-8]
 12867  004406  0EEE               	movlw	-18
 12868  004408  6CE3               	negf	plusw1,c
 12869  00440A  0EEF               	movlw	-17
 12870  00440C  1EE3               	comf	plusw1,f,c
 12871  00440E  0EF0               	movlw	-16
 12872  004410  1EE3               	comf	plusw1,f,c
 12873  004412  0EF1               	movlw	-15
 12874  004414  1EE3               	comf	plusw1,f,c
 12875  004416  0EF2               	movlw	-14
 12876  004418  1EE3               	comf	plusw1,f,c
 12877  00441A  0EF3               	movlw	-13
 12878  00441C  1EE3               	comf	plusw1,f,c
 12879  00441E  0EF4               	movlw	-12
 12880  004420  1EE3               	comf	plusw1,f,c
 12881  004422  0EF5               	movlw	-11
 12882  004424  1EE3               	comf	plusw1,f,c
 12883  004426  E314               	bnc	u2640
 12884  004428  0EEF               	movlw	-17
 12885  00442A  2AE3               	incf	plusw1,f,c
 12886  00442C  E311               	bnc	u2640
 12887  00442E  0EF0               	movlw	-16
 12888  004430  2AE3               	incf	plusw1,f,c
 12889  004432  E30E               	bnc	u2640
 12890  004434  0EF1               	movlw	-15
 12891  004436  2AE3               	incf	plusw1,f,c
 12892  004438  E30B               	bnc	u2640
 12893  00443A  0EF2               	movlw	-14
 12894  00443C  2AE3               	incf	plusw1,f,c
 12895  00443E  E308               	bnc	u2640
 12896  004440  0EF3               	movlw	-13
 12897  004442  2AE3               	incf	plusw1,f,c
 12898  004444  E305               	bnc	u2640
 12899  004446  0EF4               	movlw	-12
 12900  004448  2AE3               	incf	plusw1,f,c
 12901  00444A  E302               	bnc	u2640
 12902  00444C  0EF5               	movlw	-11
 12903  00444E  2AE3               	incf	plusw1,f,c
 12904  004450                     u2640:
 12905                           
 12906                           ;stkvar	_sign @ sp[(-10)+8]
 12907  004450  0EFE               	movlw	-2
 12908  004452  70E3               	btg	plusw1,0,c
 12909  004454                     l5549:
 12910                           
 12911                           ;stkvar	_quotient @ sp[(-10)+0]
 12912  004454  0E07               	movlw	7
 12913  004456  6E3D               	movwf	btemp,c
 12914  004458  0EF6               	movlw	-10
 12915  00445A                     u2651:
 12916  00445A  6AE3               	clrf	plusw1,c
 12917  00445C  2AE8               	incf	wreg,f,c
 12918  00445E  063D               	decf	btemp,f,c
 12919  004460  E2FC               	bc	u2651
 12920                           
 12921                           ;stkvar	_divisor @ sp[(-10)+-16]
 12922  004462  0EE6               	movlw	-26
 12923  004464  50E3               	movf	plusw1,w,c
 12924  004466  E116               	bnz	u2660
 12925  004468  0EE7               	movlw	-25
 12926  00446A  50E3               	movf	plusw1,w,c
 12927  00446C  E113               	bnz	u2660
 12928  00446E  0EE8               	movlw	-24
 12929  004470  50E3               	movf	plusw1,w,c
 12930  004472  E110               	bnz	u2660
 12931  004474  0EE9               	movlw	-23
 12932  004476  50E3               	movf	plusw1,w,c
 12933  004478  E10D               	bnz	u2660
 12934  00447A  0EEA               	movlw	-22
 12935  00447C  50E3               	movf	plusw1,w,c
 12936  00447E  E10A               	bnz	u2660
 12937  004480  0EEB               	movlw	-21
 12938  004482  50E3               	movf	plusw1,w,c
 12939  004484  E107               	bnz	u2660
 12940  004486  0EEC               	movlw	-20
 12941  004488  50E3               	movf	plusw1,w,c
 12942  00448A  E104               	bnz	u2660
 12943  00448C  0EED               	movlw	-19
 12944  00448E  50E3               	movf	plusw1,w,c
 12945  004490  B4D8               	btfsc	status,2,c
 12946  004492  D088               	goto	u2690
 12947  004494                     u2660:
 12948                           
 12949                           ;stkvar	_counter @ sp[(-10)+9]
 12950  004494  0EFF               	movlw	-1
 12951  004496  6AE3               	clrf	plusw1,c
 12952  004498  D012               	goto	L27
 12953  00449A                     l5555:
 12954                           
 12955                           ;stkvar	_divisor @ sp[(-10)+-16]
 12956  00449A  90D8               	bcf	status,0,c
 12957  00449C  0EE6               	movlw	-26
 12958  00449E  36E3               	rlcf	plusw1,f,c
 12959  0044A0  0EE7               	movlw	-25
 12960  0044A2  36E3               	rlcf	plusw1,f,c
 12961  0044A4  0EE8               	movlw	-24
 12962  0044A6  36E3               	rlcf	plusw1,f,c
 12963  0044A8  0EE9               	movlw	-23
 12964  0044AA  36E3               	rlcf	plusw1,f,c
 12965  0044AC  0EEA               	movlw	-22
 12966  0044AE  36E3               	rlcf	plusw1,f,c
 12967  0044B0  0EEB               	movlw	-21
 12968  0044B2  36E3               	rlcf	plusw1,f,c
 12969  0044B4  0EEC               	movlw	-20
 12970  0044B6  36E3               	rlcf	plusw1,f,c
 12971  0044B8  0EED               	movlw	-19
 12972  0044BA  36E3               	rlcf	plusw1,f,c
 12973                           
 12974                           ;stkvar	_counter @ sp[(-10)+9]
 12975  0044BC  0EFF               	movlw	-1
 12976  0044BE                     L27:
 12977  0044BE  2AE3               	incf	plusw1,f,c
 12978                           
 12979                           ;stkvar	_divisor @ sp[(-10)+-16]
 12980  0044C0  0EED               	movlw	-19
 12981  0044C2  AEE3               	btfss	plusw1,7,c
 12982  0044C4  D7EA               	goto	l5555
 12983  0044C6                     u2670:
 12984                           
 12985                           ;stkvar	_quotient @ sp[(-10)+0]
 12986  0044C6  90D8               	bcf	status,0,c
 12987  0044C8  0EF6               	movlw	-10
 12988  0044CA  36E3               	rlcf	plusw1,f,c
 12989  0044CC  0EF7               	movlw	-9
 12990  0044CE  36E3               	rlcf	plusw1,f,c
 12991  0044D0  0EF8               	movlw	-8
 12992  0044D2  36E3               	rlcf	plusw1,f,c
 12993  0044D4  0EF9               	movlw	-7
 12994  0044D6  36E3               	rlcf	plusw1,f,c
 12995  0044D8  0EFA               	movlw	-6
 12996  0044DA  36E3               	rlcf	plusw1,f,c
 12997  0044DC  0EFB               	movlw	-5
 12998  0044DE  36E3               	rlcf	plusw1,f,c
 12999  0044E0  0EFC               	movlw	-4
 13000  0044E2  36E3               	rlcf	plusw1,f,c
 13001  0044E4  0EFD               	movlw	-3
 13002  0044E6  36E3               	rlcf	plusw1,f,c
 13003                           
 13004                           ;stkvar	_divisor @ sp[(-10)+-16]
 13005                           ;stkvar	_dividend @ sp[(-10)+-8]
 13006  0044E8  50E1               	movf	fsr1l,w,c
 13007  0044EA  0FEE               	addlw	-18
 13008  0044EC  6ED9               	movwf	fsr2l,c
 13009  0044EE  50E2               	movf	fsr1h,w,c
 13010  0044F0  6EDA               	movwf	fsr2h,c
 13011  0044F2  0EFF               	movlw	255
 13012  0044F4  22DA               	addwfc	fsr2h,f,c
 13013  0044F6  0EE6               	movlw	-26
 13014  0044F8  50E3               	movf	plusw1,w,c
 13015  0044FA  5CDE               	subwf	postinc2,w,c
 13016  0044FC  0EE7               	movlw	-25
 13017  0044FE  50E3               	movf	plusw1,w,c
 13018  004500  58DE               	subwfb	postinc2,w,c
 13019  004502  0EE8               	movlw	-24
 13020  004504  50E3               	movf	plusw1,w,c
 13021  004506  58DE               	subwfb	postinc2,w,c
 13022  004508  0EE9               	movlw	-23
 13023  00450A  50E3               	movf	plusw1,w,c
 13024  00450C  58DE               	subwfb	postinc2,w,c
 13025  00450E  0EEA               	movlw	-22
 13026  004510  50E3               	movf	plusw1,w,c
 13027  004512  58DE               	subwfb	postinc2,w,c
 13028  004514  0EEB               	movlw	-21
 13029  004516  50E3               	movf	plusw1,w,c
 13030  004518  58DE               	subwfb	postinc2,w,c
 13031  00451A  0EEC               	movlw	-20
 13032  00451C  50E3               	movf	plusw1,w,c
 13033  00451E  58DE               	subwfb	postinc2,w,c
 13034  004520  0EED               	movlw	-19
 13035  004522  50E3               	movf	plusw1,w,c
 13036  004524  58DE               	subwfb	postinc2,w,c
 13037  004526  A0D8               	btfss	status,0,c
 13038  004528  D021               	goto	l5567
 13039                           
 13040                           ;stkvar	_divisor @ sp[(-10)+-16]
 13041                           ;stkvar	_dividend @ sp[(-10)+-8]
 13042  00452A  50E1               	movf	fsr1l,w,c
 13043  00452C  0FEE               	addlw	-18
 13044  00452E  6ED9               	movwf	fsr2l,c
 13045  004530  50E2               	movf	fsr1h,w,c
 13046  004532  6EDA               	movwf	fsr2h,c
 13047  004534  0EFF               	movlw	255
 13048  004536  22DA               	addwfc	fsr2h,f,c
 13049  004538  0EE6               	movlw	-26
 13050  00453A  50E3               	movf	plusw1,w,c
 13051  00453C  5EDE               	subwf	postinc2,f,c
 13052  00453E  0EE7               	movlw	-25
 13053  004540  50E3               	movf	plusw1,w,c
 13054  004542  5ADE               	subwfb	postinc2,f,c
 13055  004544  0EE8               	movlw	-24
 13056  004546  50E3               	movf	plusw1,w,c
 13057  004548  5ADE               	subwfb	postinc2,f,c
 13058  00454A  0EE9               	movlw	-23
 13059  00454C  50E3               	movf	plusw1,w,c
 13060  00454E  5ADE               	subwfb	postinc2,f,c
 13061  004550  0EEA               	movlw	-22
 13062  004552  50E3               	movf	plusw1,w,c
 13063  004554  5ADE               	subwfb	postinc2,f,c
 13064  004556  0EEB               	movlw	-21
 13065  004558  50E3               	movf	plusw1,w,c
 13066  00455A  5ADE               	subwfb	postinc2,f,c
 13067  00455C  0EEC               	movlw	-20
 13068  00455E  50E3               	movf	plusw1,w,c
 13069  004560  5ADE               	subwfb	postinc2,f,c
 13070  004562  0EED               	movlw	-19
 13071  004564  50E3               	movf	plusw1,w,c
 13072  004566  5ADE               	subwfb	postinc2,f,c
 13073                           
 13074                           ;stkvar	_quotient @ sp[(-10)+0]
 13075  004568  0EF6               	movlw	-10
 13076  00456A  80E3               	bsf	plusw1,0,c
 13077  00456C                     l5567:
 13078                           
 13079                           ;stkvar	_divisor @ sp[(-10)+-16]
 13080  00456C  90D8               	bcf	status,0,c
 13081  00456E  0EED               	movlw	-19
 13082  004570  32E3               	rrcf	plusw1,f,c
 13083  004572  0EEC               	movlw	-20
 13084  004574  32E3               	rrcf	plusw1,f,c
 13085  004576  0EEB               	movlw	-21
 13086  004578  32E3               	rrcf	plusw1,f,c
 13087  00457A  0EEA               	movlw	-22
 13088  00457C  32E3               	rrcf	plusw1,f,c
 13089  00457E  0EE9               	movlw	-23
 13090  004580  32E3               	rrcf	plusw1,f,c
 13091  004582  0EE8               	movlw	-24
 13092  004584  32E3               	rrcf	plusw1,f,c
 13093  004586  0EE7               	movlw	-25
 13094  004588  32E3               	rrcf	plusw1,f,c
 13095  00458A  0EE6               	movlw	-26
 13096  00458C  32E3               	rrcf	plusw1,f,c
 13097                           
 13098                           ;stkvar	_counter @ sp[(-10)+9]
 13099  00458E  0EFF               	movlw	-1
 13100  004590  50E3               	movf	plusw1,w,c
 13101  004592  6E3D               	movwf	btemp,c
 13102  004594  0E01               	movlw	1
 13103  004596  5E3D               	subwf	btemp,f,c
 13104  004598  0EFF               	movlw	-1
 13105  00459A  0060  F0F7  FFE3   	movff	btemp,plusw1
 13106  0045A0  A4D8               	btfss	status,2,c
 13107  0045A2  D791               	goto	u2670
 13108  0045A4                     u2690:
 13109                           
 13110                           ;stkvar	_sign @ sp[(-10)+8]
 13111  0045A4  0EFE               	movlw	-2
 13112  0045A6  50E3               	movf	plusw1,w,c
 13113  0045A8  B4D8               	btfsc	status,2,c
 13114  0045AA  D025               	goto	u2710
 13115                           
 13116                           ;stkvar	_quotient @ sp[(-10)+0]
 13117                           ;stkvar	_quotient @ sp[(-10)+0]
 13118  0045AC  0EF6               	movlw	-10
 13119  0045AE  6CE3               	negf	plusw1,c
 13120  0045B0  0EF7               	movlw	-9
 13121  0045B2  1EE3               	comf	plusw1,f,c
 13122  0045B4  0EF8               	movlw	-8
 13123  0045B6  1EE3               	comf	plusw1,f,c
 13124  0045B8  0EF9               	movlw	-7
 13125  0045BA  1EE3               	comf	plusw1,f,c
 13126  0045BC  0EFA               	movlw	-6
 13127  0045BE  1EE3               	comf	plusw1,f,c
 13128  0045C0  0EFB               	movlw	-5
 13129  0045C2  1EE3               	comf	plusw1,f,c
 13130  0045C4  0EFC               	movlw	-4
 13131  0045C6  1EE3               	comf	plusw1,f,c
 13132  0045C8  0EFD               	movlw	-3
 13133  0045CA  1EE3               	comf	plusw1,f,c
 13134  0045CC  E314               	bnc	u2710
 13135  0045CE  0EF7               	movlw	-9
 13136  0045D0  2AE3               	incf	plusw1,f,c
 13137  0045D2  E311               	bnc	u2710
 13138  0045D4  0EF8               	movlw	-8
 13139  0045D6  2AE3               	incf	plusw1,f,c
 13140  0045D8  E30E               	bnc	u2710
 13141  0045DA  0EF9               	movlw	-7
 13142  0045DC  2AE3               	incf	plusw1,f,c
 13143  0045DE  E30B               	bnc	u2710
 13144  0045E0  0EFA               	movlw	-6
 13145  0045E2  2AE3               	incf	plusw1,f,c
 13146  0045E4  E308               	bnc	u2710
 13147  0045E6  0EFB               	movlw	-5
 13148  0045E8  2AE3               	incf	plusw1,f,c
 13149  0045EA  E305               	bnc	u2710
 13150  0045EC  0EFC               	movlw	-4
 13151  0045EE  2AE3               	incf	plusw1,f,c
 13152  0045F0  E302               	bnc	u2710
 13153  0045F2  0EFD               	movlw	-3
 13154  0045F4  2AE3               	incf	plusw1,f,c
 13155  0045F6                     u2710:
 13156                           
 13157                           ;stkvar	_quotient @ sp[(-10)+0]
 13158  0045F6  0EF6               	movlw	246
 13159  0045F8  24E1               	addwf	fsr1l,w,c
 13160  0045FA  6ED9               	movwf	fsr2l,c
 13161  0045FC  0EFF               	movlw	255
 13162  0045FE  20E2               	addwfc	fsr1h,w,c
 13163  004600  6EDA               	movwf	fsr2h,c
 13164                           
 13165                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 13166  004602  0E08               	movlw	8
 13167  004604  6E3D               	movwf	btemp,c
 13168  004606  0EEE               	movlw	-18
 13169  004608                     us272999:
 13170  004608  006F FF7B FFE3     	movff	postinc2,plusw1
 13171  00460E  28E8               	incf	wreg,w,c
 13172  004610  2E3D               	decfsz	btemp,f,c
 13173  004612  D7FA               	bra	us272999
 13174                           
 13175                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 13176  004614  0EF6               	movlw	246
 13177  004616  26E1               	addwf	fsr1l,f,c
 13178  004618  0EFF               	movlw	255
 13179  00461A  22E2               	addwfc	fsr1h,f,c
 13180  00461C  0012               	return		;funcret
 13181  00461E                     __end_of___aodiv:
 13182                           	opt callstack 0
 13183                           
 13184 ;; *************** function _ctoa *****************
 13185 ;; Defined at:
 13186 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13189 ;;		 -> f(5), NULL(0), 
 13190 ;;  c               1  [STACK] unsigned char 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  w               2  [STACK] int 
 13193 ;;  l               2    0        int 
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  2  [STACK] int 
 13196 ;; Registers used:
 13197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13207 ;;Total ram usage:        0 bytes
 13208 ;; Hardware stack levels used:    1
 13209 ;; Hardware stack levels required when called:    8
 13210 ;; This function calls:
 13211 ;;		_pad
 13212 ;; This function is called by:
 13213 ;;		_vfpfcnvrt
 13214 ;; This function uses a reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text51
 13218  005BBC                     __ptext51:
 13219                           	opt callstack 0
 13220  005BBC                     _ctoa:
 13221                           	opt callstack 0
 13222                           
 13223                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13224  005BBC  52E6               	movf	postinc1,f,c
 13225  005BBE  52E6               	movf	postinc1,f,c
 13226                           
 13227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 13228                           
 13229                           ;incstack = 0
 13230  005BC0  501D               	movf	_width,w,c
 13231  005BC2  101E               	iorwf	_width+1,w,c
 13232  005BC4  A4D8               	btfss	status,2,c
 13233  005BC6  D009               	goto	l8429
 13234                           
 13235                           ;stkvar	_w @ sp[(-2)+0]
 13236  005BC8  0EFE               	movlw	-2
 13237  005BCA  0060  F077  FFE3   	movff	_width,plusw1
 13238  005BD0  0EFF               	movlw	-1
 13239  005BD2  0060  F07B  FFE3   	movff	_width+1,plusw1
 13240  005BD8  D016               	goto	l8431
 13241  005BDA                     l8429:
 13242  005BDA  0EFF               	movlw	255
 13243  005BDC  6E47               	movwf	btemp+10,c
 13244  005BDE  0EFF               	movlw	255
 13245  005BE0  6E48               	movwf	btemp+11,c
 13246  005BE2  0060  F074  F045   	movff	_width,btemp+8
 13247  005BE8  0060  F078  F046   	movff	_width+1,btemp+9
 13248  005BEE  5047               	movf	btemp+10,w,c
 13249  005BF0  2645               	addwf	btemp+8,f,c
 13250  005BF2  5048               	movf	btemp+11,w,c
 13251  005BF4  2246               	addwfc	btemp+9,f,c
 13252                           
 13253                           ;stkvar	_w @ sp[(-2)+0]
 13254  005BF6  0EFE               	movlw	-2
 13255  005BF8  0060  F117  FFE3   	movff	btemp+8,plusw1
 13256  005BFE  0EFF               	movlw	-1
 13257  005C00  0060  F11B  FFE3   	movff	btemp+9,plusw1
 13258  005C06                     l8431:
 13259                           
 13260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 13261                           ;stkvar	_c @ sp[(-2)+-3]
 13262  005C06  0EFB               	movlw	-5
 13263  005C08  006F FF8C  F1CE    	movff	plusw1,_dbuf
 13264                           
 13265                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 13266  005C0E  0101               	movlb	1	; () banked
 13267  005C10  6BCF               	clrf	(_dbuf+1)& (0+255),b
 13268                           
 13269                           ; BSR set to: 1
 13270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 13271                           ;stkvar	_w @ sp[(-2)+0]
 13272  005C12  0EFE               	movlw	-2
 13273  005C14  006F FF8F FFE6     	movff	plusw1,postinc1
 13274  005C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 13275  005C20  0ECE               	movlw	low _dbuf
 13276  005C22  6EE6               	movwf	postinc1,c
 13277  005C24  0E01               	movlw	high _dbuf
 13278  005C26  6EE6               	movwf	postinc1,c
 13279                           
 13280                           ;stkvar	_fp @ sp[(-6)+-2]
 13281  005C28  0EF8               	movlw	-8
 13282  005C2A  006F FF8F FFE6     	movff	plusw1,postinc1
 13283  005C30  006F FF8F FFE6     	movff	plusw1,postinc1
 13284  005C36  ECF6  F027         	call	_pad	;wreg free
 13285                           
 13286                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 13287  005C3A  0EFB               	movlw	251
 13288  005C3C  26E1               	addwf	fsr1l,f,c
 13289  005C3E  0EFF               	movlw	255
 13290  005C40  22E2               	addwfc	fsr1h,f,c
 13291  005C42  0012               	return		;funcret
 13292  005C44                     __end_of_ctoa:
 13293                           	opt callstack 0
 13294                           
 13295 ;; *************** function _pad *****************
 13296 ;; Defined at:
 13297 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 13298 ;; Parameters:    Size  Location     Type
 13299 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13300 ;;		 -> f(5), NULL(0), 
 13301 ;;  buf             2  [STACK] PTR unsigned char 
 13302 ;;		 -> dbuf(32), 
 13303 ;;  p               2  [STACK] int 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;  w               2  [STACK] int 
 13306 ;;  i               2  [STACK] int 
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  2  [STACK] int 
 13309 ;; Registers used:
 13310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/1
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13320 ;;Total ram usage:        0 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:    7
 13323 ;; This function calls:
 13324 ;;		_fputc
 13325 ;;		_fputs
 13326 ;;		_strlen
 13327 ;; This function is called by:
 13328 ;;		_ctoa
 13329 ;;		_dtoa
 13330 ;; This function uses a reentrant model
 13331 ;;
 13332                           
 13333                           	psect	text52
 13334  004FEC                     __ptext52:
 13335                           	opt callstack 0
 13336  004FEC                     _pad:
 13337                           	opt callstack 0
 13338                           
 13339                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13340  004FEC  52E6               	movf	postinc1,f,c
 13341  004FEE  52E6               	movf	postinc1,f,c
 13342  004FF0  52E6               	movf	postinc1,f,c
 13343  004FF2  52E6               	movf	postinc1,f,c
 13344                           
 13345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 13346                           
 13347                           ;incstack = 0
 13348  004FF4  A021               	btfss	_flags,0,c
 13349  004FF6  D010               	goto	l8407
 13350                           
 13351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 13352                           ;stkvar	_fp @ sp[(-4)+-2]
 13353  004FF8  0EFA               	movlw	-6
 13354  004FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 13355  005000  006F FF8F FFE6     	movff	plusw1,postinc1
 13356                           
 13357                           ;stkvar	_buf @ sp[(-6)+-4]
 13358  005006  0EF6               	movlw	-10
 13359  005008  006F FF8F FFE6     	movff	plusw1,postinc1
 13360  00500E  006F FF8F FFE6     	movff	plusw1,postinc1
 13361  005014  EC49  F02D         	call	_fputs	;wreg free
 13362  005018                     l8407:
 13363                           
 13364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 13365                           ;stkvar	_p @ sp[(-4)+-6]
 13366  005018  0EF7               	movlw	-9
 13367  00501A  BEE3               	btfsc	plusw1,7,c
 13368  00501C  D011               	goto	l8411
 13369                           
 13370                           ;stkvar	_p @ sp[(-4)+-6]
 13371                           ;stkvar	_w @ sp[(-4)+0]
 13372  00501E  0EF6               	movlw	-10
 13373  005020  006F FF8C  F03D    	movff	plusw1,btemp
 13374  005026  0EFC               	movlw	-4
 13375  005028  0060  F0F7  FFE3   	movff	btemp,plusw1
 13376  00502E  0EF7               	movlw	-9
 13377  005030  006F FF8C  F03D    	movff	plusw1,btemp
 13378  005036  0EFD               	movlw	-3
 13379  005038  0060  F0F7  FFE3   	movff	btemp,plusw1
 13380  00503E  D004               	goto	l1883
 13381  005040                     l8411:
 13382                           
 13383                           ;stkvar	_w @ sp[(-4)+0]
 13384  005040  0EFC               	movlw	-4
 13385  005042  6AE3               	clrf	plusw1,c
 13386  005044  0EFD               	movlw	-3
 13387  005046  6AE3               	clrf	plusw1,c
 13388  005048                     l1883:
 13389                           
 13390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 13391                           ;stkvar	_i @ sp[(-4)+2]
 13392  005048  0EFE               	movlw	-2
 13393  00504A  6AE3               	clrf	plusw1,c
 13394  00504C  0EFF               	movlw	-1
 13395  00504E  6AE3               	clrf	plusw1,c
 13396                           
 13397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 13398  005050  D01E               	goto	l8417
 13399  005052                     l8413:
 13400                           
 13401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 13402                           ;stkvar	_fp @ sp[(-4)+-2]
 13403  005052  0EFA               	movlw	-6
 13404  005054  006F FF8F FFE6     	movff	plusw1,postinc1
 13405  00505A  006F FF8F FFE6     	movff	plusw1,postinc1
 13406  005060  0E20               	movlw	32
 13407  005062  6EE6               	movwf	postinc1,c
 13408  005064  0E00               	movlw	0
 13409  005066  6EE6               	movwf	postinc1,c
 13410  005068  EC80  F028         	call	_fputc	;wreg free
 13411                           
 13412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 13413                           ;stkvar	_i @ sp[(-4)+2]
 13414  00506C  0EFE               	movlw	-2
 13415  00506E  50E3               	movf	plusw1,w,c
 13416  005070  0F01               	addlw	1
 13417  005072  6E3D               	movwf	btemp,c
 13418  005074  0EFE               	movlw	-2
 13419  005076  0060  F0F7  FFE3   	movff	btemp,plusw1
 13420  00507C  6A3D               	clrf	btemp,c
 13421  00507E  0EFF               	movlw	-1
 13422  005080  50E3               	movf	plusw1,w,c
 13423  005082  203D               	addwfc	btemp,w,c
 13424  005084  6E3D               	movwf	btemp,c
 13425  005086  0EFF               	movlw	-1
 13426  005088  0060  F0F7  FFE3   	movff	btemp,plusw1
 13427  00508E                     l8417:
 13428                           
 13429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 13430                           ;stkvar	_w @ sp[(-4)+0]
 13431                           ;stkvar	_i @ sp[(-4)+2]
 13432  00508E  50E1               	movf	fsr1l,w,c
 13433  005090  0FFE               	addlw	-2
 13434  005092  6ED9               	movwf	fsr2l,c
 13435  005094  50E2               	movf	fsr1h,w,c
 13436  005096  6EDA               	movwf	fsr2h,c
 13437  005098  0EFF               	movlw	255
 13438  00509A  22DA               	addwfc	fsr2h,f,c
 13439  00509C  0EFC               	movlw	-4
 13440  00509E  50E3               	movf	plusw1,w,c
 13441  0050A0  5CDE               	subwf	postinc2,w,c
 13442  0050A2  50DE               	movf	postinc2,w,c
 13443  0050A4  0A80               	xorlw	128
 13444  0050A6  6E3D               	movwf	btemp,c
 13445  0050A8  0EFD               	movlw	-3
 13446  0050AA  50E3               	movf	plusw1,w,c
 13447  0050AC  0A80               	xorlw	128
 13448  0050AE  583D               	subwfb	btemp,w,c
 13449  0050B0  A0D8               	btfss	status,0,c
 13450  0050B2  D7CF               	goto	l8413
 13451                           
 13452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 13453  0050B4  B021               	btfsc	_flags,0,c
 13454  0050B6  D010               	goto	l8421
 13455                           
 13456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 13457                           ;stkvar	_fp @ sp[(-4)+-2]
 13458  0050B8  0EFA               	movlw	-6
 13459  0050BA  006F FF8F FFE6     	movff	plusw1,postinc1
 13460  0050C0  006F FF8F FFE6     	movff	plusw1,postinc1
 13461                           
 13462                           ;stkvar	_buf @ sp[(-6)+-4]
 13463  0050C6  0EF6               	movlw	-10
 13464  0050C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13465  0050CE  006F FF8F FFE6     	movff	plusw1,postinc1
 13466  0050D4  EC49  F02D         	call	_fputs	;wreg free
 13467  0050D8                     l8421:
 13468                           
 13469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 13470                           ;stkvar	_w @ sp[(-4)+0]
 13471                           ;stkvar	_buf @ sp[(-4)+-4]
 13472  0050D8  0EF8               	movlw	-8
 13473  0050DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13474  0050E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13475  0050E6  EC5D  F02C         	call	_strlen	;wreg free
 13476  0050EA  0EFC               	movlw	-4
 13477  0050EC  50E3               	movf	plusw1,w,c
 13478  0050EE  263D               	addwf	btemp,f,c
 13479  0050F0  0EFD               	movlw	-3
 13480  0050F2  50E3               	movf	plusw1,w,c
 13481  0050F4  223E               	addwfc	btemp+1,f,c
 13482                           
 13483                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 13484  0050F6  0EF6               	movlw	246
 13485  0050F8  26E1               	addwf	fsr1l,f,c
 13486  0050FA  0EFF               	movlw	255
 13487  0050FC  22E2               	addwfc	fsr1h,f,c
 13488  0050FE  0012               	return		;funcret
 13489  005100                     __end_of_pad:
 13490                           	opt callstack 0
 13491                           
 13492 ;; *************** function _strlen *****************
 13493 ;; Defined at:
 13494 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;  s               2  [STACK] PTR const unsigned char 
 13497 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 13498 ;;		 -> STR_3(6), V(98), 
 13499 ;; Auto vars:     Size  Location     Type
 13500 ;;  a               2  [STACK] PTR const unsigned char 
 13501 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 13502 ;;		 -> STR_3(6), V(98), 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  2  [STACK] unsigned int 
 13505 ;; Registers used:
 13506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13516 ;;Total ram usage:        0 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:    3
 13519 ;; This function calls:
 13520 ;;		Nothing
 13521 ;; This function is called by:
 13522 ;;		_eaDogM_WriteString
 13523 ;;		_pad
 13524 ;;		_stoa
 13525 ;; This function uses a reentrant model
 13526 ;;
 13527                           
 13528                           	psect	text53
 13529  0058BA                     __ptext53:
 13530                           	opt callstack 0
 13531  0058BA                     _strlen:
 13532                           	opt callstack 0
 13533                           
 13534                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13535  0058BA  52E6               	movf	postinc1,f,c
 13536  0058BC  52E6               	movf	postinc1,f,c
 13537                           
 13538                           ;stkvar	_s @ sp[(-2)+-2]
 13539                           
 13540                           ;incstack = 0
 13541  0058BE  0EFC               	movlw	-4
 13542  0058C0  006F FF8C  F047    	movff	plusw1,btemp+10
 13543  0058C6  0EFD               	movlw	-3
 13544  0058C8  006F FF8C  F048    	movff	plusw1,btemp+11
 13545                           
 13546                           ;stkvar	_a @ sp[(-2)+0]
 13547  0058CE  0EFF               	movlw	-1
 13548  0058D0  0060  F123  FFE3   	movff	btemp+11,plusw1
 13549  0058D6  0EFE               	movlw	-2
 13550  0058D8  0060  F11F  FFE3   	movff	btemp+10,plusw1
 13551  0058DE  D011               	goto	l8389
 13552  0058E0                     l8387:
 13553                           
 13554                           ;stkvar	_s @ sp[(-2)+-2]
 13555  0058E0  0EFC               	movlw	-4
 13556  0058E2  50E3               	movf	plusw1,w,c
 13557  0058E4  0F01               	addlw	1
 13558  0058E6  6E3D               	movwf	btemp,c
 13559  0058E8  0EFC               	movlw	-4
 13560  0058EA  0060  F0F7  FFE3   	movff	btemp,plusw1
 13561  0058F0  6A3D               	clrf	btemp,c
 13562  0058F2  0EFD               	movlw	-3
 13563  0058F4  50E3               	movf	plusw1,w,c
 13564  0058F6  203D               	addwfc	btemp,w,c
 13565  0058F8  6E3D               	movwf	btemp,c
 13566  0058FA  0EFD               	movlw	-3
 13567  0058FC  0060  F0F7  FFE3   	movff	btemp,plusw1
 13568  005902                     l8389:
 13569                           
 13570                           ;stkvar	_s @ sp[(-2)+-2]
 13571  005902  0EFC               	movlw	-4
 13572  005904  006F FF8F FFF6     	movff	plusw1,tblptrl
 13573  00590A  0EFD               	movlw	-3
 13574  00590C  006F FF8F FFF7     	movff	plusw1,tblptrh
 13575  005912  0E00               	movlw	low (__smallconst shr (0+16))
 13576  005914  6EF8               	movwf	tblptru,c
 13577  005916  0E1F               	movlw	(high __ramtop+-1)
 13578  005918  64F7               	cpfsgt	tblptrh,c
 13579  00591A  D003               	bra	u4947
 13580  00591C  0008               	tblrd		*
 13581  00591E  50F5               	movf	tablat,w,c
 13582  005920  D007               	bra	u4940
 13583  005922                     u4947:
 13584  005922  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13585  005928  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13586  00592E  50EF               	movf	indf0,w,c
 13587  005930                     u4940:
 13588  005930  0900               	iorlw	0
 13589  005932  A4D8               	btfss	status,2,c
 13590  005934  D7D5               	goto	l8387
 13591                           
 13592                           ;stkvar	_a @ sp[(-2)+0]
 13593                           ;stkvar	_s @ sp[(-2)+-2]
 13594  005936  0EFC               	movlw	-4
 13595  005938  006F FF8C  F03D    	movff	plusw1,btemp
 13596  00593E  0EFD               	movlw	-3
 13597  005940  006F FF8C  F03E    	movff	plusw1,btemp+1
 13598  005946  0EFE               	movlw	-2
 13599  005948  50E3               	movf	plusw1,w,c
 13600  00594A  5E3D               	subwf	btemp,f,c
 13601  00594C  0EFF               	movlw	-1
 13602  00594E  50E3               	movf	plusw1,w,c
 13603  005950  5A3E               	subwfb	btemp+1,f,c
 13604                           
 13605                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13606  005952  52E5               	movf	postdec1,f,c
 13607  005954  52E5               	movf	postdec1,f,c
 13608  005956  52E5               	movf	postdec1,f,c
 13609  005958  52E5               	movf	postdec1,f,c
 13610  00595A  0012               	return		;funcret
 13611  00595C                     __end_of_strlen:
 13612                           	opt callstack 0
 13613                           
 13614 ;; *************** function _fputs *****************
 13615 ;; Defined at:
 13616 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 13617 ;; Parameters:    Size  Location     Type
 13618 ;;  s               2  [STACK] PTR const unsigned char 
 13619 ;;		 -> dbuf(32), 
 13620 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13621 ;;		 -> f(5), NULL(0), 
 13622 ;; Auto vars:     Size  Location     Type
 13623 ;;  i               2  [STACK] int 
 13624 ;;  c               1  [STACK] unsigned char 
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  2  [STACK] int 
 13627 ;; Registers used:
 13628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/1
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13638 ;;Total ram usage:        0 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    6
 13641 ;; This function calls:
 13642 ;;		_fputc
 13643 ;; This function is called by:
 13644 ;;		_pad
 13645 ;; This function uses a reentrant model
 13646 ;;
 13647                           
 13648                           	psect	text54
 13649  005A92                     __ptext54:
 13650                           	opt callstack 0
 13651  005A92                     _fputs:
 13652                           	opt callstack 0
 13653                           
 13654                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13655  005A92  52E6               	movf	postinc1,f,c
 13656  005A94  52E6               	movf	postinc1,f,c
 13657  005A96  52E6               	movf	postinc1,f,c
 13658                           
 13659                           ;stkvar	_i @ sp[(-3)+0]
 13660                           
 13661                           ;incstack = 0
 13662  005A98  0EFD               	movlw	-3
 13663  005A9A  6AE3               	clrf	plusw1,c
 13664  005A9C  0EFE               	movlw	-2
 13665  005A9E  6AE3               	clrf	plusw1,c
 13666  005AA0  D01F               	goto	l8401
 13667  005AA2                     l8397:
 13668                           
 13669                           ;stkvar	_fp @ sp[(-3)+-4]
 13670  005AA2  0EF9               	movlw	-7
 13671  005AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 13672  005AAA  006F FF8F FFE6     	movff	plusw1,postinc1
 13673                           
 13674                           ;stkvar	_c @ sp[(-5)+2]
 13675  005AB0  0EFD               	movlw	-3
 13676  005AB2  50E3               	movf	plusw1,w,c
 13677  005AB4  6EE6               	movwf	postinc1,c
 13678  005AB6  0E00               	movlw	0
 13679  005AB8  6EE6               	movwf	postinc1,c
 13680  005ABA  EC80  F028         	call	_fputc	;wreg free
 13681                           
 13682                           ;stkvar	_i @ sp[(-3)+0]
 13683  005ABE  0EFD               	movlw	-3
 13684  005AC0  50E3               	movf	plusw1,w,c
 13685  005AC2  0F01               	addlw	1
 13686  005AC4  6E3D               	movwf	btemp,c
 13687  005AC6  0EFD               	movlw	-3
 13688  005AC8  0060  F0F7  FFE3   	movff	btemp,plusw1
 13689  005ACE  6A3D               	clrf	btemp,c
 13690  005AD0  0EFE               	movlw	-2
 13691  005AD2  50E3               	movf	plusw1,w,c
 13692  005AD4  203D               	addwfc	btemp,w,c
 13693  005AD6  6E3D               	movwf	btemp,c
 13694  005AD8  0EFE               	movlw	-2
 13695  005ADA  0060  F0F7  FFE3   	movff	btemp,plusw1
 13696  005AE0                     l8401:
 13697                           
 13698                           ;stkvar	_i @ sp[(-3)+0]
 13699  005AE0  0EFD               	movlw	-3
 13700  005AE2  006F FF8C  F047    	movff	plusw1,btemp+10
 13701  005AE8  0EFE               	movlw	-2
 13702  005AEA  006F FF8C  F048    	movff	plusw1,btemp+11
 13703                           
 13704                           ;stkvar	_s @ sp[(-3)+-2]
 13705  005AF0  0EFB               	movlw	-5
 13706  005AF2  006F FF8C  F045    	movff	plusw1,btemp+8
 13707  005AF8  0EFC               	movlw	-4
 13708  005AFA  006F FF8C  F046    	movff	plusw1,btemp+9
 13709  005B00  5047               	movf	btemp+10,w,c
 13710  005B02  2445               	addwf	btemp+8,w,c
 13711  005B04  6ED9               	movwf	fsr2l,c
 13712  005B06  5048               	movf	btemp+11,w,c
 13713  005B08  2046               	addwfc	btemp+9,w,c
 13714  005B0A  6EDA               	movwf	fsr2h,c
 13715  005B0C  50DF               	movf	indf2,w,c
 13716  005B0E  6E48               	movwf	btemp+11,c
 13717                           
 13718                           ;stkvar	_c @ sp[(-3)+2]
 13719  005B10  0EFF               	movlw	-1
 13720  005B12  0060  F123  FFE3   	movff	btemp+11,plusw1
 13721  005B18  0EFF               	movlw	-1
 13722  005B1A  50E3               	movf	plusw1,w,c
 13723  005B1C  A4D8               	btfss	status,2,c
 13724  005B1E  D7C1               	goto	l8397
 13725                           
 13726                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13727  005B20  0EF9               	movlw	249
 13728  005B22  26E1               	addwf	fsr1l,f,c
 13729  005B24  0EFF               	movlw	255
 13730  005B26  22E2               	addwfc	fsr1h,f,c
 13731  005B28  0012               	return		;funcret
 13732  005B2A                     __end_of_fputs:
 13733                           	opt callstack 0
 13734                           
 13735 ;; *************** function _fputc *****************
 13736 ;; Defined at:
 13737 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  c               2  [STACK] int 
 13740 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13741 ;;		 -> f(5), NULL(0), 
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;		None
 13744 ;; Return value:  Size  Location     Type
 13745 ;;                  2  [STACK] int 
 13746 ;; Registers used:
 13747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13748 ;; Tracked objects:
 13749 ;;		On entry : 0/0
 13750 ;;		On exit  : 0/0
 13751 ;;		Unchanged: 0/0
 13752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13757 ;;Total ram usage:        0 bytes
 13758 ;; Hardware stack levels used:    1
 13759 ;; Hardware stack levels required when called:    5
 13760 ;; This function calls:
 13761 ;;		_putch
 13762 ;; This function is called by:
 13763 ;;		_pad
 13764 ;;		_stoa
 13765 ;;		_vfpfcnvrt
 13766 ;;		_fputs
 13767 ;; This function uses a reentrant model
 13768 ;;
 13769                           
 13770                           	psect	text55
 13771  005100                     __ptext55:
 13772                           	opt callstack 0
 13773  005100                     _fputc:
 13774                           	opt callstack 21
 13775                           
 13776                           ;stkvar	_fp @ sp[(0)+-4]
 13777                           
 13778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13779                           ;incstack = 0
 13780  005100  0EFC               	movlw	-4
 13781  005102  006F FF8C  F03D    	movff	plusw1,btemp
 13782  005108  0EFD               	movlw	-3
 13783  00510A  50E3               	movf	plusw1,w,c
 13784  00510C  103D               	iorwf	btemp,w,c
 13785  00510E  B4D8               	btfsc	status,2,c
 13786  005110  D009               	goto	u4910
 13787                           
 13788                           ;stkvar	_fp @ sp[(0)+-4]
 13789  005112  0EFC               	movlw	-4
 13790  005114  006F FF8C  F03D    	movff	plusw1,btemp
 13791  00511A  0EFD               	movlw	-3
 13792  00511C  50E3               	movf	plusw1,w,c
 13793  00511E  103D               	iorwf	btemp,w,c
 13794  005120  A4D8               	btfss	status,2,c
 13795  005122  D006               	goto	l8377
 13796  005124                     u4910:
 13797                           
 13798                           ;stkvar	_c @ sp[(0)+-2]
 13799  005124  0EFE               	movlw	-2
 13800  005126  50E3               	movf	plusw1,w,c
 13801  005128  6EE6               	movwf	postinc1,c
 13802  00512A  ECAA  F034         	call	_putch	;wreg free
 13803  00512E  D069               	goto	l2666
 13804  005130                     l8377:
 13805                           
 13806                           ;stkvar	_fp @ sp[(0)+-4]
 13807  005130  0EFC               	movlw	-4
 13808  005132  006F FF8C  F047    	movff	plusw1,btemp+10
 13809  005138  0EFD               	movlw	-3
 13810  00513A  006F FF8C  F048    	movff	plusw1,btemp+11
 13811  005140  0E03               	movlw	3
 13812  005142  2447               	addwf	btemp+10,w,c
 13813  005144  6ED9               	movwf	fsr2l,c
 13814  005146  0E00               	movlw	0
 13815  005148  2048               	addwfc	btemp+11,w,c
 13816  00514A  6EDA               	movwf	fsr2h,c
 13817  00514C  50DE               	movf	postinc2,w,c
 13818  00514E  10DE               	iorwf	postinc2,w,c
 13819  005150  B4D8               	btfsc	status,2,c
 13820  005152  D026               	goto	u4930
 13821                           
 13822                           ;stkvar	_fp @ sp[(0)+-4]
 13823  005154  0EFC               	movlw	-4
 13824  005156  006F FF8C  F047    	movff	plusw1,btemp+10
 13825  00515C  0EFD               	movlw	-3
 13826  00515E  006F FF8C  F048    	movff	plusw1,btemp+11
 13827  005164  0E03               	movlw	3
 13828  005166  2447               	addwf	btemp+10,w,c
 13829  005168  6ED9               	movwf	fsr2l,c
 13830  00516A  0E00               	movlw	0
 13831  00516C  2048               	addwfc	btemp+11,w,c
 13832  00516E  6EDA               	movwf	fsr2h,c
 13833                           
 13834                           ;stkvar	_fp @ sp[(0)+-4]
 13835  005170  0EFC               	movlw	-4
 13836  005172  006F FF8C  F047    	movff	plusw1,btemp+10
 13837  005178  0EFD               	movlw	-3
 13838  00517A  006F FF8C  F048    	movff	plusw1,btemp+11
 13839  005180  0E01               	movlw	1
 13840  005182  2447               	addwf	btemp+10,w,c
 13841  005184  6EE9               	movwf	fsr0l,c
 13842  005186  0E00               	movlw	0
 13843  005188  2048               	addwfc	btemp+11,w,c
 13844  00518A  6EEA               	movwf	fsr0h,c
 13845  00518C  50DE               	movf	postinc2,w,c
 13846  00518E  5CEE               	subwf	postinc0,w,c
 13847  005190  50EE               	movf	postinc0,w,c
 13848  005192  0A80               	xorlw	128
 13849  005194  6E3D               	movwf	btemp,c
 13850  005196  50DE               	movf	postinc2,w,c
 13851  005198  0A80               	xorlw	128
 13852  00519A  583D               	subwfb	btemp,w,c
 13853  00519C  B0D8               	btfsc	status,0,c
 13854  00519E  D031               	goto	l2666
 13855  0051A0                     u4930:
 13856                           
 13857                           ;stkvar	_c @ sp[(0)+-2]
 13858                           ;stkvar	_fp @ sp[(0)+-4]
 13859  0051A0  0EFC               	movlw	-4
 13860  0051A2  006F FF8C  F047    	movff	plusw1,btemp+10
 13861  0051A8  0EFD               	movlw	-3
 13862  0051AA  006F FF8C  F048    	movff	plusw1,btemp+11
 13863  0051B0  0E01               	movlw	1
 13864  0051B2  2447               	addwf	btemp+10,w,c
 13865  0051B4  6ED9               	movwf	fsr2l,c
 13866  0051B6  0E00               	movlw	0
 13867  0051B8  2048               	addwfc	btemp+11,w,c
 13868  0051BA  6EDA               	movwf	fsr2h,c
 13869  0051BC  50DF               	movf	indf2,w,c
 13870  0051BE  6E48               	movwf	btemp+11,c
 13871                           
 13872                           ;stkvar	_fp @ sp[(0)+-4]
 13873  0051C0  0EFC               	movlw	-4
 13874  0051C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13875  0051C8  0EFD               	movlw	-3
 13876  0051CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13877  0051D0  50DF               	movf	indf2,w,c
 13878  0051D2  2448               	addwf	btemp+11,w,c
 13879  0051D4  6ED9               	movwf	fsr2l,c
 13880  0051D6  6ADA               	clrf	fsr2h,c
 13881  0051D8  0EFE               	movlw	-2
 13882  0051DA  006F FF8F FFDF     	movff	plusw1,indf2
 13883                           
 13884                           ;stkvar	_fp @ sp[(0)+-4]
 13885  0051E0  0EFC               	movlw	-4
 13886  0051E2  006F FF8C  F047    	movff	plusw1,btemp+10
 13887  0051E8  0EFD               	movlw	-3
 13888  0051EA  006F FF8C  F048    	movff	plusw1,btemp+11
 13889  0051F0  0E01               	movlw	1
 13890  0051F2  2447               	addwf	btemp+10,w,c
 13891  0051F4  6ED9               	movwf	fsr2l,c
 13892  0051F6  0E00               	movlw	0
 13893  0051F8  2048               	addwfc	btemp+11,w,c
 13894  0051FA  6EDA               	movwf	fsr2h,c
 13895  0051FC  2ADE               	incf	postinc2,f,c
 13896  0051FE  0E00               	movlw	0
 13897  005200  22DD               	addwfc	postdec2,f,c
 13898  005202                     l2666:
 13899                           
 13900                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13901  005202  52E5               	movf	postdec1,f,c
 13902  005204  52E5               	movf	postdec1,f,c
 13903  005206  52E5               	movf	postdec1,f,c
 13904  005208  52E5               	movf	postdec1,f,c
 13905  00520A  0012               	return		;funcret
 13906  00520C                     __end_of_fputc:
 13907                           	opt callstack 0
 13908                           
 13909 ;; *************** function _putch *****************
 13910 ;; Defined at:
 13911 ;;		line 138 in file "eadog.c"
 13912 ;; Parameters:    Size  Location     Type
 13913 ;;  c               1  [STACK] unsigned char 
 13914 ;; Auto vars:     Size  Location     Type
 13915 ;;		None
 13916 ;; Return value:  Size  Location     Type
 13917 ;;                  1  [STACK] void 
 13918 ;; Registers used:
 13919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13920 ;; Tracked objects:
 13921 ;;		On entry : 0/0
 13922 ;;		On exit  : 0/0
 13923 ;;		Unchanged: 0/0
 13924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13929 ;;Total ram usage:        0 bytes
 13930 ;; Hardware stack levels used:    1
 13931 ;; Hardware stack levels required when called:    4
 13932 ;; This function calls:
 13933 ;;		_ringBufS_put_dma
 13934 ;; This function is called by:
 13935 ;;		_fputc
 13936 ;; This function uses a reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text56
 13940  006954                     __ptext56:
 13941                           	opt callstack 0
 13942  006954                     _putch:
 13943                           	opt callstack 21
 13944                           
 13945                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 13946                           ;stkvar	_c @ sp[(0)+-1]
 13947                           
 13948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13949                           ;incstack = 0
 13950  006954  0EFF               	movlw	-1
 13951  006956  50E3               	movf	plusw1,w,c
 13952  006958  6EE6               	movwf	postinc1,c
 13953  00695A  0060  F357  FFE6   	movff	_spi_link+6,postinc1
 13954  006960  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
 13955  006966  ECB6  F02B         	call	_ringBufS_put_dma	;wreg free
 13956                           
 13957                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 13958  00696A  52E5               	movf	postdec1,f,c
 13959  00696C  0012               	return		;funcret
 13960  00696E                     __end_of_putch:
 13961                           	opt callstack 0
 13962                           
 13963 ;; *************** function _ringBufS_put_dma *****************
 13964 ;; Defined at:
 13965 ;;		line 67 in file "ringbufs.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;  _this           2  [STACK] PTR struct ringBufS_t
 13968 ;;		 -> ring_buf1(67), 
 13969 ;;  c               1  [STACK] const unsigned char 
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1  [STACK] void 
 13974 ;; Registers used:
 13975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13985 ;;Total ram usage:        0 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:    3
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_putch
 13992 ;; This function uses a reentrant model
 13993 ;;
 13994                           
 13995                           	psect	text57
 13996  00576C                     __ptext57:
 13997                           	opt callstack 0
 13998  00576C                     _ringBufS_put_dma:
 13999                           	opt callstack 21
 14000                           
 14001                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 14002                           ;stkvar	__this @ sp[(0)+-2]
 14003                           
 14004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14005                           ;incstack = 0
 14006  00576C  0EFE               	movlw	-2
 14007  00576E  006F FF8C  F047    	movff	plusw1,btemp+10
 14008  005774  0EFF               	movlw	-1
 14009  005776  006F FF8C  F048    	movff	plusw1,btemp+11
 14010  00577C  0E42               	movlw	66
 14011  00577E  2447               	addwf	btemp+10,w,c
 14012  005780  6ED9               	movwf	fsr2l,c
 14013  005782  0E00               	movlw	0
 14014  005784  2048               	addwfc	btemp+11,w,c
 14015  005786  6EDA               	movwf	fsr2h,c
 14016  005788  0E40               	movlw	64
 14017  00578A  60DF               	cpfslt	indf2,c
 14018  00578C  D040               	goto	l1505
 14019                           
 14020                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 14021                           ;stkvar	_c @ sp[(0)+-3]
 14022                           ;stkvar	__this @ sp[(0)+-2]
 14023  00578E  0EFE               	movlw	-2
 14024  005790  006F FF8C  F047    	movff	plusw1,btemp+10
 14025  005796  0EFF               	movlw	-1
 14026  005798  006F FF8C  F048    	movff	plusw1,btemp+11
 14027  00579E  0E40               	movlw	64
 14028  0057A0  2447               	addwf	btemp+10,w,c
 14029  0057A2  6ED9               	movwf	fsr2l,c
 14030  0057A4  0E00               	movlw	0
 14031  0057A6  2048               	addwfc	btemp+11,w,c
 14032  0057A8  6EDA               	movwf	fsr2h,c
 14033  0057AA  50DF               	movf	indf2,w,c
 14034  0057AC  6E48               	movwf	btemp+11,c
 14035                           
 14036                           ;stkvar	__this @ sp[(0)+-2]
 14037  0057AE  0EFE               	movlw	-2
 14038  0057B0  006F FF8C  F045    	movff	plusw1,btemp+8
 14039  0057B6  0EFF               	movlw	-1
 14040  0057B8  006F FF8C  F046    	movff	plusw1,btemp+9
 14041  0057BE  5048               	movf	btemp+11,w,c
 14042  0057C0  2445               	addwf	btemp+8,w,c
 14043  0057C2  6ED9               	movwf	fsr2l,c
 14044  0057C4  0E00               	movlw	0
 14045  0057C6  2046               	addwfc	btemp+9,w,c
 14046  0057C8  6EDA               	movwf	fsr2h,c
 14047  0057CA  0EFD               	movlw	-3
 14048  0057CC  006F FF8F FFDF     	movff	plusw1,indf2
 14049                           
 14050                           ;ringbufs.c: 71:   ++_this->head;
 14051                           ;stkvar	__this @ sp[(0)+-2]
 14052  0057D2  0EFE               	movlw	-2
 14053  0057D4  006F FF8C  F047    	movff	plusw1,btemp+10
 14054  0057DA  0EFF               	movlw	-1
 14055  0057DC  006F FF8C  F048    	movff	plusw1,btemp+11
 14056  0057E2  0E40               	movlw	64
 14057  0057E4  2447               	addwf	btemp+10,w,c
 14058  0057E6  6ED9               	movwf	fsr2l,c
 14059  0057E8  0E00               	movlw	0
 14060  0057EA  2048               	addwfc	btemp+11,w,c
 14061  0057EC  6EDA               	movwf	fsr2h,c
 14062  0057EE  2ADF               	incf	indf2,f,c
 14063                           
 14064                           ;ringbufs.c: 72:   ++_this->count;
 14065                           ;stkvar	__this @ sp[(0)+-2]
 14066  0057F0  0EFE               	movlw	-2
 14067  0057F2  006F FF8C  F047    	movff	plusw1,btemp+10
 14068  0057F8  0EFF               	movlw	-1
 14069  0057FA  006F FF8C  F048    	movff	plusw1,btemp+11
 14070  005800  0E42               	movlw	66
 14071  005802  2447               	addwf	btemp+10,w,c
 14072  005804  6ED9               	movwf	fsr2l,c
 14073  005806  0E00               	movlw	0
 14074  005808  2048               	addwfc	btemp+11,w,c
 14075  00580A  6EDA               	movwf	fsr2h,c
 14076  00580C  2ADF               	incf	indf2,f,c
 14077  00580E                     l1505:
 14078                           
 14079                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 14080  00580E  52E5               	movf	postdec1,f,c
 14081  005810  52E5               	movf	postdec1,f,c
 14082  005812  52E5               	movf	postdec1,f,c
 14083  005814  0012               	return		;funcret
 14084  005816                     __end_of_ringBufS_put_dma:
 14085                           	opt callstack 0
 14086                           
 14087 ;; *************** function _SYSTEM_Initialize *****************
 14088 ;; Defined at:
 14089 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;		None
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;		None
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1  [STACK] void 
 14096 ;; Registers used:
 14097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/0
 14100 ;;		On exit  : 3F/3C
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;Total ram usage:        0 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; Hardware stack levels required when called:    5
 14110 ;; This function calls:
 14111 ;;		_ADCC_Initialize
 14112 ;;		_CLC1_Initialize
 14113 ;;		_CLKREF_Initialize
 14114 ;;		_DMA1_Initialize
 14115 ;;		_DSM_Initialize
 14116 ;;		_EXT_INT_Initialize
 14117 ;;		_INTERRUPT_Initialize
 14118 ;;		_NCO1_Initialize
 14119 ;;		_OSCILLATOR_Initialize
 14120 ;;		_PIN_MANAGER_Initialize
 14121 ;;		_PMD_Initialize
 14122 ;;		_SPI1_Initialize
 14123 ;;		_TMR5_Initialize
 14124 ;;		_TMR6_Initialize
 14125 ;;		_UART1_Initialize
 14126 ;;		_UART2_Initialize
 14127 ;; This function is called by:
 14128 ;;		_main
 14129 ;; This function uses a reentrant model
 14130 ;;
 14131                           
 14132                           	psect	text58
 14133  006154                     __ptext58:
 14134                           	opt callstack 0
 14135  006154                     _SYSTEM_Initialize:
 14136                           	opt callstack 25
 14137                           
 14138                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14139                           
 14140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14141                           ;incstack = 0
 14142  006154  EC57  F02E         	call	_INTERRUPT_Initialize	;wreg free
 14143                           
 14144                           ; BSR set to: 57
 14145                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14146  006158  ECE8  F034         	call	_PMD_Initialize	;wreg free
 14147                           
 14148                           ; BSR set to: 57
 14149                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14150  00615C  EC0B  F02C         	call	_PIN_MANAGER_Initialize	;wreg free
 14151                           
 14152                           ; BSR set to: 58
 14153                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14154  006160  ECDD  F034         	call	_OSCILLATOR_Initialize	;wreg free
 14155                           
 14156                           ; BSR set to: 57
 14157                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 14158  006164  EC3F  F030         	call	_ADCC_Initialize	;wreg free
 14159                           
 14160                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 14161  006168  EC8E  F034         	call	_NCO1_Initialize	;wreg free
 14162                           
 14163                           ; BSR set to: 63
 14164                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 14165  00616C  EC19  F030         	call	_EXT_INT_Initialize	;wreg free
 14166                           
 14167                           ; BSR set to: 57
 14168                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 14169  006170  EC0E  F033         	call	_TMR6_Initialize	;wreg free
 14170                           
 14171                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 14172  006174  EC0D  F034         	call	_CLC1_Initialize	;wreg free
 14173                           
 14174                           ; BSR set to: 60
 14175                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 14176  006178  EC87  F030         	call	_TMR5_Initialize	;wreg free
 14177                           
 14178                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 14179  00617C  EC9C  F034         	call	_DSM_Initialize	;wreg free
 14180                           
 14181                           ; BSR set to: 60
 14182                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 14183  006180  EC8A  F02E         	call	_UART1_Initialize	;wreg free
 14184                           
 14185                           ; BSR set to: 57
 14186                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 14187  006184  EC1E  F02F         	call	_UART2_Initialize	;wreg free
 14188                           
 14189                           ; BSR set to: 57
 14190                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 14191  006188  ECD2  F034         	call	_SPI1_Initialize	;wreg free
 14192                           
 14193                           ; BSR set to: 61
 14194                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 14195  00618C  EC22  F02E         	call	_DMA1_Initialize	;wreg free
 14196                           
 14197                           ; BSR set to: 59
 14198                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 14199  006190  EC1F  F035         	call	_CLKREF_Initialize	;wreg free
 14200                           
 14201                           ; BSR set to: 60
 14202                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14203  006194  0012               	return		;funcret
 14204  006196                     __end_of_SYSTEM_Initialize:
 14205                           	opt callstack 0
 14206                           
 14207 ;; *************** function _UART2_Initialize *****************
 14208 ;; Defined at:
 14209 ;;		line 78 in file "mcc_generated_files/uart2.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;		None
 14212 ;; Auto vars:     Size  Location     Type
 14213 ;;		None
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  1  [STACK] void 
 14216 ;; Registers used:
 14217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14218 ;; Tracked objects:
 14219 ;;		On entry : 3F/39
 14220 ;;		On exit  : 3F/39
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14227 ;;Total ram usage:        0 bytes
 14228 ;; Hardware stack levels used:    1
 14229 ;; Hardware stack levels required when called:    4
 14230 ;; This function calls:
 14231 ;;		_UART2_SetRxInterruptHandler
 14232 ;;		_UART2_SetTxInterruptHandler
 14233 ;; This function is called by:
 14234 ;;		_SYSTEM_Initialize
 14235 ;; This function uses a reentrant model
 14236 ;;
 14237                           
 14238                           	psect	text59
 14239  005E3C                     __ptext59:
 14240                           	opt callstack 0
 14241  005E3C                     _UART2_Initialize:
 14242                           	opt callstack 25
 14243                           
 14244                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 14245                           
 14246                           ; BSR set to: 60
 14247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14248                           ;incstack = 0
 14249  005E3C  0139               	movlb	57	; () banked
 14250  005E3E  9596               	bcf	150,2,b	;volatile
 14251                           
 14252                           ; BSR set to: 57
 14253                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 14254  005E40  0EC2               	movlw	low _UART2_Receive_ISR
 14255  005E42  6EE6               	movwf	postinc1,c
 14256  005E44  0E68               	movlw	high _UART2_Receive_ISR
 14257  005E46  6EE6               	movwf	postinc1,c
 14258  005E48  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 14259  005E4A  6EE6               	movwf	postinc1,c
 14260  005E4C  ECD2  F032         	call	_UART2_SetRxInterruptHandler	;wreg free
 14261                           
 14262                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 14263  005E50  0139               	movlb	57	; () banked
 14264  005E52  9796               	bcf	150,3,b	;volatile
 14265                           
 14266                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 14267  005E54  0E34               	movlw	low _UART2_Transmit_ISR
 14268  005E56  6EE6               	movwf	postinc1,c
 14269  005E58  0E64               	movlw	high _UART2_Transmit_ISR
 14270  005E5A  6EE6               	movwf	postinc1,c
 14271  005E5C  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 14272  005E5E  6EE6               	movwf	postinc1,c
 14273  005E60  ECBE  F032         	call	_UART2_SetTxInterruptHandler	;wreg free
 14274                           
 14275                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 14276  005E64  013D               	movlb	61	; () banked
 14277  005E66  6BD4               	clrf	212,b	;volatile
 14278                           
 14279                           ; BSR set to: 61
 14280                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 14281  005E68  6BD6               	clrf	214,b	;volatile
 14282                           
 14283                           ; BSR set to: 61
 14284                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 14285  005E6A  6BD8               	clrf	216,b	;volatile
 14286                           
 14287                           ; BSR set to: 61
 14288                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 14289  005E6C  0EB0               	movlw	176
 14290  005E6E  6FDA               	movwf	218,b	;volatile
 14291                           
 14292                           ; BSR set to: 61
 14293                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 14294  005E70  0E80               	movlw	128
 14295  005E72  6FDB               	movwf	219,b	;volatile
 14296                           
 14297                           ; BSR set to: 61
 14298                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 14299  005E74  6BDC               	clrf	220,b	;volatile
 14300                           
 14301                           ; BSR set to: 61
 14302                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 14303  005E76  0E82               	movlw	130
 14304  005E78  6FDD               	movwf	221,b	;volatile
 14305                           
 14306                           ; BSR set to: 61
 14307                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 14308  005E7A  0E06               	movlw	6
 14309  005E7C  6FDE               	movwf	222,b	;volatile
 14310                           
 14311                           ; BSR set to: 61
 14312                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 14313  005E7E  6BDF               	clrf	223,b	;volatile
 14314                           
 14315                           ; BSR set to: 61
 14316                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 14317  005E80  6BE0               	clrf	224,b	;volatile
 14318                           
 14319                           ; BSR set to: 61
 14320                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 14321  005E82  6BE1               	clrf	225,b	;volatile
 14322                           
 14323                           ; BSR set to: 61
 14324                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 14325  005E84  6BE2               	clrf	226,b	;volatile
 14326                           
 14327                           ; BSR set to: 61
 14328                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 14329  005E86  6A36               	clrf	_uart2TxHead,c	;volatile
 14330                           
 14331                           ; BSR set to: 61
 14332                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 14333  005E88  6A35               	clrf	_uart2TxTail,c	;volatile
 14334                           
 14335                           ; BSR set to: 61
 14336                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 14337  005E8A  0E40               	movlw	64
 14338  005E8C  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 14339                           
 14340                           ; BSR set to: 61
 14341                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 14342  005E8E  6A33               	clrf	_uart2RxHead,c	;volatile
 14343                           
 14344                           ; BSR set to: 61
 14345                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 14346  005E90  6A32               	clrf	_uart2RxTail,c	;volatile
 14347                           
 14348                           ; BSR set to: 61
 14349                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 14350  005E92  6A31               	clrf	_uart2RxCount,c	;volatile
 14351                           
 14352                           ; BSR set to: 61
 14353                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 14354  005E94  0139               	movlb	57	; () banked
 14355  005E96  8596               	bsf	150,2,b	;volatile
 14356                           
 14357                           ; BSR set to: 57
 14358                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14359  005E98  0012               	return		;funcret
 14360  005E9A                     __end_of_UART2_Initialize:
 14361                           	opt callstack 0
 14362                           
 14363 ;; *************** function _UART2_SetTxInterruptHandler *****************
 14364 ;; Defined at:
 14365 ;;		line 252 in file "mcc_generated_files/uart2.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14368 ;;		 -> UART2_Transmit_ISR(1), 
 14369 ;; Auto vars:     Size  Location     Type
 14370 ;;		None
 14371 ;; Return value:  Size  Location     Type
 14372 ;;                  1  [STACK] void 
 14373 ;; Registers used:
 14374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14375 ;; Tracked objects:
 14376 ;;		On entry : 3F/39
 14377 ;;		On exit  : 0/0
 14378 ;;		Unchanged: 0/0
 14379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14384 ;;Total ram usage:        0 bytes
 14385 ;; Hardware stack levels used:    1
 14386 ;; Hardware stack levels required when called:    3
 14387 ;; This function calls:
 14388 ;;		Nothing
 14389 ;; This function is called by:
 14390 ;;		_UART2_Initialize
 14391 ;; This function uses a reentrant model
 14392 ;;
 14393                           
 14394                           	psect	text60
 14395  00657C                     __ptext60:
 14396                           	opt callstack 0
 14397  00657C                     _UART2_SetTxInterruptHandler:
 14398                           	opt callstack 25
 14399                           
 14400                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 14401                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14402                           
 14403                           ; BSR set to: 57
 14404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14405                           ;incstack = 0
 14406  00657C  50E1               	movf	fsr1l,w,c
 14407  00657E  0FFD               	addlw	-3
 14408  006580  6ED9               	movwf	fsr2l,c
 14409  006582  50E2               	movf	fsr1h,w,c
 14410  006584  6EDA               	movwf	fsr2h,c
 14411  006586  0EFF               	movlw	255
 14412  006588  22DA               	addwfc	fsr2h,f,c
 14413  00658A  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 14414  006590  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 14415  006596  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 14416                           
 14417                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14418  00659C  52E5               	movf	postdec1,f,c
 14419  00659E  52E5               	movf	postdec1,f,c
 14420  0065A0  52E5               	movf	postdec1,f,c
 14421  0065A2  0012               	return		;funcret
 14422  0065A4                     __end_of_UART2_SetTxInterruptHandler:
 14423                           	opt callstack 0
 14424                           
 14425 ;; *************** function _UART2_SetRxInterruptHandler *****************
 14426 ;; Defined at:
 14427 ;;		line 248 in file "mcc_generated_files/uart2.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14430 ;;		 -> UART2_Receive_ISR(1), 
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;		None
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  1  [STACK] void 
 14435 ;; Registers used:
 14436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14437 ;; Tracked objects:
 14438 ;;		On entry : 3F/39
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14446 ;;Total ram usage:        0 bytes
 14447 ;; Hardware stack levels used:    1
 14448 ;; Hardware stack levels required when called:    3
 14449 ;; This function calls:
 14450 ;;		Nothing
 14451 ;; This function is called by:
 14452 ;;		_UART2_Initialize
 14453 ;; This function uses a reentrant model
 14454 ;;
 14455                           
 14456                           	psect	text61
 14457  0065A4                     __ptext61:
 14458                           	opt callstack 0
 14459  0065A4                     _UART2_SetRxInterruptHandler:
 14460                           	opt callstack 25
 14461                           
 14462                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 14463                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14464                           
 14465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14466                           ;incstack = 0
 14467  0065A4  50E1               	movf	fsr1l,w,c
 14468  0065A6  0FFD               	addlw	-3
 14469  0065A8  6ED9               	movwf	fsr2l,c
 14470  0065AA  50E2               	movf	fsr1h,w,c
 14471  0065AC  6EDA               	movwf	fsr2h,c
 14472  0065AE  0EFF               	movlw	255
 14473  0065B0  22DA               	addwfc	fsr2h,f,c
 14474  0065B2  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 14475  0065B8  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 14476  0065BE  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 14477                           
 14478                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14479  0065C4  52E5               	movf	postdec1,f,c
 14480  0065C6  52E5               	movf	postdec1,f,c
 14481  0065C8  52E5               	movf	postdec1,f,c
 14482  0065CA  0012               	return		;funcret
 14483  0065CC                     __end_of_UART2_SetRxInterruptHandler:
 14484                           	opt callstack 0
 14485                           
 14486 ;; *************** function _UART1_Initialize *****************
 14487 ;; Defined at:
 14488 ;;		line 78 in file "mcc_generated_files/uart1.c"
 14489 ;; Parameters:    Size  Location     Type
 14490 ;;		None
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;		None
 14493 ;; Return value:  Size  Location     Type
 14494 ;;                  1  [STACK] void 
 14495 ;; Registers used:
 14496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14497 ;; Tracked objects:
 14498 ;;		On entry : 3F/3C
 14499 ;;		On exit  : 3F/39
 14500 ;;		Unchanged: 0/0
 14501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14506 ;;Total ram usage:        0 bytes
 14507 ;; Hardware stack levels used:    1
 14508 ;; Hardware stack levels required when called:    4
 14509 ;; This function calls:
 14510 ;;		_UART1_SetRxInterruptHandler
 14511 ;;		_UART1_SetTxInterruptHandler
 14512 ;; This function is called by:
 14513 ;;		_SYSTEM_Initialize
 14514 ;; This function uses a reentrant model
 14515 ;;
 14516                           
 14517                           	psect	text62
 14518  005D14                     __ptext62:
 14519                           	opt callstack 0
 14520  005D14                     _UART1_Initialize:
 14521                           	opt callstack 25
 14522                           
 14523                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 14524                           
 14525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14526                           ;incstack = 0
 14527  005D14  0139               	movlb	57	; () banked
 14528  005D16  9793               	bcf	147,3,b	;volatile
 14529                           
 14530                           ; BSR set to: 57
 14531                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14532  005D18  0EA2               	movlw	low _UART1_Receive_ISR
 14533  005D1A  6EE6               	movwf	postinc1,c
 14534  005D1C  0E68               	movlw	high _UART1_Receive_ISR
 14535  005D1E  6EE6               	movwf	postinc1,c
 14536  005D20  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 14537  005D22  6EE6               	movwf	postinc1,c
 14538  005D24  ECFA  F032         	call	_UART1_SetRxInterruptHandler	;wreg free
 14539                           
 14540                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 14541  005D28  0139               	movlb	57	; () banked
 14542  005D2A  9993               	bcf	147,4,b	;volatile
 14543                           
 14544                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14545  005D2C  0E08               	movlw	low _UART1_Transmit_ISR
 14546  005D2E  6EE6               	movwf	postinc1,c
 14547  005D30  0E64               	movlw	high _UART1_Transmit_ISR
 14548  005D32  6EE6               	movwf	postinc1,c
 14549  005D34  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 14550  005D36  6EE6               	movwf	postinc1,c
 14551  005D38  ECE6  F032         	call	_UART1_SetTxInterruptHandler	;wreg free
 14552                           
 14553                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 14554  005D3C  013D               	movlb	61	; () banked
 14555  005D3E  6BEC               	clrf	236,b	;volatile
 14556                           
 14557                           ; BSR set to: 61
 14558                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 14559  005D40  6BED               	clrf	237,b	;volatile
 14560                           
 14561                           ; BSR set to: 61
 14562                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 14563  005D42  6BEE               	clrf	238,b	;volatile
 14564                           
 14565                           ; BSR set to: 61
 14566                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 14567  005D44  6BEF               	clrf	239,b	;volatile
 14568                           
 14569                           ; BSR set to: 61
 14570                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 14571  005D46  6BF0               	clrf	240,b	;volatile
 14572                           
 14573                           ; BSR set to: 61
 14574                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 14575  005D48  6BF1               	clrf	241,b	;volatile
 14576                           
 14577                           ; BSR set to: 61
 14578                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 14579  005D4A  0EB0               	movlw	176
 14580  005D4C  6FF2               	movwf	242,b	;volatile
 14581                           
 14582                           ; BSR set to: 61
 14583                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 14584  005D4E  0E80               	movlw	128
 14585  005D50  6FF3               	movwf	243,b	;volatile
 14586                           
 14587                           ; BSR set to: 61
 14588                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 14589  005D52  6BF4               	clrf	244,b	;volatile
 14590                           
 14591                           ; BSR set to: 61
 14592                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 14593  005D54  0E82               	movlw	130
 14594  005D56  6FF5               	movwf	245,b	;volatile
 14595                           
 14596                           ; BSR set to: 61
 14597                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 14598  005D58  0E06               	movlw	6
 14599  005D5A  6FF6               	movwf	246,b	;volatile
 14600                           
 14601                           ; BSR set to: 61
 14602                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 14603  005D5C  6BF7               	clrf	247,b	;volatile
 14604                           
 14605                           ; BSR set to: 61
 14606                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 14607  005D5E  6BF8               	clrf	248,b	;volatile
 14608                           
 14609                           ; BSR set to: 61
 14610                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 14611  005D60  6BF9               	clrf	249,b	;volatile
 14612                           
 14613                           ; BSR set to: 61
 14614                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 14615  005D62  6BFA               	clrf	250,b	;volatile
 14616                           
 14617                           ; BSR set to: 61
 14618                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 14619  005D64  6A3C               	clrf	_uart1TxHead,c	;volatile
 14620                           
 14621                           ; BSR set to: 61
 14622                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 14623  005D66  6A3B               	clrf	_uart1TxTail,c	;volatile
 14624                           
 14625                           ; BSR set to: 61
 14626                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14627  005D68  0E40               	movlw	64
 14628  005D6A  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 14629                           
 14630                           ; BSR set to: 61
 14631                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 14632  005D6C  6A39               	clrf	_uart1RxHead,c	;volatile
 14633                           
 14634                           ; BSR set to: 61
 14635                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 14636  005D6E  6A38               	clrf	_uart1RxTail,c	;volatile
 14637                           
 14638                           ; BSR set to: 61
 14639                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 14640  005D70  6A37               	clrf	_uart1RxCount,c	;volatile
 14641                           
 14642                           ; BSR set to: 61
 14643                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 14644  005D72  0139               	movlb	57	; () banked
 14645  005D74  8793               	bsf	147,3,b	;volatile
 14646                           
 14647                           ; BSR set to: 57
 14648                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 14649  005D76  0012               	return		;funcret
 14650  005D78                     __end_of_UART1_Initialize:
 14651                           	opt callstack 0
 14652                           
 14653 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14654 ;; Defined at:
 14655 ;;		line 244 in file "mcc_generated_files/uart1.c"
 14656 ;; Parameters:    Size  Location     Type
 14657 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14658 ;;		 -> UART1_Transmit_ISR(1), 
 14659 ;; Auto vars:     Size  Location     Type
 14660 ;;		None
 14661 ;; Return value:  Size  Location     Type
 14662 ;;                  1  [STACK] void 
 14663 ;; Registers used:
 14664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14665 ;; Tracked objects:
 14666 ;;		On entry : 3F/39
 14667 ;;		On exit  : 0/0
 14668 ;;		Unchanged: 0/0
 14669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14674 ;;Total ram usage:        0 bytes
 14675 ;; Hardware stack levels used:    1
 14676 ;; Hardware stack levels required when called:    3
 14677 ;; This function calls:
 14678 ;;		Nothing
 14679 ;; This function is called by:
 14680 ;;		_UART1_Initialize
 14681 ;; This function uses a reentrant model
 14682 ;;
 14683                           
 14684                           	psect	text63
 14685  0065CC                     __ptext63:
 14686                           	opt callstack 0
 14687  0065CC                     _UART1_SetTxInterruptHandler:
 14688                           	opt callstack 25
 14689                           
 14690                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 14691                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14692                           
 14693                           ; BSR set to: 57
 14694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14695                           ;incstack = 0
 14696  0065CC  50E1               	movf	fsr1l,w,c
 14697  0065CE  0FFD               	addlw	-3
 14698  0065D0  6ED9               	movwf	fsr2l,c
 14699  0065D2  50E2               	movf	fsr1h,w,c
 14700  0065D4  6EDA               	movwf	fsr2h,c
 14701  0065D6  0EFF               	movlw	255
 14702  0065D8  22DA               	addwfc	fsr2h,f,c
 14703  0065DA  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 14704  0065E0  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 14705  0065E6  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 14706                           
 14707                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14708  0065EC  52E5               	movf	postdec1,f,c
 14709  0065EE  52E5               	movf	postdec1,f,c
 14710  0065F0  52E5               	movf	postdec1,f,c
 14711  0065F2  0012               	return		;funcret
 14712  0065F4                     __end_of_UART1_SetTxInterruptHandler:
 14713                           	opt callstack 0
 14714                           
 14715 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14716 ;; Defined at:
 14717 ;;		line 239 in file "mcc_generated_files/uart1.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14720 ;;		 -> UART1_Receive_ISR(1), 
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;		None
 14723 ;; Return value:  Size  Location     Type
 14724 ;;                  1  [STACK] void 
 14725 ;; Registers used:
 14726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14727 ;; Tracked objects:
 14728 ;;		On entry : 3F/39
 14729 ;;		On exit  : 0/0
 14730 ;;		Unchanged: 0/0
 14731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;Total ram usage:        0 bytes
 14737 ;; Hardware stack levels used:    1
 14738 ;; Hardware stack levels required when called:    3
 14739 ;; This function calls:
 14740 ;;		Nothing
 14741 ;; This function is called by:
 14742 ;;		_UART1_Initialize
 14743 ;; This function uses a reentrant model
 14744 ;;
 14745                           
 14746                           	psect	text64
 14747  0065F4                     __ptext64:
 14748                           	opt callstack 0
 14749  0065F4                     _UART1_SetRxInterruptHandler:
 14750                           	opt callstack 25
 14751                           
 14752                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 14753                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14754                           
 14755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14756                           ;incstack = 0
 14757  0065F4  50E1               	movf	fsr1l,w,c
 14758  0065F6  0FFD               	addlw	-3
 14759  0065F8  6ED9               	movwf	fsr2l,c
 14760  0065FA  50E2               	movf	fsr1h,w,c
 14761  0065FC  6EDA               	movwf	fsr2h,c
 14762  0065FE  0EFF               	movlw	255
 14763  006600  22DA               	addwfc	fsr2h,f,c
 14764  006602  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 14765  006608  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 14766  00660E  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 14767                           
 14768                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14769  006614  52E5               	movf	postdec1,f,c
 14770  006616  52E5               	movf	postdec1,f,c
 14771  006618  52E5               	movf	postdec1,f,c
 14772  00661A  0012               	return		;funcret
 14773  00661C                     __end_of_UART1_SetRxInterruptHandler:
 14774                           	opt callstack 0
 14775                           
 14776 ;; *************** function _TMR6_Initialize *****************
 14777 ;; Defined at:
 14778 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 14779 ;; Parameters:    Size  Location     Type
 14780 ;;		None
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;		None
 14783 ;; Return value:  Size  Location     Type
 14784 ;;                  1  [STACK] void 
 14785 ;; Registers used:
 14786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14787 ;; Tracked objects:
 14788 ;;		On entry : 3F/39
 14789 ;;		On exit  : 0/0
 14790 ;;		Unchanged: 0/0
 14791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14796 ;;Total ram usage:        0 bytes
 14797 ;; Hardware stack levels used:    1
 14798 ;; Hardware stack levels required when called:    4
 14799 ;; This function calls:
 14800 ;;		_TMR6_SetInterruptHandler
 14801 ;; This function is called by:
 14802 ;;		_SYSTEM_Initialize
 14803 ;; This function uses a reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text65
 14807  00661C                     __ptext65:
 14808                           	opt callstack 0
 14809  00661C                     _TMR6_Initialize:
 14810                           	opt callstack 25
 14811                           
 14812                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 14813                           
 14814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14815                           ;incstack = 0
 14816  00661C  0E01               	movlw	1
 14817  00661E  6E96               	movwf	16278,c	;volatile
 14818                           
 14819                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 14820  006620  6A95               	clrf	16277,c	;volatile
 14821                           
 14822                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 14823  006622  6A97               	clrf	16279,c	;volatile
 14824                           
 14825                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 14826  006624  0E03               	movlw	3
 14827  006626  6E93               	movwf	16275,c	;volatile
 14828                           
 14829                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 14830  006628  6A92               	clrf	16274,c	;volatile
 14831                           
 14832                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 14833  00662A  0139               	movlb	57	; () banked
 14834  00662C  91A9               	bcf	169,0,b	;volatile
 14835                           
 14836                           ; BSR set to: 57
 14837                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 14838  00662E  8199               	bsf	153,0,b	;volatile
 14839                           
 14840                           ; BSR set to: 57
 14841                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 14842  006630  0E94               	movlw	low _TMR6_DefaultInterruptHandler
 14843  006632  6EE6               	movwf	postinc1,c
 14844  006634  0E5F               	movlw	high _TMR6_DefaultInterruptHandler
 14845  006636  6EE6               	movwf	postinc1,c
 14846  006638  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 14847  00663A  6EE6               	movwf	postinc1,c
 14848  00663C  EC22  F033         	call	_TMR6_SetInterruptHandler	;wreg free
 14849                           
 14850                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 14851  006640  6894               	setf	16276,c	;volatile
 14852                           
 14853                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14854  006642  0012               	return		;funcret
 14855  006644                     __end_of_TMR6_Initialize:
 14856                           	opt callstack 0
 14857                           
 14858 ;; *************** function _TMR6_SetInterruptHandler *****************
 14859 ;; Defined at:
 14860 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14863 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;		None
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  1  [STACK] void 
 14868 ;; Registers used:
 14869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14870 ;; Tracked objects:
 14871 ;;		On entry : 3F/39
 14872 ;;		On exit  : 0/0
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14879 ;;Total ram usage:        0 bytes
 14880 ;; Hardware stack levels used:    1
 14881 ;; Hardware stack levels required when called:    3
 14882 ;; This function calls:
 14883 ;;		Nothing
 14884 ;; This function is called by:
 14885 ;;		_TMR6_Initialize
 14886 ;; This function uses a reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text66
 14890  006644                     __ptext66:
 14891                           	opt callstack 0
 14892  006644                     _TMR6_SetInterruptHandler:
 14893                           	opt callstack 25
 14894                           
 14895                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 14896                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14897                           
 14898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14899                           ;incstack = 0
 14900  006644  50E1               	movf	fsr1l,w,c
 14901  006646  0FFD               	addlw	-3
 14902  006648  6ED9               	movwf	fsr2l,c
 14903  00664A  50E2               	movf	fsr1h,w,c
 14904  00664C  6EDA               	movwf	fsr2h,c
 14905  00664E  0EFF               	movlw	255
 14906  006650  22DA               	addwfc	fsr2h,f,c
 14907  006652  006F FF78  F0E9    	movff	postinc2,_TMR6_InterruptHandler
 14908  006658  006F FF78  F0EA    	movff	postinc2,_TMR6_InterruptHandler+1
 14909  00665E  006F FF74  F0EB    	movff	postdec2,_TMR6_InterruptHandler+2
 14910                           
 14911                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14912  006664  52E5               	movf	postdec1,f,c
 14913  006666  52E5               	movf	postdec1,f,c
 14914  006668  52E5               	movf	postdec1,f,c
 14915  00666A  0012               	return		;funcret
 14916  00666C                     __end_of_TMR6_SetInterruptHandler:
 14917                           	opt callstack 0
 14918                           
 14919 ;; *************** function _TMR5_Initialize *****************
 14920 ;; Defined at:
 14921 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14922 ;; Parameters:    Size  Location     Type
 14923 ;;		None
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;		None
 14926 ;; Return value:  Size  Location     Type
 14927 ;;                  1  [STACK] void 
 14928 ;; Registers used:
 14929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 14930 ;; Tracked objects:
 14931 ;;		On entry : 3F/3C
 14932 ;;		On exit  : 0/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14939 ;;Total ram usage:        0 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:    4
 14942 ;; This function calls:
 14943 ;;		_TMR5_SetInterruptHandler
 14944 ;; This function is called by:
 14945 ;;		_SYSTEM_Initialize
 14946 ;; This function uses a reentrant model
 14947 ;;
 14948                           
 14949                           	psect	text67
 14950  00610E                     __ptext67:
 14951                           	opt callstack 0
 14952  00610E                     _TMR5_Initialize:
 14953                           	opt callstack 25
 14954                           
 14955                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 14956                           
 14957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14958                           ;incstack = 0
 14959  00610E  6A9B               	clrf	16283,c	;volatile
 14960                           
 14961                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 14962  006110  6A9C               	clrf	16284,c	;volatile
 14963                           
 14964                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 14965  006112  0E01               	movlw	1
 14966  006114  6E9D               	movwf	16285,c	;volatile
 14967                           
 14968                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 14969  006116  0E63               	movlw	99
 14970  006118  6E99               	movwf	16281,c	;volatile
 14971                           
 14972                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 14973  00611A  0EC0               	movlw	192
 14974  00611C  6E98               	movwf	16280,c	;volatile
 14975                           
 14976                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 14977  00611E  5098               	movf	16280,w,c	;volatile
 14978  006120  006F FE64  F03D    	movff	16281,btemp	;volatile
 14979  006126  6A3E               	clrf	btemp+1,c
 14980  006128  0060  F0F4  F03E   	movff	btemp,btemp+1
 14981  00612E  6A3D               	clrf	btemp,c
 14982  006130  103D               	iorwf	btemp,w,c
 14983  006132  6E29               	movwf	_timer5ReloadVal,c	;volatile
 14984  006134  503E               	movf	btemp+1,w,c
 14985  006136  6E2A               	movwf	_timer5ReloadVal+1,c	;volatile
 14986                           
 14987                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 14988  006138  0139               	movlb	57	; () banked
 14989  00613A  9DA8               	bcf	168,6,b	;volatile
 14990                           
 14991                           ; BSR set to: 57
 14992                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 14993  00613C  8D98               	bsf	152,6,b	;volatile
 14994                           
 14995                           ; BSR set to: 57
 14996                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 14997  00613E  0E8A               	movlw	low _TMR5_DefaultInterruptHandler
 14998  006140  6EE6               	movwf	postinc1,c
 14999  006142  0E69               	movlw	high _TMR5_DefaultInterruptHandler
 15000  006144  6EE6               	movwf	postinc1,c
 15001  006146  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 15002  006148  6EE6               	movwf	postinc1,c
 15003  00614A  EC36  F033         	call	_TMR5_SetInterruptHandler	;wreg free
 15004                           
 15005                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 15006  00614E  0E31               	movlw	49
 15007  006150  6E9A               	movwf	16282,c	;volatile
 15008                           
 15009                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15010  006152  0012               	return		;funcret
 15011  006154                     __end_of_TMR5_Initialize:
 15012                           	opt callstack 0
 15013                           
 15014 ;; *************** function _TMR5_SetInterruptHandler *****************
 15015 ;; Defined at:
 15016 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15019 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 15020 ;; Auto vars:     Size  Location     Type
 15021 ;;		None
 15022 ;; Return value:  Size  Location     Type
 15023 ;;                  1  [STACK] void 
 15024 ;; Registers used:
 15025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15026 ;; Tracked objects:
 15027 ;;		On entry : 3F/39
 15028 ;;		On exit  : 0/0
 15029 ;;		Unchanged: 0/0
 15030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15035 ;;Total ram usage:        0 bytes
 15036 ;; Hardware stack levels used:    1
 15037 ;; Hardware stack levels required when called:    3
 15038 ;; This function calls:
 15039 ;;		Nothing
 15040 ;; This function is called by:
 15041 ;;		_TMR5_Initialize
 15042 ;; This function uses a reentrant model
 15043 ;;
 15044                           
 15045                           	psect	text68
 15046  00666C                     __ptext68:
 15047                           	opt callstack 0
 15048  00666C                     _TMR5_SetInterruptHandler:
 15049                           	opt callstack 25
 15050                           
 15051                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 15052                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15053                           
 15054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15055                           ;incstack = 0
 15056  00666C  50E1               	movf	fsr1l,w,c
 15057  00666E  0FFD               	addlw	-3
 15058  006670  6ED9               	movwf	fsr2l,c
 15059  006672  50E2               	movf	fsr1h,w,c
 15060  006674  6EDA               	movwf	fsr2h,c
 15061  006676  0EFF               	movlw	255
 15062  006678  22DA               	addwfc	fsr2h,f,c
 15063  00667A  006F FF78  F0E6    	movff	postinc2,_TMR5_InterruptHandler
 15064  006680  006F FF78  F0E7    	movff	postinc2,_TMR5_InterruptHandler+1
 15065  006686  006F FF74  F0E8    	movff	postdec2,_TMR5_InterruptHandler+2
 15066                           
 15067                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15068  00668C  52E5               	movf	postdec1,f,c
 15069  00668E  52E5               	movf	postdec1,f,c
 15070  006690  52E5               	movf	postdec1,f,c
 15071  006692  0012               	return		;funcret
 15072  006694                     __end_of_TMR5_SetInterruptHandler:
 15073                           	opt callstack 0
 15074                           
 15075 ;; *************** function _SPI1_Initialize *****************
 15076 ;; Defined at:
 15077 ;;		line 64 in file "mcc_generated_files/spi1.c"
 15078 ;; Parameters:    Size  Location     Type
 15079 ;;		None
 15080 ;; Auto vars:     Size  Location     Type
 15081 ;;		None
 15082 ;; Return value:  Size  Location     Type
 15083 ;;                  1  [STACK] void 
 15084 ;; Registers used:
 15085 ;;		wreg, status,2
 15086 ;; Tracked objects:
 15087 ;;		On entry : 3F/39
 15088 ;;		On exit  : 3F/3D
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15095 ;;Total ram usage:        0 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; Hardware stack levels required when called:    3
 15098 ;; This function calls:
 15099 ;;		Nothing
 15100 ;; This function is called by:
 15101 ;;		_SYSTEM_Initialize
 15102 ;; This function uses a reentrant model
 15103 ;;
 15104                           
 15105                           	psect	text69
 15106  0069A4                     __ptext69:
 15107                           	opt callstack 0
 15108  0069A4                     _SPI1_Initialize:
 15109                           	opt callstack 26
 15110                           
 15111                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 15112                           
 15113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15114                           ;incstack = 0
 15115  0069A4  0E40               	movlw	64
 15116  0069A6  013D               	movlb	61	; () banked
 15117  0069A8  6F15               	movwf	21,b	;volatile
 15118                           
 15119                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 15120  0069AA  0E03               	movlw	3
 15121  0069AC  6F16               	movwf	22,b	;volatile
 15122                           
 15123                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 15124  0069AE  0E4F               	movlw	79
 15125  0069B0  6F19               	movwf	25,b	;volatile
 15126                           
 15127                           ; BSR set to: 61
 15128                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 15129  0069B2  6B1C               	clrf	28,b	;volatile
 15130                           
 15131                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 15132  0069B4  0E83               	movlw	131
 15133  0069B6  6F14               	movwf	20,b	;volatile
 15134                           
 15135                           ; BSR set to: 61
 15136                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15137  0069B8  0012               	return		;funcret
 15138  0069BA                     __end_of_SPI1_Initialize:
 15139                           	opt callstack 0
 15140                           
 15141 ;; *************** function _PMD_Initialize *****************
 15142 ;; Defined at:
 15143 ;;		line 88 in file "mcc_generated_files/mcc.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;		None
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;		None
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1  [STACK] void 
 15150 ;; Registers used:
 15151 ;;		None
 15152 ;; Tracked objects:
 15153 ;;		On entry : 3F/39
 15154 ;;		On exit  : 3F/39
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15161 ;;Total ram usage:        0 bytes
 15162 ;; Hardware stack levels used:    1
 15163 ;; Hardware stack levels required when called:    3
 15164 ;; This function calls:
 15165 ;;		Nothing
 15166 ;; This function is called by:
 15167 ;;		_SYSTEM_Initialize
 15168 ;; This function uses a reentrant model
 15169 ;;
 15170                           
 15171                           	psect	text70
 15172  0069D0                     __ptext70:
 15173                           	opt callstack 0
 15174  0069D0                     _PMD_Initialize:
 15175                           	opt callstack 26
 15176                           
 15177                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 15178                           
 15179                           ; BSR set to: 61
 15180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15181                           ;incstack = 0
 15182  0069D0  0139               	movlb	57	; () banked
 15183  0069D2  6BC0               	clrf	192,b	;volatile
 15184                           
 15185                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 15186  0069D4  6BC1               	clrf	193,b	;volatile
 15187                           
 15188                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 15189  0069D6  6BC2               	clrf	194,b	;volatile
 15190                           
 15191                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 15192  0069D8  6BC3               	clrf	195,b	;volatile
 15193                           
 15194                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 15195  0069DA  6BC4               	clrf	196,b	;volatile
 15196                           
 15197                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 15198  0069DC  6BC5               	clrf	197,b	;volatile
 15199                           
 15200                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 15201  0069DE  6BC6               	clrf	198,b	;volatile
 15202                           
 15203                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 15204  0069E0  6BC7               	clrf	199,b	;volatile
 15205                           
 15206                           ; BSR set to: 57
 15207                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15208  0069E2  0012               	return		;funcret
 15209  0069E4                     __end_of_PMD_Initialize:
 15210                           	opt callstack 0
 15211                           
 15212 ;; *************** function _PIN_MANAGER_Initialize *****************
 15213 ;; Defined at:
 15214 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;		None
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;		None
 15219 ;; Return value:  Size  Location     Type
 15220 ;;                  1  [STACK] void 
 15221 ;; Registers used:
 15222 ;;		wreg, status,2
 15223 ;; Tracked objects:
 15224 ;;		On entry : 3F/39
 15225 ;;		On exit  : 3F/3A
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15232 ;;Total ram usage:        0 bytes
 15233 ;; Hardware stack levels used:    1
 15234 ;; Hardware stack levels required when called:    3
 15235 ;; This function calls:
 15236 ;;		Nothing
 15237 ;; This function is called by:
 15238 ;;		_SYSTEM_Initialize
 15239 ;; This function uses a reentrant model
 15240 ;;
 15241                           
 15242                           	psect	text71
 15243  005816                     __ptext71:
 15244                           	opt callstack 0
 15245  005816                     _PIN_MANAGER_Initialize:
 15246                           	opt callstack 26
 15247                           
 15248                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 15249                           
 15250                           ; BSR set to: 57
 15251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15252                           ;incstack = 0
 15253  005816  0E07               	movlw	7
 15254  005818  6EBE               	movwf	16318,c	;volatile
 15255                           
 15256                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 15257  00581A  6ABD               	clrf	16317,c	;volatile
 15258                           
 15259                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 15260  00581C  6ABA               	clrf	16314,c	;volatile
 15261                           
 15262                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 15263  00581E  6ABF               	clrf	16319,c	;volatile
 15264                           
 15265                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 15266  005820  6ABB               	clrf	16315,c	;volatile
 15267                           
 15268                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 15269  005822  0E06               	movlw	6
 15270  005824  6EBC               	movwf	16316,c	;volatile
 15271                           
 15272                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 15273  005826  6AC6               	clrf	16326,c	;volatile
 15274                           
 15275                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 15276  005828  0E0F               	movlw	15
 15277  00582A  6EC7               	movwf	16327,c	;volatile
 15278                           
 15279                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 15280  00582C  0E8F               	movlw	143
 15281  00582E  6EC2               	movwf	16322,c	;volatile
 15282                           
 15283                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 15284  005830  0EBF               	movlw	191
 15285  005832  6EC3               	movwf	16323,c	;volatile
 15286                           
 15287                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 15288  005834  0E91               	movlw	145
 15289  005836  6EC4               	movwf	16324,c	;volatile
 15290                           
 15291                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 15292  005838  0E0C               	movlw	12
 15293  00583A  6EC5               	movwf	16325,c	;volatile
 15294                           
 15295                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 15296  00583C  013A               	movlb	58	; () banked
 15297  00583E  6B70               	clrf	112,b	;volatile
 15298                           
 15299                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 15300  005840  0E01               	movlw	1
 15301  005842  6F60               	movwf	96,b	;volatile
 15302                           
 15303                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 15304  005844  0E38               	movlw	56
 15305  005846  6F50               	movwf	80,b	;volatile
 15306                           
 15307                           ; BSR set to: 58
 15308                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 15309  005848  6B80               	clrf	128,b	;volatile
 15310                           
 15311                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x0F;
 15312  00584A  0E0F               	movlw	15
 15313  00584C  6F90               	movwf	144,b	;volatile
 15314                           
 15315                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 15316  00584E  0E8F               	movlw	143
 15317  005850  6F40               	movwf	64,b	;volatile
 15318                           
 15319                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 15320  005852  0EFC               	movlw	252
 15321  005854  6F71               	movwf	113,b	;volatile
 15322                           
 15323                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0xF0;
 15324  005856  0EF0               	movlw	240
 15325  005858  6F91               	movwf	145,b	;volatile
 15326                           
 15327                           ; BSR set to: 58
 15328                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 15329  00585A  6B81               	clrf	129,b	;volatile
 15330                           
 15331                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 15332  00585C  0E87               	movlw	135
 15333  00585E  6F51               	movwf	81,b	;volatile
 15334                           
 15335                           ; BSR set to: 58
 15336                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 15337  005860  6B41               	clrf	65,b	;volatile
 15338                           
 15339                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 15340  005862  0E90               	movlw	144
 15341  005864  6F61               	movwf	97,b	;volatile
 15342                           
 15343                           ; BSR set to: 58
 15344                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 15345  005866  6B82               	clrf	130,b	;volatile
 15346                           
 15347                           ; BSR set to: 58
 15348                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 15349  005868  6B92               	clrf	146,b	;volatile
 15350                           
 15351                           ; BSR set to: 58
 15352                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 15353  00586A  6B42               	clrf	66,b	;volatile
 15354                           
 15355                           ; BSR set to: 58
 15356                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 15357  00586C  6B52               	clrf	82,b	;volatile
 15358                           
 15359                           ; BSR set to: 58
 15360                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 15361  00586E  6B62               	clrf	98,b	;volatile
 15362                           
 15363                           ; BSR set to: 58
 15364                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 15365  005870  6B72               	clrf	114,b	;volatile
 15366                           
 15367                           ; BSR set to: 58
 15368                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 15369  005872  6943               	setf	67,b	;volatile
 15370                           
 15371                           ; BSR set to: 58
 15372                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 15373  005874  6953               	setf	83,b	;volatile
 15374                           
 15375                           ; BSR set to: 58
 15376                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 15377  005876  6963               	setf	99,b	;volatile
 15378                           
 15379                           ; BSR set to: 58
 15380                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 15381  005878  6973               	setf	115,b	;volatile
 15382                           
 15383                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 15384  00587A  0E07               	movlw	7
 15385  00587C  6F83               	movwf	131,b	;volatile
 15386                           
 15387                           ; BSR set to: 58
 15388                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 15389  00587E  6993               	setf	147,b	;volatile
 15390                           
 15391                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 15392  005880  0E0F               	movlw	15
 15393  005882  6FE8               	movwf	232,b	;volatile
 15394                           
 15395                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 15396  005884  0E16               	movlw	22
 15397  005886  6F0E               	movwf	14,b	;volatile
 15398                           
 15399                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 15400  005888  0E1E               	movlw	30
 15401  00588A  6F13               	movwf	19,b	;volatile
 15402                           
 15403                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 15404  00588C  0E08               	movlw	8
 15405  00588E  6FC0               	movwf	192,b	;volatile
 15406                           
 15407                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 15408  005890  0E0A               	movlw	10
 15409  005892  6FC2               	movwf	194,b	;volatile
 15410                           
 15411                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 15412  005894  0E09               	movlw	9
 15413  005896  6FC1               	movwf	193,b	;volatile
 15414                           
 15415                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 15416  005898  0E17               	movlw	23
 15417  00589A  6FE5               	movwf	229,b	;volatile
 15418                           
 15419                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 15420  00589C  0E13               	movlw	19
 15421  00589E  6FDE               	movwf	222,b	;volatile
 15422                           
 15423                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 15424  0058A0  0E01               	movlw	1
 15425  0058A2  6F04               	movwf	4,b	;volatile
 15426                           
 15427                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 15428  0058A4  0E26               	movlw	38
 15429  0058A6  6F05               	movwf	5,b	;volatile
 15430                           
 15431                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 15432  0058A8  0E28               	movlw	40
 15433  0058AA  6F06               	movwf	6,b	;volatile
 15434                           
 15435                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 15436  0058AC  0E1F               	movlw	31
 15437  0058AE  6F15               	movwf	21,b	;volatile
 15438                           
 15439                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 15440  0058B0  0E13               	movlw	19
 15441  0058B2  6F16               	movwf	22,b	;volatile
 15442                           
 15443                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 15444  0058B4  0E14               	movlw	20
 15445  0058B6  6FDF               	movwf	223,b	;volatile
 15446                           
 15447                           ; BSR set to: 58
 15448                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 15449  0058B8  0012               	return		;funcret
 15450  0058BA                     __end_of_PIN_MANAGER_Initialize:
 15451                           	opt callstack 0
 15452                           
 15453 ;; *************** function _OSCILLATOR_Initialize *****************
 15454 ;; Defined at:
 15455 ;;		line 70 in file "mcc_generated_files/mcc.c"
 15456 ;; Parameters:    Size  Location     Type
 15457 ;;		None
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;		None
 15460 ;; Return value:  Size  Location     Type
 15461 ;;                  1  [STACK] void 
 15462 ;; Registers used:
 15463 ;;		wreg, status,2
 15464 ;; Tracked objects:
 15465 ;;		On entry : 3F/3A
 15466 ;;		On exit  : 3F/39
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15473 ;;Total ram usage:        0 bytes
 15474 ;; Hardware stack levels used:    1
 15475 ;; Hardware stack levels required when called:    3
 15476 ;; This function calls:
 15477 ;;		Nothing
 15478 ;; This function is called by:
 15479 ;;		_SYSTEM_Initialize
 15480 ;; This function uses a reentrant model
 15481 ;;
 15482                           
 15483                           	psect	text72
 15484  0069BA                     __ptext72:
 15485                           	opt callstack 0
 15486  0069BA                     _OSCILLATOR_Initialize:
 15487                           	opt callstack 26
 15488                           
 15489                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 15490                           
 15491                           ; BSR set to: 58
 15492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15493                           ;incstack = 0
 15494  0069BA  0E20               	movlw	32
 15495  0069BC  0139               	movlb	57	; () banked
 15496  0069BE  6FD9               	movwf	217,b	;volatile
 15497                           
 15498                           ; BSR set to: 57
 15499                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 15500  0069C0  6BDB               	clrf	219,b	;volatile
 15501                           
 15502                           ; BSR set to: 57
 15503                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 15504  0069C2  6BDD               	clrf	221,b	;volatile
 15505                           
 15506                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 15507  0069C4  0E02               	movlw	2
 15508  0069C6  6FDF               	movwf	223,b	;volatile
 15509                           
 15510                           ; BSR set to: 57
 15511                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 15512  0069C8  6BDE               	clrf	222,b	;volatile
 15513  0069CA                     l194:
 15514                           
 15515                           ; BSR set to: 57
 15516                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 15517  0069CA  B1DC               	btfsc	220,0,b	;volatile
 15518  0069CC  0012               	return	
 15519  0069CE  D7FD               	goto	l194
 15520  0069D0                     __end_of_OSCILLATOR_Initialize:
 15521                           	opt callstack 0
 15522                           
 15523 ;; *************** function _NCO1_Initialize *****************
 15524 ;; Defined at:
 15525 ;;		line 58 in file "mcc_generated_files/nco1.c"
 15526 ;; Parameters:    Size  Location     Type
 15527 ;;		None
 15528 ;; Auto vars:     Size  Location     Type
 15529 ;;		None
 15530 ;; Return value:  Size  Location     Type
 15531 ;;                  1  [STACK] void 
 15532 ;; Registers used:
 15533 ;;		wreg, status,2
 15534 ;; Tracked objects:
 15535 ;;		On entry : 0/39
 15536 ;;		On exit  : 3F/3F
 15537 ;;		Unchanged: 0/0
 15538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;Total ram usage:        0 bytes
 15544 ;; Hardware stack levels used:    1
 15545 ;; Hardware stack levels required when called:    3
 15546 ;; This function calls:
 15547 ;;		Nothing
 15548 ;; This function is called by:
 15549 ;;		_SYSTEM_Initialize
 15550 ;; This function uses a reentrant model
 15551 ;;
 15552                           
 15553                           	psect	text73
 15554  00691C                     __ptext73:
 15555                           	opt callstack 0
 15556  00691C                     _NCO1_Initialize:
 15557                           	opt callstack 26
 15558                           
 15559                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 15560                           
 15561                           ; BSR set to: 57
 15562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15563                           ;incstack = 0
 15564  00691C  013F               	movlb	63	; () banked
 15565  00691E  6B3E               	clrf	62,b	;volatile
 15566                           
 15567                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 15568  006920  6B3F               	clrf	63,b	;volatile
 15569                           
 15570                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 15571  006922  6B3A               	clrf	58,b	;volatile
 15572                           
 15573                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 15574  006924  6B39               	clrf	57,b	;volatile
 15575                           
 15576                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 15577  006926  6B38               	clrf	56,b	;volatile
 15578                           
 15579                           ; BSR set to: 63
 15580                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 15581  006928  0E06               	movlw	6
 15582  00692A  6F3D               	movwf	61,b	;volatile
 15583                           
 15584                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 15585  00692C  0EC7               	movlw	199
 15586  00692E  6F3C               	movwf	60,b	;volatile
 15587                           
 15588                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 15589  006930  0EAE               	movlw	174
 15590  006932  6F3B               	movwf	59,b	;volatile
 15591                           
 15592                           ; BSR set to: 63
 15593                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 15594  006934  8F3E               	bsf	62,7,b	;volatile
 15595                           
 15596                           ; BSR set to: 63
 15597                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15598  006936  0012               	return		;funcret
 15599  006938                     __end_of_NCO1_Initialize:
 15600                           	opt callstack 0
 15601                           
 15602 ;; *************** function _INTERRUPT_Initialize *****************
 15603 ;; Defined at:
 15604 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15605 ;; Parameters:    Size  Location     Type
 15606 ;;		None
 15607 ;; Auto vars:     Size  Location     Type
 15608 ;;  state           1  [STACK] _Bool 
 15609 ;; Return value:  Size  Location     Type
 15610 ;;                  1  [STACK] void 
 15611 ;; Registers used:
 15612 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 15613 ;; Tracked objects:
 15614 ;;		On entry : 0/0
 15615 ;;		On exit  : 3F/39
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15622 ;;Total ram usage:        0 bytes
 15623 ;; Hardware stack levels used:    1
 15624 ;; Hardware stack levels required when called:    3
 15625 ;; This function calls:
 15626 ;;		Nothing
 15627 ;; This function is called by:
 15628 ;;		_SYSTEM_Initialize
 15629 ;; This function uses a reentrant model
 15630 ;;
 15631                           
 15632                           	psect	text74
 15633  005CAE                     __ptext74:
 15634                           	opt callstack 0
 15635  005CAE                     _INTERRUPT_Initialize:
 15636                           	opt callstack 0
 15637                           
 15638                           ; BSR set to: 63
 15639                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15640  005CAE  52E6               	movf	postinc1,f,c
 15641                           
 15642                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15643                           
 15644                           ;incstack = 0
 15645  005CB0  8AD2               	bsf	16338,5,c	;volatile
 15646                           
 15647                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15648  005CB2  AED2               	btfss	16338,7,c	;volatile
 15649  005CB4  D003               	goto	u3510
 15650  005CB6  6A48               	clrf	btemp+11,c
 15651  005CB8  2A48               	incf	btemp+11,f,c
 15652  005CBA  D001               	goto	u3528
 15653  005CBC                     u3510:
 15654  005CBC  6A48               	clrf	btemp+11,c
 15655  005CBE                     u3528:
 15656                           
 15657                           ;stkvar	_state @ sp[(-1)+0]
 15658  005CBE  0EFF               	movlw	-1
 15659  005CC0  0060  F123  FFE3   	movff	btemp+11,plusw1
 15660                           
 15661                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15662  005CC6  9ED2               	bcf	16338,7,c	;volatile
 15663                           
 15664                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15665  005CC8  0E55               	movlw	85
 15666  005CCA  6ED4               	movwf	16340,c	;volatile
 15667                           
 15668                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15669  005CCC  0EAA               	movlw	170
 15670  005CCE  6ED4               	movwf	16340,c	;volatile
 15671                           
 15672                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15673  005CD0  90D4               	bcf	16340,0,c	;volatile
 15674                           
 15675                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 15676  005CD2  0138               	movlb	56	; () banked
 15677  005CD4  6B9F               	clrf	159,b	;volatile
 15678                           
 15679                           ; BSR set to: 56
 15680                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 15681  005CD6  6B9E               	clrf	158,b	;volatile
 15682                           
 15683                           ; BSR set to: 56
 15684                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 15685  005CD8  0E08               	movlw	8
 15686  005CDA  6F9D               	movwf	157,b	;volatile
 15687                           
 15688                           ; BSR set to: 56
 15689                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15690  005CDC  0E55               	movlw	85
 15691  005CDE  6ED4               	movwf	16340,c	;volatile
 15692                           
 15693                           ; BSR set to: 56
 15694                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15695  005CE0  0EAA               	movlw	170
 15696  005CE2  6ED4               	movwf	16340,c	;volatile
 15697                           
 15698                           ; BSR set to: 56
 15699                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15700  005CE4  80D4               	bsf	16340,0,c	;volatile
 15701                           
 15702                           ; BSR set to: 56
 15703                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15704                           ;stkvar	_state @ sp[(-1)+0]
 15705  005CE6  0EFF               	movlw	-1
 15706  005CE8  B0E3               	btfsc	plusw1,0,c
 15707  005CEA  D002               	bra	u3535
 15708  005CEC  9ED2               	bcf	16338,7,c	;volatile
 15709  005CEE  D001               	bra	u3536
 15710  005CF0                     u3535:
 15711  005CF0  8ED2               	bsf	16338,7,c	;volatile
 15712  005CF2                     u3536:
 15713                           
 15714                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 15715  005CF2  0139               	movlb	57	; () banked
 15716  005CF4  8782               	bsf	130,3,b	;volatile
 15717                           
 15718                           ; BSR set to: 57
 15719                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 15720  005CF6  8382               	bsf	130,1,b	;volatile
 15721                           
 15722                           ; BSR set to: 57
 15723                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 15724  005CF8  8182               	bsf	130,0,b	;volatile
 15725                           
 15726                           ; BSR set to: 57
 15727                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 15728  005CFA  8582               	bsf	130,2,b	;volatile
 15729                           
 15730                           ; BSR set to: 57
 15731                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 15732  005CFC  8786               	bsf	134,3,b	;volatile
 15733                           
 15734                           ; BSR set to: 57
 15735                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 15736  005CFE  8586               	bsf	134,2,b	;volatile
 15737                           
 15738                           ; BSR set to: 57
 15739                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 15740  005D00  8983               	bsf	131,4,b	;volatile
 15741                           
 15742                           ; BSR set to: 57
 15743                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 15744  005D02  8783               	bsf	131,3,b	;volatile
 15745                           
 15746                           ; BSR set to: 57
 15747                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 15748  005D04  8181               	bsf	129,0,b	;volatile
 15749                           
 15750                           ; BSR set to: 57
 15751                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 15752  005D06  8185               	bsf	133,0,b	;volatile
 15753                           
 15754                           ; BSR set to: 57
 15755                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 15756  005D08  8B87               	bsf	135,5,b	;volatile
 15757                           
 15758                           ; BSR set to: 57
 15759                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 15760  005D0A  8189               	bsf	137,0,b	;volatile
 15761                           
 15762                           ; BSR set to: 57
 15763                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 15764  005D0C  8D88               	bsf	136,6,b	;volatile
 15765                           
 15766                           ; BSR set to: 57
 15767                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 15768  005D0E  8581               	bsf	129,2,b	;volatile
 15769                           
 15770                           ; BSR set to: 57
 15771                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 15772  005D10  52E5               	movf	postdec1,f,c
 15773  005D12  0012               	return		;funcret
 15774  005D14                     __end_of_INTERRUPT_Initialize:
 15775                           	opt callstack 0
 15776                           
 15777 ;; *************** function _EXT_INT_Initialize *****************
 15778 ;; Defined at:
 15779 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 15780 ;; Parameters:    Size  Location     Type
 15781 ;;		None
 15782 ;; Auto vars:     Size  Location     Type
 15783 ;;		None
 15784 ;; Return value:  Size  Location     Type
 15785 ;;                  1  [STACK] void 
 15786 ;; Registers used:
 15787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15788 ;; Tracked objects:
 15789 ;;		On entry : 3F/3F
 15790 ;;		On exit  : 3F/39
 15791 ;;		Unchanged: 0/0
 15792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15797 ;;Total ram usage:        0 bytes
 15798 ;; Hardware stack levels used:    1
 15799 ;; Hardware stack levels required when called:    4
 15800 ;; This function calls:
 15801 ;;		_INT0_SetInterruptHandler
 15802 ;;		_INT1_SetInterruptHandler
 15803 ;;		_INT2_SetInterruptHandler
 15804 ;; This function is called by:
 15805 ;;		_SYSTEM_Initialize
 15806 ;; This function uses a reentrant model
 15807 ;;
 15808                           
 15809                           	psect	text75
 15810  006032                     __ptext75:
 15811                           	opt callstack 0
 15812  006032                     _EXT_INT_Initialize:
 15813                           	opt callstack 25
 15814                           
 15815                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 15816                           
 15817                           ; BSR set to: 57
 15818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15819                           ;incstack = 0
 15820  006032  0139               	movlb	57	; () banked
 15821  006034  91A1               	bcf	161,0,b	;volatile
 15822                           
 15823                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 15824  006036  90D2               	bcf	16338,0,c	;volatile
 15825                           
 15826                           ; BSR set to: 57
 15827                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 15828  006038  0E9E               	movlw	low _INT0_DefaultInterruptHandler
 15829  00603A  6EE6               	movwf	postinc1,c
 15830  00603C  0E6A               	movlw	high _INT0_DefaultInterruptHandler
 15831  00603E  6EE6               	movwf	postinc1,c
 15832  006040  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 15833  006042  6EE6               	movwf	postinc1,c
 15834  006044  EC72  F033         	call	_INT0_SetInterruptHandler	;wreg free
 15835                           
 15836                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 15837  006048  0139               	movlb	57	; () banked
 15838  00604A  8191               	bsf	145,0,b	;volatile
 15839                           
 15840                           ; BSR set to: 57
 15841                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 15842  00604C  91A5               	bcf	165,0,b	;volatile
 15843                           
 15844                           ; BSR set to: 57
 15845                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 15846  00604E  92D2               	bcf	16338,1,c	;volatile
 15847                           
 15848                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 15849  006050  0EA0               	movlw	low _INT1_DefaultInterruptHandler
 15850  006052  6EE6               	movwf	postinc1,c
 15851  006054  0E6A               	movlw	high _INT1_DefaultInterruptHandler
 15852  006056  6EE6               	movwf	postinc1,c
 15853  006058  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 15854  00605A  6EE6               	movwf	postinc1,c
 15855  00605C  EC5E  F033         	call	_INT1_SetInterruptHandler	;wreg free
 15856                           
 15857                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 15858  006060  0139               	movlb	57	; () banked
 15859  006062  8195               	bsf	149,0,b	;volatile
 15860                           
 15861                           ; BSR set to: 57
 15862                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 15863  006064  9BA7               	bcf	167,5,b	;volatile
 15864                           
 15865                           ; BSR set to: 57
 15866                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 15867  006066  94D2               	bcf	16338,2,c	;volatile
 15868                           
 15869                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 15870  006068  0EA2               	movlw	low _INT2_DefaultInterruptHandler
 15871  00606A  6EE6               	movwf	postinc1,c
 15872  00606C  0E6A               	movlw	high _INT2_DefaultInterruptHandler
 15873  00606E  6EE6               	movwf	postinc1,c
 15874  006070  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 15875  006072  6EE6               	movwf	postinc1,c
 15876  006074  EC4A  F033         	call	_INT2_SetInterruptHandler	;wreg free
 15877                           
 15878                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 15879  006078  0139               	movlb	57	; () banked
 15880  00607A  8B97               	bsf	151,5,b	;volatile
 15881                           
 15882                           ; BSR set to: 57
 15883                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15884  00607C  0012               	return		;funcret
 15885  00607E                     __end_of_EXT_INT_Initialize:
 15886                           	opt callstack 0
 15887                           
 15888 ;; *************** function _INT2_SetInterruptHandler *****************
 15889 ;; Defined at:
 15890 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 15891 ;; Parameters:    Size  Location     Type
 15892 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15893 ;;		 -> INT2_DefaultInterruptHandler(1), 
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;		None
 15896 ;; Return value:  Size  Location     Type
 15897 ;;                  1  [STACK] void 
 15898 ;; Registers used:
 15899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15900 ;; Tracked objects:
 15901 ;;		On entry : 3F/39
 15902 ;;		On exit  : 0/0
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15909 ;;Total ram usage:        0 bytes
 15910 ;; Hardware stack levels used:    1
 15911 ;; Hardware stack levels required when called:    3
 15912 ;; This function calls:
 15913 ;;		Nothing
 15914 ;; This function is called by:
 15915 ;;		_EXT_INT_Initialize
 15916 ;; This function uses a reentrant model
 15917 ;;
 15918                           
 15919                           	psect	text76
 15920  006694                     __ptext76:
 15921                           	opt callstack 0
 15922  006694                     _INT2_SetInterruptHandler:
 15923                           	opt callstack 25
 15924                           
 15925                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 15926                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15927                           
 15928                           ; BSR set to: 57
 15929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15930                           ;incstack = 0
 15931  006694  50E1               	movf	fsr1l,w,c
 15932  006696  0FFD               	addlw	-3
 15933  006698  6ED9               	movwf	fsr2l,c
 15934  00669A  50E2               	movf	fsr1h,w,c
 15935  00669C  6EDA               	movwf	fsr2h,c
 15936  00669E  0EFF               	movlw	255
 15937  0066A0  22DA               	addwfc	fsr2h,f,c
 15938  0066A2  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 15939  0066A8  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 15940  0066AE  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 15941                           
 15942                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15943  0066B4  52E5               	movf	postdec1,f,c
 15944  0066B6  52E5               	movf	postdec1,f,c
 15945  0066B8  52E5               	movf	postdec1,f,c
 15946  0066BA  0012               	return		;funcret
 15947  0066BC                     __end_of_INT2_SetInterruptHandler:
 15948                           	opt callstack 0
 15949                           
 15950 ;; *************** function _INT1_SetInterruptHandler *****************
 15951 ;; Defined at:
 15952 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15955 ;;		 -> INT1_DefaultInterruptHandler(1), 
 15956 ;; Auto vars:     Size  Location     Type
 15957 ;;		None
 15958 ;; Return value:  Size  Location     Type
 15959 ;;                  1  [STACK] void 
 15960 ;; Registers used:
 15961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15962 ;; Tracked objects:
 15963 ;;		On entry : 3F/39
 15964 ;;		On exit  : 0/0
 15965 ;;		Unchanged: 0/0
 15966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15971 ;;Total ram usage:        0 bytes
 15972 ;; Hardware stack levels used:    1
 15973 ;; Hardware stack levels required when called:    3
 15974 ;; This function calls:
 15975 ;;		Nothing
 15976 ;; This function is called by:
 15977 ;;		_EXT_INT_Initialize
 15978 ;; This function uses a reentrant model
 15979 ;;
 15980                           
 15981                           	psect	text77
 15982  0066BC                     __ptext77:
 15983                           	opt callstack 0
 15984  0066BC                     _INT1_SetInterruptHandler:
 15985                           	opt callstack 25
 15986                           
 15987                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 15988                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15989                           
 15990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15991                           ;incstack = 0
 15992  0066BC  50E1               	movf	fsr1l,w,c
 15993  0066BE  0FFD               	addlw	-3
 15994  0066C0  6ED9               	movwf	fsr2l,c
 15995  0066C2  50E2               	movf	fsr1h,w,c
 15996  0066C4  6EDA               	movwf	fsr2h,c
 15997  0066C6  0EFF               	movlw	255
 15998  0066C8  22DA               	addwfc	fsr2h,f,c
 15999  0066CA  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 16000  0066D0  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 16001  0066D6  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 16002                           
 16003                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16004  0066DC  52E5               	movf	postdec1,f,c
 16005  0066DE  52E5               	movf	postdec1,f,c
 16006  0066E0  52E5               	movf	postdec1,f,c
 16007  0066E2  0012               	return		;funcret
 16008  0066E4                     __end_of_INT1_SetInterruptHandler:
 16009                           	opt callstack 0
 16010                           
 16011 ;; *************** function _INT0_SetInterruptHandler *****************
 16012 ;; Defined at:
 16013 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 16014 ;; Parameters:    Size  Location     Type
 16015 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16016 ;;		 -> INT0_DefaultInterruptHandler(1), 
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;		None
 16019 ;; Return value:  Size  Location     Type
 16020 ;;                  1  [STACK] void 
 16021 ;; Registers used:
 16022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16023 ;; Tracked objects:
 16024 ;;		On entry : 3F/39
 16025 ;;		On exit  : 0/0
 16026 ;;		Unchanged: 0/0
 16027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16032 ;;Total ram usage:        0 bytes
 16033 ;; Hardware stack levels used:    1
 16034 ;; Hardware stack levels required when called:    3
 16035 ;; This function calls:
 16036 ;;		Nothing
 16037 ;; This function is called by:
 16038 ;;		_EXT_INT_Initialize
 16039 ;; This function uses a reentrant model
 16040 ;;
 16041                           
 16042                           	psect	text78
 16043  0066E4                     __ptext78:
 16044                           	opt callstack 0
 16045  0066E4                     _INT0_SetInterruptHandler:
 16046                           	opt callstack 25
 16047                           
 16048                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 16049                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16050                           
 16051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16052                           ;incstack = 0
 16053  0066E4  50E1               	movf	fsr1l,w,c
 16054  0066E6  0FFD               	addlw	-3
 16055  0066E8  6ED9               	movwf	fsr2l,c
 16056  0066EA  50E2               	movf	fsr1h,w,c
 16057  0066EC  6EDA               	movwf	fsr2h,c
 16058  0066EE  0EFF               	movlw	255
 16059  0066F0  22DA               	addwfc	fsr2h,f,c
 16060  0066F2  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 16061  0066F8  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 16062  0066FE  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 16063                           
 16064                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16065  006704  52E5               	movf	postdec1,f,c
 16066  006706  52E5               	movf	postdec1,f,c
 16067  006708  52E5               	movf	postdec1,f,c
 16068  00670A  0012               	return		;funcret
 16069  00670C                     __end_of_INT0_SetInterruptHandler:
 16070                           	opt callstack 0
 16071                           
 16072 ;; *************** function _DSM_Initialize *****************
 16073 ;; Defined at:
 16074 ;;		line 58 in file "mcc_generated_files/dsm.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;		None
 16077 ;; Auto vars:     Size  Location     Type
 16078 ;;		None
 16079 ;; Return value:  Size  Location     Type
 16080 ;;                  1  [STACK] void 
 16081 ;; Registers used:
 16082 ;;		wreg, status,2
 16083 ;; Tracked objects:
 16084 ;;		On entry : 0/3C
 16085 ;;		On exit  : 3F/3C
 16086 ;;		Unchanged: 0/0
 16087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16092 ;;Total ram usage:        0 bytes
 16093 ;; Hardware stack levels used:    1
 16094 ;; Hardware stack levels required when called:    3
 16095 ;; This function calls:
 16096 ;;		Nothing
 16097 ;; This function is called by:
 16098 ;;		_SYSTEM_Initialize
 16099 ;; This function uses a reentrant model
 16100 ;;
 16101                           
 16102                           	psect	text79
 16103  006938                     __ptext79:
 16104                           	opt callstack 0
 16105  006938                     _DSM_Initialize:
 16106                           	opt callstack 26
 16107                           
 16108                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 16109                           
 16110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16111                           ;incstack = 0
 16112  006938  013C               	movlb	60	; () banked
 16113  00693A  99FA               	bcf	250,4,b	;volatile
 16114                           
 16115                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 16116  00693C  81FB               	bsf	251,0,b	;volatile
 16117                           
 16118                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 16119  00693E  93FB               	bcf	251,1,b	;volatile
 16120                           
 16121                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 16122  006940  89FB               	bsf	251,4,b	;volatile
 16123                           
 16124                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 16125  006942  9BFB               	bcf	251,5,b	;volatile
 16126                           
 16127                           ; BSR set to: 60
 16128                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 16129  006944  0E13               	movlw	19
 16130  006946  6FFC               	movwf	252,b	;volatile
 16131                           
 16132                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 16133  006948  0E0E               	movlw	14
 16134  00694A  6FFE               	movwf	254,b	;volatile
 16135                           
 16136                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 16137  00694C  0E04               	movlw	4
 16138  00694E  6FFD               	movwf	253,b	;volatile
 16139                           
 16140                           ; BSR set to: 60
 16141                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 16142  006950  8FFA               	bsf	250,7,b	;volatile
 16143                           
 16144                           ; BSR set to: 60
 16145                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 16146  006952  0012               	return		;funcret
 16147  006954                     __end_of_DSM_Initialize:
 16148                           	opt callstack 0
 16149                           
 16150 ;; *************** function _DMA1_Initialize *****************
 16151 ;; Defined at:
 16152 ;;		line 86 in file "mcc_generated_files/dma1.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;		None
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;		None
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  1  [STACK] void 
 16159 ;; Registers used:
 16160 ;;		wreg, status,2
 16161 ;; Tracked objects:
 16162 ;;		On entry : 3F/3D
 16163 ;;		On exit  : 3F/3B
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16170 ;;Total ram usage:        0 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:    3
 16173 ;; This function calls:
 16174 ;;		Nothing
 16175 ;; This function is called by:
 16176 ;;		_SYSTEM_Initialize
 16177 ;; This function uses a reentrant model
 16178 ;;
 16179                           
 16180                           	psect	text80
 16181  005C44                     __ptext80:
 16182                           	opt callstack 0
 16183  005C44                     _DMA1_Initialize:
 16184                           	opt callstack 26
 16185                           
 16186                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 16187                           
 16188                           ; BSR set to: 60
 16189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16190                           ;incstack = 0
 16191  005C44  0E00               	movlw	0
 16192  005C46  013B               	movlb	59	; () banked
 16193  005C48  6FF9               	movwf	249,b	;volatile
 16194  005C4A  0E10               	movlw	16
 16195  005C4C  6FFA               	movwf	250,b	;volatile
 16196  005C4E  0E00               	movlw	0
 16197  005C50  6FFB               	movwf	251,b	;volatile
 16198                           
 16199                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 16200  005C52  0E3D               	movlw	61
 16201  005C54  6FF1               	movwf	241,b	;volatile
 16202  005C56  0E11               	movlw	17
 16203  005C58  6FF0               	movwf	240,b	;volatile
 16204                           
 16205                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 16206  005C5A  0E03               	movlw	3
 16207  005C5C  6FFD               	movwf	253,b	;volatile
 16208                           
 16209                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 16210  005C5E  0E00               	movlw	0
 16211  005C60  6FF8               	movwf	248,b	;volatile
 16212  005C62  0E01               	movlw	1
 16213  005C64  6FF7               	movwf	247,b	;volatile
 16214                           
 16215                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 16216  005C66  0E00               	movlw	0
 16217  005C68  6FEF               	movwf	239,b	;volatile
 16218  005C6A  0E01               	movlw	1
 16219  005C6C  6FEE               	movwf	238,b	;volatile
 16220                           
 16221                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 16222  005C6E  0E15               	movlw	21
 16223  005C70  6FFF               	movwf	255,b	;volatile
 16224                           
 16225                           ; BSR set to: 59
 16226                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 16227  005C72  6BFE               	clrf	254,b	;volatile
 16228                           
 16229                           ; BSR set to: 59
 16230                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 16231  005C74  0139               	movlb	57	; () banked
 16232  005C76  93A2               	bcf	162,1,b	;volatile
 16233                           
 16234                           ; BSR set to: 57
 16235                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 16236  005C78  91A2               	bcf	162,0,b	;volatile
 16237                           
 16238                           ; BSR set to: 57
 16239                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 16240  005C7A  97A2               	bcf	162,3,b	;volatile
 16241                           
 16242                           ; BSR set to: 57
 16243                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 16244  005C7C  95A2               	bcf	162,2,b	;volatile
 16245                           
 16246                           ; BSR set to: 57
 16247                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 16248  005C7E  8392               	bsf	146,1,b	;volatile
 16249                           
 16250                           ; BSR set to: 57
 16251                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 16252  005C80  8192               	bsf	146,0,b	;volatile
 16253                           
 16254                           ; BSR set to: 57
 16255                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 16256  005C82  8792               	bsf	146,3,b	;volatile
 16257                           
 16258                           ; BSR set to: 57
 16259                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 16260  005C84  8592               	bsf	146,2,b	;volatile
 16261                           
 16262                           ; BSR set to: 57
 16263                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 16264  005C86  6BF1               	clrf	241,b	;volatile
 16265                           
 16266                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 16267  005C88  0E01               	movlw	1
 16268  005C8A  6FF2               	movwf	242,b	;volatile
 16269                           
 16270                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 16271  005C8C  0E04               	movlw	4
 16272  005C8E  6FF3               	movwf	243,b	;volatile
 16273                           
 16274                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 16275  005C90  0E02               	movlw	2
 16276  005C92  6FF4               	movwf	244,b	;volatile
 16277                           
 16278                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 16279  005C94  0E03               	movlw	3
 16280  005C96  6FF7               	movwf	247,b	;volatile
 16281  005C98  9ED2               	bcf	16338,7,c	;# 
 16282  005C9A  0139               	banksel	14831	;# 
 16283  005C9C  0E55               	movlw	85	;# 
 16284  005C9E  6FEF               	movwf	14831,b	;# 
 16285  005CA0  0EAA               	movlw	170	;# 
 16286  005CA2  6FEF               	movwf	14831,b	;# 
 16287  005CA4  81EF               	bsf	14831,0,b	;# 
 16288  005CA6  8ED2               	bsf	16338,7,c	;# 
 16289                           
 16290                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 16291  005CA8  013B               	movlb	59	; () banked
 16292  005CAA  6BFC               	clrf	252,b	;volatile
 16293                           
 16294                           ; BSR set to: 59
 16295                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16296  005CAC  0012               	return		;funcret
 16297  005CAE                     __end_of_DMA1_Initialize:
 16298                           	opt callstack 0
 16299                           
 16300 ;; *************** function _CLKREF_Initialize *****************
 16301 ;; Defined at:
 16302 ;;		line 58 in file "mcc_generated_files/clkref.c"
 16303 ;; Parameters:    Size  Location     Type
 16304 ;;		None
 16305 ;; Auto vars:     Size  Location     Type
 16306 ;;		None
 16307 ;; Return value:  Size  Location     Type
 16308 ;;                  1  [STACK] void 
 16309 ;; Registers used:
 16310 ;;		wreg, status,2
 16311 ;; Tracked objects:
 16312 ;;		On entry : 3F/3B
 16313 ;;		On exit  : 3F/3C
 16314 ;;		Unchanged: 0/0
 16315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16320 ;;Total ram usage:        0 bytes
 16321 ;; Hardware stack levels used:    1
 16322 ;; Hardware stack levels required when called:    3
 16323 ;; This function calls:
 16324 ;;		Nothing
 16325 ;; This function is called by:
 16326 ;;		_SYSTEM_Initialize
 16327 ;; This function uses a reentrant model
 16328 ;;
 16329                           
 16330                           	psect	text81
 16331  006A3E                     __ptext81:
 16332                           	opt callstack 0
 16333  006A3E                     _CLKREF_Initialize:
 16334                           	opt callstack 26
 16335                           
 16336                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 16337                           
 16338                           ; BSR set to: 59
 16339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16340                           ;incstack = 0
 16341  006A3E  013C               	movlb	60	; () banked
 16342  006A40  6BE6               	clrf	230,b	;volatile
 16343                           
 16344                           ; BSR set to: 60
 16345                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 16346  006A42  0E94               	movlw	148
 16347  006A44  6FE5               	movwf	229,b	;volatile
 16348                           
 16349                           ; BSR set to: 60
 16350                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16351  006A46  0012               	return		;funcret
 16352  006A48                     __end_of_CLKREF_Initialize:
 16353                           	opt callstack 0
 16354                           
 16355 ;; *************** function _CLC1_Initialize *****************
 16356 ;; Defined at:
 16357 ;;		line 58 in file "mcc_generated_files/clc1.c"
 16358 ;; Parameters:    Size  Location     Type
 16359 ;;		None
 16360 ;; Auto vars:     Size  Location     Type
 16361 ;;		None
 16362 ;; Return value:  Size  Location     Type
 16363 ;;                  1  [STACK] void 
 16364 ;; Registers used:
 16365 ;;		wreg, status,2
 16366 ;; Tracked objects:
 16367 ;;		On entry : 0/39
 16368 ;;		On exit  : 3F/3C
 16369 ;;		Unchanged: 0/0
 16370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16375 ;;Total ram usage:        0 bytes
 16376 ;; Hardware stack levels used:    1
 16377 ;; Hardware stack levels required when called:    3
 16378 ;; This function calls:
 16379 ;;		Nothing
 16380 ;; This function is called by:
 16381 ;;		_SYSTEM_Initialize
 16382 ;; This function uses a reentrant model
 16383 ;;
 16384                           
 16385                           	psect	text82
 16386  00681A                     __ptext82:
 16387                           	opt callstack 0
 16388  00681A                     _CLC1_Initialize:
 16389                           	opt callstack 26
 16390                           
 16391                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 16392                           
 16393                           ; BSR set to: 60
 16394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16395                           ;incstack = 0
 16396  00681A  013C               	movlb	60	; () banked
 16397  00681C  6B75               	clrf	117,b	;volatile
 16398                           
 16399                           ; BSR set to: 60
 16400                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 16401  00681E  0E04               	movlw	4
 16402  006820  6F76               	movwf	118,b	;volatile
 16403                           
 16404                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 16405  006822  0E04               	movlw	4
 16406  006824  6F77               	movwf	119,b	;volatile
 16407                           
 16408                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 16409  006826  0E04               	movlw	4
 16410  006828  6F78               	movwf	120,b	;volatile
 16411                           
 16412                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 16413  00682A  0E04               	movlw	4
 16414  00682C  6F79               	movwf	121,b	;volatile
 16415                           
 16416                           ; BSR set to: 60
 16417                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 16418  00682E  6B7A               	clrf	122,b	;volatile
 16419                           
 16420                           ; BSR set to: 60
 16421                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 16422  006830  6B7B               	clrf	123,b	;volatile
 16423                           
 16424                           ; BSR set to: 60
 16425                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 16426  006832  6B7C               	clrf	124,b	;volatile
 16427                           
 16428                           ; BSR set to: 60
 16429                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 16430  006834  6B7D               	clrf	125,b	;volatile
 16431                           
 16432                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 16433  006836  0E81               	movlw	129
 16434  006838  6F74               	movwf	116,b	;volatile
 16435                           
 16436                           ; BSR set to: 60
 16437                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16438  00683A  0012               	return		;funcret
 16439  00683C                     __end_of_CLC1_Initialize:
 16440                           	opt callstack 0
 16441                           
 16442 ;; *************** function _ADCC_Initialize *****************
 16443 ;; Defined at:
 16444 ;;		line 64 in file "mcc_generated_files/adcc.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;		None
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;		None
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1  [STACK] void 
 16451 ;; Registers used:
 16452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 16453 ;; Tracked objects:
 16454 ;;		On entry : 3F/39
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16462 ;;Total ram usage:        0 bytes
 16463 ;; Hardware stack levels used:    1
 16464 ;; Hardware stack levels required when called:    4
 16465 ;; This function calls:
 16466 ;;		_ADCC_SetADIInterruptHandler
 16467 ;; This function is called by:
 16468 ;;		_SYSTEM_Initialize
 16469 ;; This function uses a reentrant model
 16470 ;;
 16471                           
 16472                           	psect	text83
 16473  00607E                     __ptext83:
 16474                           	opt callstack 0
 16475  00607E                     _ADCC_Initialize:
 16476                           	opt callstack 25
 16477                           
 16478                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 16479                           
 16480                           ; BSR set to: 60
 16481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16482                           ;incstack = 0
 16483  00607E  013E               	movlb	62	; () banked
 16484  006080  6BDE               	clrf	222,b	;volatile
 16485                           
 16486                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 16487  006082  6BDF               	clrf	223,b	;volatile
 16488                           
 16489                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 16490  006084  6BE0               	clrf	224,b	;volatile
 16491                           
 16492                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 16493  006086  6BE1               	clrf	225,b	;volatile
 16494                           
 16495                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 16496  006088  6BE4               	clrf	228,b	;volatile
 16497                           
 16498                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 16499  00608A  6BE5               	clrf	229,b	;volatile
 16500                           
 16501                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 16502  00608C  6BEA               	clrf	234,b	;volatile
 16503                           
 16504                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 16505  00608E  6BEC               	clrf	236,b	;volatile
 16506                           
 16507                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 16508  006090  6BF1               	clrf	241,b	;volatile
 16509                           
 16510                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 16511  006092  6BF3               	clrf	243,b	;volatile
 16512                           
 16513                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 16514  006094  6BF4               	clrf	244,b	;volatile
 16515                           
 16516                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 16517  006096  6BF5               	clrf	245,b	;volatile
 16518                           
 16519                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 16520  006098  6BF6               	clrf	246,b	;volatile
 16521                           
 16522                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 16523  00609A  6BF7               	clrf	247,b	;volatile
 16524                           
 16525                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 16526  00609C  6BF9               	clrf	249,b	;volatile
 16527                           
 16528                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 16529  00609E  6BFA               	clrf	250,b	;volatile
 16530                           
 16531                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 16532  0060A0  6BFB               	clrf	251,b	;volatile
 16533                           
 16534                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 16535  0060A2  6BFC               	clrf	252,b	;volatile
 16536                           
 16537                           ; BSR set to: 62
 16538                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 16539  0060A4  0E02               	movlw	2
 16540  0060A6  6FFD               	movwf	253,b	;volatile
 16541                           
 16542                           ; BSR set to: 62
 16543                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 16544  0060A8  6BFE               	clrf	254,b	;volatile
 16545                           
 16546                           ; BSR set to: 62
 16547                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 16548  0060AA  6BFF               	clrf	255,b	;volatile
 16549                           
 16550                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 16551  0060AC  0E94               	movlw	148
 16552  0060AE  6FF8               	movwf	248,b	;volatile
 16553                           
 16554                           ; BSR set to: 62
 16555                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 16556  0060B0  0139               	movlb	57	; () banked
 16557  0060B2  95A1               	bcf	161,2,b	;volatile
 16558                           
 16559                           ; BSR set to: 57
 16560                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 16561  0060B4  8591               	bsf	145,2,b	;volatile
 16562                           
 16563                           ; BSR set to: 57
 16564                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 16565  0060B6  0EA4               	movlw	low _ADCC_DefaultInterruptHandler
 16566  0060B8  6EE6               	movwf	postinc1,c
 16567  0060BA  0E6A               	movlw	high _ADCC_DefaultInterruptHandler
 16568  0060BC  6EE6               	movwf	postinc1,c
 16569  0060BE  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 16570  0060C0  6EE6               	movwf	postinc1,c
 16571  0060C2  EC86  F033         	call	_ADCC_SetADIInterruptHandler	;wreg free
 16572                           
 16573                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16574  0060C6  0012               	return		;funcret
 16575  0060C8                     __end_of_ADCC_Initialize:
 16576                           	opt callstack 0
 16577                           
 16578 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 16579 ;; Defined at:
 16580 ;;		line 316 in file "mcc_generated_files/adcc.c"
 16581 ;; Parameters:    Size  Location     Type
 16582 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16583 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 16584 ;; Auto vars:     Size  Location     Type
 16585 ;;		None
 16586 ;; Return value:  Size  Location     Type
 16587 ;;                  1  [STACK] void 
 16588 ;; Registers used:
 16589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16590 ;; Tracked objects:
 16591 ;;		On entry : 3F/39
 16592 ;;		On exit  : 0/0
 16593 ;;		Unchanged: 0/0
 16594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16599 ;;Total ram usage:        0 bytes
 16600 ;; Hardware stack levels used:    1
 16601 ;; Hardware stack levels required when called:    3
 16602 ;; This function calls:
 16603 ;;		Nothing
 16604 ;; This function is called by:
 16605 ;;		_ADCC_Initialize
 16606 ;; This function uses a reentrant model
 16607 ;;
 16608                           
 16609                           	psect	text84
 16610  00670C                     __ptext84:
 16611                           	opt callstack 0
 16612  00670C                     _ADCC_SetADIInterruptHandler:
 16613                           	opt callstack 25
 16614                           
 16615                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 16616                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16617                           
 16618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16619                           ;incstack = 0
 16620  00670C  50E1               	movf	fsr1l,w,c
 16621  00670E  0FFD               	addlw	-3
 16622  006710  6ED9               	movwf	fsr2l,c
 16623  006712  50E2               	movf	fsr1h,w,c
 16624  006714  6EDA               	movwf	fsr2h,c
 16625  006716  0EFF               	movlw	255
 16626  006718  22DA               	addwfc	fsr2h,f,c
 16627  00671A  006F FF78  F0EC    	movff	postinc2,_ADCC_ADI_InterruptHandler
 16628  006720  006F FF78  F0ED    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 16629  006726  006F FF74  F0EE    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 16630                           
 16631                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 16632  00672C  52E5               	movf	postdec1,f,c
 16633  00672E  52E5               	movf	postdec1,f,c
 16634  006730  52E5               	movf	postdec1,f,c
 16635  006732  0012               	return		;funcret
 16636  006734                     __end_of_ADCC_SetADIInterruptHandler:
 16637                           	opt callstack 0
 16638                           
 16639 ;; *************** function _INT0_ISR *****************
 16640 ;; Defined at:
 16641 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 16642 ;; Parameters:    Size  Location     Type
 16643 ;;		None
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;		None
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  1    wreg      void 
 16648 ;; Registers used:
 16649 ;;		wreg, status,2, status,0, pclath, tosl
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16659 ;;Total ram usage:        0 bytes
 16660 ;; Hardware stack levels used:    1
 16661 ;; Hardware stack levels required when called:    2
 16662 ;; This function calls:
 16663 ;;		_INT0_CallBack
 16664 ;; This function is called by:
 16665 ;;		Interrupt level 2
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text85
 16670  006A10                     __ptext85:
 16671                           	opt callstack 0
 16672  006A10                     _INT0_ISR:
 16673                           	opt callstack 17
 16674                           
 16675                           ;incstack = 0
 16676  006A10  EE13  F22E         	lfsr	1,___inthi_sp
 16677                           
 16678                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 16679  006A14  0139               	movlb	57	; () banked
 16680  006A16  91A1               	bcf	161,0,b	;volatile
 16681                           
 16682                           ; BSR set to: 57
 16683                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 16684  006A18  EC1E  F034         	call	_INT0_CallBack	;wreg free
 16685  006A1C  0011               	retfie		f
 16686  006A1E                     __end_of_INT0_ISR:
 16687                           	opt callstack 0
 16688                           
 16689 ;; *************** function _INT0_CallBack *****************
 16690 ;; Defined at:
 16691 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 16692 ;; Parameters:    Size  Location     Type
 16693 ;;		None
 16694 ;; Auto vars:     Size  Location     Type
 16695 ;;		None
 16696 ;; Return value:  Size  Location     Type
 16697 ;;                  1  [STACK] void 
 16698 ;; Registers used:
 16699 ;;		wreg, status,2, status,0, pclath, tosl
 16700 ;; Tracked objects:
 16701 ;;		On entry : 3F/39
 16702 ;;		On exit  : 0/0
 16703 ;;		Unchanged: 0/0
 16704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16709 ;;Total ram usage:        0 bytes
 16710 ;; Hardware stack levels used:    1
 16711 ;; Hardware stack levels required when called:    1
 16712 ;; This function calls:
 16713 ;;		Absolute function
 16714 ;;		_INT0_DefaultInterruptHandler
 16715 ;; This function is called by:
 16716 ;;		_INT0_ISR
 16717 ;; This function uses a reentrant model
 16718 ;;
 16719                           
 16720                           	psect	text86
 16721  00683C                     __ptext86:
 16722                           	opt callstack 0
 16723  00683C                     _INT0_CallBack:
 16724                           	opt callstack 17
 16725                           
 16726                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 16727                           
 16728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16729                           ;incstack = 0
 16730  00683C  501A               	movf	_INT0_InterruptHandler,w,c
 16731  00683E  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 16732  006840  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 16733  006842  B4D8               	btfsc	status,2,c
 16734  006844  0012               	return	
 16735                           
 16736                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 16737  006846  D801               	call	u131_48
 16738  006848  0012               	return	
 16739  00684A                     u131_48:
 16740  00684A  0005               	push	
 16741  00684C  6EFA               	movwf	pclath,c
 16742  00684E  501A               	movf	_INT0_InterruptHandler,w,c
 16743  006850  6EFD               	movwf	tosl,c
 16744  006852  501B               	movf	_INT0_InterruptHandler+1,w,c
 16745  006854  6EFE               	movwf	tosh,c
 16746  006856  501C               	movf	_INT0_InterruptHandler+2,w,c
 16747  006858  6EFF               	movwf	tosu,c
 16748  00685A  50FA               	movf	pclath,w,c
 16749  00685C  0012               	return		;indir
 16750  00685E                     __end_of_INT0_CallBack:
 16751                           	opt callstack 0
 16752                           
 16753 ;; *************** function _INT0_DefaultInterruptHandler *****************
 16754 ;; Defined at:
 16755 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1  [STACK] void 
 16762 ;; Registers used:
 16763 ;;		None
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/39
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16773 ;;Total ram usage:        0 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; This function calls:
 16776 ;;		Nothing
 16777 ;; This function is called by:
 16778 ;;		_EXT_INT_Initialize
 16779 ;;		_INT0_CallBack
 16780 ;; This function uses a reentrant model
 16781 ;;
 16782                           
 16783                           	psect	text87
 16784  006A9E                     __ptext87:
 16785                           	opt callstack 0
 16786  006A9E                     _INT0_DefaultInterruptHandler:
 16787                           	opt callstack 17
 16788                           
 16789                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16790                           
 16791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16792                           ;incstack = 0
 16793  006A9E  0012               	return		;funcret
 16794  006AA0                     __end_of_INT0_DefaultInterruptHandler:
 16795                           	opt callstack 0
 16796                           
 16797 ;; *************** function _INT1_ISR *****************
 16798 ;; Defined at:
 16799 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 16800 ;; Parameters:    Size  Location     Type
 16801 ;;		None
 16802 ;; Auto vars:     Size  Location     Type
 16803 ;;		None
 16804 ;; Return value:  Size  Location     Type
 16805 ;;                  1    wreg      void 
 16806 ;; Registers used:
 16807 ;;		wreg, status,2, status,0, pclath, tosl
 16808 ;; Tracked objects:
 16809 ;;		On entry : 0/0
 16810 ;;		On exit  : 0/0
 16811 ;;		Unchanged: 0/0
 16812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16817 ;;Total ram usage:        0 bytes
 16818 ;; Hardware stack levels used:    1
 16819 ;; Hardware stack levels required when called:    2
 16820 ;; This function calls:
 16821 ;;		_INT1_CallBack
 16822 ;; This function is called by:
 16823 ;;		Interrupt level 2
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           	psect	text88
 16828  006A20                     __ptext88:
 16829                           	opt callstack 0
 16830  006A20                     _INT1_ISR:
 16831                           	opt callstack 17
 16832                           
 16833                           ;incstack = 0
 16834  006A20  EE13  F22E         	lfsr	1,___inthi_sp
 16835                           
 16836                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 16837  006A24  0139               	movlb	57	; () banked
 16838  006A26  91A5               	bcf	165,0,b	;volatile
 16839                           
 16840                           ; BSR set to: 57
 16841                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 16842  006A28  EC2F  F034         	call	_INT1_CallBack	;wreg free
 16843  006A2C  0011               	retfie		f
 16844  006A2E                     __end_of_INT1_ISR:
 16845                           	opt callstack 0
 16846                           
 16847 ;; *************** function _INT1_CallBack *****************
 16848 ;; Defined at:
 16849 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 16850 ;; Parameters:    Size  Location     Type
 16851 ;;		None
 16852 ;; Auto vars:     Size  Location     Type
 16853 ;;		None
 16854 ;; Return value:  Size  Location     Type
 16855 ;;                  1  [STACK] void 
 16856 ;; Registers used:
 16857 ;;		wreg, status,2, status,0, pclath, tosl
 16858 ;; Tracked objects:
 16859 ;;		On entry : 3F/39
 16860 ;;		On exit  : 0/0
 16861 ;;		Unchanged: 0/0
 16862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16867 ;;Total ram usage:        0 bytes
 16868 ;; Hardware stack levels used:    1
 16869 ;; Hardware stack levels required when called:    1
 16870 ;; This function calls:
 16871 ;;		Absolute function
 16872 ;;		_INT1_DefaultInterruptHandler
 16873 ;; This function is called by:
 16874 ;;		_INT1_ISR
 16875 ;; This function uses a reentrant model
 16876 ;;
 16877                           
 16878                           	psect	text89
 16879  00685E                     __ptext89:
 16880                           	opt callstack 0
 16881  00685E                     _INT1_CallBack:
 16882                           	opt callstack 17
 16883                           
 16884                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 16885                           
 16886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16887                           ;incstack = 0
 16888  00685E  5017               	movf	_INT1_InterruptHandler,w,c
 16889  006860  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 16890  006862  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 16891  006864  B4D8               	btfsc	status,2,c
 16892  006866  0012               	return	
 16893                           
 16894                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 16895  006868  D801               	call	u133_48
 16896  00686A  0012               	return	
 16897  00686C                     u133_48:
 16898  00686C  0005               	push	
 16899  00686E  6EFA               	movwf	pclath,c
 16900  006870  5017               	movf	_INT1_InterruptHandler,w,c
 16901  006872  6EFD               	movwf	tosl,c
 16902  006874  5018               	movf	_INT1_InterruptHandler+1,w,c
 16903  006876  6EFE               	movwf	tosh,c
 16904  006878  5019               	movf	_INT1_InterruptHandler+2,w,c
 16905  00687A  6EFF               	movwf	tosu,c
 16906  00687C  50FA               	movf	pclath,w,c
 16907  00687E  0012               	return		;indir
 16908  006880                     __end_of_INT1_CallBack:
 16909                           	opt callstack 0
 16910                           
 16911 ;; *************** function _INT1_DefaultInterruptHandler *****************
 16912 ;; Defined at:
 16913 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;		None
 16916 ;; Auto vars:     Size  Location     Type
 16917 ;;		None
 16918 ;; Return value:  Size  Location     Type
 16919 ;;                  1  [STACK] void 
 16920 ;; Registers used:
 16921 ;;		None
 16922 ;; Tracked objects:
 16923 ;;		On entry : 0/39
 16924 ;;		On exit  : 0/0
 16925 ;;		Unchanged: 0/0
 16926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16931 ;;Total ram usage:        0 bytes
 16932 ;; Hardware stack levels used:    1
 16933 ;; This function calls:
 16934 ;;		Nothing
 16935 ;; This function is called by:
 16936 ;;		_EXT_INT_Initialize
 16937 ;;		_INT1_CallBack
 16938 ;; This function uses a reentrant model
 16939 ;;
 16940                           
 16941                           	psect	text90
 16942  006AA0                     __ptext90:
 16943                           	opt callstack 0
 16944  006AA0                     _INT1_DefaultInterruptHandler:
 16945                           	opt callstack 17
 16946                           
 16947                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16948                           
 16949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16950                           ;incstack = 0
 16951  006AA0  0012               	return		;funcret
 16952  006AA2                     __end_of_INT1_DefaultInterruptHandler:
 16953                           	opt callstack 0
 16954                           
 16955 ;; *************** function _INT2_ISR *****************
 16956 ;; Defined at:
 16957 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;		None
 16960 ;; Auto vars:     Size  Location     Type
 16961 ;;		None
 16962 ;; Return value:  Size  Location     Type
 16963 ;;                  1    wreg      void 
 16964 ;; Registers used:
 16965 ;;		wreg, status,2, status,0, pclath, tosl
 16966 ;; Tracked objects:
 16967 ;;		On entry : 0/0
 16968 ;;		On exit  : 0/0
 16969 ;;		Unchanged: 0/0
 16970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16975 ;;Total ram usage:        0 bytes
 16976 ;; Hardware stack levels used:    1
 16977 ;; Hardware stack levels required when called:    2
 16978 ;; This function calls:
 16979 ;;		_INT2_CallBack
 16980 ;; This function is called by:
 16981 ;;		Interrupt level 2
 16982 ;; This function uses a non-reentrant model
 16983 ;;
 16984                           
 16985                           	psect	text91
 16986  006A30                     __ptext91:
 16987                           	opt callstack 0
 16988  006A30                     _INT2_ISR:
 16989                           	opt callstack 17
 16990                           
 16991                           ;incstack = 0
 16992  006A30  EE13  F22E         	lfsr	1,___inthi_sp
 16993                           
 16994                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 16995  006A34  0139               	movlb	57	; () banked
 16996  006A36  9BA7               	bcf	167,5,b	;volatile
 16997                           
 16998                           ; BSR set to: 57
 16999                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 17000  006A38  EC40  F034         	call	_INT2_CallBack	;wreg free
 17001  006A3C  0011               	retfie		f
 17002  006A3E                     __end_of_INT2_ISR:
 17003                           	opt callstack 0
 17004                           
 17005 ;; *************** function _INT2_CallBack *****************
 17006 ;; Defined at:
 17007 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 17008 ;; Parameters:    Size  Location     Type
 17009 ;;		None
 17010 ;; Auto vars:     Size  Location     Type
 17011 ;;		None
 17012 ;; Return value:  Size  Location     Type
 17013 ;;                  1  [STACK] void 
 17014 ;; Registers used:
 17015 ;;		wreg, status,2, status,0, pclath, tosl
 17016 ;; Tracked objects:
 17017 ;;		On entry : 3F/39
 17018 ;;		On exit  : 0/0
 17019 ;;		Unchanged: 0/0
 17020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17025 ;;Total ram usage:        0 bytes
 17026 ;; Hardware stack levels used:    1
 17027 ;; Hardware stack levels required when called:    1
 17028 ;; This function calls:
 17029 ;;		Absolute function
 17030 ;;		_INT2_DefaultInterruptHandler
 17031 ;; This function is called by:
 17032 ;;		_INT2_ISR
 17033 ;; This function uses a reentrant model
 17034 ;;
 17035                           
 17036                           	psect	text92
 17037  006880                     __ptext92:
 17038                           	opt callstack 0
 17039  006880                     _INT2_CallBack:
 17040                           	opt callstack 17
 17041                           
 17042                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 17043                           
 17044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17045                           ;incstack = 0
 17046  006880  5014               	movf	_INT2_InterruptHandler,w,c
 17047  006882  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 17048  006884  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 17049  006886  B4D8               	btfsc	status,2,c
 17050  006888  0012               	return	
 17051                           
 17052                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 17053  00688A  D801               	call	u135_48
 17054  00688C  0012               	return	
 17055  00688E                     u135_48:
 17056  00688E  0005               	push	
 17057  006890  6EFA               	movwf	pclath,c
 17058  006892  5014               	movf	_INT2_InterruptHandler,w,c
 17059  006894  6EFD               	movwf	tosl,c
 17060  006896  5015               	movf	_INT2_InterruptHandler+1,w,c
 17061  006898  6EFE               	movwf	tosh,c
 17062  00689A  5016               	movf	_INT2_InterruptHandler+2,w,c
 17063  00689C  6EFF               	movwf	tosu,c
 17064  00689E  50FA               	movf	pclath,w,c
 17065  0068A0  0012               	return		;indir
 17066  0068A2                     __end_of_INT2_CallBack:
 17067                           	opt callstack 0
 17068                           
 17069 ;; *************** function _INT2_DefaultInterruptHandler *****************
 17070 ;; Defined at:
 17071 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 17072 ;; Parameters:    Size  Location     Type
 17073 ;;		None
 17074 ;; Auto vars:     Size  Location     Type
 17075 ;;		None
 17076 ;; Return value:  Size  Location     Type
 17077 ;;                  1  [STACK] void 
 17078 ;; Registers used:
 17079 ;;		None
 17080 ;; Tracked objects:
 17081 ;;		On entry : 0/39
 17082 ;;		On exit  : 0/0
 17083 ;;		Unchanged: 0/0
 17084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17089 ;;Total ram usage:        0 bytes
 17090 ;; Hardware stack levels used:    1
 17091 ;; This function calls:
 17092 ;;		Nothing
 17093 ;; This function is called by:
 17094 ;;		_EXT_INT_Initialize
 17095 ;;		_INT2_CallBack
 17096 ;; This function uses a reentrant model
 17097 ;;
 17098                           
 17099                           	psect	text93
 17100  006AA2                     __ptext93:
 17101                           	opt callstack 0
 17102  006AA2                     _INT2_DefaultInterruptHandler:
 17103                           	opt callstack 17
 17104                           
 17105                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17106                           
 17107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17108                           ;incstack = 0
 17109  006AA2  0012               	return		;funcret
 17110  006AA4                     __end_of_INT2_DefaultInterruptHandler:
 17111                           	opt callstack 0
 17112                           
 17113 ;; *************** function _Default_ISR *****************
 17114 ;; Defined at:
 17115 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;		None
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;		None
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  1    wreg      void 
 17122 ;; Registers used:
 17123 ;;		None
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17133 ;;Total ram usage:        0 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; This function calls:
 17136 ;;		Nothing
 17137 ;; This function is called by:
 17138 ;;		Interrupt level 2
 17139 ;; This function uses a non-reentrant model
 17140 ;;
 17141                           
 17142                           	psect	text94
 17143  006A98                     __ptext94:
 17144                           	opt callstack 0
 17145  006A98                     _Default_ISR:
 17146                           	opt callstack 19
 17147                           
 17148                           ;incstack = 0
 17149  006A98  EE13  F22E         	lfsr	1,___inthi_sp
 17150  006A9C  0011               	retfie		f
 17151  006A9E                     __end_of_Default_ISR:
 17152                           	opt callstack 0
 17153                           
 17154 ;; *************** function _ADCC_ISR *****************
 17155 ;; Defined at:
 17156 ;;		line 307 in file "mcc_generated_files/adcc.c"
 17157 ;; Parameters:    Size  Location     Type
 17158 ;;		None
 17159 ;; Auto vars:     Size  Location     Type
 17160 ;;		None
 17161 ;; Return value:  Size  Location     Type
 17162 ;;                  1    wreg      void 
 17163 ;; Registers used:
 17164 ;;		wreg, status,2, status,0, pclath, tosl
 17165 ;; Tracked objects:
 17166 ;;		On entry : 0/0
 17167 ;;		On exit  : 0/0
 17168 ;;		Unchanged: 0/0
 17169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17174 ;;Total ram usage:        0 bytes
 17175 ;; Hardware stack levels used:    1
 17176 ;; Hardware stack levels required when called:    1
 17177 ;; This function calls:
 17178 ;;		Absolute function
 17179 ;;		_ADCC_DefaultInterruptHandler
 17180 ;; This function is called by:
 17181 ;;		Interrupt level 2
 17182 ;; This function uses a non-reentrant model
 17183 ;;
 17184                           
 17185                           	psect	text95
 17186  0063DC                     __ptext95:
 17187                           	opt callstack 0
 17188  0063DC                     _ADCC_ISR:
 17189                           	opt callstack 18
 17190                           
 17191                           ;incstack = 0
 17192  0063DC  EE13  F22E         	lfsr	1,___inthi_sp
 17193                           
 17194                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 17195  0063E0  0139               	movlb	57	; () banked
 17196  0063E2  95A1               	bcf	161,2,b	;volatile
 17197                           
 17198                           ; BSR set to: 57
 17199                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 17200  0063E4  0100               	movlb	0	; () banked
 17201  0063E6  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 17202  0063E8  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 17203  0063EA  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 17204  0063EC  B4D8               	btfsc	status,2,c
 17205  0063EE  0011               	retfie		f
 17206                           
 17207                           ; BSR set to: 0
 17208                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 17209  0063F0  D801               	call	i2u457_48
 17210  0063F2  0011               	retfie		f
 17211  0063F4                     i2u457_48:
 17212  0063F4  0005               	push	
 17213  0063F6  6EFA               	movwf	pclath,c
 17214  0063F8  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 17215  0063FA  6EFD               	movwf	tosl,c
 17216  0063FC  51ED               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 17217  0063FE  6EFE               	movwf	tosh,c
 17218  006400  51EE               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 17219  006402  6EFF               	movwf	tosu,c
 17220  006404  50FA               	movf	pclath,w,c
 17221  006406  0012               	return		;indir
 17222  006408                     __end_of_ADCC_ISR:
 17223                           	opt callstack 0
 17224                           
 17225 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 17226 ;; Defined at:
 17227 ;;		line 320 in file "mcc_generated_files/adcc.c"
 17228 ;; Parameters:    Size  Location     Type
 17229 ;;		None
 17230 ;; Auto vars:     Size  Location     Type
 17231 ;;		None
 17232 ;; Return value:  Size  Location     Type
 17233 ;;                  1  [STACK] void 
 17234 ;; Registers used:
 17235 ;;		None
 17236 ;; Tracked objects:
 17237 ;;		On entry : 3F/0
 17238 ;;		On exit  : 0/0
 17239 ;;		Unchanged: 0/0
 17240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17245 ;;Total ram usage:        0 bytes
 17246 ;; Hardware stack levels used:    1
 17247 ;; This function calls:
 17248 ;;		Nothing
 17249 ;; This function is called by:
 17250 ;;		_ADCC_Initialize
 17251 ;;		_ADCC_ISR
 17252 ;; This function uses a reentrant model
 17253 ;;
 17254                           
 17255                           	psect	text96
 17256  006AA4                     __ptext96:
 17257                           	opt callstack 0
 17258  006AA4                     _ADCC_DefaultInterruptHandler:
 17259                           	opt callstack 18
 17260                           
 17261                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17262                           
 17263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17264                           ;incstack = 0
 17265  006AA4  0012               	return		;funcret
 17266  006AA6                     __end_of_ADCC_DefaultInterruptHandler:
 17267                           	opt callstack 0
 17268                           
 17269 ;; *************** function _UART1_tx_vect_isr *****************
 17270 ;; Defined at:
 17271 ;;		line 197 in file "mcc_generated_files/uart1.c"
 17272 ;; Parameters:    Size  Location     Type
 17273 ;;		None
 17274 ;; Auto vars:     Size  Location     Type
 17275 ;;		None
 17276 ;; Return value:  Size  Location     Type
 17277 ;;                  1    wreg      void 
 17278 ;; Registers used:
 17279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17280 ;; Tracked objects:
 17281 ;;		On entry : 0/0
 17282 ;;		On exit  : 0/0
 17283 ;;		Unchanged: 0/0
 17284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17289 ;;Total ram usage:        0 bytes
 17290 ;; Hardware stack levels used:    1
 17291 ;; Hardware stack levels required when called:    1
 17292 ;; This function calls:
 17293 ;;		Absolute function
 17294 ;;		_UART1_Transmit_ISR
 17295 ;; This function is called by:
 17296 ;;		Interrupt level 2
 17297 ;; This function uses a non-reentrant model
 17298 ;;
 17299                           
 17300                           	psect	text97
 17301  006734                     __ptext97:
 17302                           	opt callstack 0
 17303  006734                     _UART1_tx_vect_isr:
 17304                           	opt callstack 18
 17305                           
 17306                           ;incstack = 0
 17307  006734  EE13  F22E         	lfsr	1,___inthi_sp
 17308                           
 17309                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 17310  006738  5008               	movf	_UART1_TxInterruptHandler,w,c
 17311  00673A  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 17312  00673C  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 17313  00673E  B4D8               	btfsc	status,2,c
 17314  006740  0011               	retfie		f
 17315                           
 17316                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 17317  006742  D801               	call	i2u459_48
 17318  006744  0011               	retfie		f
 17319  006746                     i2u459_48:
 17320  006746  0005               	push	
 17321  006748  6EFA               	movwf	pclath,c
 17322  00674A  5008               	movf	_UART1_TxInterruptHandler,w,c
 17323  00674C  6EFD               	movwf	tosl,c
 17324  00674E  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 17325  006750  6EFE               	movwf	tosh,c
 17326  006752  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 17327  006754  6EFF               	movwf	tosu,c
 17328  006756  50FA               	movf	pclath,w,c
 17329  006758  0012               	return		;indir
 17330  00675A                     __end_of_UART1_tx_vect_isr:
 17331                           	opt callstack 0
 17332                           
 17333 ;; *************** function _UART1_Transmit_ISR *****************
 17334 ;; Defined at:
 17335 ;;		line 211 in file "mcc_generated_files/uart1.c"
 17336 ;; Parameters:    Size  Location     Type
 17337 ;;		None
 17338 ;; Auto vars:     Size  Location     Type
 17339 ;;		None
 17340 ;; Return value:  Size  Location     Type
 17341 ;;                  1  [STACK] void 
 17342 ;; Registers used:
 17343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17344 ;; Tracked objects:
 17345 ;;		On entry : 0/0
 17346 ;;		On exit  : 3B/39
 17347 ;;		Unchanged: 0/0
 17348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17353 ;;Total ram usage:        0 bytes
 17354 ;; Hardware stack levels used:    1
 17355 ;; This function calls:
 17356 ;;		Nothing
 17357 ;; This function is called by:
 17358 ;;		_UART1_Initialize
 17359 ;;		_UART1_tx_vect_isr
 17360 ;; This function uses a reentrant model
 17361 ;;
 17362                           
 17363                           	psect	text98
 17364  006408                     __ptext98:
 17365                           	opt callstack 0
 17366  006408                     _UART1_Transmit_ISR:
 17367                           	opt callstack 18
 17368                           
 17369                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 17370                           
 17371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17372                           ;incstack = 0
 17373  006408  0E40               	movlw	64
 17374  00640A  603A               	cpfslt	_uart1TxBufferRemaining,c
 17375  00640C  D010               	goto	l597
 17376                           
 17377                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 17378  00640E  0E40               	movlw	low _uart1TxBuffer
 17379  006410  243B               	addwf	_uart1TxTail,w,c	;volatile
 17380  006412  6ED9               	movwf	fsr2l,c
 17381  006414  6ADA               	clrf	fsr2h,c
 17382  006416  0E03               	movlw	high _uart1TxBuffer
 17383  006418  22DA               	addwfc	fsr2h,f,c
 17384  00641A  50DF               	movf	indf2,w,c
 17385  00641C  013D               	movlb	61	; () banked
 17386  00641E  6FEA               	movwf	234,b	;volatile
 17387                           
 17388                           ; BSR set to: 61
 17389  006420  2A3B               	incf	_uart1TxTail,f,c	;volatile
 17390                           
 17391                           ; BSR set to: 61
 17392                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 17393  006422  0E3F               	movlw	63
 17394  006424  643B               	cpfsgt	_uart1TxTail,c
 17395  006426  D001               	goto	l6913
 17396                           
 17397                           ; BSR set to: 61
 17398                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 17399  006428  6A3B               	clrf	_uart1TxTail,c	;volatile
 17400  00642A                     l6913:
 17401                           
 17402                           ; BSR set to: 61
 17403                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 17404  00642A  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 17405                           
 17406                           ;mcc_generated_files/uart1.c: 220:  } else {
 17407  00642C  0012               	return	
 17408  00642E                     l597:
 17409                           
 17410                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 17411  00642E  0139               	movlb	57	; () banked
 17412  006430  9993               	bcf	147,4,b	;volatile
 17413                           
 17414                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 17415  006432  0012               	return		;funcret
 17416  006434                     __end_of_UART1_Transmit_ISR:
 17417                           	opt callstack 0
 17418                           
 17419 ;; *************** function _UART1_rx_vect_isr *****************
 17420 ;; Defined at:
 17421 ;;		line 204 in file "mcc_generated_files/uart1.c"
 17422 ;; Parameters:    Size  Location     Type
 17423 ;;		None
 17424 ;; Auto vars:     Size  Location     Type
 17425 ;;		None
 17426 ;; Return value:  Size  Location     Type
 17427 ;;                  1    wreg      void 
 17428 ;; Registers used:
 17429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17430 ;; Tracked objects:
 17431 ;;		On entry : 0/0
 17432 ;;		On exit  : 0/0
 17433 ;;		Unchanged: 0/0
 17434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17439 ;;Total ram usage:        0 bytes
 17440 ;; Hardware stack levels used:    1
 17441 ;; Hardware stack levels required when called:    1
 17442 ;; This function calls:
 17443 ;;		Absolute function
 17444 ;;		_UART1_Receive_ISR
 17445 ;; This function is called by:
 17446 ;;		Interrupt level 2
 17447 ;; This function uses a non-reentrant model
 17448 ;;
 17449                           
 17450                           	psect	text99
 17451  00675C                     __ptext99:
 17452                           	opt callstack 0
 17453  00675C                     _UART1_rx_vect_isr:
 17454                           	opt callstack 18
 17455                           
 17456                           ;incstack = 0
 17457  00675C  EE13  F22E         	lfsr	1,___inthi_sp
 17458                           
 17459                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 17460  006760  500B               	movf	_UART1_RxInterruptHandler,w,c
 17461  006762  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 17462  006764  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 17463  006766  B4D8               	btfsc	status,2,c
 17464  006768  0011               	retfie		f
 17465                           
 17466                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 17467  00676A  D801               	call	i2u461_48
 17468  00676C  0011               	retfie		f
 17469  00676E                     i2u461_48:
 17470  00676E  0005               	push	
 17471  006770  6EFA               	movwf	pclath,c
 17472  006772  500B               	movf	_UART1_RxInterruptHandler,w,c
 17473  006774  6EFD               	movwf	tosl,c
 17474  006776  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 17475  006778  6EFE               	movwf	tosh,c
 17476  00677A  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 17477  00677C  6EFF               	movwf	tosu,c
 17478  00677E  50FA               	movf	pclath,w,c
 17479  006780  0012               	return		;indir
 17480  006782                     __end_of_UART1_rx_vect_isr:
 17481                           	opt callstack 0
 17482                           
 17483 ;; *************** function _UART1_Receive_ISR *****************
 17484 ;; Defined at:
 17485 ;;		line 227 in file "mcc_generated_files/uart1.c"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;		None
 17488 ;; Auto vars:     Size  Location     Type
 17489 ;;		None
 17490 ;; Return value:  Size  Location     Type
 17491 ;;                  1  [STACK] void 
 17492 ;; Registers used:
 17493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17494 ;; Tracked objects:
 17495 ;;		On entry : 0/0
 17496 ;;		On exit  : 0/0
 17497 ;;		Unchanged: 0/0
 17498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17503 ;;Total ram usage:        0 bytes
 17504 ;; Hardware stack levels used:    1
 17505 ;; This function calls:
 17506 ;;		Nothing
 17507 ;; This function is called by:
 17508 ;;		_UART1_Initialize
 17509 ;;		_UART1_rx_vect_isr
 17510 ;; This function uses a reentrant model
 17511 ;;
 17512                           
 17513                           	psect	text100
 17514  0068A2                     __ptext100:
 17515                           	opt callstack 0
 17516  0068A2                     _UART1_Receive_ISR:
 17517                           	opt callstack 18
 17518                           
 17519                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 17520                           
 17521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17522                           ;incstack = 0
 17523  0068A2  0E40               	movlw	low _uart1RxBuffer
 17524  0068A4  2439               	addwf	_uart1RxHead,w,c	;volatile
 17525  0068A6  6ED9               	movwf	fsr2l,c
 17526  0068A8  6ADA               	clrf	fsr2h,c
 17527  0068AA  0E02               	movlw	high _uart1RxBuffer
 17528  0068AC  22DA               	addwfc	fsr2h,f,c
 17529  0068AE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 17530  0068B4  2A39               	incf	_uart1RxHead,f,c	;volatile
 17531                           
 17532                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 17533  0068B6  0E3F               	movlw	63
 17534  0068B8  6439               	cpfsgt	_uart1RxHead,c
 17535  0068BA  D001               	goto	l6923
 17536                           
 17537                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 17538  0068BC  6A39               	clrf	_uart1RxHead,c	;volatile
 17539  0068BE                     l6923:
 17540                           
 17541                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 17542  0068BE  2A37               	incf	_uart1RxCount,f,c	;volatile
 17543                           
 17544                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 17545  0068C0  0012               	return		;funcret
 17546  0068C2                     __end_of_UART1_Receive_ISR:
 17547                           	opt callstack 0
 17548                           
 17549 ;; *************** function _UART2_tx_vect_isr *****************
 17550 ;; Defined at:
 17551 ;;		line 195 in file "mcc_generated_files/uart2.c"
 17552 ;; Parameters:    Size  Location     Type
 17553 ;;		None
 17554 ;; Auto vars:     Size  Location     Type
 17555 ;;		None
 17556 ;; Return value:  Size  Location     Type
 17557 ;;                  1    wreg      void 
 17558 ;; Registers used:
 17559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17560 ;; Tracked objects:
 17561 ;;		On entry : 0/0
 17562 ;;		On exit  : 0/0
 17563 ;;		Unchanged: 0/0
 17564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17569 ;;Total ram usage:        0 bytes
 17570 ;; Hardware stack levels used:    1
 17571 ;; Hardware stack levels required when called:    1
 17572 ;; This function calls:
 17573 ;;		Absolute function
 17574 ;;		_UART2_Transmit_ISR
 17575 ;; This function is called by:
 17576 ;;		Interrupt level 2
 17577 ;; This function uses a non-reentrant model
 17578 ;;
 17579                           
 17580                           	psect	text101
 17581  006784                     __ptext101:
 17582                           	opt callstack 0
 17583  006784                     _UART2_tx_vect_isr:
 17584                           	opt callstack 18
 17585                           
 17586                           ;incstack = 0
 17587  006784  EE13  F22E         	lfsr	1,___inthi_sp
 17588                           
 17589                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 17590  006788  500E               	movf	_UART2_TxInterruptHandler,w,c
 17591  00678A  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 17592  00678C  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 17593  00678E  B4D8               	btfsc	status,2,c
 17594  006790  0011               	retfie		f
 17595                           
 17596                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 17597  006792  D801               	call	i2u463_48
 17598  006794  0011               	retfie		f
 17599  006796                     i2u463_48:
 17600  006796  0005               	push	
 17601  006798  6EFA               	movwf	pclath,c
 17602  00679A  500E               	movf	_UART2_TxInterruptHandler,w,c
 17603  00679C  6EFD               	movwf	tosl,c
 17604  00679E  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 17605  0067A0  6EFE               	movwf	tosh,c
 17606  0067A2  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 17607  0067A4  6EFF               	movwf	tosu,c
 17608  0067A6  50FA               	movf	pclath,w,c
 17609  0067A8  0012               	return		;indir
 17610  0067AA                     __end_of_UART2_tx_vect_isr:
 17611                           	opt callstack 0
 17612                           
 17613 ;; *************** function _UART2_Transmit_ISR *****************
 17614 ;; Defined at:
 17615 ;;		line 213 in file "mcc_generated_files/uart2.c"
 17616 ;; Parameters:    Size  Location     Type
 17617 ;;		None
 17618 ;; Auto vars:     Size  Location     Type
 17619 ;;		None
 17620 ;; Return value:  Size  Location     Type
 17621 ;;                  1  [STACK] void 
 17622 ;; Registers used:
 17623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17624 ;; Tracked objects:
 17625 ;;		On entry : 0/0
 17626 ;;		On exit  : 3B/39
 17627 ;;		Unchanged: 0/0
 17628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17633 ;;Total ram usage:        0 bytes
 17634 ;; Hardware stack levels used:    1
 17635 ;; This function calls:
 17636 ;;		Nothing
 17637 ;; This function is called by:
 17638 ;;		_UART2_Initialize
 17639 ;;		_UART2_tx_vect_isr
 17640 ;; This function uses a reentrant model
 17641 ;;
 17642                           
 17643                           	psect	text102
 17644  006434                     __ptext102:
 17645                           	opt callstack 0
 17646  006434                     _UART2_Transmit_ISR:
 17647                           	opt callstack 18
 17648                           
 17649                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 17650                           
 17651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17652                           ;incstack = 0
 17653  006434  0E40               	movlw	64
 17654  006436  6034               	cpfslt	_uart2TxBufferRemaining,c
 17655  006438  D010               	goto	l717
 17656                           
 17657                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 17658  00643A  0E00               	movlw	low _uart2TxBuffer
 17659  00643C  2435               	addwf	_uart2TxTail,w,c	;volatile
 17660  00643E  6ED9               	movwf	fsr2l,c
 17661  006440  6ADA               	clrf	fsr2h,c
 17662  006442  0E03               	movlw	high _uart2TxBuffer
 17663  006444  22DA               	addwfc	fsr2h,f,c
 17664  006446  50DF               	movf	indf2,w,c
 17665  006448  013D               	movlb	61	; () banked
 17666  00644A  6FD2               	movwf	210,b	;volatile
 17667                           
 17668                           ; BSR set to: 61
 17669  00644C  2A35               	incf	_uart2TxTail,f,c	;volatile
 17670                           
 17671                           ; BSR set to: 61
 17672                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 17673  00644E  0E3F               	movlw	63
 17674  006450  6435               	cpfsgt	_uart2TxTail,c
 17675  006452  D001               	goto	l6935
 17676                           
 17677                           ; BSR set to: 61
 17678                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 17679  006454  6A35               	clrf	_uart2TxTail,c	;volatile
 17680  006456                     l6935:
 17681                           
 17682                           ; BSR set to: 61
 17683                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 17684  006456  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 17685                           
 17686                           ;mcc_generated_files/uart2.c: 224:     }
 17687  006458  0012               	return	
 17688  00645A                     l717:
 17689                           
 17690                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 17691  00645A  0139               	movlb	57	; () banked
 17692  00645C  9796               	bcf	150,3,b	;volatile
 17693                           
 17694                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 17695  00645E  0012               	return		;funcret
 17696  006460                     __end_of_UART2_Transmit_ISR:
 17697                           	opt callstack 0
 17698                           
 17699 ;; *************** function _UART2_rx_vect_isr *****************
 17700 ;; Defined at:
 17701 ;;		line 203 in file "mcc_generated_files/uart2.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;		None
 17704 ;; Auto vars:     Size  Location     Type
 17705 ;;		None
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  1    wreg      void 
 17708 ;; Registers used:
 17709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17719 ;;Total ram usage:        0 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:    1
 17722 ;; This function calls:
 17723 ;;		Absolute function
 17724 ;;		_UART2_Receive_ISR
 17725 ;; This function is called by:
 17726 ;;		Interrupt level 2
 17727 ;; This function uses a non-reentrant model
 17728 ;;
 17729                           
 17730                           	psect	text103
 17731  0067AC                     __ptext103:
 17732                           	opt callstack 0
 17733  0067AC                     _UART2_rx_vect_isr:
 17734                           	opt callstack 18
 17735                           
 17736                           ;incstack = 0
 17737  0067AC  EE13  F22E         	lfsr	1,___inthi_sp
 17738                           
 17739                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 17740  0067B0  5011               	movf	_UART2_RxInterruptHandler,w,c
 17741  0067B2  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 17742  0067B4  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 17743  0067B6  B4D8               	btfsc	status,2,c
 17744  0067B8  0011               	retfie		f
 17745                           
 17746                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 17747  0067BA  D801               	call	i2u465_48
 17748  0067BC  0011               	retfie		f
 17749  0067BE                     i2u465_48:
 17750  0067BE  0005               	push	
 17751  0067C0  6EFA               	movwf	pclath,c
 17752  0067C2  5011               	movf	_UART2_RxInterruptHandler,w,c
 17753  0067C4  6EFD               	movwf	tosl,c
 17754  0067C6  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 17755  0067C8  6EFE               	movwf	tosh,c
 17756  0067CA  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 17757  0067CC  6EFF               	movwf	tosu,c
 17758  0067CE  50FA               	movf	pclath,w,c
 17759  0067D0  0012               	return		;indir
 17760  0067D2                     __end_of_UART2_rx_vect_isr:
 17761                           	opt callstack 0
 17762                           
 17763 ;; *************** function _UART2_Receive_ISR *****************
 17764 ;; Defined at:
 17765 ;;		line 233 in file "mcc_generated_files/uart2.c"
 17766 ;; Parameters:    Size  Location     Type
 17767 ;;		None
 17768 ;; Auto vars:     Size  Location     Type
 17769 ;;		None
 17770 ;; Return value:  Size  Location     Type
 17771 ;;                  1  [STACK] void 
 17772 ;; Registers used:
 17773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17774 ;; Tracked objects:
 17775 ;;		On entry : 0/0
 17776 ;;		On exit  : 0/0
 17777 ;;		Unchanged: 0/0
 17778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17783 ;;Total ram usage:        0 bytes
 17784 ;; Hardware stack levels used:    1
 17785 ;; This function calls:
 17786 ;;		Nothing
 17787 ;; This function is called by:
 17788 ;;		_UART2_Initialize
 17789 ;;		_UART2_rx_vect_isr
 17790 ;; This function uses a reentrant model
 17791 ;;
 17792                           
 17793                           	psect	text104
 17794  0068C2                     __ptext104:
 17795                           	opt callstack 0
 17796  0068C2                     _UART2_Receive_ISR:
 17797                           	opt callstack 18
 17798                           
 17799                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 17800                           
 17801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17802                           ;incstack = 0
 17803  0068C2  0E00               	movlw	low _uart2RxBuffer
 17804  0068C4  2433               	addwf	_uart2RxHead,w,c	;volatile
 17805  0068C6  6ED9               	movwf	fsr2l,c
 17806  0068C8  6ADA               	clrf	fsr2h,c
 17807  0068CA  0E02               	movlw	high _uart2RxBuffer
 17808  0068CC  22DA               	addwfc	fsr2h,f,c
 17809  0068CE  006F F743 FFDF     	movff	15824,indf2	;volatile
 17810  0068D4  2A33               	incf	_uart2RxHead,f,c	;volatile
 17811                           
 17812                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 17813  0068D6  0E3F               	movlw	63
 17814  0068D8  6433               	cpfsgt	_uart2RxHead,c
 17815  0068DA  D001               	goto	l6945
 17816                           
 17817                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 17818  0068DC  6A33               	clrf	_uart2RxHead,c	;volatile
 17819  0068DE                     l6945:
 17820                           
 17821                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 17822  0068DE  2A31               	incf	_uart2RxCount,f,c	;volatile
 17823                           
 17824                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 17825  0068E0  0012               	return		;funcret
 17826  0068E2                     __end_of_UART2_Receive_ISR:
 17827                           	opt callstack 0
 17828                           
 17829 ;; *************** function _TMR6_ISR *****************
 17830 ;; Defined at:
 17831 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;		None
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  1    wreg      void 
 17838 ;; Registers used:
 17839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/0
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17849 ;;Total ram usage:        1 bytes
 17850 ;; Hardware stack levels used:    1
 17851 ;; Hardware stack levels required when called:    2
 17852 ;; This function calls:
 17853 ;;		_TMR6_CallBack
 17854 ;; This function is called by:
 17855 ;;		Interrupt level 2
 17856 ;; This function uses a non-reentrant model
 17857 ;;
 17858                           
 17859                           	psect	text105
 17860  006970                     __ptext105:
 17861                           	opt callstack 0
 17862  006970                     _TMR6_ISR:
 17863                           	opt callstack 17
 17864                           
 17865                           ;incstack = 0
 17866  006970  0060  F0F4  F05E   	movff	btemp,??_TMR6_ISR
 17867  006976  EE13  F22E         	lfsr	1,___inthi_sp
 17868                           
 17869                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 17870  00697A  0139               	movlb	57	; () banked
 17871  00697C  91A9               	bcf	169,0,b	;volatile
 17872                           
 17873                           ; BSR set to: 57
 17874                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 17875  00697E  ECE9  F033         	call	_TMR6_CallBack	;wreg free
 17876  006982  0060  F178  F03D   	movff	??_TMR6_ISR,btemp
 17877  006988  0011               	retfie		f
 17878  00698A                     __end_of_TMR6_ISR:
 17879                           	opt callstack 0
 17880                           
 17881 ;; *************** function _TMR6_CallBack *****************
 17882 ;; Defined at:
 17883 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 17884 ;; Parameters:    Size  Location     Type
 17885 ;;		None
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;		None
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  1  [STACK] void 
 17890 ;; Registers used:
 17891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 17892 ;; Tracked objects:
 17893 ;;		On entry : 3F/39
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17901 ;;Total ram usage:        0 bytes
 17902 ;; Hardware stack levels used:    1
 17903 ;; Hardware stack levels required when called:    1
 17904 ;; This function calls:
 17905 ;;		Absolute function
 17906 ;;		_TMR6_DefaultInterruptHandler
 17907 ;; This function is called by:
 17908 ;;		_TMR6_ISR
 17909 ;; This function uses a reentrant model
 17910 ;;
 17911                           
 17912                           	psect	text106
 17913  0067D2                     __ptext106:
 17914                           	opt callstack 0
 17915  0067D2                     _TMR6_CallBack:
 17916                           	opt callstack 17
 17917                           
 17918                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 17919                           
 17920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17921                           ;incstack = 0
 17922  0067D2  0100               	movlb	0	; () banked
 17923  0067D4  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17924  0067D6  11EA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17925  0067D8  11EB               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17926  0067DA  B4D8               	btfsc	status,2,c
 17927  0067DC  0012               	return	
 17928                           
 17929                           ; BSR set to: 0
 17930                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 17931  0067DE  D801               	call	u384_48
 17932  0067E0  0012               	return	
 17933  0067E2                     u384_48:
 17934  0067E2  0005               	push	
 17935  0067E4  6EFA               	movwf	pclath,c
 17936  0067E6  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17937  0067E8  6EFD               	movwf	tosl,c
 17938  0067EA  51EA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17939  0067EC  6EFE               	movwf	tosh,c
 17940  0067EE  51EB               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17941  0067F0  6EFF               	movwf	tosu,c
 17942  0067F2  50FA               	movf	pclath,w,c
 17943  0067F4  0012               	return		;indir
 17944  0067F6                     __end_of_TMR6_CallBack:
 17945                           	opt callstack 0
 17946                           
 17947 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 17948 ;; Defined at:
 17949 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 17950 ;; Parameters:    Size  Location     Type
 17951 ;;		None
 17952 ;; Auto vars:     Size  Location     Type
 17953 ;;  i               1  [STACK] unsigned char 
 17954 ;; Return value:  Size  Location     Type
 17955 ;;                  1  [STACK] void 
 17956 ;; Registers used:
 17957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 17958 ;; Tracked objects:
 17959 ;;		On entry : 3F/0
 17960 ;;		On exit  : 0/0
 17961 ;;		Unchanged: 0/0
 17962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17967 ;;Total ram usage:        0 bytes
 17968 ;; Hardware stack levels used:    1
 17969 ;; This function calls:
 17970 ;;		Nothing
 17971 ;; This function is called by:
 17972 ;;		_TMR6_Initialize
 17973 ;;		_TMR6_CallBack
 17974 ;; This function uses a reentrant model
 17975 ;;
 17976                           
 17977                           	psect	text107
 17978  005F94                     __ptext107:
 17979                           	opt callstack 0
 17980  005F94                     _TMR6_DefaultInterruptHandler:
 17981                           	opt callstack 0
 17982                           
 17983                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17984  005F94  52E6               	movf	postinc1,f,c
 17985                           
 17986                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 17987                           ;stkvar	_i @ sp[(-1)+0]
 17988                           
 17989                           ;incstack = 0
 17990  005F96  0EFF               	movlw	-1
 17991  005F98  6AE3               	clrf	plusw1,c
 17992  005F9A                     l6449:
 17993                           
 17994                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 17995                           ;stkvar	_i @ sp[(-1)+0]
 17996  005F9A  0EFF               	movlw	-1
 17997  005F9C  50E3               	movf	plusw1,w,c
 17998  005F9E  0D02               	mullw	2
 17999  005FA0  0EC0               	movlw	low _tickCount
 18000  005FA2  24F3               	addwf	prodl,w,c
 18001  005FA4  6ED9               	movwf	fsr2l,c
 18002  005FA6  0E01               	movlw	high _tickCount
 18003  005FA8  20F4               	addwfc	prodh,w,c
 18004  005FAA  6EDA               	movwf	fsr2h,c
 18005  005FAC  50DE               	movf	postinc2,w,c
 18006  005FAE  10DE               	iorwf	postinc2,w,c
 18007  005FB0  B4D8               	btfsc	status,2,c
 18008  005FB2  D00C               	goto	l6453
 18009                           
 18010                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 18011                           ;stkvar	_i @ sp[(-1)+0]
 18012  005FB4  0EFF               	movlw	-1
 18013  005FB6  50E3               	movf	plusw1,w,c
 18014  005FB8  0D02               	mullw	2
 18015  005FBA  0EC0               	movlw	low _tickCount
 18016  005FBC  24F3               	addwf	prodl,w,c
 18017  005FBE  6ED9               	movwf	fsr2l,c
 18018  005FC0  0E01               	movlw	high _tickCount
 18019  005FC2  20F4               	addwfc	prodh,w,c
 18020  005FC4  6EDA               	movwf	fsr2h,c
 18021  005FC6  06DE               	decf	postinc2,f,c
 18022  005FC8  0E00               	movlw	0
 18023  005FCA  5ADD               	subwfb	postdec2,f,c
 18024  005FCC                     l6453:
 18025                           
 18026                           ;mcc_generated_files/tmr6.c: 207:  }
 18027                           ;stkvar	_i @ sp[(-1)+0]
 18028  005FCC  0EFF               	movlw	-1
 18029  005FCE  2AE3               	incf	plusw1,f,c
 18030                           
 18031                           ;stkvar	_i @ sp[(-1)+0]
 18032  005FD0  0EFF               	movlw	-1
 18033  005FD2  006F FF8C  F03D    	movff	plusw1,btemp
 18034  005FD8  0E06               	movlw	6
 18035  005FDA  643D               	cpfsgt	btemp,c
 18036  005FDC  D7DE               	goto	l6449
 18037                           
 18038                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 18039  005FDE  52E5               	movf	postdec1,f,c
 18040  005FE0  0012               	return		;funcret
 18041  005FE2                     __end_of_TMR6_DefaultInterruptHandler:
 18042                           	opt callstack 0
 18043                           
 18044 ;; *************** function _DMA1_DMASCNT_ISR *****************
 18045 ;; Defined at:
 18046 ;;		line 126 in file "mcc_generated_files/dma1.c"
 18047 ;; Parameters:    Size  Location     Type
 18048 ;;		None
 18049 ;; Auto vars:     Size  Location     Type
 18050 ;;		None
 18051 ;; Return value:  Size  Location     Type
 18052 ;;                  1    wreg      void 
 18053 ;; Registers used:
 18054 ;;		None
 18055 ;; Tracked objects:
 18056 ;;		On entry : 0/0
 18057 ;;		On exit  : 3F/0
 18058 ;;		Unchanged: 0/0
 18059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18064 ;;Total ram usage:        0 bytes
 18065 ;; Hardware stack levels used:    1
 18066 ;; This function calls:
 18067 ;;		Nothing
 18068 ;; This function is called by:
 18069 ;;		Interrupt level 2
 18070 ;; This function uses a non-reentrant model
 18071 ;;
 18072                           
 18073                           	psect	text108
 18074  0069E4                     __ptext108:
 18075                           	opt callstack 0
 18076  0069E4                     _DMA1_DMASCNT_ISR:
 18077                           	opt callstack 19
 18078                           
 18079                           ;incstack = 0
 18080  0069E4  EE13  F22E         	lfsr	1,___inthi_sp
 18081                           
 18082                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 18083  0069E8  0139               	movlb	57	; () banked
 18084  0069EA  91A2               	bcf	162,0,b	;volatile
 18085                           
 18086                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 18087  0069EC  0100               	movlb	0	; () banked
 18088  0069EE  97CF               	bcf	_spi_link& (0+255),3,b	;volatile
 18089                           
 18090                           ; BSR set to: 0
 18091                           
 18092                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE1 = 0; } while(0);
 18093  0069F0  92BE               	bcf	16318,1,c	;volatile
 18094                           
 18095                           ; BSR set to: 0
 18096  0069F2  0011               	retfie		f
 18097  0069F4                     __end_of_DMA1_DMASCNT_ISR:
 18098                           	opt callstack 0
 18099                           
 18100 ;; *************** function _DMA1_DMADCNT_ISR *****************
 18101 ;; Defined at:
 18102 ;;		line 134 in file "mcc_generated_files/dma1.c"
 18103 ;; Parameters:    Size  Location     Type
 18104 ;;		None
 18105 ;; Auto vars:     Size  Location     Type
 18106 ;;		None
 18107 ;; Return value:  Size  Location     Type
 18108 ;;                  1    wreg      void 
 18109 ;; Registers used:
 18110 ;;		None
 18111 ;; Tracked objects:
 18112 ;;		On entry : 0/0
 18113 ;;		On exit  : 3F/39
 18114 ;;		Unchanged: 0/0
 18115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18120 ;;Total ram usage:        0 bytes
 18121 ;; Hardware stack levels used:    1
 18122 ;; This function calls:
 18123 ;;		Nothing
 18124 ;; This function is called by:
 18125 ;;		Interrupt level 2
 18126 ;; This function uses a non-reentrant model
 18127 ;;
 18128                           
 18129                           	psect	text109
 18130  006A48                     __ptext109:
 18131                           	opt callstack 0
 18132  006A48                     _DMA1_DMADCNT_ISR:
 18133                           	opt callstack 19
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;incstack = 0
 18137  006A48  EE13  F22E         	lfsr	1,___inthi_sp
 18138                           
 18139                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 18140  006A4C  0139               	movlb	57	; () banked
 18141  006A4E  93A2               	bcf	162,1,b	;volatile
 18142                           
 18143                           ; BSR set to: 57
 18144  006A50  0011               	retfie		f
 18145  006A52                     __end_of_DMA1_DMADCNT_ISR:
 18146                           	opt callstack 0
 18147                           
 18148 ;; *************** function _DMA1_DMAA_ISR *****************
 18149 ;; Defined at:
 18150 ;;		line 144 in file "mcc_generated_files/dma1.c"
 18151 ;; Parameters:    Size  Location     Type
 18152 ;;		None
 18153 ;; Auto vars:     Size  Location     Type
 18154 ;;		None
 18155 ;; Return value:  Size  Location     Type
 18156 ;;                  1    wreg      void 
 18157 ;; Registers used:
 18158 ;;		None
 18159 ;; Tracked objects:
 18160 ;;		On entry : 0/0
 18161 ;;		On exit  : 3F/39
 18162 ;;		Unchanged: 0/0
 18163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18168 ;;Total ram usage:        0 bytes
 18169 ;; Hardware stack levels used:    1
 18170 ;; This function calls:
 18171 ;;		Nothing
 18172 ;; This function is called by:
 18173 ;;		Interrupt level 2
 18174 ;; This function uses a non-reentrant model
 18175 ;;
 18176                           
 18177                           	psect	text110
 18178  006A54                     __ptext110:
 18179                           	opt callstack 0
 18180  006A54                     _DMA1_DMAA_ISR:
 18181                           	opt callstack 19
 18182                           
 18183                           ; BSR set to: 57
 18184                           ;incstack = 0
 18185  006A54  EE13  F22E         	lfsr	1,___inthi_sp
 18186                           
 18187                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 18188  006A58  0139               	movlb	57	; () banked
 18189  006A5A  97A2               	bcf	162,3,b	;volatile
 18190                           
 18191                           ; BSR set to: 57
 18192  006A5C  0011               	retfie		f
 18193  006A5E                     __end_of_DMA1_DMAA_ISR:
 18194                           	opt callstack 0
 18195                           
 18196 ;; *************** function _DMA1_DMAOR_ISR *****************
 18197 ;; Defined at:
 18198 ;;		line 155 in file "mcc_generated_files/dma1.c"
 18199 ;; Parameters:    Size  Location     Type
 18200 ;;		None
 18201 ;; Auto vars:     Size  Location     Type
 18202 ;;		None
 18203 ;; Return value:  Size  Location     Type
 18204 ;;                  1    wreg      void 
 18205 ;; Registers used:
 18206 ;;		None
 18207 ;; Tracked objects:
 18208 ;;		On entry : 0/0
 18209 ;;		On exit  : 3F/39
 18210 ;;		Unchanged: 0/0
 18211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18216 ;;Total ram usage:        0 bytes
 18217 ;; Hardware stack levels used:    1
 18218 ;; This function calls:
 18219 ;;		Nothing
 18220 ;; This function is called by:
 18221 ;;		Interrupt level 2
 18222 ;; This function uses a non-reentrant model
 18223 ;;
 18224                           
 18225                           	psect	text111
 18226  006A60                     __ptext111:
 18227                           	opt callstack 0
 18228  006A60                     _DMA1_DMAOR_ISR:
 18229                           	opt callstack 19
 18230                           
 18231                           ; BSR set to: 57
 18232                           ;incstack = 0
 18233  006A60  EE13  F22E         	lfsr	1,___inthi_sp
 18234                           
 18235                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 18236  006A64  0139               	movlb	57	; () banked
 18237  006A66  95A2               	bcf	162,2,b	;volatile
 18238                           
 18239                           ; BSR set to: 57
 18240  006A68  0011               	retfie		f
 18241  006A6A                     __end_of_DMA1_DMAOR_ISR:
 18242                           	opt callstack 0
 18243                           
 18244 ;; *************** function _TMR5_ISR *****************
 18245 ;; Defined at:
 18246 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 18247 ;; Parameters:    Size  Location     Type
 18248 ;;		None
 18249 ;; Auto vars:     Size  Location     Type
 18250 ;;		None
 18251 ;; Return value:  Size  Location     Type
 18252 ;;                  1    wreg      void 
 18253 ;; Registers used:
 18254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 18255 ;; Tracked objects:
 18256 ;;		On entry : 0/0
 18257 ;;		On exit  : 0/0
 18258 ;;		Unchanged: 0/0
 18259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18262 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18263 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18264 ;;Total ram usage:        3 bytes
 18265 ;; Hardware stack levels used:    1
 18266 ;; Hardware stack levels required when called:    2
 18267 ;; This function calls:
 18268 ;;		_TMR5_CallBack
 18269 ;;		_TMR5_WriteTimer
 18270 ;; This function is called by:
 18271 ;;		Interrupt level 2
 18272 ;; This function uses a non-reentrant model
 18273 ;;
 18274                           
 18275                           	psect	text112
 18276  005FE4                     __ptext112:
 18277                           	opt callstack 0
 18278  005FE4                     _TMR5_ISR:
 18279                           	opt callstack 17
 18280                           
 18281                           ; BSR set to: 57
 18282                           ;incstack = 0
 18283  005FE4  0060  F120  F0FB   	movff	btemp+11,??_TMR5_ISR+2
 18284  005FEA  EE13  F22E         	lfsr	1,___inthi_sp
 18285                           
 18286                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 18287  005FEE  0139               	movlb	57	; () banked
 18288  005FF0  9DA8               	bcf	168,6,b	;volatile
 18289                           
 18290                           ; BSR set to: 57
 18291                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 18292  005FF2  0060  F0A7  FFE6   	movff	_timer5ReloadVal,postinc1
 18293  005FF8  0060  F0AB  FFE6   	movff	_timer5ReloadVal+1,postinc1
 18294  005FFE  ECEB  F030         	call	_TMR5_WriteTimer	;wreg free
 18295                           
 18296                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 18297  006002  0100               	movlb	0	; () banked
 18298  006004  51C1               	movf	(_V+97)& (0+255),w,b	;volatile
 18299  006006  6FF9               	movwf	??_TMR5_ISR& (0+255),b
 18300  006008  6BFA               	clrf	(??_TMR5_ISR+1)& (0+255),b
 18301  00600A  0E05               	movlw	5
 18302  00600C  27F9               	addwf	??_TMR5_ISR& (0+255),f,b
 18303  00600E  0E00               	movlw	0
 18304  006010  23FA               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 18305  006012  4A27               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 18306  006014  2A28               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 18307  006016  51F9               	movf	??_TMR5_ISR& (0+255),w,b
 18308  006018  5C27               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 18309  00601A  51FA               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 18310  00601C  5828               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 18311  00601E  A0D8               	btfss	status,0,c
 18312  006020  D004               	goto	i2l1145
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 18316  006022  ECFB  F033         	call	_TMR5_CallBack	;wreg free
 18317                           
 18318                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 18319  006026  6A27               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 18320  006028  6A28               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 18321  00602A                     i2l1145:
 18322  00602A  0060  F3EC  F048   	movff	??_TMR5_ISR+2,btemp+11
 18323  006030  0011               	retfie		f
 18324  006032                     __end_of_TMR5_ISR:
 18325                           	opt callstack 0
 18326                           
 18327 ;; *************** function _TMR5_WriteTimer *****************
 18328 ;; Defined at:
 18329 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 18330 ;; Parameters:    Size  Location     Type
 18331 ;;  timerVal        2  [STACK] unsigned short 
 18332 ;; Auto vars:     Size  Location     Type
 18333 ;;		None
 18334 ;; Return value:  Size  Location     Type
 18335 ;;                  1  [STACK] void 
 18336 ;; Registers used:
 18337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18338 ;; Tracked objects:
 18339 ;;		On entry : 3F/39
 18340 ;;		On exit  : 0/0
 18341 ;;		Unchanged: 0/0
 18342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18347 ;;Total ram usage:        0 bytes
 18348 ;; Hardware stack levels used:    1
 18349 ;; This function calls:
 18350 ;;		Nothing
 18351 ;; This function is called by:
 18352 ;;		_TMR5_ISR
 18353 ;; This function uses a reentrant model
 18354 ;;
 18355                           
 18356                           	psect	text113
 18357  0061D6                     __ptext113:
 18358                           	opt callstack 0
 18359  0061D6                     _TMR5_WriteTimer:
 18360                           	opt callstack 18
 18361                           
 18362                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 18363                           
 18364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18365                           ;incstack = 0
 18366  0061D6  A49A               	btfss	16282,2,c	;volatile
 18367  0061D8  D00F               	goto	l6961
 18368                           
 18369                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 18370  0061DA  909A               	bcf	16282,0,c	;volatile
 18371                           
 18372                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 18373                           ;stkvar	_timerVal @ sp[(0)+-2]
 18374  0061DC  0EFF               	movlw	255
 18375  0061DE  24E1               	addwf	fsr1l,w,c
 18376  0061E0  6ED9               	movwf	fsr2l,c
 18377  0061E2  0EFF               	movlw	255
 18378  0061E4  20E2               	addwfc	fsr1h,w,c
 18379  0061E6  6EDA               	movwf	fsr2h,c
 18380  0061E8  50DF               	movf	indf2,w,c
 18381  0061EA  6E99               	movwf	16281,c	;volatile
 18382                           
 18383                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 18384                           ;stkvar	_timerVal @ sp[(0)+-2]
 18385  0061EC  0EFE               	movlw	-2
 18386  0061EE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 18387                           
 18388                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 18389  0061F4  809A               	bsf	16282,0,c	;volatile
 18390                           
 18391                           ;mcc_generated_files/tmr5.c: 142:  } else {
 18392  0061F6  D00C               	goto	l1128
 18393  0061F8                     l6961:
 18394                           
 18395                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 18396                           ;stkvar	_timerVal @ sp[(0)+-2]
 18397  0061F8  0EFF               	movlw	255
 18398  0061FA  24E1               	addwf	fsr1l,w,c
 18399  0061FC  6ED9               	movwf	fsr2l,c
 18400  0061FE  0EFF               	movlw	255
 18401  006200  20E2               	addwfc	fsr1h,w,c
 18402  006202  6EDA               	movwf	fsr2h,c
 18403  006204  50DF               	movf	indf2,w,c
 18404  006206  6E99               	movwf	16281,c	;volatile
 18405                           
 18406                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 18407                           ;stkvar	_timerVal @ sp[(0)+-2]
 18408  006208  0EFE               	movlw	-2
 18409  00620A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 18410  006210                     l1128:
 18411                           
 18412                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 18413  006210  52E5               	movf	postdec1,f,c
 18414  006212  52E5               	movf	postdec1,f,c
 18415  006214  0012               	return		;funcret
 18416  006216                     __end_of_TMR5_WriteTimer:
 18417                           	opt callstack 0
 18418                           
 18419 ;; *************** function _TMR5_CallBack *****************
 18420 ;; Defined at:
 18421 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 18422 ;; Parameters:    Size  Location     Type
 18423 ;;		None
 18424 ;; Auto vars:     Size  Location     Type
 18425 ;;		None
 18426 ;; Return value:  Size  Location     Type
 18427 ;;                  1  [STACK] void 
 18428 ;; Registers used:
 18429 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 18430 ;; Tracked objects:
 18431 ;;		On entry : 3F/0
 18432 ;;		On exit  : 0/0
 18433 ;;		Unchanged: 0/0
 18434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18439 ;;Total ram usage:        0 bytes
 18440 ;; Hardware stack levels used:    1
 18441 ;; Hardware stack levels required when called:    1
 18442 ;; This function calls:
 18443 ;;		Absolute function
 18444 ;;		_TMR5_DefaultInterruptHandler
 18445 ;; This function is called by:
 18446 ;;		_TMR5_ISR
 18447 ;; This function uses a reentrant model
 18448 ;;
 18449                           
 18450                           	psect	text114
 18451  0067F6                     __ptext114:
 18452                           	opt callstack 0
 18453  0067F6                     _TMR5_CallBack:
 18454                           	opt callstack 17
 18455                           
 18456                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 18457                           
 18458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18459                           ;incstack = 0
 18460  0067F6  0100               	movlb	0	; () banked
 18461  0067F8  51E6               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18462  0067FA  11E7               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18463  0067FC  11E8               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18464  0067FE  B4D8               	btfsc	status,2,c
 18465  006800  0012               	return	
 18466                           
 18467                           ; BSR set to: 0
 18468                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 18469  006802  D801               	call	u387_48
 18470  006804  0012               	return	
 18471  006806                     u387_48:
 18472  006806  0005               	push	
 18473  006808  6EFA               	movwf	pclath,c
 18474  00680A  51E6               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18475  00680C  6EFD               	movwf	tosl,c
 18476  00680E  51E7               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18477  006810  6EFE               	movwf	tosh,c
 18478  006812  51E8               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18479  006814  6EFF               	movwf	tosu,c
 18480  006816  50FA               	movf	pclath,w,c
 18481  006818  0012               	return		;indir
 18482  00681A                     __end_of_TMR5_CallBack:
 18483                           	opt callstack 0
 18484                           
 18485 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 18486 ;; Defined at:
 18487 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 18488 ;; Parameters:    Size  Location     Type
 18489 ;;		None
 18490 ;; Auto vars:     Size  Location     Type
 18491 ;;		None
 18492 ;; Return value:  Size  Location     Type
 18493 ;;                  1  [STACK] void 
 18494 ;; Registers used:
 18495 ;;		wreg, status,2, status,0, btemp+11
 18496 ;; Tracked objects:
 18497 ;;		On entry : 3F/0
 18498 ;;		On exit  : 0/0
 18499 ;;		Unchanged: 0/0
 18500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18505 ;;Total ram usage:        0 bytes
 18506 ;; Hardware stack levels used:    1
 18507 ;; This function calls:
 18508 ;;		Nothing
 18509 ;; This function is called by:
 18510 ;;		_TMR5_Initialize
 18511 ;;		_TMR5_CallBack
 18512 ;; This function uses a reentrant model
 18513 ;;
 18514                           
 18515                           	psect	text115
 18516  00698A                     __ptext115:
 18517                           	opt callstack 0
 18518  00698A                     _TMR5_DefaultInterruptHandler:
 18519                           	opt callstack 17
 18520                           
 18521                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 18522                           
 18523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18524                           ;incstack = 0
 18525  00698A  A0BE               	btfss	16318,0,c	;volatile
 18526  00698C  D002               	goto	u361_40
 18527  00698E  0E01               	movlw	1
 18528  006990  D001               	goto	u361_46
 18529  006992                     u361_40:
 18530  006992  0E00               	movlw	0
 18531  006994                     u361_46:
 18532  006994  0AFF               	xorlw	255
 18533  006996  6E48               	movwf	btemp+11,c
 18534  006998  50BE               	movf	16318,w,c	;volatile
 18535  00699A  1848               	xorwf	btemp+11,w,c
 18536  00699C  0BFE               	andlw	-2
 18537  00699E  1848               	xorwf	btemp+11,w,c
 18538  0069A0  6EBE               	movwf	16318,c	;volatile
 18539                           
 18540                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 18541  0069A2  0012               	return		;funcret
 18542  0069A4                     __end_of_TMR5_DefaultInterruptHandler:
 18543                           	opt callstack 0
 18544                           
 18545                           ;
 18546                           ; Interrupt Vector Table @ 0x8
 18547                           ;
 18548                           
 18549                           	psect	ivt0x8
 18550  000008                     __pivt0x8:
 18551                           	opt callstack 0
 18552  000008                     ivt0x8_base:
 18553                           	opt callstack 0
 18554                           
 18555                           ; Vector 0 : SWINT
 18556  000008  1AA6               	dw	_Default_ISR shr (0+2)
 18557                           
 18558                           ; Vector 1 : HLVD
 18559  00000A  1AA6               	dw	_Default_ISR shr (0+2)
 18560                           
 18561                           ; Vector 2 : OSF
 18562  00000C  1AA6               	dw	_Default_ISR shr (0+2)
 18563                           
 18564                           ; Vector 3 : CSW
 18565  00000E  1AA6               	dw	_Default_ISR shr (0+2)
 18566                           
 18567                           ; Vector 4 : NVM
 18568  000010  1AA6               	dw	_Default_ISR shr (0+2)
 18569                           
 18570                           ; Vector 5 : SCAN
 18571  000012  1AA6               	dw	_Default_ISR shr (0+2)
 18572                           
 18573                           ; Vector 6 : CRC
 18574  000014  1AA6               	dw	_Default_ISR shr (0+2)
 18575                           
 18576                           ; Vector 7 : IOC
 18577  000016  1AA6               	dw	_Default_ISR shr (0+2)
 18578                           
 18579                           ; Vector 8 : INT0
 18580  000018  1A84               	dw	_INT0_ISR shr (0+2)
 18581                           
 18582                           ; Vector 9 : ZCD
 18583  00001A  1AA6               	dw	_Default_ISR shr (0+2)
 18584                           
 18585                           ; Vector 10 : AD
 18586  00001C  18F7               	dw	_ADCC_ISR shr (0+2)
 18587                           
 18588                           ; Vector 11 : ADT
 18589  00001E  1AA6               	dw	_Default_ISR shr (0+2)
 18590                           
 18591                           ; Vector 12 : CMP1
 18592  000020  1AA6               	dw	_Default_ISR shr (0+2)
 18593                           
 18594                           ; Vector 13 : SMT1
 18595  000022  1AA6               	dw	_Default_ISR shr (0+2)
 18596                           
 18597                           ; Vector 14 : SMT1PRA
 18598  000024  1AA6               	dw	_Default_ISR shr (0+2)
 18599                           
 18600                           ; Vector 15 : SMT1PRW
 18601  000026  1AA6               	dw	_Default_ISR shr (0+2)
 18602                           
 18603                           ; Vector 16 : DMA1SCNT
 18604  000028  1A79               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 18605                           
 18606                           ; Vector 17 : DMA1DCNT
 18607  00002A  1A92               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 18608                           
 18609                           ; Vector 18 : DMA1OR
 18610  00002C  1A98               	dw	_DMA1_DMAOR_ISR shr (0+2)
 18611                           
 18612                           ; Vector 19 : DMA1A
 18613  00002E  1A95               	dw	_DMA1_DMAA_ISR shr (0+2)
 18614                           
 18615                           ; Vector 20 : SPI1RX
 18616  000030  1AA6               	dw	_Default_ISR shr (0+2)
 18617                           
 18618                           ; Vector 21 : SPI1TX
 18619  000032  1AA6               	dw	_Default_ISR shr (0+2)
 18620                           
 18621                           ; Vector 22 : SPI1
 18622  000034  1AA6               	dw	_Default_ISR shr (0+2)
 18623                           
 18624                           ; Vector 23 : I2C1RX
 18625  000036  1AA6               	dw	_Default_ISR shr (0+2)
 18626                           
 18627                           ; Vector 24 : I2C1TX
 18628  000038  1AA6               	dw	_Default_ISR shr (0+2)
 18629                           
 18630                           ; Vector 25 : I2C1
 18631  00003A  1AA6               	dw	_Default_ISR shr (0+2)
 18632                           
 18633                           ; Vector 26 : I2C1E
 18634  00003C  1AA6               	dw	_Default_ISR shr (0+2)
 18635                           
 18636                           ; Vector 27 : U1RX
 18637  00003E  19D7               	dw	_UART1_rx_vect_isr shr (0+2)
 18638                           
 18639                           ; Vector 28 : U1TX
 18640  000040  19CD               	dw	_UART1_tx_vect_isr shr (0+2)
 18641                           
 18642                           ; Vector 29 : U1E
 18643  000042  1AA6               	dw	_Default_ISR shr (0+2)
 18644                           
 18645                           ; Vector 30 : U1
 18646  000044  1AA6               	dw	_Default_ISR shr (0+2)
 18647                           
 18648                           ; Vector 31 : TMR0
 18649  000046  1AA6               	dw	_Default_ISR shr (0+2)
 18650                           
 18651                           ; Vector 32 : TMR1
 18652  000048  1AA6               	dw	_Default_ISR shr (0+2)
 18653                           
 18654                           ; Vector 33 : TMR1G
 18655  00004A  1AA6               	dw	_Default_ISR shr (0+2)
 18656                           
 18657                           ; Vector 34 : TMR2
 18658  00004C  1AA6               	dw	_Default_ISR shr (0+2)
 18659                           
 18660                           ; Vector 35 : CCP1
 18661  00004E  1AA6               	dw	_Default_ISR shr (0+2)
 18662                           
 18663                           ; Vector 36 : Undefined
 18664  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 18665                           
 18666                           ; Vector 37 : NCO1
 18667  000052  1AA6               	dw	_Default_ISR shr (0+2)
 18668                           
 18669                           ; Vector 38 : CWG1
 18670  000054  1AA6               	dw	_Default_ISR shr (0+2)
 18671                           
 18672                           ; Vector 39 : CLC1
 18673  000056  1AA6               	dw	_Default_ISR shr (0+2)
 18674                           
 18675                           ; Vector 40 : INT1
 18676  000058  1A88               	dw	_INT1_ISR shr (0+2)
 18677                           
 18678                           ; Vector 41 : CMP2
 18679  00005A  1AA6               	dw	_Default_ISR shr (0+2)
 18680                           
 18681                           ; Vector 42 : DMA2SCNT
 18682  00005C  1AA6               	dw	_Default_ISR shr (0+2)
 18683                           
 18684                           ; Vector 43 : DMA2DCNT
 18685  00005E  1AA6               	dw	_Default_ISR shr (0+2)
 18686                           
 18687                           ; Vector 44 : DMA2OR
 18688  000060  1AA6               	dw	_Default_ISR shr (0+2)
 18689                           
 18690                           ; Vector 45 : DMA2A
 18691  000062  1AA6               	dw	_Default_ISR shr (0+2)
 18692                           
 18693                           ; Vector 46 : I2C2RX
 18694  000064  1AA6               	dw	_Default_ISR shr (0+2)
 18695                           
 18696                           ; Vector 47 : I2C2TX
 18697  000066  1AA6               	dw	_Default_ISR shr (0+2)
 18698                           
 18699                           ; Vector 48 : I2C2
 18700  000068  1AA6               	dw	_Default_ISR shr (0+2)
 18701                           
 18702                           ; Vector 49 : I2C2E
 18703  00006A  1AA6               	dw	_Default_ISR shr (0+2)
 18704                           
 18705                           ; Vector 50 : U2RX
 18706  00006C  19EB               	dw	_UART2_rx_vect_isr shr (0+2)
 18707                           
 18708                           ; Vector 51 : U2TX
 18709  00006E  19E1               	dw	_UART2_tx_vect_isr shr (0+2)
 18710                           
 18711                           ; Vector 52 : U2E
 18712  000070  1AA6               	dw	_Default_ISR shr (0+2)
 18713                           
 18714                           ; Vector 53 : U2
 18715  000072  1AA6               	dw	_Default_ISR shr (0+2)
 18716                           
 18717                           ; Vector 54 : TMR3
 18718  000074  1AA6               	dw	_Default_ISR shr (0+2)
 18719                           
 18720                           ; Vector 55 : TMR3G
 18721  000076  1AA6               	dw	_Default_ISR shr (0+2)
 18722                           
 18723                           ; Vector 56 : TMR4
 18724  000078  1AA6               	dw	_Default_ISR shr (0+2)
 18725                           
 18726                           ; Vector 57 : CCP2
 18727  00007A  1AA6               	dw	_Default_ISR shr (0+2)
 18728                           
 18729                           ; Vector 58 : Undefined
 18730  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18731                           
 18732                           ; Vector 59 : CWG2
 18733  00007E  1AA6               	dw	_Default_ISR shr (0+2)
 18734                           
 18735                           ; Vector 60 : CLC2
 18736  000080  1AA6               	dw	_Default_ISR shr (0+2)
 18737                           
 18738                           ; Vector 61 : INT2
 18739  000082  1A8C               	dw	_INT2_ISR shr (0+2)
 18740                           
 18741                           ; Vector 62 : Undefined
 18742  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18743                           
 18744                           ; Vector 63 : Undefined
 18745  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18746                           
 18747                           ; Vector 64 : Undefined
 18748  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18749                           
 18750                           ; Vector 65 : Undefined
 18751  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18752                           
 18753                           ; Vector 66 : Undefined
 18754  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18755                           
 18756                           ; Vector 67 : Undefined
 18757  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18758                           
 18759                           ; Vector 68 : Undefined
 18760  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18761                           
 18762                           ; Vector 69 : Undefined
 18763  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18764                           
 18765                           ; Vector 70 : TMR5
 18766  000094  17F9               	dw	_TMR5_ISR shr (0+2)
 18767                           
 18768                           ; Vector 71 : TMR5G
 18769  000096  1AA6               	dw	_Default_ISR shr (0+2)
 18770                           
 18771                           ; Vector 72 : TMR6
 18772  000098  1A5C               	dw	_TMR6_ISR shr (0+2)
 18773                           
 18774                           ; Vector 73 : CCP3
 18775  00009A  1AA6               	dw	_Default_ISR shr (0+2)
 18776                           
 18777                           ; Vector 74 : CWG3
 18778  00009C  1AA6               	dw	_Default_ISR shr (0+2)
 18779                           
 18780                           ; Vector 75 : CLC3
 18781  00009E  1AA6               	dw	_Default_ISR shr (0+2)
 18782                           
 18783                           ; Vector 76 : Undefined
 18784  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18785                           
 18786                           ; Vector 77 : Undefined
 18787  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18788                           
 18789                           ; Vector 78 : Undefined
 18790  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18791                           
 18792                           ; Vector 79 : Undefined
 18793  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18794                           
 18795                           ; Vector 80 : CCP4
 18796  0000A8  1AA6               	dw	_Default_ISR shr (0+2)
 18797                           
 18798                           ; Vector 81 : CLC4
 18799  0000AA  1AA6               	dw	_Default_ISR shr (0+2)
 18800  0000AC                     ivt0x8_undefint:
 18801                           	opt callstack 0
 18802  0000AC  00FF               	reset	
 18803                           
 18804                           	psect	text116
 18805  000000                     __ptext116:
 18806                           	opt callstack 0
 18807                           
 18808                           	psect	rparam
 18809  0000                     
 18810                           	psect	temp
 18811  00003D                     btemp:
 18812                           	opt callstack 0
 18813  00003D                     	ds	32
 18814  0000                     wtemp0	set	btemp
 18815  0000                     wtemp1	set	btemp+2
 18816  0000                     wtemp2	set	btemp+4
 18817  0000                     wtemp3	set	btemp+6
 18818  0000                     wtemp4	set	btemp+8
 18819  0000                     wtemp5	set	btemp+10
 18820  0000                     wtemp8	set	btemp+1
 18821  0000                     ttemp0	set	btemp
 18822  0000                     ttemp1	set	btemp+3
 18823  0000                     ttemp2	set	btemp+6
 18824  0000                     ttemp3	set	btemp+9
 18825  0000                     ttemp5	set	btemp+1
 18826  0000                     ttemp6	set	btemp+4
 18827  0000                     ttemp7	set	btemp+8
 18828  0000                     ltemp0	set	btemp
 18829  0000                     ltemp1	set	btemp+4
 18830  0000                     ltemp2	set	btemp+8
 18831  0000                     lltemp0	set	btemp
 18832  0000                     lltemp1	set	btemp+8
 18833  0000                     lltemp2	set	btemp+16
 18834  0000                     lltemp3	set	btemp+24
 18835                           tosu	equ	0x3FFF
 18836                           tosh	equ	0x3FFE
 18837                           tosl	equ	0x3FFD
 18838                           stkptr	equ	0x3FFC
 18839                           pclatu	equ	0x3FFB
 18840                           pclath	equ	0x3FFA
 18841                           pcl	equ	0x3FF9
 18842                           tblptru	equ	0x3FF8
 18843                           tblptrh	equ	0x3FF7
 18844                           tblptrl	equ	0x3FF6
 18845                           tablat	equ	0x3FF5
 18846                           prodh	equ	0x3FF4
 18847                           prodl	equ	0x3FF3
 18848                           indf0	equ	0x3FEF
 18849                           postinc0	equ	0x3FEE
 18850                           postdec0	equ	0x3FED
 18851                           preinc0	equ	0x3FEC
 18852                           plusw0	equ	0x3FEB
 18853                           fsr0h	equ	0x3FEA
 18854                           fsr0l	equ	0x3FE9
 18855                           wreg	equ	0x3FE8
 18856                           indf1	equ	0x3FE7
 18857                           postinc1	equ	0x3FE6
 18858                           postdec1	equ	0x3FE5
 18859                           preinc1	equ	0x3FE4
 18860                           plusw1	equ	0x3FE3
 18861                           fsr1h	equ	0x3FE2
 18862                           fsr1l	equ	0x3FE1
 18863                           bsr	equ	0x3FE0
 18864                           indf2	equ	0x3FDF
 18865                           postinc2	equ	0x3FDE
 18866                           postdec2	equ	0x3FDD
 18867                           preinc2	equ	0x3FDC
 18868                           plusw2	equ	0x3FDB
 18869                           fsr2h	equ	0x3FDA
 18870                           fsr2l	equ	0x3FD9
 18871                           status	equ	0x3FD8


Data Sizes:
    Strings     195
    Constant    0
    Data        682
    BSS         551
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      62
    BANK0           160      3     156
    BANK1           256      0     238
    BANK2           256      0     206
    BANK3           256      0     251
    BANK4           256      0      67
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[48]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    a	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_15(CODE[26]), STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4523_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16650.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16650.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[48]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK2[48]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK2[48]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    S3840response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16637.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3840response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[48]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16637.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[48]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    r_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    m_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK2[48]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1987spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1987spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   45944
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                   _UART1_put_buffer
                   _UART2_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                         _hb_message
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                              _srand
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    2275
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                               _rand
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     154
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    8432
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    2328
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    2502
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                               _rand
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1283
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     262
                               _rand
 ---------------------------------------------------------------------------------
 (4) _rand                                                 0     0      0      92
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      88
                         _StartTimer
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   19158
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9633
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9463
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9432
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8207
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    8108
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7869
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              0 BANK0      3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _UART1_put_buffer
   _UART2_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _rand
       ___omul
     _run_checksum
     _secs_gem_state
       _StartTimer
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
       _StartTimer
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _rand
       ___omul
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     101      69        3.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FB      11       98.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      CE       9       80.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EE       7       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      9C       5       97.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D4      58        0.0%
DATA                 0      0     4D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr  3 21:07:10 2019

                    _SPI1_Exchange8bit 68E2                                      _V 0060  
     __end_of_TMR5_SetInterruptHandler 6694              __end_of_UART2_is_rx_ready 6A82  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 6A72                            __CFG_LVP$ON 000000  
                                  _H10 0107                                    _H12 0162  
                                  _H13 0280                                    _H14 01AF  
                                  _H24 0180                                    _H17 019B  
                                  _H27 02B0                                    _H53 03C3  
                                  l194 69CA                                    l572 62FA  
                                  l717 645A                                    l851 68F0  
                                  l579 626A                                    l692 62BC  
                                  l597 642E                                    l699 622C  
                                  _GIE 01FE97                                    _abs 60C8  
                                  _pad 4FEC                __size_of_PMD_Initialize 0014  
                                  prod 003FF3                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 683C  
                         _run_checksum 64B4                     _UART1_Transmit_ISR 6408  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 685E  
                         __CFG_ZCD$OFF 000000                                   _H254 0443  
                                 l1128 6210                                   l1306 264C  
                                 l1242 2102                                   l1252 21BE  
                                 l1263 22D6                                   l1505 580E  
                                 l1602 276E                                   l1282 2562  
                                 l1274 2448                                   l1266 2324  
                                 l1268 2328                                   l1509 5BB4  
                                 l1286 25E8                                   l1287 2614  
                                 l1296 2634                                   l1369 5EA6  
                                 l1715 3D22                                   l1661 3552  
                                 l1903 3174                                   l1737 487E  
                                 l1930 3F48                                   l2706 4C4E  
                                 l6011 6482                                   l2644 6108  
                                 l1852 635E                                   l2666 5202  
                                 l1883 5048                                   l1949 308C  
                                 l6039 64FC                                   l5603 4A1A  
                                 l5531 60F8                                   l5543 4400  
                                 l6423 6294                                   l6601 5524  
                                 l5555 449A                                   l9003 37B4  
                                 l6453 5FCC                                   l5549 4454  
                                 l6461 6368                                   l6605 552E  
                                 l5567 456C                                   l6519 64C0  
                                 l6615 553A                                   l9023 3830  
                                 l6703 41E8                                   l6449 5F9A  
                                 l8401 5AE0                                   l6633 55A0  
                                 l6625 5590                                   l6617 557E  
                                 l6609 5532                                   l6641 55D8  
                                 l9033 3856                                   l9041 38A0  
                                 l6705 420E                                   l9105 3CF4  
                                 l8411 5040                                   l5595 496E  
                                 l5587 48E6                                   l5755 4B2C  
                                 l9027 3846                                   l6723 4232  
                                 l6811 4386                                   l9115 3D42  
                                 l9123 3D62                                   l8421 50D8  
                                 l8413 5052                                   l8501 34CC  
                                 l5853 4D14                                   l9301 29E2  
                                 l9213 27B0                                   l9029 384A  
                                 l6741 426A                                   l6725 424C  
                                 l9053 3BA2                                   l8407 5018  
                                 l8431 5C06                                   l5759 4B5C  
                                 l6399 62D2                                   l6639 55B2  
                                 l9039 385E                                   l6743 4284  
                                 l9151 3DE8                                   l9119 3D5A  
                                 l6913 642A                                   l8417 508E  
                                 l8513 3ECA                                   l5865 5EB8  
                                 l6593 5502                                   l5849 4C6E  
                                 l9321 2AB2                                   l9313 2A64  
                                 l9305 2A06                                   l9225 280A  
                                 l6673 416E                                   l6809 434E  
                                 l9153 3DEC                                   l9129 3D8C  
                                 l9065 3BE6                                   l9161 3E0A  
                                 l6923 68BE                                   l5971 64AC  
                                 l9323 2AB6                                   l9251 2888  
                                 l9235 2836                                   l9219 27E6  
                                 l6771 42BC                                   l6659 4130  
                                 l9155 3DF4                                   l9139 3DAC  
                                 l9091 3C86                                   l9075 3C1A  
                                 l9163 3E4C                                   l9411 2108  
                                 l8429 5BDA                                   l8533 3FBA  
                                 l5957 628A                                   l8701 5226  
                                 l9309 2A34                                   l6773 42FA  
                                 l6693 41C6                                   l9157 3DFC  
                                 l9149 3DDA                                   l9093 3C92  
                                 l9077 3C2C                                   l9501 230C  
                                 l6935 6456                                   l8463 31AE  
                                 l8455 3164                                   l8551 40DC  
                                 l8543 4074                                   l8615 301E  
                                 l6599 551C                                   l5959 628C  
                                 l8711 52FA                                   l9335 2ADE  
                                 l9271 2958                                   l9263 290A  
                                 l9255 28AC                                   l9247 286A  
                                 l9191 2720                                   l9175 26C6  
                                 l6759 42A2                                   l6679 418C  
                                 l9087 3C6E                                   l9407 20EC  
                                 l6961 61F8                                   l6945 68DE  
                                 l8377 5130                                   l8537 3FEA  
                                 l8529 3F7E                                   l8609 2FCA  
                                 l8625 303E                                   l8705 5298  
                                 l9361 2B74                                   l9273 295C  
                                 l9097 3CB8                                   l9601 2638  
                                 l9409 20F4                                   l8387 58E0  
                                 l8467 31CC                                   l8547 40A0  
                                 l8619 3022                                   l9363 2B78  
                                 l9355 2B5A                                   l9259 28DA  
                                 l9371 2B94                                   l9603 2650  
                                 l8397 5AA2                                   l8389 5902  
                                 l8477 33DE                                   l8653 3A08  
                                 l5997 624C                                   l8805 4830  
                                 l8813 485E                                   l9365 2B80  
                                 l9357 2B68                                   l9285 2990  
                                 l9373 2BD6                                   l8901 351A  
                                 l6797 4334                                   l9613 26BE  
                                 l9517 2386                                   l8583 2DAA  
                                 l8575 2CC6                                   l8647 394A  
                                 l5999 624E                                   l8807 4858  
                                 l9367 2B86                                   l9359 2B6C  
                                 l9519 23B8                                   l9455 2220  
                                 l8497 3490                                   l8681 5A56  
                                 l8745 59AA                                   l9297 29C4  
                                 l8587 2DFC                                   l8667 3B20  
                                 l8659 3A72                                   l9555 24AE  
                                 l9483 22AE                                   l9459 2236  
                                 l8925 35B6                                   l9573 2534  
                                 l9557 24B8                                   l9477 22A2  
                                 l8599 2F22                                   l8679 5A14  
                                 l8775 475A                                   l8767 46AA  
                                 l8951 364A                                   l8935 35EA  
                                 l9583 2566                                   l9487 22C6  
                                 l9479 22A6                                   l8793 47DC  
                                 l8937 35F6                                   l9569 2524  
                                 l9585 2592                                   l9497 22F6  
                                 l8787 47AE                                   l8779 4774  
                                 l8971 36BC                                   l8963 3688  
                                 l8955 3668                                   l9595 25EC  
                                 l8797 47F6                                   l8789 47D6  
                                 l8991 378C                                   l8975 36EA  
                                 l8967 3698                                   l8959 3678  
                                 STR_1 206F                                   STR_2 209D  
                                 STR_3 20B5                                   STR_4 2080  
                                 l8979 371A                                   STR_5 2035  
                                 STR_6 208F                                   l8989 3788  
                                 STR_7 20AF                                   STR_8 20A9  
                                 STR_9 205D                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u2600 60DC  
                                 u3160 4C04                                   u3251 4C66  
                                 u2620 43FA                                   u5100 319A  
                                 u3510 5CBC                                   u2710 45F6  
                                 u5110 33F2                                   u5030 30C6  
                                 u3350 4ECA                                   u3271 4D88  
                                 u2640 4450                                   u2800 4A52  
                                 u5040 30C8                                   u5121 3422  
                                 u5130 3438                                   u2651 445A  
                                 u5131 3436                                   u3355 4EB8  
                                 u2660 4494                                   u2820 4AA4  
                                 u2740 48E0                                   u5140 344C  
                                 u5060 3138                                   u2670 44C6  
                                 u5150 3450                                   u3535 5CF0  
                                 u3536 5CF2                                   u3528 5CBE  
                                 u2760 4936                                   u5080 314A  
                                 u5240 3FE0                                   u5320 2D16  
                                 u2690 45A4                                   u2770 4968  
                                 u5170 3466                                   u5250 4026  
                                 u5410 3B94                                   u3730 558C  
                                 _T6PR 003F93                                   u2780 499A  
                                 u5340 2E54                                   _PMD0 0039C0  
                                 _PMD1 0039C1                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u5280 4102  
                                 _PMD4 0039C4                                   u5257 4018  
                                 _PMD5 0039C5                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u5460 599A  
                                 u4910 5124                                   u5470 46A4  
                                 u6175 2B14                                   u6185 2B24  
                                 u6177 2B18                                   u5705 37DE  
                                 u5801 3CAC                                   u4930 51A0  
                                 u6195 2B34                                   u6187 2B28  
                                 u5715 37EE                                   u5707 37E2  
                                 u4940 5930                                   u6197 2B38  
                                 u5725 37FE                                   u5717 37F2  
                                 u5727 3802                                   u5850 3D82  
                                 u4947 5922                                   u5950 2798  
                                 u5970 27CE                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 6880                       __end_of_ADCC_ISR 6408  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01CE  
                                 _ctoa 5BBC                                   _main 20C6  
                                 _dtoa 3096                                   _rand 4DB2  
                                 _seed 00F1                                   _prec 001F  
                                 _nout 00EF                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 3E5E                                   btemp 003D  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0029  
            __end_of_SPI1_Exchange8bit 6900                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 675C                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005E  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 6A1E  
                     __end_of_INT1_ISR 6A2E                       __end_of_INT2_ISR 6A3E  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 5816  
        __end_of_OSCILLATOR_Initialize 69D0                                  PRLOCK 0039EF  
                      __end_of___aodiv 461E                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 4AC8                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 2035  
                                STR_11 2001                                  STR_12 204A  
                                STR_13 20A9                                  STR_21 20BB  
                                STR_14 2001                                  STR_23 20BE  
                                STR_15 201B                                  STR_16 20A6  
                                STR_25 20BE                                  STR_17 20C1  
                        __CFG_WDTE$OFF 000000                                  STR_19 20BB  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005E  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 6A98      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 6734                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 6032                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 698A                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002E                                  _flags 0021  
                                _fputc 5100             __size_of_send_lcd_cmd_long 0028  
                                _fputs 5A92                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005E                                  _srand 637C  
                                _width 001D                                  _putch 6954  
             _INT1_SetInterruptHandler 66BC                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003D                                  ltemp1 0041  
                                ltemp2 0045               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003D                                  ttemp1 0040  
                                ttemp2 0043                                  ttemp3 0046  
                                ttemp5 003E                                  ttemp6 0041  
                                ttemp7 0045                         _secs_gem_state 5500  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 661C  
          _UART1_SetRxInterruptHandler 65F4                                  wtemp0 003D  
                                wtemp1 003F                                  wtemp2 0041  
                                wtemp3 0043                                  wtemp4 0045  
                                wtemp5 0047                                  wtemp8 003E  
                      __end_of_sprintf 56AC                        __end_of_strncmp 4C58  
                  ??_UART1_tx_vect_isr 005E              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 6782               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 610E                  __end_of_ringBufS_init 657C  
                      __initialization 4ED0                      _UART2_rx_vect_isr 67AC  
                         __end_of_ctoa 5C44                           __end_of_main 26C2  
                         __end_of_dtoa 3516                           __end_of_rand 4ED0  
                         __end_of_stoa 411C             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005E  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 666C  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 0010  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005E  
            __end_of_UART1_tx_vect_isr 675A                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 661C                       _UART1_Initialize 5D14  
                    _UART2_tx_vect_isr 6784                     _UART2_Transmit_ISR 6434  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005E                                 _MD1SRC 003CFC  
               __end_of_secs_gem_state 55E4                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1145 602A  
                       __CFG_WDTCCS$SC 000000                                 u131_48 684A  
                               u133_48 686C                                 u135_48 688E  
                               _SCANPR 0039F7                                 u361_40 6992  
                               u361_46 6994                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 u384_48 67E2  
                               u387_48 6806                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 5F46                    ??_UART2_tx_vect_isr 005E  
            __end_of_UART2_rx_vect_isr 67D2             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 6A3E                       _UART2_Initialize 5E3C  
                               _WaitMs 6346   __size_of_ADCC_SetADIInterruptHandler 0028  
                               ___omul 4C58                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 5B2A                                 _memset 38B2  
                               clear_0 4F98                                 clear_1 4FA4  
                               clear_2 4FB0                                 clear_3 4FBC  
                               clear_4 4FC8                                 clear_5 4FD4  
                               _printf 5DDA                     _eaDogM_WriteString 595C  
                            ?_ADCC_ISR 005E                                 _strlen 58BA  
                   __size_of_TimerDone 0028                           __pdataBIGRAM 0443  
                      _ADCC_Initialize 607E                         _PMD_Initialize 69D0  
 __end_of_INT2_DefaultInterruptHandler 6AA4  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 6AA2                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 67AA                                 lltemp0 003D  
                               lltemp1 0045                                 lltemp2 004D  
                               lltemp3 0055                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 5EF6  
                     __end_of_vfprintf 5A92                             _StartTimer 6196  
                      _CLC1_Initialize 681A          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 6154                      _SYSTEM_Initialize 6154  
                           __accesstop 0060                __end_of__initialization 4FE6  
                            ?_INT0_ISR 005E                              ?_INT1_ISR 005E  
                            ?_INT2_ISR 005E              __end_of_CLKREF_Initialize 6A48  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 61D6                 __end_of_ringBufS_flush 5BBC  
                       __pcstackCOMRAM 005E                             ___inthi_sp 0E2E  
                         __pidataBANK0 5D78                           __pidataBANK1 56AC  
                         __pidataBANK2 5F46                           __pidataBANK3 630E  
                            ?_TMR5_ISR 005E                              ?_TMR6_ISR 005E  
                       ivt0x8_undefint 00AC                          __end_of_fputc 520C  
                        __end_of_fputs 5B2A                          __end_of_srand 63B0  
                __end_of_TMR5_CallBack 681A                          __end_of_putch 696E  
              __end_of_TMR6_Initialize 6644                 __end_of_PMD_Initialize 69E4  
              __size_of_block_checksum 0108                             ??_ADCC_ISR 005E  
                __end_of_TMR6_CallBack 67F6            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 6A54  
     __end_of_INT2_SetInterruptHandler 66BC               _UART2_RxInterruptHandler 0011  
            __end_of_SYSTEM_Initialize 6196                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 6938  
                           __pbssBANK0 00C2                             __pbssBANK1 01C0  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                           __pbssBANK4 0400                  _INT0_InterruptHandler 001A  
                           ??_INT0_ISR 005E                             ??_INT1_ISR 005E  
                           ??_INT2_ISR 005E                      __end_of_TimerDone 6504  
                     _DMA1_DMADCNT_ISR 6A48              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                           _hb_message 69F4                  __end_of_wait_lcd_done 691C  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 666C  
              __end_of_ADCC_Initialize 60C8                             ??_TMR5_ISR 00F9  
                           ??_TMR6_ISR 005E                     __size_of_secs_send 026A  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 68A2                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005E                       _DMA1_DMASCNT_ISR 69E4  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 683C  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005E                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 6954  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 6216  
                   __end_of_UART1_Read 630E                     __end_of_UART2_Read 62D0  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 5D78  
                      __size_of_WaitMs 0036                                ___aodiv 439E  
                              ___aomod 4888                        __size_of___omul 015A  
                           _m_protocol 26C2              __end_of_UART1_Receive_ISR 68C2  
                         __psmallconst 2000                   __end_of_init_display 5500  
                              __pcinit 4ED0                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 6A02                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 20C6                                __ptext1 3B9E  
                              __ptext2 411C                                __ptext3 637C  
                              __ptext4 55E4                                __ptext5 3516  
                              __ptext6 26C2                                __ptext7 461E  
                              __ptext8 520C                                __ptext9 4DB2  
                    _UART2_Receive_ISR 68C2                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us502999 30B0                                us272999 4608  
                              us328999 4D9C                                us283999 4AB6  
                _OSCILLATOR_Initialize 69BA                                us519999 3E70  
                         __size_of_abs 0046                                _r_block 00C2  
                              us376999 4390                           __size_of_pad 0114  
                              _mode_sw 0030                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 5E9A  
                   m_protocol@rxData_l 002F             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 55E4                                _strncmp 4AC8  
                 end_of_initialization 4FE6                      __end_of_secs_send 4888  
             _INT2_SetInterruptHandler 6694               __size_of_secs_II_message 0282  
                           _r_protocol 3516    __end_of_UART1_SetTxInterruptHandler 65F4  
          _UART1_SetTxInterruptHandler 65CC    __end_of_UART2_SetRxInterruptHandler 65CC  
          _UART2_SetRxInterruptHandler 65A4                             _t_protocol 3B9E  
                    __end_of_vfpfcnvrt 3096                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 0040  
                    __end_of_start_lcd 6A96              __end_of_UART2_Receive_ISR 68E2  
                       wdtdelay@dcount 00E2                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005F                         _block_checksum 520C  
                _INT1_InterruptHandler 0017                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 6644                  _TMR5_InterruptHandler 00E6  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002C  
  __end_of_ADCC_SetADIInterruptHandler 6734            _ADCC_SetADIInterruptHandler 670C  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 5C44                        _SPI1_Initialize 69A4  
                     _UART1_put_buffer 648A                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                    r_protocol@b_block 0023                         __end_of_WaitMs 637C  
         __end_of_INTERRUPT_Initialize 5D14                 __end_of_block_checksum 5314  
 __end_of_INT0_DefaultInterruptHandler 6AA0  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 6A9E             __size_of_UART1_Receive_ISR 0020  
                       __end_of___omul 4DB2                          __pidataBIGRAM 5314  
                        __pidataCOMRAM 6AA6                      __size_of_TMR5_ISR 004E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3B9E                         __end_of_printf 5E3C  
             __end_of_DMA1_DMADCNT_ISR 6A52                       _UART2_put_buffer 6460  
                __end_of_INT0_CallBack 685E                         __end_of_strlen 595C  
                  start_initialization 4ED0   __end_of_TMR5_DefaultInterruptHandler 69A4  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 698A  
      __size_of_PIN_MANAGER_Initialize 00A4                            __end_of_abs 610E  
                __end_of_INT1_CallBack 6880                            __end_of_pad 5100  
                 __size_of_Default_ISR 0006                    __size_of_hb_message 000E  
                 __end_of_send_lcd_cmd 6554                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 68A2                   secs_II_message@block 0001  
                        _uart1RxBuffer 0240                          _uart1TxBuffer 0340  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 69F4  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 6A60  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009E                              _TimerDone 64DC  
                        _ringBufS_init 6554                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK2 0280  
                          __pdataBANK3 03C3             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 607E                        run_checksum@sum 0025  
      __end_of_eaDogM_WriteStringAtPos 63DC                __end_of_DMA1_Initialize 5CAE  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 670C  
                        __pcstackBANK0 00F9                __end_of_SPI1_Initialize 69BA  
             _UART1_RxInterruptHandler 000B               _UART2_TxInterruptHandler 000E  
                  __size_of_m_protocol 0526              __size_of_ringBufS_put_dma 00AA  
                         _init_display 5416                 __end_of_DMA1_DMAOR_ISR 6A6A  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0014  
                _TMR6_InterruptHandler 00E9                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 5816                   __end_of_wait_lcd_set 6A90  
                            __ptext100 68A2                              __ptext101 6784  
                            __ptext110 6A54                              __ptext102 6434  
                            __ptext111 6A60                              __ptext103 67AC  
                            __ptext112 5FE4                              __ptext104 68C2  
                            __ptext113 61D6                              __ptext105 6970  
                            __ptext114 67F6                              __ptext106 67D2  
                            __ptext115 698A                              __ptext107 5F94  
                            __ptext116 0000                              __ptext108 69E4  
                            __ptext109 6A48                     __end_of_StartTimer 61D6  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 63DC                    __size_of_r_protocol 039C  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 02C0  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                         __size_of_srand 0034  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 5CAE                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005E  
                             _INT0_ISR 6A10                               _INT1_ISR 6A20  
                             _INT2_ISR 6A30                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 461E  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 01C0  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0380                              _ring_buf2 0400  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u461_48 676E  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u463_48 6796  
                             _PIR5bits 0039A5                               i2u465_48 67BE  
                             i2u457_48 63F4                               i2u459_48 6746  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 6434                               _TMR5_ISR 5FE4  
                             _TMR6_ISR 6970                              _vfpfcnvrt 2BE8  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 67F6  
                            _start_lcd 6A90              __size_of_send_lcd_cmd_dma 0050  
                        _TMR6_CallBack 67D2               __end_of_UART1_put_buffer 64B4  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 6292                    __end_of_UART2_Write 6254  
             __size_of_TMR6_Initialize 0028                     __end_of_hb_message 6A02  
                          _INTCON0bits 003FD2                              copy_data0 4EE4  
                            copy_data1 4F0A                              copy_data2 4F2C  
                            copy_data3 4F4E                              copy_data4 4F70  
             _INT0_SetInterruptHandler 66E4                 _uart1TxBufferRemaining 003A  
  __end_of_UART2_SetTxInterruptHandler 65A4            _UART2_SetTxInterruptHandler 657C  
                         _uart1RxCount 0037               __end_of_UART2_put_buffer 648A  
                         _uart2RxCount 0031                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 64DC                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 6900  
                         _send_lcd_cmd 652C                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 691C  
                __end_of_DMA1_DMAA_ISR 6A5E   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005E               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 6A10                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005F                               __ptext10 4C58  
                             __ptext11 6460                               __ptext20 64DC  
                             __ptext12 6A6A                               __ptext21 6196  
                             __ptext13 6216                               __ptext30 6554  
                             __ptext22 6A7A                               __ptext14 648A  
                             __ptext31 69F4                               __ptext23 6292  
                             __ptext15 6A72                               __ptext40 5B2A  
                             __ptext32 63B0                               __ptext24 6A82  
                             __ptext16 6254                               __ptext41 38B2  
                             __ptext33 595C                               __ptext25 62D0  
                             __ptext17 5500                               __ptext50 439E  
                             __ptext42 5DDA                               __ptext34 6A02  
                             __ptext26 5416                               __ptext18 64B4  
                             __ptext51 5BBC                               __ptext43 59FA  
                             __ptext35 5EF6                               __ptext27 6504  
                             __ptext19 6346                               __ptext60 657C  
                             __ptext52 4FEC                               __ptext44 2BE8  
                             __ptext36 6A8A                               __ptext28 652C  
                             __ptext61 65A4                               __ptext53 58BA  
                             __ptext45 4AC8                               __ptext37 6900  
                             __ptext29 68E2                               __ptext70 69D0  
                             __ptext62 5D14                               __ptext54 5A92  
                             __ptext46 3E5E                               __ptext38 5E9A  
                             __ptext71 5816                               __ptext63 65CC  
                             __ptext55 5100                               __ptext47 3096  
                             __ptext39 6A90                               __ptext80 5C44  
                             __ptext72 69BA                               __ptext64 65F4  
                             __ptext56 6954                               __ptext48 60C8  
                             __ptext81 6A3E                               __ptext73 691C  
                             __ptext65 661C                               __ptext57 576C  
                             __ptext49 4888                               __ptext90 6AA0  
                             __ptext82 681A                               __ptext74 5CAE  
                             __ptext66 6644                               __ptext58 6154  
                             __ptext91 6A30                               __ptext83 607E  
                             __ptext75 6032                               __ptext67 610E  
                             __ptext59 5E3C                               __ptext92 6880  
                             __ptext84 670C                               __ptext76 6694  
                             __ptext68 666C                               __ptext93 6AA2  
                             __ptext85 6A10                               __ptext77 66BC  
                             __ptext69 69A4                               __ptext94 6A98  
                             __ptext86 683C                               __ptext78 66E4  
                             __ptext95 63DC                               __ptext87 6A9E  
                             __ptext79 6938                               __ptext96 6AA4  
                             __ptext88 6A20                               __ptext97 6734  
                             __ptext89 685E                               __ptext98 6408  
                             __ptext99 675C                        _secs_II_message 411C  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 576C  
                   __end_of_m_protocol 2BE8                          __size_of_ctoa 0088  
                        __size_of_main 05FC                          __size_of_dtoa 0480  
                        __size_of_rand 011E                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005E                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 00EC  
                            stoa@F1144 0100                     ??_DMA1_DMASCNT_ISR 005F  
                             _spi_link 00CF                               _wdtdelay 5E9A  
           __end_of_UART2_Transmit_ISR 6460                               _vfprintf 59FA  
                  secs_gem_state@block 002B                      _UART1_is_rx_ready 6A82  
                          _UART1_Write 6254   __end_of_INT1_DefaultInterruptHandler 6AA2  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 6AA0  
                          _UART2_Write 6216                      _UART1_is_tx_ready 6A72  
                      r_protocol@retry 005D                      t_protocol@requeue 002C  
                        ??_Default_ISR 005E                     __end_of_r_protocol 38B2  
                          _uart1RxHead 0039                            _uart1TxHead 003C  
                          _uart2RxHead 0033                            _uart1RxTail 0038  
                          _uart2TxHead 0036                            _uart1TxTail 003B  
                          _uart2RxTail 0032                            _uart2TxTail 0035  
                         _wait_lcd_set 6A8A                     _EXT_INT_Initialize 6032  
 __end_of_TMR6_DefaultInterruptHandler 5FE2  __size_of_TMR6_DefaultInterruptHandler 004E  
         _TMR6_DefaultInterruptHandler 5F94                     __end_of_t_protocol 3E5E  
 __end_of_ADCC_DefaultInterruptHandler 6AA6  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 6AA4                               intlevel2 0000  
                    _send_lcd_cmd_long 6504                __size_of_secs_gem_state 00E4  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 59FA  
              __end_of_NCO1_Initialize 6938                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 6A8A                             _UART1_Read 62D0  
               __size_of_INT1_CallBack 0022                             _UART2_Read 6292  
            __end_of_UART1_is_tx_ready 6A7A                 __size_of_INT2_CallBack 0022  
                    _UART2_is_rx_ready 6A7A                 _uart2TxBufferRemaining 0034  
                    _UART2_is_tx_ready 6A6A                       _send_lcd_cmd_dma 5EF6  
                TMR5_ISR@CountCallBack 0027                __end_of_secs_II_message 439E  
     __end_of_INT1_SetInterruptHandler 66E4              __size_of_UART1_Initialize 0064  
                      t_protocol@block 00DB                       ??_DMA1_DMAOR_ISR 005F  
             _UART1_TxInterruptHandler 0008                        t_protocol@retry 002D  
            __end_of_send_lcd_cmd_long 652C                    __end_of_Default_ISR 6A9E  
       __end_of_PIN_MANAGER_Initialize 58BA                  __size_of_run_checksum 0028  
              _eaDogM_WriteStringAtPos 63B0              __size_of_UART2_Initialize 005E  
