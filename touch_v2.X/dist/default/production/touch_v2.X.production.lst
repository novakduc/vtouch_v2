

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov  8 15:15:28 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=4,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=4,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=4,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=4,class=CODE,delta=1
   142                           	psect	text121,global,reloc=4,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=4,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=4,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=4,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=4,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=4,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=4,class=CODE,delta=1
   162                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   163                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   164                           	psect	text141,global,reloc=4,class=CODE,delta=1
   165                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   166                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   167  0000                     
   168                           ; Version 2.10
   169                           ; Generated 31/07/2019 GMT
   170                           ; 
   171                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   172                           ; All rights reserved.
   173                           ; 
   174                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   175                           ; 
   176                           ; Redistribution and use in source and binary forms, with or without modification, are
   177                           ; permitted provided that the following conditions are met:
   178                           ; 
   179                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   180                           ;        conditions and the following disclaimer.
   181                           ; 
   182                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   183                           ;        of conditions and the following disclaimer in the documentation and/or other
   184                           ;        materials provided with the distribution.
   185                           ; 
   186                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   187                           ;        software without specific prior written permission.
   188                           ; 
   189                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   190                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   191                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   192                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   193                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   194                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   195                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   196                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   197                           ; 
   198                           ; 
   199                           ; Code-generator required, PIC18F57K42 Definitions
   200                           ; 
   201                           ; SFR Addresses
   202  0000                     
   203 ;;_mode	offset	0
   204 ;;_channel	offset=-1 (param)
   205 ;;_s	offset=-2 (param)
   206 ;;_new	offset=-4 (param)
   207 ;;_bn	offset=-5 (param)
   208 ;;_slow	offset=-6 (param)
   209 ;;_cmd	offset=-1 (param)
   210 ;;_cmd	offset=-1 (param)
   211 ;;_data	offset=-1 (param)
   212 ;;__this	offset=-2 (param)
   213 ;;_cmd	offset=-1 (param)
   214 ;;_chan	offset=-1 (param)
   215 ;;_to_what	offset=-2 (param)
   216 ;;_u	offset	0
   217 ;;_s	offset=-2 (param)
   218 ;;_index	offset=-1 (param)
   219 ;;_arg	offset	0
   220 ;;_exp	offset	4
   221 ;;_sign	offset=-1 (param)
   222 ;;_val	offset=-5 (param)
   223 ;;_flipper	offset=-1 (param)
   224 ;;_f	offset	0
   225 ;;_ap	offset	6
   226 ;;_s	offset=-3 (param)
   227 ;;_fmt	offset=-5 (param)
   228 ;;_line	offset=-1 (param)
   229 ;;_vterm	offset=-2 (param)
   230 ;;_numMilliseconds	offset=-2 (param)
   231 ;;_vterm	offset=-1 (param)
   232 ;;_r	offset=-1 (param)
   233 ;;_c	offset=-2 (param)
   234 ;;_strPtr	offset=-4 (param)
   235 ;;_strPtr	offset=-1 (param)
   236 ;;_delay	offset=-4 (param)
   237 ;;_strPtr	offset=-2 (param)
   238 ;;__this	offset=-2 (param)
   239 ;;_clearBuffer	offset=-3 (param)
   240 ;;_s	offset	0
   241 ;;_k	offset	2
   242 ;;_dest	offset=-2 (param)
   243 ;;_c	offset=-4 (param)
   244 ;;_n	offset=-6 (param)
   245 ;;_ap	offset	0
   246 ;;_fmt	offset=-3 (param)
   247 ;;_cfmt	offset	0
   248 ;;_fp	offset=-2 (param)
   249 ;;_fmt	offset=-4 (param)
   250 ;;_ap	offset=-6 (param)
   251 ;;_vfpfcnvrt$4156	offset	0
   252 ;;_vfpfcnvrt$4162	offset	2
   253 ;;_vfpfcnvrt$4155	offset	4
   254 ;;_llu	offset	6
   255 ;;_ll	offset	14
   256 ;;_f	offset	22
   257 ;;_ct	offset	26
   258 ;;_cp	offset	29
   259 ;;_c	offset	31
   260 ;;_fp	offset=-2 (param)
   261 ;;_fmt	offset=-4 (param)
   262 ;;_ap	offset=-6 (param)
   263 ;;_xtoa$4141	offset	0
   264 ;;_xtoa$4140	offset	2
   265 ;;_n	offset	4
   266 ;;_c	offset	12
   267 ;;_i	offset	14
   268 ;;_w	offset	16
   269 ;;_p	offset	18
   270 ;;_fp	offset=-2 (param)
   271 ;;_d	offset=-10 (param)
   272 ;;_x	offset=-11 (param)
   273 ;;_toupper$4801	offset	0
   274 ;;_c	offset=-2 (param)
   275 ;;_c	offset=-2 (param)
   276 ;;_c	offset=-2 (param)
   277 ;;_r	offset	0
   278 ;;_l	offset	2
   279 ;;__l	offset=-2 (param)
   280 ;;__r	offset=-4 (param)
   281 ;;_n	offset=-6 (param)
   282 ;;_nuls	offset	0
   283 ;;_l	offset	7
   284 ;;_p	offset	9
   285 ;;_cp	offset	11
   286 ;;_w	offset	13
   287 ;;_i	offset	15
   288 ;;_fp	offset=-2 (param)
   289 ;;_s	offset=-4 (param)
   290 ;;_efgtoa$4120	offset	0
   291 ;;_efgtoa$4119	offset	2
   292 ;;_efgtoa$4118	offset	4
   293 ;;_efgtoa$4114	offset	6
   294 ;;_efgtoa$4110	offset	8
   295 ;;_efgtoa$4109	offset	10
   296 ;;_u	offset	12
   297 ;;_g	offset	16
   298 ;;_l	offset	20
   299 ;;_h	offset	24
   300 ;;_ou	offset	28
   301 ;;_n	offset	32
   302 ;;_e	offset	34
   303 ;;_i	offset	36
   304 ;;_w	offset	38
   305 ;;_p	offset	40
   306 ;;_sign	offset	42
   307 ;;_d	offset	44
   308 ;;_ne	offset	46
   309 ;;_m	offset	48
   310 ;;_pp	offset	50
   311 ;;_t	offset	52
   312 ;;_mode	offset	54
   313 ;;_nmode	offset	55
   314 ;;_fp	offset=-2 (param)
   315 ;;_f	offset=-6 (param)
   316 ;;_c	offset=-7 (param)
   317 ;;_tolower$4786	offset	0
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_d	offset	0
   321 ;;_s	offset	2
   322 ;;_dest	offset=-2 (param)
   323 ;;_src	offset=-4 (param)
   324 ;;_u	offset	0
   325 ;;_m	offset	4
   326 ;;_e	offset	8
   327 ;;_x	offset=-4 (param)
   328 ;;_u	offset	0
   329 ;;_e	offset	4
   330 ;;_x	offset=-4 (param)
   331 ;;_exp1	offset	0
   332 ;;_sign1	offset	1
   333 ;;_f1	offset=-4 (param)
   334 ;;_b	offset=-4 (param)
   335 ;;_a	offset=-8 (param)
   336 ;;_grs	offset	0
   337 ;;_bexp	offset	1
   338 ;;_aexp	offset	2
   339 ;;_signs	offset	3
   340 ;;_b	offset=-4 (param)
   341 ;;_a	offset=-8 (param)
   342 ;;_f1	offset=-4 (param)
   343 ;;_prod	offset	0
   344 ;;_grs	offset	4
   345 ;;_temp	offset	8
   346 ;;_bexp	offset	10
   347 ;;_aexp	offset	11
   348 ;;_sign	offset	12
   349 ;;_b	offset=-4 (param)
   350 ;;_a	offset=-8 (param)
   351 ;;_ff1	offset=-4 (param)
   352 ;;_ff2	offset=-8 (param)
   353 ;;_ff1	offset=-4 (param)
   354 ;;_ff2	offset=-8 (param)
   355 ;;_grs	offset	0
   356 ;;_rem	offset	4
   357 ;;_new_exp	offset	8
   358 ;;_aexp	offset	10
   359 ;;_bexp	offset	11
   360 ;;_sign	offset	12
   361 ;;_b	offset=-4 (param)
   362 ;;_a	offset=-8 (param)
   363 ;;_sign	offset	0
   364 ;;_counter	offset	1
   365 ;;_dividend	offset=-2 (param)
   366 ;;_divisor	offset=-4 (param)
   367 ;;_quotient	offset	0
   368 ;;_sign	offset	2
   369 ;;_counter	offset	3
   370 ;;_dividend	offset=-2 (param)
   371 ;;_divisor	offset=-4 (param)
   372 ;;_dtoa$4086	offset	0
   373 ;;_n	offset	2
   374 ;;_i	offset	10
   375 ;;_s	offset	12
   376 ;;_w	offset	14
   377 ;;_p	offset	16
   378 ;;_fp	offset=-2 (param)
   379 ;;_d	offset=-10 (param)
   380 ;;_a	offset=-2 (param)
   381 ;;_sign	offset	0
   382 ;;_counter	offset	1
   383 ;;_dividend	offset=-8 (param)
   384 ;;_divisor	offset=-16 (param)
   385 ;;_quotient	offset	0
   386 ;;_sign	offset	8
   387 ;;_counter	offset	9
   388 ;;_dividend	offset=-8 (param)
   389 ;;_divisor	offset=-16 (param)
   390 ;;_w	offset	0
   391 ;;_fp	offset=-2 (param)
   392 ;;_c	offset=-3 (param)
   393 ;;_w	offset	0
   394 ;;_i	offset	2
   395 ;;_fp	offset=-2 (param)
   396 ;;_buf	offset=-4 (param)
   397 ;;_p	offset=-6 (param)
   398 ;;_a	offset	0
   399 ;;_s	offset=-2 (param)
   400 ;;_i	offset	0
   401 ;;_c	offset	2
   402 ;;_s	offset=-2 (param)
   403 ;;_fp	offset=-4 (param)
   404 ;;_c	offset=-2 (param)
   405 ;;_fp	offset=-4 (param)
   406 ;;_c	offset=-1 (param)
   407 ;;__this	offset=-2 (param)
   408 ;;_c	offset=-3 (param)
   409 ;;_atoi$4639	offset	0
   410 ;;_atoi$4637	offset	2
   411 ;;_atoi$4638	offset	4
   412 ;;_n	offset	5
   413 ;;_neg	offset	7
   414 ;;_s	offset=-2 (param)
   415 ;;_isspace$4677	offset	0
   416 ;;_c	offset=-2 (param)
   417 ;;_c	offset=-2 (param)
   418 ;;_vterm	offset=-1 (param)
   419 ;;_new_response_info	offset=-1 (param)
   420 ;;_new_response_info	offset=-1 (param)
   421 ;;_level	offset=-2 (param)
   422 ;;_dutyValue	offset=-2 (param)
   423 ;;_timer	offset=-1 (param)
   424 ;;_timer	offset=-1 (param)
   425 ;;_count	offset=-3 (param)
   426 ;;_InterruptHandler	offset=-3 (param)
   427 ;;_InterruptHandler	offset=-3 (param)
   428 ;;_InterruptHandler	offset=-3 (param)
   429 ;;_InterruptHandler	offset=-3 (param)
   430 ;;_InterruptHandler	offset=-3 (param)
   431 ;;_InterruptHandler	offset=-3 (param)
   432 ;;_state	offset	0
   433 ;;_InterruptHandler	offset=-3 (param)
   434 ;;_InterruptHandler	offset=-3 (param)
   435 ;;_InterruptHandler	offset=-3 (param)
   436 ;;_InterruptHandler	offset=-3 (param)
   437 ;;_timerVal	offset=-2 (param)
   438 ;;_channel	offset=-1 (param)
   439 ;;_i	offset	0
   440                           
   441                           	psect	idataBANK0
   442  017C30                     __pidataBANK0:
   443                           	opt callstack 0
   444                           
   445                           ;initializer for _R
   446  017C30  0000               	dw	0
   447  017C32  0000               	dw	0
   448  017C34  0000               	dw	0
   449  017C36  0000               	dw	0
   450  017C38  0000               	dw	0
   451  017C3A  0000               	dw	0
   452  017C3C  0000               	dw	0
   453  017C3E  0000               	dw	0
   454  017C40  0000               	dw	0
   455  017C42  0000               	dw	0
   456  017C44  0000               	dw	0
   457  017C46  0000               	dw	0
   458  017C48  0000               	dw	0
   459  017C4A  0000               	dw	0
   460  017C4C  0000               	dw	0
   461  017C4E  D000               	dw	53248
   462  017C50  451B               	dw	17691
   463  017C52  8000               	dw	32768
   464  017C54  451A               	dw	17690
   465  017C56  00                 	db	0
   466  017C57  0000               	dw	0
   467  017C59  00                 	db	0
   468                           
   469                           ;initializer for stoa@F1166
   470  017C5A  28                 	db	40
   471  017C5B  6E                 	db	110
   472  017C5C  75                 	db	117
   473  017C5D  6C                 	db	108
   474  017C5E  6C                 	db	108
   475  017C5F  29                 	db	41
   476  017C60  00                 	db	0
   477                           
   478                           ;initializer for _port_data
   479  017C61  FF                 	db	255
   480  017C62  00                 	db	0
   481  017C63  FF                 	db	255
   482  017C64  00                 	db	0
   483  017C65  FF                 	db	255
   484  017C66  00                 	db	0
   485  017C67  FF                 	db	255
   486  017C68  00                 	db	0
   487  017C69  FF                 	db	255
   488  017C6A  00                 	db	0
   489  017C6B  FF                 	db	255
   490  017C6C  00                 	db	0
   491  017C6D  FF                 	db	255
   492  017C6E  00                 	db	0
   493  017C6F  FF                 	db	255
   494  017C70  00                 	db	0
   495                           
   496                           	psect	idataBANK2
   497  016D8C                     __pidataBANK2:
   498                           	opt callstack 0
   499                           
   500                           ;initializer for _V
   501  016D8C  00                 	db	0
   502  016D8D  00                 	db	0
   503  016D8E  00                 	db	0
   504  016D8F  00                 	db	0
   505  016D90  00                 	db	0
   506  016D91  00                 	db	0
   507  016D92  00                 	db	0
   508  016D93  00                 	db	0
   509  016D94  00                 	db	0
   510  016D95  00                 	db	0
   511  016D96  00                 	db	0
   512  016D97  00                 	db	0
   513  016D98  00                 	db	0
   514  016D99  00                 	db	0
   515  016D9A  00                 	db	0
   516  016D9B  00                 	db	0
   517  016D9C  00                 	db	0
   518  016D9D  00                 	db	0
   519  016D9E  00                 	db	0
   520  016D9F  00                 	db	0
   521  016DA0  00                 	db	0
   522  016DA1  00                 	db	0
   523  016DA2  00                 	db	0
   524  016DA3  00                 	db	0
   525  016DA4  00                 	db	0
   526  016DA5  00                 	db	0
   527  016DA6  00                 	db	0
   528  016DA7  00                 	db	0
   529  016DA8  00                 	db	0
   530  016DA9  00                 	db	0
   531  016DAA  00                 	db	0
   532  016DAB  00                 	db	0
   533  016DAC  00                 	db	0
   534  016DAD  00                 	db	0
   535  016DAE  00                 	db	0
   536  016DAF  00                 	db	0
   537  016DB0  00                 	db	0
   538  016DB1  00                 	db	0
   539  016DB2  00                 	db	0
   540  016DB3  00                 	db	0
   541  016DB4  00                 	db	0
   542  016DB5  00                 	db	0
   543  016DB6  00                 	db	0
   544  016DB7  00                 	db	0
   545  016DB8  00                 	db	0
   546  016DB9  00                 	db	0
   547  016DBA  00                 	db	0
   548  016DBB  00                 	db	0
   549  016DBC  00                 	db	0
   550  016DBD  00                 	db	0
   551  016DBE  00                 	db	0
   552  016DBF  00                 	db	0
   553  016DC0  00                 	db	0
   554  016DC1  00                 	db	0
   555  016DC2  00                 	db	0
   556  016DC3  00                 	db	0
   557  016DC4  00                 	db	0
   558  016DC5  00                 	db	0
   559  016DC6  00                 	db	0
   560  016DC7  00                 	db	0
   561  016DC8  00                 	db	0
   562  016DC9  00                 	db	0
   563  016DCA  00                 	db	0
   564  016DCB  00                 	db	0
   565  016DCC  00                 	db	0
   566  016DCD  00                 	db	0
   567  016DCE  00                 	db	0
   568  016DCF  00                 	db	0
   569  016DD0  00                 	db	0
   570  016DD1  00                 	db	0
   571  016DD2  00                 	db	0
   572  016DD3  00                 	db	0
   573  016DD4  00                 	db	0
   574  016DD5  00                 	db	0
   575  016DD6  00                 	db	0
   576  016DD7  00                 	db	0
   577  016DD8  00                 	db	0
   578  016DD9  00                 	db	0
   579  016DDA  00                 	db	0
   580  016DDB  00                 	db	0
   581  016DDC  00                 	db	0
   582  016DDD  00                 	db	0
   583  016DDE  00                 	db	0
   584  016DDF  00                 	db	0
   585  016DE0  00                 	db	0
   586  016DE1  00                 	db	0
   587  016DE2  00                 	db	0
   588  016DE3  00                 	db	0
   589  016DE4  00                 	db	0
   590  016DE5  00                 	db	0
   591  016DE6  00                 	db	0
   592  016DE7  00                 	db	0
   593  016DE8  00                 	db	0
   594  016DE9  00                 	db	0
   595  016DEA  00                 	db	0
   596  016DEB  00                 	db	0
   597  016DEC  00                 	db	0
   598  016DED  00                 	db	0
   599  016DEE  00                 	db	0
   600  016DEF  00                 	db	0
   601  016DF0  00                 	db	0
   602  016DF1  00                 	db	0
   603  016DF2  00                 	db	0
   604  016DF3  00                 	db	0
   605  016DF4  00                 	db	0
   606  016DF5  00                 	db	0
   607  016DF6  00                 	db	0
   608  016DF7  00                 	db	0
   609  016DF8  00                 	db	0
   610  016DF9  00                 	db	0
   611  016DFA  00                 	db	0
   612  016DFB  00                 	db	0
   613  016DFC  00                 	db	0
   614  016DFD  00                 	db	0
   615  016DFE  00                 	db	0
   616  016DFF  00                 	db	0
   617  016E00  00                 	db	0
   618  016E01  00                 	db	0
   619  016E02  00                 	db	0
   620  016E03  00                 	db	0
   621  016E04  00                 	db	0
   622  016E05  00                 	db	0
   623  016E06  00                 	db	0
   624  016E07  00                 	db	0
   625  016E08  00                 	db	0
   626  016E09  00                 	db	0
   627  016E0A  00                 	db	0
   628  016E0B  00                 	db	0
   629  016E0C  00                 	db	0
   630  016E0D  0000               	dw	0
   631  016E0F  0000               	dw	0
   632  016E11  0000               	dw	0
   633  016E13  0000               	dw	0
   634  016E15  0000               	dw	0
   635  016E17  0000               	dw	0
   636  016E19  00                 	db	0
   637  016E1A  00                 	db	0
   638  016E1B  00                 	db	0
   639  016E1C  00                 	db	0
   640  016E1D  00                 	db	0
   641  016E1E  00                 	db	0
   642  016E1F  00                 	db	0
   643  016E20  00                 	db	0
   644  016E21  0000               	dw	0
   645  016E23  0000               	dw	0
   646  016E25  0000               	dw	0
   647  016E27  0000               	dw	0
   648  016E29  0000               	dw	0
   649  016E2B  0000               	dw	0
   650  016E2D  0000               	dw	0
   651  016E2F  0000               	dw	0
   652  016E31  0000               	dw	0
   653  016E33  00                 	db	0
   654  016E34  00                 	db	0
   655  016E35  00                 	db	0
   656  016E36  00                 	db	0
   657  016E37  00                 	db	0
   658  016E38  00                 	db	0
   659  016E39  00                 	db	0
   660  016E3A  00                 	db	0
   661  016E3B  00                 	db	0
   662  016E3C  00                 	db	0
   663  016E3D  00                 	db	0
   664  016E3E  00                 	db	0
   665  016E3F  0000               	dw	0
   666  016E41  0000               	dw	0
   667  016E43  01                 	db	1
   668  016E44  00                 	db	0
   669  016E45  01                 	db	1
   670  016E46  00                 	db	0
   671  016E47  2D                 	db	45
   672  016E48  00                 	db	0
   673                           
   674                           	psect	mediumconst
   675  00FE72                     __pmediumconst:
   676                           	opt callstack 0
   677  00FE72  00                 	db	0
   678  00FE73                     _T:
   679                           	opt callstack 0
   680  00FE73  63                 	db	99
   681  00FE74  6F                 	db	111
   682  00FE75  6D                 	db	109
   683  00FE76  6D                 	db	109
   684  00FE77  61                 	db	97
   685  00FE78  6E                 	db	110
   686  00FE79  64                 	db	100
   687  00FE7A  73                 	db	115
   688  00FE7B  20                 	db	32
   689  00FE7C  31                 	db	49
   690  00FE7D  00                 	db	0
   691  00FE7E  00                 	db	0
   692  00FE7F  00                 	db	0
   693  00FE80  00                 	db	0
   694  00FE81  00                 	db	0
   695  00FE82  00                 	db	0
   696  00FE83  00                 	db	0
   697  00FE84  00                 	db	0
   698  00FE85  64                 	db	100
   699  00FE86  69                 	db	105
   700  00FE87  73                 	db	115
   701  00FE88  70                 	db	112
   702  00FE89  6C                 	db	108
   703  00FE8A  61                 	db	97
   704  00FE8B  79                 	db	121
   705  00FE8C  73                 	db	115
   706  00FE8D  20                 	db	32
   707  00FE8E  31                 	db	49
   708  00FE8F  00                 	db	0
   709  00FE90  00                 	db	0
   710  00FE91  00                 	db	0
   711  00FE92  00                 	db	0
   712  00FE93  00                 	db	0
   713  00FE94  00                 	db	0
   714  00FE95  00                 	db	0
   715  00FE96  00                 	db	0
   716  00FE97  63                 	db	99
   717  00FE98  6F                 	db	111
   718  00FE99  6D                 	db	109
   719  00FE9A  6D                 	db	109
   720  00FE9B  61                 	db	97
   721  00FE9C  6E                 	db	110
   722  00FE9D  64                 	db	100
   723  00FE9E  73                 	db	115
   724  00FE9F  20                 	db	32
   725  00FEA0  32                 	db	50
   726  00FEA1  00                 	db	0
   727  00FEA2  00                 	db	0
   728  00FEA3  00                 	db	0
   729  00FEA4  00                 	db	0
   730  00FEA5  00                 	db	0
   731  00FEA6  00                 	db	0
   732  00FEA7  00                 	db	0
   733  00FEA8  00                 	db	0
   734  00FEA9  64                 	db	100
   735  00FEAA  69                 	db	105
   736  00FEAB  73                 	db	115
   737  00FEAC  70                 	db	112
   738  00FEAD  6C                 	db	108
   739  00FEAE  61                 	db	97
   740  00FEAF  79                 	db	121
   741  00FEB0  73                 	db	115
   742  00FEB1  20                 	db	32
   743  00FEB2  32                 	db	50
   744  00FEB3  00                 	db	0
   745  00FEB4  00                 	db	0
   746  00FEB5  00                 	db	0
   747  00FEB6  00                 	db	0
   748  00FEB7  00                 	db	0
   749  00FEB8  00                 	db	0
   750  00FEB9  00                 	db	0
   751  00FEBA  00                 	db	0
   752  00FEBB  63                 	db	99
   753  00FEBC  6F                 	db	111
   754  00FEBD  6D                 	db	109
   755  00FEBE  6D                 	db	109
   756  00FEBF  61                 	db	97
   757  00FEC0  6E                 	db	110
   758  00FEC1  64                 	db	100
   759  00FEC2  73                 	db	115
   760  00FEC3  20                 	db	32
   761  00FEC4  33                 	db	51
   762  00FEC5  00                 	db	0
   763  00FEC6  00                 	db	0
   764  00FEC7  00                 	db	0
   765  00FEC8  00                 	db	0
   766  00FEC9  00                 	db	0
   767  00FECA  00                 	db	0
   768  00FECB  00                 	db	0
   769  00FECC  00                 	db	0
   770  00FECD  64                 	db	100
   771  00FECE  69                 	db	105
   772  00FECF  73                 	db	115
   773  00FED0  70                 	db	112
   774  00FED1  6C                 	db	108
   775  00FED2  61                 	db	97
   776  00FED3  79                 	db	121
   777  00FED4  73                 	db	115
   778  00FED5  20                 	db	32
   779  00FED6  33                 	db	51
   780  00FED7  00                 	db	0
   781  00FED8  00                 	db	0
   782  00FED9  00                 	db	0
   783  00FEDA  00                 	db	0
   784  00FEDB  00                 	db	0
   785  00FEDC  00                 	db	0
   786  00FEDD  00                 	db	0
   787  00FEDE  00                 	db	0
   788  00FEDF  63                 	db	99
   789  00FEE0  6F                 	db	111
   790  00FEE1  6D                 	db	109
   791  00FEE2  6D                 	db	109
   792  00FEE3  61                 	db	97
   793  00FEE4  6E                 	db	110
   794  00FEE5  64                 	db	100
   795  00FEE6  73                 	db	115
   796  00FEE7  20                 	db	32
   797  00FEE8  34                 	db	52
   798  00FEE9  00                 	db	0
   799  00FEEA  00                 	db	0
   800  00FEEB  00                 	db	0
   801  00FEEC  00                 	db	0
   802  00FEED  00                 	db	0
   803  00FEEE  00                 	db	0
   804  00FEEF  00                 	db	0
   805  00FEF0  00                 	db	0
   806  00FEF1  64                 	db	100
   807  00FEF2  69                 	db	105
   808  00FEF3  73                 	db	115
   809  00FEF4  70                 	db	112
   810  00FEF5  6C                 	db	108
   811  00FEF6  61                 	db	97
   812  00FEF7  79                 	db	121
   813  00FEF8  73                 	db	115
   814  00FEF9  20                 	db	32
   815  00FEFA  34                 	db	52
   816  00FEFB  00                 	db	0
   817  00FEFC  00                 	db	0
   818  00FEFD  00                 	db	0
   819  00FEFE  00                 	db	0
   820  00FEFF  00                 	db	0
   821  00FF00  00                 	db	0
   822  00FF01  00                 	db	0
   823  00FF02  00                 	db	0
   824  00FF03                     __end_of_T:
   825                           	opt callstack 0
   826  0000                     _IVTADL	set	14493
   827  0000                     _IVTADH	set	14494
   828  0000                     _IVTADU	set	14495
   829  0000                     _PIR4bits	set	14756
   830  0000                     _PIE8bits	set	14744
   831  0000                     _PIR8bits	set	14760
   832  0000                     _SCANPR	set	14839
   833  0000                     _DMA2PR	set	14836
   834  0000                     _DMA1PR	set	14835
   835  0000                     _MAINPR	set	14834
   836  0000                     _ISRPR	set	14833
   837  0000                     _PIE2bits	set	14738
   838  0000                     _PIR2bits	set	14754
   839  0000                     _PIE9bits	set	14745
   840  0000                     _PIR9bits	set	14761
   841  0000                     _PIE6bits	set	14742
   842  0000                     _PIE3bits	set	14739
   843  0000                     _PMD7	set	14791
   844  0000                     _PMD6	set	14790
   845  0000                     _PMD5	set	14789
   846  0000                     _PMD4	set	14788
   847  0000                     _PMD3	set	14787
   848  0000                     _PMD2	set	14786
   849  0000                     _PMD1	set	14785
   850  0000                     _PMD0	set	14784
   851  0000                     _OSCTUNE	set	14814
   852  0000                     _OSCFRQ	set	14815
   853  0000                     _OSCEN	set	14813
   854  0000                     _OSCCON3	set	14811
   855  0000                     _OSCCON1	set	14809
   856  0000                     _IPR8bits	set	14728
   857  0000                     _IPR9bits	set	14729
   858  0000                     _IPR5bits	set	14725
   859  0000                     _IPR1bits	set	14721
   860  0000                     _IPR3bits	set	14723
   861  0000                     _IPR6bits	set	14726
   862  0000                     _IPR2bits	set	14722
   863  0000                     _PIE5bits	set	14741
   864  0000                     _PIE1bits	set	14737
   865  0000                     _PIR5bits	set	14757
   866  0000                     _PIR1bits	set	14753
   867  0000                     _PLLR	set	118496
   868  0000                     _SPI1SDIPPS	set	15071
   869  0000                     _U1RXPPS	set	15077
   870  0000                     _RC6PPS	set	14870
   871  0000                     _RC5PPS	set	14869
   872  0000                     _INT1PPS	set	15041
   873  0000                     _RD1PPS	set	14873
   874  0000                     _INT0PPS	set	15040
   875  0000                     _RC3PPS	set	14867
   876  0000                     _RB6PPS	set	14862
   877  0000                     _SPI1SCKPPS	set	15070
   878  0000                     _U2RXPPS	set	15080
   879  0000                     _SLRCONF	set	14995
   880  0000                     _SLRCONE	set	14979
   881  0000                     _SLRCOND	set	14963
   882  0000                     _SLRCONC	set	14947
   883  0000                     _SLRCONB	set	14931
   884  0000                     _SLRCONA	set	14915
   885  0000                     _ODCOND	set	14962
   886  0000                     _ODCONC	set	14946
   887  0000                     _ODCONB	set	14930
   888  0000                     _ODCONA	set	14914
   889  0000                     _ODCONF	set	14994
   890  0000                     _ODCONE	set	14978
   891  0000                     _WPUC	set	14945
   892  0000                     _WPUA	set	14913
   893  0000                     _WPUB	set	14929
   894  0000                     _WPUE	set	14977
   895  0000                     _WPUF	set	14993
   896  0000                     _WPUD	set	14961
   897  0000                     _ANSELA	set	14912
   898  0000                     _ANSELF	set	14992
   899  0000                     _ANSELE	set	14976
   900  0000                     _ANSELB	set	14928
   901  0000                     _ANSELC	set	14944
   902  0000                     _ANSELD	set	14960
   903  0000                     _DMA2SSA	set	15321
   904  0000                     _DMA1SSA	set	15353
   905  0000                     _DMA2DSZ	set	15310
   906  0000                     _DMA2SSZ	set	15319
   907  0000                     _DMA2DSA	set	15312
   908  0000                     _DMA1DSZ	set	15342
   909  0000                     _DMA1SSZ	set	15351
   910  0000                     _DMA1DSA	set	15344
   911  0000                     _DMA1CON0bits	set	15356
   912  0000                     _DMA1CON1bits	set	15357
   913  0000                     _DMA2CON0	set	15324
   914  0000                     _DMA2AIRQ	set	15326
   915  0000                     _DMA2SIRQ	set	15327
   916  0000                     _DMA2CON1	set	15325
   917  0000                     _DMA1CON0	set	15356
   918  0000                     _DMA1AIRQ	set	15358
   919  0000                     _DMA1SIRQ	set	15359
   920  0000                     _DMA1CON1	set	15357
   921  0000                     _CLKRCON	set	15589
   922  0000                     _CLKRCLK	set	15590
   923  0000                     _SPI1INTFbits	set	15642
   924  0000                     _SPI1RXB	set	15632
   925  0000                     _SPI1TXB	set	15633
   926  0000                     _SPI1TCNTL	set	15634
   927  0000                     _SPI1CON0	set	15636
   928  0000                     _SPI1CLK	set	15644
   929  0000                     _SPI1BAUD	set	15641
   930  0000                     _SPI1CON2	set	15638
   931  0000                     _SPI1CON1	set	15637
   932  0000                     _U2RXB	set	15824
   933  0000                     _U2TXB	set	15826
   934  0000                     _U2ERRIE	set	15842
   935  0000                     _U2ERRIR	set	15841
   936  0000                     _U2UIR	set	15840
   937  0000                     _U2FIFO	set	15839
   938  0000                     _U2BRGH	set	15838
   939  0000                     _U2BRGL	set	15837
   940  0000                     _U2CON2	set	15836
   941  0000                     _U2CON1	set	15835
   942  0000                     _U2CON0	set	15834
   943  0000                     _U2P3L	set	15832
   944  0000                     _U2P2L	set	15830
   945  0000                     _U2P1L	set	15828
   946  0000                     _U1RXB	set	15848
   947  0000                     _U1TXB	set	15850
   948  0000                     _U1ERRIE	set	15866
   949  0000                     _U1ERRIR	set	15865
   950  0000                     _U1UIR	set	15864
   951  0000                     _U1FIFO	set	15863
   952  0000                     _U1BRGH	set	15862
   953  0000                     _U1BRGL	set	15861
   954  0000                     _U1CON2	set	15860
   955  0000                     _U1CON1	set	15859
   956  0000                     _U1CON0	set	15858
   957  0000                     _U1P3H	set	15857
   958  0000                     _U1P3L	set	15856
   959  0000                     _U1P2H	set	15855
   960  0000                     _U1P2L	set	15854
   961  0000                     _U1P1H	set	15853
   962  0000                     _U1P1L	set	15852
   963  0000                     _FVRCON	set	16065
   964  0000                     _ADFLTRL	set	16102
   965  0000                     _ADFLTRH	set	16103
   966  0000                     _ADCON0bits	set	16120
   967  0000                     _ADCON0	set	16120
   968  0000                     _ADCLK	set	16127
   969  0000                     _ADACT	set	16126
   970  0000                     _ADREF	set	16125
   971  0000                     _ADSTAT	set	16124
   972  0000                     _ADCON3	set	16123
   973  0000                     _ADCON2	set	16122
   974  0000                     _ADCON1	set	16121
   975  0000                     _ADPREH	set	16119
   976  0000                     _ADPREL	set	16118
   977  0000                     _ADCAP	set	16117
   978  0000                     _ADACQH	set	16116
   979  0000                     _ADACQL	set	16115
   980  0000                     _ADPCH	set	16113
   981  0000                     _ADRPT	set	16108
   982  0000                     _ADACCU	set	16106
   983  0000                     _ADSTPTH	set	16101
   984  0000                     _ADSTPTL	set	16100
   985  0000                     _ADUTHH	set	16097
   986  0000                     _ADUTHL	set	16096
   987  0000                     _ADLTHH	set	16095
   988  0000                     _ADLTHL	set	16094
   989  0000                     _CCPTMRS1bits	set	16223
   990  0000                     _LATCbits	set	16316
   991  0000                     _LATDbits	set	16317
   992  0000                     _PORTBbits	set	16331
   993  0000                     _T2CON	set	16300
   994  0000                     _T2TMR	set	16298
   995  0000                     _T2PR	set	16299
   996  0000                     _T2RST	set	16303
   997  0000                     _T2HLT	set	16301
   998  0000                     _T2CLKCON	set	16302
   999  0000                     _PWM8DCL	set	16224
  1000  0000                     _PWM8DCH	set	16225
  1001  0000                     _PWM8CON	set	16226
  1002  0000                     _LATEbits	set	16318
  1003  0000                     _T5CONbits	set	16282
  1004  0000                     _T5CON	set	16282
  1005  0000                     _TMR5L	set	16280
  1006  0000                     _TMR5H	set	16281
  1007  0000                     _T5CLK	set	16285
  1008  0000                     _T5GATE	set	16284
  1009  0000                     _T5GCON	set	16283
  1010  0000                     _T6CON	set	16276
  1011  0000                     _T6TMR	set	16274
  1012  0000                     _T6PR	set	16275
  1013  0000                     _T6RST	set	16279
  1014  0000                     _T6HLT	set	16277
  1015  0000                     _T6CLKCON	set	16278
  1016  0000                     _TRISD	set	16325
  1017  0000                     _TRISC	set	16324
  1018  0000                     _TRISB	set	16323
  1019  0000                     _TRISA	set	16322
  1020  0000                     _TRISF	set	16327
  1021  0000                     _TRISE	set	16326
  1022  0000                     _LATC	set	16316
  1023  0000                     _LATB	set	16315
  1024  0000                     _LATF	set	16319
  1025  0000                     _LATA	set	16314
  1026  0000                     _LATD	set	16317
  1027  0000                     _LATE	set	16318
  1028  0000                     _IVTLOCKbits	set	16340
  1029  0000                     _IVTLOCK	set	16340
  1030  0000                     _INTCON0bits	set	16338
  1031  0000                     _GIE	set	130711
  1032  00FF03                     
  1033                           ; BSR set to: 57
  1034  00FF03  20                 	db	32
  1035  00FF04  4D                 	db	77	;'M'
  1036  00FF05  65                 	db	101	;'e'
  1037  00FF06  73                 	db	115	;'s'
  1038  00FF07  67                 	db	103	;'g'
  1039  00FF08  20                 	db	32
  1040  00FF09  25                 	db	37
  1041  00FF0A  64                 	db	100	;'d'
  1042  00FF0B  20                 	db	32
  1043  00FF0C  53                 	db	83	;'S'
  1044  00FF0D  74                 	db	116	;'t'
  1045  00FF0E  61                 	db	97	;'a'
  1046  00FF0F  63                 	db	99	;'c'
  1047  00FF10  6B                 	db	107	;'k'
  1048  00FF11  20                 	db	32
  1049  00FF12  25                 	db	37
  1050  00FF13  64                 	db	100	;'d'
  1051  00FF14  20                 	db	32
  1052  00FF15  20                 	db	32
  1053  00FF16  20                 	db	32
  1054  00FF17  20                 	db	32
  1055  00FF18  20                 	db	32
  1056  00FF19  20                 	db	32
  1057  00FF1A  00                 	db	0
  1058  00FF1B                     STR_26:
  1059                           
  1060                           ; BSR set to: 57
  1061  00FF1B  20                 	db	32
  1062  00FF1C  20                 	db	32
  1063  00FF1D  20                 	db	32
  1064  00FF1E  20                 	db	32
  1065  00FF1F  20                 	db	32
  1066  00FF20  20                 	db	32
  1067  00FF21  20                 	db	32
  1068  00FF22  20                 	db	32
  1069  00FF23  20                 	db	32
  1070  00FF24  20                 	db	32
  1071  00FF25  20                 	db	32
  1072  00FF26  20                 	db	32
  1073  00FF27  20                 	db	32
  1074  00FF28  20                 	db	32
  1075  00FF29  20                 	db	32
  1076  00FF2A  20                 	db	32
  1077  00FF2B  20                 	db	32
  1078  00FF2C  20                 	db	32
  1079  00FF2D  00                 	db	0
  1080  00FF2E                     STR_16:
  1081                           
  1082                           ; BSR set to: 57
  1083  00FF2E  48                 	db	72	;'H'
  1084  00FF2F  45                 	db	69	;'E'
  1085  00FF30  4C                 	db	76	;'L'
  1086  00FF31  50                 	db	80	;'P'
  1087  00FF32  20                 	db	32
  1088  00FF33  25                 	db	37
  1089  00FF34  73                 	db	115	;'s'
  1090  00FF35  20                 	db	32
  1091  00FF36  20                 	db	32
  1092  00FF37  20                 	db	32
  1093  00FF38  20                 	db	32
  1094  00FF39  20                 	db	32
  1095  00FF3A  20                 	db	32
  1096  00FF3B  20                 	db	32
  1097  00FF3C  20                 	db	32
  1098  00FF3D  20                 	db	32
  1099  00FF3E  20                 	db	32
  1100  00FF3F  20                 	db	32
  1101  00FF40  00                 	db	0
  1102  00FF41                     
  1103                           ; BSR set to: 57
  1104  00FF41  44                 	db	68	;'D'
  1105  00FF42  49                 	db	73	;'I'
  1106  00FF43  53                 	db	83	;'S'
  1107  00FF44  50                 	db	80	;'P'
  1108  00FF45  4C                 	db	76	;'L'
  1109  00FF46  41                 	db	65	;'A'
  1110  00FF47  59                 	db	89	;'Y'
  1111  00FF48  20                 	db	32
  1112  00FF49  25                 	db	37
  1113  00FF4A  73                 	db	115	;'s'
  1114  00FF4B  20                 	db	32
  1115  00FF4C  20                 	db	32
  1116  00FF4D  20                 	db	32
  1117  00FF4E  20                 	db	32
  1118  00FF4F  20                 	db	32
  1119  00FF50  20                 	db	32
  1120  00FF51  20                 	db	32
  1121  00FF52  20                 	db	32
  1122  00FF53  00                 	db	0
  1123  00FF54                     STR_8:
  1124                           
  1125                           ; BSR set to: 57
  1126  00FF54  20                 	db	32
  1127  00FF55  56                 	db	86	;'V'
  1128  00FF56  54                 	db	84	;'T'
  1129  00FF57  45                 	db	69	;'E'
  1130  00FF58  52                 	db	82	;'R'
  1131  00FF59  4D                 	db	77	;'M'
  1132  00FF5A  20                 	db	32
  1133  00FF5B  23                 	db	35
  1134  00FF5C  32                 	db	50	;'2'
  1135  00FF5D  20                 	db	32
  1136  00FF5E  20                 	db	32
  1137  00FF5F  20                 	db	32
  1138  00FF60  20                 	db	32
  1139  00FF61  20                 	db	32
  1140  00FF62  20                 	db	32
  1141  00FF63  20                 	db	32
  1142  00FF64  00                 	db	0
  1143  00FF65                     STR_4:
  1144                           
  1145                           ; BSR set to: 57
  1146  00FF65  20                 	db	32
  1147  00FF66  4E                 	db	78	;'N'
  1148  00FF67  53                 	db	83	;'S'
  1149  00FF68  41                 	db	65	;'A'
  1150  00FF69  53                 	db	83	;'S'
  1151  00FF6A  50                 	db	80	;'P'
  1152  00FF6B  4F                 	db	79	;'O'
  1153  00FF6C  4F                 	db	79	;'O'
  1154  00FF6D  4B                 	db	75	;'K'
  1155  00FF6E  20                 	db	32
  1156  00FF6F  20                 	db	32
  1157  00FF70  20                 	db	32
  1158  00FF71  20                 	db	32
  1159  00FF72  20                 	db	32
  1160  00FF73  20                 	db	32
  1161  00FF74  20                 	db	32
  1162  00FF75  00                 	db	0
  1163  00FF76                     STR_1:
  1164                           
  1165                           ; BSR set to: 57
  1166  00FF76  20                 	db	32
  1167  00FF77  4D                 	db	77	;'M'
  1168  00FF78  42                 	db	66	;'B'
  1169  00FF79  4D                 	db	77	;'M'
  1170  00FF7A  43                 	db	67	;'C'
  1171  00FF7B  20                 	db	32
  1172  00FF7C  53                 	db	83	;'S'
  1173  00FF7D  4F                 	db	79	;'O'
  1174  00FF7E  4C                 	db	76	;'L'
  1175  00FF7F  41                 	db	65	;'A'
  1176  00FF80  52                 	db	82	;'R'
  1177  00FF81  4D                 	db	77	;'M'
  1178  00FF82  4F                 	db	79	;'O'
  1179  00FF83  4E                 	db	78	;'N'
  1180  00FF84  20                 	db	32
  1181  00FF85  20                 	db	32
  1182  00FF86  00                 	db	0
  1183  00FF87                     STR_5:
  1184                           
  1185                           ; BSR set to: 57
  1186  00FF87  20                 	db	32
  1187  00FF88  53                 	db	83	;'S'
  1188  00FF89  45                 	db	69	;'E'
  1189  00FF8A  51                 	db	81	;'Q'
  1190  00FF8B  55                 	db	85	;'U'
  1191  00FF8C  45                 	db	69	;'E'
  1192  00FF8D  4E                 	db	78	;'N'
  1193  00FF8E  43                 	db	67	;'C'
  1194  00FF8F  45                 	db	69	;'E'
  1195  00FF90  20                 	db	32
  1196  00FF91  54                 	db	84	;'T'
  1197  00FF92  45                 	db	69	;'E'
  1198  00FF93  53                 	db	83	;'S'
  1199  00FF94  54                 	db	84	;'T'
  1200  00FF95  20                 	db	32
  1201  00FF96  20                 	db	32
  1202  00FF97  00                 	db	0
  1203  00FF98                     STR_20:
  1204                           
  1205                           ; BSR set to: 57
  1206  00FF98  76                 	db	118	;'v'
  1207  00FF99  74                 	db	116	;'t'
  1208  00FF9A  65                 	db	101	;'e'
  1209  00FF9B  72                 	db	114	;'r'
  1210  00FF9C  6D                 	db	109	;'m'
  1211  00FF9D  20                 	db	32
  1212  00FF9E  25                 	db	37
  1213  00FF9F  78                 	db	120	;'x'
  1214  00FFA0  3A                 	db	58	;':'
  1215  00FFA1  25                 	db	37
  1216  00FFA2  78                 	db	120	;'x'
  1217  00FFA3  20                 	db	32
  1218  00FFA4  20                 	db	32
  1219  00FFA5  20                 	db	32
  1220  00FFA6  00                 	db	0
  1221  00FFA7                     STR_2:
  1222                           
  1223                           ; BSR set to: 57
  1224  00FFA7  20                 	db	32
  1225  00FFA8  56                 	db	86	;'V'
  1226  00FFA9  65                 	db	101	;'e'
  1227  00FFAA  72                 	db	114	;'r'
  1228  00FFAB  73                 	db	115	;'s'
  1229  00FFAC  69                 	db	105	;'i'
  1230  00FFAD  6F                 	db	111	;'o'
  1231  00FFAE  6E                 	db	110	;'n'
  1232  00FFAF  20                 	db	32
  1233  00FFB0  25                 	db	37
  1234  00FFB1  73                 	db	115	;'s'
  1235  00FFB2  20                 	db	32
  1236  00FFB3  20                 	db	32
  1237  00FFB4  20                 	db	32
  1238  00FFB5  00                 	db	0
  1239  00FFB6                     STR_9:
  1240                           
  1241                           ; BSR set to: 57
  1242  00FFB6  25                 	db	37
  1243  00FFB7  64                 	db	100	;'d'
  1244  00FFB8  20                 	db	32
  1245  00FFB9  25                 	db	37
  1246  00FFBA  32                 	db	50	;'2'
  1247  00FFBB  2E                 	db	46
  1248  00FFBC  32                 	db	50	;'2'
  1249  00FFBD  66                 	db	102	;'f'
  1250  00FFBE  20                 	db	32
  1251  00FFBF  20                 	db	32
  1252  00FFC0  20                 	db	32
  1253  00FFC1  23                 	db	35
  1254  00FFC2  00                 	db	0
  1255  00FFC3                     STR_14:
  1256                           
  1257                           ; BSR set to: 57
  1258  00FFC3  4E                 	db	78	;'N'
  1259  00FFC4  6F                 	db	111	;'o'
  1260  00FFC5  76                 	db	118	;'v'
  1261  00FFC6  20                 	db	32
  1262  00FFC7  20                 	db	32
  1263  00FFC8  38                 	db	56	;'8'
  1264  00FFC9  20                 	db	32
  1265  00FFCA  32                 	db	50	;'2'
  1266  00FFCB  30                 	db	48	;'0'
  1267  00FFCC  31                 	db	49	;'1'
  1268  00FFCD  39                 	db	57	;'9'
  1269  00FFCE  00                 	db	0
  1270  00FFCF                     STR_18:
  1271                           
  1272                           ; BSR set to: 57
  1273  00FFCF  25                 	db	37
  1274  00FFD0  73                 	db	115	;'s'
  1275  00FFD1  20                 	db	32
  1276  00FFD2  20                 	db	32
  1277  00FFD3  20                 	db	32
  1278  00FFD4  20                 	db	32
  1279  00FFD5  20                 	db	32
  1280  00FFD6  20                 	db	32
  1281  00FFD7  20                 	db	32
  1282  00FFD8  00                 	db	0
  1283  00FFD9                     STR_15:
  1284                           
  1285                           ; BSR set to: 57
  1286  00FFD9  30                 	db	48	;'0'
  1287  00FFDA  37                 	db	55	;'7'
  1288  00FFDB  3A                 	db	58	;':'
  1289  00FFDC  31                 	db	49	;'1'
  1290  00FFDD  35                 	db	53	;'5'
  1291  00FFDE  3A                 	db	58	;':'
  1292  00FFDF  32                 	db	50	;'2'
  1293  00FFE0  30                 	db	48	;'0'
  1294  00FFE1  00                 	db	0
  1295  00FFE2                     STR_33:
  1296                           
  1297                           ; BSR set to: 57
  1298  00FFE2  49                 	db	73	;'I'
  1299  00FFE3  4E                 	db	78	;'N'
  1300  00FFE4  46                 	db	70	;'F'
  1301  00FFE5  00                 	db	0
  1302  00FFE6                     STR_37:
  1303                           
  1304                           ; BSR set to: 57
  1305  00FFE6  4E                 	db	78	;'N'
  1306  00FFE7  41                 	db	65	;'A'
  1307  00FFE8  4E                 	db	78	;'N'
  1308  00FFE9  00                 	db	0
  1309  00FFEA                     STR_34:
  1310                           
  1311                           ; BSR set to: 57
  1312  00FFEA  69                 	db	105	;'i'
  1313  00FFEB  6E                 	db	110	;'n'
  1314  00FFEC  66                 	db	102	;'f'
  1315  00FFED  00                 	db	0
  1316  00FFEE                     STR_38:
  1317                           
  1318                           ; BSR set to: 57
  1319  00FFEE  6E                 	db	110	;'n'
  1320  00FFEF  61                 	db	97	;'a'
  1321  00FFF0  6E                 	db	110	;'n'
  1322  00FFF1  00                 	db	0
  1323  00FFF2                     STR_3:
  1324                           
  1325                           ; BSR set to: 57
  1326  00FFF2  30                 	db	48	;'0'
  1327  00FFF3  2E                 	db	46
  1328  00FFF4  39                 	db	57	;'9'
  1329  00FFF5  00                 	db	0
  1330  00FFF6                     STR_41:
  1331                           
  1332                           ; BSR set to: 57
  1333  00FFF6  6C                 	db	108	;'l'
  1334  00FFF7  66                 	db	102	;'f'
  1335  00FFF8  00                 	db	0
  1336  00FFF9                     STR_12:
  1337                           
  1338                           ; BSR set to: 57
  1339  00FFF9  25                 	db	37
  1340  00FFFA  63                 	db	99	;'c'
  1341  00FFFB  00                 	db	0
  1342  00FFFC                     STR_11:
  1343                           
  1344                           ; BSR set to: 57
  1345  00FFFC  25                 	db	37
  1346  00FFFD  73                 	db	115	;'s'
  1347  00FFFE  00                 	db	0
  1348  0000                     
  1349                           ; #config settings
  1350  00FFFF  00                 	db	0	; dummy byte at the end
  1351  0000                     
  1352                           	psect	cinit
  1353  016C02                     __pcinit:
  1354                           	opt callstack 0
  1355  016C02                     start_initialization:
  1356                           	opt callstack 0
  1357  016C02                     __initialization:
  1358                           	opt callstack 0
  1359                           
  1360                           ; Initialize objects allocated to BANK2 (189 bytes)
  1361                           ; load TBLPTR registers with __pidataBANK2
  1362  016C02  0E8C               	movlw	low __pidataBANK2
  1363  016C04  6EF6               	movwf	tblptrl,c
  1364  016C06  0E6D               	movlw	high __pidataBANK2
  1365  016C08  6EF7               	movwf	tblptrh,c
  1366  016C0A  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1367  016C0C  6EF8               	movwf	tblptru,c
  1368  016C0E  EE00  F200         	lfsr	0,__pdataBANK2
  1369  016C12  EE20 F0BD          	lfsr	2,189
  1370  016C16                     copy_data0:
  1371  016C16  0009               	tblrd		*+
  1372  016C18  006F FFD7 FFEE     	movff	tablat,postinc0
  1373  016C1E  50DD               	movf	postdec2,w,c
  1374  016C20  50D9               	movf	fsr2l,w,c
  1375  016C22  E1F9               	bnz	copy_data0
  1376                           
  1377                           ; Initialize objects allocated to BANK0 (65 bytes)
  1378                           ; load TBLPTR registers with __pidataBANK0
  1379  016C24  0E30               	movlw	low __pidataBANK0
  1380  016C26  6EF6               	movwf	tblptrl,c
  1381  016C28  0E7C               	movlw	high __pidataBANK0
  1382  016C2A  6EF7               	movwf	tblptrh,c
  1383  016C2C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1384  016C2E  6EF8               	movwf	tblptru,c
  1385  016C30  EE00  F0A3         	lfsr	0,__pdataBANK0
  1386  016C34  EE20 F041          	lfsr	2,65
  1387  016C38                     copy_data1:
  1388  016C38  0009               	tblrd		*+
  1389  016C3A  006F FFD7 FFEE     	movff	tablat,postinc0
  1390  016C40  50DD               	movf	postdec2,w,c
  1391  016C42  50D9               	movf	fsr2l,w,c
  1392  016C44  E1F9               	bnz	copy_data1
  1393                           
  1394                           ; Clear objects allocated to BANK6 (255 bytes)
  1395  016C46  EE01  F200         	lfsr	0,__pbssBANK6
  1396  016C4A  EE20 F0FF          	lfsr	2,255
  1397  016C4E                     clear_0:
  1398  016C4E  6AEE               	clrf	postinc0,c
  1399  016C50  50DD               	movf	postdec2,w,c
  1400  016C52  50D9               	movf	fsr2l,w,c
  1401  016C54  E1FC               	bnz	clear_0
  1402  016C56  50DA               	movf	fsr2h,w,c
  1403  016C58  E1FA               	bnz	clear_0
  1404                           
  1405                           ; Clear objects allocated to BANK5 (255 bytes)
  1406  016C5A  EE01  F100         	lfsr	0,__pbssBANK5
  1407  016C5E  EE20 F0FF          	lfsr	2,255
  1408  016C62                     clear_1:
  1409  016C62  6AEE               	clrf	postinc0,c
  1410  016C64  50DD               	movf	postdec2,w,c
  1411  016C66  50D9               	movf	fsr2l,w,c
  1412  016C68  E1FC               	bnz	clear_1
  1413  016C6A  50DA               	movf	fsr2h,w,c
  1414  016C6C  E1FA               	bnz	clear_1
  1415                           
  1416                           ; Clear objects allocated to BANK4 (218 bytes)
  1417  016C6E  EE01  F000         	lfsr	0,__pbssBANK4
  1418  016C72  0EDA               	movlw	218
  1419  016C74                     clear_2:
  1420  016C74  6AEE               	clrf	postinc0,c
  1421  016C76  06E8               	decf	wreg,f,c
  1422  016C78  E1FD               	bnz	clear_2
  1423                           
  1424                           ; Clear objects allocated to BANK3 (198 bytes)
  1425  016C7A  EE00  F300         	lfsr	0,__pbssBANK3
  1426  016C7E  0EC6               	movlw	198
  1427  016C80                     clear_3:
  1428  016C80  6AEE               	clrf	postinc0,c
  1429  016C82  06E8               	decf	wreg,f,c
  1430  016C84  E1FD               	bnz	clear_3
  1431                           
  1432                           ; Clear objects allocated to BANK2 (64 bytes)
  1433  016C86  EE00  F2BD         	lfsr	0,__pbssBANK2
  1434  016C8A  0E40               	movlw	64
  1435  016C8C                     clear_4:
  1436  016C8C  6AEE               	clrf	postinc0,c
  1437  016C8E  06E8               	decf	wreg,f,c
  1438  016C90  E1FD               	bnz	clear_4
  1439                           
  1440                           ; Clear objects allocated to BANK1 (244 bytes)
  1441  016C92  EE00  F100         	lfsr	0,__pbssBANK1
  1442  016C96  0EF4               	movlw	244
  1443  016C98                     clear_5:
  1444  016C98  6AEE               	clrf	postinc0,c
  1445  016C9A  06E8               	decf	wreg,f,c
  1446  016C9C  E1FD               	bnz	clear_5
  1447                           
  1448                           ; Clear objects allocated to BANK0 (67 bytes)
  1449  016C9E  EE00  F060         	lfsr	0,__pbssBANK0
  1450  016CA2  0E43               	movlw	67
  1451  016CA4                     clear_6:
  1452  016CA4  6AEE               	clrf	postinc0,c
  1453  016CA6  06E8               	decf	wreg,f,c
  1454  016CA8  E1FD               	bnz	clear_6
  1455                           
  1456                           ; Clear objects allocated to COMRAM (52 bytes)
  1457  016CAA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1458  016CAE  0E34               	movlw	52
  1459  016CB0                     clear_7:
  1460  016CB0  6AEE               	clrf	postinc0,c
  1461  016CB2  06E8               	decf	wreg,f,c
  1462  016CB4  E1FD               	bnz	clear_7
  1463                           
  1464                           ;
  1465                           ; Setup IVTBASE
  1466                           ;
  1467  016CB6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1468  016CB8  6ED5               	movwf	213,c
  1469  016CBA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1470  016CBC  6ED6               	movwf	214,c
  1471  016CBE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1472  016CC0  6ED7               	movwf	215,c
  1473  016CC2                     end_of_initialization:
  1474                           	opt callstack 0
  1475  016CC2                     __end_of__initialization:
  1476                           	opt callstack 0
  1477  016CC2  0100               	movlb	0
  1478  016CC4  EFB4  F096         	goto	_main	;jump to C main() function
  1479                           
  1480                           	psect	bssCOMRAM
  1481  000001                     __pbssCOMRAM:
  1482                           	opt callstack 0
  1483  000001                     _TMR6_InterruptHandler:
  1484                           	opt callstack 0
  1485  000001                     	ds	3
  1486  000004                     _ADCC_ADTI_InterruptHandler:
  1487                           	opt callstack 0
  1488  000004                     	ds	3
  1489  000007                     _ADCC_ADI_InterruptHandler:
  1490                           	opt callstack 0
  1491  000007                     	ds	3
  1492  00000A                     _UART1_TxInterruptHandler:
  1493                           	opt callstack 0
  1494  00000A                     	ds	3
  1495  00000D                     _UART1_RxInterruptHandler:
  1496                           	opt callstack 0
  1497  00000D                     	ds	3
  1498  000010                     _UART2_TxInterruptHandler:
  1499                           	opt callstack 0
  1500  000010                     	ds	3
  1501  000013                     _UART2_RxInterruptHandler:
  1502                           	opt callstack 0
  1503  000013                     	ds	3
  1504  000016                     _INT1_InterruptHandler:
  1505                           	opt callstack 0
  1506  000016                     	ds	3
  1507  000019                     _INT0_InterruptHandler:
  1508                           	opt callstack 0
  1509  000019                     	ds	3
  1510  00001C                     _nout:
  1511                           	opt callstack 0
  1512  00001C                     	ds	2
  1513  00001E                     _width:
  1514                           	opt callstack 0
  1515  00001E                     	ds	2
  1516  000020                     _prec:
  1517                           	opt callstack 0
  1518  000020                     	ds	2
  1519  000022                     _flags:
  1520                           	opt callstack 0
  1521  000022                     	ds	2
  1522  000024                     TMR5_ISR@CountCallBack:
  1523                           	opt callstack 0
  1524  000024                     	ds	2
  1525  000026                     _timer5ReloadVal:
  1526                           	opt callstack 0
  1527  000026                     	ds	2
  1528  000028                     _mode_sw:
  1529                           	opt callstack 0
  1530  000028                     	ds	1
  1531  000029                     _uart2RxCount:
  1532                           	opt callstack 0
  1533  000029                     	ds	1
  1534  00002A                     _uart2RxTail:
  1535                           	opt callstack 0
  1536  00002A                     	ds	1
  1537  00002B                     _uart2RxHead:
  1538                           	opt callstack 0
  1539  00002B                     	ds	1
  1540  00002C                     _uart2TxBufferRemaining:
  1541                           	opt callstack 0
  1542  00002C                     	ds	1
  1543  00002D                     _uart2TxTail:
  1544                           	opt callstack 0
  1545  00002D                     	ds	1
  1546  00002E                     _uart2TxHead:
  1547                           	opt callstack 0
  1548  00002E                     	ds	1
  1549  00002F                     _uart1RxCount:
  1550                           	opt callstack 0
  1551  00002F                     	ds	1
  1552  000030                     _uart1RxTail:
  1553                           	opt callstack 0
  1554  000030                     	ds	1
  1555  000031                     _uart1RxHead:
  1556                           	opt callstack 0
  1557  000031                     	ds	1
  1558  000032                     _uart1TxBufferRemaining:
  1559                           	opt callstack 0
  1560  000032                     	ds	1
  1561  000033                     _uart1TxTail:
  1562                           	opt callstack 0
  1563  000033                     	ds	1
  1564  000034                     _uart1TxHead:
  1565                           	opt callstack 0
  1566  000034                     	ds	1
  1567                           
  1568                           	psect	bssBANK0
  1569  000060                     __pbssBANK0:
  1570                           	opt callstack 0
  1571  000060                     _tickCount:
  1572                           	opt callstack 0
  1573  000060                     	ds	24
  1574  000078                     _spi_link:
  1575                           	opt callstack 0
  1576  000078                     	ds	12
  1577  000084                     floorf@F524:
  1578                           	opt callstack 0
  1579  000084                     	ds	4
  1580  000088                     ___fpclassifyf@F463:
  1581                           	opt callstack 0
  1582  000088                     	ds	4
  1583  00008C                     lp_filter@lp_x:
  1584                           	opt callstack 0
  1585  00008C                     	ds	4
  1586  000090                     lp_filter@lp_speed:
  1587                           	opt callstack 0
  1588  000090                     	ds	4
  1589  000094                     wdtdelay@dcount:
  1590                           	opt callstack 0
  1591  000094                     	ds	4
  1592  000098                     _TMR5_InterruptHandler:
  1593                           	opt callstack 0
  1594  000098                     	ds	3
  1595  00009B                     _seed:
  1596                           	opt callstack 0
  1597  00009B                     	ds	8
  1598                           
  1599                           	psect	dataBANK0
  1600  0000A3                     __pdataBANK0:
  1601                           	opt callstack 0
  1602  0000A3                     _R:
  1603                           	opt callstack 0
  1604  0000A3                     	ds	42
  1605  0000CD                     stoa@F1166:
  1606                           	opt callstack 0
  1607  0000CD                     	ds	7
  1608  0000D4                     _port_data:
  1609                           	opt callstack 0
  1610  0000D4                     	ds	16
  1611                           
  1612                           	psect	bssBANK1
  1613  000100                     __pbssBANK1:
  1614                           	opt callstack 0
  1615  000100                     _C:
  1616                           	opt callstack 0
  1617  000100                     	ds	104
  1618  000168                     lp_filter@smooth:
  1619                           	opt callstack 0
  1620  000168                     	ds	60
  1621  0001A4                     _dbuf:
  1622                           	opt callstack 0
  1623  0001A4                     	ds	80
  1624                           
  1625                           	psect	bssBANK2
  1626  0002BD                     __pbssBANK2:
  1627                           	opt callstack 0
  1628  0002BD                     _uart1TxBuffer:
  1629                           	opt callstack 0
  1630  0002BD                     	ds	64
  1631                           
  1632                           	psect	dataBANK2
  1633  000200                     __pdataBANK2:
  1634                           	opt callstack 0
  1635  000200                     _V:
  1636                           	opt callstack 0
  1637  000200                     	ds	189
  1638                           
  1639                           	psect	bssBANK3
  1640  000300                     __pbssBANK3:
  1641                           	opt callstack 0
  1642  000300                     _uart2TxBuffer:
  1643                           	opt callstack 0
  1644  000300                     	ds	64
  1645  000340                     _ring_buf2:
  1646                           	opt callstack 0
  1647  000340                     	ds	67
  1648  000383                     _ring_buf1:
  1649                           	opt callstack 0
  1650  000383                     	ds	67
  1651                           
  1652                           	psect	bssBANK4
  1653  000400                     __pbssBANK4:
  1654                           	opt callstack 0
  1655  000400                     _D:
  1656                           	opt callstack 0
  1657  000400                     	ds	218
  1658                           
  1659                           	psect	bssBANK5
  1660  000500                     __pbssBANK5:
  1661                           	opt callstack 0
  1662  000500                     _uart1RxBuffer:
  1663                           	opt callstack 0
  1664  000500                     	ds	255
  1665                           
  1666                           	psect	bssBANK6
  1667  000600                     __pbssBANK6:
  1668                           	opt callstack 0
  1669  000600                     _uart2RxBuffer:
  1670                           	opt callstack 0
  1671  000600                     	ds	255
  1672                           
  1673                           	psect	cstackBANK0
  1674  0000E4                     __pcstackBANK0:
  1675                           	opt callstack 0
  1676  0000E4                     ??_TMR6_ISR:
  1677                           
  1678                           ; 1 bytes @ 0x0
  1679  0000E4                     	ds	1
  1680  0000E5                     ??_TMR5_ISR:
  1681                           
  1682                           ; 1 bytes @ 0x1
  1683  0000E5                     	ds	4
  1684                           
  1685                           	psect	cstackCOMRAM
  1686  000055                     __pcstackCOMRAM:
  1687                           	opt callstack 0
  1688  000055                     ??_ADCC_ISR:
  1689  000055                     
  1690                           ; 1 bytes @ 0x0
  1691  000055                     	ds	1
  1692  000056                     ??_ADCC_ThresholdISR:
  1693                           
  1694                           ; 1 bytes @ 0x1
  1695  000056                     	ds	5
  1696                           
  1697 ;;
  1698 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1699 ;;
  1700 ;; *************** function _main *****************
  1701 ;; Defined at:
  1702 ;;		line 149 in file "main.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  mode            1  [STACK] enum E17005
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1  [STACK] void 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels required when called:   19
  1722 ;; This function calls:
  1723 ;;		_SYSTEM_Initialize
  1724 ;;		_StartTimer
  1725 ;;		_TimerDone
  1726 ;;		_WaitMs
  1727 ;;		_check_adc_scan
  1728 ;;		_check_help
  1729 ;;		_clear_adc_scan
  1730 ;;		_conv_raw_result
  1731 ;;		_eaDogM_WriteCommand
  1732 ;;		_get_raw_result
  1733 ;;		_get_vterm_ptr
  1734 ;;		_init_display
  1735 ;;		_lp_filter
  1736 ;;		_mode_lamp_dim
  1737 ;;		_set_display_info
  1738 ;;		_set_vterm
  1739 ;;		_sprintf
  1740 ;;		_srand
  1741 ;;		_start_adc_scan
  1742 ;;		_update_lcd
  1743 ;; This function is called by:
  1744 ;;		Startup code after reset
  1745 ;; This function uses a reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text0
  1749  012D68                     __ptext0:
  1750                           	opt callstack 0
  1751  012D68                     _main:
  1752                           	opt callstack 0
  1753                           
  1754                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1755  012D68  52E6               	movf	postinc1,f,c
  1756                           
  1757                           ;main.c: 151:  UI_STATES mode;;main.c: 154:  SYSTEM_Initialize();
  1758                           
  1759                           ;incstack = 0
  1760  012D6A  EC6C  F0BD         	call	_SYSTEM_Initialize	;wreg free
  1761                           
  1762                           ; BSR set to: 60
  1763                           ;main.c: 157:  (INTCON0bits.GIEH = 1);
  1764  012D6E  8ED2               	bsf	210,7,c	;volatile
  1765                           
  1766                           ; BSR set to: 60
  1767                           ;main.c: 160:  (INTCON0bits.GIEL = 1);
  1768  012D70  8CD2               	bsf	210,6,c	;volatile
  1769                           
  1770                           ; BSR set to: 60
  1771                           ;main.c: 162:  V.ui_state = UI_STATE_INIT;
  1772  012D72  0102               	movlb	2	; () banked
  1773  012D74  6B00               	clrf	_V& (0+255),b	;volatile
  1774                           
  1775                           ; BSR set to: 2
  1776                           ;main.c: 167:  WaitMs(300);
  1777  012D76  0E2C               	movlw	44
  1778  012D78  6EE6               	movwf	postinc1,c
  1779  012D7A  0E01               	movlw	1
  1780  012D7C  6EE6               	movwf	postinc1,c
  1781  012D7E  ECB0  F0BE         	call	_WaitMs	;wreg free
  1782                           
  1783                           ;main.c: 168:  if (PORTBbits.RB0) {
  1784  012D82  A0CB               	btfss	203,0,c	;volatile
  1785  012D84  D004               	goto	l9962
  1786                           
  1787                           ;main.c: 169:   mode = UI_STATE_HOST;
  1788                           ;stkvar	_mode @ sp[(-1)+0]
  1789  012D86  0EFF               	movlw	-1
  1790  012D88  6AE3               	clrf	plusw1,c
  1791  012D8A  2AE3               	incf	plusw1,f,c
  1792                           
  1793                           ;main.c: 170:  } else {
  1794  012D8C  D004               	goto	l9964
  1795  012D8E                     l9962:
  1796                           
  1797                           ;main.c: 171:   mode = UI_STATE_LOG;
  1798                           ;stkvar	_mode @ sp[(-1)+0]
  1799  012D8E  0EFF               	movlw	-1
  1800  012D90  6AE3               	clrf	plusw1,c
  1801  012D92  80E3               	bsf	plusw1,0,c
  1802  012D94  82E3               	bsf	plusw1,1,c	;indir
  1803  012D96                     l9964:
  1804                           
  1805                           ;main.c: 174:  if (mode == UI_STATE_HOST) {
  1806                           ;stkvar	_mode @ sp[(-1)+0]
  1807  012D96  0EFF               	movlw	-1
  1808  012D98  04E3               	decf	plusw1,w,c
  1809  012D9A  A4D8               	btfss	status,2,c
  1810  012D9C  D007               	goto	l1242
  1811                           
  1812                           ;main.c: 175:   do { LATDbits.LATD0 = 1; } while(0);
  1813  012D9E  80BD               	bsf	189,0,c	;volatile
  1814                           
  1815                           ;main.c: 176:   V.mode_pwm = 70;
  1816  012DA0  0E00               	movlw	0
  1817  012DA2  0102               	movlb	2	; () banked
  1818  012DA4  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1819  012DA6  0E46               	movlw	70
  1820  012DA8  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1821                           
  1822                           ;main.c: 177:  } else {
  1823  012DAA  D004               	goto	l9968
  1824  012DAC                     l1242:
  1825  012DAC  90BD               	bcf	189,0,c	;volatile
  1826                           
  1827                           ;main.c: 179:   V.mode_pwm = 0;
  1828  012DAE  0102               	movlb	2	; () banked
  1829  012DB0  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1830  012DB2  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1831  012DB4                     l9968:
  1832                           
  1833                           ; BSR set to: 2
  1834                           ;main.c: 181:  mode_lamp_dim(V.mode_pwm);
  1835  012DB4  0060  FA7F  FFE6   	movff	_V+159,postinc1
  1836  012DBA  0060  FA83  FFE6   	movff	_V+160,postinc1
  1837  012DC0  EC01  F0C2         	call	_mode_lamp_dim	;wreg free
  1838  012DC4  D0CB               	goto	l10010
  1839  012DC6                     l9970:
  1840                           
  1841                           ; BSR set to: 2
  1842                           ;main.c: 192:    init_display();
  1843  012DC6  EC22  F0B5         	call	_init_display	;wreg free
  1844                           
  1845                           ; BSR set to: 61
  1846                           ;main.c: 193:    eaDogM_WriteCommand(0b00001100);
  1847  012DCA  0E0C               	movlw	12
  1848  012DCC  6EE6               	movwf	postinc1,c
  1849  012DCE  EC55  F0C2         	call	_eaDogM_WriteCommand	;wreg free
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;main.c: 195:    V.ui_state = mode;
  1853                           ;stkvar	_mode @ sp[(-1)+0]
  1854  012DD2  0EFF               	movlw	-1
  1855  012DD4  006F FF8C  F200    	movff	plusw1,_V	;volatile
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;main.c: 196:    srand(1957);
  1859  012DDA  0EA5               	movlw	165
  1860  012DDC  6EE6               	movwf	postinc1,c
  1861  012DDE  0E07               	movlw	7
  1862  012DE0  6EE6               	movwf	postinc1,c
  1863  012DE2  ECE6  F0BE         	call	_srand	;wreg free
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 197:    set_vterm(0);
  1867  012DE6  0E00               	movlw	0
  1868  012DE8  6EE6               	movwf	postinc1,c
  1869  012DEA  ECCC  F0C1         	call	_set_vterm	;wreg free
  1870                           
  1871                           ; BSR set to: 4
  1872                           ;main.c: 198:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1873  012DEE  0E76               	movlw	low STR_1
  1874  012DF0  6EE6               	movwf	postinc1,c
  1875  012DF2  0EFF               	movlw	high STR_1
  1876  012DF4  6EE6               	movwf	postinc1,c
  1877  012DF6  0E00               	movlw	0
  1878  012DF8  6EE6               	movwf	postinc1,c
  1879  012DFA  0E00               	movlw	0
  1880  012DFC  6EE6               	movwf	postinc1,c
  1881  012DFE  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  1882  012E02  0060  F0D7  FFE6   	movff	btemp,postinc1
  1883  012E08  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1884  012E0E  0E04               	movlw	4
  1885  012E10  6EE6               	movwf	postinc1,c
  1886  012E12  EC9D  F0B4         	call	_sprintf	;wreg free
  1887                           
  1888                           ;main.c: 199:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.9");
  1889  012E16  0EF2               	movlw	low STR_3
  1890  012E18  6EE6               	movwf	postinc1,c
  1891  012E1A  0EFF               	movlw	high STR_3
  1892  012E1C  6EE6               	movwf	postinc1,c
  1893  012E1E  0EA7               	movlw	low STR_2
  1894  012E20  6EE6               	movwf	postinc1,c
  1895  012E22  0EFF               	movlw	high STR_2
  1896  012E24  6EE6               	movwf	postinc1,c
  1897  012E26  0E00               	movlw	0
  1898  012E28  6EE6               	movwf	postinc1,c
  1899  012E2A  0E01               	movlw	1
  1900  012E2C  6EE6               	movwf	postinc1,c
  1901  012E2E  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  1902  012E32  0060  F0D7  FFE6   	movff	btemp,postinc1
  1903  012E38  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1904  012E3E  0E06               	movlw	6
  1905  012E40  6EE6               	movwf	postinc1,c
  1906  012E42  EC9D  F0B4         	call	_sprintf	;wreg free
  1907                           
  1908                           ;main.c: 200:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1909  012E46  0E65               	movlw	low STR_4
  1910  012E48  6EE6               	movwf	postinc1,c
  1911  012E4A  0EFF               	movlw	high STR_4
  1912  012E4C  6EE6               	movwf	postinc1,c
  1913  012E4E  0E00               	movlw	0
  1914  012E50  6EE6               	movwf	postinc1,c
  1915  012E52  0E02               	movlw	2
  1916  012E54  6EE6               	movwf	postinc1,c
  1917  012E56  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  1918  012E5A  0060  F0D7  FFE6   	movff	btemp,postinc1
  1919  012E60  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1920  012E66  0E04               	movlw	4
  1921  012E68  6EE6               	movwf	postinc1,c
  1922  012E6A  EC9D  F0B4         	call	_sprintf	;wreg free
  1923                           
  1924                           ;main.c: 201:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1925  012E6E  0E87               	movlw	low STR_5
  1926  012E70  6EE6               	movwf	postinc1,c
  1927  012E72  0EFF               	movlw	high STR_5
  1928  012E74  6EE6               	movwf	postinc1,c
  1929  012E76  0E02               	movlw	2
  1930  012E78  6EE6               	movwf	postinc1,c
  1931  012E7A  0E00               	movlw	0
  1932  012E7C  6EE6               	movwf	postinc1,c
  1933  012E7E  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  1934  012E82  0060  F0D7  FFE6   	movff	btemp,postinc1
  1935  012E88  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1936  012E8E  0E04               	movlw	4
  1937  012E90  6EE6               	movwf	postinc1,c
  1938  012E92  EC9D  F0B4         	call	_sprintf	;wreg free
  1939                           
  1940                           ;main.c: 202:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.9");
  1941  012E96  0EF2               	movlw	low STR_3
  1942  012E98  6EE6               	movwf	postinc1,c
  1943  012E9A  0EFF               	movlw	high STR_3
  1944  012E9C  6EE6               	movwf	postinc1,c
  1945  012E9E  0EA7               	movlw	low STR_2
  1946  012EA0  6EE6               	movwf	postinc1,c
  1947  012EA2  0EFF               	movlw	high STR_2
  1948  012EA4  6EE6               	movwf	postinc1,c
  1949  012EA6  0E02               	movlw	2
  1950  012EA8  6EE6               	movwf	postinc1,c
  1951  012EAA  0E01               	movlw	1
  1952  012EAC  6EE6               	movwf	postinc1,c
  1953  012EAE  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  1954  012EB2  0060  F0D7  FFE6   	movff	btemp,postinc1
  1955  012EB8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1956  012EBE  0E06               	movlw	6
  1957  012EC0  6EE6               	movwf	postinc1,c
  1958  012EC2  EC9D  F0B4         	call	_sprintf	;wreg free
  1959                           
  1960                           ;main.c: 203:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1961  012EC6  0E54               	movlw	low STR_8
  1962  012EC8  6EE6               	movwf	postinc1,c
  1963  012ECA  0EFF               	movlw	high STR_8
  1964  012ECC  6EE6               	movwf	postinc1,c
  1965  012ECE  0E02               	movlw	2
  1966  012ED0  6EE6               	movwf	postinc1,c
  1967  012ED2  0E02               	movlw	2
  1968  012ED4  6EE6               	movwf	postinc1,c
  1969  012ED6  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  1970  012EDA  0060  F0D7  FFE6   	movff	btemp,postinc1
  1971  012EE0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1972  012EE6  0E04               	movlw	4
  1973  012EE8  6EE6               	movwf	postinc1,c
  1974  012EEA  EC9D  F0B4         	call	_sprintf	;wreg free
  1975                           
  1976                           ;main.c: 204:    update_lcd(0);
  1977  012EEE  0E00               	movlw	0
  1978  012EF0  6EE6               	movwf	postinc1,c
  1979  012EF2  EC16  F0B4         	call	_update_lcd	;wreg free
  1980                           
  1981                           ;main.c: 205:    WaitMs(3000);
  1982  012EF6  0EB8               	movlw	184
  1983  012EF8  6EE6               	movwf	postinc1,c
  1984  012EFA  0E0B               	movlw	11
  1985  012EFC  6EE6               	movwf	postinc1,c
  1986  012EFE  ECB0  F0BE         	call	_WaitMs	;wreg free
  1987                           
  1988                           ;main.c: 206:    StartTimer(TMR_DISPLAY, 250);
  1989  012F02  0EFA               	movlw	250
  1990  012F04  6EE6               	movwf	postinc1,c
  1991  012F06  0E00               	movlw	0
  1992  012F08  6EE6               	movwf	postinc1,c
  1993  012F0A  0E0A               	movlw	10
  1994  012F0C  6EE6               	movwf	postinc1,c
  1995  012F0E  EC59  F0BE         	call	_StartTimer	;wreg free
  1996                           
  1997                           ;main.c: 207:    StartTimer(TMR_ADC, 500);
  1998  012F12  0EF4               	movlw	244
  1999  012F14  6EE6               	movwf	postinc1,c
  2000  012F16  0E01               	movlw	1
  2001  012F18  6EE6               	movwf	postinc1,c
  2002  012F1A  0E01               	movlw	1
  2003  012F1C  6EE6               	movwf	postinc1,c
  2004  012F1E  EC59  F0BE         	call	_StartTimer	;wreg free
  2005                           
  2006                           ;main.c: 208:    StartTimer(TMR_INFO, 3000);
  2007  012F22  0EB8               	movlw	184
  2008  012F24  6EE6               	movwf	postinc1,c
  2009  012F26  0E0B               	movlw	11
  2010  012F28  6EE6               	movwf	postinc1,c
  2011  012F2A  0E07               	movlw	7
  2012  012F2C  6EE6               	movwf	postinc1,c
  2013  012F2E  EC59  F0BE         	call	_StartTimer	;wreg free
  2014                           
  2015                           ;main.c: 209:    StartTimer(TMR_FLIPPER, 1500);
  2016  012F32  0EDC               	movlw	220
  2017  012F34  6EE6               	movwf	postinc1,c
  2018  012F36  0E05               	movlw	5
  2019  012F38  6EE6               	movwf	postinc1,c
  2020  012F3A  0E0B               	movlw	11
  2021  012F3C  6EE6               	movwf	postinc1,c
  2022  012F3E  EC59  F0BE         	call	_StartTimer	;wreg free
  2023                           
  2024                           ;main.c: 210:    StartTimer(TMR_HELPDIS, 3000);
  2025  012F42  0EB8               	movlw	184
  2026  012F44  6EE6               	movwf	postinc1,c
  2027  012F46  0E0B               	movlw	11
  2028  012F48  6EE6               	movwf	postinc1,c
  2029  012F4A  0E09               	movlw	9
  2030  012F4C  6EE6               	movwf	postinc1,c
  2031  012F4E  EC59  F0BE         	call	_StartTimer	;wreg free
  2032                           
  2033                           ;main.c: 212:    start_adc_scan();
  2034  012F52  EC33  F0BB         	call	_start_adc_scan	;wreg free
  2035                           
  2036                           ;main.c: 214:    break;
  2037  012F56  D016               	goto	l10012
  2038  012F58                     l1251:
  2039                           
  2040                           ; BSR set to: 2
  2041                           ;main.c: 221:    V.ui_state = UI_STATE_INIT;
  2042  012F58  6B00               	clrf	_V& (0+255),b	;volatile
  2043                           
  2044                           ;main.c: 222:    break;
  2045  012F5A  D014               	goto	l10012
  2046  012F5C                     l10010:
  2047  012F5C  0102               	movlb	2	; () banked
  2048  012F5E  5100               	movf	_V& (0+255),w,b	;volatile
  2049  012F60  6E3F               	movwf	(btemp+10)^0,c
  2050  012F62  6A40               	clrf	(btemp+11)^0,c
  2051                           
  2052                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2053                           ; Switch size 1, requested type "simple"
  2054                           ; Number of cases is 1, Range of values is 0 to 0
  2055                           ; switch strategies available:
  2056                           ; Name         Instructions Cycles
  2057                           ; simple_byte            4     3 (average)
  2058                           ;	Chosen strategy is simple_byte
  2059  012F64  5040               	movf	(btemp+11)^0,w,c
  2060  012F66  0A00               	xorlw	0	; case 0
  2061  012F68  A4D8               	btfss	status,2,c
  2062  012F6A  D7F6               	goto	l1251
  2063                           
  2064                           ; BSR set to: 2
  2065                           ; Switch size 1, requested type "simple"
  2066                           ; Number of cases is 4, Range of values is 0 to 4
  2067                           ; switch strategies available:
  2068                           ; Name         Instructions Cycles
  2069                           ; simple_byte           13     7 (average)
  2070                           ;	Chosen strategy is simple_byte
  2071  012F6C  503F               	movf	(btemp+10)^0,w,c
  2072  012F6E  0A00               	xorlw	0	; case 0
  2073  012F70  B4D8               	btfsc	status,2,c
  2074  012F72  D729               	goto	l9970
  2075  012F74  0A01               	xorlw	1	; case 1
  2076  012F76  B4D8               	btfsc	status,2,c
  2077  012F78  D005               	goto	l10012
  2078  012F7A  0A02               	xorlw	2	; case 3
  2079  012F7C  B4D8               	btfsc	status,2,c
  2080  012F7E  D002               	goto	l10012
  2081  012F80  0A07               	xorlw	7	; case 4
  2082  012F82  D7EA               	goto	l1251
  2083  012F84                     l10012:
  2084                           
  2085                           ;main.c: 225:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2086  012F84  0E01               	movlw	1
  2087  012F86  6EE6               	movwf	postinc1,c
  2088  012F88  EC0D  F0C1         	call	_TimerDone	;wreg free
  2089  012F8C  5035               	movf	btemp^0,w,c
  2090  012F8E  B4D8               	btfsc	status,2,c
  2091  012F90  D179               	goto	l10024
  2092  012F92  EC99  F0C2         	call	_check_adc_scan	;wreg free
  2093  012F96  5035               	movf	btemp^0,w,c
  2094  012F98  B4D8               	btfsc	status,2,c
  2095  012F9A  D174               	goto	l10024
  2096                           
  2097                           ;main.c: 229:    C.calc[C_BATT] = lp_filter(conv_raw_result(C_BATT, CONV), C_BATT, 0);
  2098  012F9C  0E00               	movlw	0
  2099  012F9E  6EE6               	movwf	postinc1,c
  2100  012FA0  0E00               	movlw	0
  2101  012FA2  6EE6               	movwf	postinc1,c
  2102  012FA4  0E00               	movlw	0
  2103  012FA6  6EE6               	movwf	postinc1,c
  2104  012FA8  0E00               	movlw	0
  2105  012FAA  6EE6               	movwf	postinc1,c
  2106  012FAC  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2107  012FB0  0060  F0D7  FFE6   	movff	btemp,postinc1
  2108  012FB6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2109  012FBC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2110  012FC2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2111  012FC8  ECBD  F0A9         	call	_lp_filter	;wreg free
  2112  012FCC  0060  F0D4  F100   	movff	btemp,_C
  2113  012FD2  0060  F0D8  F101   	movff	btemp+1,_C+1
  2114  012FD8  0060  F0DC  F102   	movff	btemp+2,_C+2
  2115  012FDE  0060  F0E0  F103   	movff	btemp+3,_C+3
  2116                           
  2117                           ;main.c: 230:    C.calc[C_PV] = lp_filter(conv_raw_result(C_PV, CONV), C_PV, 0);
  2118  012FE4  0E00               	movlw	0
  2119  012FE6  6EE6               	movwf	postinc1,c
  2120  012FE8  0E01               	movlw	1
  2121  012FEA  6EE6               	movwf	postinc1,c
  2122  012FEC  0E00               	movlw	0
  2123  012FEE  6EE6               	movwf	postinc1,c
  2124  012FF0  0E01               	movlw	1
  2125  012FF2  6EE6               	movwf	postinc1,c
  2126  012FF4  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2127  012FF8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2128  012FFE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2129  013004  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2130  01300A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2131  013010  ECBD  F0A9         	call	_lp_filter	;wreg free
  2132  013014  0060  F0D4  F104   	movff	btemp,_C+4
  2133  01301A  0060  F0D8  F105   	movff	btemp+1,_C+5
  2134  013020  0060  F0DC  F106   	movff	btemp+2,_C+6
  2135  013026  0060  F0E0  F107   	movff	btemp+3,_C+7
  2136                           
  2137                           ;main.c: 231:    C.calc[V_CC] = lp_filter(conv_raw_result(V_CC, CONV), V_CC, 0);
  2138  01302C  0E00               	movlw	0
  2139  01302E  6EE6               	movwf	postinc1,c
  2140  013030  0E02               	movlw	2
  2141  013032  6EE6               	movwf	postinc1,c
  2142  013034  0E00               	movlw	0
  2143  013036  6EE6               	movwf	postinc1,c
  2144  013038  0E02               	movlw	2
  2145  01303A  6EE6               	movwf	postinc1,c
  2146  01303C  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2147  013040  0060  F0D7  FFE6   	movff	btemp,postinc1
  2148  013046  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2149  01304C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2150  013052  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2151  013058  ECBD  F0A9         	call	_lp_filter	;wreg free
  2152  01305C  0060  F0D4  F108   	movff	btemp,_C+8
  2153  013062  0060  F0D8  F109   	movff	btemp+1,_C+9
  2154  013068  0060  F0DC  F10A   	movff	btemp+2,_C+10
  2155  01306E  0060  F0E0  F10B   	movff	btemp+3,_C+11
  2156                           
  2157                           ;main.c: 232:    C.calc[V_BAT] = lp_filter(conv_raw_result(V_BAT, CONV), V_BAT, 0);
  2158  013074  0E00               	movlw	0
  2159  013076  6EE6               	movwf	postinc1,c
  2160  013078  0E04               	movlw	4
  2161  01307A  6EE6               	movwf	postinc1,c
  2162  01307C  0E00               	movlw	0
  2163  01307E  6EE6               	movwf	postinc1,c
  2164  013080  0E04               	movlw	4
  2165  013082  6EE6               	movwf	postinc1,c
  2166  013084  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2167  013088  0060  F0D7  FFE6   	movff	btemp,postinc1
  2168  01308E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2169  013094  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2170  01309A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2171  0130A0  ECBD  F0A9         	call	_lp_filter	;wreg free
  2172  0130A4  0060  F0D4  F110   	movff	btemp,_C+16
  2173  0130AA  0060  F0D8  F111   	movff	btemp+1,_C+17
  2174  0130B0  0060  F0DC  F112   	movff	btemp+2,_C+18
  2175  0130B6  0060  F0E0  F113   	movff	btemp+3,_C+19
  2176                           
  2177                           ;main.c: 233:    C.calc[V_PV] = lp_filter(conv_raw_result(V_PV, CONV), V_PV, 0);
  2178  0130BC  0E00               	movlw	0
  2179  0130BE  6EE6               	movwf	postinc1,c
  2180  0130C0  0E05               	movlw	5
  2181  0130C2  6EE6               	movwf	postinc1,c
  2182  0130C4  0E00               	movlw	0
  2183  0130C6  6EE6               	movwf	postinc1,c
  2184  0130C8  0E05               	movlw	5
  2185  0130CA  6EE6               	movwf	postinc1,c
  2186  0130CC  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2187  0130D0  0060  F0D7  FFE6   	movff	btemp,postinc1
  2188  0130D6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2189  0130DC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2190  0130E2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2191  0130E8  ECBD  F0A9         	call	_lp_filter	;wreg free
  2192  0130EC  0060  F0D4  F114   	movff	btemp,_C+20
  2193  0130F2  0060  F0D8  F115   	movff	btemp+1,_C+21
  2194  0130F8  0060  F0DC  F116   	movff	btemp+2,_C+22
  2195  0130FE  0060  F0E0  F117   	movff	btemp+3,_C+23
  2196                           
  2197                           ;main.c: 234:    C.calc[V_CBUS] = lp_filter(conv_raw_result(V_CBUS, CONV), V_CBUS, 0);
  2198  013104  0E00               	movlw	0
  2199  013106  6EE6               	movwf	postinc1,c
  2200  013108  0E06               	movlw	6
  2201  01310A  6EE6               	movwf	postinc1,c
  2202  01310C  0E00               	movlw	0
  2203  01310E  6EE6               	movwf	postinc1,c
  2204  013110  0E06               	movlw	6
  2205  013112  6EE6               	movwf	postinc1,c
  2206  013114  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2207  013118  0060  F0D7  FFE6   	movff	btemp,postinc1
  2208  01311E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2209  013124  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2210  01312A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2211  013130  ECBD  F0A9         	call	_lp_filter	;wreg free
  2212  013134  0060  F0D4  F118   	movff	btemp,_C+24
  2213  01313A  0060  F0D8  F119   	movff	btemp+1,_C+25
  2214  013140  0060  F0DC  F11A   	movff	btemp+2,_C+26
  2215  013146  0060  F0E0  F11B   	movff	btemp+3,_C+27
  2216                           
  2217                           ;main.c: 235:    C.calc[V_BBAT] = lp_filter(conv_raw_result(V_BBAT, CONV), V_BBAT, 0);
  2218  01314C  0E00               	movlw	0
  2219  01314E  6EE6               	movwf	postinc1,c
  2220  013150  0E0A               	movlw	10
  2221  013152  6EE6               	movwf	postinc1,c
  2222  013154  0E00               	movlw	0
  2223  013156  6EE6               	movwf	postinc1,c
  2224  013158  0E0A               	movlw	10
  2225  01315A  6EE6               	movwf	postinc1,c
  2226  01315C  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2227  013160  0060  F0D7  FFE6   	movff	btemp,postinc1
  2228  013166  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2229  01316C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2230  013172  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2231  013178  ECBD  F0A9         	call	_lp_filter	;wreg free
  2232  01317C  0060  F0D4  F128   	movff	btemp,_C+40
  2233  013182  0060  F0D8  F129   	movff	btemp+1,_C+41
  2234  013188  0060  F0DC  F12A   	movff	btemp+2,_C+42
  2235  01318E  0060  F0E0  F12B   	movff	btemp+3,_C+43
  2236                           
  2237                           ;main.c: 236:    C.calc[V_TEMP] = lp_filter(conv_raw_result(V_TEMP, CONV), V_TEMP, 0);
  2238  013194  0E00               	movlw	0
  2239  013196  6EE6               	movwf	postinc1,c
  2240  013198  0E0B               	movlw	11
  2241  01319A  6EE6               	movwf	postinc1,c
  2242  01319C  0E00               	movlw	0
  2243  01319E  6EE6               	movwf	postinc1,c
  2244  0131A0  0E0B               	movlw	11
  2245  0131A2  6EE6               	movwf	postinc1,c
  2246  0131A4  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2247  0131A8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2248  0131AE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2249  0131B4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2250  0131BA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2251  0131C0  ECBD  F0A9         	call	_lp_filter	;wreg free
  2252  0131C4  0060  F0D4  F12C   	movff	btemp,_C+44
  2253  0131CA  0060  F0D8  F12D   	movff	btemp+1,_C+45
  2254  0131D0  0060  F0DC  F12E   	movff	btemp+2,_C+46
  2255  0131D6  0060  F0E0  F12F   	movff	btemp+3,_C+47
  2256                           
  2257                           ;main.c: 237:    C.calc[V_INVERTER] = lp_filter(conv_raw_result(V_INVERTER, CONV), V_INV
      +                          ERTER, 0);
  2258  0131DC  0E00               	movlw	0
  2259  0131DE  6EE6               	movwf	postinc1,c
  2260  0131E0  0E0C               	movlw	12
  2261  0131E2  6EE6               	movwf	postinc1,c
  2262  0131E4  0E00               	movlw	0
  2263  0131E6  6EE6               	movwf	postinc1,c
  2264  0131E8  0E0C               	movlw	12
  2265  0131EA  6EE6               	movwf	postinc1,c
  2266  0131EC  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2267  0131F0  0060  F0D7  FFE6   	movff	btemp,postinc1
  2268  0131F6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2269  0131FC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2270  013202  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2271  013208  ECBD  F0A9         	call	_lp_filter	;wreg free
  2272  01320C  0060  F0D4  F130   	movff	btemp,_C+48
  2273  013212  0060  F0D8  F131   	movff	btemp+1,_C+49
  2274  013218  0060  F0DC  F132   	movff	btemp+2,_C+50
  2275  01321E  0060  F0E0  F133   	movff	btemp+3,_C+51
  2276                           
  2277                           ;main.c: 238:    C.calc[channel_ANB5] = lp_filter(conv_raw_result(channel_ANB5, CONV), c
      +                          hannel_ANB5, 0);
  2278  013224  0E00               	movlw	0
  2279  013226  6EE6               	movwf	postinc1,c
  2280  013228  0E0D               	movlw	13
  2281  01322A  6EE6               	movwf	postinc1,c
  2282  01322C  0E00               	movlw	0
  2283  01322E  6EE6               	movwf	postinc1,c
  2284  013230  0E0D               	movlw	13
  2285  013232  6EE6               	movwf	postinc1,c
  2286  013234  ECD4  F09E         	call	_conv_raw_result	;wreg free
  2287  013238  0060  F0D7  FFE6   	movff	btemp,postinc1
  2288  01323E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2289  013244  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2290  01324A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2291  013250  ECBD  F0A9         	call	_lp_filter	;wreg free
  2292  013254  0060  F0D4  F134   	movff	btemp,_C+52
  2293  01325A  0060  F0D8  F135   	movff	btemp+1,_C+53
  2294  013260  0060  F0DC  F136   	movff	btemp+2,_C+54
  2295  013266  0060  F0E0  F137   	movff	btemp+3,_C+55
  2296                           
  2297                           ;main.c: 242:    clear_adc_scan();
  2298  01326C  ECA1  F0C2         	call	_clear_adc_scan	;wreg free
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;main.c: 243:    start_adc_scan();
  2302  013270  EC33  F0BB         	call	_start_adc_scan	;wreg free
  2303                           
  2304                           ;main.c: 244:    StartTimer(TMR_ADC, 500);
  2305  013274  0EF4               	movlw	244
  2306  013276  6EE6               	movwf	postinc1,c
  2307  013278  0E01               	movlw	1
  2308  01327A  6EE6               	movwf	postinc1,c
  2309  01327C  0E01               	movlw	1
  2310  01327E  6EE6               	movwf	postinc1,c
  2311  013280  EC59  F0BE         	call	_StartTimer	;wreg free
  2312  013284                     l10024:
  2313                           
  2314                           ;main.c: 251:   if (TimerDone(TMR_DISPLAY)) {
  2315                           
  2316                           ;main.c: 247:   if (V.ticks) {
  2317  013284  0E0A               	movlw	10
  2318  013286  6EE6               	movwf	postinc1,c
  2319  013288  EC0D  F0C1         	call	_TimerDone	;wreg free
  2320  01328C  5035               	movf	btemp^0,w,c
  2321  01328E  B4D8               	btfsc	status,2,c
  2322  013290  D06B               	goto	l10040
  2323                           
  2324                           ;main.c: 252:    if (TimerDone(TMR_HELPDIS)) {
  2325  013292  0E09               	movlw	9
  2326  013294  6EE6               	movwf	postinc1,c
  2327  013296  EC0D  F0C1         	call	_TimerDone	;wreg free
  2328  01329A  5035               	movf	btemp^0,w,c
  2329  01329C  B4D8               	btfsc	status,2,c
  2330  01329E  D004               	goto	l10032
  2331                           
  2332                           ;main.c: 253:     set_display_info(DIS_STR);
  2333  0132A0  0E00               	movlw	0
  2334  0132A2  6EE6               	movwf	postinc1,c
  2335  0132A4  EC82  F0C1         	call	_set_display_info	;wreg free
  2336  0132A8                     l10032:
  2337                           
  2338                           ;main.c: 255:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2339  0132A8  0060  F403  FFE6   	movff	_C,postinc1
  2340  0132AE  0060  F407  FFE6   	movff	_C+1,postinc1
  2341  0132B4  0060  F40B  FFE6   	movff	_C+2,postinc1
  2342  0132BA  0060  F40F  FFE6   	movff	_C+3,postinc1
  2343  0132C0  0E00               	movlw	0
  2344  0132C2  6EE6               	movwf	postinc1,c
  2345  0132C4  EC73  F0C1         	call	_get_raw_result	;wreg free
  2346  0132C8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2347  0132CE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2348  0132D4  0EB6               	movlw	low STR_9
  2349  0132D6  6EE6               	movwf	postinc1,c
  2350  0132D8  0EFF               	movlw	high STR_9
  2351  0132DA  6EE6               	movwf	postinc1,c
  2352  0132DC  0E00               	movlw	0
  2353  0132DE  6EE6               	movwf	postinc1,c
  2354  0132E0  0E01               	movlw	1
  2355  0132E2  6EE6               	movwf	postinc1,c
  2356  0132E4  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  2357  0132E8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2358  0132EE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2359  0132F4  0E0A               	movlw	10
  2360  0132F6  6EE6               	movwf	postinc1,c
  2361  0132F8  EC9D  F0B4         	call	_sprintf	;wreg free
  2362                           
  2363                           ;main.c: 256:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f   #", get_raw_result(V_CC), C.ca
      +                          lc[V_CC]);
  2364  0132FC  0060  F423  FFE6   	movff	_C+8,postinc1
  2365  013302  0060  F427  FFE6   	movff	_C+9,postinc1
  2366  013308  0060  F42B  FFE6   	movff	_C+10,postinc1
  2367  01330E  0060  F42F  FFE6   	movff	_C+11,postinc1
  2368  013314  0E02               	movlw	2
  2369  013316  6EE6               	movwf	postinc1,c
  2370  013318  EC73  F0C1         	call	_get_raw_result	;wreg free
  2371  01331C  0060  F0D7  FFE6   	movff	btemp,postinc1
  2372  013322  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2373  013328  0EB6               	movlw	low STR_9
  2374  01332A  6EE6               	movwf	postinc1,c
  2375  01332C  0EFF               	movlw	high STR_9
  2376  01332E  6EE6               	movwf	postinc1,c
  2377  013330  0E00               	movlw	0
  2378  013332  6EE6               	movwf	postinc1,c
  2379  013334  0E02               	movlw	2
  2380  013336  6EE6               	movwf	postinc1,c
  2381  013338  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  2382  01333C  0060  F0D7  FFE6   	movff	btemp,postinc1
  2383  013342  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2384  013348  0E0A               	movlw	10
  2385  01334A  6EE6               	movwf	postinc1,c
  2386  01334C  EC9D  F0B4         	call	_sprintf	;wreg free
  2387                           
  2388                           ;main.c: 257:    StartTimer(TMR_DISPLAY, 250);
  2389  013350  0EFA               	movlw	250
  2390  013352  6EE6               	movwf	postinc1,c
  2391  013354  0E00               	movlw	0
  2392  013356  6EE6               	movwf	postinc1,c
  2393  013358  0E0A               	movlw	10
  2394  01335A  6EE6               	movwf	postinc1,c
  2395  01335C  EC59  F0BE         	call	_StartTimer	;wreg free
  2396                           
  2397                           ;main.c: 258:    update_lcd(0);
  2398  013360  0E00               	movlw	0
  2399  013362  6EE6               	movwf	postinc1,c
  2400  013364  EC16  F0B4         	call	_update_lcd	;wreg free
  2401  013368                     l10040:
  2402                           
  2403                           ;main.c: 264:   check_help(V.flipper);
  2404  013368  0102               	movlb	2	; () banked
  2405  01336A  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  2406  01336C  6EE6               	movwf	postinc1,c
  2407  01336E  EC0C  F0AC         	call	_check_help	;wreg free
  2408                           
  2409                           ;main.c: 269:   if (V.set_sequ) {
  2410  013372  0102               	movlb	2	; () banked
  2411  013374  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  2412  013376  D5F2               	goto	l10010
  2413                           
  2414                           ; BSR set to: 2
  2415                           ;main.c: 270:    if (TimerDone(TMR_INFO)) {
  2416  013378  0E07               	movlw	7
  2417  01337A  6EE6               	movwf	postinc1,c
  2418  01337C  EC0D  F0C1         	call	_TimerDone	;wreg free
  2419  013380  5035               	movf	btemp^0,w,c
  2420  013382  B4D8               	btfsc	status,2,c
  2421  013384  D00B               	goto	l10052
  2422                           
  2423                           ;main.c: 271:     V.set_sequ = 0;
  2424  013386  0102               	movlb	2	; () banked
  2425  013388  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  2426                           
  2427                           ; BSR set to: 2
  2428                           ;main.c: 272:     set_vterm(0);
  2429  01338A  0E00               	movlw	0
  2430  01338C  6EE6               	movwf	postinc1,c
  2431  01338E  ECCC  F0C1         	call	_set_vterm	;wreg free
  2432                           
  2433                           ; BSR set to: 4
  2434                           ;main.c: 273:     update_lcd(0);
  2435  013392  0E00               	movlw	0
  2436  013394  6EE6               	movwf	postinc1,c
  2437  013396  EC16  F0B4         	call	_update_lcd	;wreg free
  2438                           
  2439                           ;main.c: 274:    } else {
  2440  01339A  D5E0               	goto	l10010
  2441  01339C                     l10052:
  2442                           
  2443                           ;main.c: 275:     set_vterm(2);
  2444  01339C  0E02               	movlw	2
  2445  01339E  6EE6               	movwf	postinc1,c
  2446  0133A0  ECCC  F0C1         	call	_set_vterm	;wreg free
  2447                           
  2448                           ; BSR set to: 4
  2449                           ;main.c: 276:     update_lcd(2);
  2450  0133A4  0E02               	movlw	2
  2451  0133A6  6EE6               	movwf	postinc1,c
  2452  0133A8  EC16  F0B4         	call	_update_lcd	;wreg free
  2453  0133AC  D5D7               	goto	l10010
  2454  0133AE                     __end_of_main:
  2455                           	opt callstack 0
  2456                           
  2457 ;; *************** function _start_adc_scan *****************
  2458 ;; Defined at:
  2459 ;;		line 33 in file "daq.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1  [STACK] _Bool 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/4
  2470 ;;		On exit  : 1/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    7
  2480 ;; This function calls:
  2481 ;;		_ADCC_SetADIInterruptHandler
  2482 ;;		_ADCC_SetADTIInterruptHandler
  2483 ;;		_ADCC_StartConversion
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text1
  2490  017666                     __ptext1:
  2491                           	opt callstack 0
  2492  017666                     _start_adc_scan:
  2493                           	opt callstack 23
  2494                           
  2495                           ;daq.c: 35:  if (R.done)
  2496                           
  2497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2498                           ;incstack = 0
  2499  017666  0100               	movlb	0	; () banked
  2500  017668  51CC               	movf	(_R+41)& (0+255),w,b	;volatile
  2501  01766A  A4D8               	btfss	status,2,c
  2502  01766C  0012               	return	
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;daq.c: 38:  R.scan_index = 0;
  2506  01766E  6BC9               	clrf	(_R+38)& (0+255),b	;volatile
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2510  017670  013A               	movlb	58	; () banked
  2511  017672  5140               	movf	64,w,b	;volatile
  2512  017674  006E F940  F035    	movff	14928,btemp	;volatile
  2513  01767A  6A36               	clrf	(btemp+1)^0,c
  2514  01767C  0060  F0D4  F036   	movff	btemp,btemp+1
  2515  017682  6A35               	clrf	btemp^0,c
  2516  017684  2635               	addwf	btemp^0,f,c
  2517  017686  0E00               	movlw	0
  2518  017688  2236               	addwfc	(btemp+1)^0,f,c
  2519  01768A  0E77               	movlw	119
  2520  01768C  1435               	andwf	btemp^0,w,c
  2521  01768E  0100               	movlb	0	; () banked
  2522  017690  6FCA               	movwf	(_R+39)& (0+255),b	;volatile
  2523  017692  0E3C               	movlw	60
  2524  017694  1436               	andwf	(btemp+1)^0,w,c
  2525  017696  6FCB               	movwf	(_R+40)& (0+255),b	;volatile
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2529  017698  0E22               	movlw	low _adc_int_handler
  2530  01769A  6EE6               	movwf	postinc1,c
  2531  01769C  0E83               	movlw	high _adc_int_handler
  2532  01769E  6EE6               	movwf	postinc1,c
  2533  0176A0  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2534  0176A2  6EE6               	movwf	postinc1,c
  2535  0176A4  ECAA  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2536                           
  2537                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2538  0176A8  0E7C               	movlw	low _adc_int_t_handler
  2539  0176AA  6EE6               	movwf	postinc1,c
  2540  0176AC  0E71               	movlw	high _adc_int_t_handler
  2541  0176AE  6EE6               	movwf	postinc1,c
  2542  0176B0  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2543  0176B2  6EE6               	movwf	postinc1,c
  2544  0176B4  EC96  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2545                           
  2546                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  2547  0176B8  0100               	movlb	0	; () banked
  2548  0176BA  51C9               	movf	(_R+38)& (0+255),w,b	;volatile
  2549  0176BC  0B0F               	andlw	15
  2550  0176BE  6EE6               	movwf	postinc1,c
  2551  0176C0  EC44  F0C2         	call	_ADCC_StartConversion	;wreg free
  2552                           
  2553                           ; BSR set to: 62
  2554  0176C4  82BE               	bsf	190,1,c	;volatile
  2555                           
  2556                           ; BSR set to: 62
  2557  0176C6  84BE               	bsf	190,2,c	;volatile
  2558                           
  2559                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2560  0176C8  0012               	return		;funcret
  2561  0176CA                     __end_of_start_adc_scan:
  2562                           	opt callstack 0
  2563                           
  2564 ;; *************** function _ADCC_StartConversion *****************
  2565 ;; Defined at:
  2566 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  channel         1  [STACK] enum E16136
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1  [STACK] void 
  2573 ;; Registers used:
  2574 ;;		fsr1l, fsr1h
  2575 ;; Tracked objects:
  2576 ;;		On entry : 3F/0
  2577 ;;		On exit  : 3F/3E
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2584 ;;Total ram usage:        0 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    6
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_start_adc_scan
  2591 ;;		_adc_int_t_handler
  2592 ;; This function uses a reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text2
  2596  018488                     __ptext2:
  2597                           	opt callstack 0
  2598  018488                     _ADCC_StartConversion:
  2599                           	opt callstack 6
  2600                           
  2601                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2602                           ;stkvar	_channel @ sp[(0)+-1]
  2603                           
  2604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2605                           ;incstack = 0
  2606  018488  0EFF               	movlw	-1
  2607  01848A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2608                           
  2609                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2610  018490  013E               	movlb	62	; () banked
  2611  018492  8FF8               	bsf	248,7,b	;volatile
  2612                           
  2613                           ; BSR set to: 62
  2614                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2615  018494  81F8               	bsf	248,0,b	;volatile
  2616                           
  2617                           ; BSR set to: 62
  2618                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2619  018496  52E5               	movf	postdec1,f,c
  2620  018498  0012               	return		;funcret
  2621  01849A                     __end_of_ADCC_StartConversion:
  2622                           	opt callstack 0
  2623                           
  2624 ;; *************** function _srand *****************
  2625 ;; Defined at:
  2626 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  s               2  [STACK] unsigned int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1  [STACK] void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2635 ;; Tracked objects:
  2636 ;;		On entry : 3F/0
  2637 ;;		On exit  : 3F/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    6
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text3
  2655  017DCC                     __ptext3:
  2656                           	opt callstack 0
  2657  017DCC                     _srand:
  2658                           	opt callstack 24
  2659                           
  2660                           ;stkvar	_s @ sp[(0)+-2]
  2661                           
  2662                           ; BSR set to: 62
  2663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2664                           ;incstack = 0
  2665  017DCC  0EFE               	movlw	-2
  2666  017DCE  50E3               	movf	plusw1,w,c
  2667  017DD0  0FFF               	addlw	255
  2668  017DD2  6E3F               	movwf	(btemp+10)^0,c
  2669  017DD4  0EFF               	movlw	-1
  2670  017DD6  006F FF8C  F040    	movff	plusw1,btemp+11
  2671  017DDC  0EFF               	movlw	255
  2672  017DDE  2240               	addwfc	(btemp+11)^0,f,c
  2673  017DE0  0060  F0FC  F09B   	movff	btemp+10,_seed
  2674  017DE6  0060  F100  F09C   	movff	btemp+11,_seed+1
  2675  017DEC  0100               	movlb	0	; () banked
  2676  017DEE  6B9D               	clrf	(_seed+2)& (0+255),b
  2677  017DF0  6B9E               	clrf	(_seed+3)& (0+255),b
  2678  017DF2  6B9F               	clrf	(_seed+4)& (0+255),b
  2679  017DF4  6BA0               	clrf	(_seed+5)& (0+255),b
  2680  017DF6  6BA1               	clrf	(_seed+6)& (0+255),b
  2681  017DF8  6BA2               	clrf	(_seed+7)& (0+255),b
  2682                           
  2683                           ; BSR set to: 0
  2684                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2685  017DFA  52E5               	movf	postdec1,f,c
  2686  017DFC  52E5               	movf	postdec1,f,c
  2687  017DFE  0012               	return		;funcret
  2688  017E00                     __end_of_srand:
  2689                           	opt callstack 0
  2690                           
  2691 ;; *************** function _lp_filter *****************
  2692 ;; Defined at:
  2693 ;;		line 3 in file "mbmc.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  new             4  [STACK] float 
  2696 ;;  bn              1  [STACK] unsigned char 
  2697 ;;  slow            1  [STACK] char 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  4  [STACK] float 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/4
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    8
  2716 ;; This function calls:
  2717 ;;		___fladd
  2718 ;;		___fldiv
  2719 ;;		___flmul
  2720 ;;		___flsub
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text4
  2727  01537A                     __ptext4:
  2728                           	opt callstack 0
  2729  01537A                     _lp_filter:
  2730                           	opt callstack 22
  2731                           
  2732                           ;mbmc.c: 3: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 4: {;mbmc.c: 5: 
      +                           static float smooth[0xF], lp_speed, lp_x;;mbmc.c: 7:  if (bn > 0xF)
  2733                           ;stkvar	_bn @ sp[(0)+-5]
  2734                           
  2735                           ; BSR set to: 0
  2736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2737                           ;incstack = 0
  2738  01537A  0EFB               	movlw	-5
  2739  01537C  006F FF8C  F035    	movff	plusw1,btemp
  2740  015382  0E0F               	movlw	15
  2741  015384  6435               	cpfsgt	btemp^0,c
  2742  015386  D011               	goto	l8606
  2743  015388                     u8100:
  2744                           
  2745                           ;mbmc.c: 8:   return new;
  2746                           ;stkvar	_new @ sp[(0)+-4]
  2747  015388  0EFC               	movlw	-4
  2748  01538A  006F FF8C  F035    	movff	plusw1,btemp
  2749  015390  0EFD               	movlw	-3
  2750  015392  006F FF8C  F036    	movff	plusw1,btemp+1
  2751  015398  0EFE               	movlw	-2
  2752  01539A  006F FF8C  F037    	movff	plusw1,btemp+2
  2753  0153A0  0EFF               	movlw	-1
  2754  0153A2  006F FF8C  F038    	movff	plusw1,btemp+3
  2755  0153A8  D112               	goto	l1687
  2756  0153AA                     l8606:
  2757                           
  2758                           ;mbmc.c: 9:  if (slow == (-1)) {
  2759                           ;stkvar	_slow @ sp[(0)+-6]
  2760  0153AA  0EFA               	movlw	-6
  2761  0153AC  28E3               	incf	plusw1,w,c
  2762  0153AE  A4D8               	btfss	status,2,c
  2763  0153B0  D012               	goto	l8614
  2764                           
  2765                           ;mbmc.c: 10:   smooth[bn] = 0.0;
  2766                           ;stkvar	_bn @ sp[(0)+-5]
  2767  0153B2  0EFB               	movlw	-5
  2768  0153B4  50E3               	movf	plusw1,w,c
  2769  0153B6  0D04               	mullw	4
  2770  0153B8  0E68               	movlw	low lp_filter@smooth
  2771  0153BA  24F3               	addwf	243,w,c
  2772  0153BC  6ED9               	movwf	fsr2l,c
  2773  0153BE  0E01               	movlw	high lp_filter@smooth
  2774  0153C0  20F4               	addwfc	prodh,w,c
  2775  0153C2  6EDA               	movwf	fsr2h,c
  2776  0153C4  0E00               	movlw	0
  2777  0153C6  6EDE               	movwf	postinc2,c
  2778  0153C8  0E00               	movlw	0
  2779  0153CA  6EDE               	movwf	postinc2,c
  2780  0153CC  0E00               	movlw	0
  2781  0153CE  6EDE               	movwf	postinc2,c
  2782  0153D0  0E00               	movlw	0
  2783  0153D2  6EDD               	movwf	postdec2,c
  2784  0153D4  D7D9               	goto	u8100
  2785  0153D6                     l8614:
  2786                           
  2787                           ;mbmc.c: 13:  if (slow) {
  2788                           ;stkvar	_slow @ sp[(0)+-6]
  2789  0153D6  0EFA               	movlw	-6
  2790  0153D8  50E3               	movf	plusw1,w,c
  2791  0153DA  B4D8               	btfsc	status,2,c
  2792  0153DC  D009               	goto	l8618
  2793                           
  2794                           ;mbmc.c: 14:   lp_speed = 0.066;
  2795  0153DE  0E02               	movlw	2
  2796  0153E0  0100               	movlb	0	; () banked
  2797  0153E2  6F90               	movwf	lp_filter@lp_speed& (0+255),b
  2798  0153E4  0E2B               	movlw	43
  2799  0153E6  6F91               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  2800  0153E8  0E87               	movlw	135
  2801  0153EA  6F92               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  2802  0153EC  0E3D               	movlw	61
  2803  0153EE  D008               	goto	L1
  2804  0153F0                     l8618:
  2805                           
  2806                           ;mbmc.c: 16:   lp_speed = 0.333;
  2807  0153F0  0EFA               	movlw	250
  2808  0153F2  0100               	movlb	0	; () banked
  2809  0153F4  6F90               	movwf	lp_filter@lp_speed& (0+255),b
  2810  0153F6  0E7E               	movlw	126
  2811  0153F8  6F91               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  2812  0153FA  0EAA               	movlw	170
  2813  0153FC  6F92               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  2814  0153FE  0E3E               	movlw	62
  2815  015400                     L1:
  2816  015400  6F93               	movwf	(lp_filter@lp_speed+3)& (0+255),b
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;mbmc.c: 18:  lp_x = ((smooth[bn]*1000.0) + (((new * 1000.0)-(smooth[bn]*1000.0)) * lp_s
      +                          peed)) / 1000.0;
  2820  015402  0E00               	movlw	0
  2821  015404  6EE6               	movwf	postinc1,c
  2822  015406  0E00               	movlw	0
  2823  015408  6EE6               	movwf	postinc1,c
  2824  01540A  0E7A               	movlw	122
  2825  01540C  6EE6               	movwf	postinc1,c
  2826  01540E  0E44               	movlw	68
  2827  015410  6EE6               	movwf	postinc1,c
  2828  015412  0060  F243  FFE6   	movff	lp_filter@lp_speed,postinc1
  2829  015418  0060  F247  FFE6   	movff	lp_filter@lp_speed+1,postinc1
  2830  01541E  0060  F24B  FFE6   	movff	lp_filter@lp_speed+2,postinc1
  2831  015424  0060  F24F  FFE6   	movff	lp_filter@lp_speed+3,postinc1
  2832  01542A  0E00               	movlw	0
  2833  01542C  6EE6               	movwf	postinc1,c
  2834  01542E  0E00               	movlw	0
  2835  015430  6EE6               	movwf	postinc1,c
  2836  015432  0E7A               	movlw	122
  2837  015434  6EE6               	movwf	postinc1,c
  2838  015436  0E44               	movlw	68
  2839  015438  6EE6               	movwf	postinc1,c
  2840                           
  2841                           ;stkvar	_bn @ sp[(-12)+-5]
  2842  01543A  0EEF               	movlw	-17
  2843  01543C  50E3               	movf	plusw1,w,c
  2844  01543E  0D04               	mullw	4
  2845  015440  0E68               	movlw	low lp_filter@smooth
  2846  015442  24F3               	addwf	243,w,c
  2847  015444  6ED9               	movwf	fsr2l,c
  2848  015446  0E01               	movlw	high lp_filter@smooth
  2849  015448  20F4               	addwfc	prodh,w,c
  2850  01544A  6EDA               	movwf	fsr2h,c
  2851  01544C  006F FF7B FFE6     	movff	postinc2,postinc1
  2852  015452  006F FF7B FFE6     	movff	postinc2,postinc1
  2853  015458  006F FF7B FFE6     	movff	postinc2,postinc1
  2854  01545E  006F FF7B FFE6     	movff	postinc2,postinc1
  2855  015464  ECC1  F08E         	call	___flmul	;wreg free
  2856  015468  0060  F0D7  FFE6   	movff	btemp,postinc1
  2857  01546E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2858  015474  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2859  01547A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2860  015480  0E00               	movlw	0
  2861  015482  6EE6               	movwf	postinc1,c
  2862  015484  0E00               	movlw	0
  2863  015486  6EE6               	movwf	postinc1,c
  2864  015488  0E7A               	movlw	122
  2865  01548A  6EE6               	movwf	postinc1,c
  2866  01548C  0E44               	movlw	68
  2867  01548E  6EE6               	movwf	postinc1,c
  2868                           
  2869                           ;stkvar	_new @ sp[(-16)+-4]
  2870  015490  0EEC               	movlw	-20
  2871  015492  006F FF8F FFE6     	movff	plusw1,postinc1
  2872  015498  006F FF8F FFE6     	movff	plusw1,postinc1
  2873  01549E  006F FF8F FFE6     	movff	plusw1,postinc1
  2874  0154A4  006F FF8F FFE6     	movff	plusw1,postinc1
  2875  0154AA  ECC1  F08E         	call	___flmul	;wreg free
  2876  0154AE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2877  0154B4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2878  0154BA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2879  0154C0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2880  0154C6  EC26  F0BD         	call	___flsub	;wreg free
  2881  0154CA  0060  F0D7  FFE6   	movff	btemp,postinc1
  2882  0154D0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2883  0154D6  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2884  0154DC  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2885  0154E2  ECC1  F08E         	call	___flmul	;wreg free
  2886  0154E6  0060  F0D7  FFE6   	movff	btemp,postinc1
  2887  0154EC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2888  0154F2  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2889  0154F8  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2890  0154FE  0E00               	movlw	0
  2891  015500  6EE6               	movwf	postinc1,c
  2892  015502  0E00               	movlw	0
  2893  015504  6EE6               	movwf	postinc1,c
  2894  015506  0E7A               	movlw	122
  2895  015508  6EE6               	movwf	postinc1,c
  2896  01550A  0E44               	movlw	68
  2897  01550C  6EE6               	movwf	postinc1,c
  2898                           
  2899                           ;stkvar	_bn @ sp[(-12)+-5]
  2900  01550E  0EEF               	movlw	-17
  2901  015510  50E3               	movf	plusw1,w,c
  2902  015512  0D04               	mullw	4
  2903  015514  0E68               	movlw	low lp_filter@smooth
  2904  015516  24F3               	addwf	243,w,c
  2905  015518  6ED9               	movwf	fsr2l,c
  2906  01551A  0E01               	movlw	high lp_filter@smooth
  2907  01551C  20F4               	addwfc	prodh,w,c
  2908  01551E  6EDA               	movwf	fsr2h,c
  2909  015520  006F FF7B FFE6     	movff	postinc2,postinc1
  2910  015526  006F FF7B FFE6     	movff	postinc2,postinc1
  2911  01552C  006F FF7B FFE6     	movff	postinc2,postinc1
  2912  015532  006F FF7B FFE6     	movff	postinc2,postinc1
  2913  015538  ECC1  F08E         	call	___flmul	;wreg free
  2914  01553C  0060  F0D7  FFE6   	movff	btemp,postinc1
  2915  015542  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2916  015548  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2917  01554E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2918  015554  ECD6  F092         	call	___fladd	;wreg free
  2919  015558  0060  F0D7  FFE6   	movff	btemp,postinc1
  2920  01555E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2921  015564  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2922  01556A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2923  015570  ECD7  F099         	call	___fldiv	;wreg free
  2924  015574  0060  F0D4  F08C   	movff	btemp,lp_filter@lp_x
  2925  01557A  0060  F0D8  F08D   	movff	btemp+1,lp_filter@lp_x+1
  2926  015580  0060  F0DC  F08E   	movff	btemp+2,lp_filter@lp_x+2
  2927  015586  0060  F0E0  F08F   	movff	btemp+3,lp_filter@lp_x+3
  2928                           
  2929                           ;mbmc.c: 19:  smooth[bn] = lp_x;
  2930                           ;stkvar	_bn @ sp[(0)+-5]
  2931  01558C  0EFB               	movlw	-5
  2932  01558E  50E3               	movf	plusw1,w,c
  2933  015590  0D04               	mullw	4
  2934  015592  0E68               	movlw	low lp_filter@smooth
  2935  015594  24F3               	addwf	243,w,c
  2936  015596  6ED9               	movwf	fsr2l,c
  2937  015598  0E01               	movlw	high lp_filter@smooth
  2938  01559A  20F4               	addwfc	prodh,w,c
  2939  01559C  6EDA               	movwf	fsr2h,c
  2940  01559E  0060  F233  FFDE   	movff	lp_filter@lp_x,postinc2
  2941  0155A4  0060  F237  FFDE   	movff	lp_filter@lp_x+1,postinc2
  2942  0155AA  0060  F23B  FFDE   	movff	lp_filter@lp_x+2,postinc2
  2943  0155B0  0060  F23F  FFDE   	movff	lp_filter@lp_x+3,postinc2
  2944                           
  2945                           ;mbmc.c: 20:  return lp_x;
  2946  0155B6  0060  F230  F035   	movff	lp_filter@lp_x,btemp
  2947  0155BC  0060  F234  F036   	movff	lp_filter@lp_x+1,btemp+1
  2948  0155C2  0060  F238  F037   	movff	lp_filter@lp_x+2,btemp+2
  2949  0155C8  0060  F23C  F038   	movff	lp_filter@lp_x+3,btemp+3
  2950  0155CE                     l1687:
  2951                           
  2952                           ; _lp_filter: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  2953  0155CE  0EFA               	movlw	250
  2954  0155D0  26E1               	addwf	fsr1l,f,c
  2955  0155D2  0EFF               	movlw	255
  2956  0155D4  22E2               	addwfc	fsr1h,f,c
  2957  0155D6  0012               	return		;funcret
  2958  0155D8                     __end_of_lp_filter:
  2959                           	opt callstack 0
  2960                           
  2961 ;; *************** function _init_display *****************
  2962 ;; Defined at:
  2963 ;;		line 37 in file "eadog.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1  [STACK] void 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/2
  2974 ;;		On exit  : 3F/3D
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    8
  2984 ;; This function calls:
  2985 ;;		_ringBufS_init
  2986 ;;		_send_lcd_cmd
  2987 ;;		_send_lcd_cmd_long
  2988 ;;		_wdtdelay
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text5
  2995  016A44                     __ptext5:
  2996                           	opt callstack 0
  2997  016A44                     _init_display:
  2998                           	opt callstack 22
  2999                           
  3000                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3001                           
  3002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3003                           ;incstack = 0
  3004  016A44  0E83               	movlw	low _ring_buf1
  3005  016A46  0100               	movlb	0	; () banked
  3006  016A48  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3007  016A4A  0E03               	movlw	high _ring_buf1
  3008  016A4C  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3009                           
  3010                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3011  016A4E  0E40               	movlw	low _ring_buf2
  3012  016A50  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3013  016A52  0E03               	movlw	high _ring_buf2
  3014  016A54  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3018  016A56  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  3019  016A5C  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  3020  016A62  ECE2  F0BF         	call	_ringBufS_init	;wreg free
  3021                           
  3022                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3023  016A66  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  3024  016A6C  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  3025  016A72  ECE2  F0BF         	call	_ringBufS_init	;wreg free
  3026                           
  3027                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3028  016A76  84BE               	bsf	190,2,c	;volatile
  3029  016A78  84BC               	bsf	188,2,c	;volatile
  3030                           
  3031                           ;eadog.c: 46:  wdtdelay(350000);
  3032  016A7A  0E30               	movlw	48
  3033  016A7C  6EE6               	movwf	postinc1,c
  3034  016A7E  0E57               	movlw	87
  3035  016A80  6EE6               	movwf	postinc1,c
  3036  016A82  0E05               	movlw	5
  3037  016A84  6EE6               	movwf	postinc1,c
  3038  016A86  0E00               	movlw	0
  3039  016A88  6EE6               	movwf	postinc1,c
  3040  016A8A  EC56  F0BC         	call	_wdtdelay	;wreg free
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3044  016A8E  0E39               	movlw	57
  3045  016A90  6EE6               	movwf	postinc1,c
  3046  016A92  ECCE  F0BF         	call	_send_lcd_cmd	;wreg free
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3050  016A96  0E1D               	movlw	29
  3051  016A98  6EE6               	movwf	postinc1,c
  3052  016A9A  ECCE  F0BF         	call	_send_lcd_cmd	;wreg free
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3056  016A9E  0E50               	movlw	80
  3057  016AA0  6EE6               	movwf	postinc1,c
  3058  016AA2  ECCE  F0BF         	call	_send_lcd_cmd	;wreg free
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3062  016AA6  0E6C               	movlw	108
  3063  016AA8  6EE6               	movwf	postinc1,c
  3064  016AAA  ECCE  F0BF         	call	_send_lcd_cmd	;wreg free
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3068  016AAE  0E76               	movlw	118
  3069  016AB0  6EE6               	movwf	postinc1,c
  3070  016AB2  ECCE  F0BF         	call	_send_lcd_cmd	;wreg free
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3074  016AB6  0E38               	movlw	56
  3075  016AB8  6EE6               	movwf	postinc1,c
  3076  016ABA  ECBA  F0BF         	call	_send_lcd_cmd_long	;wreg free
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3080  016ABE  0E0F               	movlw	15
  3081  016AC0  6EE6               	movwf	postinc1,c
  3082  016AC2  ECCE  F0BF         	call	_send_lcd_cmd	;wreg free
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3086  016AC6  0E01               	movlw	1
  3087  016AC8  6EE6               	movwf	postinc1,c
  3088  016ACA  ECBA  F0BF         	call	_send_lcd_cmd_long	;wreg free
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3092  016ACE  0E02               	movlw	2
  3093  016AD0  6EE6               	movwf	postinc1,c
  3094  016AD2  ECCE  F0BF         	call	_send_lcd_cmd	;wreg free
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3098  016AD6  0E06               	movlw	6
  3099  016AD8  6EE6               	movwf	postinc1,c
  3100  016ADA  ECCE  F0BF         	call	_send_lcd_cmd	;wreg free
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;eadog.c: 57:  wdtdelay(30);
  3104  016ADE  0E1E               	movlw	30
  3105  016AE0  6EE6               	movwf	postinc1,c
  3106  016AE2  0E00               	movlw	0
  3107  016AE4  6EE6               	movwf	postinc1,c
  3108  016AE6  0E00               	movlw	0
  3109  016AE8  6EE6               	movwf	postinc1,c
  3110  016AEA  0E00               	movlw	0
  3111  016AEC  6EE6               	movwf	postinc1,c
  3112  016AEE  EC56  F0BC         	call	_wdtdelay	;wreg free
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3116  016AF2  0E02               	movlw	2
  3117  016AF4  013D               	movlb	61	; () banked
  3118  016AF6  6F16               	movwf	22,b	;volatile
  3119                           
  3120                           ; BSR set to: 61
  3121                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3122  016AF8  0E40               	movlw	64
  3123  016AFA  6F15               	movwf	21,b	;volatile
  3124                           
  3125                           ; BSR set to: 61
  3126                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3127  016AFC  0E83               	movlw	131
  3128  016AFE  6F14               	movwf	20,b	;volatile
  3129                           
  3130                           ; BSR set to: 61
  3131                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3132  016B00  931A               	bcf	26,1,b	;volatile
  3133                           
  3134                           ; BSR set to: 61
  3135                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3136  016B02  0E3F               	movlw	-193
  3137  016B04  013B               	movlb	59	; () banked
  3138  016B06  17FD               	andwf	253,f,b	;volatile
  3139                           
  3140                           ; BSR set to: 59
  3141                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3142  016B08  9BFD               	bcf	253,5,b	;volatile
  3143                           
  3144                           ; BSR set to: 59
  3145                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3146  016B0A  51FD               	movf	253,w,b	;volatile
  3147  016B0C  0BF9               	andlw	-7
  3148  016B0E  0902               	iorlw	2
  3149  016B10  6FFD               	movwf	253,b	;volatile
  3150                           
  3151                           ; BSR set to: 59
  3152                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3153  016B12  0EE7               	movlw	-25
  3154  016B14  17FD               	andwf	253,f,b	;volatile
  3155                           
  3156                           ; BSR set to: 59
  3157                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3158  016B16  81FD               	bsf	253,0,b	;volatile
  3159                           
  3160                           ; BSR set to: 59
  3161                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3162  016B18  0E83               	movlw	low _ring_buf1
  3163  016B1A  6FF9               	movwf	249,b	;volatile
  3164  016B1C  0E03               	movlw	high _ring_buf1
  3165  016B1E  6FFA               	movwf	250,b	;volatile
  3166  016B20  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3167  016B22  6FFB               	movwf	251,b	;volatile
  3168                           
  3169                           ; BSR set to: 59
  3170                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3171  016B24  9BFC               	bcf	252,5,b	;volatile
  3172                           
  3173                           ; BSR set to: 59
  3174                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3175  016B26  013D               	movlb	61	; () banked
  3176  016B28  831A               	bsf	26,1,b	;volatile
  3177                           
  3178                           ; BSR set to: 61
  3179                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3180  016B2A  94BE               	bcf	190,2,c	;volatile
  3181                           
  3182                           ; BSR set to: 61
  3183                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3184  016B2C  0012               	return		;funcret
  3185  016B2E                     __end_of_init_display:
  3186                           	opt callstack 0
  3187                           
  3188 ;; *************** function _send_lcd_cmd_long *****************
  3189 ;; Defined at:
  3190 ;;		line 114 in file "eadog.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  cmd             1  [STACK] const unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1  [STACK] void 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3199 ;; Tracked objects:
  3200 ;;		On entry : 3F/0
  3201 ;;		On exit  : 3F/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    7
  3211 ;; This function calls:
  3212 ;;		_SPI1_Exchange8bit
  3213 ;;		_wdtdelay
  3214 ;; This function is called by:
  3215 ;;		_init_display
  3216 ;; This function uses a reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text6
  3220  017F74                     __ptext6:
  3221                           	opt callstack 0
  3222  017F74                     _send_lcd_cmd_long:
  3223                           	opt callstack 22
  3224                           
  3225                           ; BSR set to: 61
  3226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3227                           ;incstack = 0
  3228                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3229  017F74  92BC               	bcf	188,1,c	;volatile
  3230                           
  3231                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3232  017F76  94BC               	bcf	188,2,c	;volatile
  3233                           
  3234                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3235                           ;stkvar	_cmd @ sp[(0)+-1]
  3236  017F78  0EFF               	movlw	-1
  3237  017F7A  50E3               	movf	plusw1,w,c
  3238  017F7C  6EE6               	movwf	postinc1,c
  3239  017F7E  EC64  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3240                           
  3241                           ; BSR set to: 57
  3242                           ;eadog.c: 119:  wdtdelay(800);
  3243  017F82  0E20               	movlw	32
  3244  017F84  6EE6               	movwf	postinc1,c
  3245  017F86  0E03               	movlw	3
  3246  017F88  6EE6               	movwf	postinc1,c
  3247  017F8A  0E00               	movlw	0
  3248  017F8C  6EE6               	movwf	postinc1,c
  3249  017F8E  0E00               	movlw	0
  3250  017F90  6EE6               	movwf	postinc1,c
  3251  017F92  EC56  F0BC         	call	_wdtdelay	;wreg free
  3252                           
  3253                           ; BSR set to: 0
  3254  017F96  82BC               	bsf	188,1,c	;volatile
  3255                           
  3256                           ; BSR set to: 0
  3257                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3258  017F98  52E5               	movf	postdec1,f,c
  3259  017F9A  0012               	return		;funcret
  3260  017F9C                     __end_of_send_lcd_cmd_long:
  3261                           	opt callstack 0
  3262                           
  3263 ;; *************** function _send_lcd_cmd *****************
  3264 ;; Defined at:
  3265 ;;		line 102 in file "eadog.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  cmd             1  [STACK] const unsigned char 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1  [STACK] void 
  3272 ;; Registers used:
  3273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3274 ;; Tracked objects:
  3275 ;;		On entry : 3F/0
  3276 ;;		On exit  : 3F/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    7
  3286 ;; This function calls:
  3287 ;;		_SPI1_Exchange8bit
  3288 ;;		_wdtdelay
  3289 ;; This function is called by:
  3290 ;;		_init_display
  3291 ;; This function uses a reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text7
  3295  017F9C                     __ptext7:
  3296                           	opt callstack 0
  3297  017F9C                     _send_lcd_cmd:
  3298                           	opt callstack 22
  3299                           
  3300                           ; BSR set to: 0
  3301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3302                           ;incstack = 0
  3303                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3304  017F9C  92BC               	bcf	188,1,c	;volatile
  3305                           
  3306                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3307  017F9E  94BC               	bcf	188,2,c	;volatile
  3308                           
  3309                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3310                           ;stkvar	_cmd @ sp[(0)+-1]
  3311  017FA0  0EFF               	movlw	-1
  3312  017FA2  50E3               	movf	plusw1,w,c
  3313  017FA4  6EE6               	movwf	postinc1,c
  3314  017FA6  EC64  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3315                           
  3316                           ; BSR set to: 57
  3317                           ;eadog.c: 107:  wdtdelay(30);
  3318  017FAA  0E1E               	movlw	30
  3319  017FAC  6EE6               	movwf	postinc1,c
  3320  017FAE  0E00               	movlw	0
  3321  017FB0  6EE6               	movwf	postinc1,c
  3322  017FB2  0E00               	movlw	0
  3323  017FB4  6EE6               	movwf	postinc1,c
  3324  017FB6  0E00               	movlw	0
  3325  017FB8  6EE6               	movwf	postinc1,c
  3326  017FBA  EC56  F0BC         	call	_wdtdelay	;wreg free
  3327                           
  3328                           ; BSR set to: 0
  3329  017FBE  82BC               	bsf	188,1,c	;volatile
  3330                           
  3331                           ; BSR set to: 0
  3332                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3333  017FC0  52E5               	movf	postdec1,f,c
  3334  017FC2  0012               	return		;funcret
  3335  017FC4                     __end_of_send_lcd_cmd:
  3336                           	opt callstack 0
  3337                           
  3338 ;; *************** function _SPI1_Exchange8bit *****************
  3339 ;; Defined at:
  3340 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  data            1  [STACK] unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1  [STACK] unsigned char 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 3F/39
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3358 ;;Total ram usage:        0 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    6
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_send_lcd_cmd
  3365 ;;		_send_lcd_cmd_long
  3366 ;; This function uses a reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text8
  3370  0182C8                     __ptext8:
  3371                           	opt callstack 0
  3372  0182C8                     _SPI1_Exchange8bit:
  3373                           	opt callstack 22
  3374                           
  3375                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3376                           
  3377                           ; BSR set to: 0
  3378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3379                           ;incstack = 0
  3380  0182C8  0E01               	movlw	1
  3381  0182CA  013D               	movlb	61	; () banked
  3382  0182CC  6F12               	movwf	18,b	;volatile
  3383                           
  3384                           ; BSR set to: 61
  3385                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3386                           ;stkvar	_data @ sp[(0)+-1]
  3387  0182CE  0EFF               	movlw	-1
  3388  0182D0  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3389  0182D6                     l835:
  3390                           
  3391                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3392  0182D6  0139               	movlb	57	; () banked
  3393  0182D8  A9A2               	btfss	162,4,b	;volatile
  3394  0182DA  D7FD               	goto	l835
  3395                           
  3396                           ; BSR set to: 57
  3397                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3398  0182DC  006F F440  F035    	movff	15632,btemp	;volatile
  3399                           
  3400                           ; BSR set to: 57
  3401                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3402  0182E2  52E5               	movf	postdec1,f,c
  3403  0182E4  0012               	return		;funcret
  3404  0182E6                     __end_of_SPI1_Exchange8bit:
  3405                           	opt callstack 0
  3406                           
  3407 ;; *************** function _ringBufS_init *****************
  3408 ;; Defined at:
  3409 ;;		line 22 in file "ringbufs.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  _this           2  [STACK] PTR volatile struct ring
  3412 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1  [STACK] void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    7
  3431 ;; This function calls:
  3432 ;;		_memset
  3433 ;; This function is called by:
  3434 ;;		_init_display
  3435 ;; This function uses a reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text9
  3439  017FC4                     __ptext9:
  3440                           	opt callstack 0
  3441  017FC4                     _ringBufS_init:
  3442                           	opt callstack 22
  3443                           
  3444                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3445                           
  3446                           ; BSR set to: 57
  3447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3448                           ;incstack = 0
  3449  017FC4  0E43               	movlw	67
  3450  017FC6  6EE6               	movwf	postinc1,c
  3451  017FC8  0E00               	movlw	0
  3452  017FCA  6EE6               	movwf	postinc1,c
  3453  017FCC  0E00               	movlw	0
  3454  017FCE  6EE6               	movwf	postinc1,c
  3455  017FD0  0E00               	movlw	0
  3456  017FD2  6EE6               	movwf	postinc1,c
  3457                           
  3458                           ;stkvar	__this @ sp[(-4)+-2]
  3459  017FD4  0EFA               	movlw	-6
  3460  017FD6  006F FF8F FFE6     	movff	plusw1,postinc1
  3461  017FDC  006F FF8F FFE6     	movff	plusw1,postinc1
  3462  017FE2  EC6E  F0A4         	call	_memset	;wreg free
  3463                           
  3464                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3465  017FE6  52E5               	movf	postdec1,f,c
  3466  017FE8  52E5               	movf	postdec1,f,c
  3467  017FEA  0012               	return		;funcret
  3468  017FEC                     __end_of_ringBufS_init:
  3469                           	opt callstack 0
  3470                           
  3471 ;; *************** function _eaDogM_WriteCommand *****************
  3472 ;; Defined at:
  3473 ;;		line 160 in file "eadog.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  cmd             1  [STACK] const unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1  [STACK] void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3482 ;; Tracked objects:
  3483 ;;		On entry : 3F/3D
  3484 ;;		On exit  : 3F/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:   16
  3494 ;; This function calls:
  3495 ;;		_send_lcd_cmd_dma
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text10
  3502  0184AA                     __ptext10:
  3503                           	opt callstack 0
  3504  0184AA                     _eaDogM_WriteCommand:
  3505                           	opt callstack 14
  3506                           
  3507                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3508                           ;stkvar	_cmd @ sp[(0)+-1]
  3509                           
  3510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3511                           ;incstack = 0
  3512  0184AA  0EFF               	movlw	-1
  3513  0184AC  50E3               	movf	plusw1,w,c
  3514  0184AE  6EE6               	movwf	postinc1,c
  3515  0184B0  ECB0  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  3516                           
  3517                           ; BSR set to: 0
  3518                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3519  0184B4  52E5               	movf	postdec1,f,c
  3520  0184B6  0012               	return		;funcret
  3521  0184B8                     __end_of_eaDogM_WriteCommand:
  3522                           	opt callstack 0
  3523                           
  3524 ;; *************** function _conv_raw_result *****************
  3525 ;; Defined at:
  3526 ;;		line 75 in file "daq.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  chan            1  [STACK] enum E16136
  3529 ;;  to_what         1  [STACK] enum E16198
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  4  [STACK] float 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/4
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3545 ;;Total ram usage:        0 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    8
  3548 ;; This function calls:
  3549 ;;		___fldiv
  3550 ;;		___flmul
  3551 ;;		___flsub
  3552 ;;		___xxtofl
  3553 ;;		_get_raw_result
  3554 ;;		_nanf
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;; This function uses a reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text11
  3561  013DA8                     __ptext11:
  3562                           	opt callstack 0
  3563  013DA8                     _conv_raw_result:
  3564                           	opt callstack 22
  3565                           
  3566                           ;daq.c: 75: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 76: {;
      +                          daq.c: 77:  if (!(0b0011110001110111 >> chan & 0x1))
  3567                           ;stkvar	_chan @ sp[(0)+-1]
  3568                           
  3569                           ; BSR set to: 0
  3570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3571                           ;incstack = 0
  3572  013DA8  0EFF               	movlw	-1
  3573  013DAA  006F FF8C  F040    	movff	plusw1,btemp+11
  3574  013DB0  0E77               	movlw	119
  3575  013DB2  6E3D               	movwf	(btemp+8)^0,c
  3576  013DB4  0E3C               	movlw	60
  3577  013DB6  6E3E               	movwf	(btemp+9)^0,c
  3578  013DB8  2A40               	incf	(btemp+11)^0,f,c
  3579  013DBA  D003               	goto	u8024
  3580  013DBC                     u8025:
  3581  013DBC  343E               	rlcf	(btemp+9)^0,w,c
  3582  013DBE  323E               	rrcf	(btemp+9)^0,f,c
  3583  013DC0  323D               	rrcf	(btemp+8)^0,f,c
  3584  013DC2                     u8024:
  3585  013DC2  2E40               	decfsz	(btemp+11)^0,f,c
  3586  013DC4  D7FB               	goto	u8025
  3587  013DC6  B03D               	btfsc	(btemp+8)^0,0,c
  3588  013DC8  D1E3               	goto	l8590
  3589                           
  3590                           ;daq.c: 78:   return nanf("");
  3591  013DCA  0E2D               	movlw	low (STR_26+18)
  3592  013DCC  6EE6               	movwf	postinc1,c
  3593  013DCE  0EFF               	movlw	high (STR_26+18)
  3594  013DD0  6EE6               	movwf	postinc1,c
  3595  013DD2  EC97  F0BB         	call	_nanf	;wreg free
  3596  013DD6  D1EC               	goto	l1651
  3597  013DD8                     l8550:
  3598                           
  3599                           ;daq.c: 82:   if (0b0000000000000011 >> chan & 0x1) {
  3600                           ;stkvar	_chan @ sp[(0)+-1]
  3601  013DD8  0EFF               	movlw	-1
  3602  013DDA  006F FF8C  F040    	movff	plusw1,btemp+11
  3603  013DE0  0E03               	movlw	3
  3604  013DE2  6E3D               	movwf	(btemp+8)^0,c
  3605  013DE4  0E00               	movlw	0
  3606  013DE6  6E3E               	movwf	(btemp+9)^0,c
  3607  013DE8  2A40               	incf	(btemp+11)^0,f,c
  3608  013DEA  D003               	goto	u8044
  3609  013DEC                     u8045:
  3610  013DEC  343E               	rlcf	(btemp+9)^0,w,c
  3611  013DEE  323E               	rrcf	(btemp+9)^0,f,c
  3612  013DF0  323D               	rrcf	(btemp+8)^0,f,c
  3613  013DF2                     u8044:
  3614  013DF2  2E40               	decfsz	(btemp+11)^0,f,c
  3615  013DF4  D7FB               	goto	u8045
  3616  013DF6  A03D               	btfss	(btemp+8)^0,0,c
  3617  013DF8  D10D               	goto	l8564
  3618                           
  3619                           ;daq.c: 83:    if (0b0000000000000001 >> chan & 0x1) {
  3620                           ;stkvar	_chan @ sp[(0)+-1]
  3621  013DFA  0EFF               	movlw	-1
  3622  013DFC  006F FF8C  F040    	movff	plusw1,btemp+11
  3623  013E02  0E01               	movlw	1
  3624  013E04  6E3D               	movwf	(btemp+8)^0,c
  3625  013E06  0E00               	movlw	0
  3626  013E08  6E3E               	movwf	(btemp+9)^0,c
  3627  013E0A  2A40               	incf	(btemp+11)^0,f,c
  3628  013E0C  D003               	goto	u8064
  3629  013E0E                     u8065:
  3630  013E0E  343E               	rlcf	(btemp+9)^0,w,c
  3631  013E10  323E               	rrcf	(btemp+9)^0,f,c
  3632  013E12  323D               	rrcf	(btemp+8)^0,f,c
  3633  013E14                     u8064:
  3634  013E14  2E40               	decfsz	(btemp+11)^0,f,c
  3635  013E16  D7FB               	goto	u8065
  3636  013E18  A03D               	btfss	(btemp+8)^0,0,c
  3637  013E1A  D07E               	goto	l8560
  3638                           
  3639                           ;daq.c: 84:     return(((float) get_raw_result(chan) * 1.25) - R.c_offset[1]) * 30.00 / 
      +                          1000.0;
  3640  013E1C  0E00               	movlw	0
  3641  013E1E  6EE6               	movwf	postinc1,c
  3642  013E20  0E00               	movlw	0
  3643  013E22  6EE6               	movwf	postinc1,c
  3644  013E24  0E7A               	movlw	122
  3645  013E26  6EE6               	movwf	postinc1,c
  3646  013E28  0E44               	movlw	68
  3647  013E2A  6EE6               	movwf	postinc1,c
  3648  013E2C  0E00               	movlw	0
  3649  013E2E  6EE6               	movwf	postinc1,c
  3650  013E30  0E00               	movlw	0
  3651  013E32  6EE6               	movwf	postinc1,c
  3652  013E34  0EF0               	movlw	240
  3653  013E36  6EE6               	movwf	postinc1,c
  3654  013E38  0E41               	movlw	65
  3655  013E3A  6EE6               	movwf	postinc1,c
  3656  013E3C  0060  F317  FFE6   	movff	_R+34,postinc1
  3657  013E42  0060  F31B  FFE6   	movff	_R+35,postinc1
  3658  013E48  0060  F31F  FFE6   	movff	_R+36,postinc1
  3659  013E4E  0060  F323  FFE6   	movff	_R+37,postinc1
  3660  013E54  0E00               	movlw	0
  3661  013E56  6EE6               	movwf	postinc1,c
  3662  013E58  0E00               	movlw	0
  3663  013E5A  6EE6               	movwf	postinc1,c
  3664  013E5C  0EA0               	movlw	160
  3665  013E5E  6EE6               	movwf	postinc1,c
  3666  013E60  0E3F               	movlw	63
  3667  013E62  6EE6               	movwf	postinc1,c
  3668                           
  3669                           ;stkvar	_chan @ sp[(-16)+-1]
  3670  013E64  0EEF               	movlw	-17
  3671  013E66  50E3               	movf	plusw1,w,c
  3672  013E68  6EE6               	movwf	postinc1,c
  3673  013E6A  EC73  F0C1         	call	_get_raw_result	;wreg free
  3674  013E6E  0060  F0D4  F03F   	movff	btemp,btemp+10
  3675  013E74  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3676  013E7A  503F               	movf	(btemp+10)^0,w,c
  3677  013E7C  6E39               	movwf	(btemp+4)^0,c
  3678  013E7E  5040               	movf	(btemp+11)^0,w,c
  3679  013E80  6E3A               	movwf	(btemp+5)^0,c
  3680  013E82  6A3B               	clrf	(btemp+6)^0,c
  3681  013E84  6A3C               	clrf	(btemp+7)^0,c
  3682  013E86  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3683  013E8C  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3684  013E92  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3685  013E98  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3686  013E9E  0E00               	movlw	0
  3687  013EA0  6EE6               	movwf	postinc1,c
  3688  013EA2  EC15  F0AD         	call	___xxtofl	;wreg free
  3689  013EA6  0060  F0D7  FFE6   	movff	btemp,postinc1
  3690  013EAC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3691  013EB2  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3692  013EB8  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3693  013EBE  ECC1  F08E         	call	___flmul	;wreg free
  3694  013EC2  0060  F0D7  FFE6   	movff	btemp,postinc1
  3695  013EC8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3696  013ECE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3697  013ED4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3698  013EDA  EC26  F0BD         	call	___flsub	;wreg free
  3699  013EDE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3700  013EE4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3701  013EEA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3702  013EF0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3703  013EF6  ECC1  F08E         	call	___flmul	;wreg free
  3704  013EFA  0060  F0D7  FFE6   	movff	btemp,postinc1
  3705  013F00  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3706  013F06  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3707  013F0C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3708  013F12  ECD7  F099         	call	___fldiv	;wreg free
  3709  013F16  D14C               	goto	l1651
  3710  013F18                     l8560:
  3711                           
  3712                           ;daq.c: 86:     return(((float) get_raw_result(chan) * 1.25) - R.c_offset[0]) * 59.30 / 
      +                          1000.0;
  3713  013F18  0E00               	movlw	0
  3714  013F1A  6EE6               	movwf	postinc1,c
  3715  013F1C  0E00               	movlw	0
  3716  013F1E  6EE6               	movwf	postinc1,c
  3717  013F20  0E7A               	movlw	122
  3718  013F22  6EE6               	movwf	postinc1,c
  3719  013F24  0E44               	movlw	68
  3720  013F26  6EE6               	movwf	postinc1,c
  3721  013F28  0E33               	movlw	51
  3722  013F2A  6EE6               	movwf	postinc1,c
  3723  013F2C  0E33               	movlw	51
  3724  013F2E  6EE6               	movwf	postinc1,c
  3725  013F30  0E6D               	movlw	109
  3726  013F32  6EE6               	movwf	postinc1,c
  3727  013F34  0E42               	movlw	66
  3728  013F36  6EE6               	movwf	postinc1,c
  3729  013F38  0060  F307  FFE6   	movff	_R+30,postinc1
  3730  013F3E  0060  F30B  FFE6   	movff	_R+31,postinc1
  3731  013F44  0060  F30F  FFE6   	movff	_R+32,postinc1
  3732  013F4A  0060  F313  FFE6   	movff	_R+33,postinc1
  3733  013F50  0E00               	movlw	0
  3734  013F52  6EE6               	movwf	postinc1,c
  3735  013F54  0E00               	movlw	0
  3736  013F56  6EE6               	movwf	postinc1,c
  3737  013F58  0EA0               	movlw	160
  3738  013F5A  6EE6               	movwf	postinc1,c
  3739  013F5C  0E3F               	movlw	63
  3740  013F5E  6EE6               	movwf	postinc1,c
  3741                           
  3742                           ;stkvar	_chan @ sp[(-16)+-1]
  3743  013F60  0EEF               	movlw	-17
  3744  013F62  50E3               	movf	plusw1,w,c
  3745  013F64  6EE6               	movwf	postinc1,c
  3746  013F66  EC73  F0C1         	call	_get_raw_result	;wreg free
  3747  013F6A  0060  F0D4  F03F   	movff	btemp,btemp+10
  3748  013F70  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3749  013F76  503F               	movf	(btemp+10)^0,w,c
  3750  013F78  6E39               	movwf	(btemp+4)^0,c
  3751  013F7A  5040               	movf	(btemp+11)^0,w,c
  3752  013F7C  6E3A               	movwf	(btemp+5)^0,c
  3753  013F7E  6A3B               	clrf	(btemp+6)^0,c
  3754  013F80  6A3C               	clrf	(btemp+7)^0,c
  3755  013F82  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3756  013F88  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3757  013F8E  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3758  013F94  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3759  013F9A  0E00               	movlw	0
  3760  013F9C  6EE6               	movwf	postinc1,c
  3761  013F9E  EC15  F0AD         	call	___xxtofl	;wreg free
  3762  013FA2  0060  F0D7  FFE6   	movff	btemp,postinc1
  3763  013FA8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3764  013FAE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3765  013FB4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3766  013FBA  ECC1  F08E         	call	___flmul	;wreg free
  3767  013FBE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3768  013FC4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3769  013FCA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3770  013FD0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3771  013FD6  EC26  F0BD         	call	___flsub	;wreg free
  3772  013FDA  0060  F0D7  FFE6   	movff	btemp,postinc1
  3773  013FE0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3774  013FE6  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3775  013FEC  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3776  013FF2  ECC1  F08E         	call	___flmul	;wreg free
  3777  013FF6  0060  F0D7  FFE6   	movff	btemp,postinc1
  3778  013FFC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3779  014002  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3780  014008  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3781  01400E  ECD7  F099         	call	___fldiv	;wreg free
  3782  014012  D0CE               	goto	l1651
  3783  014014                     l8564:
  3784                           
  3785                           ;daq.c: 89:    if (0b0000100000000000 >> chan & 0x1) {
  3786                           ;stkvar	_chan @ sp[(0)+-1]
  3787  014014  0EFF               	movlw	-1
  3788  014016  006F FF8C  F040    	movff	plusw1,btemp+11
  3789  01401C  0E00               	movlw	0
  3790  01401E  6E3D               	movwf	(btemp+8)^0,c
  3791  014020  0E08               	movlw	8
  3792  014022  6E3E               	movwf	(btemp+9)^0,c
  3793  014024  2A40               	incf	(btemp+11)^0,f,c
  3794  014026  D003               	goto	u8084
  3795  014028                     u8085:
  3796  014028  343E               	rlcf	(btemp+9)^0,w,c
  3797  01402A  323E               	rrcf	(btemp+9)^0,f,c
  3798  01402C  323D               	rrcf	(btemp+8)^0,f,c
  3799  01402E                     u8084:
  3800  01402E  2E40               	decfsz	(btemp+11)^0,f,c
  3801  014030  D7FB               	goto	u8085
  3802  014032  A03D               	btfss	(btemp+8)^0,0,c
  3803  014034  D008               	goto	l8572
  3804                           
  3805                           ;daq.c: 90:     return 25.0;
  3806  014036  0E00               	movlw	0
  3807  014038  6E35               	movwf	btemp^0,c
  3808  01403A  0E00               	movlw	0
  3809  01403C  6E36               	movwf	(btemp+1)^0,c
  3810  01403E  0EC8               	movlw	200
  3811  014040  6E37               	movwf	(btemp+2)^0,c
  3812  014042  0E41               	movlw	65
  3813  014044  D0A3               	goto	L2
  3814  014046                     l8572:
  3815                           
  3816                           ;daq.c: 92:     return((float) get_raw_result(chan) * 8.250825) / 1000.0;
  3817  014046  0E00               	movlw	0
  3818  014048  6EE6               	movwf	postinc1,c
  3819  01404A  0E00               	movlw	0
  3820  01404C  6EE6               	movwf	postinc1,c
  3821  01404E  0E7A               	movlw	122
  3822  014050  6EE6               	movwf	postinc1,c
  3823  014052  0E44               	movlw	68
  3824  014054  6EE6               	movwf	postinc1,c
  3825  014056  0E61               	movlw	97
  3826  014058  6EE6               	movwf	postinc1,c
  3827  01405A  0E03               	movlw	3
  3828  01405C  6EE6               	movwf	postinc1,c
  3829  01405E  0E04               	movlw	4
  3830  014060  6EE6               	movwf	postinc1,c
  3831  014062  0E41               	movlw	65
  3832  014064  6EE6               	movwf	postinc1,c
  3833                           
  3834                           ;stkvar	_chan @ sp[(-8)+-1]
  3835  014066  0EF7               	movlw	-9
  3836  014068  50E3               	movf	plusw1,w,c
  3837  01406A  6EE6               	movwf	postinc1,c
  3838  01406C  EC73  F0C1         	call	_get_raw_result	;wreg free
  3839  014070  0060  F0D4  F03F   	movff	btemp,btemp+10
  3840  014076  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3841  01407C  503F               	movf	(btemp+10)^0,w,c
  3842  01407E  6E39               	movwf	(btemp+4)^0,c
  3843  014080  5040               	movf	(btemp+11)^0,w,c
  3844  014082  6E3A               	movwf	(btemp+5)^0,c
  3845  014084  6A3B               	clrf	(btemp+6)^0,c
  3846  014086  6A3C               	clrf	(btemp+7)^0,c
  3847  014088  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3848  01408E  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3849  014094  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3850  01409A  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3851  0140A0  0E00               	movlw	0
  3852  0140A2  6EE6               	movwf	postinc1,c
  3853  0140A4  EC15  F0AD         	call	___xxtofl	;wreg free
  3854  0140A8  0060  F0D7  FFE6   	movff	btemp,postinc1
  3855  0140AE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3856  0140B4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3857  0140BA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3858  0140C0  ECC1  F08E         	call	___flmul	;wreg free
  3859  0140C4  0060  F0D7  FFE6   	movff	btemp,postinc1
  3860  0140CA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3861  0140D0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3862  0140D6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3863  0140DC  ECD7  F099         	call	___fldiv	;wreg free
  3864  0140E0  D067               	goto	l1651
  3865  0140E2                     l8576:
  3866                           
  3867                           ;daq.c: 97:   return((float) get_raw_result(chan) * 1.25) / 1000.0;
  3868  0140E2  0E00               	movlw	0
  3869  0140E4  6EE6               	movwf	postinc1,c
  3870  0140E6  0E00               	movlw	0
  3871  0140E8  6EE6               	movwf	postinc1,c
  3872  0140EA  0E7A               	movlw	122
  3873  0140EC  6EE6               	movwf	postinc1,c
  3874  0140EE  0E44               	movlw	68
  3875  0140F0  6EE6               	movwf	postinc1,c
  3876  0140F2  0E00               	movlw	0
  3877  0140F4  6EE6               	movwf	postinc1,c
  3878  0140F6  0E00               	movlw	0
  3879  0140F8  6EE6               	movwf	postinc1,c
  3880  0140FA  0EA0               	movlw	160
  3881  0140FC  6EE6               	movwf	postinc1,c
  3882  0140FE  0E3F               	movlw	63
  3883  014100  6EE6               	movwf	postinc1,c
  3884                           
  3885                           ;stkvar	_chan @ sp[(-8)+-1]
  3886  014102  0EF7               	movlw	-9
  3887  014104  50E3               	movf	plusw1,w,c
  3888  014106  6EE6               	movwf	postinc1,c
  3889  014108  EC73  F0C1         	call	_get_raw_result	;wreg free
  3890  01410C  0060  F0D4  F03F   	movff	btemp,btemp+10
  3891  014112  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3892  014118  503F               	movf	(btemp+10)^0,w,c
  3893  01411A  6E39               	movwf	(btemp+4)^0,c
  3894  01411C  5040               	movf	(btemp+11)^0,w,c
  3895  01411E  6E3A               	movwf	(btemp+5)^0,c
  3896  014120  6A3B               	clrf	(btemp+6)^0,c
  3897  014122  6A3C               	clrf	(btemp+7)^0,c
  3898  014124  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3899  01412A  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3900  014130  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3901  014136  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3902  01413C  0E00               	movlw	0
  3903  01413E  6EE6               	movwf	postinc1,c
  3904  014140  EC15  F0AD         	call	___xxtofl	;wreg free
  3905  014144  0060  F0D7  FFE6   	movff	btemp,postinc1
  3906  01414A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3907  014150  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3908  014156  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3909  01415C  ECC1  F08E         	call	___flmul	;wreg free
  3910  014160  0060  F0D7  FFE6   	movff	btemp,postinc1
  3911  014166  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3912  01416C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3913  014172  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3914  014178  ECD7  F099         	call	___fldiv	;wreg free
  3915  01417C  D019               	goto	l1651
  3916  01417E                     l8582:
  3917                           
  3918                           ;daq.c: 100:   return 0.0;
  3919  01417E  0E00               	movlw	0
  3920  014180  6E35               	movwf	btemp^0,c
  3921  014182  0E00               	movlw	0
  3922  014184  6E36               	movwf	(btemp+1)^0,c
  3923  014186  0E00               	movlw	0
  3924  014188  6E37               	movwf	(btemp+2)^0,c
  3925  01418A  0E00               	movlw	0
  3926  01418C                     L2:
  3927  01418C  6E38               	movwf	(btemp+3)^0,c
  3928  01418E  D010               	goto	l1651
  3929  014190                     l8590:
  3930                           
  3931                           ;stkvar	_to_what @ sp[(0)+-2]
  3932  014190  0EFE               	movlw	-2
  3933  014192  50E3               	movf	plusw1,w,c
  3934  014194  6E3F               	movwf	(btemp+10)^0,c
  3935  014196  6A40               	clrf	(btemp+11)^0,c
  3936                           
  3937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3938                           ; Switch size 1, requested type "simple"
  3939                           ; Number of cases is 1, Range of values is 0 to 0
  3940                           ; switch strategies available:
  3941                           ; Name         Instructions Cycles
  3942                           ; simple_byte            4     3 (average)
  3943                           ;	Chosen strategy is simple_byte
  3944  014198  5040               	movf	(btemp+11)^0,w,c
  3945  01419A  0A00               	xorlw	0	; case 0
  3946  01419C  A4D8               	btfss	status,2,c
  3947  01419E  D7EF               	goto	l8582
  3948                           
  3949                           ; Switch size 1, requested type "simple"
  3950                           ; Number of cases is 2, Range of values is 0 to 1
  3951                           ; switch strategies available:
  3952                           ; Name         Instructions Cycles
  3953                           ; simple_byte            7     4 (average)
  3954                           ;	Chosen strategy is simple_byte
  3955  0141A0  503F               	movf	(btemp+10)^0,w,c
  3956  0141A2  0A00               	xorlw	0	; case 0
  3957  0141A4  B4D8               	btfsc	status,2,c
  3958  0141A6  D618               	goto	l8550
  3959  0141A8  0A01               	xorlw	1	; case 1
  3960  0141AA  B4D8               	btfsc	status,2,c
  3961  0141AC  D79A               	goto	l8576
  3962  0141AE  D7E7               	goto	l8582
  3963  0141B0                     l1651:
  3964                           
  3965                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3966  0141B0  52E5               	movf	postdec1,f,c
  3967  0141B2  52E5               	movf	postdec1,f,c
  3968  0141B4  0012               	return		;funcret
  3969  0141B6                     __end_of_conv_raw_result:
  3970                           	opt callstack 0
  3971                           
  3972 ;; *************** function _nanf *****************
  3973 ;; Defined at:
  3974 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  s               2  [STACK] PTR const unsigned char 
  3977 ;;		 -> STR_32(1), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  u               4  [STACK] struct .
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  4  [STACK] float 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/4
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    6
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_conv_raw_result
  4000 ;; This function uses a reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text12
  4004  01772E                     __ptext12:
  4005                           	opt callstack 0
  4006  01772E                     _nanf:
  4007                           	opt callstack 0
  4008                           
  4009                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4010  01772E  52E6               	movf	postinc1,f,c
  4011  017730  52E6               	movf	postinc1,f,c
  4012  017732  52E6               	movf	postinc1,f,c
  4013  017734  52E6               	movf	postinc1,f,c
  4014                           
  4015                           ;incstack = 0
  4016  017736  0EFF               	movlw	255
  4017  017738  6E3D               	movwf	(btemp+8)^0,c
  4018  01773A  0EFF               	movlw	255
  4019  01773C  6E3E               	movwf	(btemp+9)^0,c
  4020  01773E  0EFF               	movlw	255
  4021  017740  6E3F               	movwf	(btemp+10)^0,c
  4022  017742  0E7F               	movlw	127
  4023  017744  6E40               	movwf	(btemp+11)^0,c
  4024                           
  4025                           ;stkvar	_u @ sp[(-4)+0]
  4026  017746  0EFC               	movlw	-4
  4027  017748  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4028  01774E  0EFD               	movlw	-3
  4029  017750  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4030  017756  0EFE               	movlw	-2
  4031  017758  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4032  01775E  0EFF               	movlw	-1
  4033  017760  0060  F103  FFE3   	movff	btemp+11,plusw1
  4034                           
  4035                           ;stkvar	_u @ sp[(-4)+0]
  4036  017766  0EFC               	movlw	-4
  4037  017768  006F FF8C  F035    	movff	plusw1,btemp
  4038  01776E  0EFD               	movlw	-3
  4039  017770  006F FF8C  F036    	movff	plusw1,btemp+1
  4040  017776  0EFE               	movlw	-2
  4041  017778  006F FF8C  F037    	movff	plusw1,btemp+2
  4042  01777E  0EFF               	movlw	-1
  4043  017780  006F FF8C  F038    	movff	plusw1,btemp+3
  4044                           
  4045                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4046  017786  0EFA               	movlw	250
  4047  017788  26E1               	addwf	fsr1l,f,c
  4048  01778A  0EFF               	movlw	255
  4049  01778C  22E2               	addwfc	fsr1h,f,c
  4050  01778E  0012               	return		;funcret
  4051  017790                     __end_of_nanf:
  4052                           	opt callstack 0
  4053                           
  4054 ;; *************** function _get_raw_result *****************
  4055 ;; Defined at:
  4056 ;;		line 67 in file "daq.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  index           1  [STACK] enum E16136
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  2  [STACK] unsigned short 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/4
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4074 ;;Total ram usage:        0 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    6
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;;		_conv_raw_result
  4082 ;; This function uses a reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text13
  4086  0182E6                     __ptext13:
  4087                           	opt callstack 0
  4088  0182E6                     _get_raw_result:
  4089                           	opt callstack 24
  4090                           
  4091                           ;daq.c: 67: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 68: {;daq.c: 69:  r
      +                          eturn R.raw_adc[index];
  4092                           ;stkvar	_index @ sp[(0)+-1]
  4093                           
  4094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4095                           ;incstack = 0
  4096  0182E6  0EFF               	movlw	-1
  4097  0182E8  50E3               	movf	plusw1,w,c
  4098  0182EA  0D02               	mullw	2
  4099  0182EC  50F3               	movf	243,w,c
  4100  0182EE  0FA3               	addlw	low _R
  4101  0182F0  6ED9               	movwf	fsr2l,c
  4102  0182F2  6ADA               	clrf	fsr2h,c
  4103  0182F4  006F FF78  F035    	movff	postinc2,btemp
  4104  0182FA  006F FF74  F036    	movff	postdec2,btemp+1
  4105                           
  4106                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4107  018300  52E5               	movf	postdec1,f,c
  4108  018302  0012               	return		;funcret
  4109  018304                     __end_of_get_raw_result:
  4110                           	opt callstack 0
  4111                           
  4112 ;; *************** function ___xxtofl *****************
  4113 ;; Defined at:
  4114 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  sign            1  [STACK] unsigned char 
  4117 ;;  val             4  [STACK] long 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  arg             4  [STACK] unsigned long 
  4120 ;;  exp             1  [STACK] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  4  [STACK] unsigned char 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/4
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    6
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_conv_raw_result
  4141 ;; This function uses a reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text14
  4145  015A2A                     __ptext14:
  4146                           	opt callstack 0
  4147  015A2A                     ___xxtofl:
  4148                           	opt callstack 0
  4149                           
  4150                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4151  015A2A  0E05               	movlw	5
  4152  015A2C  26E1               	addwf	fsr1l,f,c
  4153  015A2E  0E00               	movlw	0
  4154  015A30  22E2               	addwfc	fsr1h,f,c
  4155                           
  4156                           ;stkvar	_sign @ sp[(-5)+-1]
  4157                           
  4158                           ;incstack = 0
  4159  015A32  0EFA               	movlw	-6
  4160  015A34  50E3               	movf	plusw1,w,c
  4161  015A36  B4D8               	btfsc	status,2,c
  4162  015A38  D01D               	goto	l8312
  4163                           
  4164                           ;stkvar	_val @ sp[(-5)+-5]
  4165  015A3A  0EF9               	movlw	-7
  4166  015A3C  AEE3               	btfss	plusw1,7,c
  4167  015A3E  D01A               	goto	l8312
  4168                           
  4169                           ;stkvar	_val @ sp[(-5)+-5]
  4170  015A40  0EF6               	movlw	-10
  4171  015A42  006F FF8C  F03D    	movff	plusw1,btemp+8
  4172  015A48  0EF7               	movlw	-9
  4173  015A4A  006F FF8C  F03E    	movff	plusw1,btemp+9
  4174  015A50  0EF8               	movlw	-8
  4175  015A52  006F FF8C  F03F    	movff	plusw1,btemp+10
  4176  015A58  0EF9               	movlw	-7
  4177  015A5A  006F FF8C  F040    	movff	plusw1,btemp+11
  4178  015A60  1E3D               	comf	(btemp+8)^0,f,c
  4179  015A62  1E3E               	comf	(btemp+9)^0,f,c
  4180  015A64  1E3F               	comf	(btemp+10)^0,f,c
  4181  015A66  1E40               	comf	(btemp+11)^0,f,c
  4182  015A68  2A3D               	incf	(btemp+8)^0,f,c
  4183  015A6A  0E00               	movlw	0
  4184  015A6C  223E               	addwfc	(btemp+9)^0,f,c
  4185  015A6E  223F               	addwfc	(btemp+10)^0,f,c
  4186  015A70  2240               	addwfc	(btemp+11)^0,f,c
  4187  015A72  D010               	goto	L3
  4188  015A74                     l8312:
  4189                           
  4190                           ;stkvar	_val @ sp[(-5)+-5]
  4191  015A74  0EF6               	movlw	-10
  4192  015A76  006F FF8C  F03D    	movff	plusw1,btemp+8
  4193  015A7C  0EF7               	movlw	-9
  4194  015A7E  006F FF8C  F03E    	movff	plusw1,btemp+9
  4195  015A84  0EF8               	movlw	-8
  4196  015A86  006F FF8C  F03F    	movff	plusw1,btemp+10
  4197  015A8C  0EF9               	movlw	-7
  4198  015A8E  006F FF8C  F040    	movff	plusw1,btemp+11
  4199  015A94                     L3:
  4200                           
  4201                           ;stkvar	_arg @ sp[(-5)+0]
  4202  015A94  0EFB               	movlw	-5
  4203  015A96  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4204  015A9C  0EFC               	movlw	-4
  4205  015A9E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4206  015AA4  0EFD               	movlw	-3
  4207  015AA6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4208  015AAC  0EFE               	movlw	-2
  4209  015AAE  0060  F103  FFE3   	movff	btemp+11,plusw1
  4210                           
  4211                           ;stkvar	_val @ sp[(-5)+-5]
  4212  015AB4  0EF6               	movlw	-10
  4213  015AB6  50E3               	movf	plusw1,w,c
  4214  015AB8  E113               	bnz	l8320
  4215  015ABA  0EF7               	movlw	-9
  4216  015ABC  50E3               	movf	plusw1,w,c
  4217  015ABE  E110               	bnz	l8320
  4218  015AC0  0EF8               	movlw	-8
  4219  015AC2  50E3               	movf	plusw1,w,c
  4220  015AC4  E10D               	bnz	l8320
  4221  015AC6  0EF9               	movlw	-7
  4222  015AC8  50E3               	movf	plusw1,w,c
  4223  015ACA  A4D8               	btfss	status,2,c
  4224  015ACC  D009               	goto	l8320
  4225  015ACE  0E00               	movlw	0
  4226  015AD0  6E35               	movwf	btemp^0,c
  4227  015AD2  0E00               	movlw	0
  4228  015AD4  6E36               	movwf	(btemp+1)^0,c
  4229  015AD6  0E00               	movlw	0
  4230  015AD8  6E37               	movwf	(btemp+2)^0,c
  4231  015ADA  0E00               	movlw	0
  4232  015ADC  6E38               	movwf	(btemp+3)^0,c
  4233  015ADE  D0A2               	goto	l2629
  4234  015AE0                     l8320:
  4235  015AE0  0E96               	movlw	150
  4236  015AE2  6E40               	movwf	(btemp+11)^0,c
  4237                           
  4238                           ;stkvar	_exp @ sp[(-5)+4]
  4239  015AE4  0EFF               	movlw	-1
  4240  015AE6  0060  F103  FFE3   	movff	btemp+11,plusw1
  4241  015AEC  D00B               	goto	l8324
  4242  015AEE                     l8322:
  4243                           
  4244                           ;stkvar	_exp @ sp[(-5)+4]
  4245  015AEE  0EFF               	movlw	-1
  4246  015AF0  2AE3               	incf	plusw1,f,c
  4247                           
  4248                           ;stkvar	_arg @ sp[(-5)+0]
  4249  015AF2  90D8               	bcf	status,0,c
  4250  015AF4  0EFE               	movlw	-2
  4251  015AF6  32E3               	rrcf	plusw1,f,c
  4252  015AF8  0EFD               	movlw	-3
  4253  015AFA  32E3               	rrcf	plusw1,f,c
  4254  015AFC  0EFC               	movlw	-4
  4255  015AFE  32E3               	rrcf	plusw1,f,c
  4256  015B00  0EFB               	movlw	-5
  4257  015B02  32E3               	rrcf	plusw1,f,c
  4258  015B04                     l8324:
  4259                           
  4260                           ;stkvar	_arg @ sp[(-5)+0]
  4261  015B04  50E1               	movf	fsr1l,w,c
  4262  015B06  0FFB               	addlw	-5
  4263  015B08  6ED9               	movwf	fsr2l,c
  4264  015B0A  50E2               	movf	fsr1h,w,c
  4265  015B0C  6EDA               	movwf	fsr2h,c
  4266  015B0E  0EFF               	movlw	255
  4267  015B10  22DA               	addwfc	fsr2h,f,c
  4268  015B12  52DE               	movf	postinc2,f,c
  4269  015B14  52DE               	movf	postinc2,f,c
  4270  015B16  52DE               	movf	postinc2,f,c
  4271  015B18  0EFE               	movlw	254
  4272  015B1A  14DD               	andwf	postdec2,w,c
  4273  015B1C  B4D8               	btfsc	status,2,c
  4274  015B1E  D018               	goto	l8332
  4275  015B20  D7E6               	goto	l8322
  4276  015B22                     l8326:
  4277                           
  4278                           ;stkvar	_exp @ sp[(-5)+4]
  4279  015B22  0EFF               	movlw	-1
  4280  015B24  2AE3               	incf	plusw1,f,c
  4281                           
  4282                           ;stkvar	_arg @ sp[(-5)+0]
  4283  015B26  50E1               	movf	fsr1l,w,c
  4284  015B28  0FFB               	addlw	-5
  4285  015B2A  6ED9               	movwf	fsr2l,c
  4286  015B2C  50E2               	movf	fsr1h,w,c
  4287  015B2E  6EDA               	movwf	fsr2h,c
  4288  015B30  0EFF               	movlw	255
  4289  015B32  22DA               	addwfc	fsr2h,f,c
  4290  015B34  2ADE               	incf	postinc2,f,c
  4291  015B36  0E00               	movlw	0
  4292  015B38  22DE               	addwfc	postinc2,f,c
  4293  015B3A  22DE               	addwfc	postinc2,f,c
  4294  015B3C  22DE               	addwfc	postinc2,f,c
  4295                           
  4296                           ;stkvar	_arg @ sp[(-5)+0]
  4297  015B3E  90D8               	bcf	status,0,c
  4298  015B40  0EFE               	movlw	-2
  4299  015B42  32E3               	rrcf	plusw1,f,c
  4300  015B44  0EFD               	movlw	-3
  4301  015B46  32E3               	rrcf	plusw1,f,c
  4302  015B48  0EFC               	movlw	-4
  4303  015B4A  32E3               	rrcf	plusw1,f,c
  4304  015B4C  0EFB               	movlw	-5
  4305  015B4E  32E3               	rrcf	plusw1,f,c
  4306  015B50                     l8332:
  4307                           
  4308                           ;stkvar	_arg @ sp[(-5)+0]
  4309  015B50  50E1               	movf	fsr1l,w,c
  4310  015B52  0FFB               	addlw	-5
  4311  015B54  6ED9               	movwf	fsr2l,c
  4312  015B56  50E2               	movf	fsr1h,w,c
  4313  015B58  6EDA               	movwf	fsr2h,c
  4314  015B5A  0EFF               	movlw	255
  4315  015B5C  22DA               	addwfc	fsr2h,f,c
  4316  015B5E  52DE               	movf	postinc2,f,c
  4317  015B60  52DE               	movf	postinc2,f,c
  4318  015B62  52DE               	movf	postinc2,f,c
  4319  015B64  0EFF               	movlw	255
  4320  015B66  14DD               	andwf	postdec2,w,c
  4321  015B68  B4D8               	btfsc	status,2,c
  4322  015B6A  D00C               	goto	l8336
  4323  015B6C  D7DA               	goto	l8326
  4324  015B6E                     l8334:
  4325                           
  4326                           ;stkvar	_exp @ sp[(-5)+4]
  4327  015B6E  0EFF               	movlw	-1
  4328  015B70  06E3               	decf	plusw1,f,c
  4329                           
  4330                           ;stkvar	_arg @ sp[(-5)+0]
  4331  015B72  90D8               	bcf	status,0,c
  4332  015B74  0EFB               	movlw	-5
  4333  015B76  36E3               	rlcf	plusw1,f,c
  4334  015B78  0EFC               	movlw	-4
  4335  015B7A  36E3               	rlcf	plusw1,f,c
  4336  015B7C  0EFD               	movlw	-3
  4337  015B7E  36E3               	rlcf	plusw1,f,c
  4338  015B80  0EFE               	movlw	-2
  4339  015B82  36E3               	rlcf	plusw1,f,c
  4340  015B84                     l8336:
  4341                           
  4342                           ;stkvar	_arg @ sp[(-5)+0]
  4343  015B84  0EFD               	movlw	-3
  4344  015B86  BEE3               	btfsc	plusw1,7,c
  4345  015B88  D007               	goto	u7860
  4346                           
  4347                           ;stkvar	_exp @ sp[(-5)+4]
  4348  015B8A  0EFF               	movlw	-1
  4349  015B8C  006F FF8C  F035    	movff	plusw1,btemp
  4350  015B92  0E02               	movlw	2
  4351  015B94  6035               	cpfslt	btemp^0,c
  4352  015B96  D7EB               	goto	l8334
  4353  015B98                     u7860:
  4354                           
  4355                           ;stkvar	_exp @ sp[(-5)+4]
  4356  015B98  0EFF               	movlw	-1
  4357  015B9A  B0E3               	btfsc	plusw1,0,c
  4358  015B9C  D002               	goto	l8344
  4359                           
  4360                           ;stkvar	_arg @ sp[(-5)+0]
  4361  015B9E  0EFD               	movlw	-3
  4362  015BA0  9EE3               	bcf	plusw1,7,c
  4363  015BA2                     l8344:
  4364                           
  4365                           ;stkvar	_exp @ sp[(-5)+4]
  4366  015BA2  50E1               	movf	fsr1l,w,c
  4367  015BA4  0FFF               	addlw	-1
  4368  015BA6  6ED9               	movwf	fsr2l,c
  4369  015BA8  50E2               	movf	fsr1h,w,c
  4370  015BAA  6EDA               	movwf	fsr2h,c
  4371  015BAC  0EFF               	movlw	255
  4372  015BAE  22DA               	addwfc	fsr2h,f,c
  4373  015BB0  90D8               	bcf	status,0,c
  4374  015BB2  32DF               	rrcf	indf2,f,c
  4375                           
  4376                           ;stkvar	_exp @ sp[(-5)+4]
  4377  015BB4  0EFF               	movlw	-1
  4378  015BB6  006F FF8C  F040    	movff	plusw1,btemp+11
  4379  015BBC  0060  F100  F039   	movff	btemp+11,btemp+4
  4380  015BC2  6A3A               	clrf	(btemp+5)^0,c
  4381  015BC4  6A3B               	clrf	(btemp+6)^0,c
  4382  015BC6  6A3C               	clrf	(btemp+7)^0,c
  4383  015BC8  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  4384  015BCE  6A3B               	clrf	(btemp+6)^0,c
  4385  015BD0  6A3A               	clrf	(btemp+5)^0,c
  4386  015BD2  6A39               	clrf	(btemp+4)^0,c
  4387                           
  4388                           ;stkvar	_arg @ sp[(-5)+0]
  4389  015BD4  50E1               	movf	fsr1l,w,c
  4390  015BD6  0FFB               	addlw	-5
  4391  015BD8  6ED9               	movwf	fsr2l,c
  4392  015BDA  50E2               	movf	fsr1h,w,c
  4393  015BDC  6EDA               	movwf	fsr2h,c
  4394  015BDE  0EFF               	movlw	255
  4395  015BE0  22DA               	addwfc	fsr2h,f,c
  4396  015BE2  5039               	movf	(btemp+4)^0,w,c
  4397  015BE4  12DE               	iorwf	postinc2,f,c
  4398  015BE6  503A               	movf	(btemp+5)^0,w,c
  4399  015BE8  12DE               	iorwf	postinc2,f,c
  4400  015BEA  503B               	movf	(btemp+6)^0,w,c
  4401  015BEC  12DE               	iorwf	postinc2,f,c
  4402  015BEE  503C               	movf	(btemp+7)^0,w,c
  4403  015BF0  12DE               	iorwf	postinc2,f,c
  4404                           
  4405                           ;stkvar	_sign @ sp[(-5)+-1]
  4406  015BF2  0EFA               	movlw	-6
  4407  015BF4  50E3               	movf	plusw1,w,c
  4408  015BF6  B4D8               	btfsc	status,2,c
  4409  015BF8  D005               	goto	l8354
  4410                           
  4411                           ;stkvar	_val @ sp[(-5)+-5]
  4412  015BFA  0EF9               	movlw	-7
  4413  015BFC  AEE3               	btfss	plusw1,7,c
  4414  015BFE  D002               	goto	l8354
  4415                           
  4416                           ;stkvar	_arg @ sp[(-5)+0]
  4417  015C00  0EFE               	movlw	-2
  4418  015C02  8EE3               	bsf	plusw1,7,c
  4419  015C04                     l8354:
  4420                           
  4421                           ;stkvar	_arg @ sp[(-5)+0]
  4422  015C04  0EFB               	movlw	-5
  4423  015C06  006F FF8C  F035    	movff	plusw1,btemp
  4424  015C0C  0EFC               	movlw	-4
  4425  015C0E  006F FF8C  F036    	movff	plusw1,btemp+1
  4426  015C14  0EFD               	movlw	-3
  4427  015C16  006F FF8C  F037    	movff	plusw1,btemp+2
  4428  015C1C  0EFE               	movlw	-2
  4429  015C1E  006F FF8C  F038    	movff	plusw1,btemp+3
  4430  015C24                     l2629:
  4431                           
  4432                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4433  015C24  0EF6               	movlw	246
  4434  015C26  26E1               	addwf	fsr1l,f,c
  4435  015C28  0EFF               	movlw	255
  4436  015C2A  22E2               	addwfc	fsr1h,f,c
  4437  015C2C  0012               	return		;funcret
  4438  015C2E                     __end_of___xxtofl:
  4439                           	opt callstack 0
  4440                           
  4441 ;; *************** function _clear_adc_scan *****************
  4442 ;; Defined at:
  4443 ;;		line 59 in file "daq.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1  [STACK] void 
  4450 ;; Registers used:
  4451 ;;		None
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/4
  4454 ;;		On exit  : 3F/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4461 ;;Total ram usage:        0 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    6
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_main
  4468 ;; This function uses a reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text15
  4472  018542                     __ptext15:
  4473                           	opt callstack 0
  4474  018542                     _clear_adc_scan:
  4475                           	opt callstack 24
  4476                           
  4477                           ;daq.c: 61:  R.done = 0;
  4478                           
  4479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4480                           ;incstack = 0
  4481  018542  0100               	movlb	0	; () banked
  4482  018544  6BCC               	clrf	(_R+41)& (0+255),b	;volatile
  4483                           
  4484                           ; BSR set to: 0
  4485                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4486  018546  0012               	return		;funcret
  4487  018548                     __end_of_clear_adc_scan:
  4488                           	opt callstack 0
  4489                           
  4490 ;; *************** function _check_help *****************
  4491 ;; Defined at:
  4492 ;;		line 40 in file "mconfig.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  flipper         1  [STACK] _Bool 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1  [STACK] void 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4501 ;; Tracked objects:
  4502 ;;		On entry : 3F/2
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:   18
  4513 ;; This function calls:
  4514 ;;		_StartTimer
  4515 ;;		_TimerDone
  4516 ;;		_display_help
  4517 ;;		_display_info
  4518 ;;		_get_vterm_ptr
  4519 ;;		_help_button
  4520 ;;		_mode_lamp_bright
  4521 ;;		_mode_lamp_dim
  4522 ;;		_set_display_info
  4523 ;;		_set_temp_display_help
  4524 ;;		_set_vterm
  4525 ;;		_sprintf
  4526 ;;		_update_lcd
  4527 ;;		_vterm_dump
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;; This function uses a reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text16
  4534  015818                     __ptext16:
  4535                           	opt callstack 0
  4536  015818                     _check_help:
  4537                           	opt callstack 12
  4538                           
  4539                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4540                           
  4541                           ; BSR set to: 0
  4542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4543                           ;incstack = 0
  4544  015818  EC77  F0BE         	call	_help_button	;wreg free
  4545  01581C  5035               	movf	btemp^0,w,c
  4546  01581E  B4D8               	btfsc	status,2,c
  4547  015820  D0D0               	goto	l9894
  4548  015822  EC91  F0C2         	call	_display_info	;wreg free
  4549  015826  0435               	decf	btemp^0,w,c
  4550  015828  B4D8               	btfsc	status,2,c
  4551  01582A  D0CB               	goto	l9894
  4552                           
  4553                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4554  01582C  0EDC               	movlw	220
  4555  01582E  6EE6               	movwf	postinc1,c
  4556  015830  0E05               	movlw	5
  4557  015832  6EE6               	movwf	postinc1,c
  4558  015834  0E0B               	movlw	11
  4559  015836  6EE6               	movwf	postinc1,c
  4560  015838  EC59  F0BE         	call	_StartTimer	;wreg free
  4561                           
  4562                           ;mconfig.c: 47:   if (V.debug)
  4563  01583C  0102               	movlb	2	; () banked
  4564  01583E  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  4565                           
  4566                           ; BSR set to: 2
  4567                           ;mconfig.c: 48:    vterm_dump();
  4568  015840  ECD7  F0B1         	call	_vterm_dump	;wreg free
  4569                           
  4570                           ;mconfig.c: 50:   set_vterm(1);
  4571  015844  0E01               	movlw	1
  4572  015846  6EE6               	movwf	postinc1,c
  4573  015848  ECCC  F0C1         	call	_set_vterm	;wreg free
  4574                           
  4575                           ; BSR set to: 4
  4576                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4577  01584C  EC91  F0C2         	call	_display_info	;wreg free
  4578  015850  5035               	movf	btemp^0,w,c
  4579  015852  6EE6               	movwf	postinc1,c
  4580  015854  EC4D  F0C2         	call	_set_temp_display_help	;wreg free
  4581                           
  4582                           ; BSR set to: 2
  4583                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4584  015858  0E01               	movlw	1
  4585  01585A  6EE6               	movwf	postinc1,c
  4586  01585C  EC82  F0C1         	call	_set_display_info	;wreg free
  4587                           
  4588                           ;mconfig.c: 53:   if (flipper) {
  4589                           ;stkvar	_flipper @ sp[(0)+-1]
  4590  015860  0EFF               	movlw	-1
  4591  015862  50E3               	movf	plusw1,w,c
  4592  015864  B4D8               	btfsc	status,2,c
  4593  015866  D019               	goto	l9882
  4594                           
  4595                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4596  015868  0EC3               	movlw	low STR_14
  4597  01586A  6EE6               	movwf	postinc1,c
  4598  01586C  0EFF               	movlw	high STR_14
  4599  01586E  6EE6               	movwf	postinc1,c
  4600  015870  0E2E               	movlw	low STR_16
  4601  015872  6EE6               	movwf	postinc1,c
  4602  015874  0EFF               	movlw	high STR_16
  4603  015876  6EE6               	movwf	postinc1,c
  4604  015878  0E01               	movlw	1
  4605  01587A  6EE6               	movwf	postinc1,c
  4606  01587C  0E00               	movlw	0
  4607  01587E  6EE6               	movwf	postinc1,c
  4608  015880  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4609  015884  0060  F0D7  FFE6   	movff	btemp,postinc1
  4610  01588A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4611  015890  0E06               	movlw	6
  4612  015892  6EE6               	movwf	postinc1,c
  4613  015894  EC9D  F0B4         	call	_sprintf	;wreg free
  4614                           
  4615                           ;mconfig.c: 55:   } else {
  4616  015898  D018               	goto	l1553
  4617  01589A                     l9882:
  4618                           
  4619                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4620  01589A  0ED9               	movlw	low STR_15
  4621  01589C  6EE6               	movwf	postinc1,c
  4622  01589E  0EFF               	movlw	high STR_15
  4623  0158A0  6EE6               	movwf	postinc1,c
  4624  0158A2  0E2E               	movlw	low STR_16
  4625  0158A4  6EE6               	movwf	postinc1,c
  4626  0158A6  0EFF               	movlw	high STR_16
  4627  0158A8  6EE6               	movwf	postinc1,c
  4628  0158AA  0E01               	movlw	1
  4629  0158AC  6EE6               	movwf	postinc1,c
  4630  0158AE  0E00               	movlw	0
  4631  0158B0  6EE6               	movwf	postinc1,c
  4632  0158B2  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4633  0158B6  0060  F0D7  FFE6   	movff	btemp,postinc1
  4634  0158BC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4635  0158C2  0E06               	movlw	6
  4636  0158C4  6EE6               	movwf	postinc1,c
  4637  0158C6  EC9D  F0B4         	call	_sprintf	;wreg free
  4638  0158CA                     l1553:
  4639                           
  4640                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4641  0158CA  0102               	movlb	2	; () banked
  4642  0158CC  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  4643  0158CE  32E8               	rrcf	wreg,f,c
  4644  0158D0  32E8               	rrcf	wreg,f,c
  4645  0158D2  0B03               	andlw	3
  4646  0158D4  0D24               	mullw	36
  4647  0158D6  0E12               	movlw	18
  4648  0158D8  26F3               	addwf	243,f,c
  4649  0158DA  0E00               	movlw	0
  4650  0158DC  22F4               	addwfc	244,f,c
  4651  0158DE  0E73               	movlw	low _T
  4652  0158E0  6E3F               	movwf	(btemp+10)^0,c
  4653  0158E2  0EFE               	movlw	high _T
  4654  0158E4  6E40               	movwf	(btemp+11)^0,c
  4655  0158E6  50F3               	movf	243,w,c
  4656  0158E8  263F               	addwf	(btemp+10)^0,f,c
  4657  0158EA  50F4               	movf	244,w,c
  4658  0158EC  2240               	addwfc	(btemp+11)^0,f,c
  4659  0158EE  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4660  0158F4  0060  F103  FFE6   	movff	btemp+11,postinc1
  4661  0158FA  0ECF               	movlw	low STR_18
  4662  0158FC  6EE6               	movwf	postinc1,c
  4663  0158FE  0EFF               	movlw	high STR_18
  4664  015900  6EE6               	movwf	postinc1,c
  4665  015902  0E01               	movlw	1
  4666  015904  6EE6               	movwf	postinc1,c
  4667  015906  0E01               	movlw	1
  4668  015908  6EE6               	movwf	postinc1,c
  4669  01590A  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4670  01590E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4671  015914  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4672  01591A  0E06               	movlw	6
  4673  01591C  6EE6               	movwf	postinc1,c
  4674  01591E  EC9D  F0B4         	call	_sprintf	;wreg free
  4675                           
  4676                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4677  015922  0102               	movlb	2	; () banked
  4678  015924  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  4679  015926  32E8               	rrcf	wreg,f,c
  4680  015928  32E8               	rrcf	wreg,f,c
  4681  01592A  0B03               	andlw	3
  4682  01592C  0D24               	mullw	36
  4683  01592E  0E73               	movlw	low _T
  4684  015930  6E3F               	movwf	(btemp+10)^0,c
  4685  015932  0EFE               	movlw	high _T
  4686  015934  6E40               	movwf	(btemp+11)^0,c
  4687  015936  50F3               	movf	243,w,c
  4688  015938  263F               	addwf	(btemp+10)^0,f,c
  4689  01593A  50F4               	movf	244,w,c
  4690  01593C  2240               	addwfc	(btemp+11)^0,f,c
  4691  01593E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4692  015944  0060  F103  FFE6   	movff	btemp+11,postinc1
  4693  01594A  0ECF               	movlw	low STR_18
  4694  01594C  6EE6               	movwf	postinc1,c
  4695  01594E  0EFF               	movlw	high STR_18
  4696  015950  6EE6               	movwf	postinc1,c
  4697  015952  0E01               	movlw	1
  4698  015954  6EE6               	movwf	postinc1,c
  4699  015956  0E02               	movlw	2
  4700  015958  6EE6               	movwf	postinc1,c
  4701  01595A  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4702  01595E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4703  015964  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4704  01596A  0E06               	movlw	6
  4705  01596C  6EE6               	movwf	postinc1,c
  4706  01596E  EC9D  F0B4         	call	_sprintf	;wreg free
  4707                           
  4708                           ;mconfig.c: 60:   V.help_id++;
  4709  015972  EE20  F2A9         	lfsr	2,_V+169	;volatile
  4710  015976  30DF               	rrcf	223,w,c
  4711  015978  6E40               	movwf	(btemp+11)^0,c
  4712  01597A  3240               	rrcf	(btemp+11)^0,f,c
  4713  01597C  3040               	rrcf	(btemp+11)^0,w,c
  4714  01597E  0B03               	andlw	3
  4715  015980  6E40               	movwf	(btemp+11)^0,c
  4716  015982  2A40               	incf	(btemp+11)^0,f,c
  4717  015984  3640               	rlcf	(btemp+11)^0,f,c
  4718  015986  3640               	rlcf	(btemp+11)^0,f,c
  4719  015988  3640               	rlcf	(btemp+11)^0,f,c
  4720  01598A  50DF               	movf	223,w,c
  4721  01598C  1840               	xorwf	(btemp+11)^0,w,c
  4722  01598E  0BE7               	andlw	-25
  4723  015990  1840               	xorwf	(btemp+11)^0,w,c
  4724  015992  6EDF               	movwf	223,c
  4725                           
  4726                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4727  015994  0EB8               	movlw	184
  4728  015996  6EE6               	movwf	postinc1,c
  4729  015998  0E0B               	movlw	11
  4730  01599A  6EE6               	movwf	postinc1,c
  4731  01599C  0E09               	movlw	9
  4732  01599E  6EE6               	movwf	postinc1,c
  4733  0159A0  EC59  F0BE         	call	_StartTimer	;wreg free
  4734                           
  4735                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4736  0159A4  0EB8               	movlw	184
  4737  0159A6  6EE6               	movwf	postinc1,c
  4738  0159A8  0E0B               	movlw	11
  4739  0159AA  6EE6               	movwf	postinc1,c
  4740  0159AC  0E07               	movlw	7
  4741  0159AE  6EE6               	movwf	postinc1,c
  4742  0159B0  EC59  F0BE         	call	_StartTimer	;wreg free
  4743                           
  4744                           ;mconfig.c: 63:   mode_lamp_bright();
  4745  0159B4  EC5C  F0C2         	call	_mode_lamp_bright	;wreg free
  4746                           
  4747                           ;mconfig.c: 64:   update_lcd(1);
  4748  0159B8  0E01               	movlw	1
  4749  0159BA  6EE6               	movwf	postinc1,c
  4750  0159BC  EC16  F0B4         	call	_update_lcd	;wreg free
  4751                           
  4752                           ;mconfig.c: 65:  } else {
  4753  0159C0  D032               	goto	l1557
  4754  0159C2                     l9894:
  4755                           
  4756                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4757  0159C2  0E09               	movlw	9
  4758  0159C4  6EE6               	movwf	postinc1,c
  4759  0159C6  EC0D  F0C1         	call	_TimerDone	;wreg free
  4760  0159CA  5035               	movf	btemp^0,w,c
  4761  0159CC  B4D8               	btfsc	status,2,c
  4762  0159CE  D02B               	goto	l1557
  4763                           
  4764                           ;mconfig.c: 67:    set_vterm(0);
  4765  0159D0  0E00               	movlw	0
  4766  0159D2  6EE6               	movwf	postinc1,c
  4767  0159D4  ECCC  F0C1         	call	_set_vterm	;wreg free
  4768                           
  4769                           ; BSR set to: 4
  4770                           ;mconfig.c: 68:    V.help = 0;
  4771  0159D8  0102               	movlb	2	; () banked
  4772  0159DA  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  4773                           
  4774                           ; BSR set to: 2
  4775                           ;mconfig.c: 69:    set_display_info(display_help());
  4776  0159DC  EC95  F0C2         	call	_display_help	;wreg free
  4777  0159E0  5035               	movf	btemp^0,w,c
  4778  0159E2  6EE6               	movwf	postinc1,c
  4779  0159E4  EC82  F0C1         	call	_set_display_info	;wreg free
  4780                           
  4781                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4782  0159E8  0060  FA7F  FFE6   	movff	_V+159,postinc1
  4783  0159EE  0060  FA83  FFE6   	movff	_V+160,postinc1
  4784  0159F4  EC01  F0C2         	call	_mode_lamp_dim	;wreg free
  4785                           
  4786                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4787  0159F8  0E0B               	movlw	11
  4788  0159FA  6EE6               	movwf	postinc1,c
  4789  0159FC  EC0D  F0C1         	call	_TimerDone	;wreg free
  4790  015A00  5035               	movf	btemp^0,w,c
  4791  015A02  B4D8               	btfsc	status,2,c
  4792  015A04  D010               	goto	l1557
  4793                           
  4794                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4795  015A06  0102               	movlb	2	; () banked
  4796  015A08  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  4797  015A0A  A4D8               	btfss	status,2,c
  4798  015A0C  D002               	goto	u9950
  4799  015A0E  0E01               	movlw	1
  4800  015A10  D001               	goto	u9960
  4801  015A12                     u9950:
  4802  015A12  0E00               	movlw	0
  4803  015A14                     u9960:
  4804  015A14  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  4805                           
  4806                           ; BSR set to: 2
  4807                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4808  015A16  0EDC               	movlw	220
  4809  015A18  6EE6               	movwf	postinc1,c
  4810  015A1A  0E05               	movlw	5
  4811  015A1C  6EE6               	movwf	postinc1,c
  4812  015A1E  0E0B               	movlw	11
  4813  015A20  6EE6               	movwf	postinc1,c
  4814  015A22  EC59  F0BE         	call	_StartTimer	;wreg free
  4815  015A26                     l1557:
  4816                           
  4817                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4818  015A26  52E5               	movf	postdec1,f,c
  4819  015A28  0012               	return		;funcret
  4820  015A2A                     __end_of_check_help:
  4821                           	opt callstack 0
  4822                           
  4823 ;; *************** function _vterm_dump *****************
  4824 ;; Defined at:
  4825 ;;		line 118 in file "mconfig.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;		None
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1  [STACK] void 
  4832 ;; Registers used:
  4833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4834 ;; Tracked objects:
  4835 ;;		On entry : 3F/2
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4843 ;;Total ram usage:        0 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:   17
  4846 ;; This function calls:
  4847 ;;		_WaitMs
  4848 ;;		_eaDogM_WriteStringAtPos
  4849 ;;		_get_vterm_ptr
  4850 ;;		_sprintf
  4851 ;;		_wait_lcd_done
  4852 ;; This function is called by:
  4853 ;;		_check_help
  4854 ;; This function uses a reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text17
  4858  0163AE                     __ptext17:
  4859                           	opt callstack 0
  4860  0163AE                     _vterm_dump:
  4861                           	opt callstack 12
  4862                           
  4863                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4864                           
  4865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4866                           ;incstack = 0
  4867  0163AE  0E01               	movlw	1
  4868  0163B0  6EE6               	movwf	postinc1,c
  4869  0163B2  0E00               	movlw	0
  4870  0163B4  6EE6               	movwf	postinc1,c
  4871  0163B6  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4872  0163BA  0060  F0D7  FFE6   	movff	btemp,postinc1
  4873  0163C0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4874  0163C6  0E00               	movlw	0
  4875  0163C8  6EE6               	movwf	postinc1,c
  4876  0163CA  0E00               	movlw	0
  4877  0163CC  6EE6               	movwf	postinc1,c
  4878  0163CE  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4879  0163D2  0060  F0D7  FFE6   	movff	btemp,postinc1
  4880  0163D8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4881  0163DE  0E98               	movlw	low STR_20
  4882  0163E0  6EE6               	movwf	postinc1,c
  4883  0163E2  0EFF               	movlw	high STR_20
  4884  0163E4  6EE6               	movwf	postinc1,c
  4885  0163E6  0E01               	movlw	low (_V+1)
  4886  0163E8  6EE6               	movwf	postinc1,c
  4887  0163EA  0E02               	movlw	high (_V+1)
  4888  0163EC  6EE6               	movwf	postinc1,c
  4889  0163EE  0E08               	movlw	8
  4890  0163F0  6EE6               	movwf	postinc1,c
  4891  0163F2  EC9D  F0B4         	call	_sprintf	;wreg free
  4892                           
  4893                           ;mconfig.c: 121:  wait_lcd_done();
  4894  0163F6  ECBE  F0C1         	call	_wait_lcd_done	;wreg free
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4898  0163FA  0E01               	movlw	low (_V+1)
  4899  0163FC  6EE6               	movwf	postinc1,c
  4900  0163FE  0E02               	movlw	high (_V+1)
  4901  016400  6EE6               	movwf	postinc1,c
  4902  016402  0E00               	movlw	0
  4903  016404  6EE6               	movwf	postinc1,c
  4904  016406  0E00               	movlw	0
  4905  016408  6EE6               	movwf	postinc1,c
  4906  01640A  ECCB  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  4907                           
  4908                           ; BSR set to: 59
  4909                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4910  01640E  0E01               	movlw	1
  4911  016410  6EE6               	movwf	postinc1,c
  4912  016412  0E01               	movlw	1
  4913  016414  6EE6               	movwf	postinc1,c
  4914  016416  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4915  01641A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4916  016420  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4917  016426  0E00               	movlw	0
  4918  016428  6EE6               	movwf	postinc1,c
  4919  01642A  0E01               	movlw	1
  4920  01642C  6EE6               	movwf	postinc1,c
  4921  01642E  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4922  016432  0060  F0D7  FFE6   	movff	btemp,postinc1
  4923  016438  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4924  01643E  0E98               	movlw	low STR_20
  4925  016440  6EE6               	movwf	postinc1,c
  4926  016442  0EFF               	movlw	high STR_20
  4927  016444  6EE6               	movwf	postinc1,c
  4928  016446  0E01               	movlw	low (_V+1)
  4929  016448  6EE6               	movwf	postinc1,c
  4930  01644A  0E02               	movlw	high (_V+1)
  4931  01644C  6EE6               	movwf	postinc1,c
  4932  01644E  0E08               	movlw	8
  4933  016450  6EE6               	movwf	postinc1,c
  4934  016452  EC9D  F0B4         	call	_sprintf	;wreg free
  4935                           
  4936                           ;mconfig.c: 124:  wait_lcd_done();
  4937  016456  ECBE  F0C1         	call	_wait_lcd_done	;wreg free
  4938                           
  4939                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  4940  01645A  0E01               	movlw	low (_V+1)
  4941  01645C  6EE6               	movwf	postinc1,c
  4942  01645E  0E02               	movlw	high (_V+1)
  4943  016460  6EE6               	movwf	postinc1,c
  4944  016462  0E00               	movlw	0
  4945  016464  6EE6               	movwf	postinc1,c
  4946  016466  0E01               	movlw	1
  4947  016468  6EE6               	movwf	postinc1,c
  4948  01646A  ECCB  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  4949                           
  4950                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  4951  01646E  0E01               	movlw	1
  4952  016470  6EE6               	movwf	postinc1,c
  4953  016472  0E02               	movlw	2
  4954  016474  6EE6               	movwf	postinc1,c
  4955  016476  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4956  01647A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4957  016480  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4958  016486  0E00               	movlw	0
  4959  016488  6EE6               	movwf	postinc1,c
  4960  01648A  0E02               	movlw	2
  4961  01648C  6EE6               	movwf	postinc1,c
  4962  01648E  EC62  F0BF         	call	_get_vterm_ptr	;wreg free
  4963  016492  0060  F0D7  FFE6   	movff	btemp,postinc1
  4964  016498  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4965  01649E  0E98               	movlw	low STR_20
  4966  0164A0  6EE6               	movwf	postinc1,c
  4967  0164A2  0EFF               	movlw	high STR_20
  4968  0164A4  6EE6               	movwf	postinc1,c
  4969  0164A6  0E01               	movlw	low (_V+1)
  4970  0164A8  6EE6               	movwf	postinc1,c
  4971  0164AA  0E02               	movlw	high (_V+1)
  4972  0164AC  6EE6               	movwf	postinc1,c
  4973  0164AE  0E08               	movlw	8
  4974  0164B0  6EE6               	movwf	postinc1,c
  4975  0164B2  EC9D  F0B4         	call	_sprintf	;wreg free
  4976                           
  4977                           ;mconfig.c: 127:  wait_lcd_done();
  4978  0164B6  ECBE  F0C1         	call	_wait_lcd_done	;wreg free
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  4982  0164BA  0E01               	movlw	low (_V+1)
  4983  0164BC  6EE6               	movwf	postinc1,c
  4984  0164BE  0E02               	movlw	high (_V+1)
  4985  0164C0  6EE6               	movwf	postinc1,c
  4986  0164C2  0E00               	movlw	0
  4987  0164C4  6EE6               	movwf	postinc1,c
  4988  0164C6  0E02               	movlw	2
  4989  0164C8  6EE6               	movwf	postinc1,c
  4990  0164CA  ECCB  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  4991                           
  4992                           ; BSR set to: 59
  4993                           ;mconfig.c: 129:  WaitMs(3000);
  4994  0164CE  0EB8               	movlw	184
  4995  0164D0  6EE6               	movwf	postinc1,c
  4996  0164D2  0E0B               	movlw	11
  4997  0164D4  6EE6               	movwf	postinc1,c
  4998  0164D6  ECB0  F0BE         	call	_WaitMs	;wreg free
  4999                           
  5000                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5001  0164DA  0012               	return		;funcret
  5002  0164DC                     __end_of_vterm_dump:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function _sprintf *****************
  5006 ;; Defined at:
  5007 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  s               2  [STACK] PTR unsigned char 
  5010 ;;		 -> D.lcd(216), D(218), V(189), 
  5011 ;;  fmt             2  [STACK] PTR const unsigned char 
  5012 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  5013 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  5014 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  5015 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  5016 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  5017 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  f               6  [STACK] struct _IO_FILE
  5020 ;;  ap              2  [STACK] PTR void [1]
  5021 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5022 ;;  ret             2    0        int 
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  2  [STACK] int 
  5025 ;; Registers used:
  5026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/4
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:   14
  5039 ;; This function calls:
  5040 ;;		_vfprintf
  5041 ;; This function is called by:
  5042 ;;		_main
  5043 ;;		_check_help
  5044 ;;		_vterm_dump
  5045 ;; This function uses a reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text18
  5049  01693A                     __ptext18:
  5050                           	opt callstack 0
  5051  01693A                     _sprintf:
  5052                           	opt callstack 0
  5053                           
  5054                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5055  01693A  0E08               	movlw	8
  5056  01693C  26E1               	addwf	fsr1l,f,c
  5057  01693E  0E00               	movlw	0
  5058  016940  22E2               	addwfc	fsr1h,f,c
  5059                           
  5060                           ;incstack = 0
  5061  016942  0EFE               	movlw	254
  5062  016944  6E3F               	movwf	(btemp+10)^0,c
  5063  016946  0EFF               	movlw	255
  5064  016948  6E40               	movwf	(btemp+11)^0,c
  5065                           
  5066                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5067  01694A  0EF5               	movlw	245
  5068  01694C  24E1               	addwf	fsr1l,w,c
  5069  01694E  6E3D               	movwf	(btemp+8)^0,c
  5070  016950  0EFF               	movlw	255
  5071  016952  20E2               	addwfc	fsr1h,w,c
  5072  016954  6E3E               	movwf	(btemp+9)^0,c
  5073  016956  503F               	movf	(btemp+10)^0,w,c
  5074  016958  263D               	addwf	(btemp+8)^0,f,c
  5075  01695A  5040               	movf	(btemp+11)^0,w,c
  5076  01695C  223E               	addwfc	(btemp+9)^0,f,c
  5077                           
  5078                           ;stkvar	_ap @ sp[(-8)+6]
  5079  01695E  0EFF               	movlw	-1
  5080  016960  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  5081  016966  0EFE               	movlw	-2
  5082  016968  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  5083                           
  5084                           ;stkvar	_s @ sp[(-8)+-3]
  5085  01696E  0EF5               	movlw	-11
  5086  016970  006F FF8C  F03F    	movff	plusw1,btemp+10
  5087  016976  0EF6               	movlw	-10
  5088  016978  006F FF8C  F040    	movff	plusw1,btemp+11
  5089                           
  5090                           ;stkvar	_f @ sp[(-8)+0]
  5091  01697E  0EF9               	movlw	-7
  5092  016980  0060  F103  FFE3   	movff	btemp+11,plusw1
  5093  016986  0EF8               	movlw	-8
  5094  016988  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5095                           
  5096                           ;stkvar	_f @ sp[(-8)+0]
  5097  01698E  0EFA               	movlw	250
  5098  016990  24E1               	addwf	fsr1l,w,c
  5099  016992  6ED9               	movwf	fsr2l,c
  5100  016994  0EFF               	movlw	255
  5101  016996  20E2               	addwfc	fsr1h,w,c
  5102  016998  6EDA               	movwf	fsr2h,c
  5103  01699A  0E00               	movlw	0
  5104  01699C  6EDE               	movwf	postinc2,c
  5105  01699E  0E00               	movlw	0
  5106  0169A0  6EDD               	movwf	postdec2,c
  5107                           
  5108                           ;stkvar	_f @ sp[(-8)+0]
  5109  0169A2  0EFC               	movlw	252
  5110  0169A4  24E1               	addwf	fsr1l,w,c
  5111  0169A6  6ED9               	movwf	fsr2l,c
  5112  0169A8  0EFF               	movlw	255
  5113  0169AA  20E2               	addwfc	fsr1h,w,c
  5114  0169AC  6EDA               	movwf	fsr2h,c
  5115  0169AE  0E00               	movlw	0
  5116  0169B0  6EDE               	movwf	postinc2,c
  5117  0169B2  0E00               	movlw	0
  5118  0169B4  6EDD               	movwf	postdec2,c
  5119                           
  5120                           ;stkvar	_ap @ sp[(-8)+6]
  5121  0169B6  0EFE               	movlw	254
  5122  0169B8  24E1               	addwf	fsr1l,w,c
  5123  0169BA  6E35               	movwf	btemp^0,c
  5124  0169BC  0EFF               	movlw	255
  5125  0169BE  20E2               	addwfc	fsr1h,w,c
  5126  0169C0  6E36               	movwf	(btemp+1)^0,c
  5127  0169C2  0060  F0D7  FFE6   	movff	btemp,postinc1
  5128  0169C8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5129                           
  5130                           ;stkvar	_fmt @ sp[(-10)+-5]
  5131  0169CE  0EF1               	movlw	-15
  5132  0169D0  006F FF8F FFE6     	movff	plusw1,postinc1
  5133  0169D6  006F FF8F FFE6     	movff	plusw1,postinc1
  5134                           
  5135                           ;stkvar	_f @ sp[(-12)+0]
  5136  0169DC  0EF4               	movlw	244
  5137  0169DE  24E1               	addwf	fsr1l,w,c
  5138  0169E0  6E35               	movwf	btemp^0,c
  5139  0169E2  0EFF               	movlw	255
  5140  0169E4  20E2               	addwfc	fsr1h,w,c
  5141  0169E6  6E36               	movwf	(btemp+1)^0,c
  5142  0169E8  0060  F0D7  FFE6   	movff	btemp,postinc1
  5143  0169EE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5144  0169F4  EC7A  F0B7         	call	_vfprintf	;wreg free
  5145                           
  5146                           ;stkvar	_f @ sp[(-8)+0]
  5147  0169F8  0EFA               	movlw	250
  5148  0169FA  24E1               	addwf	fsr1l,w,c
  5149  0169FC  6ED9               	movwf	fsr2l,c
  5150  0169FE  0EFF               	movlw	255
  5151  016A00  20E2               	addwfc	fsr1h,w,c
  5152  016A02  6EDA               	movwf	fsr2h,c
  5153  016A04  006F FF78  F03F    	movff	postinc2,btemp+10
  5154  016A0A  006F FF74  F040    	movff	postdec2,btemp+11
  5155                           
  5156                           ;stkvar	_s @ sp[(-8)+-3]
  5157  016A10  0EF5               	movlw	-11
  5158  016A12  006F FF8C  F03D    	movff	plusw1,btemp+8
  5159  016A18  0EF6               	movlw	-10
  5160  016A1A  006F FF8C  F03E    	movff	plusw1,btemp+9
  5161  016A20  503F               	movf	(btemp+10)^0,w,c
  5162  016A22  243D               	addwf	(btemp+8)^0,w,c
  5163  016A24  6ED9               	movwf	fsr2l,c
  5164  016A26  5040               	movf	(btemp+11)^0,w,c
  5165  016A28  203E               	addwfc	(btemp+9)^0,w,c
  5166  016A2A  6EDA               	movwf	fsr2h,c
  5167  016A2C  0E00               	movlw	0
  5168  016A2E  6EDF               	movwf	indf2,c
  5169                           
  5170                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 4, vargsize = 0
  5171  016A30  0EF8               	movlw	248
  5172  016A32  26E1               	addwf	fsr1l,f,c
  5173  016A34  0EFF               	movlw	255
  5174  016A36  22E2               	addwfc	fsr1h,f,c
  5175  016A38  52E5               	movf	postdec1,f,c
  5176  016A3A  50E7               	movf	indf1,w,c
  5177  016A3C  5EE1               	subwf	fsr1l,f,c
  5178  016A3E  0E00               	movlw	0
  5179  016A40  5AE2               	subwfb	fsr1h,f,c
  5180  016A42  0012               	return		;funcret
  5181  016A44                     __end_of_sprintf:
  5182                           	opt callstack 0
  5183                           
  5184 ;; *************** function _get_vterm_ptr *****************
  5185 ;; Defined at:
  5186 ;;		line 113 in file "mconfig.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  line            1  [STACK] unsigned char 
  5189 ;;  vterm           1  [STACK] unsigned char 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  2  [STACK] PTR unsigned char 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/4
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    6
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_main
  5212 ;;		_check_help
  5213 ;;		_vterm_dump
  5214 ;; This function uses a reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text19
  5218  017EC4                     __ptext19:
  5219                           	opt callstack 0
  5220  017EC4                     _get_vterm_ptr:
  5221                           	opt callstack 24
  5222                           
  5223                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5224                           ;stkvar	_vterm @ sp[(0)+-2]
  5225                           
  5226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5227                           ;incstack = 0
  5228  017EC4  0EFE               	movlw	-2
  5229  017EC6  50E3               	movf	plusw1,w,c
  5230  017EC8  0B03               	andlw	3
  5231  017ECA  0D36               	mullw	54
  5232  017ECC  0E00               	movlw	low _D
  5233  017ECE  6E35               	movwf	btemp^0,c
  5234  017ED0  0E04               	movlw	high _D
  5235  017ED2  6E36               	movwf	(btemp+1)^0,c
  5236  017ED4  50F3               	movf	243,w,c
  5237  017ED6  2635               	addwf	btemp^0,f,c
  5238  017ED8  50F4               	movf	244,w,c
  5239  017EDA  2236               	addwfc	(btemp+1)^0,f,c
  5240                           
  5241                           ;stkvar	_line @ sp[(0)+-1]
  5242  017EDC  0EFF               	movlw	-1
  5243  017EDE  50E3               	movf	plusw1,w,c
  5244  017EE0  0B03               	andlw	3
  5245  017EE2  0D12               	mullw	18
  5246  017EE4  50F3               	movf	243,w,c
  5247  017EE6  2635               	addwf	btemp^0,f,c
  5248  017EE8  50F4               	movf	244,w,c
  5249  017EEA  2236               	addwfc	(btemp+1)^0,f,c
  5250                           
  5251                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5252  017EEC  52E5               	movf	postdec1,f,c
  5253  017EEE  52E5               	movf	postdec1,f,c
  5254  017EF0  0012               	return		;funcret
  5255  017EF2                     __end_of_get_vterm_ptr:
  5256                           	opt callstack 0
  5257                           
  5258 ;; *************** function _WaitMs *****************
  5259 ;; Defined at:
  5260 ;;		line 32 in file "timers.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  numMilliseco    2  [STACK] const unsigned short 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1  [STACK] void 
  5267 ;; Registers used:
  5268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/2
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5278 ;;Total ram usage:        0 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    7
  5281 ;; This function calls:
  5282 ;;		_StartTimer
  5283 ;;		_TimerDone
  5284 ;; This function is called by:
  5285 ;;		_main
  5286 ;;		_vterm_dump
  5287 ;; This function uses a reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text20
  5291  017D60                     __ptext20:
  5292                           	opt callstack 0
  5293  017D60                     _WaitMs:
  5294                           	opt callstack 21
  5295                           
  5296                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5297                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5298                           
  5299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5300                           ;incstack = 0
  5301  017D60  0EFE               	movlw	-2
  5302  017D62  006F FF8F FFE6     	movff	plusw1,postinc1
  5303  017D68  006F FF8F FFE6     	movff	plusw1,postinc1
  5304  017D6E  0E00               	movlw	0
  5305  017D70  6EE6               	movwf	postinc1,c
  5306  017D72  EC59  F0BE         	call	_StartTimer	;wreg free
  5307                           
  5308                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5309  017D76  D005               	goto	l7800
  5310  017D78                     l1483:
  5311                           
  5312                           ;timers.c: 36:   __nop();
  5313  017D78  F000               	nop	
  5314                           
  5315                           ;timers.c: 37:   __nop();
  5316  017D7A  F000               	nop	
  5317                           
  5318                           ;timers.c: 38:   __nop();
  5319  017D7C  F000               	nop	
  5320                           
  5321                           ;timers.c: 39:   __nop();
  5322  017D7E  F000               	nop	
  5323  017D80  0004               	clrwdt		;# 
  5324  017D82                     l7800:
  5325                           
  5326                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5327  017D82  0E00               	movlw	0
  5328  017D84  6EE6               	movwf	postinc1,c
  5329  017D86  EC0D  F0C1         	call	_TimerDone	;wreg free
  5330  017D8A  5035               	movf	btemp^0,w,c
  5331  017D8C  B4D8               	btfsc	status,2,c
  5332  017D8E  D7F4               	goto	l1483
  5333                           
  5334                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5335  017D90  52E5               	movf	postdec1,f,c
  5336  017D92  52E5               	movf	postdec1,f,c
  5337  017D94  0012               	return		;funcret
  5338  017D96                     __end_of_WaitMs:
  5339                           	opt callstack 0
  5340                           
  5341 ;; *************** function _update_lcd *****************
  5342 ;; Defined at:
  5343 ;;		line 82 in file "mconfig.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  vterm           1  [STACK] unsigned char 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1  [STACK] unsigned char 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/4
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5361 ;;Total ram usage:        0 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:   17
  5364 ;; This function calls:
  5365 ;;		_eaDogM_WriteStringAtPos
  5366 ;;		_wait_lcd_done
  5367 ;; This function is called by:
  5368 ;;		_main
  5369 ;;		_check_help
  5370 ;; This function uses a reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text21
  5374  01682C                     __ptext21:
  5375                           	opt callstack 0
  5376  01682C                     _update_lcd:
  5377                           	opt callstack 13
  5378                           
  5379                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5380                           ;stkvar	_vterm @ sp[(0)+-1]
  5381                           
  5382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5383                           ;incstack = 0
  5384  01682C  0EFF               	movlw	-1
  5385  01682E  006F FF8C  F035    	movff	plusw1,btemp
  5386  016834  0E03               	movlw	3
  5387  016836  1635               	andwf	btemp^0,f,c
  5388  016838  0EFF               	movlw	-1
  5389  01683A  0060  F0D7  FFE3   	movff	btemp,plusw1
  5390                           
  5391                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5392  016840  0104               	movlb	4	; () banked
  5393  016842  A1D8               	btfss	(_D+216)& (0+255),0,b
  5394  016844  D004               	goto	l9766
  5395                           
  5396                           ; BSR set to: 4
  5397                           ;stkvar	_vterm @ sp[(0)+-1]
  5398  016846  0EFF               	movlw	-1
  5399  016848  50E3               	movf	plusw1,w,c
  5400  01684A  B4D8               	btfsc	status,2,c
  5401  01684C  D074               	goto	l1561
  5402  01684E                     l9766:
  5403                           
  5404                           ; BSR set to: 4
  5405                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5406                           ;stkvar	_vterm @ sp[(0)+-1]
  5407  01684E  0EFF               	movlw	-1
  5408  016850  50E3               	movf	plusw1,w,c
  5409  016852  0D36               	mullw	54
  5410  016854  0E10               	movlw	low (_D+16)
  5411  016856  24F3               	addwf	243,w,c
  5412  016858  6ED9               	movwf	fsr2l,c
  5413  01685A  0E04               	movlw	high (_D+16)
  5414  01685C  20F4               	addwfc	prodh,w,c
  5415  01685E  6EDA               	movwf	fsr2h,c
  5416  016860  0E00               	movlw	0
  5417  016862  6EDF               	movwf	indf2,c
  5418                           
  5419                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5420                           ;stkvar	_vterm @ sp[(0)+-1]
  5421  016864  0EFF               	movlw	-1
  5422  016866  50E3               	movf	plusw1,w,c
  5423  016868  0D36               	mullw	54
  5424  01686A  0E22               	movlw	low (_D+34)
  5425  01686C  24F3               	addwf	243,w,c
  5426  01686E  6ED9               	movwf	fsr2l,c
  5427  016870  0E04               	movlw	high (_D+34)
  5428  016872  20F4               	addwfc	prodh,w,c
  5429  016874  6EDA               	movwf	fsr2h,c
  5430  016876  0E00               	movlw	0
  5431  016878  6EDF               	movwf	indf2,c
  5432                           
  5433                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5434                           ;stkvar	_vterm @ sp[(0)+-1]
  5435  01687A  0EFF               	movlw	-1
  5436  01687C  50E3               	movf	plusw1,w,c
  5437  01687E  0D36               	mullw	54
  5438  016880  0E34               	movlw	low (_D+52)
  5439  016882  24F3               	addwf	243,w,c
  5440  016884  6ED9               	movwf	fsr2l,c
  5441  016886  0E04               	movlw	high (_D+52)
  5442  016888  20F4               	addwfc	prodh,w,c
  5443  01688A  6EDA               	movwf	fsr2h,c
  5444  01688C  0E00               	movlw	0
  5445  01688E  6EDF               	movwf	indf2,c
  5446                           
  5447                           ; BSR set to: 4
  5448                           ;mconfig.c: 92:  wait_lcd_done();
  5449  016890  ECBE  F0C1         	call	_wait_lcd_done	;wreg free
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5453                           ;stkvar	_vterm @ sp[(0)+-1]
  5454  016894  0EFF               	movlw	-1
  5455  016896  50E3               	movf	plusw1,w,c
  5456  016898  0D36               	mullw	54
  5457  01689A  0E00               	movlw	low _D
  5458  01689C  6E3F               	movwf	(btemp+10)^0,c
  5459  01689E  0E04               	movlw	high _D
  5460  0168A0  6E40               	movwf	(btemp+11)^0,c
  5461  0168A2  50F3               	movf	243,w,c
  5462  0168A4  263F               	addwf	(btemp+10)^0,f,c
  5463  0168A6  50F4               	movf	244,w,c
  5464  0168A8  2240               	addwfc	(btemp+11)^0,f,c
  5465  0168AA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5466  0168B0  0060  F103  FFE6   	movff	btemp+11,postinc1
  5467  0168B6  0E00               	movlw	0
  5468  0168B8  6EE6               	movwf	postinc1,c
  5469  0168BA  0E00               	movlw	0
  5470  0168BC  6EE6               	movwf	postinc1,c
  5471  0168BE  ECCB  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5472                           
  5473                           ; BSR set to: 59
  5474                           ;mconfig.c: 94:  wait_lcd_done();
  5475  0168C2  ECBE  F0C1         	call	_wait_lcd_done	;wreg free
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5479                           ;stkvar	_vterm @ sp[(0)+-1]
  5480  0168C6  0EFF               	movlw	-1
  5481  0168C8  50E3               	movf	plusw1,w,c
  5482  0168CA  0D36               	mullw	54
  5483  0168CC  0E00               	movlw	low _D
  5484  0168CE  6E3F               	movwf	(btemp+10)^0,c
  5485  0168D0  0E04               	movlw	high _D
  5486  0168D2  6E40               	movwf	(btemp+11)^0,c
  5487  0168D4  0E12               	movlw	18
  5488  0168D6  263F               	addwf	(btemp+10)^0,f,c
  5489  0168D8  0E00               	movlw	0
  5490  0168DA  2240               	addwfc	(btemp+11)^0,f,c
  5491  0168DC  50F3               	movf	243,w,c
  5492  0168DE  263F               	addwf	(btemp+10)^0,f,c
  5493  0168E0  50F4               	movf	244,w,c
  5494  0168E2  2240               	addwfc	(btemp+11)^0,f,c
  5495  0168E4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5496  0168EA  0060  F103  FFE6   	movff	btemp+11,postinc1
  5497  0168F0  0E00               	movlw	0
  5498  0168F2  6EE6               	movwf	postinc1,c
  5499  0168F4  0E01               	movlw	1
  5500  0168F6  6EE6               	movwf	postinc1,c
  5501  0168F8  ECCB  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5502                           
  5503                           ; BSR set to: 59
  5504                           ;mconfig.c: 96:  wait_lcd_done();
  5505  0168FC  ECBE  F0C1         	call	_wait_lcd_done	;wreg free
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5509                           ;stkvar	_vterm @ sp[(0)+-1]
  5510  016900  0EFF               	movlw	-1
  5511  016902  50E3               	movf	plusw1,w,c
  5512  016904  0D36               	mullw	54
  5513  016906  0E00               	movlw	low _D
  5514  016908  6E3F               	movwf	(btemp+10)^0,c
  5515  01690A  0E04               	movlw	high _D
  5516  01690C  6E40               	movwf	(btemp+11)^0,c
  5517  01690E  0E24               	movlw	36
  5518  016910  263F               	addwf	(btemp+10)^0,f,c
  5519  016912  0E00               	movlw	0
  5520  016914  2240               	addwfc	(btemp+11)^0,f,c
  5521  016916  50F3               	movf	243,w,c
  5522  016918  263F               	addwf	(btemp+10)^0,f,c
  5523  01691A  50F4               	movf	244,w,c
  5524  01691C  2240               	addwfc	(btemp+11)^0,f,c
  5525  01691E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5526  016924  0060  F103  FFE6   	movff	btemp+11,postinc1
  5527  01692A  0E00               	movlw	0
  5528  01692C  6EE6               	movwf	postinc1,c
  5529  01692E  0E02               	movlw	2
  5530  016930  6EE6               	movwf	postinc1,c
  5531  016932  ECCB  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5532  016936                     l1561:
  5533                           
  5534                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5535  016936  52E5               	movf	postdec1,f,c
  5536  016938  0012               	return		;funcret
  5537  01693A                     __end_of_update_lcd:
  5538                           	opt callstack 0
  5539                           
  5540 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5541 ;; Defined at:
  5542 ;;		line 252 in file "eadog.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  r               1  [STACK] const unsigned char 
  5545 ;;  c               1  [STACK] const unsigned char 
  5546 ;;  strPtr          2  [STACK] PTR unsigned char 
  5547 ;;		 -> D.lcd(216), D(218), V(189), 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1  [STACK] void 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5554 ;; Tracked objects:
  5555 ;;		On entry : 3F/0
  5556 ;;		On exit  : 3F/3B
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5563 ;;Total ram usage:        0 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:   16
  5566 ;; This function calls:
  5567 ;;		_eaDogM_WriteString
  5568 ;;		_send_lcd_cmd_dma
  5569 ;; This function is called by:
  5570 ;;		_update_lcd
  5571 ;;		_vterm_dump
  5572 ;; This function uses a reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text22
  5576  017D96                     __ptext22:
  5577                           	opt callstack 0
  5578  017D96                     _eaDogM_WriteStringAtPos:
  5579                           	opt callstack 13
  5580                           
  5581                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5582                           ;stkvar	_c @ sp[(0)+-2]
  5583                           
  5584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5585                           ;incstack = 0
  5586  017D96  0EFE               	movlw	-2
  5587  017D98  006F FF8C  F040    	movff	plusw1,btemp+11
  5588                           
  5589                           ;stkvar	_r @ sp[(0)+-1]
  5590  017D9E  0EFF               	movlw	-1
  5591  017DA0  50E3               	movf	plusw1,w,c
  5592  017DA2  0D10               	mullw	16
  5593  017DA4  50F3               	movf	243,w,c
  5594  017DA6  2440               	addwf	(btemp+11)^0,w,c
  5595  017DA8  0F80               	addlw	128
  5596  017DAA  6EE6               	movwf	postinc1,c
  5597  017DAC  ECB0  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  5598                           
  5599                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5600                           ;stkvar	_strPtr @ sp[(0)+-4]
  5601  017DB0  0EFC               	movlw	-4
  5602  017DB2  006F FF8F FFE6     	movff	plusw1,postinc1
  5603  017DB8  006F FF8F FFE6     	movff	plusw1,postinc1
  5604  017DBE  ECCE  F0B7         	call	_eaDogM_WriteString	;wreg free
  5605                           
  5606                           ; BSR set to: 59
  5607                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5608  017DC2  52E5               	movf	postdec1,f,c
  5609  017DC4  52E5               	movf	postdec1,f,c
  5610  017DC6  52E5               	movf	postdec1,f,c
  5611  017DC8  52E5               	movf	postdec1,f,c
  5612  017DCA  0012               	return		;funcret
  5613  017DCC                     __end_of_eaDogM_WriteStringAtPos:
  5614                           	opt callstack 0
  5615                           
  5616 ;; *************** function _send_lcd_cmd_dma *****************
  5617 ;; Defined at:
  5618 ;;		line 205 in file "eadog.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  strPtr          1  [STACK] unsigned char 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1  [STACK] void 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/3D
  5629 ;;		On exit  : 3F/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5636 ;;Total ram usage:        0 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:   15
  5639 ;; This function calls:
  5640 ;;		_printf
  5641 ;;		_ringBufS_flush
  5642 ;;		_start_lcd
  5643 ;;		_wait_lcd_done
  5644 ;;		_wait_lcd_set
  5645 ;; This function is called by:
  5646 ;;		_eaDogM_WriteCommand
  5647 ;;		_eaDogM_WriteStringAtPos
  5648 ;; This function uses a reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text23
  5652  017960                     __ptext23:
  5653                           	opt callstack 0
  5654  017960                     _send_lcd_cmd_dma:
  5655                           	opt callstack 13
  5656                           
  5657                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5658                           
  5659                           ; BSR set to: 59
  5660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5661                           ;incstack = 0
  5662  017960  ECA4  F0C2         	call	_wait_lcd_set	;wreg free
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5666  017964  0E00               	movlw	0
  5667  017966  6EE6               	movwf	postinc1,c
  5668  017968  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5669  01796E  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5670  017974  EC09  F0B9         	call	_ringBufS_flush	;wreg free
  5671  017978  92BC               	bcf	188,1,c	;volatile
  5672  01797A  94BC               	bcf	188,2,c	;volatile
  5673                           
  5674                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5675  01797C  013B               	movlb	59	; () banked
  5676  01797E  9FFC               	bcf	252,7,b	;volatile
  5677                           
  5678                           ; BSR set to: 59
  5679                           ;eadog.c: 214:  DMA1SSZ = 1;
  5680  017980  0E00               	movlw	0
  5681  017982  6FF8               	movwf	248,b	;volatile
  5682  017984  0E01               	movlw	1
  5683  017986  6FF7               	movwf	247,b	;volatile
  5684                           
  5685                           ; BSR set to: 59
  5686                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5687  017988  8FFC               	bsf	252,7,b	;volatile
  5688                           
  5689                           ; BSR set to: 59
  5690                           ;eadog.c: 216:  printf("%c", strPtr);
  5691                           ;stkvar	_strPtr @ sp[(0)+-1]
  5692  01798A  0EFF               	movlw	-1
  5693  01798C  50E3               	movf	plusw1,w,c
  5694  01798E  6EE6               	movwf	postinc1,c
  5695  017990  0E00               	movlw	0
  5696  017992  6EE6               	movwf	postinc1,c
  5697  017994  0EF9               	movlw	low STR_12
  5698  017996  6EE6               	movwf	postinc1,c
  5699  017998  0EFF               	movlw	high STR_12
  5700  01799A  6EE6               	movwf	postinc1,c
  5701  01799C  0E04               	movlw	4
  5702  01799E  6EE6               	movwf	postinc1,c
  5703  0179A0  ECC8  F0BB         	call	_printf	;wreg free
  5704                           
  5705                           ;eadog.c: 217:  start_lcd();
  5706  0179A4  ECA7  F0C2         	call	_start_lcd	;wreg free
  5707                           
  5708                           ; BSR set to: 59
  5709                           ;eadog.c: 218:  wait_lcd_done();
  5710  0179A8  ECBE  F0C1         	call	_wait_lcd_done	;wreg free
  5711                           
  5712                           ; BSR set to: 0
  5713  0179AC  82BC               	bsf	188,1,c	;volatile
  5714                           
  5715                           ; BSR set to: 0
  5716                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5717  0179AE  52E5               	movf	postdec1,f,c
  5718  0179B0  0012               	return		;funcret
  5719  0179B2                     __end_of_send_lcd_cmd_dma:
  5720                           	opt callstack 0
  5721                           
  5722 ;; *************** function _wait_lcd_done *****************
  5723 ;; Defined at:
  5724 ;;		line 141 in file "eadog.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;		None
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1  [STACK] void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/2
  5735 ;;		On exit  : 3F/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5742 ;;Total ram usage:        0 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    7
  5745 ;; This function calls:
  5746 ;;		_wdtdelay
  5747 ;; This function is called by:
  5748 ;;		_send_lcd_cmd_dma
  5749 ;;		_update_lcd
  5750 ;;		_vterm_dump
  5751 ;; This function uses a reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text24
  5755  01837C                     __ptext24:
  5756                           	opt callstack 0
  5757  01837C                     _wait_lcd_done:
  5758                           	opt callstack 22
  5759                           
  5760                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5761                           
  5762                           ; BSR set to: 0
  5763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5764                           ;incstack = 0
  5765  01837C  0100               	movlb	0	; () banked
  5766  01837E  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  5767  018380  D7FD               	goto	_wait_lcd_done
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;eadog.c: 144:  wdtdelay(50);
  5771  018382  0E32               	movlw	50
  5772  018384  6EE6               	movwf	postinc1,c
  5773  018386  0E00               	movlw	0
  5774  018388  6EE6               	movwf	postinc1,c
  5775  01838A  0E00               	movlw	0
  5776  01838C  6EE6               	movwf	postinc1,c
  5777  01838E  0E00               	movlw	0
  5778  018390  6EE6               	movwf	postinc1,c
  5779  018392  EC56  F0BC         	call	_wdtdelay	;wreg free
  5780                           
  5781                           ; BSR set to: 0
  5782                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5783  018396  0012               	return		;funcret
  5784  018398                     __end_of_wait_lcd_done:
  5785                           	opt callstack 0
  5786                           
  5787 ;; *************** function _wdtdelay *****************
  5788 ;; Defined at:
  5789 ;;		line 22 in file "eadog.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  delay           4  [STACK] const unsigned long 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1  [STACK] void 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 3F/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5807 ;;Total ram usage:        0 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    6
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_init_display
  5814 ;;		_send_lcd_cmd
  5815 ;;		_send_lcd_cmd_long
  5816 ;;		_wait_lcd_done
  5817 ;; This function uses a reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text25
  5821  0178AC                     __ptext25:
  5822                           	opt callstack 0
  5823  0178AC                     _wdtdelay:
  5824                           	opt callstack 22
  5825                           
  5826                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5827                           
  5828                           ; BSR set to: 0
  5829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5830                           ;incstack = 0
  5831  0178AC  0100               	movlb	0	; () banked
  5832  0178AE  6B94               	clrf	wdtdelay@dcount& (0+255),b
  5833  0178B0  6B95               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5834  0178B2  6B96               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5835  0178B4  6B97               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5836  0178B6                     l1328:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;eadog.c: 27:   __nop();
  5840  0178B6  F000               	nop	
  5841  0178B8  0004               	clrwdt		;# 
  5842                           
  5843                           ;eadog.c: 29:  };
  5844  0178BA  0E01               	movlw	1
  5845  0178BC  0100               	movlb	0	; () banked
  5846  0178BE  2794               	addwf	wdtdelay@dcount& (0+255),f,b
  5847  0178C0  0E00               	movlw	0
  5848  0178C2  2395               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5849  0178C4  2396               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5850  0178C6  2397               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;stkvar	_delay @ sp[(0)+-4]
  5854  0178C8  0EFC               	movlw	-4
  5855  0178CA  006F FF8C  F035    	movff	plusw1,btemp
  5856  0178D0  5194               	movf	wdtdelay@dcount& (0+255),w,b
  5857  0178D2  5C35               	subwf	btemp^0,w,c
  5858  0178D4  0EFD               	movlw	-3
  5859  0178D6  006F FF8C  F035    	movff	plusw1,btemp
  5860  0178DC  5195               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5861  0178DE  5835               	subwfb	btemp^0,w,c
  5862  0178E0  0EFE               	movlw	-2
  5863  0178E2  006F FF8C  F035    	movff	plusw1,btemp
  5864  0178E8  5196               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5865  0178EA  5835               	subwfb	btemp^0,w,c
  5866  0178EC  0EFF               	movlw	-1
  5867  0178EE  006F FF8C  F035    	movff	plusw1,btemp
  5868  0178F4  5197               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5869  0178F6  5835               	subwfb	btemp^0,w,c
  5870  0178F8  B0D8               	btfsc	status,0,c
  5871  0178FA  D7DD               	goto	l1328
  5872                           
  5873                           ; BSR set to: 0
  5874                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5875  0178FC  52E5               	movf	postdec1,f,c
  5876  0178FE  52E5               	movf	postdec1,f,c
  5877  017900  52E5               	movf	postdec1,f,c
  5878  017902  52E5               	movf	postdec1,f,c
  5879  017904  0012               	return		;funcret
  5880  017906                     __end_of_wdtdelay:
  5881                           	opt callstack 0
  5882                           
  5883 ;; *************** function _eaDogM_WriteString *****************
  5884 ;; Defined at:
  5885 ;;		line 184 in file "eadog.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  strPtr          2  [STACK] PTR unsigned char 
  5888 ;;		 -> D.lcd(216), D(218), V(189), 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1  [STACK] void 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5895 ;; Tracked objects:
  5896 ;;		On entry : 3F/0
  5897 ;;		On exit  : 3F/3B
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:   15
  5907 ;; This function calls:
  5908 ;;		_printf
  5909 ;;		_ringBufS_flush
  5910 ;;		_start_lcd
  5911 ;;		_strlen
  5912 ;;		_wait_lcd_set
  5913 ;; This function is called by:
  5914 ;;		_eaDogM_WriteStringAtPos
  5915 ;; This function uses a reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text26
  5919  016F9C                     __ptext26:
  5920                           	opt callstack 0
  5921  016F9C                     _eaDogM_WriteString:
  5922                           	opt callstack 13
  5923                           
  5924                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  5925                           
  5926                           ; BSR set to: 0
  5927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5928                           ;incstack = 0
  5929  016F9C  ECA4  F0C2         	call	_wait_lcd_set	;wreg free
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  5933  016FA0  0E00               	movlw	0
  5934  016FA2  6EE6               	movwf	postinc1,c
  5935  016FA4  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5936  016FAA  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5937  016FB0  EC09  F0B9         	call	_ringBufS_flush	;wreg free
  5938  016FB4  94BC               	bcf	188,2,c	;volatile
  5939                           
  5940                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5941                           ;stkvar	_strPtr @ sp[(0)+-2]
  5942  016FB6  0EFE               	movlw	-2
  5943  016FB8  006F FF8F FFE6     	movff	plusw1,postinc1
  5944  016FBE  006F FF8F FFE6     	movff	plusw1,postinc1
  5945  016FC4  EC21  F0B8         	call	_strlen	;wreg free
  5946  016FC8  5036               	movf	(btemp+1)^0,w,c
  5947  016FCA  E104               	bnz	u9860
  5948  016FCC  0E41               	movlw	65
  5949  016FCE  5C35               	subwf	btemp^0,w,c
  5950  016FD0  A0D8               	btfss	status,0,c
  5951  016FD2  D010               	goto	l9732
  5952  016FD4                     u9860:
  5953                           
  5954                           ;stkvar	_strPtr @ sp[(0)+-2]
  5955  016FD4  0EFE               	movlw	-2
  5956  016FD6  006F FF8C  F03F    	movff	plusw1,btemp+10
  5957  016FDC  0EFF               	movlw	-1
  5958  016FDE  006F FF8C  F040    	movff	plusw1,btemp+11
  5959  016FE4  0E40               	movlw	64
  5960  016FE6  243F               	addwf	(btemp+10)^0,w,c
  5961  016FE8  6ED9               	movwf	fsr2l,c
  5962  016FEA  0E00               	movlw	0
  5963  016FEC  2040               	addwfc	(btemp+11)^0,w,c
  5964  016FEE  6EDA               	movwf	fsr2h,c
  5965  016FF0  0E00               	movlw	0
  5966  016FF2  6EDF               	movwf	indf2,c
  5967  016FF4                     l9732:
  5968                           
  5969                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  5970  016FF4  013B               	movlb	59	; () banked
  5971  016FF6  9FFC               	bcf	252,7,b	;volatile
  5972                           
  5973                           ; BSR set to: 59
  5974                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  5975                           ;stkvar	_strPtr @ sp[(0)+-2]
  5976  016FF8  0EFE               	movlw	-2
  5977  016FFA  006F FF8F FFE6     	movff	plusw1,postinc1
  5978  017000  006F FF8F FFE6     	movff	plusw1,postinc1
  5979  017006  EC21  F0B8         	call	_strlen	;wreg free
  5980  01700A  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  5981  017010  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  5982                           
  5983                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  5984  017016  013B               	movlb	59	; () banked
  5985  017018  8FFC               	bsf	252,7,b	;volatile
  5986                           
  5987                           ; BSR set to: 59
  5988                           ;eadog.c: 195:  printf("%s", strPtr);
  5989                           ;stkvar	_strPtr @ sp[(0)+-2]
  5990  01701A  0EFE               	movlw	-2
  5991  01701C  006F FF8F FFE6     	movff	plusw1,postinc1
  5992  017022  006F FF8F FFE6     	movff	plusw1,postinc1
  5993  017028  0EFC               	movlw	low STR_11
  5994  01702A  6EE6               	movwf	postinc1,c
  5995  01702C  0EFF               	movlw	high STR_11
  5996  01702E  6EE6               	movwf	postinc1,c
  5997  017030  0E04               	movlw	4
  5998  017032  6EE6               	movwf	postinc1,c
  5999  017034  ECC8  F0BB         	call	_printf	;wreg free
  6000                           
  6001                           ;eadog.c: 196:  start_lcd();
  6002  017038  ECA7  F0C2         	call	_start_lcd	;wreg free
  6003                           
  6004                           ; BSR set to: 59
  6005                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6006  01703C  52E5               	movf	postdec1,f,c
  6007  01703E  52E5               	movf	postdec1,f,c
  6008  017040  0012               	return		;funcret
  6009  017042                     __end_of_eaDogM_WriteString:
  6010                           	opt callstack 0
  6011                           
  6012 ;; *************** function _wait_lcd_set *****************
  6013 ;; Defined at:
  6014 ;;		line 131 in file "eadog.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1  [STACK] void 
  6021 ;; Registers used:
  6022 ;;		None
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/3D
  6025 ;;		On exit  : 3F/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6032 ;;Total ram usage:        0 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:    6
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_eaDogM_WriteString
  6039 ;;		_send_lcd_cmd_dma
  6040 ;; This function uses a reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text27
  6044  018548                     __ptext27:
  6045                           	opt callstack 0
  6046  018548                     _wait_lcd_set:
  6047                           	opt callstack 21
  6048                           
  6049                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6050                           
  6051                           ; BSR set to: 59
  6052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6053                           ;incstack = 0
  6054  018548  0100               	movlb	0	; () banked
  6055  01854A  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6056                           
  6057                           ; BSR set to: 0
  6058                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6059  01854C  0012               	return		;funcret
  6060  01854E                     __end_of_wait_lcd_set:
  6061                           	opt callstack 0
  6062                           
  6063 ;; *************** function _start_lcd *****************
  6064 ;; Defined at:
  6065 ;;		line 126 in file "eadog.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1  [STACK] void 
  6072 ;; Registers used:
  6073 ;;		None
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/3B
  6076 ;;		On exit  : 3F/3B
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    6
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_eaDogM_WriteString
  6090 ;;		_send_lcd_cmd_dma
  6091 ;; This function uses a reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text28
  6095  01854E                     __ptext28:
  6096                           	opt callstack 0
  6097  01854E                     _start_lcd:
  6098                           	opt callstack 21
  6099                           
  6100                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6101                           
  6102                           ; BSR set to: 0
  6103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6104                           ;incstack = 0
  6105  01854E  013B               	movlb	59	; () banked
  6106  018550  8DFC               	bsf	252,6,b	;volatile
  6107                           
  6108                           ; BSR set to: 59
  6109                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6110  018552  0012               	return		;funcret
  6111  018554                     __end_of_start_lcd:
  6112                           	opt callstack 0
  6113                           
  6114 ;; *************** function _ringBufS_flush *****************
  6115 ;; Defined at:
  6116 ;;		line 76 in file "ringbufs.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6119 ;;		 -> ring_buf1(67), 
  6120 ;;  clearBuffer     1  [STACK] const char 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1  [STACK] void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6127 ;; Tracked objects:
  6128 ;;		On entry : 3F/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6136 ;;Total ram usage:        0 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    7
  6139 ;; This function calls:
  6140 ;;		_memset
  6141 ;; This function is called by:
  6142 ;;		_eaDogM_WriteString
  6143 ;;		_send_lcd_cmd_dma
  6144 ;; This function uses a reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text29
  6148  017212                     __ptext29:
  6149                           	opt callstack 0
  6150  017212                     _ringBufS_flush:
  6151                           	opt callstack 20
  6152                           
  6153                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6154                           ;stkvar	__this @ sp[(0)+-2]
  6155                           
  6156                           ; BSR set to: 59
  6157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6158                           ;incstack = 0
  6159  017212  0EFE               	movlw	-2
  6160  017214  006F FF8C  F03F    	movff	plusw1,btemp+10
  6161  01721A  0EFF               	movlw	-1
  6162  01721C  006F FF8C  F040    	movff	plusw1,btemp+11
  6163  017222  0E42               	movlw	66
  6164  017224  243F               	addwf	(btemp+10)^0,w,c
  6165  017226  6ED9               	movwf	fsr2l,c
  6166  017228  0E00               	movlw	0
  6167  01722A  2040               	addwfc	(btemp+11)^0,w,c
  6168  01722C  6EDA               	movwf	fsr2h,c
  6169  01722E  0E00               	movlw	0
  6170  017230  6EDF               	movwf	indf2,c
  6171                           
  6172                           ;ringbufs.c: 79:  _this->head = 0;
  6173                           ;stkvar	__this @ sp[(0)+-2]
  6174  017232  0EFE               	movlw	-2
  6175  017234  006F FF8C  F03F    	movff	plusw1,btemp+10
  6176  01723A  0EFF               	movlw	-1
  6177  01723C  006F FF8C  F040    	movff	plusw1,btemp+11
  6178  017242  0E40               	movlw	64
  6179  017244  243F               	addwf	(btemp+10)^0,w,c
  6180  017246  6ED9               	movwf	fsr2l,c
  6181  017248  0E00               	movlw	0
  6182  01724A  2040               	addwfc	(btemp+11)^0,w,c
  6183  01724C  6EDA               	movwf	fsr2h,c
  6184  01724E  0E00               	movlw	0
  6185  017250  6EDF               	movwf	indf2,c
  6186                           
  6187                           ;ringbufs.c: 80:  _this->tail = 0;
  6188                           ;stkvar	__this @ sp[(0)+-2]
  6189  017252  0EFE               	movlw	-2
  6190  017254  006F FF8C  F03F    	movff	plusw1,btemp+10
  6191  01725A  0EFF               	movlw	-1
  6192  01725C  006F FF8C  F040    	movff	plusw1,btemp+11
  6193  017262  0E41               	movlw	65
  6194  017264  243F               	addwf	(btemp+10)^0,w,c
  6195  017266  6ED9               	movwf	fsr2l,c
  6196  017268  0E00               	movlw	0
  6197  01726A  2040               	addwfc	(btemp+11)^0,w,c
  6198  01726C  6EDA               	movwf	fsr2h,c
  6199  01726E  0E00               	movlw	0
  6200  017270  6EDF               	movwf	indf2,c
  6201                           
  6202                           ;ringbufs.c: 81:  if (clearBuffer) {
  6203                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6204  017272  0EFD               	movlw	-3
  6205  017274  50E3               	movf	plusw1,w,c
  6206  017276  B4D8               	btfsc	status,2,c
  6207  017278  D011               	goto	l1468
  6208                           
  6209                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6210  01727A  0E40               	movlw	64
  6211  01727C  6EE6               	movwf	postinc1,c
  6212  01727E  0E00               	movlw	0
  6213  017280  6EE6               	movwf	postinc1,c
  6214  017282  0E00               	movlw	0
  6215  017284  6EE6               	movwf	postinc1,c
  6216  017286  0E00               	movlw	0
  6217  017288  6EE6               	movwf	postinc1,c
  6218                           
  6219                           ;stkvar	__this @ sp[(-4)+-2]
  6220  01728A  0EFA               	movlw	-6
  6221  01728C  006F FF8F FFE6     	movff	plusw1,postinc1
  6222  017292  006F FF8F FFE6     	movff	plusw1,postinc1
  6223  017298  EC6E  F0A4         	call	_memset	;wreg free
  6224  01729C                     l1468:
  6225                           
  6226                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6227  01729C  52E5               	movf	postdec1,f,c
  6228  01729E  52E5               	movf	postdec1,f,c
  6229  0172A0  52E5               	movf	postdec1,f,c
  6230  0172A2  0012               	return		;funcret
  6231  0172A4                     __end_of_ringBufS_flush:
  6232                           	opt callstack 0
  6233                           
  6234 ;; *************** function _memset *****************
  6235 ;; Defined at:
  6236 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  dest            2  [STACK] PTR void 
  6239 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6240 ;;  c               2  [STACK] int 
  6241 ;;  n               2  [STACK] unsigned int 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  s               2  [STACK] PTR unsigned char 
  6244 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6245 ;;  k               2  [STACK] unsigned int 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  2  [STACK] PTR void 
  6248 ;; Registers used:
  6249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6259 ;;Total ram usage:        0 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    6
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_ringBufS_init
  6266 ;;		_ringBufS_flush
  6267 ;; This function uses a reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text30
  6271  0148DC                     __ptext30:
  6272                           	opt callstack 0
  6273  0148DC                     _memset:
  6274                           	opt callstack 0
  6275                           
  6276                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6277  0148DC  52E6               	movf	postinc1,f,c
  6278  0148DE  52E6               	movf	postinc1,f,c
  6279  0148E0  52E6               	movf	postinc1,f,c
  6280  0148E2  52E6               	movf	postinc1,f,c
  6281                           
  6282                           ;stkvar	_dest @ sp[(-4)+-2]
  6283                           
  6284                           ;incstack = 0
  6285  0148E4  0EFA               	movlw	-6
  6286  0148E6  006F FF8C  F03F    	movff	plusw1,btemp+10
  6287  0148EC  0EFB               	movlw	-5
  6288  0148EE  006F FF8C  F040    	movff	plusw1,btemp+11
  6289                           
  6290                           ;stkvar	_s @ sp[(-4)+0]
  6291  0148F4  0EFD               	movlw	-3
  6292  0148F6  0060  F103  FFE3   	movff	btemp+11,plusw1
  6293  0148FC  0EFC               	movlw	-4
  6294  0148FE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6295                           
  6296                           ;stkvar	_n @ sp[(-4)+-6]
  6297  014904  0EF6               	movlw	-10
  6298  014906  006F FF8C  F035    	movff	plusw1,btemp
  6299  01490C  0EF7               	movlw	-9
  6300  01490E  50E3               	movf	plusw1,w,c
  6301  014910  1035               	iorwf	btemp^0,w,c
  6302  014912  B4D8               	btfsc	status,2,c
  6303  014914  D154               	goto	u9830
  6304                           
  6305                           ;stkvar	_c @ sp[(-4)+-4]
  6306                           ;stkvar	_s @ sp[(-4)+0]
  6307  014916  0EFC               	movlw	-4
  6308  014918  006F FF8F FFD9     	movff	plusw1,fsr2l
  6309  01491E  0EFD               	movlw	-3
  6310  014920  006F FF8F FFDA     	movff	plusw1,fsr2h
  6311  014926  0EF8               	movlw	-8
  6312  014928  006F FF8F FFDF     	movff	plusw1,indf2
  6313                           
  6314                           ;stkvar	_c @ sp[(-4)+-4]
  6315                           ;stkvar	_n @ sp[(-4)+-6]
  6316                           ;stkvar	_s @ sp[(-4)+0]
  6317  01492E  0EFC               	movlw	-4
  6318  014930  006F FF8C  F03F    	movff	plusw1,btemp+10
  6319  014936  0EFD               	movlw	-3
  6320  014938  006F FF8C  F040    	movff	plusw1,btemp+11
  6321  01493E  0EF6               	movlw	-10
  6322  014940  50E3               	movf	plusw1,w,c
  6323  014942  263F               	addwf	(btemp+10)^0,f,c
  6324  014944  0EF7               	movlw	-9
  6325  014946  50E3               	movf	plusw1,w,c
  6326  014948  2240               	addwfc	(btemp+11)^0,f,c
  6327  01494A  0EFF               	movlw	255
  6328  01494C  243F               	addwf	(btemp+10)^0,w,c
  6329  01494E  6ED9               	movwf	fsr2l,c
  6330  014950  0EFF               	movlw	255
  6331  014952  2040               	addwfc	(btemp+11)^0,w,c
  6332  014954  6EDA               	movwf	fsr2h,c
  6333  014956  0EF8               	movlw	-8
  6334  014958  006F FF8F FFDF     	movff	plusw1,indf2
  6335                           
  6336                           ;stkvar	_n @ sp[(-4)+-6]
  6337  01495E  0EF7               	movlw	-9
  6338  014960  50E3               	movf	plusw1,w,c
  6339  014962  E108               	bnz	l9648
  6340  014964  0EF6               	movlw	-10
  6341  014966  006F FF8C  F035    	movff	plusw1,btemp
  6342  01496C  0E03               	movlw	3
  6343  01496E  5E35               	subwf	btemp^0,f,c
  6344  014970  A0D8               	btfss	status,0,c
  6345  014972  D125               	goto	u9830
  6346  014974                     l9648:
  6347                           
  6348                           ;stkvar	_c @ sp[(-4)+-4]
  6349                           ;stkvar	_s @ sp[(-4)+0]
  6350  014974  0EFC               	movlw	-4
  6351  014976  006F FF8C  F03F    	movff	plusw1,btemp+10
  6352  01497C  0EFD               	movlw	-3
  6353  01497E  006F FF8C  F040    	movff	plusw1,btemp+11
  6354  014984  0E01               	movlw	1
  6355  014986  243F               	addwf	(btemp+10)^0,w,c
  6356  014988  6ED9               	movwf	fsr2l,c
  6357  01498A  0E00               	movlw	0
  6358  01498C  2040               	addwfc	(btemp+11)^0,w,c
  6359  01498E  6EDA               	movwf	fsr2h,c
  6360  014990  0EF8               	movlw	-8
  6361  014992  006F FF8F FFDF     	movff	plusw1,indf2
  6362                           
  6363                           ;stkvar	_c @ sp[(-4)+-4]
  6364                           ;stkvar	_s @ sp[(-4)+0]
  6365  014998  0EFC               	movlw	-4
  6366  01499A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6367  0149A0  0EFD               	movlw	-3
  6368  0149A2  006F FF8C  F040    	movff	plusw1,btemp+11
  6369  0149A8  0E02               	movlw	2
  6370  0149AA  243F               	addwf	(btemp+10)^0,w,c
  6371  0149AC  6ED9               	movwf	fsr2l,c
  6372  0149AE  0E00               	movlw	0
  6373  0149B0  2040               	addwfc	(btemp+11)^0,w,c
  6374  0149B2  6EDA               	movwf	fsr2h,c
  6375  0149B4  0EF8               	movlw	-8
  6376  0149B6  006F FF8F FFDF     	movff	plusw1,indf2
  6377                           
  6378                           ;stkvar	_c @ sp[(-4)+-4]
  6379                           ;stkvar	_n @ sp[(-4)+-6]
  6380                           ;stkvar	_s @ sp[(-4)+0]
  6381  0149BC  0EFC               	movlw	-4
  6382  0149BE  006F FF8C  F03F    	movff	plusw1,btemp+10
  6383  0149C4  0EFD               	movlw	-3
  6384  0149C6  006F FF8C  F040    	movff	plusw1,btemp+11
  6385  0149CC  0EF6               	movlw	-10
  6386  0149CE  50E3               	movf	plusw1,w,c
  6387  0149D0  263F               	addwf	(btemp+10)^0,f,c
  6388  0149D2  0EF7               	movlw	-9
  6389  0149D4  50E3               	movf	plusw1,w,c
  6390  0149D6  2240               	addwfc	(btemp+11)^0,f,c
  6391  0149D8  0EFE               	movlw	254
  6392  0149DA  243F               	addwf	(btemp+10)^0,w,c
  6393  0149DC  6ED9               	movwf	fsr2l,c
  6394  0149DE  0EFF               	movlw	255
  6395  0149E0  2040               	addwfc	(btemp+11)^0,w,c
  6396  0149E2  6EDA               	movwf	fsr2h,c
  6397  0149E4  0EF8               	movlw	-8
  6398  0149E6  006F FF8F FFDF     	movff	plusw1,indf2
  6399                           
  6400                           ;stkvar	_c @ sp[(-4)+-4]
  6401                           ;stkvar	_n @ sp[(-4)+-6]
  6402                           ;stkvar	_s @ sp[(-4)+0]
  6403  0149EC  0EFC               	movlw	-4
  6404  0149EE  006F FF8C  F03F    	movff	plusw1,btemp+10
  6405  0149F4  0EFD               	movlw	-3
  6406  0149F6  006F FF8C  F040    	movff	plusw1,btemp+11
  6407  0149FC  0EF6               	movlw	-10
  6408  0149FE  50E3               	movf	plusw1,w,c
  6409  014A00  263F               	addwf	(btemp+10)^0,f,c
  6410  014A02  0EF7               	movlw	-9
  6411  014A04  50E3               	movf	plusw1,w,c
  6412  014A06  2240               	addwfc	(btemp+11)^0,f,c
  6413  014A08  0EFD               	movlw	253
  6414  014A0A  243F               	addwf	(btemp+10)^0,w,c
  6415  014A0C  6ED9               	movwf	fsr2l,c
  6416  014A0E  0EFF               	movlw	255
  6417  014A10  2040               	addwfc	(btemp+11)^0,w,c
  6418  014A12  6EDA               	movwf	fsr2h,c
  6419  014A14  0EF8               	movlw	-8
  6420  014A16  006F FF8F FFDF     	movff	plusw1,indf2
  6421                           
  6422                           ;stkvar	_n @ sp[(-4)+-6]
  6423  014A1C  0EF7               	movlw	-9
  6424  014A1E  50E3               	movf	plusw1,w,c
  6425  014A20  E108               	bnz	l9654
  6426  014A22  0EF6               	movlw	-10
  6427  014A24  006F FF8C  F035    	movff	plusw1,btemp
  6428  014A2A  0E07               	movlw	7
  6429  014A2C  5E35               	subwf	btemp^0,f,c
  6430  014A2E  A0D8               	btfss	status,0,c
  6431  014A30  D0C6               	goto	u9830
  6432  014A32                     l9654:
  6433                           
  6434                           ;stkvar	_c @ sp[(-4)+-4]
  6435                           ;stkvar	_s @ sp[(-4)+0]
  6436  014A32  0EFC               	movlw	-4
  6437  014A34  006F FF8C  F03F    	movff	plusw1,btemp+10
  6438  014A3A  0EFD               	movlw	-3
  6439  014A3C  006F FF8C  F040    	movff	plusw1,btemp+11
  6440  014A42  0E03               	movlw	3
  6441  014A44  243F               	addwf	(btemp+10)^0,w,c
  6442  014A46  6ED9               	movwf	fsr2l,c
  6443  014A48  0E00               	movlw	0
  6444  014A4A  2040               	addwfc	(btemp+11)^0,w,c
  6445  014A4C  6EDA               	movwf	fsr2h,c
  6446  014A4E  0EF8               	movlw	-8
  6447  014A50  006F FF8F FFDF     	movff	plusw1,indf2
  6448                           
  6449                           ;stkvar	_c @ sp[(-4)+-4]
  6450                           ;stkvar	_n @ sp[(-4)+-6]
  6451                           ;stkvar	_s @ sp[(-4)+0]
  6452  014A56  0EFC               	movlw	-4
  6453  014A58  006F FF8C  F03F    	movff	plusw1,btemp+10
  6454  014A5E  0EFD               	movlw	-3
  6455  014A60  006F FF8C  F040    	movff	plusw1,btemp+11
  6456  014A66  0EF6               	movlw	-10
  6457  014A68  50E3               	movf	plusw1,w,c
  6458  014A6A  263F               	addwf	(btemp+10)^0,f,c
  6459  014A6C  0EF7               	movlw	-9
  6460  014A6E  50E3               	movf	plusw1,w,c
  6461  014A70  2240               	addwfc	(btemp+11)^0,f,c
  6462  014A72  0EFC               	movlw	252
  6463  014A74  243F               	addwf	(btemp+10)^0,w,c
  6464  014A76  6ED9               	movwf	fsr2l,c
  6465  014A78  0EFF               	movlw	255
  6466  014A7A  2040               	addwfc	(btemp+11)^0,w,c
  6467  014A7C  6EDA               	movwf	fsr2h,c
  6468  014A7E  0EF8               	movlw	-8
  6469  014A80  006F FF8F FFDF     	movff	plusw1,indf2
  6470                           
  6471                           ;stkvar	_n @ sp[(-4)+-6]
  6472  014A86  0EF7               	movlw	-9
  6473  014A88  50E3               	movf	plusw1,w,c
  6474  014A8A  E108               	bnz	l9660
  6475  014A8C  0EF6               	movlw	-10
  6476  014A8E  006F FF8C  F035    	movff	plusw1,btemp
  6477  014A94  0E09               	movlw	9
  6478  014A96  5E35               	subwf	btemp^0,f,c
  6479  014A98  A0D8               	btfss	status,0,c
  6480  014A9A  D091               	goto	u9830
  6481  014A9C                     l9660:
  6482                           
  6483                           ;stkvar	_s @ sp[(-4)+0]
  6484  014A9C  0EFC               	movlw	-4
  6485  014A9E  006F FF8C  F03F    	movff	plusw1,btemp+10
  6486  014AA4  1E3F               	comf	(btemp+10)^0,f,c
  6487  014AA6  0EFD               	movlw	-3
  6488  014AA8  006F FF8C  F040    	movff	plusw1,btemp+11
  6489  014AAE  1E40               	comf	(btemp+11)^0,f,c
  6490  014AB0  2A3F               	incf	(btemp+10)^0,f,c
  6491  014AB2  B4D8               	btfsc	status,2,c
  6492  014AB4  2A40               	incf	(btemp+11)^0,f,c
  6493  014AB6  0E03               	movlw	3
  6494  014AB8  163F               	andwf	(btemp+10)^0,f,c
  6495  014ABA  0E00               	movlw	0
  6496  014ABC  1640               	andwf	(btemp+11)^0,f,c
  6497                           
  6498                           ;stkvar	_k @ sp[(-4)+2]
  6499  014ABE  0EFE               	movlw	-2
  6500  014AC0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6501  014AC6  0EFF               	movlw	-1
  6502  014AC8  0060  F103  FFE3   	movff	btemp+11,plusw1
  6503                           
  6504                           ;stkvar	_k @ sp[(-4)+2]
  6505                           ;stkvar	_s @ sp[(-4)+0]
  6506  014ACE  0EFC               	movlw	-4
  6507  014AD0  50E3               	movf	plusw1,w,c
  6508  014AD2  6E35               	movwf	btemp^0,c
  6509  014AD4  0EFE               	movlw	-2
  6510  014AD6  50E3               	movf	plusw1,w,c
  6511  014AD8  2635               	addwf	btemp^0,f,c
  6512  014ADA  0EFC               	movlw	-4
  6513  014ADC  0060  F0D7  FFE3   	movff	btemp,plusw1
  6514  014AE2  0EFD               	movlw	-3
  6515  014AE4  50E3               	movf	plusw1,w,c
  6516  014AE6  6E35               	movwf	btemp^0,c
  6517  014AE8  0EFF               	movlw	-1
  6518  014AEA  50E3               	movf	plusw1,w,c
  6519  014AEC  2235               	addwfc	btemp^0,f,c
  6520  014AEE  0EFD               	movlw	-3
  6521  014AF0  0060  F0D7  FFE3   	movff	btemp,plusw1
  6522                           
  6523                           ;stkvar	_k @ sp[(-4)+2]
  6524                           ;stkvar	_n @ sp[(-4)+-6]
  6525  014AF6  0EF6               	movlw	-10
  6526  014AF8  50E3               	movf	plusw1,w,c
  6527  014AFA  6E35               	movwf	btemp^0,c
  6528  014AFC  0EFE               	movlw	-2
  6529  014AFE  50E3               	movf	plusw1,w,c
  6530  014B00  5E35               	subwf	btemp^0,f,c
  6531  014B02  0EF6               	movlw	-10
  6532  014B04  0060  F0D7  FFE3   	movff	btemp,plusw1
  6533  014B0A  0EF7               	movlw	-9
  6534  014B0C  50E3               	movf	plusw1,w,c
  6535  014B0E  6E35               	movwf	btemp^0,c
  6536  014B10  0EFF               	movlw	-1
  6537  014B12  50E3               	movf	plusw1,w,c
  6538  014B14  5A35               	subwfb	btemp^0,f,c
  6539  014B16  0EF7               	movlw	-9
  6540  014B18  0060  F0D7  FFE3   	movff	btemp,plusw1
  6541  014B1E  0EFC               	movlw	252
  6542  014B20  6E3F               	movwf	(btemp+10)^0,c
  6543  014B22  0EFF               	movlw	255
  6544  014B24  6E40               	movwf	(btemp+11)^0,c
  6545                           
  6546                           ;stkvar	_n @ sp[(-4)+-6]
  6547  014B26  0EF6               	movlw	-10
  6548  014B28  006F FF8C  F035    	movff	plusw1,btemp
  6549  014B2E  503F               	movf	(btemp+10)^0,w,c
  6550  014B30  1635               	andwf	btemp^0,f,c
  6551  014B32  0EF6               	movlw	-10
  6552  014B34  0060  F0D7  FFE3   	movff	btemp,plusw1
  6553  014B3A  0EF7               	movlw	-9
  6554  014B3C  006F FF8C  F035    	movff	plusw1,btemp
  6555  014B42  5040               	movf	(btemp+11)^0,w,c
  6556  014B44  1635               	andwf	btemp^0,f,c
  6557  014B46  0EF7               	movlw	-9
  6558  014B48  D02E               	goto	L4
  6559  014B4A                     l9668:
  6560                           
  6561                           ;stkvar	_c @ sp[(-4)+-4]
  6562                           ;stkvar	_s @ sp[(-4)+0]
  6563  014B4A  0EFC               	movlw	-4
  6564  014B4C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6565  014B52  0EFD               	movlw	-3
  6566  014B54  006F FF8F FFDA     	movff	plusw1,fsr2h
  6567  014B5A  0EF8               	movlw	-8
  6568  014B5C  006F FF8F FFDF     	movff	plusw1,indf2
  6569                           
  6570                           ;stkvar	_n @ sp[(-4)+-6]
  6571  014B62  0EF6               	movlw	-10
  6572  014B64  006F FF8C  F035    	movff	plusw1,btemp
  6573  014B6A  0E01               	movlw	1
  6574  014B6C  5E35               	subwf	btemp^0,f,c
  6575  014B6E  0EF6               	movlw	-10
  6576  014B70  0060  F0D7  FFE3   	movff	btemp,plusw1
  6577  014B76  0EF7               	movlw	-9
  6578  014B78  006F FF8C  F035    	movff	plusw1,btemp
  6579  014B7E  0E00               	movlw	0
  6580  014B80  5A35               	subwfb	btemp^0,f,c
  6581  014B82  0EF7               	movlw	-9
  6582  014B84  0060  F0D7  FFE3   	movff	btemp,plusw1
  6583                           
  6584                           ;stkvar	_s @ sp[(-4)+0]
  6585  014B8A  0EFC               	movlw	-4
  6586  014B8C  50E3               	movf	plusw1,w,c
  6587  014B8E  0F01               	addlw	1
  6588  014B90  6E35               	movwf	btemp^0,c
  6589  014B92  0EFC               	movlw	-4
  6590  014B94  0060  F0D7  FFE3   	movff	btemp,plusw1
  6591  014B9A  6A35               	clrf	btemp^0,c
  6592  014B9C  0EFD               	movlw	-3
  6593  014B9E  50E3               	movf	plusw1,w,c
  6594  014BA0  2035               	addwfc	btemp^0,w,c
  6595  014BA2  6E35               	movwf	btemp^0,c
  6596  014BA4  0EFD               	movlw	-3
  6597  014BA6                     L4:
  6598  014BA6  0060  F0D7  FFE3   	movff	btemp,plusw1
  6599                           
  6600                           ;stkvar	_n @ sp[(-4)+-6]
  6601  014BAC  0EF6               	movlw	-10
  6602  014BAE  006F FF8C  F035    	movff	plusw1,btemp
  6603  014BB4  0EF7               	movlw	-9
  6604  014BB6  50E3               	movf	plusw1,w,c
  6605  014BB8  1035               	iorwf	btemp^0,w,c
  6606  014BBA  A4D8               	btfss	status,2,c
  6607  014BBC  D7C6               	goto	l9668
  6608  014BBE                     u9830:
  6609                           
  6610                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6611  014BBE  0EF6               	movlw	246
  6612  014BC0  26E1               	addwf	fsr1l,f,c
  6613  014BC2  0EFF               	movlw	255
  6614  014BC4  22E2               	addwfc	fsr1h,f,c
  6615  014BC6  0012               	return		;funcret
  6616  014BC8                     __end_of_memset:
  6617                           	opt callstack 0
  6618                           
  6619 ;; *************** function _printf *****************
  6620 ;; Defined at:
  6621 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  fmt             2  [STACK] PTR const unsigned char 
  6624 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  ap              2  [STACK] PTR void [1]
  6627 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6628 ;;  ret             2    0        int 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  2  [STACK] int 
  6631 ;; Registers used:
  6632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6633 ;; Tracked objects:
  6634 ;;		On entry : 3F/3B
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:   14
  6645 ;; This function calls:
  6646 ;;		_vfprintf
  6647 ;; This function is called by:
  6648 ;;		_eaDogM_WriteString
  6649 ;;		_send_lcd_cmd_dma
  6650 ;; This function uses a reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text31
  6654  017790                     __ptext31:
  6655                           	opt callstack 0
  6656  017790                     _printf:
  6657                           	opt callstack 0
  6658                           
  6659                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6660  017790  52E6               	movf	postinc1,f,c
  6661  017792  52E6               	movf	postinc1,f,c
  6662                           
  6663                           ;stkvar	?_printf @ sp[(-2)+-3]
  6664                           
  6665                           ;incstack = 0
  6666  017794  0EFB               	movlw	251
  6667  017796  24E1               	addwf	fsr1l,w,c
  6668  017798  6E3F               	movwf	(btemp+10)^0,c
  6669  01779A  0EFF               	movlw	255
  6670  01779C  20E2               	addwfc	fsr1h,w,c
  6671  01779E  6E40               	movwf	(btemp+11)^0,c
  6672                           
  6673                           ;stkvar	_ap @ sp[(-2)+0]
  6674  0177A0  0EFF               	movlw	-1
  6675  0177A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6676  0177A8  0EFE               	movlw	-2
  6677  0177AA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6678                           
  6679                           ;stkvar	_ap @ sp[(-2)+0]
  6680  0177B0  0EFE               	movlw	254
  6681  0177B2  24E1               	addwf	fsr1l,w,c
  6682  0177B4  6E35               	movwf	btemp^0,c
  6683  0177B6  0EFF               	movlw	255
  6684  0177B8  20E2               	addwfc	fsr1h,w,c
  6685  0177BA  6E36               	movwf	(btemp+1)^0,c
  6686  0177BC  0060  F0D7  FFE6   	movff	btemp,postinc1
  6687  0177C2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6688                           
  6689                           ;stkvar	_fmt @ sp[(-4)+-3]
  6690  0177C8  0EF9               	movlw	-7
  6691  0177CA  006F FF8F FFE6     	movff	plusw1,postinc1
  6692  0177D0  006F FF8F FFE6     	movff	plusw1,postinc1
  6693  0177D6  0E00               	movlw	0
  6694  0177D8  6EE6               	movwf	postinc1,c
  6695  0177DA  0E00               	movlw	0
  6696  0177DC  6EE6               	movwf	postinc1,c
  6697  0177DE  EC7A  F0B7         	call	_vfprintf	;wreg free
  6698                           
  6699                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6700  0177E2  52E5               	movf	postdec1,f,c
  6701  0177E4  52E5               	movf	postdec1,f,c
  6702  0177E6  52E5               	movf	postdec1,f,c
  6703  0177E8  50E7               	movf	indf1,w,c
  6704  0177EA  5EE1               	subwf	fsr1l,f,c
  6705  0177EC  0E00               	movlw	0
  6706  0177EE  5AE2               	subwfb	fsr1h,f,c
  6707  0177F0  0012               	return		;funcret
  6708  0177F2                     __end_of_printf:
  6709                           	opt callstack 0
  6710                           
  6711 ;; *************** function _vfprintf *****************
  6712 ;; Defined at:
  6713 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6716 ;;		 -> f(6), NULL(0), 
  6717 ;;  fmt             2  [STACK] PTR const unsigned char 
  6718 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6719 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6720 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6721 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6722 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6723 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6724 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6725 ;;  ap              2  [STACK] PTR PTR void 
  6726 ;;		 -> ap(2), ap(2), 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  cfmt            2  [STACK] PTR unsigned char 
  6729 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6730 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6731 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6732 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6733 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6734 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6735 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  2  [STACK] int 
  6738 ;; Registers used:
  6739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/4
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6749 ;;Total ram usage:        0 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:   13
  6752 ;; This function calls:
  6753 ;;		_vfpfcnvrt
  6754 ;; This function is called by:
  6755 ;;		_sprintf
  6756 ;;		_printf
  6757 ;; This function uses a reentrant model
  6758 ;;
  6759                           
  6760                           	psect	text32
  6761  016EF4                     __ptext32:
  6762                           	opt callstack 0
  6763  016EF4                     _vfprintf:
  6764                           	opt callstack 0
  6765                           
  6766                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6767  016EF4  52E6               	movf	postinc1,f,c
  6768  016EF6  52E6               	movf	postinc1,f,c
  6769                           
  6770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6771                           ;stkvar	_fmt @ sp[(-2)+-4]
  6772                           
  6773                           ;incstack = 0
  6774  016EF8  0EFA               	movlw	-6
  6775  016EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
  6776  016F00  0EFB               	movlw	-5
  6777  016F02  006F FF8C  F040    	movff	plusw1,btemp+11
  6778                           
  6779                           ;stkvar	_cfmt @ sp[(-2)+0]
  6780  016F08  0EFF               	movlw	-1
  6781  016F0A  0060  F103  FFE3   	movff	btemp+11,plusw1
  6782  016F10  0EFE               	movlw	-2
  6783  016F12  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6784                           
  6785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6786  016F18  6A1C               	clrf	_nout^0,c
  6787  016F1A  6A1D               	clrf	(_nout+1)^0,c
  6788                           
  6789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6790  016F1C  D020               	goto	l9682
  6791  016F1E                     l9680:
  6792                           
  6793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6794                           ;stkvar	_ap @ sp[(-2)+-6]
  6795  016F1E  0EF8               	movlw	-8
  6796  016F20  006F FF8F FFE6     	movff	plusw1,postinc1
  6797  016F26  006F FF8F FFE6     	movff	plusw1,postinc1
  6798                           
  6799                           ;stkvar	_cfmt @ sp[(-4)+0]
  6800  016F2C  0EFC               	movlw	252
  6801  016F2E  24E1               	addwf	fsr1l,w,c
  6802  016F30  6E35               	movwf	btemp^0,c
  6803  016F32  0EFF               	movlw	255
  6804  016F34  20E2               	addwfc	fsr1h,w,c
  6805  016F36  6E36               	movwf	(btemp+1)^0,c
  6806  016F38  0060  F0D7  FFE6   	movff	btemp,postinc1
  6807  016F3E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6808                           
  6809                           ;stkvar	_fp @ sp[(-6)+-2]
  6810  016F44  0EF8               	movlw	-8
  6811  016F46  006F FF8F FFE6     	movff	plusw1,postinc1
  6812  016F4C  006F FF8F FFE6     	movff	plusw1,postinc1
  6813  016F52  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6814  016F56  5035               	movf	btemp^0,w,c
  6815  016F58  261C               	addwf	_nout^0,f,c
  6816  016F5A  5036               	movf	(btemp+1)^0,w,c
  6817  016F5C  221D               	addwfc	(_nout+1)^0,f,c
  6818  016F5E                     l9682:
  6819                           
  6820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6821                           ;stkvar	_cfmt @ sp[(-2)+0]
  6822  016F5E  50E1               	movf	fsr1l,w,c
  6823  016F60  0FFE               	addlw	-2
  6824  016F62  6ED9               	movwf	fsr2l,c
  6825  016F64  50E2               	movf	fsr1h,w,c
  6826  016F66  6EDA               	movwf	fsr2h,c
  6827  016F68  0EFF               	movlw	255
  6828  016F6A  22DA               	addwfc	fsr2h,f,c
  6829  016F6C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6830  016F72  006F FF77 FFF7     	movff	postdec2,tblptrh
  6831  016F78                     	if	0	;tblptru may be non-zero
  6832  016F78                     	endif
  6833  016F78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6834  016F78  0E00               	movlw	low (__mediumconst shr (0+16))
  6835  016F7A  6EF8               	movwf	tblptru,c
  6836  016F7C                     	endif
  6837  016F7C  0008               	tblrd		*
  6838  016F7E  50F5               	movf	tablat,w,c
  6839  016F80  0900               	iorlw	0
  6840  016F82  A4D8               	btfss	status,2,c
  6841  016F84  D7CC               	goto	l9680
  6842                           
  6843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6844  016F86  0060  F070  F035   	movff	_nout,btemp
  6845  016F8C  0060  F074  F036   	movff	_nout+1,btemp+1
  6846                           
  6847                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6848  016F92  0EF8               	movlw	248
  6849  016F94  26E1               	addwf	fsr1l,f,c
  6850  016F96  0EFF               	movlw	255
  6851  016F98  22E2               	addwfc	fsr1h,f,c
  6852  016F9A  0012               	return		;funcret
  6853  016F9C                     __end_of_vfprintf:
  6854                           	opt callstack 0
  6855                           
  6856 ;; *************** function _vfpfcnvrt *****************
  6857 ;; Defined at:
  6858 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6861 ;;		 -> f(6), NULL(0), 
  6862 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6863 ;;		 -> cfmt(2), 
  6864 ;;  ap              2  [STACK] PTR PTR void 
  6865 ;;		 -> ap(2), ap(2), 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  llu             8  [STACK] unsigned long long 
  6868 ;;  ll              8  [STACK] long long 
  6869 ;;  f               4  [STACK] long long 
  6870 ;;  ct              3  [STACK] unsigned char [3]
  6871 ;;  vp              3    0        PTR void 
  6872 ;;  cp              2  [STACK] PTR unsigned char 
  6873 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  6874 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6875 ;;		 -> STR_3(4), V(189), 
  6876 ;;  i               2    0        int 
  6877 ;;  done            2    0        int 
  6878 ;;  c               1  [STACK] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  2  [STACK] int 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/4
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6892 ;;Total ram usage:        0 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:   12
  6895 ;; This function calls:
  6896 ;;		_atoi
  6897 ;;		_ctoa
  6898 ;;		_dtoa
  6899 ;;		_efgtoa
  6900 ;;		_fputc
  6901 ;;		_isdigit
  6902 ;;		_isupper
  6903 ;;		_stoa
  6904 ;;		_strncmp
  6905 ;;		_tolower
  6906 ;;		_xtoa
  6907 ;; This function is called by:
  6908 ;;		_vfprintf
  6909 ;; This function uses a reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text33
  6913  011244                     __ptext33:
  6914                           	opt callstack 0
  6915  011244                     _vfpfcnvrt:
  6916                           	opt callstack 0
  6917                           
  6918                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6919  011244  0E20               	movlw	32
  6920  011246  26E1               	addwf	fsr1l,f,c
  6921  011248  0E00               	movlw	0
  6922  01124A  22E2               	addwfc	fsr1h,f,c
  6923                           
  6924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6925                           ;stkvar	_fmt @ sp[(-32)+-4]
  6926                           
  6927                           ;incstack = 0
  6928  01124C  0EDC               	movlw	-36
  6929  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6930  011254  0EDD               	movlw	-35
  6931  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  6932  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6933  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  6934  011268                     	if	0	;tblptru may be non-zero
  6935  011268                     	endif
  6936  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6937  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  6938  01126A  6EF8               	movwf	tblptru,c
  6939  01126C                     	endif
  6940  01126C  0008               	tblrd		*
  6941  01126E  50F5               	movf	tablat,w,c
  6942  011270  0A25               	xorlw	37
  6943  011272  A4D8               	btfss	status,2,c
  6944  011274  EF92  F08E         	goto	l9626
  6945                           
  6946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6947                           ;stkvar	_fmt @ sp[(-32)+-4]
  6948  011278  0EDC               	movlw	-36
  6949  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6950  011280  0EDD               	movlw	-35
  6951  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  6952  011288  2ADE               	incf	postinc2,f,c
  6953  01128A  0E00               	movlw	0
  6954  01128C  22DD               	addwfc	postdec2,f,c
  6955                           
  6956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6957  01128E  6A1E               	clrf	_width^0,c
  6958  011290  6A1F               	clrf	(_width+1)^0,c
  6959  011292  6A22               	clrf	_flags^0,c
  6960  011294  6A23               	clrf	(_flags+1)^0,c
  6961                           
  6962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6963  011296  6820               	setf	_prec^0,c
  6964  011298  6821               	setf	(_prec+1)^0,c
  6965                           
  6966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6967                           ;stkvar	_fmt @ sp[(-32)+-4]
  6968  01129A  0EDC               	movlw	-36
  6969  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6970  0112A2  0EDD               	movlw	-35
  6971  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6972  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  6973  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  6974  0112B6                     	if	0	;tblptru may be non-zero
  6975  0112B6                     	endif
  6976  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6977  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6978  0112B8  6EF8               	movwf	tblptru,c
  6979  0112BA                     	endif
  6980  0112BA  0008               	tblrd		*
  6981  0112BC  50F5               	movf	tablat,w,c
  6982  0112BE  0A2A               	xorlw	42
  6983  0112C0  A4D8               	btfss	status,2,c
  6984  0112C2  D031               	goto	l9490
  6985                           
  6986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6987                           ;stkvar	_fmt @ sp[(-32)+-4]
  6988  0112C4  0EDC               	movlw	-36
  6989  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6990  0112CC  0EDD               	movlw	-35
  6991  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6992  0112D4  2ADE               	incf	postinc2,f,c
  6993  0112D6  0E00               	movlw	0
  6994  0112D8  22DD               	addwfc	postdec2,f,c
  6995                           
  6996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6997                           ;stkvar	_ap @ sp[(-32)+-6]
  6998  0112DA  0EDA               	movlw	-38
  6999  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7000  0112E2  0EDB               	movlw	-37
  7001  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7002  0112EA  0E02               	movlw	2
  7003  0112EC  5EDE               	subwf	postinc2,f,c
  7004  0112EE  0E00               	movlw	0
  7005  0112F0  5ADD               	subwfb	postdec2,f,c
  7006  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  7007  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  7008  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7009  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7010  01130A  006F FF78  F01E    	movff	postinc2,_width
  7011  011310  006F FF74  F01F    	movff	postdec2,_width+1
  7012                           
  7013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7014  011316  AE1F               	btfss	(_width+1)^0,7,c
  7015  011318  D066               	goto	u9590
  7016                           
  7017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7018  01131A  8022               	bsf	_flags^0,0,c
  7019                           
  7020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7021  01131C  6C1E               	negf	_width^0,c
  7022  01131E  1E1F               	comf	(_width+1)^0,f,c
  7023  011320  B0D8               	btfsc	status,0,c
  7024  011322  2A1F               	incf	(_width+1)^0,f,c
  7025  011324  D060               	goto	u9590
  7026  011326                     l9490:
  7027                           
  7028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7029                           ;stkvar	_fmt @ sp[(-32)+-4]
  7030  011326  0EDC               	movlw	-36
  7031  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7032  01132E  0EDD               	movlw	-35
  7033  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7034  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  7035  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  7036  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7037  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  7038  01134E  EC83  F0A8         	call	_atoi	;wreg free
  7039  011352  0060  F0D4  F01E   	movff	btemp,_width
  7040  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  7041                           
  7042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7043  01135E  D00B               	goto	l9494
  7044  011360                     l9492:
  7045                           
  7046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7047                           ;stkvar	_fmt @ sp[(-32)+-4]
  7048  011360  0EDC               	movlw	-36
  7049  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7050  011368  0EDD               	movlw	-35
  7051  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7052  011370  2ADE               	incf	postinc2,f,c
  7053  011372  0E00               	movlw	0
  7054  011374  22DD               	addwfc	postdec2,f,c
  7055  011376                     l9494:
  7056  011376  0ED0               	movlw	208
  7057  011378  6E3F               	movwf	(btemp+10)^0,c
  7058  01137A  0EFF               	movlw	255
  7059  01137C  6E40               	movwf	(btemp+11)^0,c
  7060                           
  7061                           ;stkvar	_fmt @ sp[(-32)+-4]
  7062  01137E  0EDC               	movlw	-36
  7063  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7064  011386  0EDD               	movlw	-35
  7065  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7066  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7067  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7068  01139A                     	if	0	;tblptru may be non-zero
  7069  01139A                     	endif
  7070  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7071  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7072  01139C  6EF8               	movwf	tblptru,c
  7073  01139E                     	endif
  7074  01139E  0008               	tblrd		*
  7075  0113A0  50F5               	movf	tablat,w,c
  7076  0113A2  6E3D               	movwf	(btemp+8)^0,c
  7077  0113A4  6A3E               	clrf	(btemp+9)^0,c
  7078  0113A6  503F               	movf	(btemp+10)^0,w,c
  7079  0113A8  263D               	addwf	(btemp+8)^0,f,c
  7080  0113AA  5040               	movf	(btemp+11)^0,w,c
  7081  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  7082  0113AE  503E               	movf	(btemp+9)^0,w,c
  7083  0113B0  E106               	bnz	u9570
  7084  0113B2  0E0A               	movlw	10
  7085  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  7086  0113B6  B0D8               	btfsc	status,0,c
  7087  0113B8  D002               	goto	u9570
  7088  0113BA  0E01               	movlw	1
  7089  0113BC  D001               	goto	u9580
  7090  0113BE                     u9570:
  7091  0113BE  0E00               	movlw	0
  7092  0113C0                     u9580:
  7093  0113C0  6E3F               	movwf	(btemp+10)^0,c
  7094  0113C2  6A40               	clrf	(btemp+11)^0,c
  7095                           
  7096                           ;stkvar	_vfpfcnvrt$4155 @ sp[(-32)+4]
  7097  0113C4  0EE4               	movlw	-28
  7098  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7099  0113CC  0EE5               	movlw	-27
  7100  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7101                           
  7102                           ;stkvar	_vfpfcnvrt$4155 @ sp[(-32)+4]
  7103  0113D4  0EE4               	movlw	-28
  7104  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  7105  0113DC  0EE5               	movlw	-27
  7106  0113DE  50E3               	movf	plusw1,w,c
  7107  0113E0  1035               	iorwf	btemp^0,w,c
  7108  0113E2  A4D8               	btfss	status,2,c
  7109  0113E4  D7BD               	goto	l9492
  7110  0113E6                     u9590:
  7111                           
  7112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7113                           ;stkvar	_fmt @ sp[(-32)+-4]
  7114  0113E6  0EDC               	movlw	-36
  7115  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7116  0113EE  0EDD               	movlw	-35
  7117  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7118  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7119  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7120  011402                     	if	0	;tblptru may be non-zero
  7121  011402                     	endif
  7122  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7123  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7124  011404  6EF8               	movwf	tblptru,c
  7125  011406                     	endif
  7126  011406  0008               	tblrd		*
  7127  011408  50F5               	movf	tablat,w,c
  7128  01140A  0A2E               	xorlw	46
  7129  01140C  A4D8               	btfss	status,2,c
  7130  01140E  D0AC               	goto	u9640
  7131                           
  7132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7133  011410  6A20               	clrf	_prec^0,c
  7134  011412  6A21               	clrf	(_prec+1)^0,c
  7135                           
  7136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7137                           ;stkvar	_fmt @ sp[(-32)+-4]
  7138  011414  0EDC               	movlw	-36
  7139  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7140  01141C  0EDD               	movlw	-35
  7141  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7142  011424  2ADE               	incf	postinc2,f,c
  7143  011426  0E00               	movlw	0
  7144  011428  22DD               	addwfc	postdec2,f,c
  7145                           
  7146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7147                           ;stkvar	_fmt @ sp[(-32)+-4]
  7148  01142A  0EDC               	movlw	-36
  7149  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7150  011432  0EDD               	movlw	-35
  7151  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7152  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7153  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7154  011446                     	if	0	;tblptru may be non-zero
  7155  011446                     	endif
  7156  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7157  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7158  011448  6EF8               	movwf	tblptru,c
  7159  01144A                     	endif
  7160  01144A  0008               	tblrd		*
  7161  01144C  50F5               	movf	tablat,w,c
  7162  01144E  0A2A               	xorlw	42
  7163  011450  A4D8               	btfss	status,2,c
  7164  011452  D02A               	goto	l9512
  7165                           
  7166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7167                           ;stkvar	_fmt @ sp[(-32)+-4]
  7168  011454  0EDC               	movlw	-36
  7169  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7170  01145C  0EDD               	movlw	-35
  7171  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7172  011464  2ADE               	incf	postinc2,f,c
  7173  011466  0E00               	movlw	0
  7174  011468  22DD               	addwfc	postdec2,f,c
  7175                           
  7176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7177                           ;stkvar	_ap @ sp[(-32)+-6]
  7178  01146A  0EDA               	movlw	-38
  7179  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7180  011472  0EDB               	movlw	-37
  7181  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7182  01147A  0E02               	movlw	2
  7183  01147C  5EDE               	subwf	postinc2,f,c
  7184  01147E  0E00               	movlw	0
  7185  011480  5ADD               	subwfb	postdec2,f,c
  7186  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  7187  011488  006F FF74  F040    	movff	postdec2,btemp+11
  7188  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7189  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7190  01149A  006F FF78  F020    	movff	postinc2,_prec
  7191  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  7192                           
  7193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7194  0114A6  D060               	goto	u9640
  7195  0114A8                     l9512:
  7196                           
  7197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7198                           ;stkvar	_fmt @ sp[(-32)+-4]
  7199  0114A8  0EDC               	movlw	-36
  7200  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7201  0114B0  0EDD               	movlw	-35
  7202  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7203  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  7204  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  7205  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7206  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7207  0114D0  EC83  F0A8         	call	_atoi	;wreg free
  7208  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  7209  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  7210                           
  7211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7212  0114E0  D00B               	goto	l9516
  7213  0114E2                     l9514:
  7214                           
  7215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7216                           ;stkvar	_fmt @ sp[(-32)+-4]
  7217  0114E2  0EDC               	movlw	-36
  7218  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7219  0114EA  0EDD               	movlw	-35
  7220  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7221  0114F2  2ADE               	incf	postinc2,f,c
  7222  0114F4  0E00               	movlw	0
  7223  0114F6  22DD               	addwfc	postdec2,f,c
  7224  0114F8                     l9516:
  7225  0114F8  0ED0               	movlw	208
  7226  0114FA  6E3F               	movwf	(btemp+10)^0,c
  7227  0114FC  0EFF               	movlw	255
  7228  0114FE  6E40               	movwf	(btemp+11)^0,c
  7229                           
  7230                           ;stkvar	_fmt @ sp[(-32)+-4]
  7231  011500  0EDC               	movlw	-36
  7232  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7233  011508  0EDD               	movlw	-35
  7234  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7235  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7236  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7237  01151C                     	if	0	;tblptru may be non-zero
  7238  01151C                     	endif
  7239  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7240  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7241  01151E  6EF8               	movwf	tblptru,c
  7242  011520                     	endif
  7243  011520  0008               	tblrd		*
  7244  011522  50F5               	movf	tablat,w,c
  7245  011524  6E3D               	movwf	(btemp+8)^0,c
  7246  011526  6A3E               	clrf	(btemp+9)^0,c
  7247  011528  503F               	movf	(btemp+10)^0,w,c
  7248  01152A  263D               	addwf	(btemp+8)^0,f,c
  7249  01152C  5040               	movf	(btemp+11)^0,w,c
  7250  01152E  223E               	addwfc	(btemp+9)^0,f,c
  7251  011530  503E               	movf	(btemp+9)^0,w,c
  7252  011532  E106               	bnz	u9620
  7253  011534  0E0A               	movlw	10
  7254  011536  5C3D               	subwf	(btemp+8)^0,w,c
  7255  011538  B0D8               	btfsc	status,0,c
  7256  01153A  D002               	goto	u9620
  7257  01153C  0E01               	movlw	1
  7258  01153E  D001               	goto	u9630
  7259  011540                     u9620:
  7260  011540  0E00               	movlw	0
  7261  011542                     u9630:
  7262  011542  6E3F               	movwf	(btemp+10)^0,c
  7263  011544  6A40               	clrf	(btemp+11)^0,c
  7264                           
  7265                           ;stkvar	_vfpfcnvrt$4156 @ sp[(-32)+0]
  7266  011546  0EE0               	movlw	-32
  7267  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7268  01154E  0EE1               	movlw	-31
  7269  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  7270                           
  7271                           ;stkvar	_vfpfcnvrt$4156 @ sp[(-32)+0]
  7272  011556  0EE0               	movlw	-32
  7273  011558  006F FF8C  F035    	movff	plusw1,btemp
  7274  01155E  0EE1               	movlw	-31
  7275  011560  50E3               	movf	plusw1,w,c
  7276  011562  1035               	iorwf	btemp^0,w,c
  7277  011564  A4D8               	btfss	status,2,c
  7278  011566  D7BD               	goto	l9514
  7279  011568                     u9640:
  7280                           
  7281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7282                           ;stkvar	_fmt @ sp[(-32)+-4]
  7283  011568  0EDC               	movlw	-36
  7284  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7285  011570  0EDD               	movlw	-35
  7286  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7287  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7288  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7289  011584                     	if	0	;tblptru may be non-zero
  7290  011584                     	endif
  7291  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7292  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7293  011586  6EF8               	movwf	tblptru,c
  7294  011588                     	endif
  7295  011588  0008               	tblrd		*
  7296  01158A  50F5               	movf	tablat,w,c
  7297  01158C  6EE6               	movwf	postinc1,c
  7298  01158E  0E00               	movlw	0
  7299  011590  6EE6               	movwf	postinc1,c
  7300  011592  EC20  F0BA         	call	_tolower	;wreg free
  7301                           
  7302                           ;stkvar	_ct @ sp[(-32)+26]
  7303  011596  0EFA               	movlw	-6
  7304  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  7305                           
  7306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7307                           ;stkvar	_ct @ sp[(-32)+26]
  7308  01159E  0EFA               	movlw	-6
  7309  0115A0  50E3               	movf	plusw1,w,c
  7310  0115A2  B4D8               	btfsc	status,2,c
  7311  0115A4  D05B               	goto	l9532
  7312                           
  7313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7314                           ;stkvar	_ct @ sp[(-32)+26]
  7315  0115A6  0EFB               	movlw	251
  7316  0115A8  24E1               	addwf	fsr1l,w,c
  7317  0115AA  6ED9               	movwf	fsr2l,c
  7318  0115AC  0EFF               	movlw	255
  7319  0115AE  20E2               	addwfc	fsr1h,w,c
  7320  0115B0  6EDA               	movwf	fsr2h,c
  7321                           
  7322                           ;stkvar	_fmt @ sp[(-32)+-4]
  7323  0115B2  0EDC               	movlw	-36
  7324  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7325  0115BA  0EDD               	movlw	-35
  7326  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7327  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  7328  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  7329  0115CE  0E01               	movlw	1
  7330  0115D0  263F               	addwf	(btemp+10)^0,f,c
  7331  0115D2  0E00               	movlw	0
  7332  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  7333  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7334  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7335  0115E2                     	if	0	;tblptru may be non-zero
  7336  0115E2                     	endif
  7337  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7338  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7339  0115E4  6EF8               	movwf	tblptru,c
  7340  0115E6                     	endif
  7341  0115E6  0008               	tblrd		*
  7342  0115E8  50F5               	movf	tablat,w,c
  7343  0115EA  6EE6               	movwf	postinc1,c
  7344  0115EC  0E00               	movlw	0
  7345  0115EE  6EE6               	movwf	postinc1,c
  7346  0115F0  EC20  F0BA         	call	_tolower	;wreg free
  7347  0115F4  5035               	movf	btemp^0,w,c
  7348  0115F6  6EDF               	movwf	indf2,c
  7349                           
  7350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7351                           ;stkvar	_ct @ sp[(-32)+26]
  7352  0115F8  0EFB               	movlw	251
  7353  0115FA  24E1               	addwf	fsr1l,w,c
  7354  0115FC  6ED9               	movwf	fsr2l,c
  7355  0115FE  0EFF               	movlw	255
  7356  011600  20E2               	addwfc	fsr1h,w,c
  7357  011602  6EDA               	movwf	fsr2h,c
  7358  011604  50DF               	movf	indf2,w,c
  7359  011606  B4D8               	btfsc	status,2,c
  7360  011608  D029               	goto	l9532
  7361                           
  7362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7363                           ;stkvar	_ct @ sp[(-32)+26]
  7364  01160A  0EFC               	movlw	252
  7365  01160C  24E1               	addwf	fsr1l,w,c
  7366  01160E  6ED9               	movwf	fsr2l,c
  7367  011610  0EFF               	movlw	255
  7368  011612  20E2               	addwfc	fsr1h,w,c
  7369  011614  6EDA               	movwf	fsr2h,c
  7370                           
  7371                           ;stkvar	_fmt @ sp[(-32)+-4]
  7372  011616  0EDC               	movlw	-36
  7373  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7374  01161E  0EDD               	movlw	-35
  7375  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7376  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  7377  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  7378  011632  0E02               	movlw	2
  7379  011634  263F               	addwf	(btemp+10)^0,f,c
  7380  011636  0E00               	movlw	0
  7381  011638  2240               	addwfc	(btemp+11)^0,f,c
  7382  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7383  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7384  011646                     	if	0	;tblptru may be non-zero
  7385  011646                     	endif
  7386  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7387  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7388  011648  6EF8               	movwf	tblptru,c
  7389  01164A                     	endif
  7390  01164A  0008               	tblrd		*
  7391  01164C  50F5               	movf	tablat,w,c
  7392  01164E  6EE6               	movwf	postinc1,c
  7393  011650  0E00               	movlw	0
  7394  011652  6EE6               	movwf	postinc1,c
  7395  011654  EC20  F0BA         	call	_tolower	;wreg free
  7396  011658  5035               	movf	btemp^0,w,c
  7397  01165A  6EDF               	movwf	indf2,c
  7398  01165C                     l9532:
  7399                           
  7400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7401                           ;stkvar	_fmt @ sp[(-32)+-4]
  7402  01165C  0EDC               	movlw	-36
  7403  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7404  011664  0EDD               	movlw	-35
  7405  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7406  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7407  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7408  011678                     	if	0	;tblptru may be non-zero
  7409  011678                     	endif
  7410  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7411  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7412  01167A  6EF8               	movwf	tblptru,c
  7413  01167C                     	endif
  7414  01167C  0008               	tblrd		*
  7415  01167E  50F5               	movf	tablat,w,c
  7416  011680  0A63               	xorlw	99
  7417  011682  A4D8               	btfss	status,2,c
  7418  011684  D036               	goto	l9542
  7419                           
  7420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7421                           ;stkvar	_fmt @ sp[(-32)+-4]
  7422  011686  0EDC               	movlw	-36
  7423  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7424  01168E  0EDD               	movlw	-35
  7425  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7426  011696  2ADE               	incf	postinc2,f,c
  7427  011698  0E00               	movlw	0
  7428  01169A  22DD               	addwfc	postdec2,f,c
  7429                           
  7430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7431                           ;stkvar	_ap @ sp[(-32)+-6]
  7432  01169C  0EDA               	movlw	-38
  7433  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7434  0116A4  0EDB               	movlw	-37
  7435  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7436  0116AC  0E02               	movlw	2
  7437  0116AE  5EDE               	subwf	postinc2,f,c
  7438  0116B0  0E00               	movlw	0
  7439  0116B2  5ADD               	subwfb	postdec2,f,c
  7440  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  7441  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  7442  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7443  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7444  0116CC  50DF               	movf	indf2,w,c
  7445  0116CE  6E40               	movwf	(btemp+11)^0,c
  7446                           
  7447                           ;stkvar	_c @ sp[(-32)+31]
  7448  0116D0  0EFF               	movlw	-1
  7449  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7450                           
  7451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7452                           ;stkvar	_c @ sp[(-32)+31]
  7453  0116D8  0EFF               	movlw	-1
  7454  0116DA  50E3               	movf	plusw1,w,c
  7455  0116DC  6EE6               	movwf	postinc1,c
  7456                           
  7457                           ;stkvar	_fp @ sp[(-33)+-2]
  7458  0116DE  0EDD               	movlw	-35
  7459  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7460  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7461  0116EC  EC9A  F0B9         	call	_ctoa	;wreg free
  7462  0116F0  D343               	goto	l1946
  7463  0116F2                     l9542:
  7464                           
  7465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7466                           ;stkvar	_fmt @ sp[(-32)+-4]
  7467  0116F2  0EDC               	movlw	-36
  7468  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7469  0116FA  0EDD               	movlw	-35
  7470  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7471  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7472  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7473  01170E                     	if	0	;tblptru may be non-zero
  7474  01170E                     	endif
  7475  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7476  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7477  011710  6EF8               	movwf	tblptru,c
  7478  011712                     	endif
  7479  011712  0008               	tblrd		*
  7480  011714  50F5               	movf	tablat,w,c
  7481  011716  0A64               	xorlw	100
  7482  011718  B4D8               	btfsc	status,2,c
  7483  01171A  D015               	goto	u9690
  7484                           
  7485                           ;stkvar	_fmt @ sp[(-32)+-4]
  7486  01171C  0EDC               	movlw	-36
  7487  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7488  011724  0EDD               	movlw	-35
  7489  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7490  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7491  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7492  011738                     	if	0	;tblptru may be non-zero
  7493  011738                     	endif
  7494  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7495  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7496  01173A  6EF8               	movwf	tblptru,c
  7497  01173C                     	endif
  7498  01173C  0008               	tblrd		*
  7499  01173E  50F5               	movf	tablat,w,c
  7500  011740  0A69               	xorlw	105
  7501  011742  A4D8               	btfss	status,2,c
  7502  011744  D075               	goto	l9554
  7503  011746                     u9690:
  7504                           
  7505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7506                           ;stkvar	_fmt @ sp[(-32)+-4]
  7507  011746  0EDC               	movlw	-36
  7508  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7509  01174E  0EDD               	movlw	-35
  7510  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7511  011756  2ADE               	incf	postinc2,f,c
  7512  011758  0E00               	movlw	0
  7513  01175A  22DD               	addwfc	postdec2,f,c
  7514                           
  7515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7516                           ;stkvar	_ap @ sp[(-32)+-6]
  7517  01175C  0EDA               	movlw	-38
  7518  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7519  011764  0EDB               	movlw	-37
  7520  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7521  01176C  0E02               	movlw	2
  7522  01176E  5EDE               	subwf	postinc2,f,c
  7523  011770  0E00               	movlw	0
  7524  011772  5ADD               	subwfb	postdec2,f,c
  7525  011774  006F FF78  F03F    	movff	postinc2,btemp+10
  7526  01177A  006F FF74  F040    	movff	postdec2,btemp+11
  7527  011780  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7528  011786  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7529  01178C  006F FF78  F03F    	movff	postinc2,btemp+10
  7530  011792  006F FF74  F040    	movff	postdec2,btemp+11
  7531                           
  7532                           ;stkvar	_ll @ sp[(-32)+14]
  7533  011798  0EEE               	movlw	-18
  7534  01179A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7535  0117A0  0EEF               	movlw	-17
  7536  0117A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7537  0117A8  6A35               	clrf	btemp^0,c
  7538  0117AA  BEE3               	btfsc	plusw1,7,c
  7539  0117AC  6835               	setf	btemp^0,c
  7540  0117AE  0EF0               	movlw	-16
  7541  0117B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7542  0117B6  0EF1               	movlw	-15
  7543  0117B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7544  0117BE  0EF2               	movlw	-14
  7545  0117C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7546  0117C6  0EF3               	movlw	-13
  7547  0117C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7548  0117CE  0EF4               	movlw	-12
  7549  0117D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7550  0117D6  0EF5               	movlw	-11
  7551  0117D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7552                           
  7553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7554                           ;stkvar	_ll @ sp[(-32)+14]
  7555  0117DE  50E1               	movf	fsr1l,w,c
  7556  0117E0  0FEE               	addlw	-18
  7557  0117E2  6ED9               	movwf	fsr2l,c
  7558  0117E4  50E2               	movf	fsr1h,w,c
  7559  0117E6  6EDA               	movwf	fsr2h,c
  7560  0117E8  0EFF               	movlw	255
  7561  0117EA  22DA               	addwfc	fsr2h,f,c
  7562  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7563  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7564  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7565  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7566  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7567  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7568  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7569  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7570                           
  7571                           ;stkvar	_fp @ sp[(-40)+-2]
  7572  01181C  0ED6               	movlw	-42
  7573  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7574  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7575  01182A  EC94  F09C         	call	_dtoa	;wreg free
  7576  01182E  D2A4               	goto	l1946
  7577  011830                     l9554:
  7578                           
  7579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7580                           ;stkvar	_ct @ sp[(-32)+26]
  7581  011830  0EFA               	movlw	-6
  7582  011832  006F FF8C  F035    	movff	plusw1,btemp
  7583  011838  0E66               	movlw	102
  7584  01183A  1835               	xorwf	btemp^0,w,c
  7585  01183C  A4D8               	btfss	status,2,c
  7586  01183E  D06E               	goto	l9566
  7587                           
  7588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7589                           ;stkvar	_fmt @ sp[(-32)+-4]
  7590  011840  0EDC               	movlw	-36
  7591  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7592  011848  0EDD               	movlw	-35
  7593  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7594  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7595  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7596  01185C                     	if	0	;tblptru may be non-zero
  7597  01185C                     	endif
  7598  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7599  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7600  01185E  6EF8               	movwf	tblptru,c
  7601  011860                     	endif
  7602                           
  7603                           ;stkvar	_c @ sp[(-32)+31]
  7604  011860  0008               	tblrd		*
  7605  011862  0EFF               	movlw	-1
  7606  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7607                           
  7608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7609                           ;stkvar	_fmt @ sp[(-32)+-4]
  7610  01186A  0EDC               	movlw	-36
  7611  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7612  011872  0EDD               	movlw	-35
  7613  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7614  01187A  2ADE               	incf	postinc2,f,c
  7615  01187C  0E00               	movlw	0
  7616  01187E  22DD               	addwfc	postdec2,f,c
  7617                           
  7618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7619                           ;stkvar	_ap @ sp[(-32)+-6]
  7620  011880  0EDA               	movlw	-38
  7621  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7622  011888  0EDB               	movlw	-37
  7623  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7624  011890  0E04               	movlw	4
  7625  011892  5EDE               	subwf	postinc2,f,c
  7626  011894  0E00               	movlw	0
  7627  011896  5ADD               	subwfb	postdec2,f,c
  7628  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7629  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7630  0118A4  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7631  0118AA  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7632  0118B0  006F FF78  F03D    	movff	postinc2,btemp+8
  7633  0118B6  006F FF78  F03E    	movff	postinc2,btemp+9
  7634  0118BC  006F FF78  F03F    	movff	postinc2,btemp+10
  7635  0118C2  006F FF78  F040    	movff	postinc2,btemp+11
  7636                           
  7637                           ;stkvar	_f @ sp[(-32)+22]
  7638  0118C8  0EF6               	movlw	-10
  7639  0118CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7640  0118D0  0EF7               	movlw	-9
  7641  0118D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7642  0118D8  0EF8               	movlw	-8
  7643  0118DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7644  0118E0  0EF9               	movlw	-7
  7645  0118E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7646  0118E8                     l9562:
  7647                           
  7648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7649                           ;stkvar	_c @ sp[(-32)+31]
  7650  0118E8  0EFF               	movlw	-1
  7651  0118EA  50E3               	movf	plusw1,w,c
  7652  0118EC  6EE6               	movwf	postinc1,c
  7653                           
  7654                           ;stkvar	_f @ sp[(-33)+22]
  7655  0118EE  0EF5               	movlw	-11
  7656  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7657  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7658  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7659  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7660                           
  7661                           ;stkvar	_fp @ sp[(-37)+-2]
  7662  011908  0ED9               	movlw	-39
  7663  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7664  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7665  011916  EC00  F080         	call	_efgtoa	;wreg free
  7666  01191A  D22E               	goto	l1946
  7667  01191C                     l9566:
  7668                           
  7669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7670  01191C  0E02               	movlw	2
  7671  01191E  6EE6               	movwf	postinc1,c
  7672  011920  0E00               	movlw	0
  7673  011922  6EE6               	movwf	postinc1,c
  7674  011924  0EF6               	movlw	low STR_41
  7675  011926  6EE6               	movwf	postinc1,c
  7676  011928  0EFF               	movlw	high STR_41
  7677  01192A  6EE6               	movwf	postinc1,c
  7678                           
  7679                           ;stkvar	_ct @ sp[(-36)+26]
  7680  01192C  0EF6               	movlw	246
  7681  01192E  24E1               	addwf	fsr1l,w,c
  7682  011930  6E35               	movwf	btemp^0,c
  7683  011932  0EFF               	movlw	255
  7684  011934  20E2               	addwfc	fsr1h,w,c
  7685  011936  6E36               	movwf	(btemp+1)^0,c
  7686  011938  0060  F0D7  FFE6   	movff	btemp,postinc1
  7687  01193E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7688  011944  EC17  F0AE         	call	_strncmp	;wreg free
  7689  011948  5035               	movf	btemp^0,w,c
  7690  01194A  1036               	iorwf	(btemp+1)^0,w,c
  7691  01194C  A4D8               	btfss	status,2,c
  7692  01194E  D096               	goto	l9586
  7693                           
  7694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7695                           ;stkvar	_fmt @ sp[(-32)+-4]
  7696  011950  0EDC               	movlw	-36
  7697  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7698  011958  0EDD               	movlw	-35
  7699  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7700  011960  006F FF78  F03F    	movff	postinc2,btemp+10
  7701  011966  006F FF74  F040    	movff	postdec2,btemp+11
  7702  01196C  0E01               	movlw	1
  7703  01196E  263F               	addwf	(btemp+10)^0,f,c
  7704  011970  0E00               	movlw	0
  7705  011972  2240               	addwfc	(btemp+11)^0,f,c
  7706  011974  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7707  01197A  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7708  011980                     	if	0	;tblptru may be non-zero
  7709  011980                     	endif
  7710  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7711  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7712  011982  6EF8               	movwf	tblptru,c
  7713  011984                     	endif
  7714                           
  7715                           ;stkvar	_c @ sp[(-32)+31]
  7716  011984  0008               	tblrd		*
  7717  011986  0EFF               	movlw	-1
  7718  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7719  01198E  0EBF               	movlw	191
  7720  011990  6E3F               	movwf	(btemp+10)^0,c
  7721  011992  0EFF               	movlw	255
  7722  011994  6E40               	movwf	(btemp+11)^0,c
  7723                           
  7724                           ;stkvar	_fmt @ sp[(-32)+-4]
  7725  011996  0EDC               	movlw	-36
  7726  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7727  01199E  0EDD               	movlw	-35
  7728  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7729  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7730  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7731  0119B2                     	if	0	;tblptru may be non-zero
  7732  0119B2                     	endif
  7733  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7734  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7735  0119B4  6EF8               	movwf	tblptru,c
  7736  0119B6                     	endif
  7737  0119B6  0008               	tblrd		*
  7738  0119B8  50F5               	movf	tablat,w,c
  7739  0119BA  6E3D               	movwf	(btemp+8)^0,c
  7740  0119BC  6A3E               	clrf	(btemp+9)^0,c
  7741  0119BE  503F               	movf	(btemp+10)^0,w,c
  7742  0119C0  263D               	addwf	(btemp+8)^0,f,c
  7743  0119C2  5040               	movf	(btemp+11)^0,w,c
  7744  0119C4  223E               	addwfc	(btemp+9)^0,f,c
  7745  0119C6  503E               	movf	(btemp+9)^0,w,c
  7746  0119C8  E106               	bnz	u9720
  7747  0119CA  0E1A               	movlw	26
  7748  0119CC  5C3D               	subwf	(btemp+8)^0,w,c
  7749  0119CE  B0D8               	btfsc	status,0,c
  7750  0119D0  D002               	goto	u9720
  7751  0119D2  0E01               	movlw	1
  7752  0119D4  D001               	goto	u9730
  7753  0119D6                     u9720:
  7754  0119D6  0E00               	movlw	0
  7755  0119D8                     u9730:
  7756  0119D8  6E3F               	movwf	(btemp+10)^0,c
  7757  0119DA  6A40               	clrf	(btemp+11)^0,c
  7758                           
  7759                           ;stkvar	_vfpfcnvrt$4162 @ sp[(-32)+2]
  7760  0119DC  0EE2               	movlw	-30
  7761  0119DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7762  0119E4  0EE3               	movlw	-29
  7763  0119E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  7764                           
  7765                           ;stkvar	_vfpfcnvrt$4162 @ sp[(-32)+2]
  7766  0119EC  0EE2               	movlw	-30
  7767  0119EE  006F FF8C  F035    	movff	plusw1,btemp
  7768  0119F4  0EE3               	movlw	-29
  7769  0119F6  50E3               	movf	plusw1,w,c
  7770  0119F8  1035               	iorwf	btemp^0,w,c
  7771                           
  7772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7773                           ;stkvar	_ap @ sp[(-32)+-6]
  7774                           
  7775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7776                           
  7777                           ;stkvar	_f @ sp[(-32)+22]
  7778                           
  7779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7780                           ;stkvar	_ap @ sp[(-32)+-6]
  7781  0119FA  0EDA               	movlw	-38
  7782  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7783  011A02  0EDB               	movlw	-37
  7784  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  7785  011A0A  0E04               	movlw	4
  7786  011A0C  5EDE               	subwf	postinc2,f,c
  7787  011A0E  0E00               	movlw	0
  7788  011A10  5ADD               	subwfb	postdec2,f,c
  7789  011A12  006F FF78  F03F    	movff	postinc2,btemp+10
  7790  011A18  006F FF74  F040    	movff	postdec2,btemp+11
  7791  011A1E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7792  011A24  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7793  011A2A  006F FF78  F03D    	movff	postinc2,btemp+8
  7794  011A30  006F FF78  F03E    	movff	postinc2,btemp+9
  7795  011A36  006F FF78  F03F    	movff	postinc2,btemp+10
  7796  011A3C  006F FF78  F040    	movff	postinc2,btemp+11
  7797                           
  7798                           ;stkvar	_f @ sp[(-32)+22]
  7799  011A42  0EF6               	movlw	-10
  7800  011A44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7801  011A4A  0EF7               	movlw	-9
  7802  011A4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7803  011A52  0EF8               	movlw	-8
  7804  011A54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7805  011A5A  0EF9               	movlw	-7
  7806  011A5C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7807                           
  7808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7809                           ;stkvar	_fmt @ sp[(-32)+-4]
  7810  011A62  0EDC               	movlw	-36
  7811  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  7812  011A6A  0EDD               	movlw	-35
  7813  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7814  011A72  0E02               	movlw	2
  7815  011A74  26DE               	addwf	postinc2,f,c
  7816  011A76  0E00               	movlw	0
  7817  011A78  22DD               	addwfc	postdec2,f,c
  7818  011A7A  D736               	goto	l9562
  7819  011A7C                     l9586:
  7820                           
  7821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7822                           ;stkvar	_fmt @ sp[(-32)+-4]
  7823  011A7C  0EDC               	movlw	-36
  7824  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7825  011A84  0EDD               	movlw	-35
  7826  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7827  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7828  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  7829  011A98                     	if	0	;tblptru may be non-zero
  7830  011A98                     	endif
  7831  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7832  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  7833  011A9A  6EF8               	movwf	tblptru,c
  7834  011A9C                     	endif
  7835  011A9C  0008               	tblrd		*
  7836  011A9E  50F5               	movf	tablat,w,c
  7837  011AA0  0A73               	xorlw	115
  7838  011AA2  A4D8               	btfss	status,2,c
  7839  011AA4  D042               	goto	l9596
  7840                           
  7841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7842                           ;stkvar	_fmt @ sp[(-32)+-4]
  7843  011AA6  0EDC               	movlw	-36
  7844  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7845  011AAE  0EDD               	movlw	-35
  7846  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7847  011AB6  2ADE               	incf	postinc2,f,c
  7848  011AB8  0E00               	movlw	0
  7849  011ABA  22DD               	addwfc	postdec2,f,c
  7850                           
  7851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7852                           ;stkvar	_ap @ sp[(-32)+-6]
  7853  011ABC  0EDA               	movlw	-38
  7854  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7855  011AC4  0EDB               	movlw	-37
  7856  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7857  011ACC  0E02               	movlw	2
  7858  011ACE  5EDE               	subwf	postinc2,f,c
  7859  011AD0  0E00               	movlw	0
  7860  011AD2  5ADD               	subwfb	postdec2,f,c
  7861  011AD4  006F FF78  F03F    	movff	postinc2,btemp+10
  7862  011ADA  006F FF74  F040    	movff	postdec2,btemp+11
  7863  011AE0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7864  011AE6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7865  011AEC  006F FF78  F03F    	movff	postinc2,btemp+10
  7866  011AF2  006F FF74  F040    	movff	postdec2,btemp+11
  7867                           
  7868                           ;stkvar	_cp @ sp[(-32)+29]
  7869  011AF8  0EFE               	movlw	-2
  7870  011AFA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7871  011B00  0EFD               	movlw	-3
  7872  011B02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7873                           
  7874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7875                           ;stkvar	_cp @ sp[(-32)+29]
  7876  011B08  0EFD               	movlw	-3
  7877  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  7878  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  7879                           
  7880                           ;stkvar	_fp @ sp[(-34)+-2]
  7881  011B16  0EDC               	movlw	-36
  7882  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  7883  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  7884  011B24  ECE4  F0A5         	call	_stoa	;wreg free
  7885  011B28  D127               	goto	l1946
  7886  011B2A                     l9596:
  7887                           
  7888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7889                           ;stkvar	_fmt @ sp[(-32)+-4]
  7890  011B2A  0EDC               	movlw	-36
  7891  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7892  011B32  0EDD               	movlw	-35
  7893  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  7894  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7895  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  7896  011B46                     	if	0	;tblptru may be non-zero
  7897  011B46                     	endif
  7898  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7899  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7900  011B48  6EF8               	movwf	tblptru,c
  7901  011B4A                     	endif
  7902  011B4A  0008               	tblrd		*
  7903  011B4C  50F5               	movf	tablat,w,c
  7904  011B4E  0A78               	xorlw	120
  7905  011B50  B4D8               	btfsc	status,2,c
  7906  011B52  D015               	goto	u9770
  7907                           
  7908                           ;stkvar	_fmt @ sp[(-32)+-4]
  7909  011B54  0EDC               	movlw	-36
  7910  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  7911  011B5C  0EDD               	movlw	-35
  7912  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7913  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  7914  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7915  011B70                     	if	0	;tblptru may be non-zero
  7916  011B70                     	endif
  7917  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7918  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  7919  011B72  6EF8               	movwf	tblptru,c
  7920  011B74                     	endif
  7921  011B74  0008               	tblrd		*
  7922  011B76  50F5               	movf	tablat,w,c
  7923  011B78  0A58               	xorlw	88
  7924  011B7A  A4D8               	btfss	status,2,c
  7925  011B7C  D094               	goto	l9610
  7926  011B7E                     u9770:
  7927                           
  7928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7929                           ;stkvar	_fmt @ sp[(-32)+-4]
  7930  011B7E  0EDC               	movlw	-36
  7931  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  7932  011B86  0EDD               	movlw	-35
  7933  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  7934  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7935  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  7936  011B9A                     	if	0	;tblptru may be non-zero
  7937  011B9A                     	endif
  7938  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7939  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  7940  011B9C  6EF8               	movwf	tblptru,c
  7941  011B9E                     	endif
  7942                           
  7943                           ;stkvar	_c @ sp[(-32)+31]
  7944  011B9E  0008               	tblrd		*
  7945  011BA0  0EFF               	movlw	-1
  7946  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  7947                           
  7948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7949                           ;stkvar	_fmt @ sp[(-32)+-4]
  7950  011BA8  0EDC               	movlw	-36
  7951  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7952  011BB0  0EDD               	movlw	-35
  7953  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7954  011BB8  2ADE               	incf	postinc2,f,c
  7955  011BBA  0E00               	movlw	0
  7956  011BBC  22DD               	addwfc	postdec2,f,c
  7957                           
  7958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7959                           ;stkvar	_ap @ sp[(-32)+-6]
  7960  011BBE  0EDA               	movlw	-38
  7961  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7962  011BC6  0EDB               	movlw	-37
  7963  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7964  011BCE  0E02               	movlw	2
  7965  011BD0  5EDE               	subwf	postinc2,f,c
  7966  011BD2  0E00               	movlw	0
  7967  011BD4  5ADD               	subwfb	postdec2,f,c
  7968  011BD6  006F FF78  F03F    	movff	postinc2,btemp+10
  7969  011BDC  006F FF74  F040    	movff	postdec2,btemp+11
  7970  011BE2  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7971  011BE8  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7972  011BEE  006F FF78  F03F    	movff	postinc2,btemp+10
  7973  011BF4  006F FF74  F040    	movff	postdec2,btemp+11
  7974  011BFA  503F               	movf	(btemp+10)^0,w,c
  7975  011BFC  6E45               	movwf	(btemp+16)^0,c
  7976  011BFE  5040               	movf	(btemp+11)^0,w,c
  7977  011C00  6E46               	movwf	(btemp+17)^0,c
  7978  011C02  6A47               	clrf	(btemp+18)^0,c
  7979  011C04  6A48               	clrf	(btemp+19)^0,c
  7980  011C06  6A49               	clrf	(btemp+20)^0,c
  7981  011C08  6A4A               	clrf	(btemp+21)^0,c
  7982  011C0A  6A4B               	clrf	(btemp+22)^0,c
  7983  011C0C  6A4C               	clrf	(btemp+23)^0,c
  7984                           
  7985                           ;stkvar	_llu @ sp[(-32)+6]
  7986  011C0E  0EE6               	movlw	-26
  7987  011C10  0060  F117  FFE3   	movff	btemp+16,plusw1
  7988  011C16  0EE7               	movlw	-25
  7989  011C18  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7990  011C1E  0EE8               	movlw	-24
  7991  011C20  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7992  011C26  0EE9               	movlw	-23
  7993  011C28  0060  F123  FFE3   	movff	btemp+19,plusw1
  7994  011C2E  0EEA               	movlw	-22
  7995  011C30  0060  F127  FFE3   	movff	btemp+20,plusw1
  7996  011C36  0EEB               	movlw	-21
  7997  011C38  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7998  011C3E  0EEC               	movlw	-20
  7999  011C40  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8000  011C46  0EED               	movlw	-19
  8001  011C48  0060  F133  FFE3   	movff	btemp+23,plusw1
  8002                           
  8003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8004                           ;stkvar	_c @ sp[(-32)+31]
  8005  011C4E  0EFF               	movlw	-1
  8006  011C50  50E3               	movf	plusw1,w,c
  8007  011C52  6EE6               	movwf	postinc1,c
  8008                           
  8009                           ;stkvar	_llu @ sp[(-33)+6]
  8010  011C54  50E1               	movf	fsr1l,w,c
  8011  011C56  0FE5               	addlw	-27
  8012  011C58  6ED9               	movwf	fsr2l,c
  8013  011C5A  50E2               	movf	fsr1h,w,c
  8014  011C5C  6EDA               	movwf	fsr2h,c
  8015  011C5E  0EFF               	movlw	255
  8016  011C60  22DA               	addwfc	fsr2h,f,c
  8017  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8018  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8019  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8020  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8021  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8022  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8023  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8024  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8025                           
  8026                           ;stkvar	_fp @ sp[(-41)+-2]
  8027  011C92  0ED5               	movlw	-43
  8028  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8029  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8030  011CA0  ECDB  F0A0         	call	_xtoa	;wreg free
  8031  011CA4  D069               	goto	l1946
  8032  011CA6                     l9610:
  8033                           
  8034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8035                           ;stkvar	_fmt @ sp[(-32)+-4]
  8036  011CA6  0EDC               	movlw	-36
  8037  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8038  011CAE  0EDD               	movlw	-35
  8039  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8040  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8041  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8042  011CC2                     	if	0	;tblptru may be non-zero
  8043  011CC2                     	endif
  8044  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8045  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8046  011CC4  6EF8               	movwf	tblptru,c
  8047  011CC6                     	endif
  8048  011CC6  0008               	tblrd		*
  8049  011CC8  50F5               	movf	tablat,w,c
  8050  011CCA  0A25               	xorlw	37
  8051  011CCC  A4D8               	btfss	status,2,c
  8052  011CCE  D01A               	goto	l9620
  8053                           
  8054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8055                           ;stkvar	_fmt @ sp[(-32)+-4]
  8056  011CD0  0EDC               	movlw	-36
  8057  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8058  011CD8  0EDD               	movlw	-35
  8059  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8060  011CE0  2ADE               	incf	postinc2,f,c
  8061  011CE2  0E00               	movlw	0
  8062  011CE4  22DD               	addwfc	postdec2,f,c
  8063                           
  8064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8065                           ;stkvar	_fp @ sp[(-32)+-2]
  8066  011CE6  0EDE               	movlw	-34
  8067  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8068  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8069  011CF4  0E25               	movlw	37
  8070  011CF6  6EE6               	movwf	postinc1,c
  8071  011CF8  0E00               	movlw	0
  8072  011CFA  6EE6               	movwf	postinc1,c
  8073  011CFC  EC6E  F0B2         	call	_fputc	;wreg free
  8074  011D00                     l9616:
  8075                           
  8076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8077  011D00  0E01               	movlw	1
  8078  011D02  D00C               	goto	L5
  8079  011D04                     l9620:
  8080                           
  8081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8082                           ;stkvar	_fmt @ sp[(-32)+-4]
  8083  011D04  0EDC               	movlw	-36
  8084  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8085  011D0C  0EDD               	movlw	-35
  8086  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8087  011D14  2ADE               	incf	postinc2,f,c
  8088  011D16  0E00               	movlw	0
  8089  011D18  22DD               	addwfc	postdec2,f,c
  8090                           
  8091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8092  011D1A  0E00               	movlw	0
  8093  011D1C                     L5:
  8094  011D1C  6E35               	movwf	btemp^0,c
  8095  011D1E  0E00               	movlw	0
  8096  011D20  6E36               	movwf	(btemp+1)^0,c
  8097  011D22  D02A               	goto	l1946
  8098  011D24                     l9626:
  8099                           
  8100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8101                           ;stkvar	_fp @ sp[(-32)+-2]
  8102  011D24  0EDE               	movlw	-34
  8103  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8104  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8105                           
  8106                           ;stkvar	_fmt @ sp[(-34)+-4]
  8107  011D32  0EDA               	movlw	-38
  8108  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8109  011D3A  0EDB               	movlw	-37
  8110  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8111  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8112  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8113  011D4E                     	if	0	;tblptru may be non-zero
  8114  011D4E                     	endif
  8115  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8116  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8117  011D50  6EF8               	movwf	tblptru,c
  8118  011D52                     	endif
  8119  011D52  0008               	tblrd		*
  8120  011D54  50F5               	movf	tablat,w,c
  8121  011D56  6EE6               	movwf	postinc1,c
  8122  011D58  0E00               	movlw	0
  8123  011D5A  6EE6               	movwf	postinc1,c
  8124  011D5C  EC6E  F0B2         	call	_fputc	;wreg free
  8125                           
  8126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8127                           ;stkvar	_fmt @ sp[(-32)+-4]
  8128  011D60  0EDC               	movlw	-36
  8129  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8130  011D68  0EDD               	movlw	-35
  8131  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8132  011D70  2ADE               	incf	postinc2,f,c
  8133  011D72  0E00               	movlw	0
  8134  011D74  22DD               	addwfc	postdec2,f,c
  8135  011D76  D7C4               	goto	l9616
  8136  011D78                     l1946:
  8137                           
  8138                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8139  011D78  0EDA               	movlw	218
  8140  011D7A  26E1               	addwf	fsr1l,f,c
  8141  011D7C  0EFF               	movlw	255
  8142  011D7E  22E2               	addwfc	fsr1h,f,c
  8143  011D80  0012               	return		;funcret
  8144  011D82                     __end_of_vfpfcnvrt:
  8145                           	opt callstack 0
  8146                           
  8147 ;; *************** function _xtoa *****************
  8148 ;; Defined at:
  8149 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8152 ;;		 -> f(6), NULL(0), 
  8153 ;;  d               8  [STACK] unsigned long long 
  8154 ;;  x               1  [STACK] unsigned char 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  n               8  [STACK] unsigned long long 
  8157 ;;  c               2  [STACK] int 
  8158 ;;  i               2  [STACK] int 
  8159 ;;  w               2  [STACK] int 
  8160 ;;  p               2  [STACK] int 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  2  [STACK] int 
  8163 ;; Registers used:
  8164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/4
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8174 ;;Total ram usage:        0 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:   11
  8177 ;; This function calls:
  8178 ;;		_isalpha
  8179 ;;		_isupper
  8180 ;;		_pad
  8181 ;;		_toupper
  8182 ;; This function is called by:
  8183 ;;		_vfpfcnvrt
  8184 ;; This function uses a reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text34
  8188  0141B6                     __ptext34:
  8189                           	opt callstack 0
  8190  0141B6                     _xtoa:
  8191                           	opt callstack 0
  8192                           
  8193                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8194  0141B6  0E14               	movlw	20
  8195  0141B8  26E1               	addwf	fsr1l,f,c
  8196  0141BA  0E00               	movlw	0
  8197  0141BC  22E2               	addwfc	fsr1h,f,c
  8198                           
  8199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8200                           
  8201                           ;incstack = 0
  8202  0141BE  AE21               	btfss	(_prec+1)^0,7,c
  8203                           
  8204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8205  0141C0  9222               	bcf	_flags^0,1,c
  8206                           
  8207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8208  0141C2  BE21               	btfsc	(_prec+1)^0,7,c
  8209  0141C4  D005               	goto	u9370
  8210  0141C6  5021               	movf	(_prec+1)^0,w,c
  8211  0141C8  E110               	bnz	l9408
  8212  0141CA  0420               	decf	_prec^0,w,c
  8213  0141CC  B0D8               	btfsc	status,0,c
  8214  0141CE  D00D               	goto	l9408
  8215  0141D0                     u9370:
  8216  0141D0  0E01               	movlw	1
  8217  0141D2  6E3F               	movwf	(btemp+10)^0,c
  8218  0141D4  0E00               	movlw	0
  8219  0141D6  6E40               	movwf	(btemp+11)^0,c
  8220                           
  8221                           ;stkvar	_p @ sp[(-20)+18]
  8222  0141D8  0EFE               	movlw	-2
  8223  0141DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8224  0141E0  0EFF               	movlw	-1
  8225  0141E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  8226  0141E8  D008               	goto	l1896
  8227  0141EA                     l9408:
  8228                           
  8229                           ;stkvar	_p @ sp[(-20)+18]
  8230  0141EA  0EFE               	movlw	-2
  8231  0141EC  0060  F083  FFE3   	movff	_prec,plusw1
  8232  0141F2  0EFF               	movlw	-1
  8233  0141F4  0060  F087  FFE3   	movff	_prec+1,plusw1
  8234  0141FA                     l1896:
  8235                           
  8236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8237                           ;stkvar	_w @ sp[(-20)+16]
  8238  0141FA  0EFC               	movlw	-4
  8239  0141FC  0060  F07B  FFE3   	movff	_width,plusw1
  8240  014202  0EFD               	movlw	-3
  8241  014204  0060  F07F  FFE3   	movff	_width+1,plusw1
  8242                           
  8243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8244  01420A  A822               	btfss	_flags^0,4,c
  8245  01420C  D00B               	goto	l9414
  8246                           
  8247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8248                           ;stkvar	_w @ sp[(-20)+16]
  8249  01420E  50E1               	movf	fsr1l,w,c
  8250  014210  0FFC               	addlw	-4
  8251  014212  6ED9               	movwf	fsr2l,c
  8252  014214  50E2               	movf	fsr1h,w,c
  8253  014216  6EDA               	movwf	fsr2h,c
  8254  014218  0EFF               	movlw	255
  8255  01421A  22DA               	addwfc	fsr2h,f,c
  8256  01421C  0EFE               	movlw	254
  8257  01421E  26DE               	addwf	postinc2,f,c
  8258  014220  0EFF               	movlw	255
  8259  014222  22DD               	addwfc	postdec2,f,c
  8260  014224                     l9414:
  8261                           
  8262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8263                           ;stkvar	_d @ sp[(-20)+-10]
  8264  014224  0EE2               	movlw	226
  8265  014226  24E1               	addwf	fsr1l,w,c
  8266  014228  6ED9               	movwf	fsr2l,c
  8267  01422A  0EFF               	movlw	255
  8268  01422C  20E2               	addwfc	fsr1h,w,c
  8269  01422E  6EDA               	movwf	fsr2h,c
  8270                           
  8271                           ;stkvar	_n @ sp[(-20)+4]
  8272  014230  0E08               	movlw	8
  8273  014232  6E35               	movwf	btemp^0,c
  8274  014234  0EF0               	movlw	-16
  8275  014236                     us939999:
  8276  014236  006F FF7B FFE3     	movff	postinc2,plusw1
  8277  01423C  28E8               	incf	wreg,w,c
  8278  01423E  2E35               	decfsz	btemp^0,f,c
  8279  014240  D7FA               	bra	us939999
  8280                           
  8281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8282  014242  0E4F               	movlw	79
  8283  014244  6E3F               	movwf	(btemp+10)^0,c
  8284  014246  0E00               	movlw	0
  8285  014248  6E40               	movwf	(btemp+11)^0,c
  8286                           
  8287                           ;stkvar	_i @ sp[(-20)+14]
  8288  01424A  0EFA               	movlw	-6
  8289  01424C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8290  014252  0EFB               	movlw	-5
  8291  014254  0060  F103  FFE3   	movff	btemp+11,plusw1
  8292                           
  8293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8294  01425A  0101               	movlb	1	; () banked
  8295  01425C  6BF3               	clrf	(_dbuf+79)& (0+255),b
  8296                           
  8297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8298  01425E  D0EE               	goto	l9452
  8299  014260                     l9420:
  8300                           
  8301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8302                           ;stkvar	_i @ sp[(-20)+14]
  8303  014260  50E1               	movf	fsr1l,w,c
  8304  014262  0FFA               	addlw	-6
  8305  014264  6ED9               	movwf	fsr2l,c
  8306  014266  50E2               	movf	fsr1h,w,c
  8307  014268  6EDA               	movwf	fsr2h,c
  8308  01426A  0EFF               	movlw	255
  8309  01426C  22DA               	addwfc	fsr2h,f,c
  8310  01426E  06DE               	decf	postinc2,f,c
  8311  014270  0E00               	movlw	0
  8312  014272  5ADD               	subwfb	postdec2,f,c
  8313                           
  8314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8315                           ;stkvar	_n @ sp[(-20)+4]
  8316  014274  0EF0               	movlw	-16
  8317  014276  006F FF8C  F03F    	movff	plusw1,btemp+10
  8318  01427C  0EF1               	movlw	-15
  8319  01427E  006F FF8C  F040    	movff	plusw1,btemp+11
  8320  014284  0E0F               	movlw	15
  8321  014286  163F               	andwf	(btemp+10)^0,f,c
  8322  014288  0E00               	movlw	0
  8323  01428A  1640               	andwf	(btemp+11)^0,f,c
  8324                           
  8325                           ;stkvar	_c @ sp[(-20)+12]
  8326  01428C  0EF8               	movlw	-8
  8327  01428E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8328  014294  0EF9               	movlw	-7
  8329  014296  0060  F103  FFE3   	movff	btemp+11,plusw1
  8330                           
  8331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8332                           ;stkvar	_c @ sp[(-20)+12]
  8333  01429C  0EF9               	movlw	-7
  8334  01429E  BEE3               	btfsc	plusw1,7,c
  8335  0142A0  D00F               	goto	l9428
  8336  0142A2  0EF9               	movlw	-7
  8337  0142A4  50E3               	movf	plusw1,w,c
  8338  0142A6  E108               	bnz	u9400
  8339  0142A8  0EF8               	movlw	-8
  8340  0142AA  006F FF8C  F035    	movff	plusw1,btemp
  8341  0142B0  0E0A               	movlw	10
  8342  0142B2  5E35               	subwf	btemp^0,f,c
  8343  0142B4  A0D8               	btfss	status,0,c
  8344  0142B6  D004               	goto	l9428
  8345  0142B8                     u9400:
  8346                           
  8347                           ;stkvar	_c @ sp[(-20)+12]
  8348  0142B8  0EF8               	movlw	-8
  8349  0142BA  50E3               	movf	plusw1,w,c
  8350  0142BC  0F57               	addlw	87
  8351  0142BE  D003               	goto	L6
  8352  0142C0                     l9428:
  8353                           
  8354                           ;stkvar	_c @ sp[(-20)+12]
  8355  0142C0  0EF8               	movlw	-8
  8356  0142C2  50E3               	movf	plusw1,w,c
  8357  0142C4  0F30               	addlw	48
  8358  0142C6                     L6:
  8359  0142C6  6E3F               	movwf	(btemp+10)^0,c
  8360  0142C8  0EF9               	movlw	-7
  8361  0142CA  006F FF8C  F040    	movff	plusw1,btemp+11
  8362  0142D0  0E00               	movlw	0
  8363  0142D2  2240               	addwfc	(btemp+11)^0,f,c
  8364                           
  8365                           ;stkvar	_c @ sp[(-20)+12]
  8366  0142D4  0EF8               	movlw	-8
  8367  0142D6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8368  0142DC  0EF9               	movlw	-7
  8369  0142DE  0060  F103  FFE3   	movff	btemp+11,plusw1
  8370  0142E4  0EBF               	movlw	191
  8371  0142E6  6E3F               	movwf	(btemp+10)^0,c
  8372  0142E8  0EFF               	movlw	255
  8373  0142EA  6E40               	movwf	(btemp+11)^0,c
  8374                           
  8375                           ;stkvar	_x @ sp[(-20)+-11]
  8376  0142EC  0EE1               	movlw	-31
  8377  0142EE  50E3               	movf	plusw1,w,c
  8378  0142F0  6E3D               	movwf	(btemp+8)^0,c
  8379  0142F2  6A3E               	clrf	(btemp+9)^0,c
  8380  0142F4  503F               	movf	(btemp+10)^0,w,c
  8381  0142F6  263D               	addwf	(btemp+8)^0,f,c
  8382  0142F8  5040               	movf	(btemp+11)^0,w,c
  8383  0142FA  223E               	addwfc	(btemp+9)^0,f,c
  8384  0142FC  503E               	movf	(btemp+9)^0,w,c
  8385  0142FE  E106               	bnz	u9410
  8386  014300  0E1A               	movlw	26
  8387  014302  5C3D               	subwf	(btemp+8)^0,w,c
  8388  014304  B0D8               	btfsc	status,0,c
  8389  014306  D002               	goto	u9410
  8390  014308  0E01               	movlw	1
  8391  01430A  D001               	goto	u9420
  8392  01430C                     u9410:
  8393  01430C  0E00               	movlw	0
  8394  01430E                     u9420:
  8395  01430E  6E3F               	movwf	(btemp+10)^0,c
  8396  014310  6A40               	clrf	(btemp+11)^0,c
  8397                           
  8398                           ;stkvar	_xtoa$4140 @ sp[(-20)+2]
  8399  014312  0EEE               	movlw	-18
  8400  014314  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8401  01431A  0EEF               	movlw	-17
  8402  01431C  0060  F103  FFE3   	movff	btemp+11,plusw1
  8403                           
  8404                           ;stkvar	_xtoa$4140 @ sp[(-20)+2]
  8405  014322  0EEE               	movlw	-18
  8406  014324  006F FF8C  F035    	movff	plusw1,btemp
  8407  01432A  0EEF               	movlw	-17
  8408  01432C  50E3               	movf	plusw1,w,c
  8409  01432E  1035               	iorwf	btemp^0,w,c
  8410  014330  B4D8               	btfsc	status,2,c
  8411  014332  D041               	goto	l9444
  8412  014334  0E9F               	movlw	159
  8413  014336  6E3F               	movwf	(btemp+10)^0,c
  8414  014338  0EFF               	movlw	255
  8415  01433A  6E40               	movwf	(btemp+11)^0,c
  8416                           
  8417                           ;stkvar	_c @ sp[(-20)+12]
  8418  01433C  0EF8               	movlw	-8
  8419  01433E  006F FF8C  F03D    	movff	plusw1,btemp+8
  8420  014344  0EF9               	movlw	-7
  8421  014346  006F FF8C  F03E    	movff	plusw1,btemp+9
  8422  01434C  0E20               	movlw	32
  8423  01434E  123D               	iorwf	(btemp+8)^0,f,c
  8424  014350  0E00               	movlw	0
  8425  014352  123E               	iorwf	(btemp+9)^0,f,c
  8426  014354  503F               	movf	(btemp+10)^0,w,c
  8427  014356  263D               	addwf	(btemp+8)^0,f,c
  8428  014358  5040               	movf	(btemp+11)^0,w,c
  8429  01435A  223E               	addwfc	(btemp+9)^0,f,c
  8430  01435C  503E               	movf	(btemp+9)^0,w,c
  8431  01435E  E106               	bnz	u9440
  8432  014360  0E1A               	movlw	26
  8433  014362  5C3D               	subwf	(btemp+8)^0,w,c
  8434  014364  B0D8               	btfsc	status,0,c
  8435  014366  D002               	goto	u9440
  8436  014368  0E01               	movlw	1
  8437  01436A  D001               	goto	u9450
  8438  01436C                     u9440:
  8439  01436C  0E00               	movlw	0
  8440  01436E                     u9450:
  8441  01436E  6E3F               	movwf	(btemp+10)^0,c
  8442  014370  6A40               	clrf	(btemp+11)^0,c
  8443                           
  8444                           ;stkvar	_xtoa$4141 @ sp[(-20)+0]
  8445  014372  0EEC               	movlw	-20
  8446  014374  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8447  01437A  0EED               	movlw	-19
  8448  01437C  0060  F103  FFE3   	movff	btemp+11,plusw1
  8449                           
  8450                           ;stkvar	_xtoa$4141 @ sp[(-20)+0]
  8451  014382  0EEC               	movlw	-20
  8452  014384  006F FF8C  F035    	movff	plusw1,btemp
  8453  01438A  0EED               	movlw	-19
  8454  01438C  50E3               	movf	plusw1,w,c
  8455  01438E  1035               	iorwf	btemp^0,w,c
  8456  014390  B4D8               	btfsc	status,2,c
  8457  014392  D011               	goto	l9444
  8458                           
  8459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8460                           ;stkvar	_c @ sp[(-20)+12]
  8461  014394  0EF8               	movlw	-8
  8462  014396  006F FF8F FFE6     	movff	plusw1,postinc1
  8463  01439C  006F FF8F FFE6     	movff	plusw1,postinc1
  8464  0143A2  ECDE  F0B9         	call	_toupper	;wreg free
  8465                           
  8466                           ;stkvar	_c @ sp[(-20)+12]
  8467  0143A6  0EF8               	movlw	-8
  8468  0143A8  0060  F0D7  FFE3   	movff	btemp,plusw1
  8469  0143AE  0EF9               	movlw	-7
  8470  0143B0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8471  0143B6                     l9444:
  8472                           
  8473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8474                           ;stkvar	_c @ sp[(-20)+12]
  8475                           ;stkvar	_i @ sp[(-20)+14]
  8476  0143B6  0EFA               	movlw	-6
  8477  0143B8  006F FF8C  F03F    	movff	plusw1,btemp+10
  8478  0143BE  0EFB               	movlw	-5
  8479  0143C0  006F FF8C  F040    	movff	plusw1,btemp+11
  8480  0143C6  0EA4               	movlw	low _dbuf
  8481  0143C8  243F               	addwf	(btemp+10)^0,w,c
  8482  0143CA  6ED9               	movwf	fsr2l,c
  8483  0143CC  0E01               	movlw	high _dbuf
  8484  0143CE  2040               	addwfc	(btemp+11)^0,w,c
  8485  0143D0  6EDA               	movwf	fsr2h,c
  8486  0143D2  0EF8               	movlw	-8
  8487  0143D4  006F FF8F FFDF     	movff	plusw1,indf2
  8488                           
  8489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8490                           ;stkvar	_p @ sp[(-20)+18]
  8491  0143DA  50E1               	movf	fsr1l,w,c
  8492  0143DC  0FFE               	addlw	-2
  8493  0143DE  6ED9               	movwf	fsr2l,c
  8494  0143E0  50E2               	movf	fsr1h,w,c
  8495  0143E2  6EDA               	movwf	fsr2h,c
  8496  0143E4  0EFF               	movlw	255
  8497  0143E6  22DA               	addwfc	fsr2h,f,c
  8498  0143E8  06DE               	decf	postinc2,f,c
  8499  0143EA  0E00               	movlw	0
  8500  0143EC  5ADD               	subwfb	postdec2,f,c
  8501                           
  8502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8503                           ;stkvar	_w @ sp[(-20)+16]
  8504  0143EE  50E1               	movf	fsr1l,w,c
  8505  0143F0  0FFC               	addlw	-4
  8506  0143F2  6ED9               	movwf	fsr2l,c
  8507  0143F4  50E2               	movf	fsr1h,w,c
  8508  0143F6  6EDA               	movwf	fsr2h,c
  8509  0143F8  0EFF               	movlw	255
  8510  0143FA  22DA               	addwfc	fsr2h,f,c
  8511  0143FC  06DE               	decf	postinc2,f,c
  8512  0143FE  0E00               	movlw	0
  8513  014400  5ADD               	subwfb	postdec2,f,c
  8514                           
  8515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8516  014402  0E04               	movlw	4
  8517  014404  6E40               	movwf	(btemp+11)^0,c
  8518                           
  8519                           ;stkvar	_n @ sp[(-20)+4]
  8520  014406  50E1               	movf	fsr1l,w,c
  8521  014408  0FF0               	addlw	-16
  8522  01440A  6ED9               	movwf	fsr2l,c
  8523  01440C  50E2               	movf	fsr1h,w,c
  8524  01440E  6EDA               	movwf	fsr2h,c
  8525  014410  0EFF               	movlw	255
  8526  014412  22DA               	addwfc	fsr2h,f,c
  8527  014414  2840               	incf	(btemp+11)^0,w,c
  8528  014416  52DE               	movf	postinc2,f,c
  8529  014418  D00F               	goto	u9470
  8530  01441A                     u9475:
  8531  01441A  52DE               	movf	postinc2,f,c
  8532  01441C  52DE               	movf	postinc2,f,c
  8533  01441E  52DE               	movf	postinc2,f,c
  8534  014420  52DE               	movf	postinc2,f,c
  8535  014422  52DE               	movf	postinc2,f,c
  8536  014424  52DE               	movf	postinc2,f,c
  8537  014426  90D8               	bcf	status,0,c
  8538  014428  32DD               	rrcf	postdec2,f,c
  8539  01442A  32DD               	rrcf	postdec2,f,c
  8540  01442C  32DD               	rrcf	postdec2,f,c
  8541  01442E  32DD               	rrcf	postdec2,f,c
  8542  014430  32DD               	rrcf	postdec2,f,c
  8543  014432  32DD               	rrcf	postdec2,f,c
  8544  014434  32DD               	rrcf	postdec2,f,c
  8545  014436  32DE               	rrcf	postinc2,f,c
  8546  014438                     u9470:
  8547  014438  2EE8               	decfsz	wreg,f,c
  8548  01443A  D7EF               	goto	u9475
  8549  01443C                     l9452:
  8550                           
  8551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8552                           ;stkvar	_i @ sp[(-20)+14]
  8553  01443C  0EFB               	movlw	-5
  8554  01443E  BEE3               	btfsc	plusw1,7,c
  8555  014440  D03A               	goto	u9520
  8556  014442  0EFB               	movlw	-5
  8557  014444  50E3               	movf	plusw1,w,c
  8558  014446  E108               	bnz	u9480
  8559  014448  0EFA               	movlw	-6
  8560  01444A  006F FF8C  F035    	movff	plusw1,btemp
  8561  014450  0E02               	movlw	2
  8562  014452  5E35               	subwf	btemp^0,f,c
  8563  014454  A0D8               	btfss	status,0,c
  8564  014456  D02F               	goto	u9520
  8565  014458                     u9480:
  8566                           
  8567                           ;stkvar	_n @ sp[(-20)+4]
  8568  014458  0EF0               	movlw	-16
  8569  01445A  50E3               	movf	plusw1,w,c
  8570  01445C  E115               	bnz	u9491
  8571  01445E  0EF1               	movlw	-15
  8572  014460  50E3               	movf	plusw1,w,c
  8573  014462  E112               	bnz	u9491
  8574  014464  0EF2               	movlw	-14
  8575  014466  50E3               	movf	plusw1,w,c
  8576  014468  E10F               	bnz	u9491
  8577  01446A  0EF3               	movlw	-13
  8578  01446C  50E3               	movf	plusw1,w,c
  8579  01446E  E10C               	bnz	u9491
  8580  014470  0EF4               	movlw	-12
  8581  014472  50E3               	movf	plusw1,w,c
  8582  014474  E109               	bnz	u9491
  8583  014476  0EF5               	movlw	-11
  8584  014478  50E3               	movf	plusw1,w,c
  8585  01447A  E106               	bnz	u9491
  8586  01447C  0EF6               	movlw	-10
  8587  01447E  50E3               	movf	plusw1,w,c
  8588  014480  E103               	bnz	u9491
  8589  014482  0EF7               	movlw	-9
  8590  014484  50E3               	movf	plusw1,w,c
  8591  014486  A4D8               	btfss	status,2,c
  8592  014488                     u9491:
  8593  014488  D6EB               	goto	l9420
  8594                           
  8595                           ;stkvar	_p @ sp[(-20)+18]
  8596  01448A  0EFF               	movlw	-1
  8597  01448C  BEE3               	btfsc	plusw1,7,c
  8598  01448E  D007               	goto	u9500
  8599  014490  0EFF               	movlw	-1
  8600  014492  50E3               	movf	plusw1,w,c
  8601  014494  E103               	bnz	u9501
  8602  014496  0EFE               	movlw	-2
  8603  014498  04E3               	decf	plusw1,w,c
  8604  01449A  B0D8               	btfsc	status,0,c
  8605  01449C                     u9501:
  8606  01449C  D6E1               	goto	l9420
  8607  01449E                     u9500:
  8608                           
  8609                           ;stkvar	_w @ sp[(-20)+16]
  8610  01449E  0EFD               	movlw	-3
  8611  0144A0  BEE3               	btfsc	plusw1,7,c
  8612  0144A2  D009               	goto	u9520
  8613  0144A4  0EFD               	movlw	-3
  8614  0144A6  50E3               	movf	plusw1,w,c
  8615  0144A8  E104               	bnz	u9510
  8616  0144AA  0EFC               	movlw	-4
  8617  0144AC  04E3               	decf	plusw1,w,c
  8618  0144AE  A0D8               	btfss	status,0,c
  8619  0144B0  D002               	goto	u9520
  8620  0144B2                     u9510:
  8621  0144B2  B222               	btfsc	_flags^0,1,c
  8622  0144B4  D6D5               	goto	l9420
  8623  0144B6                     u9520:
  8624                           
  8625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8626  0144B6  A822               	btfss	_flags^0,4,c
  8627  0144B8  D036               	goto	l9468
  8628                           
  8629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8630                           ;stkvar	_i @ sp[(-20)+14]
  8631  0144BA  50E1               	movf	fsr1l,w,c
  8632  0144BC  0FFA               	addlw	-6
  8633  0144BE  6ED9               	movwf	fsr2l,c
  8634  0144C0  50E2               	movf	fsr1h,w,c
  8635  0144C2  6EDA               	movwf	fsr2h,c
  8636  0144C4  0EFF               	movlw	255
  8637  0144C6  22DA               	addwfc	fsr2h,f,c
  8638  0144C8  06DE               	decf	postinc2,f,c
  8639  0144CA  0E00               	movlw	0
  8640  0144CC  5ADD               	subwfb	postdec2,f,c
  8641                           
  8642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8643                           ;stkvar	_x @ sp[(-20)+-11]
  8644                           ;stkvar	_i @ sp[(-20)+14]
  8645  0144CE  0EFA               	movlw	-6
  8646  0144D0  006F FF8C  F03F    	movff	plusw1,btemp+10
  8647  0144D6  0EFB               	movlw	-5
  8648  0144D8  006F FF8C  F040    	movff	plusw1,btemp+11
  8649  0144DE  0EA4               	movlw	low _dbuf
  8650  0144E0  243F               	addwf	(btemp+10)^0,w,c
  8651  0144E2  6ED9               	movwf	fsr2l,c
  8652  0144E4  0E01               	movlw	high _dbuf
  8653  0144E6  2040               	addwfc	(btemp+11)^0,w,c
  8654  0144E8  6EDA               	movwf	fsr2h,c
  8655  0144EA  0EE1               	movlw	-31
  8656  0144EC  006F FF8F FFDF     	movff	plusw1,indf2
  8657                           
  8658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8659                           ;stkvar	_i @ sp[(-20)+14]
  8660  0144F2  50E1               	movf	fsr1l,w,c
  8661  0144F4  0FFA               	addlw	-6
  8662  0144F6  6ED9               	movwf	fsr2l,c
  8663  0144F8  50E2               	movf	fsr1h,w,c
  8664  0144FA  6EDA               	movwf	fsr2h,c
  8665  0144FC  0EFF               	movlw	255
  8666  0144FE  22DA               	addwfc	fsr2h,f,c
  8667  014500  06DE               	decf	postinc2,f,c
  8668  014502  0E00               	movlw	0
  8669  014504  5ADD               	subwfb	postdec2,f,c
  8670                           
  8671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8672                           ;stkvar	_i @ sp[(-20)+14]
  8673  014506  0EFA               	movlw	-6
  8674  014508  006F FF8C  F03F    	movff	plusw1,btemp+10
  8675  01450E  0EFB               	movlw	-5
  8676  014510  006F FF8C  F040    	movff	plusw1,btemp+11
  8677  014516  0EA4               	movlw	low _dbuf
  8678  014518  243F               	addwf	(btemp+10)^0,w,c
  8679  01451A  6ED9               	movwf	fsr2l,c
  8680  01451C  0E01               	movlw	high _dbuf
  8681  01451E  2040               	addwfc	(btemp+11)^0,w,c
  8682  014520  6EDA               	movwf	fsr2h,c
  8683  014522  0E30               	movlw	48
  8684  014524  6EDF               	movwf	indf2,c
  8685  014526                     l9468:
  8686                           
  8687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8688                           ;stkvar	_w @ sp[(-20)+16]
  8689  014526  0EFC               	movlw	-4
  8690  014528  006F FF8F FFE6     	movff	plusw1,postinc1
  8691  01452E  006F FF8F FFE6     	movff	plusw1,postinc1
  8692                           
  8693                           ;stkvar	_i @ sp[(-22)+14]
  8694  014534  0EA4               	movlw	low _dbuf
  8695  014536  6E3F               	movwf	(btemp+10)^0,c
  8696  014538  0E01               	movlw	high _dbuf
  8697  01453A  6E40               	movwf	(btemp+11)^0,c
  8698  01453C  0EF8               	movlw	-8
  8699  01453E  50E3               	movf	plusw1,w,c
  8700  014540  263F               	addwf	(btemp+10)^0,f,c
  8701  014542  0EF9               	movlw	-7
  8702  014544  50E3               	movf	plusw1,w,c
  8703  014546  2240               	addwfc	(btemp+11)^0,f,c
  8704  014548  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8705  01454E  0060  F103  FFE6   	movff	btemp+11,postinc1
  8706                           
  8707                           ;stkvar	_fp @ sp[(-24)+-2]
  8708  014554  0EE6               	movlw	-26
  8709  014556  006F FF8F FFE6     	movff	plusw1,postinc1
  8710  01455C  006F FF8F FFE6     	movff	plusw1,postinc1
  8711  014562  EC8C  F0B3         	call	_pad	;wreg free
  8712                           
  8713                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8714  014566  0EE1               	movlw	225
  8715  014568  26E1               	addwf	fsr1l,f,c
  8716  01456A  0EFF               	movlw	255
  8717  01456C  22E2               	addwfc	fsr1h,f,c
  8718  01456E  0012               	return		;funcret
  8719  014570                     __end_of_xtoa:
  8720                           	opt callstack 0
  8721                           
  8722 ;; *************** function _toupper *****************
  8723 ;; Defined at:
  8724 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;  c               2  [STACK] int 
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  2  [STACK] int 
  8731 ;; Registers used:
  8732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/1
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8742 ;;Total ram usage:        0 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; Hardware stack levels required when called:    7
  8745 ;; This function calls:
  8746 ;;		_islower
  8747 ;; This function is called by:
  8748 ;;		_xtoa
  8749 ;; This function uses a reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text35
  8753  0173BC                     __ptext35:
  8754                           	opt callstack 0
  8755  0173BC                     _toupper:
  8756                           	opt callstack 0
  8757                           
  8758                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8759  0173BC  52E6               	movf	postinc1,f,c
  8760  0173BE  52E6               	movf	postinc1,f,c
  8761                           
  8762                           ;stkvar	_c @ sp[(-2)+-2]
  8763                           
  8764                           ;incstack = 0
  8765  0173C0  0EFC               	movlw	-4
  8766  0173C2  50E3               	movf	plusw1,w,c
  8767  0173C4  0F9F               	addlw	159
  8768  0173C6  6E3F               	movwf	(btemp+10)^0,c
  8769  0173C8  0EFD               	movlw	-3
  8770  0173CA  006F FF8C  F040    	movff	plusw1,btemp+11
  8771  0173D0  0EFF               	movlw	255
  8772  0173D2  2240               	addwfc	(btemp+11)^0,f,c
  8773  0173D4  5040               	movf	(btemp+11)^0,w,c
  8774  0173D6  E106               	bnz	u5090
  8775  0173D8  0E1A               	movlw	26
  8776  0173DA  5C3F               	subwf	(btemp+10)^0,w,c
  8777  0173DC  B0D8               	btfsc	status,0,c
  8778  0173DE  D002               	goto	u5090
  8779  0173E0  0E01               	movlw	1
  8780  0173E2  D001               	goto	u5100
  8781  0173E4                     u5090:
  8782  0173E4  0E00               	movlw	0
  8783  0173E6                     u5100:
  8784  0173E6  6E3F               	movwf	(btemp+10)^0,c
  8785  0173E8  6A40               	clrf	(btemp+11)^0,c
  8786                           
  8787                           ;stkvar	_toupper$4801 @ sp[(-2)+0]
  8788  0173EA  0EFE               	movlw	-2
  8789  0173EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8790  0173F2  0EFF               	movlw	-1
  8791  0173F4  0060  F103  FFE3   	movff	btemp+11,plusw1
  8792                           
  8793                           ;stkvar	_toupper$4801 @ sp[(-2)+0]
  8794  0173FA  0EFE               	movlw	-2
  8795  0173FC  006F FF8C  F035    	movff	plusw1,btemp
  8796  017402  0EFF               	movlw	-1
  8797  017404  50E3               	movf	plusw1,w,c
  8798  017406  1035               	iorwf	btemp^0,w,c
  8799  017408  B4D8               	btfsc	status,2,c
  8800  01740A  D00D               	goto	l6294
  8801                           
  8802                           ;stkvar	_c @ sp[(-2)+-2]
  8803  01740C  0EFC               	movlw	-4
  8804  01740E  006F FF8C  F035    	movff	plusw1,btemp
  8805  017414  0EFD               	movlw	-3
  8806  017416  006F FF8C  F036    	movff	plusw1,btemp+1
  8807  01741C  0E5F               	movlw	95
  8808  01741E  1635               	andwf	btemp^0,f,c
  8809  017420  0E00               	movlw	0
  8810  017422  1636               	andwf	(btemp+1)^0,f,c
  8811  017424  D008               	goto	l2829
  8812  017426                     l6294:
  8813                           
  8814                           ;stkvar	_c @ sp[(-2)+-2]
  8815  017426  0EFC               	movlw	-4
  8816  017428  006F FF8C  F035    	movff	plusw1,btemp
  8817  01742E  0EFD               	movlw	-3
  8818  017430  006F FF8C  F036    	movff	plusw1,btemp+1
  8819  017436                     l2829:
  8820                           
  8821                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8822  017436  52E5               	movf	postdec1,f,c
  8823  017438  52E5               	movf	postdec1,f,c
  8824  01743A  52E5               	movf	postdec1,f,c
  8825  01743C  52E5               	movf	postdec1,f,c
  8826  01743E  0012               	return		;funcret
  8827  017440                     __end_of_toupper:
  8828                           	opt callstack 0
  8829                           
  8830 ;; *************** function _islower *****************
  8831 ;; Defined at:
  8832 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  c               2  [STACK] int 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;		None
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  2  [STACK] int 
  8839 ;; Registers used:
  8840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8850 ;;Total ram usage:        0 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; Hardware stack levels required when called:    6
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		_toupper
  8857 ;; This function uses a reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text36
  8861  017E34                     __ptext36:
  8862                           	opt callstack 0
  8863  017E34                     _islower:
  8864                           	opt callstack 16
  8865                           
  8866                           ;stkvar	_c @ sp[(0)+-2]
  8867                           
  8868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8869                           ;incstack = 0
  8870  017E34  0EFE               	movlw	-2
  8871  017E36  50E3               	movf	plusw1,w,c
  8872  017E38  0F9F               	addlw	159
  8873  017E3A  6E3F               	movwf	(btemp+10)^0,c
  8874  017E3C  0EFF               	movlw	-1
  8875  017E3E  006F FF8C  F040    	movff	plusw1,btemp+11
  8876  017E44  0EFF               	movlw	255
  8877  017E46  2240               	addwfc	(btemp+11)^0,f,c
  8878  017E48  5040               	movf	(btemp+11)^0,w,c
  8879  017E4A  E106               	bnz	u4780
  8880  017E4C  0E1A               	movlw	26
  8881  017E4E  5C3F               	subwf	(btemp+10)^0,w,c
  8882  017E50  B0D8               	btfsc	status,0,c
  8883  017E52  D002               	goto	u4780
  8884  017E54  0E01               	movlw	1
  8885  017E56  D001               	goto	u4790
  8886  017E58                     u4780:
  8887  017E58  0E00               	movlw	0
  8888  017E5A                     u4790:
  8889  017E5A  6E35               	movwf	btemp^0,c
  8890  017E5C  6A36               	clrf	(btemp+1)^0,c
  8891                           
  8892                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8893  017E5E  52E5               	movf	postdec1,f,c
  8894  017E60  52E5               	movf	postdec1,f,c
  8895  017E62  0012               	return		;funcret
  8896  017E64                     __end_of_islower:
  8897                           	opt callstack 0
  8898                           
  8899 ;; *************** function _isalpha *****************
  8900 ;; Defined at:
  8901 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  c               2  [STACK] int 
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;		None
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  2  [STACK] int 
  8908 ;; Registers used:
  8909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8919 ;;Total ram usage:        0 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:    6
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_xtoa
  8926 ;; This function uses a reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text37
  8930  017BAA                     __ptext37:
  8931                           	opt callstack 0
  8932  017BAA                     _isalpha:
  8933                           	opt callstack 17
  8934                           
  8935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8936                           ;incstack = 0
  8937  017BAA  0E9F               	movlw	159
  8938  017BAC  6E3F               	movwf	(btemp+10)^0,c
  8939  017BAE  0EFF               	movlw	255
  8940  017BB0  6E40               	movwf	(btemp+11)^0,c
  8941                           
  8942                           ;stkvar	_c @ sp[(0)+-2]
  8943  017BB2  0EFE               	movlw	-2
  8944  017BB4  006F FF8C  F03D    	movff	plusw1,btemp+8
  8945  017BBA  0EFF               	movlw	-1
  8946  017BBC  006F FF8C  F03E    	movff	plusw1,btemp+9
  8947  017BC2  0E20               	movlw	32
  8948  017BC4  123D               	iorwf	(btemp+8)^0,f,c
  8949  017BC6  0E00               	movlw	0
  8950  017BC8  123E               	iorwf	(btemp+9)^0,f,c
  8951  017BCA  503F               	movf	(btemp+10)^0,w,c
  8952  017BCC  263D               	addwf	(btemp+8)^0,f,c
  8953  017BCE  5040               	movf	(btemp+11)^0,w,c
  8954  017BD0  223E               	addwfc	(btemp+9)^0,f,c
  8955  017BD2  503E               	movf	(btemp+9)^0,w,c
  8956  017BD4  E106               	bnz	u5070
  8957  017BD6  0E1A               	movlw	26
  8958  017BD8  5C3D               	subwf	(btemp+8)^0,w,c
  8959  017BDA  B0D8               	btfsc	status,0,c
  8960  017BDC  D002               	goto	u5070
  8961  017BDE  0E01               	movlw	1
  8962  017BE0  D001               	goto	u5080
  8963  017BE2                     u5070:
  8964  017BE2  0E00               	movlw	0
  8965  017BE4                     u5080:
  8966  017BE4  6E35               	movwf	btemp^0,c
  8967  017BE6  6A36               	clrf	(btemp+1)^0,c
  8968                           
  8969                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8970  017BE8  52E5               	movf	postdec1,f,c
  8971  017BEA  52E5               	movf	postdec1,f,c
  8972  017BEC  0012               	return		;funcret
  8973  017BEE                     __end_of_isalpha:
  8974                           	opt callstack 0
  8975                           
  8976 ;; *************** function _strncmp *****************
  8977 ;; Defined at:
  8978 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  _l              2  [STACK] PTR const unsigned char 
  8981 ;;		 -> ct(3), 
  8982 ;;  _r              2  [STACK] PTR const unsigned char 
  8983 ;;		 -> STR_43(3), 
  8984 ;;  n               2  [STACK] unsigned int 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  r               2  [STACK] PTR const unsigned char 
  8987 ;;		 -> STR_43(3), 
  8988 ;;  l               2  [STACK] PTR const unsigned char 
  8989 ;;		 -> ct(3), 
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  2  [STACK] int 
  8992 ;; Registers used:
  8993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/4
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9003 ;;Total ram usage:        0 bytes
  9004 ;; Hardware stack levels used:    1
  9005 ;; Hardware stack levels required when called:    6
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		_vfpfcnvrt
  9010 ;; This function uses a reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text38
  9014  015C2E                     __ptext38:
  9015                           	opt callstack 0
  9016  015C2E                     _strncmp:
  9017                           	opt callstack 0
  9018                           
  9019                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9020  015C2E  52E6               	movf	postinc1,f,c
  9021  015C30  52E6               	movf	postinc1,f,c
  9022  015C32  52E6               	movf	postinc1,f,c
  9023  015C34  52E6               	movf	postinc1,f,c
  9024                           
  9025                           ;stkvar	__l @ sp[(-4)+-2]
  9026                           
  9027                           ;incstack = 0
  9028  015C36  0EFA               	movlw	-6
  9029  015C38  006F FF8C  F03F    	movff	plusw1,btemp+10
  9030  015C3E  0EFB               	movlw	-5
  9031  015C40  006F FF8C  F040    	movff	plusw1,btemp+11
  9032                           
  9033                           ;stkvar	_l @ sp[(-4)+2]
  9034  015C46  0EFF               	movlw	-1
  9035  015C48  0060  F103  FFE3   	movff	btemp+11,plusw1
  9036  015C4E  0EFE               	movlw	-2
  9037  015C50  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9038                           
  9039                           ;stkvar	__r @ sp[(-4)+-4]
  9040  015C56  0EF8               	movlw	-8
  9041  015C58  006F FF8C  F03F    	movff	plusw1,btemp+10
  9042  015C5E  0EF9               	movlw	-7
  9043  015C60  006F FF8C  F040    	movff	plusw1,btemp+11
  9044                           
  9045                           ;stkvar	_r @ sp[(-4)+0]
  9046  015C66  0EFD               	movlw	-3
  9047  015C68  0060  F103  FFE3   	movff	btemp+11,plusw1
  9048  015C6E  0EFC               	movlw	-4
  9049  015C70  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9050                           
  9051                           ;stkvar	_n @ sp[(-4)+-6]
  9052  015C76  0EF6               	movlw	-10
  9053  015C78  006F FF8C  F035    	movff	plusw1,btemp
  9054  015C7E  0E01               	movlw	1
  9055  015C80  5E35               	subwf	btemp^0,f,c
  9056  015C82  0EF6               	movlw	-10
  9057  015C84  0060  F0D7  FFE3   	movff	btemp,plusw1
  9058  015C8A  0EF7               	movlw	-9
  9059  015C8C  006F FF8C  F035    	movff	plusw1,btemp
  9060  015C92  0E00               	movlw	0
  9061  015C94  5A35               	subwfb	btemp^0,f,c
  9062  015C96  0EF7               	movlw	-9
  9063  015C98  0060  F0D7  FFE3   	movff	btemp,plusw1
  9064  015C9E  0EF6               	movlw	-10
  9065  015CA0  28E3               	incf	plusw1,w,c
  9066  015CA2  E13F               	bnz	l7452
  9067  015CA4  0EF7               	movlw	-9
  9068  015CA6  28E3               	incf	plusw1,w,c
  9069  015CA8  A4D8               	btfss	status,2,c
  9070  015CAA  D03B               	goto	l7452
  9071  015CAC  0E00               	movlw	0
  9072  015CAE  6E35               	movwf	btemp^0,c
  9073  015CB0  0E00               	movlw	0
  9074  015CB2  6E36               	movwf	(btemp+1)^0,c
  9075  015CB4  D09B               	goto	l2801
  9076  015CB6                     l7450:
  9077                           
  9078                           ;stkvar	_l @ sp[(-4)+2]
  9079  015CB6  0EFE               	movlw	-2
  9080  015CB8  50E3               	movf	plusw1,w,c
  9081  015CBA  0F01               	addlw	1
  9082  015CBC  6E35               	movwf	btemp^0,c
  9083  015CBE  0EFE               	movlw	-2
  9084  015CC0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9085  015CC6  6A35               	clrf	btemp^0,c
  9086  015CC8  0EFF               	movlw	-1
  9087  015CCA  50E3               	movf	plusw1,w,c
  9088  015CCC  2035               	addwfc	btemp^0,w,c
  9089  015CCE  6E35               	movwf	btemp^0,c
  9090  015CD0  0EFF               	movlw	-1
  9091  015CD2  0060  F0D7  FFE3   	movff	btemp,plusw1
  9092                           
  9093                           ;stkvar	_r @ sp[(-4)+0]
  9094  015CD8  0EFC               	movlw	-4
  9095  015CDA  50E3               	movf	plusw1,w,c
  9096  015CDC  0F01               	addlw	1
  9097  015CDE  6E35               	movwf	btemp^0,c
  9098  015CE0  0EFC               	movlw	-4
  9099  015CE2  0060  F0D7  FFE3   	movff	btemp,plusw1
  9100  015CE8  6A35               	clrf	btemp^0,c
  9101  015CEA  0EFD               	movlw	-3
  9102  015CEC  50E3               	movf	plusw1,w,c
  9103  015CEE  2035               	addwfc	btemp^0,w,c
  9104  015CF0  6E35               	movwf	btemp^0,c
  9105  015CF2  0EFD               	movlw	-3
  9106  015CF4  0060  F0D7  FFE3   	movff	btemp,plusw1
  9107                           
  9108                           ;stkvar	_n @ sp[(-4)+-6]
  9109  015CFA  0EF6               	movlw	-10
  9110  015CFC  006F FF8C  F035    	movff	plusw1,btemp
  9111  015D02  0E01               	movlw	1
  9112  015D04  5E35               	subwf	btemp^0,f,c
  9113  015D06  0EF6               	movlw	-10
  9114  015D08  0060  F0D7  FFE3   	movff	btemp,plusw1
  9115  015D0E  0EF7               	movlw	-9
  9116  015D10  006F FF8C  F035    	movff	plusw1,btemp
  9117  015D16  0E00               	movlw	0
  9118  015D18  5A35               	subwfb	btemp^0,f,c
  9119  015D1A  0EF7               	movlw	-9
  9120  015D1C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9121  015D22                     l7452:
  9122                           
  9123                           ;stkvar	_l @ sp[(-4)+2]
  9124  015D22  0EFE               	movlw	-2
  9125  015D24  006F FF8F FFD9     	movff	plusw1,fsr2l
  9126  015D2A  0EFF               	movlw	-1
  9127  015D2C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9128  015D32  50DF               	movf	indf2,w,c
  9129  015D34  B4D8               	btfsc	status,2,c
  9130  015D36  D03B               	goto	u7270
  9131                           
  9132                           ;stkvar	_r @ sp[(-4)+0]
  9133  015D38  50E1               	movf	fsr1l,w,c
  9134  015D3A  0FFC               	addlw	-4
  9135  015D3C  6ED9               	movwf	fsr2l,c
  9136  015D3E  50E2               	movf	fsr1h,w,c
  9137  015D40  6EDA               	movwf	fsr2h,c
  9138  015D42  0EFF               	movlw	255
  9139  015D44  22DA               	addwfc	fsr2h,f,c
  9140  015D46  006F FF7B FFF6     	movff	postinc2,tblptrl
  9141  015D4C  006F FF77 FFF7     	movff	postdec2,tblptrh
  9142  015D52                     	if	0	;tblptru may be non-zero
  9143  015D52                     	endif
  9144  015D52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9145  015D52  0E00               	movlw	low (__mediumconst shr (0+16))
  9146  015D54  6EF8               	movwf	tblptru,c
  9147  015D56                     	endif
  9148  015D56  0008               	tblrd		*
  9149  015D58  50F5               	movf	tablat,w,c
  9150  015D5A  0900               	iorlw	0
  9151  015D5C  B4D8               	btfsc	status,2,c
  9152  015D5E  D027               	goto	u7270
  9153                           
  9154                           ;stkvar	_n @ sp[(-4)+-6]
  9155  015D60  0EF6               	movlw	-10
  9156  015D62  006F FF8C  F035    	movff	plusw1,btemp
  9157  015D68  0EF7               	movlw	-9
  9158  015D6A  50E3               	movf	plusw1,w,c
  9159  015D6C  1035               	iorwf	btemp^0,w,c
  9160  015D6E  B4D8               	btfsc	status,2,c
  9161  015D70  D01E               	goto	u7270
  9162                           
  9163                           ;stkvar	_l @ sp[(-4)+2]
  9164  015D72  0EFE               	movlw	-2
  9165  015D74  006F FF8F FFD9     	movff	plusw1,fsr2l
  9166  015D7A  0EFF               	movlw	-1
  9167  015D7C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9168  015D82  50DF               	movf	indf2,w,c
  9169  015D84  6E40               	movwf	(btemp+11)^0,c
  9170                           
  9171                           ;stkvar	_r @ sp[(-4)+0]
  9172  015D86  50E1               	movf	fsr1l,w,c
  9173  015D88  0FFC               	addlw	-4
  9174  015D8A  6ED9               	movwf	fsr2l,c
  9175  015D8C  50E2               	movf	fsr1h,w,c
  9176  015D8E  6EDA               	movwf	fsr2h,c
  9177  015D90  0EFF               	movlw	255
  9178  015D92  22DA               	addwfc	fsr2h,f,c
  9179  015D94  006F FF7B FFF6     	movff	postinc2,tblptrl
  9180  015D9A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9181  015DA0                     	if	0	;tblptru may be non-zero
  9182  015DA0                     	endif
  9183  015DA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9184  015DA0  0E00               	movlw	low (__mediumconst shr (0+16))
  9185  015DA2  6EF8               	movwf	tblptru,c
  9186  015DA4                     	endif
  9187  015DA4  0008               	tblrd		*
  9188  015DA6  50F5               	movf	tablat,w,c
  9189  015DA8  1840               	xorwf	(btemp+11)^0,w,c
  9190  015DAA  B4D8               	btfsc	status,2,c
  9191  015DAC  D784               	goto	l7450
  9192  015DAE                     u7270:
  9193                           
  9194                           ;stkvar	_l @ sp[(-4)+2]
  9195  015DAE  0EFE               	movlw	-2
  9196  015DB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9197  015DB6  0EFF               	movlw	-1
  9198  015DB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9199  015DBE  50DF               	movf	indf2,w,c
  9200  015DC0  6E35               	movwf	btemp^0,c
  9201  015DC2  6A36               	clrf	(btemp+1)^0,c
  9202                           
  9203                           ;stkvar	_r @ sp[(-4)+0]
  9204  015DC4  50E1               	movf	fsr1l,w,c
  9205  015DC6  0FFC               	addlw	-4
  9206  015DC8  6ED9               	movwf	fsr2l,c
  9207  015DCA  50E2               	movf	fsr1h,w,c
  9208  015DCC  6EDA               	movwf	fsr2h,c
  9209  015DCE  0EFF               	movlw	255
  9210  015DD0  22DA               	addwfc	fsr2h,f,c
  9211  015DD2  006F FF7B FFF6     	movff	postinc2,tblptrl
  9212  015DD8  006F FF77 FFF7     	movff	postdec2,tblptrh
  9213  015DDE                     	if	0	;tblptru may be non-zero
  9214  015DDE                     	endif
  9215  015DDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9216  015DDE  0E00               	movlw	low (__mediumconst shr (0+16))
  9217  015DE0  6EF8               	movwf	tblptru,c
  9218  015DE2                     	endif
  9219  015DE2  0008               	tblrd		*
  9220  015DE4  50F5               	movf	tablat,w,c
  9221  015DE6  5E35               	subwf	btemp^0,f,c
  9222  015DE8  0E00               	movlw	0
  9223  015DEA  5A36               	subwfb	(btemp+1)^0,f,c
  9224  015DEC                     l2801:
  9225                           
  9226                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9227  015DEC  0EF6               	movlw	246
  9228  015DEE  26E1               	addwf	fsr1l,f,c
  9229  015DF0  0EFF               	movlw	255
  9230  015DF2  22E2               	addwfc	fsr1h,f,c
  9231  015DF4  0012               	return		;funcret
  9232  015DF6                     __end_of_strncmp:
  9233                           	opt callstack 0
  9234                           
  9235 ;; *************** function _stoa *****************
  9236 ;; Defined at:
  9237 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9240 ;;		 -> f(6), NULL(0), 
  9241 ;;  s               2  [STACK] PTR unsigned char 
  9242 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  9243 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  9244 ;;		 -> STR_3(4), V(189), 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  nuls            7  [STACK] unsigned char [7]
  9247 ;;  l               2  [STACK] int 
  9248 ;;  p               2  [STACK] int 
  9249 ;;  cp              2  [STACK] PTR unsigned char 
  9250 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_15(9), 
  9251 ;;		 -> STR_14(12), D.lcd(216), D(218), T(144), 
  9252 ;;		 -> STR_7(4), STR_3(4), V(189), 
  9253 ;;  w               2  [STACK] int 
  9254 ;;  i               2  [STACK] int 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  2  [STACK] int 
  9257 ;; Registers used:
  9258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/4
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9268 ;;Total ram usage:        0 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; Hardware stack levels required when called:    9
  9271 ;; This function calls:
  9272 ;;		_fputc
  9273 ;;		_strlen
  9274 ;; This function is called by:
  9275 ;;		_vfpfcnvrt
  9276 ;; This function uses a reentrant model
  9277 ;;
  9278                           
  9279                           	psect	text39
  9280  014BC8                     __ptext39:
  9281                           	opt callstack 0
  9282  014BC8                     _stoa:
  9283                           	opt callstack 0
  9284                           
  9285                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9286  014BC8  0E11               	movlw	17
  9287  014BCA  26E1               	addwf	fsr1l,f,c
  9288  014BCC  0E00               	movlw	0
  9289  014BCE  22E2               	addwfc	fsr1h,f,c
  9290                           
  9291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9292                           
  9293                           ;incstack = 0
  9294  014BD0  EE20  F0CD         	lfsr	2,stoa@F1166
  9295                           
  9296                           ;stkvar	_nuls @ sp[(-17)+0]
  9297  014BD4  0E07               	movlw	7
  9298  014BD6  6E35               	movwf	btemp^0,c
  9299  014BD8  0EEF               	movlw	-17
  9300  014BDA                     us926999:
  9301  014BDA  006F FF7B FFE3     	movff	postinc2,plusw1
  9302  014BE0  28E8               	incf	wreg,w,c
  9303  014BE2  2E35               	decfsz	btemp^0,f,c
  9304  014BE4  D7FA               	bra	us926999
  9305                           
  9306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9307                           ;stkvar	_s @ sp[(-17)+-4]
  9308  014BE6  0EEB               	movlw	-21
  9309  014BE8  006F FF8C  F03F    	movff	plusw1,btemp+10
  9310  014BEE  0EEC               	movlw	-20
  9311  014BF0  006F FF8C  F040    	movff	plusw1,btemp+11
  9312                           
  9313                           ;stkvar	_cp @ sp[(-17)+11]
  9314  014BF6  0EFB               	movlw	-5
  9315  014BF8  0060  F103  FFE3   	movff	btemp+11,plusw1
  9316  014BFE  0EFA               	movlw	-6
  9317  014C00  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9318                           
  9319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9320                           ;stkvar	_cp @ sp[(-17)+11]
  9321  014C06  0EFA               	movlw	-6
  9322  014C08  006F FF8C  F035    	movff	plusw1,btemp
  9323  014C0E  0EFB               	movlw	-5
  9324  014C10  50E3               	movf	plusw1,w,c
  9325  014C12  1035               	iorwf	btemp^0,w,c
  9326  014C14  A4D8               	btfss	status,2,c
  9327  014C16  D00E               	goto	l9356
  9328                           
  9329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9330                           ;stkvar	_nuls @ sp[(-17)+0]
  9331  014C18  0EEF               	movlw	239
  9332  014C1A  24E1               	addwf	fsr1l,w,c
  9333  014C1C  6E3F               	movwf	(btemp+10)^0,c
  9334  014C1E  0EFF               	movlw	255
  9335  014C20  20E2               	addwfc	fsr1h,w,c
  9336  014C22  6E40               	movwf	(btemp+11)^0,c
  9337                           
  9338                           ;stkvar	_cp @ sp[(-17)+11]
  9339  014C24  0EFB               	movlw	-5
  9340  014C26  0060  F103  FFE3   	movff	btemp+11,plusw1
  9341  014C2C  0EFA               	movlw	-6
  9342  014C2E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9343  014C34                     l9356:
  9344                           
  9345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9346                           ;stkvar	_cp @ sp[(-17)+11]
  9347  014C34  0EFA               	movlw	-6
  9348  014C36  006F FF8F FFE6     	movff	plusw1,postinc1
  9349  014C3C  006F FF8F FFE6     	movff	plusw1,postinc1
  9350  014C42  EC21  F0B8         	call	_strlen	;wreg free
  9351                           
  9352                           ;stkvar	_l @ sp[(-17)+7]
  9353  014C46  0EF6               	movlw	-10
  9354  014C48  0060  F0D7  FFE3   	movff	btemp,plusw1
  9355  014C4E  0EF7               	movlw	-9
  9356  014C50  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9357                           
  9358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9359                           ;stkvar	_p @ sp[(-17)+9]
  9360  014C56  0EF8               	movlw	-8
  9361  014C58  0060  F083  FFE3   	movff	_prec,plusw1
  9362  014C5E  0EF9               	movlw	-7
  9363  014C60  0060  F087  FFE3   	movff	_prec+1,plusw1
  9364                           
  9365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9366                           ;stkvar	_p @ sp[(-17)+9]
  9367  014C66  0EF9               	movlw	-7
  9368  014C68  BEE3               	btfsc	plusw1,7,c
  9369  014C6A  D023               	goto	l1875
  9370                           
  9371                           ;stkvar	_l @ sp[(-17)+7]
  9372                           ;stkvar	_p @ sp[(-17)+9]
  9373  014C6C  50E1               	movf	fsr1l,w,c
  9374  014C6E  0FF8               	addlw	-8
  9375  014C70  6ED9               	movwf	fsr2l,c
  9376  014C72  50E2               	movf	fsr1h,w,c
  9377  014C74  6EDA               	movwf	fsr2h,c
  9378  014C76  0EFF               	movlw	255
  9379  014C78  22DA               	addwfc	fsr2h,f,c
  9380  014C7A  0EF6               	movlw	-10
  9381  014C7C  50E3               	movf	plusw1,w,c
  9382  014C7E  5CDE               	subwf	postinc2,w,c
  9383  014C80  50DE               	movf	postinc2,w,c
  9384  014C82  0A80               	xorlw	128
  9385  014C84  6E35               	movwf	btemp^0,c
  9386  014C86  0EF7               	movlw	-9
  9387  014C88  50E3               	movf	plusw1,w,c
  9388  014C8A  0A80               	xorlw	128
  9389  014C8C  5835               	subwfb	btemp^0,w,c
  9390  014C8E  B0D8               	btfsc	status,0,c
  9391  014C90  D010               	goto	l1875
  9392                           
  9393                           ;stkvar	_p @ sp[(-17)+9]
  9394                           ;stkvar	_l @ sp[(-17)+7]
  9395  014C92  0EF8               	movlw	-8
  9396  014C94  006F FF8C  F035    	movff	plusw1,btemp
  9397  014C9A  0EF6               	movlw	-10
  9398  014C9C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9399  014CA2  0EF9               	movlw	-7
  9400  014CA4  006F FF8C  F035    	movff	plusw1,btemp
  9401  014CAA  0EF7               	movlw	-9
  9402  014CAC  0060  F0D7  FFE3   	movff	btemp,plusw1
  9403  014CB2                     l1875:
  9404                           
  9405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9406                           ;stkvar	_l @ sp[(-17)+7]
  9407                           ;stkvar	_p @ sp[(-17)+9]
  9408  014CB2  0EF6               	movlw	-10
  9409  014CB4  006F FF8C  F035    	movff	plusw1,btemp
  9410  014CBA  0EF8               	movlw	-8
  9411  014CBC  0060  F0D7  FFE3   	movff	btemp,plusw1
  9412  014CC2  0EF7               	movlw	-9
  9413  014CC4  006F FF8C  F035    	movff	plusw1,btemp
  9414  014CCA  0EF9               	movlw	-7
  9415  014CCC  0060  F0D7  FFE3   	movff	btemp,plusw1
  9416                           
  9417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9418                           ;stkvar	_w @ sp[(-17)+13]
  9419  014CD2  0EFC               	movlw	-4
  9420  014CD4  0060  F07B  FFE3   	movff	_width,plusw1
  9421  014CDA  0EFD               	movlw	-3
  9422  014CDC  0060  F07F  FFE3   	movff	_width+1,plusw1
  9423                           
  9424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9425  014CE2  A022               	btfss	_flags^0,0,c
  9426  014CE4  D01F               	goto	l9376
  9427  014CE6  D031               	goto	u9310
  9428  014CE8                     l9372:
  9429                           
  9430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9431                           ;stkvar	_fp @ sp[(-17)+-2]
  9432  014CE8  0EED               	movlw	-19
  9433  014CEA  006F FF8F FFE6     	movff	plusw1,postinc1
  9434  014CF0  006F FF8F FFE6     	movff	plusw1,postinc1
  9435  014CF6  0E20               	movlw	32
  9436  014CF8  6EE6               	movwf	postinc1,c
  9437  014CFA  0E00               	movlw	0
  9438  014CFC  6EE6               	movwf	postinc1,c
  9439  014CFE  EC6E  F0B2         	call	_fputc	;wreg free
  9440                           
  9441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9442                           ;stkvar	_l @ sp[(-17)+7]
  9443  014D02  0EF6               	movlw	-10
  9444  014D04  50E3               	movf	plusw1,w,c
  9445  014D06  0F01               	addlw	1
  9446  014D08  6E35               	movwf	btemp^0,c
  9447  014D0A  0EF6               	movlw	-10
  9448  014D0C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9449  014D12  6A35               	clrf	btemp^0,c
  9450  014D14  0EF7               	movlw	-9
  9451  014D16  50E3               	movf	plusw1,w,c
  9452  014D18  2035               	addwfc	btemp^0,w,c
  9453  014D1A  6E35               	movwf	btemp^0,c
  9454  014D1C  0EF7               	movlw	-9
  9455  014D1E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9456  014D24                     l9376:
  9457                           
  9458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9459                           ;stkvar	_w @ sp[(-17)+13]
  9460                           ;stkvar	_l @ sp[(-17)+7]
  9461  014D24  50E1               	movf	fsr1l,w,c
  9462  014D26  0FF6               	addlw	-10
  9463  014D28  6ED9               	movwf	fsr2l,c
  9464  014D2A  50E2               	movf	fsr1h,w,c
  9465  014D2C  6EDA               	movwf	fsr2h,c
  9466  014D2E  0EFF               	movlw	255
  9467  014D30  22DA               	addwfc	fsr2h,f,c
  9468  014D32  0EFC               	movlw	-4
  9469  014D34  50E3               	movf	plusw1,w,c
  9470  014D36  5CDE               	subwf	postinc2,w,c
  9471  014D38  50DE               	movf	postinc2,w,c
  9472  014D3A  0A80               	xorlw	128
  9473  014D3C  6E35               	movwf	btemp^0,c
  9474  014D3E  0EFD               	movlw	-3
  9475  014D40  50E3               	movf	plusw1,w,c
  9476  014D42  0A80               	xorlw	128
  9477  014D44  5835               	subwfb	btemp^0,w,c
  9478  014D46  A0D8               	btfss	status,0,c
  9479  014D48  D7CF               	goto	l9372
  9480  014D4A                     u9310:
  9481                           
  9482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9483                           ;stkvar	_i @ sp[(-17)+15]
  9484  014D4A  0EFE               	movlw	-2
  9485  014D4C  6AE3               	clrf	plusw1,c
  9486  014D4E  0EFF               	movlw	-1
  9487  014D50  6AE3               	clrf	plusw1,c
  9488                           
  9489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9490  014D52  D045               	goto	l9386
  9491  014D54                     l9380:
  9492                           
  9493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9494                           ;stkvar	_fp @ sp[(-17)+-2]
  9495  014D54  0EED               	movlw	-19
  9496  014D56  006F FF8F FFE6     	movff	plusw1,postinc1
  9497  014D5C  006F FF8F FFE6     	movff	plusw1,postinc1
  9498                           
  9499                           ;stkvar	_cp @ sp[(-19)+11]
  9500  014D62  0EF8               	movlw	-8
  9501  014D64  006F FF8F FFF6     	movff	plusw1,tblptrl
  9502  014D6A  0EF9               	movlw	-7
  9503  014D6C  006F FF8F FFF7     	movff	plusw1,tblptrh
  9504  014D72  0E00               	movlw	low (__mediumconst shr (0+16))
  9505  014D74  6EF8               	movwf	tblptru,c
  9506  014D76  0E1F               	movlw	(high __ramtop+-1)
  9507  014D78  64F7               	cpfsgt	tblptrh,c
  9508  014D7A  D003               	bra	u9327
  9509  014D7C  0008               	tblrd		*
  9510  014D7E  50F5               	movf	tablat,w,c
  9511  014D80  D007               	bra	u9320
  9512  014D82                     u9327:
  9513  014D82  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9514  014D88  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9515  014D8E  50EF               	movf	indf0,w,c
  9516  014D90                     u9320:
  9517  014D90  6EE6               	movwf	postinc1,c
  9518  014D92  0E00               	movlw	0
  9519  014D94  6EE6               	movwf	postinc1,c
  9520  014D96  EC6E  F0B2         	call	_fputc	;wreg free
  9521                           
  9522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9523                           ;stkvar	_cp @ sp[(-17)+11]
  9524  014D9A  0EFA               	movlw	-6
  9525  014D9C  50E3               	movf	plusw1,w,c
  9526  014D9E  0F01               	addlw	1
  9527  014DA0  6E35               	movwf	btemp^0,c
  9528  014DA2  0EFA               	movlw	-6
  9529  014DA4  0060  F0D7  FFE3   	movff	btemp,plusw1
  9530  014DAA  6A35               	clrf	btemp^0,c
  9531  014DAC  0EFB               	movlw	-5
  9532  014DAE  50E3               	movf	plusw1,w,c
  9533  014DB0  2035               	addwfc	btemp^0,w,c
  9534  014DB2  6E35               	movwf	btemp^0,c
  9535  014DB4  0EFB               	movlw	-5
  9536  014DB6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9537                           
  9538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9539                           ;stkvar	_i @ sp[(-17)+15]
  9540  014DBC  0EFE               	movlw	-2
  9541  014DBE  50E3               	movf	plusw1,w,c
  9542  014DC0  0F01               	addlw	1
  9543  014DC2  6E35               	movwf	btemp^0,c
  9544  014DC4  0EFE               	movlw	-2
  9545  014DC6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9546  014DCC  6A35               	clrf	btemp^0,c
  9547  014DCE  0EFF               	movlw	-1
  9548  014DD0  50E3               	movf	plusw1,w,c
  9549  014DD2  2035               	addwfc	btemp^0,w,c
  9550  014DD4  6E35               	movwf	btemp^0,c
  9551  014DD6  0EFF               	movlw	-1
  9552  014DD8  0060  F0D7  FFE3   	movff	btemp,plusw1
  9553  014DDE                     l9386:
  9554                           
  9555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9556                           ;stkvar	_p @ sp[(-17)+9]
  9557                           ;stkvar	_i @ sp[(-17)+15]
  9558  014DDE  50E1               	movf	fsr1l,w,c
  9559  014DE0  0FFE               	addlw	-2
  9560  014DE2  6ED9               	movwf	fsr2l,c
  9561  014DE4  50E2               	movf	fsr1h,w,c
  9562  014DE6  6EDA               	movwf	fsr2h,c
  9563  014DE8  0EFF               	movlw	255
  9564  014DEA  22DA               	addwfc	fsr2h,f,c
  9565  014DEC  0EF8               	movlw	-8
  9566  014DEE  50E3               	movf	plusw1,w,c
  9567  014DF0  5CDE               	subwf	postinc2,w,c
  9568  014DF2  50DE               	movf	postinc2,w,c
  9569  014DF4  0A80               	xorlw	128
  9570  014DF6  6E35               	movwf	btemp^0,c
  9571  014DF8  0EF9               	movlw	-7
  9572  014DFA  50E3               	movf	plusw1,w,c
  9573  014DFC  0A80               	xorlw	128
  9574  014DFE  5835               	subwfb	btemp^0,w,c
  9575  014E00  A0D8               	btfss	status,0,c
  9576  014E02  D7A8               	goto	l9380
  9577                           
  9578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9579  014E04  B022               	btfsc	_flags^0,0,c
  9580  014E06  D01F               	goto	l9394
  9581  014E08  D031               	goto	u9350
  9582  014E0A                     l9390:
  9583                           
  9584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9585                           ;stkvar	_fp @ sp[(-17)+-2]
  9586  014E0A  0EED               	movlw	-19
  9587  014E0C  006F FF8F FFE6     	movff	plusw1,postinc1
  9588  014E12  006F FF8F FFE6     	movff	plusw1,postinc1
  9589  014E18  0E20               	movlw	32
  9590  014E1A  6EE6               	movwf	postinc1,c
  9591  014E1C  0E00               	movlw	0
  9592  014E1E  6EE6               	movwf	postinc1,c
  9593  014E20  EC6E  F0B2         	call	_fputc	;wreg free
  9594                           
  9595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9596                           ;stkvar	_l @ sp[(-17)+7]
  9597  014E24  0EF6               	movlw	-10
  9598  014E26  50E3               	movf	plusw1,w,c
  9599  014E28  0F01               	addlw	1
  9600  014E2A  6E35               	movwf	btemp^0,c
  9601  014E2C  0EF6               	movlw	-10
  9602  014E2E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9603  014E34  6A35               	clrf	btemp^0,c
  9604  014E36  0EF7               	movlw	-9
  9605  014E38  50E3               	movf	plusw1,w,c
  9606  014E3A  2035               	addwfc	btemp^0,w,c
  9607  014E3C  6E35               	movwf	btemp^0,c
  9608  014E3E  0EF7               	movlw	-9
  9609  014E40  0060  F0D7  FFE3   	movff	btemp,plusw1
  9610  014E46                     l9394:
  9611                           
  9612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9613                           ;stkvar	_w @ sp[(-17)+13]
  9614                           ;stkvar	_l @ sp[(-17)+7]
  9615  014E46  50E1               	movf	fsr1l,w,c
  9616  014E48  0FF6               	addlw	-10
  9617  014E4A  6ED9               	movwf	fsr2l,c
  9618  014E4C  50E2               	movf	fsr1h,w,c
  9619  014E4E  6EDA               	movwf	fsr2h,c
  9620  014E50  0EFF               	movlw	255
  9621  014E52  22DA               	addwfc	fsr2h,f,c
  9622  014E54  0EFC               	movlw	-4
  9623  014E56  50E3               	movf	plusw1,w,c
  9624  014E58  5CDE               	subwf	postinc2,w,c
  9625  014E5A  50DE               	movf	postinc2,w,c
  9626  014E5C  0A80               	xorlw	128
  9627  014E5E  6E35               	movwf	btemp^0,c
  9628  014E60  0EFD               	movlw	-3
  9629  014E62  50E3               	movf	plusw1,w,c
  9630  014E64  0A80               	xorlw	128
  9631  014E66  5835               	subwfb	btemp^0,w,c
  9632  014E68  A0D8               	btfss	status,0,c
  9633  014E6A  D7CF               	goto	l9390
  9634  014E6C                     u9350:
  9635                           
  9636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9637                           ;stkvar	_l @ sp[(-17)+7]
  9638  014E6C  0EF6               	movlw	-10
  9639  014E6E  006F FF8C  F035    	movff	plusw1,btemp
  9640  014E74  0EF7               	movlw	-9
  9641  014E76  006F FF8C  F036    	movff	plusw1,btemp+1
  9642                           
  9643                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9644  014E7C  0EEB               	movlw	235
  9645  014E7E  26E1               	addwf	fsr1l,f,c
  9646  014E80  0EFF               	movlw	255
  9647  014E82  22E2               	addwfc	fsr1h,f,c
  9648  014E84  0012               	return		;funcret
  9649  014E86                     __end_of_stoa:
  9650                           	opt callstack 0
  9651                           
  9652 ;; *************** function _efgtoa *****************
  9653 ;; Defined at:
  9654 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9657 ;;		 -> f(6), NULL(0), 
  9658 ;;  f               4  [STACK] PTR struct _IO_FILE
  9659 ;;  c               1  [STACK] unsigned char 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  u               4  [STACK] unsigned char 
  9662 ;;  g               4  [STACK] unsigned char 
  9663 ;;  l               4  [STACK] unsigned char 
  9664 ;;  h               4  [STACK] unsigned char 
  9665 ;;  ou              4  [STACK] unsigned char 
  9666 ;;  n               2  [STACK] int 
  9667 ;;  e               2  [STACK] int 
  9668 ;;  i               2  [STACK] int 
  9669 ;;  w               2  [STACK] int 
  9670 ;;  p               2  [STACK] int 
  9671 ;;  sign            2  [STACK] int 
  9672 ;;  d               2  [STACK] int 
  9673 ;;  ne              2  [STACK] int 
  9674 ;;  m               2  [STACK] int 
  9675 ;;  pp              2  [STACK] int 
  9676 ;;  t               2  [STACK] int 
  9677 ;;  mode            1  [STACK] unsigned char 
  9678 ;;  nmode           1  [STACK] unsigned char 
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  2  [STACK] int 
  9681 ;; Registers used:
  9682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/4
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9692 ;;Total ram usage:        0 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:   11
  9695 ;; This function calls:
  9696 ;;		___awdiv
  9697 ;;		___awmod
  9698 ;;		___fladd
  9699 ;;		___fldiv
  9700 ;;		___fleq
  9701 ;;		___flge
  9702 ;;		___flmul
  9703 ;;		___flneg
  9704 ;;		___flsub
  9705 ;;		___fltol
  9706 ;;		___fpclassifyf
  9707 ;;		_floorf
  9708 ;;		_isupper
  9709 ;;		_pad
  9710 ;;		_strcpy
  9711 ;;		_tolower
  9712 ;; This function is called by:
  9713 ;;		_vfpfcnvrt
  9714 ;; This function uses a reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text40
  9718  010000                     __ptext40:
  9719                           	opt callstack 0
  9720  010000                     _efgtoa:
  9721                           	opt callstack 0
  9722                           
  9723                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9724  010000  0E38               	movlw	56
  9725  010002  26E1               	addwf	fsr1l,f,c
  9726  010004  0E00               	movlw	0
  9727  010006  22E2               	addwfc	fsr1h,f,c
  9728                           
  9729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9730                           ;stkvar	_sign @ sp[(-56)+42]
  9731                           
  9732                           ;incstack = 0
  9733  010008  0EF2               	movlw	-14
  9734  01000A  6AE3               	clrf	plusw1,c
  9735  01000C  0EF3               	movlw	-13
  9736  01000E  6AE3               	clrf	plusw1,c
  9737                           
  9738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9739                           ;stkvar	_f @ sp[(-56)+-6]
  9740  010010  0EC2               	movlw	-62
  9741  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
  9742  010018  0EC3               	movlw	-61
  9743  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
  9744  010020  0EC4               	movlw	-60
  9745  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
  9746  010028  0EC5               	movlw	-59
  9747  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
  9748                           
  9749                           ;stkvar	_g @ sp[(-56)+16]
  9750  010030  0ED8               	movlw	-40
  9751  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9752  010038  0ED9               	movlw	-39
  9753  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9754  010040  0EDA               	movlw	-38
  9755  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9756  010048  0EDB               	movlw	-37
  9757  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9758                           
  9759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9760                           ;stkvar	_g @ sp[(-56)+16]
  9761  010050  0EDB               	movlw	-37
  9762  010052  AEE3               	btfss	plusw1,7,c
  9763  010054  D02B               	goto	l9054
  9764                           
  9765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9766  010056  0E01               	movlw	1
  9767  010058  6E3F               	movwf	(btemp+10)^0,c
  9768  01005A  0E00               	movlw	0
  9769  01005C  6E40               	movwf	(btemp+11)^0,c
  9770                           
  9771                           ;stkvar	_sign @ sp[(-56)+42]
  9772  01005E  0EF2               	movlw	-14
  9773  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9774  010066  0EF3               	movlw	-13
  9775  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
  9776                           
  9777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9778                           ;stkvar	_g @ sp[(-56)+16]
  9779  01006E  0ED8               	movlw	-40
  9780  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9781  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9782  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  9783  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  9784  010088  EC02  F0BD         	call	___flneg	;wreg free
  9785                           
  9786                           ;stkvar	_g @ sp[(-56)+16]
  9787  01008C  0ED8               	movlw	-40
  9788  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9789  010094  0ED9               	movlw	-39
  9790  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9791  01009C  0EDA               	movlw	-38
  9792  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9793  0100A4  0EDB               	movlw	-37
  9794  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9795  0100AC                     l9054:
  9796                           
  9797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  9798                           ;stkvar	_n @ sp[(-56)+32]
  9799  0100AC  0EE8               	movlw	-24
  9800  0100AE  6AE3               	clrf	plusw1,c
  9801  0100B0  0EE9               	movlw	-23
  9802  0100B2  6AE3               	clrf	plusw1,c
  9803                           
  9804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  9805                           ;stkvar	_w @ sp[(-56)+38]
  9806  0100B4  0EEE               	movlw	-18
  9807  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
  9808  0100BC  0EEF               	movlw	-17
  9809  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
  9810                           
  9811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  9812                           ;stkvar	_sign @ sp[(-56)+42]
  9813  0100C4  0EF2               	movlw	-14
  9814  0100C6  006F FF8C  F035    	movff	plusw1,btemp
  9815  0100CC  0EF3               	movlw	-13
  9816  0100CE  50E3               	movf	plusw1,w,c
  9817  0100D0  1035               	iorwf	btemp^0,w,c
  9818  0100D2  A4D8               	btfss	status,2,c
  9819  0100D4  D002               	goto	u8760
  9820  0100D6  A422               	btfss	_flags^0,2,c
  9821  0100D8  D036               	goto	l9074
  9822  0100DA                     u8760:
  9823                           
  9824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  9825                           ;stkvar	_sign @ sp[(-56)+42]
  9826  0100DA  0EF2               	movlw	-14
  9827  0100DC  006F FF8C  F035    	movff	plusw1,btemp
  9828  0100E2  0EF3               	movlw	-13
  9829  0100E4  50E3               	movf	plusw1,w,c
  9830  0100E6  1035               	iorwf	btemp^0,w,c
  9831  0100E8  A4D8               	btfss	status,2,c
  9832  0100EA  D002               	goto	l9066
  9833  0100EC  0E2B               	movlw	43
  9834  0100EE  D001               	goto	L7
  9835  0100F0                     l9066:
  9836  0100F0  0E2D               	movlw	45
  9837  0100F2                     L7:
  9838  0100F2  6E3F               	movwf	(btemp+10)^0,c
  9839  0100F4  0E00               	movlw	0
  9840  0100F6  6E40               	movwf	(btemp+11)^0,c
  9841                           
  9842                           ;stkvar	_efgtoa$4109 @ sp[(-56)+10]
  9843  0100F8  0ED2               	movlw	-46
  9844  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9845  010100  0ED3               	movlw	-45
  9846  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
  9847                           
  9848                           ;stkvar	_efgtoa$4109 @ sp[(-56)+10]
  9849  010108  0ED2               	movlw	-46
  9850  01010A  006F FF8C  F1A4    	movff	plusw1,_dbuf
  9851                           
  9852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  9853                           ;stkvar	_n @ sp[(-56)+32]
  9854  010110  0EE8               	movlw	-24
  9855  010112  50E3               	movf	plusw1,w,c
  9856  010114  0F01               	addlw	1
  9857  010116  6E35               	movwf	btemp^0,c
  9858  010118  0EE8               	movlw	-24
  9859  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9860  010120  6A35               	clrf	btemp^0,c
  9861  010122  0EE9               	movlw	-23
  9862  010124  50E3               	movf	plusw1,w,c
  9863  010126  2035               	addwfc	btemp^0,w,c
  9864  010128  6E35               	movwf	btemp^0,c
  9865  01012A  0EE9               	movlw	-23
  9866  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9867                           
  9868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  9869                           ;stkvar	_w @ sp[(-56)+38]
  9870  010132  50E1               	movf	fsr1l,w,c
  9871  010134  0FEE               	addlw	-18
  9872  010136  6ED9               	movwf	fsr2l,c
  9873  010138  50E2               	movf	fsr1h,w,c
  9874  01013A  6EDA               	movwf	fsr2h,c
  9875  01013C  0EFF               	movlw	255
  9876  01013E  22DA               	addwfc	fsr2h,f,c
  9877  010140  06DE               	decf	postinc2,f,c
  9878  010142  0E00               	movlw	0
  9879  010144  5ADD               	subwfb	postdec2,f,c
  9880  010146                     l9074:
  9881                           
  9882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9883                           ;stkvar	_g @ sp[(-56)+16]
  9884  010146  0ED8               	movlw	-40
  9885  010148  006F FF8F FFE6     	movff	plusw1,postinc1
  9886  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
  9887  010154  006F FF8F FFE6     	movff	plusw1,postinc1
  9888  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
  9889  010160  ECFB  F0AE         	call	___fpclassifyf	;wreg free
  9890  010164  0435               	decf	btemp^0,w,c
  9891  010166  1036               	iorwf	(btemp+1)^0,w,c
  9892  010168  A4D8               	btfss	status,2,c
  9893  01016A  D076               	goto	l9092
  9894  01016C  0EBF               	movlw	191
  9895  01016E  6E3F               	movwf	(btemp+10)^0,c
  9896  010170  0EFF               	movlw	255
  9897  010172  6E40               	movwf	(btemp+11)^0,c
  9898                           
  9899                           ;stkvar	_c @ sp[(-56)+-7]
  9900  010174  0EC1               	movlw	-63
  9901  010176  50E3               	movf	plusw1,w,c
  9902  010178  6E3D               	movwf	(btemp+8)^0,c
  9903  01017A  6A3E               	clrf	(btemp+9)^0,c
  9904  01017C  503F               	movf	(btemp+10)^0,w,c
  9905  01017E  263D               	addwf	(btemp+8)^0,f,c
  9906  010180  5040               	movf	(btemp+11)^0,w,c
  9907  010182  223E               	addwfc	(btemp+9)^0,f,c
  9908  010184  503E               	movf	(btemp+9)^0,w,c
  9909  010186  E106               	bnz	u8790
  9910  010188  0E1A               	movlw	26
  9911  01018A  5C3D               	subwf	(btemp+8)^0,w,c
  9912  01018C  B0D8               	btfsc	status,0,c
  9913  01018E  D002               	goto	u8790
  9914  010190  0E01               	movlw	1
  9915  010192  D001               	goto	u8800
  9916  010194                     u8790:
  9917  010194  0E00               	movlw	0
  9918  010196                     u8800:
  9919  010196  6E3F               	movwf	(btemp+10)^0,c
  9920  010198  6A40               	clrf	(btemp+11)^0,c
  9921                           
  9922                           ;stkvar	_efgtoa$4110 @ sp[(-56)+8]
  9923  01019A  0ED0               	movlw	-48
  9924  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9925  0101A2  0ED1               	movlw	-47
  9926  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  9927                           
  9928                           ;stkvar	_efgtoa$4110 @ sp[(-56)+8]
  9929  0101AA  0ED0               	movlw	-48
  9930  0101AC  006F FF8C  F035    	movff	plusw1,btemp
  9931  0101B2  0ED1               	movlw	-47
  9932  0101B4  50E3               	movf	plusw1,w,c
  9933  0101B6  1035               	iorwf	btemp^0,w,c
  9934  0101B8  B4D8               	btfsc	status,2,c
  9935  0101BA  D017               	goto	l9084
  9936                           
  9937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  9938  0101BC  0EE2               	movlw	low STR_33
  9939  0101BE  6EE6               	movwf	postinc1,c
  9940  0101C0  0EFF               	movlw	high STR_33
  9941  0101C2  6EE6               	movwf	postinc1,c
  9942                           
  9943                           ;stkvar	_n @ sp[(-58)+32]
  9944  0101C4  0EA4               	movlw	low _dbuf
  9945  0101C6  6E3F               	movwf	(btemp+10)^0,c
  9946  0101C8  0E01               	movlw	high _dbuf
  9947  0101CA  6E40               	movwf	(btemp+11)^0,c
  9948  0101CC  0EE6               	movlw	-26
  9949  0101CE  50E3               	movf	plusw1,w,c
  9950  0101D0  263F               	addwf	(btemp+10)^0,f,c
  9951  0101D2  0EE7               	movlw	-25
  9952  0101D4  50E3               	movf	plusw1,w,c
  9953  0101D6  2240               	addwfc	(btemp+11)^0,f,c
  9954  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9955  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
  9956  0101E4  EC97  F0B5         	call	_strcpy	;wreg free
  9957                           
  9958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  9959  0101E8  D016               	goto	l9086
  9960  0101EA                     l9084:
  9961                           
  9962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  9963  0101EA  0EEA               	movlw	low STR_34
  9964  0101EC  6EE6               	movwf	postinc1,c
  9965  0101EE  0EFF               	movlw	high STR_34
  9966  0101F0  6EE6               	movwf	postinc1,c
  9967                           
  9968                           ;stkvar	_n @ sp[(-58)+32]
  9969  0101F2  0EA4               	movlw	low _dbuf
  9970  0101F4  6E3F               	movwf	(btemp+10)^0,c
  9971  0101F6  0E01               	movlw	high _dbuf
  9972  0101F8  6E40               	movwf	(btemp+11)^0,c
  9973  0101FA  0EE6               	movlw	-26
  9974  0101FC  50E3               	movf	plusw1,w,c
  9975  0101FE  263F               	addwf	(btemp+10)^0,f,c
  9976  010200  0EE7               	movlw	-25
  9977  010202  50E3               	movf	plusw1,w,c
  9978  010204  2240               	addwfc	(btemp+11)^0,f,c
  9979  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9980  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
  9981  010212  EC97  F0B5         	call	_strcpy	;wreg free
  9982  010216                     l9086:
  9983                           
  9984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  9985                           ;stkvar	_w @ sp[(-56)+38]
  9986  010216  50E1               	movf	fsr1l,w,c
  9987  010218  0FEE               	addlw	-18
  9988  01021A  6ED9               	movwf	fsr2l,c
  9989  01021C  50E2               	movf	fsr1h,w,c
  9990  01021E  6EDA               	movwf	fsr2h,c
  9991  010220  0EFF               	movlw	255
  9992  010222  22DA               	addwfc	fsr2h,f,c
  9993  010224  0EFD               	movlw	253
  9994  010226  26DE               	addwf	postinc2,f,c
  9995  010228  0EFF               	movlw	255
  9996  01022A  22DD               	addwfc	postdec2,f,c
  9997  01022C                     l9088:
  9998                           
  9999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10000                           ;stkvar	_w @ sp[(-56)+38]
 10001  01022C  0EEE               	movlw	-18
 10002  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10003  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10004  01023A  0EA4               	movlw	low _dbuf
 10005  01023C  6EE6               	movwf	postinc1,c
 10006  01023E  0E01               	movlw	high _dbuf
 10007  010240  6EE6               	movwf	postinc1,c
 10008                           
 10009                           ;stkvar	_fp @ sp[(-60)+-2]
 10010  010242  0EC2               	movlw	-62
 10011  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10012  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10013  010250  EC8C  F0B3         	call	_pad	;wreg free
 10014  010254  EF1D  F089         	goto	l1793
 10015  010258                     l9092:
 10016                           
 10017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10018                           ;stkvar	_g @ sp[(-56)+16]
 10019  010258  0ED8               	movlw	-40
 10020  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10021  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10022  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10023  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10024  010272  ECFB  F0AE         	call	___fpclassifyf	;wreg free
 10025  010276  5035               	movf	btemp^0,w,c
 10026  010278  1036               	iorwf	(btemp+1)^0,w,c
 10027  01027A  A4D8               	btfss	status,2,c
 10028  01027C  D056               	goto	l9110
 10029  01027E  0EBF               	movlw	191
 10030  010280  6E3F               	movwf	(btemp+10)^0,c
 10031  010282  0EFF               	movlw	255
 10032  010284  6E40               	movwf	(btemp+11)^0,c
 10033                           
 10034                           ;stkvar	_c @ sp[(-56)+-7]
 10035  010286  0EC1               	movlw	-63
 10036  010288  50E3               	movf	plusw1,w,c
 10037  01028A  6E3D               	movwf	(btemp+8)^0,c
 10038  01028C  6A3E               	clrf	(btemp+9)^0,c
 10039  01028E  503F               	movf	(btemp+10)^0,w,c
 10040  010290  263D               	addwf	(btemp+8)^0,f,c
 10041  010292  5040               	movf	(btemp+11)^0,w,c
 10042  010294  223E               	addwfc	(btemp+9)^0,f,c
 10043  010296  503E               	movf	(btemp+9)^0,w,c
 10044  010298  E106               	bnz	u8830
 10045  01029A  0E1A               	movlw	26
 10046  01029C  5C3D               	subwf	(btemp+8)^0,w,c
 10047  01029E  B0D8               	btfsc	status,0,c
 10048  0102A0  D002               	goto	u8830
 10049  0102A2  0E01               	movlw	1
 10050  0102A4  D001               	goto	u8840
 10051  0102A6                     u8830:
 10052  0102A6  0E00               	movlw	0
 10053  0102A8                     u8840:
 10054  0102A8  6E3F               	movwf	(btemp+10)^0,c
 10055  0102AA  6A40               	clrf	(btemp+11)^0,c
 10056                           
 10057                           ;stkvar	_efgtoa$4114 @ sp[(-56)+6]
 10058  0102AC  0ECE               	movlw	-50
 10059  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10060  0102B4  0ECF               	movlw	-49
 10061  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 10062                           
 10063                           ;stkvar	_efgtoa$4114 @ sp[(-56)+6]
 10064  0102BC  0ECE               	movlw	-50
 10065  0102BE  006F FF8C  F035    	movff	plusw1,btemp
 10066  0102C4  0ECF               	movlw	-49
 10067  0102C6  50E3               	movf	plusw1,w,c
 10068  0102C8  1035               	iorwf	btemp^0,w,c
 10069  0102CA  B4D8               	btfsc	status,2,c
 10070  0102CC  D017               	goto	l9102
 10071                           
 10072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10073  0102CE  0EE6               	movlw	low STR_37
 10074  0102D0  6EE6               	movwf	postinc1,c
 10075  0102D2  0EFF               	movlw	high STR_37
 10076  0102D4  6EE6               	movwf	postinc1,c
 10077                           
 10078                           ;stkvar	_n @ sp[(-58)+32]
 10079  0102D6  0EA4               	movlw	low _dbuf
 10080  0102D8  6E3F               	movwf	(btemp+10)^0,c
 10081  0102DA  0E01               	movlw	high _dbuf
 10082  0102DC  6E40               	movwf	(btemp+11)^0,c
 10083  0102DE  0EE6               	movlw	-26
 10084  0102E0  50E3               	movf	plusw1,w,c
 10085  0102E2  263F               	addwf	(btemp+10)^0,f,c
 10086  0102E4  0EE7               	movlw	-25
 10087  0102E6  50E3               	movf	plusw1,w,c
 10088  0102E8  2240               	addwfc	(btemp+11)^0,f,c
 10089  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 10090  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
 10091  0102F6  EC97  F0B5         	call	_strcpy	;wreg free
 10092                           
 10093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10094  0102FA  D78D               	goto	l9086
 10095  0102FC                     l9102:
 10096                           
 10097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10098  0102FC  0EEE               	movlw	low STR_38
 10099  0102FE  6EE6               	movwf	postinc1,c
 10100  010300  0EFF               	movlw	high STR_38
 10101  010302  6EE6               	movwf	postinc1,c
 10102                           
 10103                           ;stkvar	_n @ sp[(-58)+32]
 10104  010304  0EA4               	movlw	low _dbuf
 10105  010306  6E3F               	movwf	(btemp+10)^0,c
 10106  010308  0E01               	movlw	high _dbuf
 10107  01030A  6E40               	movwf	(btemp+11)^0,c
 10108  01030C  0EE6               	movlw	-26
 10109  01030E  50E3               	movf	plusw1,w,c
 10110  010310  263F               	addwf	(btemp+10)^0,f,c
 10111  010312  0EE7               	movlw	-25
 10112  010314  50E3               	movf	plusw1,w,c
 10113  010316  2240               	addwfc	(btemp+11)^0,f,c
 10114  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 10115  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
 10116  010324  EC97  F0B5         	call	_strcpy	;wreg free
 10117  010328  D776               	goto	l9086
 10118  01032A                     l9110:
 10119                           
 10120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10121  01032A  0E00               	movlw	0
 10122  01032C  6E3D               	movwf	(btemp+8)^0,c
 10123  01032E  0E00               	movlw	0
 10124  010330  6E3E               	movwf	(btemp+9)^0,c
 10125  010332  0E80               	movlw	128
 10126  010334  6E3F               	movwf	(btemp+10)^0,c
 10127  010336  0E3F               	movlw	63
 10128  010338  6E40               	movwf	(btemp+11)^0,c
 10129                           
 10130                           ;stkvar	_u @ sp[(-56)+12]
 10131  01033A  0ED4               	movlw	-44
 10132  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10133  010342  0ED5               	movlw	-43
 10134  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10135  01034A  0ED6               	movlw	-42
 10136  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10137  010352  0ED7               	movlw	-41
 10138  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
 10139                           
 10140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10141                           ;stkvar	_e @ sp[(-56)+34]
 10142  01035A  0EEA               	movlw	-22
 10143  01035C  6AE3               	clrf	plusw1,c
 10144  01035E  0EEB               	movlw	-21
 10145  010360  6AE3               	clrf	plusw1,c
 10146                           
 10147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10148  010362  0E00               	movlw	0
 10149  010364  6EE6               	movwf	postinc1,c
 10150  010366  0E00               	movlw	0
 10151  010368  6EE6               	movwf	postinc1,c
 10152  01036A  0E00               	movlw	0
 10153  01036C  6EE6               	movwf	postinc1,c
 10154  01036E  0E00               	movlw	0
 10155  010370  6EE6               	movwf	postinc1,c
 10156                           
 10157                           ;stkvar	_g @ sp[(-60)+16]
 10158  010372  0ED4               	movlw	-44
 10159  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10160  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10161  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10162  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10163  01038C  EC64  F0B6         	call	___fleq	;wreg free
 10164  010390  A035               	btfss	btemp& (0+255),0,c
 10165  010392  D039               	goto	l9122
 10166  010394  D0BC               	goto	u8880
 10167  010396                     l9118:
 10168                           
 10169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10170  010396  0E00               	movlw	0
 10171  010398  6EE6               	movwf	postinc1,c
 10172  01039A  0E00               	movlw	0
 10173  01039C  6EE6               	movwf	postinc1,c
 10174  01039E  0E20               	movlw	32
 10175  0103A0  6EE6               	movwf	postinc1,c
 10176  0103A2  0E41               	movlw	65
 10177  0103A4  6EE6               	movwf	postinc1,c
 10178                           
 10179                           ;stkvar	_u @ sp[(-60)+12]
 10180  0103A6  0ED0               	movlw	-48
 10181  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10182  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10183  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10184  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10185  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10186                           
 10187                           ;stkvar	_u @ sp[(-56)+12]
 10188  0103C4  0ED4               	movlw	-44
 10189  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10190  0103CC  0ED5               	movlw	-43
 10191  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10192  0103D4  0ED6               	movlw	-42
 10193  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10194  0103DC  0ED7               	movlw	-41
 10195  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10196                           
 10197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10198                           ;stkvar	_e @ sp[(-56)+34]
 10199  0103E4  0EEA               	movlw	-22
 10200  0103E6  50E3               	movf	plusw1,w,c
 10201  0103E8  0F01               	addlw	1
 10202  0103EA  6E35               	movwf	btemp^0,c
 10203  0103EC  0EEA               	movlw	-22
 10204  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10205  0103F4  6A35               	clrf	btemp^0,c
 10206  0103F6  0EEB               	movlw	-21
 10207  0103F8  50E3               	movf	plusw1,w,c
 10208  0103FA  2035               	addwfc	btemp^0,w,c
 10209  0103FC  6E35               	movwf	btemp^0,c
 10210  0103FE  0EEB               	movlw	-21
 10211  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
 10212  010406                     l9122:
 10213                           
 10214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10215  010406  0E00               	movlw	0
 10216  010408  6EE6               	movwf	postinc1,c
 10217  01040A  0E00               	movlw	0
 10218  01040C  6EE6               	movwf	postinc1,c
 10219  01040E  0E20               	movlw	32
 10220  010410  6EE6               	movwf	postinc1,c
 10221  010412  0E41               	movlw	65
 10222  010414  6EE6               	movwf	postinc1,c
 10223                           
 10224                           ;stkvar	_u @ sp[(-60)+12]
 10225  010416  0ED0               	movlw	-48
 10226  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10227  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10228  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10229  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10230  010430  ECC1  F08E         	call	___flmul	;wreg free
 10231  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
 10232  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10233  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10234  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10235                           
 10236                           ;stkvar	_g @ sp[(-60)+16]
 10237  01044C  0ED4               	movlw	-44
 10238  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10239  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10240  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10241  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10242  010466  EC7F  F0B0         	call	___flge	;wreg free
 10243  01046A  A035               	btfss	btemp& (0+255),0,c
 10244  01046C  D032               	goto	l9128
 10245  01046E  D793               	goto	l9118
 10246  010470                     l9124:
 10247                           
 10248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10249  010470  0E00               	movlw	0
 10250  010472  6EE6               	movwf	postinc1,c
 10251  010474  0E00               	movlw	0
 10252  010476  6EE6               	movwf	postinc1,c
 10253  010478  0E20               	movlw	32
 10254  01047A  6EE6               	movwf	postinc1,c
 10255  01047C  0E41               	movlw	65
 10256  01047E  6EE6               	movwf	postinc1,c
 10257                           
 10258                           ;stkvar	_u @ sp[(-60)+12]
 10259  010480  0ED0               	movlw	-48
 10260  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10261  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10262  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10263  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10264  01049A  ECD7  F099         	call	___fldiv	;wreg free
 10265                           
 10266                           ;stkvar	_u @ sp[(-56)+12]
 10267  01049E  0ED4               	movlw	-44
 10268  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10269  0104A6  0ED5               	movlw	-43
 10270  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10271  0104AE  0ED6               	movlw	-42
 10272  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10273  0104B6  0ED7               	movlw	-41
 10274  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10275                           
 10276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10277                           ;stkvar	_e @ sp[(-56)+34]
 10278  0104BE  50E1               	movf	fsr1l,w,c
 10279  0104C0  0FEA               	addlw	-22
 10280  0104C2  6ED9               	movwf	fsr2l,c
 10281  0104C4  50E2               	movf	fsr1h,w,c
 10282  0104C6  6EDA               	movwf	fsr2h,c
 10283  0104C8  0EFF               	movlw	255
 10284  0104CA  22DA               	addwfc	fsr2h,f,c
 10285  0104CC  06DE               	decf	postinc2,f,c
 10286  0104CE  0E00               	movlw	0
 10287  0104D0  5ADD               	subwfb	postdec2,f,c
 10288  0104D2                     l9128:
 10289                           
 10290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10291                           ;stkvar	_u @ sp[(-56)+12]
 10292  0104D2  0ED4               	movlw	-44
 10293  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10294  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10295  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10296  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10297                           
 10298                           ;stkvar	_g @ sp[(-60)+16]
 10299  0104EC  0ED4               	movlw	-44
 10300  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10301  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10302  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10303  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10304  010506  EC7F  F0B0         	call	___flge	;wreg free
 10305  01050A  A035               	btfss	btemp& (0+255),0,c
 10306  01050C  D7B1               	goto	l9124
 10307  01050E                     u8880:
 10308                           
 10309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10310                           ;stkvar	_c @ sp[(-56)+-7]
 10311  01050E  0EC1               	movlw	-63
 10312  010510  50E3               	movf	plusw1,w,c
 10313  010512  6EE6               	movwf	postinc1,c
 10314  010514  0E00               	movlw	0
 10315  010516  6EE6               	movwf	postinc1,c
 10316  010518  EC20  F0BA         	call	_tolower	;wreg free
 10317                           
 10318                           ;stkvar	_mode @ sp[(-56)+54]
 10319  01051C  0EFE               	movlw	-2
 10320  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10321                           
 10322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10323                           ;stkvar	_mode @ sp[(-56)+54]
 10324                           ;stkvar	_nmode @ sp[(-56)+55]
 10325  010524  0EFE               	movlw	-2
 10326  010526  006F FF8C  F035    	movff	plusw1,btemp
 10327  01052C  0EFF               	movlw	-1
 10328  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10329                           
 10330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10331                           ;stkvar	_mode @ sp[(-56)+54]
 10332  010534  0EFE               	movlw	-2
 10333  010536  006F FF8C  F035    	movff	plusw1,btemp
 10334  01053C  0E67               	movlw	103
 10335  01053E  1835               	xorwf	btemp^0,w,c
 10336  010540  A4D8               	btfss	status,2,c
 10337  010542  D025               	goto	l9146
 10338                           
 10339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10340  010544  5020               	movf	_prec^0,w,c
 10341  010546  1021               	iorwf	(_prec+1)^0,w,c
 10342  010548  A4D8               	btfss	status,2,c
 10343  01054A  D004               	goto	l9140
 10344                           
 10345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10346  01054C  0E00               	movlw	0
 10347  01054E  6E21               	movwf	(_prec+1)^0,c
 10348  010550  0E01               	movlw	1
 10349  010552  6E20               	movwf	_prec^0,c
 10350  010554                     l9140:
 10351                           
 10352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10353  010554  BE21               	btfsc	(_prec+1)^0,7,c
 10354  010556  D005               	goto	u8910
 10355  010558  5021               	movf	(_prec+1)^0,w,c
 10356  01055A  E110               	bnz	l9144
 10357  01055C  0420               	decf	_prec^0,w,c
 10358  01055E  B0D8               	btfsc	status,0,c
 10359  010560  D00D               	goto	l9144
 10360  010562                     u8910:
 10361  010562  0E06               	movlw	6
 10362  010564  6E3F               	movwf	(btemp+10)^0,c
 10363  010566  0E00               	movlw	0
 10364  010568  6E40               	movwf	(btemp+11)^0,c
 10365                           
 10366                           ;stkvar	_p @ sp[(-56)+40]
 10367  01056A  0EF0               	movlw	-16
 10368  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10369  010572  0EF1               	movlw	-15
 10370  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
 10371  01057A  D00C               	goto	l9152
 10372  01057C                     l9144:
 10373                           
 10374                           ;stkvar	_p @ sp[(-56)+40]
 10375  01057C  0EF0               	movlw	-16
 10376  01057E  0060  F083  FFE3   	movff	_prec,plusw1
 10377  010584  0EF1               	movlw	-15
 10378  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
 10379  01058C  D003               	goto	l9152
 10380  01058E                     l9146:
 10381                           
 10382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10383  01058E  AE21               	btfss	(_prec+1)^0,7,c
 10384  010590  D7F5               	goto	l9144
 10385  010592  D7E7               	goto	u8910
 10386  010594                     l9152:
 10387                           
 10388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10389                           ;stkvar	_mode @ sp[(-56)+54]
 10390  010594  0EFE               	movlw	-2
 10391  010596  006F FF8C  F035    	movff	plusw1,btemp
 10392  01059C  0E67               	movlw	103
 10393  01059E  1835               	xorwf	btemp^0,w,c
 10394  0105A0  A4D8               	btfss	status,2,c
 10395  0105A2  D02F               	goto	l9162
 10396                           
 10397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10398                           ;stkvar	_e @ sp[(-56)+34]
 10399  0105A4  0EEB               	movlw	-21
 10400  0105A6  AEE3               	btfss	plusw1,7,c
 10401  0105A8  D00E               	goto	u8940
 10402  0105AA  0EEA               	movlw	-22
 10403  0105AC  006F FF8C  F035    	movff	plusw1,btemp
 10404  0105B2  0EFC               	movlw	252
 10405  0105B4  5E35               	subwf	btemp^0,f,c
 10406  0105B6  0EEB               	movlw	-21
 10407  0105B8  006F FF8C  F035    	movff	plusw1,btemp
 10408  0105BE  0EFF               	movlw	255
 10409  0105C0  5A35               	subwfb	btemp^0,f,c
 10410  0105C2  A0D8               	btfss	status,0,c
 10411  0105C4  D018               	goto	l9160
 10412  0105C6                     u8940:
 10413                           
 10414                           ;stkvar	_e @ sp[(-56)+34]
 10415                           ;stkvar	_p @ sp[(-56)+40]
 10416  0105C6  0EF0               	movlw	-16
 10417  0105C8  50E3               	movf	plusw1,w,c
 10418  0105CA  0FFF               	addlw	255
 10419  0105CC  6E3F               	movwf	(btemp+10)^0,c
 10420  0105CE  0EF1               	movlw	-15
 10421  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
 10422  0105D6  0EFF               	movlw	255
 10423  0105D8  2240               	addwfc	(btemp+11)^0,f,c
 10424  0105DA  0EEA               	movlw	-22
 10425  0105DC  50E3               	movf	plusw1,w,c
 10426  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
 10427  0105E0  5040               	movf	(btemp+11)^0,w,c
 10428  0105E2  0A80               	xorlw	128
 10429  0105E4  6E35               	movwf	btemp^0,c
 10430  0105E6  0EEB               	movlw	-21
 10431  0105E8  50E3               	movf	plusw1,w,c
 10432  0105EA  0A80               	xorlw	128
 10433  0105EC  5835               	subwfb	btemp^0,w,c
 10434  0105EE  A0D8               	btfss	status,0,c
 10435  0105F0  D002               	goto	l9160
 10436                           
 10437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10438  0105F2  0E66               	movlw	102
 10439  0105F4  D001               	goto	L8
 10440  0105F6                     l9160:
 10441                           
 10442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10443  0105F6  0E65               	movlw	101
 10444  0105F8                     L8:
 10445  0105F8  6E40               	movwf	(btemp+11)^0,c
 10446                           
 10447                           ;stkvar	_nmode @ sp[(-56)+55]
 10448  0105FA  0EFF               	movlw	-1
 10449  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10450  010602                     l9162:
 10451                           
 10452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10453                           ;stkvar	_p @ sp[(-56)+40]
 10454                           ;stkvar	_m @ sp[(-56)+48]
 10455  010602  0EF0               	movlw	-16
 10456  010604  006F FF8C  F035    	movff	plusw1,btemp
 10457  01060A  0EF8               	movlw	-8
 10458  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10459  010612  0EF1               	movlw	-15
 10460  010614  006F FF8C  F035    	movff	plusw1,btemp
 10461  01061A  0EF9               	movlw	-7
 10462  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10463                           
 10464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10465                           ;stkvar	_mode @ sp[(-56)+54]
 10466  010622  0EFE               	movlw	-2
 10467  010624  006F FF8C  F035    	movff	plusw1,btemp
 10468  01062A  0E67               	movlw	103
 10469  01062C  1835               	xorwf	btemp^0,w,c
 10470  01062E  A4D8               	btfss	status,2,c
 10471  010630  D00B               	goto	u8980
 10472                           
 10473                           ;stkvar	_nmode @ sp[(-56)+55]
 10474  010632  0EFF               	movlw	-1
 10475  010634  006F FF8C  F035    	movff	plusw1,btemp
 10476  01063A  0E66               	movlw	102
 10477  01063C  1835               	xorwf	btemp^0,w,c
 10478  01063E  A4D8               	btfss	status,2,c
 10479  010640  D014               	goto	l1822
 10480                           
 10481                           ;stkvar	_e @ sp[(-56)+34]
 10482  010642  0EEB               	movlw	-21
 10483  010644  AEE3               	btfss	plusw1,7,c
 10484  010646  D011               	goto	l1822
 10485  010648                     u8980:
 10486                           
 10487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10488                           ;stkvar	_m @ sp[(-56)+48]
 10489  010648  0EF8               	movlw	-8
 10490  01064A  50E3               	movf	plusw1,w,c
 10491  01064C  0F01               	addlw	1
 10492  01064E  6E35               	movwf	btemp^0,c
 10493  010650  0EF8               	movlw	-8
 10494  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 10495  010658  6A35               	clrf	btemp^0,c
 10496  01065A  0EF9               	movlw	-7
 10497  01065C  50E3               	movf	plusw1,w,c
 10498  01065E  2035               	addwfc	btemp^0,w,c
 10499  010660  6E35               	movwf	btemp^0,c
 10500  010662  0EF9               	movlw	-7
 10501  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 10502  01066A                     l1822:
 10503                           
 10504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10505                           ;stkvar	_nmode @ sp[(-56)+55]
 10506  01066A  0EFF               	movlw	-1
 10507  01066C  006F FF8C  F035    	movff	plusw1,btemp
 10508  010672  0E66               	movlw	102
 10509  010674  1835               	xorwf	btemp^0,w,c
 10510  010676  A4D8               	btfss	status,2,c
 10511  010678  D03B               	goto	l9182
 10512                           
 10513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10514                           ;stkvar	_e @ sp[(-56)+34]
 10515  01067A  0EEB               	movlw	-21
 10516  01067C  AEE3               	btfss	plusw1,7,c
 10517  01067E  D01C               	goto	l9178
 10518                           
 10519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10520  010680  0E00               	movlw	0
 10521  010682  6E3D               	movwf	(btemp+8)^0,c
 10522  010684  0E00               	movlw	0
 10523  010686  6E3E               	movwf	(btemp+9)^0,c
 10524  010688  0E80               	movlw	128
 10525  01068A  6E3F               	movwf	(btemp+10)^0,c
 10526  01068C  0E3F               	movlw	63
 10527  01068E  6E40               	movwf	(btemp+11)^0,c
 10528                           
 10529                           ;stkvar	_u @ sp[(-56)+12]
 10530  010690  0ED4               	movlw	-44
 10531  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10532  010698  0ED5               	movlw	-43
 10533  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10534  0106A0  0ED6               	movlw	-42
 10535  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10536  0106A8  0ED7               	movlw	-41
 10537  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10538                           
 10539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10540                           ;stkvar	_e @ sp[(-56)+34]
 10541  0106B0  0EEA               	movlw	-22
 10542  0106B2  6AE3               	clrf	plusw1,c
 10543  0106B4  0EEB               	movlw	-21
 10544  0106B6  6AE3               	clrf	plusw1,c
 10545  0106B8                     l9178:
 10546                           
 10547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10548                           ;stkvar	_mode @ sp[(-56)+54]
 10549  0106B8  0EFE               	movlw	-2
 10550  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 10551  0106C0  0E67               	movlw	103
 10552  0106C2  1835               	xorwf	btemp^0,w,c
 10553  0106C4  B4D8               	btfsc	status,2,c
 10554  0106C6  D014               	goto	l9182
 10555                           
 10556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10557                           ;stkvar	_e @ sp[(-56)+34]
 10558                           ;stkvar	_m @ sp[(-56)+48]
 10559  0106C8  0EF8               	movlw	-8
 10560  0106CA  50E3               	movf	plusw1,w,c
 10561  0106CC  6E35               	movwf	btemp^0,c
 10562  0106CE  0EEA               	movlw	-22
 10563  0106D0  50E3               	movf	plusw1,w,c
 10564  0106D2  2635               	addwf	btemp^0,f,c
 10565  0106D4  0EF8               	movlw	-8
 10566  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10567  0106DC  0EF9               	movlw	-7
 10568  0106DE  50E3               	movf	plusw1,w,c
 10569  0106E0  6E35               	movwf	btemp^0,c
 10570  0106E2  0EEB               	movlw	-21
 10571  0106E4  50E3               	movf	plusw1,w,c
 10572  0106E6  2235               	addwfc	btemp^0,f,c
 10573  0106E8  0EF9               	movlw	-7
 10574  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10575  0106F0                     l9182:
 10576                           
 10577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10578                           ;stkvar	_i @ sp[(-56)+36]
 10579  0106F0  0EEC               	movlw	-20
 10580  0106F2  6AE3               	clrf	plusw1,c
 10581  0106F4  0EED               	movlw	-19
 10582  0106F6  6AE3               	clrf	plusw1,c
 10583                           
 10584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10585                           ;stkvar	_g @ sp[(-56)+16]
 10586  0106F8  0ED8               	movlw	-40
 10587  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 10588  010700  0ED9               	movlw	-39
 10589  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 10590  010708  0EDA               	movlw	-38
 10591  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10592  010710  0EDB               	movlw	-37
 10593  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 10594                           
 10595                           ;stkvar	_h @ sp[(-56)+24]
 10596  010718  0EE0               	movlw	-32
 10597  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10598  010720  0EE1               	movlw	-31
 10599  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10600  010728  0EE2               	movlw	-30
 10601  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10602  010730  0EE3               	movlw	-29
 10603  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 10604                           
 10605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10606                           ;stkvar	_u @ sp[(-56)+12]
 10607  010738  0ED4               	movlw	-44
 10608  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 10609  010740  0ED5               	movlw	-43
 10610  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 10611  010748  0ED6               	movlw	-42
 10612  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10613  010750  0ED7               	movlw	-41
 10614  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 10615                           
 10616                           ;stkvar	_ou @ sp[(-56)+28]
 10617  010758  0EE4               	movlw	-28
 10618  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10619  010760  0EE5               	movlw	-27
 10620  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10621  010768  0EE6               	movlw	-26
 10622  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10623  010770  0EE7               	movlw	-25
 10624  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 10625                           
 10626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10627  010778  D0D6               	goto	l9198
 10628  01077A                     l9188:
 10629                           
 10630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10631                           ;stkvar	_u @ sp[(-56)+12]
 10632  01077A  0ED4               	movlw	-44
 10633  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10634  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10635  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10636  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10637                           
 10638                           ;stkvar	_h @ sp[(-60)+24]
 10639  010794  0EDC               	movlw	-36
 10640  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10641  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10642  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10643  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10644  0107AE  ECD7  F099         	call	___fldiv	;wreg free
 10645  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 10646  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10647  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10648  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10649  0107CA  ECB8  F0A2         	call	_floorf	;wreg free
 10650                           
 10651                           ;stkvar	_l @ sp[(-56)+20]
 10652  0107CE  0EDC               	movlw	-36
 10653  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10654  0107D6  0EDD               	movlw	-35
 10655  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10656  0107DE  0EDE               	movlw	-34
 10657  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10658  0107E6  0EDF               	movlw	-33
 10659  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10660                           
 10661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10662                           ;stkvar	_l @ sp[(-56)+20]
 10663  0107EE  0EDC               	movlw	-36
 10664  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10665  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10666  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10667  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10668  010808  ECC6  F0AF         	call	___fltol	;wreg free
 10669  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 10670  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10671                           
 10672                           ;stkvar	_d @ sp[(-56)+44]
 10673  010818  0EF4               	movlw	-12
 10674  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10675  010820  0EF5               	movlw	-11
 10676  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 10677                           
 10678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10679                           ;stkvar	_u @ sp[(-56)+12]
 10680  010828  0ED4               	movlw	-44
 10681  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10682  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10683  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10684  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10685                           
 10686                           ;stkvar	_l @ sp[(-60)+20]
 10687  010842  0ED8               	movlw	-40
 10688  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10689  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10690  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10691  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10692  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10693  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 10694  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10695  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10696  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10697                           
 10698                           ;stkvar	_h @ sp[(-60)+24]
 10699  010878  0EDC               	movlw	-36
 10700  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10701  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10702  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10703  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10704  010892  EC26  F0BD         	call	___flsub	;wreg free
 10705                           
 10706                           ;stkvar	_h @ sp[(-56)+24]
 10707  010896  0EE0               	movlw	-32
 10708  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 10709  01089E  0EE1               	movlw	-31
 10710  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10711  0108A6  0EE2               	movlw	-30
 10712  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10713  0108AE  0EE3               	movlw	-29
 10714  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10715                           
 10716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10717  0108B6  0E00               	movlw	0
 10718  0108B8  6EE6               	movwf	postinc1,c
 10719  0108BA  0E00               	movlw	0
 10720  0108BC  6EE6               	movwf	postinc1,c
 10721  0108BE  0E20               	movlw	32
 10722  0108C0  6EE6               	movwf	postinc1,c
 10723  0108C2  0E41               	movlw	65
 10724  0108C4  6EE6               	movwf	postinc1,c
 10725                           
 10726                           ;stkvar	_u @ sp[(-60)+12]
 10727  0108C6  0ED0               	movlw	-48
 10728  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10729  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10730  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10731  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10732  0108E0  ECD7  F099         	call	___fldiv	;wreg free
 10733                           
 10734                           ;stkvar	_u @ sp[(-56)+12]
 10735  0108E4  0ED4               	movlw	-44
 10736  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10737  0108EC  0ED5               	movlw	-43
 10738  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10739  0108F4  0ED6               	movlw	-42
 10740  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10741  0108FC  0ED7               	movlw	-41
 10742  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10743                           
 10744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10745                           ;stkvar	_i @ sp[(-56)+36]
 10746  010904  0EEC               	movlw	-20
 10747  010906  50E3               	movf	plusw1,w,c
 10748  010908  0F01               	addlw	1
 10749  01090A  6E35               	movwf	btemp^0,c
 10750  01090C  0EEC               	movlw	-20
 10751  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10752  010914  6A35               	clrf	btemp^0,c
 10753  010916  0EED               	movlw	-19
 10754  010918  50E3               	movf	plusw1,w,c
 10755  01091A  2035               	addwfc	btemp^0,w,c
 10756  01091C  6E35               	movwf	btemp^0,c
 10757  01091E  0EED               	movlw	-19
 10758  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 10759  010926                     l9198:
 10760                           
 10761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10762                           ;stkvar	_m @ sp[(-56)+48]
 10763                           ;stkvar	_i @ sp[(-56)+36]
 10764  010926  50E1               	movf	fsr1l,w,c
 10765  010928  0FEC               	addlw	-20
 10766  01092A  6ED9               	movwf	fsr2l,c
 10767  01092C  50E2               	movf	fsr1h,w,c
 10768  01092E  6EDA               	movwf	fsr2h,c
 10769  010930  0EFF               	movlw	255
 10770  010932  22DA               	addwfc	fsr2h,f,c
 10771  010934  0EF8               	movlw	-8
 10772  010936  50E3               	movf	plusw1,w,c
 10773  010938  5CDE               	subwf	postinc2,w,c
 10774  01093A  50DE               	movf	postinc2,w,c
 10775  01093C  0A80               	xorlw	128
 10776  01093E  6E35               	movwf	btemp^0,c
 10777  010940  0EF9               	movlw	-7
 10778  010942  50E3               	movf	plusw1,w,c
 10779  010944  0A80               	xorlw	128
 10780  010946  5835               	subwfb	btemp^0,w,c
 10781  010948  A0D8               	btfss	status,0,c
 10782  01094A  D717               	goto	l9188
 10783                           
 10784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 10785  01094C  0E00               	movlw	0
 10786  01094E  6EE6               	movwf	postinc1,c
 10787  010950  0E00               	movlw	0
 10788  010952  6EE6               	movwf	postinc1,c
 10789  010954  0EA0               	movlw	160
 10790  010956  6EE6               	movwf	postinc1,c
 10791  010958  0E40               	movlw	64
 10792  01095A  6EE6               	movwf	postinc1,c
 10793                           
 10794                           ;stkvar	_u @ sp[(-60)+12]
 10795  01095C  0ED0               	movlw	-48
 10796  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 10797  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 10798  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 10799  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 10800  010976  ECC1  F08E         	call	___flmul	;wreg free
 10801                           
 10802                           ;stkvar	_l @ sp[(-56)+20]
 10803  01097A  0EDC               	movlw	-36
 10804  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10805  010982  0EDD               	movlw	-35
 10806  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10807  01098A  0EDE               	movlw	-34
 10808  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10809  010992  0EDF               	movlw	-33
 10810  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10811                           
 10812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 10813                           ;stkvar	_l @ sp[(-56)+20]
 10814  01099A  0EDC               	movlw	-36
 10815  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 10816  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10817  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10818  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10819                           
 10820                           ;stkvar	_h @ sp[(-60)+24]
 10821  0109B4  0EDC               	movlw	-36
 10822  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10823  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10824  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10825  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10826  0109CE  EC7F  F0B0         	call	___flge	;wreg free
 10827  0109D2  A035               	btfss	btemp& (0+255),0,c
 10828  0109D4  D021               	goto	u9050
 10829                           
 10830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 10831                           ;stkvar	_l @ sp[(-56)+20]
 10832                           
 10833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 10834                           
 10835                           ;stkvar	_l @ sp[(-56)+20]
 10836                           
 10837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 10838  0109D6  0EDC               	movlw	-36
 10839  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10840  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10841  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10842  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10843                           
 10844                           ;stkvar	_h @ sp[(-60)+24]
 10845  0109F0  0EDC               	movlw	-36
 10846  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10847  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10848  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 10849  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 10850  010A0A  EC64  F0B6         	call	___fleq	;wreg free
 10851  010A0E  A035               	btfss	btemp& (0+255),0,c
 10852  010A10  D01B               	goto	l9212
 10853                           
 10854                           ;stkvar	_d @ sp[(-56)+44]
 10855  010A12  0EF4               	movlw	-12
 10856  010A14  B0E3               	btfsc	plusw1,0,c
 10857  010A16  D018               	goto	l9212
 10858  010A18                     u9050:
 10859                           
 10860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 10861  010A18  0E00               	movlw	0
 10862  010A1A  6E3D               	movwf	(btemp+8)^0,c
 10863  010A1C  0E00               	movlw	0
 10864  010A1E  6E3E               	movwf	(btemp+9)^0,c
 10865  010A20  0E00               	movlw	0
 10866  010A22  6E3F               	movwf	(btemp+10)^0,c
 10867  010A24  0E00               	movlw	0
 10868  010A26  6E40               	movwf	(btemp+11)^0,c
 10869                           
 10870                           ;stkvar	_l @ sp[(-56)+20]
 10871  010A28  0EDC               	movlw	-36
 10872  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10873  010A30  0EDD               	movlw	-35
 10874  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10875  010A38  0EDE               	movlw	-34
 10876  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10877  010A40  0EDF               	movlw	-33
 10878  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 10879  010A48                     l9212:
 10880                           
 10881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 10882                           ;stkvar	_l @ sp[(-56)+20]
 10883  010A48  0EDC               	movlw	-36
 10884  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 10885  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 10886  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 10887  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10888                           
 10889                           ;stkvar	_g @ sp[(-60)+16]
 10890  010A62  0ED4               	movlw	-44
 10891  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 10892  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10893  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 10894  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 10895  010A7C  ECD6  F092         	call	___fladd	;wreg free
 10896                           
 10897                           ;stkvar	_h @ sp[(-56)+24]
 10898  010A80  0EE0               	movlw	-32
 10899  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 10900  010A88  0EE1               	movlw	-31
 10901  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10902  010A90  0EE2               	movlw	-30
 10903  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10904  010A98  0EE3               	movlw	-29
 10905  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10906                           
 10907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 10908                           ;stkvar	_ou @ sp[(-56)+28]
 10909  010AA0  0EE4               	movlw	-28
 10910  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 10911  010AA8  0EE5               	movlw	-27
 10912  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 10913  010AB0  0EE6               	movlw	-26
 10914  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 10915  010AB8  0EE7               	movlw	-25
 10916  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 10917                           
 10918                           ;stkvar	_u @ sp[(-56)+12]
 10919  010AC0  0ED4               	movlw	-44
 10920  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10921  010AC8  0ED5               	movlw	-43
 10922  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10923  010AD0  0ED6               	movlw	-42
 10924  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10925  010AD8  0ED7               	movlw	-41
 10926  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10927                           
 10928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 10929                           ;stkvar	_nmode @ sp[(-56)+55]
 10930  010AE0  0EFF               	movlw	-1
 10931  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 10932  010AE8  0E65               	movlw	101
 10933  010AEA  1835               	xorwf	btemp^0,w,c
 10934  010AEC  B4D8               	btfsc	status,2,c
 10935  010AEE  D011               	goto	l9220
 10936                           
 10937                           ;stkvar	_e @ sp[(-56)+34]
 10938                           ;stkvar	_ne @ sp[(-56)+46]
 10939  010AF0  0EEA               	movlw	-22
 10940  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 10941  010AF8  0EF6               	movlw	-10
 10942  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10943  010B00  0EEB               	movlw	-21
 10944  010B02  006F FF8C  F035    	movff	plusw1,btemp
 10945  010B08  0EF7               	movlw	-9
 10946  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10947  010B10  D004               	goto	l1837
 10948  010B12                     l9220:
 10949                           
 10950                           ;stkvar	_ne @ sp[(-56)+46]
 10951  010B12  0EF6               	movlw	-10
 10952  010B14  6AE3               	clrf	plusw1,c
 10953  010B16  0EF7               	movlw	-9
 10954  010B18  6AE3               	clrf	plusw1,c
 10955  010B1A                     l1837:
 10956                           
 10957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 10958                           ;stkvar	_pp @ sp[(-56)+50]
 10959  010B1A  0EFA               	movlw	-6
 10960  010B1C  6AE3               	clrf	plusw1,c
 10961  010B1E  0EFB               	movlw	-5
 10962  010B20  6AE3               	clrf	plusw1,c
 10963                           
 10964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 10965                           ;stkvar	_t @ sp[(-56)+52]
 10966  010B22  0EFC               	movlw	-4
 10967  010B24  6AE3               	clrf	plusw1,c
 10968  010B26  0EFD               	movlw	-3
 10969  010B28  6AE3               	clrf	plusw1,c
 10970                           
 10971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 10972                           ;stkvar	_i @ sp[(-56)+36]
 10973  010B2A  0EEC               	movlw	-20
 10974  010B2C  6AE3               	clrf	plusw1,c
 10975  010B2E  0EED               	movlw	-19
 10976  010B30  6AE3               	clrf	plusw1,c
 10977                           
 10978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10979  010B32  D1B7               	goto	l9272
 10980  010B34                     l9222:
 10981                           
 10982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 10983                           ;stkvar	_u @ sp[(-56)+12]
 10984  010B34  0ED4               	movlw	-44
 10985  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 10986  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10987  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 10988  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 10989                           
 10990                           ;stkvar	_h @ sp[(-60)+24]
 10991  010B4E  0EDC               	movlw	-36
 10992  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 10993  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 10994  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10995  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 10996  010B68  ECD7  F099         	call	___fldiv	;wreg free
 10997  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 10998  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10999  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11000  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11001  010B84  ECB8  F0A2         	call	_floorf	;wreg free
 11002                           
 11003                           ;stkvar	_l @ sp[(-56)+20]
 11004  010B88  0EDC               	movlw	-36
 11005  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11006  010B90  0EDD               	movlw	-35
 11007  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11008  010B98  0EDE               	movlw	-34
 11009  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11010  010BA0  0EDF               	movlw	-33
 11011  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11012                           
 11013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11014                           ;stkvar	_l @ sp[(-56)+20]
 11015  010BA8  0EDC               	movlw	-36
 11016  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11017  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11018  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11019  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11020  010BC2  ECC6  F0AF         	call	___fltol	;wreg free
 11021  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 11022  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 11023                           
 11024                           ;stkvar	_d @ sp[(-56)+44]
 11025  010BD2  0EF4               	movlw	-12
 11026  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11027  010BDA  0EF5               	movlw	-11
 11028  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11029                           
 11030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11031  010BE2  B822               	btfsc	_flags^0,4,c
 11032  010BE4  D026               	goto	l9236
 11033                           
 11034                           ;stkvar	_d @ sp[(-56)+44]
 11035  010BE6  0EF4               	movlw	-12
 11036  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 11037  010BEE  0EF5               	movlw	-11
 11038  010BF0  50E3               	movf	plusw1,w,c
 11039  010BF2  1035               	iorwf	btemp^0,w,c
 11040  010BF4  A4D8               	btfss	status,2,c
 11041  010BF6  D01D               	goto	l9236
 11042                           
 11043                           ;stkvar	_mode @ sp[(-56)+54]
 11044  010BF8  0EFE               	movlw	-2
 11045  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 11046  010C00  0E67               	movlw	103
 11047  010C02  1835               	xorwf	btemp^0,w,c
 11048  010C04  A4D8               	btfss	status,2,c
 11049  010C06  D015               	goto	l9236
 11050                           
 11051                           ;stkvar	_ne @ sp[(-56)+46]
 11052  010C08  0EF7               	movlw	-9
 11053  010C0A  AEE3               	btfss	plusw1,7,c
 11054  010C0C  D012               	goto	l9236
 11055                           
 11056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11057                           ;stkvar	_t @ sp[(-56)+52]
 11058  010C0E  0EFC               	movlw	-4
 11059  010C10  50E3               	movf	plusw1,w,c
 11060  010C12  0F01               	addlw	1
 11061  010C14  6E35               	movwf	btemp^0,c
 11062  010C16  0EFC               	movlw	-4
 11063  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 11064  010C1E  6A35               	clrf	btemp^0,c
 11065  010C20  0EFD               	movlw	-3
 11066  010C22  50E3               	movf	plusw1,w,c
 11067  010C24  2035               	addwfc	btemp^0,w,c
 11068  010C26  6E35               	movwf	btemp^0,c
 11069  010C28  0EFD               	movlw	-3
 11070  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11071                           
 11072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11073  010C30  D0AF               	goto	l9264
 11074  010C32                     l9236:
 11075                           
 11076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11077                           ;stkvar	_pp @ sp[(-56)+50]
 11078  010C32  0EFA               	movlw	-6
 11079  010C34  006F FF8C  F035    	movff	plusw1,btemp
 11080  010C3A  0EFB               	movlw	-5
 11081  010C3C  50E3               	movf	plusw1,w,c
 11082  010C3E  1035               	iorwf	btemp^0,w,c
 11083  010C40  A4D8               	btfss	status,2,c
 11084  010C42  D070               	goto	l9256
 11085                           
 11086                           ;stkvar	_ne @ sp[(-56)+46]
 11087  010C44  0EF7               	movlw	-9
 11088  010C46  AEE3               	btfss	plusw1,7,c
 11089  010C48  D06D               	goto	l9256
 11090                           
 11091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11092                           ;stkvar	_n @ sp[(-56)+32]
 11093  010C4A  0EE8               	movlw	-24
 11094  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 11095  010C52  0EE9               	movlw	-23
 11096  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 11097  010C5A  0EA4               	movlw	low _dbuf
 11098  010C5C  243F               	addwf	(btemp+10)^0,w,c
 11099  010C5E  6ED9               	movwf	fsr2l,c
 11100  010C60  0E01               	movlw	high _dbuf
 11101  010C62  2040               	addwfc	(btemp+11)^0,w,c
 11102  010C64  6EDA               	movwf	fsr2h,c
 11103  010C66  0E2E               	movlw	46
 11104  010C68  6EDF               	movwf	indf2,c
 11105                           
 11106                           ;stkvar	_n @ sp[(-56)+32]
 11107  010C6A  0EE8               	movlw	-24
 11108  010C6C  50E3               	movf	plusw1,w,c
 11109  010C6E  0F01               	addlw	1
 11110  010C70  6E35               	movwf	btemp^0,c
 11111  010C72  0EE8               	movlw	-24
 11112  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 11113  010C7A  6A35               	clrf	btemp^0,c
 11114  010C7C  0EE9               	movlw	-23
 11115  010C7E  50E3               	movf	plusw1,w,c
 11116  010C80  2035               	addwfc	btemp^0,w,c
 11117  010C82  6E35               	movwf	btemp^0,c
 11118  010C84  0EE9               	movlw	-23
 11119  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 11120                           
 11121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11122                           ;stkvar	_w @ sp[(-56)+38]
 11123  010C8C  50E1               	movf	fsr1l,w,c
 11124  010C8E  0FEE               	addlw	-18
 11125  010C90  6ED9               	movwf	fsr2l,c
 11126  010C92  50E2               	movf	fsr1h,w,c
 11127  010C94  6EDA               	movwf	fsr2h,c
 11128  010C96  0EFF               	movlw	255
 11129  010C98  22DA               	addwfc	fsr2h,f,c
 11130  010C9A  06DE               	decf	postinc2,f,c
 11131  010C9C  0E00               	movlw	0
 11132  010C9E  5ADD               	subwfb	postdec2,f,c
 11133                           
 11134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11135  010CA0  0E01               	movlw	1
 11136  010CA2  6E3F               	movwf	(btemp+10)^0,c
 11137  010CA4  0E00               	movlw	0
 11138  010CA6  6E40               	movwf	(btemp+11)^0,c
 11139                           
 11140                           ;stkvar	_pp @ sp[(-56)+50]
 11141  010CA8  0EFA               	movlw	-6
 11142  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11143  010CB0  0EFB               	movlw	-5
 11144  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 11145  010CB8  D035               	goto	l9256
 11146  010CBA                     l9248:
 11147                           
 11148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11149                           ;stkvar	_n @ sp[(-56)+32]
 11150  010CBA  0EE8               	movlw	-24
 11151  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11152  010CC2  0EE9               	movlw	-23
 11153  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 11154  010CCA  0EA4               	movlw	low _dbuf
 11155  010CCC  243F               	addwf	(btemp+10)^0,w,c
 11156  010CCE  6ED9               	movwf	fsr2l,c
 11157  010CD0  0E01               	movlw	high _dbuf
 11158  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 11159  010CD4  6EDA               	movwf	fsr2h,c
 11160  010CD6  0E30               	movlw	48
 11161  010CD8  6EDF               	movwf	indf2,c
 11162                           
 11163                           ;stkvar	_n @ sp[(-56)+32]
 11164  010CDA  0EE8               	movlw	-24
 11165  010CDC  50E3               	movf	plusw1,w,c
 11166  010CDE  0F01               	addlw	1
 11167  010CE0  6E35               	movwf	btemp^0,c
 11168  010CE2  0EE8               	movlw	-24
 11169  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 11170  010CEA  6A35               	clrf	btemp^0,c
 11171  010CEC  0EE9               	movlw	-23
 11172  010CEE  50E3               	movf	plusw1,w,c
 11173  010CF0  2035               	addwfc	btemp^0,w,c
 11174  010CF2  6E35               	movwf	btemp^0,c
 11175  010CF4  0EE9               	movlw	-23
 11176  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 11177                           
 11178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11179                           ;stkvar	_w @ sp[(-56)+38]
 11180  010CFC  50E1               	movf	fsr1l,w,c
 11181  010CFE  0FEE               	addlw	-18
 11182  010D00  6ED9               	movwf	fsr2l,c
 11183  010D02  50E2               	movf	fsr1h,w,c
 11184  010D04  6EDA               	movwf	fsr2h,c
 11185  010D06  0EFF               	movlw	255
 11186  010D08  22DA               	addwfc	fsr2h,f,c
 11187  010D0A  06DE               	decf	postinc2,f,c
 11188  010D0C  0E00               	movlw	0
 11189  010D0E  5ADD               	subwfb	postdec2,f,c
 11190                           
 11191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11192                           ;stkvar	_t @ sp[(-56)+52]
 11193  010D10  50E1               	movf	fsr1l,w,c
 11194  010D12  0FFC               	addlw	-4
 11195  010D14  6ED9               	movwf	fsr2l,c
 11196  010D16  50E2               	movf	fsr1h,w,c
 11197  010D18  6EDA               	movwf	fsr2h,c
 11198  010D1A  0EFF               	movlw	255
 11199  010D1C  22DA               	addwfc	fsr2h,f,c
 11200  010D1E  06DE               	decf	postinc2,f,c
 11201  010D20  0E00               	movlw	0
 11202  010D22  5ADD               	subwfb	postdec2,f,c
 11203  010D24                     l9256:
 11204                           
 11205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11206                           ;stkvar	_t @ sp[(-56)+52]
 11207  010D24  0EFC               	movlw	-4
 11208  010D26  006F FF8C  F035    	movff	plusw1,btemp
 11209  010D2C  0EFD               	movlw	-3
 11210  010D2E  50E3               	movf	plusw1,w,c
 11211  010D30  1035               	iorwf	btemp^0,w,c
 11212  010D32  A4D8               	btfss	status,2,c
 11213  010D34  D7C2               	goto	l9248
 11214                           
 11215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11216                           ;stkvar	_n @ sp[(-56)+32]
 11217  010D36  0EE8               	movlw	-24
 11218  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 11219  010D3E  0EE9               	movlw	-23
 11220  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 11221  010D46  0EA4               	movlw	low _dbuf
 11222  010D48  243F               	addwf	(btemp+10)^0,w,c
 11223  010D4A  6ED9               	movwf	fsr2l,c
 11224  010D4C  0E01               	movlw	high _dbuf
 11225  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 11226  010D50  6EDA               	movwf	fsr2h,c
 11227                           
 11228                           ;stkvar	_d @ sp[(-56)+44]
 11229  010D52  0EF4               	movlw	-12
 11230  010D54  50E3               	movf	plusw1,w,c
 11231  010D56  0F30               	addlw	48
 11232  010D58  6EDF               	movwf	indf2,c
 11233                           
 11234                           ;stkvar	_n @ sp[(-56)+32]
 11235  010D5A  0EE8               	movlw	-24
 11236  010D5C  50E3               	movf	plusw1,w,c
 11237  010D5E  0F01               	addlw	1
 11238  010D60  6E35               	movwf	btemp^0,c
 11239  010D62  0EE8               	movlw	-24
 11240  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 11241  010D6A  6A35               	clrf	btemp^0,c
 11242  010D6C  0EE9               	movlw	-23
 11243  010D6E  50E3               	movf	plusw1,w,c
 11244  010D70  2035               	addwfc	btemp^0,w,c
 11245  010D72  6E35               	movwf	btemp^0,c
 11246  010D74  0EE9               	movlw	-23
 11247  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 11248                           
 11249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11250                           ;stkvar	_w @ sp[(-56)+38]
 11251  010D7C  50E1               	movf	fsr1l,w,c
 11252  010D7E  0FEE               	addlw	-18
 11253  010D80  6ED9               	movwf	fsr2l,c
 11254  010D82  50E2               	movf	fsr1h,w,c
 11255  010D84  6EDA               	movwf	fsr2h,c
 11256  010D86  0EFF               	movlw	255
 11257  010D88  22DA               	addwfc	fsr2h,f,c
 11258  010D8A  06DE               	decf	postinc2,f,c
 11259  010D8C  0E00               	movlw	0
 11260  010D8E  5ADD               	subwfb	postdec2,f,c
 11261  010D90                     l9264:
 11262                           
 11263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11264                           ;stkvar	_u @ sp[(-56)+12]
 11265  010D90  0ED4               	movlw	-44
 11266  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11267  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11268  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11269  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11270                           
 11271                           ;stkvar	_l @ sp[(-60)+20]
 11272  010DAA  0ED8               	movlw	-40
 11273  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11274  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11275  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11276  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11277  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11278  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 11279  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11280  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11281  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11282                           
 11283                           ;stkvar	_h @ sp[(-60)+24]
 11284  010DE0  0EDC               	movlw	-36
 11285  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11286  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11287  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11288  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11289  010DFA  EC26  F0BD         	call	___flsub	;wreg free
 11290                           
 11291                           ;stkvar	_h @ sp[(-56)+24]
 11292  010DFE  0EE0               	movlw	-32
 11293  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 11294  010E06  0EE1               	movlw	-31
 11295  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11296  010E0E  0EE2               	movlw	-30
 11297  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11298  010E16  0EE3               	movlw	-29
 11299  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11300                           
 11301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11302  010E1E  0E00               	movlw	0
 11303  010E20  6EE6               	movwf	postinc1,c
 11304  010E22  0E00               	movlw	0
 11305  010E24  6EE6               	movwf	postinc1,c
 11306  010E26  0E20               	movlw	32
 11307  010E28  6EE6               	movwf	postinc1,c
 11308  010E2A  0E41               	movlw	65
 11309  010E2C  6EE6               	movwf	postinc1,c
 11310                           
 11311                           ;stkvar	_u @ sp[(-60)+12]
 11312  010E2E  0ED0               	movlw	-48
 11313  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11314  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11315  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11316  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11317  010E48  ECD7  F099         	call	___fldiv	;wreg free
 11318                           
 11319                           ;stkvar	_u @ sp[(-56)+12]
 11320  010E4C  0ED4               	movlw	-44
 11321  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11322  010E54  0ED5               	movlw	-43
 11323  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11324  010E5C  0ED6               	movlw	-42
 11325  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11326  010E64  0ED7               	movlw	-41
 11327  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11328                           
 11329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11330                           ;stkvar	_ne @ sp[(-56)+46]
 11331  010E6C  50E1               	movf	fsr1l,w,c
 11332  010E6E  0FF6               	addlw	-10
 11333  010E70  6ED9               	movwf	fsr2l,c
 11334  010E72  50E2               	movf	fsr1h,w,c
 11335  010E74  6EDA               	movwf	fsr2h,c
 11336  010E76  0EFF               	movlw	255
 11337  010E78  22DA               	addwfc	fsr2h,f,c
 11338  010E7A  06DE               	decf	postinc2,f,c
 11339  010E7C  0E00               	movlw	0
 11340  010E7E  5ADD               	subwfb	postdec2,f,c
 11341                           
 11342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11343                           ;stkvar	_i @ sp[(-56)+36]
 11344  010E80  0EEC               	movlw	-20
 11345  010E82  50E3               	movf	plusw1,w,c
 11346  010E84  0F01               	addlw	1
 11347  010E86  6E35               	movwf	btemp^0,c
 11348  010E88  0EEC               	movlw	-20
 11349  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11350  010E90  6A35               	clrf	btemp^0,c
 11351  010E92  0EED               	movlw	-19
 11352  010E94  50E3               	movf	plusw1,w,c
 11353  010E96  2035               	addwfc	btemp^0,w,c
 11354  010E98  6E35               	movwf	btemp^0,c
 11355  010E9A  0EED               	movlw	-19
 11356  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11357  010EA2                     l9272:
 11358                           
 11359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11360                           ;stkvar	_m @ sp[(-56)+48]
 11361                           ;stkvar	_i @ sp[(-56)+36]
 11362  010EA2  50E1               	movf	fsr1l,w,c
 11363  010EA4  0FEC               	addlw	-20
 11364  010EA6  6ED9               	movwf	fsr2l,c
 11365  010EA8  50E2               	movf	fsr1h,w,c
 11366  010EAA  6EDA               	movwf	fsr2h,c
 11367  010EAC  0EFF               	movlw	255
 11368  010EAE  22DA               	addwfc	fsr2h,f,c
 11369  010EB0  0EF8               	movlw	-8
 11370  010EB2  50E3               	movf	plusw1,w,c
 11371  010EB4  5CDE               	subwf	postinc2,w,c
 11372  010EB6  50DE               	movf	postinc2,w,c
 11373  010EB8  0A80               	xorlw	128
 11374  010EBA  6E35               	movwf	btemp^0,c
 11375  010EBC  0EF9               	movlw	-7
 11376  010EBE  50E3               	movf	plusw1,w,c
 11377  010EC0  0A80               	xorlw	128
 11378  010EC2  5835               	subwfb	btemp^0,w,c
 11379  010EC4  B0D8               	btfsc	status,0,c
 11380  010EC6  D00E               	goto	u9150
 11381                           
 11382                           ;stkvar	_n @ sp[(-56)+32]
 11383  010EC8  0EE9               	movlw	-23
 11384  010ECA  BEE3               	btfsc	plusw1,7,c
 11385  010ECC  D633               	goto	l9222
 11386  010ECE  0EE9               	movlw	-23
 11387  010ED0  50E3               	movf	plusw1,w,c
 11388  010ED2  E108               	bnz	u9150
 11389  010ED4  0EE8               	movlw	-24
 11390  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 11391  010EDC  0E4B               	movlw	75
 11392  010EDE  5E35               	subwf	btemp^0,f,c
 11393  010EE0  A0D8               	btfss	status,0,c
 11394  010EE2  D628               	goto	l9222
 11395  010EE4                     u9150:
 11396                           
 11397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11398                           ;stkvar	_pp @ sp[(-56)+50]
 11399  010EE4  0EFA               	movlw	-6
 11400  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 11401  010EEC  0EFB               	movlw	-5
 11402  010EEE  50E3               	movf	plusw1,w,c
 11403  010EF0  1035               	iorwf	btemp^0,w,c
 11404  010EF2  B4D8               	btfsc	status,2,c
 11405  010EF4  A822               	btfss	_flags^0,4,c
 11406  010EF6  D021               	goto	l9284
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11409                           ;stkvar	_n @ sp[(-56)+32]
 11410  010EF8  0EE8               	movlw	-24
 11411  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 11412  010F00  0EE9               	movlw	-23
 11413  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 11414  010F08  0EA4               	movlw	low _dbuf
 11415  010F0A  243F               	addwf	(btemp+10)^0,w,c
 11416  010F0C  6ED9               	movwf	fsr2l,c
 11417  010F0E  0E01               	movlw	high _dbuf
 11418  010F10  2040               	addwfc	(btemp+11)^0,w,c
 11419  010F12  6EDA               	movwf	fsr2h,c
 11420  010F14  0E2E               	movlw	46
 11421  010F16  6EDF               	movwf	indf2,c
 11422                           
 11423                           ;stkvar	_n @ sp[(-56)+32]
 11424  010F18  0EE8               	movlw	-24
 11425  010F1A  50E3               	movf	plusw1,w,c
 11426  010F1C  0F01               	addlw	1
 11427  010F1E  6E35               	movwf	btemp^0,c
 11428  010F20  0EE8               	movlw	-24
 11429  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 11430  010F28  6A35               	clrf	btemp^0,c
 11431  010F2A  0EE9               	movlw	-23
 11432  010F2C  50E3               	movf	plusw1,w,c
 11433  010F2E  2035               	addwfc	btemp^0,w,c
 11434  010F30  6E35               	movwf	btemp^0,c
 11435  010F32  0EE9               	movlw	-23
 11436  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 11437  010F3A                     l9284:
 11438                           
 11439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11440                           ;stkvar	_n @ sp[(-56)+32]
 11441  010F3A  0EE8               	movlw	-24
 11442  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 11443  010F42  0EE9               	movlw	-23
 11444  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 11445  010F4A  0EA4               	movlw	low _dbuf
 11446  010F4C  243F               	addwf	(btemp+10)^0,w,c
 11447  010F4E  6ED9               	movwf	fsr2l,c
 11448  010F50  0E01               	movlw	high _dbuf
 11449  010F52  2040               	addwfc	(btemp+11)^0,w,c
 11450  010F54  6EDA               	movwf	fsr2h,c
 11451  010F56  0E00               	movlw	0
 11452  010F58  6EDF               	movwf	indf2,c
 11453                           
 11454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11455                           ;stkvar	_nmode @ sp[(-56)+55]
 11456  010F5A  0EFF               	movlw	-1
 11457  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 11458  010F62  0E65               	movlw	101
 11459  010F64  1835               	xorwf	btemp^0,w,c
 11460  010F66  A4D8               	btfss	status,2,c
 11461  010F68  EF16  F081         	goto	l9088
 11462                           
 11463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11464  010F6C  0E4F               	movlw	79
 11465  010F6E  6E3F               	movwf	(btemp+10)^0,c
 11466  010F70  0E00               	movlw	0
 11467  010F72  6E40               	movwf	(btemp+11)^0,c
 11468                           
 11469                           ;stkvar	_i @ sp[(-56)+36]
 11470  010F74  0EEC               	movlw	-20
 11471  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11472  010F7C  0EED               	movlw	-19
 11473  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11474                           
 11475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11476                           ;stkvar	_i @ sp[(-56)+36]
 11477  010F84  0EEC               	movlw	-20
 11478  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 11479  010F8C  0EED               	movlw	-19
 11480  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 11481  010F94  0EA4               	movlw	low _dbuf
 11482  010F96  243F               	addwf	(btemp+10)^0,w,c
 11483  010F98  6ED9               	movwf	fsr2l,c
 11484  010F9A  0E01               	movlw	high _dbuf
 11485  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 11486  010F9E  6EDA               	movwf	fsr2h,c
 11487  010FA0  0E00               	movlw	0
 11488  010FA2  6EDF               	movwf	indf2,c
 11489                           
 11490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11491                           ;stkvar	_sign @ sp[(-56)+42]
 11492  010FA4  0EF2               	movlw	-14
 11493  010FA6  6AE3               	clrf	plusw1,c
 11494  010FA8  0EF3               	movlw	-13
 11495  010FAA  6AE3               	clrf	plusw1,c
 11496                           
 11497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11498                           ;stkvar	_e @ sp[(-56)+34]
 11499  010FAC  0EEB               	movlw	-21
 11500  010FAE  AEE3               	btfss	plusw1,7,c
 11501  010FB0  D012               	goto	l9298
 11502                           
 11503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11504  010FB2  0E01               	movlw	1
 11505  010FB4  6E3F               	movwf	(btemp+10)^0,c
 11506  010FB6  0E00               	movlw	0
 11507  010FB8  6E40               	movwf	(btemp+11)^0,c
 11508                           
 11509                           ;stkvar	_sign @ sp[(-56)+42]
 11510  010FBA  0EF2               	movlw	-14
 11511  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11512  010FC2  0EF3               	movlw	-13
 11513  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11514                           
 11515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11516                           ;stkvar	_e @ sp[(-56)+34]
 11517                           ;stkvar	_e @ sp[(-56)+34]
 11518  010FCA  0EEA               	movlw	-22
 11519  010FCC  6CE3               	negf	plusw1,c
 11520  010FCE  0EEB               	movlw	-21
 11521  010FD0  1EE3               	comf	plusw1,f,c
 11522  010FD2  B0D8               	btfsc	status,0,c
 11523  010FD4  2AE3               	incf	plusw1,f,c
 11524  010FD6                     l9298:
 11525                           
 11526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11527  010FD6  0E02               	movlw	2
 11528  010FD8  6E3F               	movwf	(btemp+10)^0,c
 11529  010FDA  0E00               	movlw	0
 11530  010FDC  6E40               	movwf	(btemp+11)^0,c
 11531                           
 11532                           ;stkvar	_p @ sp[(-56)+40]
 11533  010FDE  0EF0               	movlw	-16
 11534  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11535  010FE6  0EF1               	movlw	-15
 11536  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 11537                           
 11538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11539  010FEE  D051               	goto	l9310
 11540  010FF0                     l9300:
 11541                           
 11542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11543                           ;stkvar	_i @ sp[(-56)+36]
 11544  010FF0  50E1               	movf	fsr1l,w,c
 11545  010FF2  0FEC               	addlw	-20
 11546  010FF4  6ED9               	movwf	fsr2l,c
 11547  010FF6  50E2               	movf	fsr1h,w,c
 11548  010FF8  6EDA               	movwf	fsr2h,c
 11549  010FFA  0EFF               	movlw	255
 11550  010FFC  22DA               	addwfc	fsr2h,f,c
 11551  010FFE  06DE               	decf	postinc2,f,c
 11552  011000  0E00               	movlw	0
 11553  011002  5ADD               	subwfb	postdec2,f,c
 11554                           
 11555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11556                           ;stkvar	_i @ sp[(-56)+36]
 11557  011004  0EEC               	movlw	-20
 11558  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 11559  01100C  0EED               	movlw	-19
 11560  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 11561  011014  0EA4               	movlw	low _dbuf
 11562  011016  243F               	addwf	(btemp+10)^0,w,c
 11563  011018  6ED9               	movwf	fsr2l,c
 11564  01101A  0E01               	movlw	high _dbuf
 11565  01101C  2040               	addwfc	(btemp+11)^0,w,c
 11566  01101E  6EDA               	movwf	fsr2h,c
 11567  011020  0E0A               	movlw	10
 11568  011022  6EE6               	movwf	postinc1,c
 11569  011024  0E00               	movlw	0
 11570  011026  6EE6               	movwf	postinc1,c
 11571                           
 11572                           ;stkvar	_e @ sp[(-58)+34]
 11573  011028  0EE8               	movlw	-24
 11574  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11575  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11576  011036  EC00  F0B3         	call	___awmod	;wreg free
 11577  01103A  5035               	movf	btemp^0,w,c
 11578  01103C  0F30               	addlw	48
 11579  01103E  6EDF               	movwf	indf2,c
 11580                           
 11581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11582  011040  0E0A               	movlw	10
 11583  011042  6EE6               	movwf	postinc1,c
 11584  011044  0E00               	movlw	0
 11585  011046  6EE6               	movwf	postinc1,c
 11586                           
 11587                           ;stkvar	_e @ sp[(-58)+34]
 11588  011048  0EE8               	movlw	-24
 11589  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11590  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11591  011056  EC30  F0B1         	call	___awdiv	;wreg free
 11592                           
 11593                           ;stkvar	_e @ sp[(-56)+34]
 11594  01105A  0EEA               	movlw	-22
 11595  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11596  011062  0EEB               	movlw	-21
 11597  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11598                           
 11599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11600                           ;stkvar	_p @ sp[(-56)+40]
 11601  01106A  50E1               	movf	fsr1l,w,c
 11602  01106C  0FF0               	addlw	-16
 11603  01106E  6ED9               	movwf	fsr2l,c
 11604  011070  50E2               	movf	fsr1h,w,c
 11605  011072  6EDA               	movwf	fsr2h,c
 11606  011074  0EFF               	movlw	255
 11607  011076  22DA               	addwfc	fsr2h,f,c
 11608  011078  06DE               	decf	postinc2,f,c
 11609  01107A  0E00               	movlw	0
 11610  01107C  5ADD               	subwfb	postdec2,f,c
 11611                           
 11612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11613                           ;stkvar	_w @ sp[(-56)+38]
 11614  01107E  50E1               	movf	fsr1l,w,c
 11615  011080  0FEE               	addlw	-18
 11616  011082  6ED9               	movwf	fsr2l,c
 11617  011084  50E2               	movf	fsr1h,w,c
 11618  011086  6EDA               	movwf	fsr2h,c
 11619  011088  0EFF               	movlw	255
 11620  01108A  22DA               	addwfc	fsr2h,f,c
 11621  01108C  06DE               	decf	postinc2,f,c
 11622  01108E  0E00               	movlw	0
 11623  011090  5ADD               	subwfb	postdec2,f,c
 11624  011092                     l9310:
 11625                           
 11626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11627                           ;stkvar	_e @ sp[(-56)+34]
 11628  011092  0EEA               	movlw	-22
 11629  011094  006F FF8C  F035    	movff	plusw1,btemp
 11630  01109A  0EEB               	movlw	-21
 11631  01109C  50E3               	movf	plusw1,w,c
 11632  01109E  1035               	iorwf	btemp^0,w,c
 11633  0110A0  A4D8               	btfss	status,2,c
 11634  0110A2  D7A6               	goto	l9300
 11635                           
 11636                           ;stkvar	_p @ sp[(-56)+40]
 11637  0110A4  0EF1               	movlw	-15
 11638  0110A6  BEE3               	btfsc	plusw1,7,c
 11639  0110A8  D007               	goto	u9210
 11640  0110AA  0EF1               	movlw	-15
 11641  0110AC  50E3               	movf	plusw1,w,c
 11642  0110AE  E1A0               	bnz	l9300
 11643  0110B0  0EF0               	movlw	-16
 11644  0110B2  04E3               	decf	plusw1,w,c
 11645  0110B4  B0D8               	btfsc	status,0,c
 11646  0110B6  D79C               	goto	l9300
 11647  0110B8                     u9210:
 11648                           
 11649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11650                           ;stkvar	_i @ sp[(-56)+36]
 11651  0110B8  50E1               	movf	fsr1l,w,c
 11652  0110BA  0FEC               	addlw	-20
 11653  0110BC  6ED9               	movwf	fsr2l,c
 11654  0110BE  50E2               	movf	fsr1h,w,c
 11655  0110C0  6EDA               	movwf	fsr2h,c
 11656  0110C2  0EFF               	movlw	255
 11657  0110C4  22DA               	addwfc	fsr2h,f,c
 11658  0110C6  06DE               	decf	postinc2,f,c
 11659  0110C8  0E00               	movlw	0
 11660  0110CA  5ADD               	subwfb	postdec2,f,c
 11661                           
 11662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11663                           ;stkvar	_sign @ sp[(-56)+42]
 11664  0110CC  0EF2               	movlw	-14
 11665  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 11666  0110D4  0EF3               	movlw	-13
 11667  0110D6  50E3               	movf	plusw1,w,c
 11668  0110D8  1035               	iorwf	btemp^0,w,c
 11669  0110DA  A4D8               	btfss	status,2,c
 11670  0110DC  D002               	goto	l9320
 11671  0110DE  0E2B               	movlw	43
 11672  0110E0  D001               	goto	L9
 11673  0110E2                     l9320:
 11674  0110E2  0E2D               	movlw	45
 11675  0110E4                     L9:
 11676  0110E4  6E3F               	movwf	(btemp+10)^0,c
 11677  0110E6  0E00               	movlw	0
 11678  0110E8  6E40               	movwf	(btemp+11)^0,c
 11679                           
 11680                           ;stkvar	_efgtoa$4118 @ sp[(-56)+4]
 11681  0110EA  0ECC               	movlw	-52
 11682  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11683  0110F2  0ECD               	movlw	-51
 11684  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11685                           
 11686                           ;stkvar	_efgtoa$4118 @ sp[(-56)+4]
 11687                           ;stkvar	_i @ sp[(-56)+36]
 11688  0110FA  0EEC               	movlw	-20
 11689  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11690  011102  0EED               	movlw	-19
 11691  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 11692  01110A  0EA4               	movlw	low _dbuf
 11693  01110C  243F               	addwf	(btemp+10)^0,w,c
 11694  01110E  6ED9               	movwf	fsr2l,c
 11695  011110  0E01               	movlw	high _dbuf
 11696  011112  2040               	addwfc	(btemp+11)^0,w,c
 11697  011114  6EDA               	movwf	fsr2h,c
 11698  011116  0ECC               	movlw	-52
 11699  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11700                           
 11701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11702                           ;stkvar	_w @ sp[(-56)+38]
 11703  01111E  50E1               	movf	fsr1l,w,c
 11704  011120  0FEE               	addlw	-18
 11705  011122  6ED9               	movwf	fsr2l,c
 11706  011124  50E2               	movf	fsr1h,w,c
 11707  011126  6EDA               	movwf	fsr2h,c
 11708  011128  0EFF               	movlw	255
 11709  01112A  22DA               	addwfc	fsr2h,f,c
 11710  01112C  06DE               	decf	postinc2,f,c
 11711  01112E  0E00               	movlw	0
 11712  011130  5ADD               	subwfb	postdec2,f,c
 11713                           
 11714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11715                           ;stkvar	_i @ sp[(-56)+36]
 11716  011132  50E1               	movf	fsr1l,w,c
 11717  011134  0FEC               	addlw	-20
 11718  011136  6ED9               	movwf	fsr2l,c
 11719  011138  50E2               	movf	fsr1h,w,c
 11720  01113A  6EDA               	movwf	fsr2h,c
 11721  01113C  0EFF               	movlw	255
 11722  01113E  22DA               	addwfc	fsr2h,f,c
 11723  011140  06DE               	decf	postinc2,f,c
 11724  011142  0E00               	movlw	0
 11725  011144  5ADD               	subwfb	postdec2,f,c
 11726  011146  0EBF               	movlw	191
 11727  011148  6E3F               	movwf	(btemp+10)^0,c
 11728  01114A  0EFF               	movlw	255
 11729  01114C  6E40               	movwf	(btemp+11)^0,c
 11730                           
 11731                           ;stkvar	_c @ sp[(-56)+-7]
 11732  01114E  0EC1               	movlw	-63
 11733  011150  50E3               	movf	plusw1,w,c
 11734  011152  6E3D               	movwf	(btemp+8)^0,c
 11735  011154  6A3E               	clrf	(btemp+9)^0,c
 11736  011156  503F               	movf	(btemp+10)^0,w,c
 11737  011158  263D               	addwf	(btemp+8)^0,f,c
 11738  01115A  5040               	movf	(btemp+11)^0,w,c
 11739  01115C  223E               	addwfc	(btemp+9)^0,f,c
 11740  01115E  503E               	movf	(btemp+9)^0,w,c
 11741  011160  E106               	bnz	u9230
 11742  011162  0E1A               	movlw	26
 11743  011164  5C3D               	subwf	(btemp+8)^0,w,c
 11744  011166  B0D8               	btfsc	status,0,c
 11745  011168  D002               	goto	u9230
 11746  01116A  0E01               	movlw	1
 11747  01116C  D001               	goto	u9240
 11748  01116E                     u9230:
 11749  01116E  0E00               	movlw	0
 11750  011170                     u9240:
 11751  011170  6E3F               	movwf	(btemp+10)^0,c
 11752  011172  6A40               	clrf	(btemp+11)^0,c
 11753                           
 11754                           ;stkvar	_efgtoa$4120 @ sp[(-56)+0]
 11755  011174  0EC8               	movlw	-56
 11756  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11757  01117C  0EC9               	movlw	-55
 11758  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11759                           
 11760                           ;stkvar	_efgtoa$4120 @ sp[(-56)+0]
 11761  011184  0EC8               	movlw	-56
 11762  011186  006F FF8C  F035    	movff	plusw1,btemp
 11763  01118C  0EC9               	movlw	-55
 11764  01118E  50E3               	movf	plusw1,w,c
 11765  011190  1035               	iorwf	btemp^0,w,c
 11766  011192  A4D8               	btfss	status,2,c
 11767  011194  D002               	goto	l9336
 11768  011196  0E65               	movlw	101
 11769  011198  D001               	goto	L10
 11770  01119A                     l9336:
 11771  01119A  0E45               	movlw	69
 11772  01119C                     L10:
 11773  01119C  6E3F               	movwf	(btemp+10)^0,c
 11774  01119E  0E00               	movlw	0
 11775  0111A0  6E40               	movwf	(btemp+11)^0,c
 11776                           
 11777                           ;stkvar	_efgtoa$4119 @ sp[(-56)+2]
 11778  0111A2  0ECA               	movlw	-54
 11779  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11780  0111AA  0ECB               	movlw	-53
 11781  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11782                           
 11783                           ;stkvar	_efgtoa$4119 @ sp[(-56)+2]
 11784                           ;stkvar	_i @ sp[(-56)+36]
 11785  0111B2  0EEC               	movlw	-20
 11786  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11787  0111BA  0EED               	movlw	-19
 11788  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 11789  0111C2  0EA4               	movlw	low _dbuf
 11790  0111C4  243F               	addwf	(btemp+10)^0,w,c
 11791  0111C6  6ED9               	movwf	fsr2l,c
 11792  0111C8  0E01               	movlw	high _dbuf
 11793  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 11794  0111CC  6EDA               	movwf	fsr2h,c
 11795  0111CE  0ECA               	movlw	-54
 11796  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 11797                           
 11798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 11799                           ;stkvar	_w @ sp[(-56)+38]
 11800  0111D6  50E1               	movf	fsr1l,w,c
 11801  0111D8  0FEE               	addlw	-18
 11802  0111DA  6ED9               	movwf	fsr2l,c
 11803  0111DC  50E2               	movf	fsr1h,w,c
 11804  0111DE  6EDA               	movwf	fsr2h,c
 11805  0111E0  0EFF               	movlw	255
 11806  0111E2  22DA               	addwfc	fsr2h,f,c
 11807  0111E4  06DE               	decf	postinc2,f,c
 11808  0111E6  0E00               	movlw	0
 11809  0111E8  5ADD               	subwfb	postdec2,f,c
 11810                           
 11811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 11812                           ;stkvar	_i @ sp[(-56)+36]
 11813  0111EA  0EEC               	movlw	-20
 11814  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11815  0111F2  0EED               	movlw	-19
 11816  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 11817  0111FA  0EA4               	movlw	low _dbuf
 11818  0111FC  243F               	addwf	(btemp+10)^0,w,c
 11819  0111FE  6E3D               	movwf	(btemp+8)^0,c
 11820  011200  0E01               	movlw	high _dbuf
 11821  011202  2040               	addwfc	(btemp+11)^0,w,c
 11822  011204  6E3E               	movwf	(btemp+9)^0,c
 11823  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 11824  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 11825                           
 11826                           ;stkvar	_n @ sp[(-58)+32]
 11827  011212  0EA4               	movlw	low _dbuf
 11828  011214  6E3F               	movwf	(btemp+10)^0,c
 11829  011216  0E01               	movlw	high _dbuf
 11830  011218  6E40               	movwf	(btemp+11)^0,c
 11831  01121A  0EE6               	movlw	-26
 11832  01121C  50E3               	movf	plusw1,w,c
 11833  01121E  263F               	addwf	(btemp+10)^0,f,c
 11834  011220  0EE7               	movlw	-25
 11835  011222  50E3               	movf	plusw1,w,c
 11836  011224  2240               	addwfc	(btemp+11)^0,f,c
 11837  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11838  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11839  011232  EC97  F0B5         	call	_strcpy	;wreg free
 11840  011236  EF16  F081         	goto	l9088
 11841  01123A                     l1793:
 11842                           
 11843                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 11844  01123A  0EC1               	movlw	193
 11845  01123C  26E1               	addwf	fsr1l,f,c
 11846  01123E  0EFF               	movlw	255
 11847  011240  22E2               	addwfc	fsr1h,f,c
 11848  011242  0012               	return		;funcret
 11849  011244                     __end_of_efgtoa:
 11850                           	opt callstack 0
 11851                           
 11852 ;; *************** function _tolower *****************
 11853 ;; Defined at:
 11854 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;  c               2  [STACK] int 
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;		None
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  2  [STACK] int 
 11861 ;; Registers used:
 11862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11863 ;; Tracked objects:
 11864 ;;		On entry : 0/4
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11872 ;;Total ram usage:        0 bytes
 11873 ;; Hardware stack levels used:    1
 11874 ;; Hardware stack levels required when called:    7
 11875 ;; This function calls:
 11876 ;;		_isupper
 11877 ;; This function is called by:
 11878 ;;		_efgtoa
 11879 ;;		_vfpfcnvrt
 11880 ;; This function uses a reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text41
 11884  017440                     __ptext41:
 11885                           	opt callstack 0
 11886  017440                     _tolower:
 11887                           	opt callstack 0
 11888                           
 11889                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11890  017440  52E6               	movf	postinc1,f,c
 11891  017442  52E6               	movf	postinc1,f,c
 11892                           
 11893                           ;stkvar	_c @ sp[(-2)+-2]
 11894                           
 11895                           ;incstack = 0
 11896  017444  0EFC               	movlw	-4
 11897  017446  50E3               	movf	plusw1,w,c
 11898  017448  0FBF               	addlw	191
 11899  01744A  6E3F               	movwf	(btemp+10)^0,c
 11900  01744C  0EFD               	movlw	-3
 11901  01744E  006F FF8C  F040    	movff	plusw1,btemp+11
 11902  017454  0EFF               	movlw	255
 11903  017456  2240               	addwfc	(btemp+11)^0,f,c
 11904  017458  5040               	movf	(btemp+11)^0,w,c
 11905  01745A  E106               	bnz	u4940
 11906  01745C  0E1A               	movlw	26
 11907  01745E  5C3F               	subwf	(btemp+10)^0,w,c
 11908  017460  B0D8               	btfsc	status,0,c
 11909  017462  D002               	goto	u4940
 11910  017464  0E01               	movlw	1
 11911  017466  D001               	goto	u4950
 11912  017468                     u4940:
 11913  017468  0E00               	movlw	0
 11914  01746A                     u4950:
 11915  01746A  6E3F               	movwf	(btemp+10)^0,c
 11916  01746C  6A40               	clrf	(btemp+11)^0,c
 11917                           
 11918                           ;stkvar	_tolower$4786 @ sp[(-2)+0]
 11919  01746E  0EFE               	movlw	-2
 11920  017470  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11921  017476  0EFF               	movlw	-1
 11922  017478  0060  F103  FFE3   	movff	btemp+11,plusw1
 11923                           
 11924                           ;stkvar	_tolower$4786 @ sp[(-2)+0]
 11925  01747E  0EFE               	movlw	-2
 11926  017480  006F FF8C  F035    	movff	plusw1,btemp
 11927  017486  0EFF               	movlw	-1
 11928  017488  50E3               	movf	plusw1,w,c
 11929  01748A  1035               	iorwf	btemp^0,w,c
 11930  01748C  B4D8               	btfsc	status,2,c
 11931  01748E  D00D               	goto	l6238
 11932                           
 11933                           ;stkvar	_c @ sp[(-2)+-2]
 11934  017490  0EFC               	movlw	-4
 11935  017492  006F FF8C  F035    	movff	plusw1,btemp
 11936  017498  0EFD               	movlw	-3
 11937  01749A  006F FF8C  F036    	movff	plusw1,btemp+1
 11938  0174A0  0E20               	movlw	32
 11939  0174A2  1235               	iorwf	btemp^0,f,c
 11940  0174A4  0E00               	movlw	0
 11941  0174A6  1236               	iorwf	(btemp+1)^0,f,c
 11942  0174A8  D008               	goto	l2816
 11943  0174AA                     l6238:
 11944                           
 11945                           ;stkvar	_c @ sp[(-2)+-2]
 11946  0174AA  0EFC               	movlw	-4
 11947  0174AC  006F FF8C  F035    	movff	plusw1,btemp
 11948  0174B2  0EFD               	movlw	-3
 11949  0174B4  006F FF8C  F036    	movff	plusw1,btemp+1
 11950  0174BA                     l2816:
 11951                           
 11952                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11953  0174BA  52E5               	movf	postdec1,f,c
 11954  0174BC  52E5               	movf	postdec1,f,c
 11955  0174BE  52E5               	movf	postdec1,f,c
 11956  0174C0  52E5               	movf	postdec1,f,c
 11957  0174C2  0012               	return		;funcret
 11958  0174C4                     __end_of_tolower:
 11959                           	opt callstack 0
 11960                           
 11961 ;; *************** function _isupper *****************
 11962 ;; Defined at:
 11963 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 11964 ;; Parameters:    Size  Location     Type
 11965 ;;  c               2  [STACK] int 
 11966 ;; Auto vars:     Size  Location     Type
 11967 ;;		None
 11968 ;; Return value:  Size  Location     Type
 11969 ;;                  2  [STACK] int 
 11970 ;; Registers used:
 11971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11972 ;; Tracked objects:
 11973 ;;		On entry : 0/0
 11974 ;;		On exit  : 0/0
 11975 ;;		Unchanged: 0/0
 11976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11981 ;;Total ram usage:        0 bytes
 11982 ;; Hardware stack levels used:    1
 11983 ;; Hardware stack levels required when called:    6
 11984 ;; This function calls:
 11985 ;;		Nothing
 11986 ;; This function is called by:
 11987 ;;		_efgtoa
 11988 ;;		_xtoa
 11989 ;;		_vfpfcnvrt
 11990 ;;		_tolower
 11991 ;; This function uses a reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text42
 11995  017E64                     __ptext42:
 11996                           	opt callstack 0
 11997  017E64                     _isupper:
 11998                           	opt callstack 17
 11999                           
 12000                           ;stkvar	_c @ sp[(0)+-2]
 12001                           
 12002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12003                           ;incstack = 0
 12004  017E64  0EFE               	movlw	-2
 12005  017E66  50E3               	movf	plusw1,w,c
 12006  017E68  0FBF               	addlw	191
 12007  017E6A  6E3F               	movwf	(btemp+10)^0,c
 12008  017E6C  0EFF               	movlw	-1
 12009  017E6E  006F FF8C  F040    	movff	plusw1,btemp+11
 12010  017E74  0EFF               	movlw	255
 12011  017E76  2240               	addwfc	(btemp+11)^0,f,c
 12012  017E78  5040               	movf	(btemp+11)^0,w,c
 12013  017E7A  E106               	bnz	u4340
 12014  017E7C  0E1A               	movlw	26
 12015  017E7E  5C3F               	subwf	(btemp+10)^0,w,c
 12016  017E80  B0D8               	btfsc	status,0,c
 12017  017E82  D002               	goto	u4340
 12018  017E84  0E01               	movlw	1
 12019  017E86  D001               	goto	u4350
 12020  017E88                     u4340:
 12021  017E88  0E00               	movlw	0
 12022  017E8A                     u4350:
 12023  017E8A  6E35               	movwf	btemp^0,c
 12024  017E8C  6A36               	clrf	(btemp+1)^0,c
 12025                           
 12026                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12027  017E8E  52E5               	movf	postdec1,f,c
 12028  017E90  52E5               	movf	postdec1,f,c
 12029  017E92  0012               	return		;funcret
 12030  017E94                     __end_of_isupper:
 12031                           	opt callstack 0
 12032                           
 12033 ;; *************** function _strcpy *****************
 12034 ;; Defined at:
 12035 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  dest            2  [STACK] PTR unsigned char 
 12038 ;;		 -> dbuf(80), 
 12039 ;;  src             2  [STACK] PTR const unsigned char 
 12040 ;;		 -> STR_38(4), STR_37(4), STR_34(4), STR_33(4), 
 12041 ;;		 -> dbuf(80), 
 12042 ;; Auto vars:     Size  Location     Type
 12043 ;;  d               2  [STACK] PTR unsigned char 
 12044 ;;		 -> dbuf(80), 
 12045 ;;  s               2  [STACK] PTR const unsigned char 
 12046 ;;		 -> STR_38(4), STR_37(4), STR_34(4), STR_33(4), 
 12047 ;;		 -> dbuf(80), 
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  2  [STACK] PTR unsigned char 
 12050 ;; Registers used:
 12051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/4
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12061 ;;Total ram usage:        0 bytes
 12062 ;; Hardware stack levels used:    1
 12063 ;; Hardware stack levels required when called:    6
 12064 ;; This function calls:
 12065 ;;		Nothing
 12066 ;; This function is called by:
 12067 ;;		_efgtoa
 12068 ;; This function uses a reentrant model
 12069 ;;
 12070                           
 12071                           	psect	text43
 12072  016B2E                     __ptext43:
 12073                           	opt callstack 0
 12074  016B2E                     _strcpy:
 12075                           	opt callstack 0
 12076                           
 12077                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12078  016B2E  52E6               	movf	postinc1,f,c
 12079  016B30  52E6               	movf	postinc1,f,c
 12080  016B32  52E6               	movf	postinc1,f,c
 12081  016B34  52E6               	movf	postinc1,f,c
 12082                           
 12083                           ;stkvar	_src @ sp[(-4)+-4]
 12084                           
 12085                           ;incstack = 0
 12086  016B36  0EF8               	movlw	-8
 12087  016B38  006F FF8C  F03F    	movff	plusw1,btemp+10
 12088  016B3E  0EF9               	movlw	-7
 12089  016B40  006F FF8C  F040    	movff	plusw1,btemp+11
 12090                           
 12091                           ;stkvar	_s @ sp[(-4)+2]
 12092  016B46  0EFF               	movlw	-1
 12093  016B48  0060  F103  FFE3   	movff	btemp+11,plusw1
 12094  016B4E  0EFE               	movlw	-2
 12095  016B50  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12096                           
 12097                           ;stkvar	_dest @ sp[(-4)+-2]
 12098  016B56  0EFA               	movlw	-6
 12099  016B58  006F FF8C  F03F    	movff	plusw1,btemp+10
 12100  016B5E  0EFB               	movlw	-5
 12101  016B60  006F FF8C  F040    	movff	plusw1,btemp+11
 12102                           
 12103                           ;stkvar	_d @ sp[(-4)+0]
 12104  016B66  0EFD               	movlw	-3
 12105  016B68  0060  F103  FFE3   	movff	btemp+11,plusw1
 12106  016B6E  0EFC               	movlw	-4
 12107  016B70  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12108  016B76                     l8962:
 12109                           
 12110                           ;stkvar	_s @ sp[(-4)+2]
 12111  016B76  50E1               	movf	fsr1l,w,c
 12112  016B78  0FFE               	addlw	-2
 12113  016B7A  6ED9               	movwf	fsr2l,c
 12114  016B7C  50E2               	movf	fsr1h,w,c
 12115  016B7E  6EDA               	movwf	fsr2h,c
 12116  016B80  0EFF               	movlw	255
 12117  016B82  22DA               	addwfc	fsr2h,f,c
 12118  016B84  006F FF7C  F03F    	movff	indf2,btemp+10
 12119  016B8A  0E01               	movlw	1
 12120  016B8C  26DE               	addwf	postinc2,f,c
 12121  016B8E  006F FF7C  F040    	movff	indf2,btemp+11
 12122  016B94  0E00               	movlw	0
 12123  016B96  22DD               	addwfc	postdec2,f,c
 12124  016B98  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 12125  016B9E  0060  F103  FFF7   	movff	btemp+11,tblptrh
 12126  016BA4  0E00               	movlw	low (__mediumconst shr (0+16))
 12127  016BA6  6EF8               	movwf	tblptru,c
 12128                           
 12129                           ;stkvar	_d @ sp[(-4)+0]
 12130  016BA8  50E1               	movf	fsr1l,w,c
 12131  016BAA  0FFC               	addlw	-4
 12132  016BAC  6ED9               	movwf	fsr2l,c
 12133  016BAE  50E2               	movf	fsr1h,w,c
 12134  016BB0  6EDA               	movwf	fsr2h,c
 12135  016BB2  0EFF               	movlw	255
 12136  016BB4  22DA               	addwfc	fsr2h,f,c
 12137  016BB6  006F FF7C  F03F    	movff	indf2,btemp+10
 12138  016BBC  0E01               	movlw	1
 12139  016BBE  26DE               	addwf	postinc2,f,c
 12140  016BC0  006F FF7C  F040    	movff	indf2,btemp+11
 12141  016BC6  0E00               	movlw	0
 12142  016BC8  22DD               	addwfc	postdec2,f,c
 12143  016BCA  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 12144  016BD0  0060  F103  FFDA   	movff	btemp+11,fsr2h
 12145  016BD6  0E1F               	movlw	(high __ramtop+-1)
 12146  016BD8  64F7               	cpfsgt	tblptrh,c
 12147  016BDA  D003               	bra	u8547
 12148  016BDC  0008               	tblrd		*
 12149  016BDE  50F5               	movf	tablat,w,c
 12150  016BE0  D007               	bra	u8540
 12151  016BE2                     u8547:
 12152  016BE2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12153  016BE8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12154  016BEE  50EF               	movf	indf0,w,c
 12155  016BF0                     u8540:
 12156  016BF0  6EDF               	movwf	indf2,c
 12157  016BF2  50DF               	movf	indf2,w,c
 12158  016BF4  A4D8               	btfss	status,2,c
 12159  016BF6  D7BF               	goto	l8962
 12160                           
 12161                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12162  016BF8  0EF8               	movlw	248
 12163  016BFA  26E1               	addwf	fsr1l,f,c
 12164  016BFC  0EFF               	movlw	255
 12165  016BFE  22E2               	addwfc	fsr1h,f,c
 12166  016C00  0012               	return		;funcret
 12167  016C02                     __end_of_strcpy:
 12168                           	opt callstack 0
 12169                           
 12170 ;; *************** function _floorf *****************
 12171 ;; Defined at:
 12172 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;  x               4  [STACK] float 
 12175 ;; Auto vars:     Size  Location     Type
 12176 ;;  u               4  [STACK] struct .
 12177 ;;  m               4  [STACK] unsigned long 
 12178 ;;  e               2  [STACK] int 
 12179 ;; Return value:  Size  Location     Type
 12180 ;;                  4  [STACK] float 
 12181 ;; Registers used:
 12182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12183 ;; Tracked objects:
 12184 ;;		On entry : 0/4
 12185 ;;		On exit  : 0/0
 12186 ;;		Unchanged: 0/0
 12187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12192 ;;Total ram usage:        0 bytes
 12193 ;; Hardware stack levels used:    1
 12194 ;; Hardware stack levels required when called:    6
 12195 ;; This function calls:
 12196 ;;		Nothing
 12197 ;; This function is called by:
 12198 ;;		_efgtoa
 12199 ;; This function uses a reentrant model
 12200 ;;
 12201                           
 12202                           	psect	text44
 12203  014570                     __ptext44:
 12204                           	opt callstack 0
 12205  014570                     _floorf:
 12206                           	opt callstack 0
 12207                           
 12208                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12209  014570  0E0A               	movlw	10
 12210  014572  26E1               	addwf	fsr1l,f,c
 12211  014574  0E00               	movlw	0
 12212  014576  22E2               	addwfc	fsr1h,f,c
 12213                           
 12214                           ;incstack = 0
 12215  014578  0060  F210  F03D   	movff	floorf@F524,btemp+8
 12216  01457E  0060  F214  F03E   	movff	floorf@F524+1,btemp+9
 12217  014584  0060  F218  F03F   	movff	floorf@F524+2,btemp+10
 12218  01458A  0060  F21C  F040   	movff	floorf@F524+3,btemp+11
 12219                           
 12220                           ;stkvar	_u @ sp[(-10)+0]
 12221  014590  0EF6               	movlw	-10
 12222  014592  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12223  014598  0EF7               	movlw	-9
 12224  01459A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12225  0145A0  0EF8               	movlw	-8
 12226  0145A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12227  0145A8  0EF9               	movlw	-7
 12228  0145AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12229                           
 12230                           ;stkvar	_x @ sp[(-10)+-4]
 12231  0145B0  0EF2               	movlw	-14
 12232  0145B2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12233  0145B8  0EF3               	movlw	-13
 12234  0145BA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12235  0145C0  0EF4               	movlw	-12
 12236  0145C2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12237  0145C8  0EF5               	movlw	-11
 12238  0145CA  006F FF8C  F040    	movff	plusw1,btemp+11
 12239                           
 12240                           ;stkvar	_u @ sp[(-10)+0]
 12241  0145D0  0EF6               	movlw	-10
 12242  0145D2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12243  0145D8  0EF7               	movlw	-9
 12244  0145DA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12245  0145E0  0EF8               	movlw	-8
 12246  0145E2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12247  0145E8  0EF9               	movlw	-7
 12248  0145EA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12249  0145F0  0E81               	movlw	129
 12250  0145F2  6E3F               	movwf	(btemp+10)^0,c
 12251  0145F4  0EFF               	movlw	255
 12252  0145F6  6E40               	movwf	(btemp+11)^0,c
 12253                           
 12254                           ;stkvar	_u @ sp[(-10)+0]
 12255  0145F8  0EF6               	movlw	-10
 12256  0145FA  006F FF8C  F039    	movff	plusw1,btemp+4
 12257  014600  0EF7               	movlw	-9
 12258  014602  006F FF8C  F03A    	movff	plusw1,btemp+5
 12259  014608  0EF8               	movlw	-8
 12260  01460A  006F FF8C  F03B    	movff	plusw1,btemp+6
 12261  014610  0EF9               	movlw	-7
 12262  014612  006F FF8C  F03C    	movff	plusw1,btemp+7
 12263  014618  0E18               	movlw	24
 12264  01461A  D005               	goto	u4970
 12265  01461C                     u4975:
 12266  01461C  90D8               	bcf	status,0,c
 12267  01461E  323C               	rrcf	(btemp+7)^0,f,c
 12268  014620  323B               	rrcf	(btemp+6)^0,f,c
 12269  014622  323A               	rrcf	(btemp+5)^0,f,c
 12270  014624  3239               	rrcf	(btemp+4)^0,f,c
 12271  014626                     u4970:
 12272  014626  2EE8               	decfsz	wreg,f,c
 12273  014628  D7F9               	goto	u4975
 12274  01462A  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 12275  014630  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 12276  014636  0EFF               	movlw	255
 12277  014638  163D               	andwf	(btemp+8)^0,f,c
 12278  01463A  0E00               	movlw	0
 12279  01463C  163E               	andwf	(btemp+9)^0,f,c
 12280  01463E  503F               	movf	(btemp+10)^0,w,c
 12281  014640  263D               	addwf	(btemp+8)^0,f,c
 12282  014642  5040               	movf	(btemp+11)^0,w,c
 12283  014644  223E               	addwfc	(btemp+9)^0,f,c
 12284                           
 12285                           ;stkvar	_e @ sp[(-10)+8]
 12286  014646  0EFE               	movlw	-2
 12287  014648  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12288  01464E  0EFF               	movlw	-1
 12289  014650  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12290                           
 12291                           ;stkvar	_e @ sp[(-10)+8]
 12292  014656  0EFF               	movlw	-1
 12293  014658  BEE3               	btfsc	plusw1,7,c
 12294  01465A  D019               	goto	l6252
 12295  01465C  0EFF               	movlw	-1
 12296  01465E  50E3               	movf	plusw1,w,c
 12297  014660  E108               	bnz	u4980
 12298  014662  0EFE               	movlw	-2
 12299  014664  006F FF8C  F035    	movff	plusw1,btemp
 12300  01466A  0E17               	movlw	23
 12301  01466C  5E35               	subwf	btemp^0,f,c
 12302  01466E  A0D8               	btfss	status,0,c
 12303  014670  D00E               	goto	l6252
 12304  014672                     u4980:
 12305                           
 12306                           ;stkvar	_x @ sp[(-10)+-4]
 12307  014672  0EF2               	movlw	-14
 12308  014674  006F FF8C  F035    	movff	plusw1,btemp
 12309  01467A  0EF3               	movlw	-13
 12310  01467C  006F FF8C  F036    	movff	plusw1,btemp+1
 12311  014682  0EF4               	movlw	-12
 12312  014684  006F FF8C  F037    	movff	plusw1,btemp+2
 12313  01468A  0EF5               	movlw	-11
 12314  01468C  D11F               	goto	L11
 12315  01468E                     l6252:
 12316                           
 12317                           ;stkvar	_e @ sp[(-10)+8]
 12318  01468E  0EFF               	movlw	-1
 12319  014690  BEE3               	btfsc	plusw1,7,c
 12320  014692  D0B4               	goto	l6268
 12321                           
 12322                           ;stkvar	_e @ sp[(-10)+8]
 12323  014694  0EFE               	movlw	-2
 12324  014696  006F FF8C  F040    	movff	plusw1,btemp+11
 12325  01469C  0EFF               	movlw	255
 12326  01469E  6E39               	movwf	(btemp+4)^0,c
 12327  0146A0  0EFF               	movlw	255
 12328  0146A2  6E3A               	movwf	(btemp+5)^0,c
 12329  0146A4  0E7F               	movlw	127
 12330  0146A6  6E3B               	movwf	(btemp+6)^0,c
 12331  0146A8  0E00               	movlw	0
 12332  0146AA  6E3C               	movwf	(btemp+7)^0,c
 12333  0146AC                     u5005:
 12334  0146AC  6640               	tstfsz	(btemp+11)^0,c
 12335  0146AE  D001               	goto	u5006
 12336  0146B0  D007               	goto	u5007
 12337  0146B2                     u5006:
 12338  0146B2  343C               	rlcf	(btemp+7)^0,w,c
 12339  0146B4  323C               	rrcf	(btemp+7)^0,f,c
 12340  0146B6  323B               	rrcf	(btemp+6)^0,f,c
 12341  0146B8  323A               	rrcf	(btemp+5)^0,f,c
 12342  0146BA  3239               	rrcf	(btemp+4)^0,f,c
 12343  0146BC  2E40               	decfsz	(btemp+11)^0,f,c
 12344  0146BE  D7F6               	goto	u5005
 12345  0146C0                     u5007:
 12346                           
 12347                           ;stkvar	_m @ sp[(-10)+4]
 12348  0146C0  0EFA               	movlw	-6
 12349  0146C2  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 12350  0146C8  0EFB               	movlw	-5
 12351  0146CA  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 12352  0146D0  0EFC               	movlw	-4
 12353  0146D2  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12354  0146D8  0EFD               	movlw	-3
 12355  0146DA  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12356                           
 12357                           ;stkvar	_m @ sp[(-10)+4]
 12358                           ;stkvar	_u @ sp[(-10)+0]
 12359  0146E0  0EF6               	movlw	-10
 12360  0146E2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12361  0146E8  0EF7               	movlw	-9
 12362  0146EA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12363  0146F0  0EF8               	movlw	-8
 12364  0146F2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12365  0146F8  0EF9               	movlw	-7
 12366  0146FA  006F FF8C  F040    	movff	plusw1,btemp+11
 12367  014700  0EFA               	movlw	-6
 12368  014702  50E3               	movf	plusw1,w,c
 12369  014704  163D               	andwf	(btemp+8)^0,f,c
 12370  014706  0EFB               	movlw	-5
 12371  014708  50E3               	movf	plusw1,w,c
 12372  01470A  163E               	andwf	(btemp+9)^0,f,c
 12373  01470C  0EFC               	movlw	-4
 12374  01470E  50E3               	movf	plusw1,w,c
 12375  014710  163F               	andwf	(btemp+10)^0,f,c
 12376  014712  0EFD               	movlw	-3
 12377  014714  50E3               	movf	plusw1,w,c
 12378  014716  1640               	andwf	(btemp+11)^0,f,c
 12379  014718  503D               	movf	(btemp+8)^0,w,c
 12380  01471A  103E               	iorwf	(btemp+9)^0,w,c
 12381  01471C  103F               	iorwf	(btemp+10)^0,w,c
 12382  01471E  1040               	iorwf	(btemp+11)^0,w,c
 12383  014720  B4D8               	btfsc	status,2,c
 12384  014722  D7A7               	goto	u4980
 12385                           
 12386                           ;stkvar	_u @ sp[(-10)+0]
 12387  014724  0EF6               	movlw	-10
 12388  014726  006F FF8C  F03D    	movff	plusw1,btemp+8
 12389  01472C  0EF7               	movlw	-9
 12390  01472E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12391  014734  0EF8               	movlw	-8
 12392  014736  006F FF8C  F03F    	movff	plusw1,btemp+10
 12393  01473C  0EF9               	movlw	-7
 12394  01473E  006F FF8C  F040    	movff	plusw1,btemp+11
 12395  014744  0E20               	movlw	32
 12396  014746  D005               	goto	u5020
 12397  014748                     u5025:
 12398  014748  90D8               	bcf	status,0,c
 12399  01474A  3240               	rrcf	(btemp+11)^0,f,c
 12400  01474C  323F               	rrcf	(btemp+10)^0,f,c
 12401  01474E  323E               	rrcf	(btemp+9)^0,f,c
 12402  014750  323D               	rrcf	(btemp+8)^0,f,c
 12403  014752                     u5020:
 12404  014752  2EE8               	decfsz	wreg,f,c
 12405  014754  D7F9               	goto	u5025
 12406  014756  503D               	movf	(btemp+8)^0,w,c
 12407  014758  B4D8               	btfsc	status,2,c
 12408  01475A  D028               	goto	l6266
 12409                           
 12410                           ;stkvar	_m @ sp[(-10)+4]
 12411                           ;stkvar	_u @ sp[(-10)+0]
 12412  01475C  0EF6               	movlw	-10
 12413  01475E  50E3               	movf	plusw1,w,c
 12414  014760  6E35               	movwf	btemp^0,c
 12415  014762  0EFA               	movlw	-6
 12416  014764  50E3               	movf	plusw1,w,c
 12417  014766  2635               	addwf	btemp^0,f,c
 12418  014768  0EF6               	movlw	-10
 12419  01476A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12420  014770  0EF7               	movlw	-9
 12421  014772  50E3               	movf	plusw1,w,c
 12422  014774  6E35               	movwf	btemp^0,c
 12423  014776  0EFB               	movlw	-5
 12424  014778  50E3               	movf	plusw1,w,c
 12425  01477A  2235               	addwfc	btemp^0,f,c
 12426  01477C  0EF7               	movlw	-9
 12427  01477E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12428  014784  0EF8               	movlw	-8
 12429  014786  50E3               	movf	plusw1,w,c
 12430  014788  6E35               	movwf	btemp^0,c
 12431  01478A  0EFC               	movlw	-4
 12432  01478C  50E3               	movf	plusw1,w,c
 12433  01478E  2235               	addwfc	btemp^0,f,c
 12434  014790  0EF8               	movlw	-8
 12435  014792  0060  F0D7  FFE3   	movff	btemp,plusw1
 12436  014798  0EF9               	movlw	-7
 12437  01479A  50E3               	movf	plusw1,w,c
 12438  01479C  6E35               	movwf	btemp^0,c
 12439  01479E  0EFD               	movlw	-3
 12440  0147A0  50E3               	movf	plusw1,w,c
 12441  0147A2  2235               	addwfc	btemp^0,f,c
 12442  0147A4  0EF9               	movlw	-7
 12443  0147A6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12444  0147AC                     l6266:
 12445                           
 12446                           ;stkvar	_m @ sp[(-10)+4]
 12447  0147AC  0EFA               	movlw	-6
 12448  0147AE  006F FF8C  F03D    	movff	plusw1,btemp+8
 12449  0147B4  0EFB               	movlw	-5
 12450  0147B6  006F FF8C  F03E    	movff	plusw1,btemp+9
 12451  0147BC  0EFC               	movlw	-4
 12452  0147BE  006F FF8C  F03F    	movff	plusw1,btemp+10
 12453  0147C4  0EFD               	movlw	-3
 12454  0147C6  006F FF8C  F040    	movff	plusw1,btemp+11
 12455  0147CC  1C3D               	comf	(btemp+8)^0,w,c
 12456  0147CE  6E39               	movwf	(btemp+4)^0,c
 12457  0147D0  1C3E               	comf	(btemp+9)^0,w,c
 12458  0147D2  6E3A               	movwf	(btemp+5)^0,c
 12459  0147D4  1C3F               	comf	(btemp+10)^0,w,c
 12460  0147D6  6E3B               	movwf	(btemp+6)^0,c
 12461  0147D8  1C40               	comf	(btemp+11)^0,w,c
 12462  0147DA  6E3C               	movwf	(btemp+7)^0,c
 12463                           
 12464                           ;stkvar	_u @ sp[(-10)+0]
 12465  0147DC  50E1               	movf	fsr1l,w,c
 12466  0147DE  0FF6               	addlw	-10
 12467  0147E0  6ED9               	movwf	fsr2l,c
 12468  0147E2  50E2               	movf	fsr1h,w,c
 12469  0147E4  6EDA               	movwf	fsr2h,c
 12470  0147E6  0EFF               	movlw	255
 12471  0147E8  22DA               	addwfc	fsr2h,f,c
 12472  0147EA  5039               	movf	(btemp+4)^0,w,c
 12473  0147EC  16DE               	andwf	postinc2,f,c
 12474  0147EE  503A               	movf	(btemp+5)^0,w,c
 12475  0147F0  16DE               	andwf	postinc2,f,c
 12476  0147F2  503B               	movf	(btemp+6)^0,w,c
 12477  0147F4  16DE               	andwf	postinc2,f,c
 12478  0147F6  503C               	movf	(btemp+7)^0,w,c
 12479  0147F8  16DE               	andwf	postinc2,f,c
 12480  0147FA  D05B               	goto	l6276
 12481  0147FC                     l6268:
 12482                           
 12483                           ;stkvar	_u @ sp[(-10)+0]
 12484  0147FC  0EF6               	movlw	-10
 12485  0147FE  006F FF8C  F03D    	movff	plusw1,btemp+8
 12486  014804  0EF7               	movlw	-9
 12487  014806  006F FF8C  F03E    	movff	plusw1,btemp+9
 12488  01480C  0EF8               	movlw	-8
 12489  01480E  006F FF8C  F03F    	movff	plusw1,btemp+10
 12490  014814  0EF9               	movlw	-7
 12491  014816  006F FF8C  F040    	movff	plusw1,btemp+11
 12492  01481C  0E20               	movlw	32
 12493  01481E  D005               	goto	u5040
 12494  014820                     u5045:
 12495  014820  90D8               	bcf	status,0,c
 12496  014822  3240               	rrcf	(btemp+11)^0,f,c
 12497  014824  323F               	rrcf	(btemp+10)^0,f,c
 12498  014826  323E               	rrcf	(btemp+9)^0,f,c
 12499  014828  323D               	rrcf	(btemp+8)^0,f,c
 12500  01482A                     u5040:
 12501  01482A  2EE8               	decfsz	wreg,f,c
 12502  01482C  D7F9               	goto	u5045
 12503  01482E  663D               	tstfsz	(btemp+8)^0,c
 12504  014830  D009               	goto	l6272
 12505                           
 12506                           ;stkvar	_u @ sp[(-10)+0]
 12507  014832  0EF6               	movlw	-10
 12508  014834  6AE3               	clrf	plusw1,c
 12509  014836  0EF7               	movlw	-9
 12510  014838  6AE3               	clrf	plusw1,c
 12511  01483A  0EF8               	movlw	-8
 12512  01483C  6AE3               	clrf	plusw1,c
 12513  01483E  0EF9               	movlw	-7
 12514  014840  6AE3               	clrf	plusw1,c
 12515  014842  D037               	goto	l6276
 12516  014844                     l6272:
 12517                           
 12518                           ;stkvar	_u @ sp[(-10)+0]
 12519  014844  0EF6               	movlw	-10
 12520  014846  006F FF8C  F03D    	movff	plusw1,btemp+8
 12521  01484C  0EF7               	movlw	-9
 12522  01484E  006F FF8C  F03E    	movff	plusw1,btemp+9
 12523  014854  0EF8               	movlw	-8
 12524  014856  006F FF8C  F03F    	movff	plusw1,btemp+10
 12525  01485C  0EF9               	movlw	-7
 12526  01485E  006F FF8C  F040    	movff	plusw1,btemp+11
 12527  014864  90D8               	bcf	status,0,c
 12528  014866  343D               	rlcf	(btemp+8)^0,w,c
 12529  014868  6E39               	movwf	(btemp+4)^0,c
 12530  01486A  343E               	rlcf	(btemp+9)^0,w,c
 12531  01486C  6E3A               	movwf	(btemp+5)^0,c
 12532  01486E  343F               	rlcf	(btemp+10)^0,w,c
 12533  014870  6E3B               	movwf	(btemp+6)^0,c
 12534  014872  3440               	rlcf	(btemp+11)^0,w,c
 12535  014874  6E3C               	movwf	(btemp+7)^0,c
 12536  014876  5039               	movf	(btemp+4)^0,w,c
 12537  014878  103A               	iorwf	(btemp+5)^0,w,c
 12538  01487A  103B               	iorwf	(btemp+6)^0,w,c
 12539  01487C  103C               	iorwf	(btemp+7)^0,w,c
 12540  01487E  B4D8               	btfsc	status,2,c
 12541  014880  D018               	goto	l6276
 12542  014882  0E00               	movlw	0
 12543  014884  6E3D               	movwf	(btemp+8)^0,c
 12544  014886  0E00               	movlw	0
 12545  014888  6E3E               	movwf	(btemp+9)^0,c
 12546  01488A  0E80               	movlw	128
 12547  01488C  6E3F               	movwf	(btemp+10)^0,c
 12548  01488E  0EBF               	movlw	191
 12549  014890  6E40               	movwf	(btemp+11)^0,c
 12550                           
 12551                           ;stkvar	_u @ sp[(-10)+0]
 12552  014892  0EF6               	movlw	-10
 12553  014894  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12554  01489A  0EF7               	movlw	-9
 12555  01489C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12556  0148A2  0EF8               	movlw	-8
 12557  0148A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12558  0148AA  0EF9               	movlw	-7
 12559  0148AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 12560  0148B2                     l6276:
 12561                           
 12562                           ;stkvar	_u @ sp[(-10)+0]
 12563  0148B2  0EF6               	movlw	-10
 12564  0148B4  006F FF8C  F035    	movff	plusw1,btemp
 12565  0148BA  0EF7               	movlw	-9
 12566  0148BC  006F FF8C  F036    	movff	plusw1,btemp+1
 12567  0148C2  0EF8               	movlw	-8
 12568  0148C4  006F FF8C  F037    	movff	plusw1,btemp+2
 12569  0148CA  0EF9               	movlw	-7
 12570  0148CC                     L11:
 12571  0148CC  006F FF8C  F038    	movff	plusw1,btemp+3
 12572                           
 12573                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12574  0148D2  0EF2               	movlw	242
 12575  0148D4  26E1               	addwf	fsr1l,f,c
 12576  0148D6  0EFF               	movlw	255
 12577  0148D8  22E2               	addwfc	fsr1h,f,c
 12578  0148DA  0012               	return		;funcret
 12579  0148DC                     __end_of_floorf:
 12580                           	opt callstack 0
 12581                           
 12582 ;; *************** function ___fpclassifyf *****************
 12583 ;; Defined at:
 12584 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;  x               4  [STACK] float 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;  u               4  [STACK] struct .
 12589 ;;  e               2  [STACK] int 
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  2  [STACK] int 
 12592 ;; Registers used:
 12593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/4
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12603 ;;Total ram usage:        0 bytes
 12604 ;; Hardware stack levels used:    1
 12605 ;; Hardware stack levels required when called:    6
 12606 ;; This function calls:
 12607 ;;		Nothing
 12608 ;; This function is called by:
 12609 ;;		_efgtoa
 12610 ;; This function uses a reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text45
 12614  015DF6                     __ptext45:
 12615                           	opt callstack 0
 12616  015DF6                     ___fpclassifyf:
 12617                           	opt callstack 0
 12618                           
 12619                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12620  015DF6  0E06               	movlw	6
 12621  015DF8  26E1               	addwf	fsr1l,f,c
 12622  015DFA  0E00               	movlw	0
 12623  015DFC  22E2               	addwfc	fsr1h,f,c
 12624                           
 12625                           ;incstack = 0
 12626  015DFE  0060  F220  F03D   	movff	___fpclassifyf@F463,btemp+8
 12627  015E04  0060  F224  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 12628  015E0A  0060  F228  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 12629  015E10  0060  F22C  F040   	movff	___fpclassifyf@F463+3,btemp+11
 12630                           
 12631                           ;stkvar	_u @ sp[(-6)+0]
 12632  015E16  0EFA               	movlw	-6
 12633  015E18  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12634  015E1E  0EFB               	movlw	-5
 12635  015E20  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12636  015E26  0EFC               	movlw	-4
 12637  015E28  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12638  015E2E  0EFD               	movlw	-3
 12639  015E30  0060  F103  FFE3   	movff	btemp+11,plusw1
 12640                           
 12641                           ;stkvar	_x @ sp[(-6)+-4]
 12642  015E36  0EF6               	movlw	-10
 12643  015E38  006F FF8C  F03D    	movff	plusw1,btemp+8
 12644  015E3E  0EF7               	movlw	-9
 12645  015E40  006F FF8C  F03E    	movff	plusw1,btemp+9
 12646  015E46  0EF8               	movlw	-8
 12647  015E48  006F FF8C  F03F    	movff	plusw1,btemp+10
 12648  015E4E  0EF9               	movlw	-7
 12649  015E50  006F FF8C  F040    	movff	plusw1,btemp+11
 12650                           
 12651                           ;stkvar	_u @ sp[(-6)+0]
 12652  015E56  0EFA               	movlw	-6
 12653  015E58  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12654  015E5E  0EFB               	movlw	-5
 12655  015E60  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12656  015E66  0EFC               	movlw	-4
 12657  015E68  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12658  015E6E  0EFD               	movlw	-3
 12659  015E70  0060  F103  FFE3   	movff	btemp+11,plusw1
 12660                           
 12661                           ;stkvar	_u @ sp[(-6)+0]
 12662  015E76  0EFA               	movlw	-6
 12663  015E78  006F FF8C  F03D    	movff	plusw1,btemp+8
 12664  015E7E  0EFB               	movlw	-5
 12665  015E80  006F FF8C  F03E    	movff	plusw1,btemp+9
 12666  015E86  0EFC               	movlw	-4
 12667  015E88  006F FF8C  F03F    	movff	plusw1,btemp+10
 12668  015E8E  0EFD               	movlw	-3
 12669  015E90  006F FF8C  F040    	movff	plusw1,btemp+11
 12670  015E96  0E18               	movlw	24
 12671  015E98  D005               	goto	u4850
 12672  015E9A                     u4855:
 12673  015E9A  90D8               	bcf	status,0,c
 12674  015E9C  3240               	rrcf	(btemp+11)^0,f,c
 12675  015E9E  323F               	rrcf	(btemp+10)^0,f,c
 12676  015EA0  323E               	rrcf	(btemp+9)^0,f,c
 12677  015EA2  323D               	rrcf	(btemp+8)^0,f,c
 12678  015EA4                     u4850:
 12679  015EA4  2EE8               	decfsz	wreg,f,c
 12680  015EA6  D7F9               	goto	u4855
 12681  015EA8  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 12682  015EAE  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 12683  015EB4  0EFF               	movlw	255
 12684  015EB6  163B               	andwf	(btemp+6)^0,f,c
 12685  015EB8  0E00               	movlw	0
 12686  015EBA  163C               	andwf	(btemp+7)^0,f,c
 12687                           
 12688                           ;stkvar	_e @ sp[(-6)+4]
 12689  015EBC  0EFE               	movlw	-2
 12690  015EBE  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12691  015EC4  0EFF               	movlw	-1
 12692  015EC6  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12693                           
 12694                           ;stkvar	_e @ sp[(-6)+4]
 12695  015ECC  0EFE               	movlw	-2
 12696  015ECE  006F FF8C  F035    	movff	plusw1,btemp
 12697  015ED4  0EFF               	movlw	-1
 12698  015ED6  50E3               	movf	plusw1,w,c
 12699  015ED8  1035               	iorwf	btemp^0,w,c
 12700  015EDA  A4D8               	btfss	status,2,c
 12701  015EDC  D023               	goto	l6214
 12702                           
 12703                           ;stkvar	_u @ sp[(-6)+0]
 12704  015EDE  0EFA               	movlw	-6
 12705  015EE0  006F FF8C  F03D    	movff	plusw1,btemp+8
 12706  015EE6  0EFB               	movlw	-5
 12707  015EE8  006F FF8C  F03E    	movff	plusw1,btemp+9
 12708  015EEE  0EFC               	movlw	-4
 12709  015EF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 12710  015EF6  0EFD               	movlw	-3
 12711  015EF8  006F FF8C  F040    	movff	plusw1,btemp+11
 12712  015EFE  90D8               	bcf	status,0,c
 12713  015F00  343D               	rlcf	(btemp+8)^0,w,c
 12714  015F02  6E39               	movwf	(btemp+4)^0,c
 12715  015F04  343E               	rlcf	(btemp+9)^0,w,c
 12716  015F06  6E3A               	movwf	(btemp+5)^0,c
 12717  015F08  343F               	rlcf	(btemp+10)^0,w,c
 12718  015F0A  6E3B               	movwf	(btemp+6)^0,c
 12719  015F0C  3440               	rlcf	(btemp+11)^0,w,c
 12720  015F0E  6E3C               	movwf	(btemp+7)^0,c
 12721  015F10  5039               	movf	(btemp+4)^0,w,c
 12722  015F12  103A               	iorwf	(btemp+5)^0,w,c
 12723  015F14  103B               	iorwf	(btemp+6)^0,w,c
 12724  015F16  103C               	iorwf	(btemp+7)^0,w,c
 12725  015F18  A4D8               	btfss	status,2,c
 12726  015F1A  D002               	goto	l6210
 12727  015F1C  0E02               	movlw	2
 12728  015F1E  D02E               	goto	L12
 12729  015F20                     l6210:
 12730  015F20  0E03               	movlw	3
 12731  015F22  D02C               	goto	L12
 12732  015F24                     l6214:
 12733                           
 12734                           ;stkvar	_e @ sp[(-6)+4]
 12735  015F24  0EFE               	movlw	-2
 12736  015F26  28E3               	incf	plusw1,w,c
 12737  015F28  E128               	bnz	l6220
 12738  015F2A  0EFF               	movlw	-1
 12739  015F2C  50E3               	movf	plusw1,w,c
 12740  015F2E  A4D8               	btfss	status,2,c
 12741  015F30  D024               	goto	l6220
 12742                           
 12743                           ;stkvar	_u @ sp[(-6)+0]
 12744  015F32  0EFA               	movlw	-6
 12745  015F34  006F FF8C  F03D    	movff	plusw1,btemp+8
 12746  015F3A  0EFB               	movlw	-5
 12747  015F3C  006F FF8C  F03E    	movff	plusw1,btemp+9
 12748  015F42  0EFC               	movlw	-4
 12749  015F44  006F FF8C  F03F    	movff	plusw1,btemp+10
 12750  015F4A  0EFD               	movlw	-3
 12751  015F4C  006F FF8C  F040    	movff	plusw1,btemp+11
 12752  015F52  0E09               	movlw	9
 12753  015F54                     u4895:
 12754  015F54  90D8               	bcf	status,0,c
 12755  015F56  363D               	rlcf	(btemp+8)^0,f,c
 12756  015F58  363E               	rlcf	(btemp+9)^0,f,c
 12757  015F5A  363F               	rlcf	(btemp+10)^0,f,c
 12758  015F5C  3640               	rlcf	(btemp+11)^0,f,c
 12759  015F5E  2EE8               	decfsz	wreg,f,c
 12760  015F60  D7F9               	goto	u4895
 12761  015F62  503D               	movf	(btemp+8)^0,w,c
 12762  015F64  103E               	iorwf	(btemp+9)^0,w,c
 12763  015F66  103F               	iorwf	(btemp+10)^0,w,c
 12764  015F68  1040               	iorwf	(btemp+11)^0,w,c
 12765  015F6A  A4D8               	btfss	status,2,c
 12766  015F6C  D002               	goto	u4900
 12767  015F6E  0E01               	movlw	1
 12768  015F70  D001               	goto	u4910
 12769  015F72                     u4900:
 12770  015F72  0E00               	movlw	0
 12771  015F74                     u4910:
 12772  015F74  6E35               	movwf	btemp^0,c
 12773  015F76  6A36               	clrf	(btemp+1)^0,c
 12774  015F78  D004               	goto	l2652
 12775  015F7A                     l6220:
 12776  015F7A  0E04               	movlw	4
 12777  015F7C                     L12:
 12778  015F7C  6E35               	movwf	btemp^0,c
 12779  015F7E  0E00               	movlw	0
 12780  015F80  6E36               	movwf	(btemp+1)^0,c
 12781  015F82                     l2652:
 12782                           
 12783                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 12784  015F82  0EF6               	movlw	246
 12785  015F84  26E1               	addwf	fsr1l,f,c
 12786  015F86  0EFF               	movlw	255
 12787  015F88  22E2               	addwfc	fsr1h,f,c
 12788  015F8A  0012               	return		;funcret
 12789  015F8C                     __end_of___fpclassifyf:
 12790                           	opt callstack 0
 12791                           
 12792 ;; *************** function ___fltol *****************
 12793 ;; Defined at:
 12794 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  f1              4  [STACK] int 
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;  exp1            1  [STACK] unsigned char 
 12799 ;;  sign1           1  [STACK] unsigned char 
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  4  [STACK] long 
 12802 ;; Registers used:
 12803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 12804 ;; Tracked objects:
 12805 ;;		On entry : 0/4
 12806 ;;		On exit  : 0/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;Total ram usage:        0 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:    6
 12816 ;; This function calls:
 12817 ;;		Nothing
 12818 ;; This function is called by:
 12819 ;;		_efgtoa
 12820 ;; This function uses a reentrant model
 12821 ;;
 12822                           
 12823                           	psect	text46
 12824  015F8C                     __ptext46:
 12825                           	opt callstack 0
 12826  015F8C                     ___fltol:
 12827                           	opt callstack 0
 12828                           
 12829                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12830  015F8C  52E6               	movf	postinc1,f,c
 12831  015F8E  52E6               	movf	postinc1,f,c
 12832                           
 12833                           ;stkvar	_f1 @ sp[(-2)+-4]
 12834                           
 12835                           ;incstack = 0
 12836  015F90  0EFA               	movlw	-6
 12837  015F92  006F FF8C  F03D    	movff	plusw1,btemp+8
 12838  015F98  0EFB               	movlw	-5
 12839  015F9A  006F FF8C  F03E    	movff	plusw1,btemp+9
 12840  015FA0  0EFC               	movlw	-4
 12841  015FA2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12842  015FA8  0EFD               	movlw	-3
 12843  015FAA  006F FF8C  F040    	movff	plusw1,btemp+11
 12844  015FB0  0E18               	movlw	24
 12845  015FB2  D005               	goto	u6060
 12846  015FB4                     u6065:
 12847  015FB4  90D8               	bcf	status,0,c
 12848  015FB6  3240               	rrcf	(btemp+11)^0,f,c
 12849  015FB8  323F               	rrcf	(btemp+10)^0,f,c
 12850  015FBA  323E               	rrcf	(btemp+9)^0,f,c
 12851  015FBC  323D               	rrcf	(btemp+8)^0,f,c
 12852  015FBE                     u6060:
 12853  015FBE  2EE8               	decfsz	wreg,f,c
 12854  015FC0  D7F9               	goto	u6065
 12855                           
 12856                           ;stkvar	_exp1 @ sp[(-2)+0]
 12857  015FC2  0EFE               	movlw	-2
 12858  015FC4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12859  015FCA  0EFE               	movlw	-2
 12860  015FCC  50E3               	movf	plusw1,w,c
 12861  015FCE  A4D8               	btfss	status,2,c
 12862  015FD0  D006               	goto	l6840
 12863  015FD2                     u6070:
 12864  015FD2  0E00               	movlw	0
 12865  015FD4  6E35               	movwf	btemp^0,c
 12866  015FD6  6A36               	clrf	(btemp+1)^0,c
 12867  015FD8  6A37               	clrf	(btemp+2)^0,c
 12868  015FDA  6A38               	clrf	(btemp+3)^0,c
 12869  015FDC  D08B               	goto	l2268
 12870  015FDE                     l6840:
 12871                           
 12872                           ;stkvar	_f1 @ sp[(-2)+-4]
 12873  015FDE  0EFA               	movlw	-6
 12874  015FE0  006F FF8C  F03D    	movff	plusw1,btemp+8
 12875  015FE6  0EFB               	movlw	-5
 12876  015FE8  006F FF8C  F03E    	movff	plusw1,btemp+9
 12877  015FEE  0EFC               	movlw	-4
 12878  015FF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 12879  015FF6  0EFD               	movlw	-3
 12880  015FF8  006F FF8C  F040    	movff	plusw1,btemp+11
 12881  015FFE  0E20               	movlw	32
 12882  016000  D005               	goto	u6080
 12883  016002                     u6085:
 12884  016002  90D8               	bcf	status,0,c
 12885  016004  3240               	rrcf	(btemp+11)^0,f,c
 12886  016006  323F               	rrcf	(btemp+10)^0,f,c
 12887  016008  323E               	rrcf	(btemp+9)^0,f,c
 12888  01600A  323D               	rrcf	(btemp+8)^0,f,c
 12889  01600C                     u6080:
 12890  01600C  2EE8               	decfsz	wreg,f,c
 12891  01600E  D7F9               	goto	u6085
 12892                           
 12893                           ;stkvar	_sign1 @ sp[(-2)+1]
 12894  016010  0EFF               	movlw	-1
 12895  016012  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12896                           
 12897                           ;stkvar	_f1 @ sp[(-2)+-4]
 12898  016018  0EFC               	movlw	-4
 12899  01601A  8EE3               	bsf	plusw1,7,c
 12900                           
 12901                           ;stkvar	_f1 @ sp[(-2)+-4]
 12902  01601C  50E1               	movf	fsr1l,w,c
 12903  01601E  0FFA               	addlw	-6
 12904  016020  6ED9               	movwf	fsr2l,c
 12905  016022  50E2               	movf	fsr1h,w,c
 12906  016024  6EDA               	movwf	fsr2h,c
 12907  016026  0EFF               	movlw	255
 12908  016028  22DA               	addwfc	fsr2h,f,c
 12909  01602A  0EFF               	movlw	255
 12910  01602C  16DE               	andwf	postinc2,f,c
 12911  01602E  0EFF               	movlw	255
 12912  016030  16DE               	andwf	postinc2,f,c
 12913  016032  0EFF               	movlw	255
 12914  016034  16DE               	andwf	postinc2,f,c
 12915  016036  0E00               	movlw	0
 12916  016038  16DE               	andwf	postinc2,f,c
 12917                           
 12918                           ;stkvar	_exp1 @ sp[(-2)+0]
 12919  01603A  0EFE               	movlw	-2
 12920  01603C  006F FF8C  F035    	movff	plusw1,btemp
 12921  016042  0E96               	movlw	150
 12922  016044  5E35               	subwf	btemp^0,f,c
 12923  016046  0EFE               	movlw	-2
 12924  016048  0060  F0D7  FFE3   	movff	btemp,plusw1
 12925                           
 12926                           ;stkvar	_exp1 @ sp[(-2)+0]
 12927  01604E  0EFE               	movlw	-2
 12928  016050  AEE3               	btfss	plusw1,7,c
 12929  016052  D014               	goto	l6858
 12930                           
 12931                           ;stkvar	_exp1 @ sp[(-2)+0]
 12932  016054  0EFE               	movlw	-2
 12933  016056  50E3               	movf	plusw1,w,c
 12934  016058  0A80               	xorlw	128
 12935  01605A  0F97               	addlw	151
 12936  01605C  A0D8               	btfss	status,0,c
 12937  01605E  D7B9               	goto	u6070
 12938  016060                     l6856:
 12939                           
 12940                           ;stkvar	_f1 @ sp[(-2)+-4]
 12941  016060  90D8               	bcf	status,0,c
 12942  016062  0EFD               	movlw	-3
 12943  016064  32E3               	rrcf	plusw1,f,c
 12944  016066  0EFC               	movlw	-4
 12945  016068  32E3               	rrcf	plusw1,f,c
 12946  01606A  0EFB               	movlw	-5
 12947  01606C  32E3               	rrcf	plusw1,f,c
 12948  01606E  0EFA               	movlw	-6
 12949  016070  32E3               	rrcf	plusw1,f,c
 12950                           
 12951                           ;stkvar	_exp1 @ sp[(-2)+0]
 12952  016072  0EFE               	movlw	-2
 12953  016074  2AE3               	incf	plusw1,f,c
 12954  016076  B4D8               	btfsc	status,2,c
 12955  016078  D018               	goto	u6130
 12956  01607A  D7F2               	goto	l6856
 12957  01607C                     l6858:
 12958                           
 12959                           ;stkvar	_exp1 @ sp[(-2)+0]
 12960  01607C  0EFE               	movlw	-2
 12961  01607E  006F FF8C  F035    	movff	plusw1,btemp
 12962  016084  0E1F               	movlw	31
 12963  016086  6435               	cpfsgt	btemp^0,c
 12964  016088  D00C               	goto	l6866
 12965  01608A  D7A3               	goto	u6070
 12966  01608C                     l6864:
 12967                           
 12968                           ;stkvar	_f1 @ sp[(-2)+-4]
 12969  01608C  90D8               	bcf	status,0,c
 12970  01608E  0EFA               	movlw	-6
 12971  016090  36E3               	rlcf	plusw1,f,c
 12972  016092  0EFB               	movlw	-5
 12973  016094  36E3               	rlcf	plusw1,f,c
 12974  016096  0EFC               	movlw	-4
 12975  016098  36E3               	rlcf	plusw1,f,c
 12976  01609A  0EFD               	movlw	-3
 12977  01609C  36E3               	rlcf	plusw1,f,c
 12978                           
 12979                           ;stkvar	_exp1 @ sp[(-2)+0]
 12980  01609E  0EFE               	movlw	-2
 12981  0160A0  06E3               	decf	plusw1,f,c
 12982  0160A2                     l6866:
 12983                           
 12984                           ;stkvar	_exp1 @ sp[(-2)+0]
 12985  0160A2  0EFE               	movlw	-2
 12986  0160A4  50E3               	movf	plusw1,w,c
 12987  0160A6  A4D8               	btfss	status,2,c
 12988  0160A8  D7F1               	goto	l6864
 12989  0160AA                     u6130:
 12990                           
 12991                           ;stkvar	_sign1 @ sp[(-2)+1]
 12992  0160AA  0EFF               	movlw	-1
 12993  0160AC  50E3               	movf	plusw1,w,c
 12994  0160AE  B4D8               	btfsc	status,2,c
 12995  0160B0  D011               	goto	u6150
 12996                           
 12997                           ;stkvar	_f1 @ sp[(-2)+-4]
 12998                           ;stkvar	_f1 @ sp[(-2)+-4]
 12999  0160B2  0EFA               	movlw	-6
 13000  0160B4  6CE3               	negf	plusw1,c
 13001  0160B6  0EFB               	movlw	-5
 13002  0160B8  1EE3               	comf	plusw1,f,c
 13003  0160BA  0EFC               	movlw	-4
 13004  0160BC  1EE3               	comf	plusw1,f,c
 13005  0160BE  0EFD               	movlw	-3
 13006  0160C0  1EE3               	comf	plusw1,f,c
 13007  0160C2  E308               	bnc	u6150
 13008  0160C4  0EFB               	movlw	-5
 13009  0160C6  2AE3               	incf	plusw1,f,c
 13010  0160C8  E305               	bnc	u6150
 13011  0160CA  0EFC               	movlw	-4
 13012  0160CC  2AE3               	incf	plusw1,f,c
 13013  0160CE  E302               	bnc	u6150
 13014  0160D0  0EFD               	movlw	-3
 13015  0160D2  2AE3               	incf	plusw1,f,c
 13016  0160D4                     u6150:
 13017                           
 13018                           ;stkvar	_f1 @ sp[(-2)+-4]
 13019  0160D4  0EFA               	movlw	-6
 13020  0160D6  006F FF8C  F035    	movff	plusw1,btemp
 13021  0160DC  0EFB               	movlw	-5
 13022  0160DE  006F FF8C  F036    	movff	plusw1,btemp+1
 13023  0160E4  0EFC               	movlw	-4
 13024  0160E6  006F FF8C  F037    	movff	plusw1,btemp+2
 13025  0160EC  0EFD               	movlw	-3
 13026  0160EE  006F FF8C  F038    	movff	plusw1,btemp+3
 13027  0160F4                     l2268:
 13028                           
 13029                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13030  0160F4  0EFA               	movlw	250
 13031  0160F6  26E1               	addwf	fsr1l,f,c
 13032  0160F8  0EFF               	movlw	255
 13033  0160FA  22E2               	addwfc	fsr1h,f,c
 13034  0160FC  0012               	return		;funcret
 13035  0160FE                     __end_of___fltol:
 13036                           	opt callstack 0
 13037                           
 13038 ;; *************** function ___flsub *****************
 13039 ;; Defined at:
 13040 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  b               4  [STACK] long 
 13043 ;;  a               4  [STACK] long 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;		None
 13046 ;; Return value:  Size  Location     Type
 13047 ;;                  4  [STACK] long 
 13048 ;; Registers used:
 13049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;Total ram usage:        0 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; Hardware stack levels required when called:    7
 13062 ;; This function calls:
 13063 ;;		___fladd
 13064 ;; This function is called by:
 13065 ;;		_conv_raw_result
 13066 ;;		_lp_filter
 13067 ;;		_efgtoa
 13068 ;; This function uses a reentrant model
 13069 ;;
 13070                           
 13071                           	psect	text47
 13072  017A4C                     __ptext47:
 13073                           	opt callstack 0
 13074  017A4C                     ___flsub:
 13075                           	opt callstack 16
 13076                           
 13077                           ;stkvar	_a @ sp[(0)+-8]
 13078                           
 13079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13080                           ;incstack = 0
 13081  017A4C  0EFB               	movlw	-5
 13082  017A4E  7EE3               	btg	plusw1,7,c
 13083                           
 13084                           ;stkvar	_a @ sp[(0)+-8]
 13085  017A50  0EF8               	movlw	-8
 13086  017A52  006F FF8F FFE6     	movff	plusw1,postinc1
 13087  017A58  006F FF8F FFE6     	movff	plusw1,postinc1
 13088  017A5E  006F FF8F FFE6     	movff	plusw1,postinc1
 13089  017A64  006F FF8F FFE6     	movff	plusw1,postinc1
 13090                           
 13091                           ;stkvar	_b @ sp[(-4)+-4]
 13092  017A6A  0EF8               	movlw	-8
 13093  017A6C  006F FF8F FFE6     	movff	plusw1,postinc1
 13094  017A72  006F FF8F FFE6     	movff	plusw1,postinc1
 13095  017A78  006F FF8F FFE6     	movff	plusw1,postinc1
 13096  017A7E  006F FF8F FFE6     	movff	plusw1,postinc1
 13097  017A84  ECD6  F092         	call	___fladd	;wreg free
 13098                           
 13099                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13100  017A88  0EF8               	movlw	248
 13101  017A8A  26E1               	addwf	fsr1l,f,c
 13102  017A8C  0EFF               	movlw	255
 13103  017A8E  22E2               	addwfc	fsr1h,f,c
 13104  017A90  0012               	return		;funcret
 13105  017A92                     __end_of___flsub:
 13106                           	opt callstack 0
 13107                           
 13108 ;; *************** function ___fladd *****************
 13109 ;; Defined at:
 13110 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;  b               4  [STACK] long 
 13113 ;;  a               4  [STACK] long 
 13114 ;; Auto vars:     Size  Location     Type
 13115 ;;  grs             1  [STACK] unsigned char 
 13116 ;;  bexp            1  [STACK] unsigned char 
 13117 ;;  aexp            1  [STACK] unsigned char 
 13118 ;;  signs           1  [STACK] unsigned char 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  4  [STACK] unsigned char 
 13121 ;; Registers used:
 13122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/0
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13132 ;;Total ram usage:        0 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; Hardware stack levels required when called:    6
 13135 ;; This function calls:
 13136 ;;		Nothing
 13137 ;; This function is called by:
 13138 ;;		_lp_filter
 13139 ;;		_efgtoa
 13140 ;;		___flsub
 13141 ;; This function uses a reentrant model
 13142 ;;
 13143                           
 13144                           	psect	text48
 13145  0125AC                     __ptext48:
 13146                           	opt callstack 0
 13147  0125AC                     ___fladd:
 13148                           	opt callstack 0
 13149                           
 13150                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13151  0125AC  52E6               	movf	postinc1,f,c
 13152  0125AE  52E6               	movf	postinc1,f,c
 13153  0125B0  52E6               	movf	postinc1,f,c
 13154  0125B2  52E6               	movf	postinc1,f,c
 13155                           
 13156                           ;stkvar	_b @ sp[(-4)+-4]
 13157                           
 13158                           ;incstack = 0
 13159  0125B4  0EFB               	movlw	251
 13160  0125B6  24E1               	addwf	fsr1l,w,c
 13161  0125B8  6ED9               	movwf	fsr2l,c
 13162  0125BA  0EFF               	movlw	255
 13163  0125BC  20E2               	addwfc	fsr1h,w,c
 13164  0125BE  6EDA               	movwf	fsr2h,c
 13165  0125C0  50DF               	movf	indf2,w,c
 13166  0125C2  6E40               	movwf	(btemp+11)^0,c
 13167  0125C4  0E80               	movlw	128
 13168  0125C6  1640               	andwf	(btemp+11)^0,f,c
 13169                           
 13170                           ;stkvar	_signs @ sp[(-4)+3]
 13171  0125C8  0EFF               	movlw	-1
 13172  0125CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 13173                           
 13174                           ;stkvar	_b @ sp[(-4)+-4]
 13175  0125D0  0EFB               	movlw	251
 13176  0125D2  24E1               	addwf	fsr1l,w,c
 13177  0125D4  6ED9               	movwf	fsr2l,c
 13178  0125D6  0EFF               	movlw	255
 13179  0125D8  20E2               	addwfc	fsr1h,w,c
 13180  0125DA  6EDA               	movwf	fsr2h,c
 13181  0125DC  50DF               	movf	indf2,w,c
 13182  0125DE  6E40               	movwf	(btemp+11)^0,c
 13183  0125E0  90D8               	bcf	status,0,c
 13184  0125E2  3440               	rlcf	(btemp+11)^0,w,c
 13185  0125E4  6E3F               	movwf	(btemp+10)^0,c
 13186                           
 13187                           ;stkvar	_bexp @ sp[(-4)+1]
 13188  0125E6  0EFD               	movlw	-3
 13189  0125E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13190                           
 13191                           ;stkvar	_b @ sp[(-4)+-4]
 13192  0125EE  0EFA               	movlw	250
 13193  0125F0  24E1               	addwf	fsr1l,w,c
 13194  0125F2  6ED9               	movwf	fsr2l,c
 13195  0125F4  0EFF               	movlw	255
 13196  0125F6  20E2               	addwfc	fsr1h,w,c
 13197  0125F8  6EDA               	movwf	fsr2h,c
 13198  0125FA  AEDF               	btfss	indf2,7,c
 13199  0125FC  D002               	goto	l5954
 13200                           
 13201                           ;stkvar	_bexp @ sp[(-4)+1]
 13202  0125FE  0EFD               	movlw	-3
 13203  012600  80E3               	bsf	plusw1,0,c
 13204  012602                     l5954:
 13205                           
 13206                           ;stkvar	_bexp @ sp[(-4)+1]
 13207  012602  0EFD               	movlw	-3
 13208  012604  50E3               	movf	plusw1,w,c
 13209  012606  B4D8               	btfsc	status,2,c
 13210  012608  D027               	goto	l5964
 13211                           
 13212                           ;stkvar	_bexp @ sp[(-4)+1]
 13213  01260A  0EFD               	movlw	-3
 13214  01260C  28E3               	incf	plusw1,w,c
 13215  01260E  A4D8               	btfss	status,2,c
 13216  012610  D018               	goto	l5960
 13217  012612  0E00               	movlw	0
 13218  012614  6E3D               	movwf	(btemp+8)^0,c
 13219  012616  0E00               	movlw	0
 13220  012618  6E3E               	movwf	(btemp+9)^0,c
 13221  01261A  0E00               	movlw	0
 13222  01261C  6E3F               	movwf	(btemp+10)^0,c
 13223  01261E  0E00               	movlw	0
 13224  012620  6E40               	movwf	(btemp+11)^0,c
 13225                           
 13226                           ;stkvar	_b @ sp[(-4)+-4]
 13227  012622  0EF8               	movlw	-8
 13228  012624  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13229  01262A  0EF9               	movlw	-7
 13230  01262C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13231  012632  0EFA               	movlw	-6
 13232  012634  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13233  01263A  0EFB               	movlw	-5
 13234  01263C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13235  012642                     l5960:
 13236                           
 13237                           ;stkvar	_b @ sp[(-4)+-4]
 13238  012642  0EFA               	movlw	-6
 13239  012644  8EE3               	bsf	plusw1,7,c
 13240                           
 13241                           ;stkvar	_b @ sp[(-4)+-4]
 13242  012646  0EFB               	movlw	251
 13243  012648  24E1               	addwf	fsr1l,w,c
 13244  01264A  6ED9               	movwf	fsr2l,c
 13245  01264C  0EFF               	movlw	255
 13246  01264E  20E2               	addwfc	fsr1h,w,c
 13247  012650  6EDA               	movwf	fsr2h,c
 13248  012652  0E00               	movlw	0
 13249  012654  6EDF               	movwf	indf2,c
 13250  012656  D018               	goto	l5966
 13251  012658                     l5964:
 13252  012658  0E00               	movlw	0
 13253  01265A  6E3D               	movwf	(btemp+8)^0,c
 13254  01265C  0E00               	movlw	0
 13255  01265E  6E3E               	movwf	(btemp+9)^0,c
 13256  012660  0E00               	movlw	0
 13257  012662  6E3F               	movwf	(btemp+10)^0,c
 13258  012664  0E00               	movlw	0
 13259  012666  6E40               	movwf	(btemp+11)^0,c
 13260                           
 13261                           ;stkvar	_b @ sp[(-4)+-4]
 13262  012668  0EF8               	movlw	-8
 13263  01266A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13264  012670  0EF9               	movlw	-7
 13265  012672  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13266  012678  0EFA               	movlw	-6
 13267  01267A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13268  012680  0EFB               	movlw	-5
 13269  012682  0060  F103  FFE3   	movff	btemp+11,plusw1
 13270  012688                     l5966:
 13271                           
 13272                           ;stkvar	_a @ sp[(-4)+-8]
 13273  012688  0EF7               	movlw	247
 13274  01268A  24E1               	addwf	fsr1l,w,c
 13275  01268C  6ED9               	movwf	fsr2l,c
 13276  01268E  0EFF               	movlw	255
 13277  012690  20E2               	addwfc	fsr1h,w,c
 13278  012692  6EDA               	movwf	fsr2h,c
 13279  012694  50DF               	movf	indf2,w,c
 13280  012696  6E40               	movwf	(btemp+11)^0,c
 13281  012698  0E80               	movlw	128
 13282  01269A  1640               	andwf	(btemp+11)^0,f,c
 13283                           
 13284                           ;stkvar	_aexp @ sp[(-4)+2]
 13285  01269C  0EFE               	movlw	-2
 13286  01269E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13287                           
 13288                           ;stkvar	_signs @ sp[(-4)+3]
 13289                           ;stkvar	_aexp @ sp[(-4)+2]
 13290  0126A4  50E1               	movf	fsr1l,w,c
 13291  0126A6  0FFE               	addlw	-2
 13292  0126A8  6ED9               	movwf	fsr2l,c
 13293  0126AA  50E2               	movf	fsr1h,w,c
 13294  0126AC  6EDA               	movwf	fsr2h,c
 13295  0126AE  0EFF               	movlw	255
 13296  0126B0  22DA               	addwfc	fsr2h,f,c
 13297  0126B2  0EFF               	movlw	-1
 13298  0126B4  50E3               	movf	plusw1,w,c
 13299  0126B6  18DE               	xorwf	postinc2,w,c
 13300  0126B8  B4D8               	btfsc	status,2,c
 13301  0126BA  D002               	goto	l5972
 13302                           
 13303                           ;stkvar	_signs @ sp[(-4)+3]
 13304  0126BC  0EFF               	movlw	-1
 13305  0126BE  8CE3               	bsf	plusw1,6,c
 13306  0126C0                     l5972:
 13307                           
 13308                           ;stkvar	_a @ sp[(-4)+-8]
 13309  0126C0  0EF7               	movlw	247
 13310  0126C2  24E1               	addwf	fsr1l,w,c
 13311  0126C4  6ED9               	movwf	fsr2l,c
 13312  0126C6  0EFF               	movlw	255
 13313  0126C8  20E2               	addwfc	fsr1h,w,c
 13314  0126CA  6EDA               	movwf	fsr2h,c
 13315  0126CC  50DF               	movf	indf2,w,c
 13316  0126CE  6E40               	movwf	(btemp+11)^0,c
 13317  0126D0  90D8               	bcf	status,0,c
 13318  0126D2  3440               	rlcf	(btemp+11)^0,w,c
 13319  0126D4  6E3F               	movwf	(btemp+10)^0,c
 13320                           
 13321                           ;stkvar	_aexp @ sp[(-4)+2]
 13322  0126D6  0EFE               	movlw	-2
 13323  0126D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13324                           
 13325                           ;stkvar	_a @ sp[(-4)+-8]
 13326  0126DE  0EF6               	movlw	246
 13327  0126E0  24E1               	addwf	fsr1l,w,c
 13328  0126E2  6ED9               	movwf	fsr2l,c
 13329  0126E4  0EFF               	movlw	255
 13330  0126E6  20E2               	addwfc	fsr1h,w,c
 13331  0126E8  6EDA               	movwf	fsr2h,c
 13332  0126EA  AEDF               	btfss	indf2,7,c
 13333  0126EC  D002               	goto	l5978
 13334                           
 13335                           ;stkvar	_aexp @ sp[(-4)+2]
 13336  0126EE  0EFE               	movlw	-2
 13337  0126F0  80E3               	bsf	plusw1,0,c
 13338  0126F2                     l5978:
 13339                           
 13340                           ;stkvar	_aexp @ sp[(-4)+2]
 13341  0126F2  0EFE               	movlw	-2
 13342  0126F4  50E3               	movf	plusw1,w,c
 13343  0126F6  B4D8               	btfsc	status,2,c
 13344  0126F8  D027               	goto	l5988
 13345                           
 13346                           ;stkvar	_aexp @ sp[(-4)+2]
 13347  0126FA  0EFE               	movlw	-2
 13348  0126FC  28E3               	incf	plusw1,w,c
 13349  0126FE  A4D8               	btfss	status,2,c
 13350  012700  D018               	goto	l5984
 13351  012702  0E00               	movlw	0
 13352  012704  6E3D               	movwf	(btemp+8)^0,c
 13353  012706  0E00               	movlw	0
 13354  012708  6E3E               	movwf	(btemp+9)^0,c
 13355  01270A  0E00               	movlw	0
 13356  01270C  6E3F               	movwf	(btemp+10)^0,c
 13357  01270E  0E00               	movlw	0
 13358  012710  6E40               	movwf	(btemp+11)^0,c
 13359                           
 13360                           ;stkvar	_a @ sp[(-4)+-8]
 13361  012712  0EF4               	movlw	-12
 13362  012714  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13363  01271A  0EF5               	movlw	-11
 13364  01271C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13365  012722  0EF6               	movlw	-10
 13366  012724  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13367  01272A  0EF7               	movlw	-9
 13368  01272C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13369  012732                     l5984:
 13370                           
 13371                           ;stkvar	_a @ sp[(-4)+-8]
 13372  012732  0EF6               	movlw	-10
 13373  012734  8EE3               	bsf	plusw1,7,c
 13374                           
 13375                           ;stkvar	_a @ sp[(-4)+-8]
 13376  012736  0EF7               	movlw	247
 13377  012738  24E1               	addwf	fsr1l,w,c
 13378  01273A  6ED9               	movwf	fsr2l,c
 13379  01273C  0EFF               	movlw	255
 13380  01273E  20E2               	addwfc	fsr1h,w,c
 13381  012740  6EDA               	movwf	fsr2h,c
 13382  012742  0E00               	movlw	0
 13383  012744  6EDF               	movwf	indf2,c
 13384  012746  D018               	goto	l5990
 13385  012748                     l5988:
 13386  012748  0E00               	movlw	0
 13387  01274A  6E3D               	movwf	(btemp+8)^0,c
 13388  01274C  0E00               	movlw	0
 13389  01274E  6E3E               	movwf	(btemp+9)^0,c
 13390  012750  0E00               	movlw	0
 13391  012752  6E3F               	movwf	(btemp+10)^0,c
 13392  012754  0E00               	movlw	0
 13393  012756  6E40               	movwf	(btemp+11)^0,c
 13394                           
 13395                           ;stkvar	_a @ sp[(-4)+-8]
 13396  012758  0EF4               	movlw	-12
 13397  01275A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13398  012760  0EF5               	movlw	-11
 13399  012762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13400  012768  0EF6               	movlw	-10
 13401  01276A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13402  012770  0EF7               	movlw	-9
 13403  012772  0060  F103  FFE3   	movff	btemp+11,plusw1
 13404  012778                     l5990:
 13405                           
 13406                           ;stkvar	_bexp @ sp[(-4)+1]
 13407                           ;stkvar	_aexp @ sp[(-4)+2]
 13408  012778  50E1               	movf	fsr1l,w,c
 13409  01277A  0FFE               	addlw	-2
 13410  01277C  6ED9               	movwf	fsr2l,c
 13411  01277E  50E2               	movf	fsr1h,w,c
 13412  012780  6EDA               	movwf	fsr2h,c
 13413  012782  0EFF               	movlw	255
 13414  012784  22DA               	addwfc	fsr2h,f,c
 13415  012786  0EFD               	movlw	-3
 13416  012788  50E3               	movf	plusw1,w,c
 13417  01278A  5CDE               	subwf	postinc2,w,c
 13418  01278C  B0D8               	btfsc	status,0,c
 13419  01278E  D0A4               	goto	l6026
 13420                           
 13421                           ;stkvar	_signs @ sp[(-4)+3]
 13422  012790  0EFF               	movlw	-1
 13423  012792  ACE3               	btfss	plusw1,6,c
 13424  012794  D002               	goto	l5996
 13425                           
 13426                           ;stkvar	_signs @ sp[(-4)+3]
 13427  012796  0EFF               	movlw	-1
 13428  012798  7EE3               	btg	plusw1,7,c
 13429  01279A                     l5996:
 13430                           
 13431                           ;stkvar	_bexp @ sp[(-4)+1]
 13432                           ;stkvar	_grs @ sp[(-4)+0]
 13433  01279A  0EFD               	movlw	-3
 13434  01279C  006F FF8C  F035    	movff	plusw1,btemp
 13435  0127A2  0EFC               	movlw	-4
 13436  0127A4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13437                           
 13438                           ;stkvar	_aexp @ sp[(-4)+2]
 13439                           ;stkvar	_bexp @ sp[(-4)+1]
 13440  0127AA  0EFE               	movlw	-2
 13441  0127AC  006F FF8C  F035    	movff	plusw1,btemp
 13442  0127B2  0EFD               	movlw	-3
 13443  0127B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13444                           
 13445                           ;stkvar	_grs @ sp[(-4)+0]
 13446                           ;stkvar	_aexp @ sp[(-4)+2]
 13447  0127BA  0EFC               	movlw	-4
 13448  0127BC  006F FF8C  F035    	movff	plusw1,btemp
 13449  0127C2  0EFE               	movlw	-2
 13450  0127C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13451                           
 13452                           ;stkvar	_b @ sp[(-4)+-4]
 13453                           ;stkvar	_grs @ sp[(-4)+0]
 13454  0127CA  0EF8               	movlw	-8
 13455  0127CC  006F FF8C  F035    	movff	plusw1,btemp
 13456  0127D2  0EFC               	movlw	-4
 13457  0127D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13458                           
 13459                           ;stkvar	_a @ sp[(-4)+-8]
 13460                           ;stkvar	_b @ sp[(-4)+-4]
 13461  0127DA  0EF4               	movlw	-12
 13462  0127DC  006F FF8C  F035    	movff	plusw1,btemp
 13463  0127E2  0EF8               	movlw	-8
 13464  0127E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13465                           
 13466                           ;stkvar	_grs @ sp[(-4)+0]
 13467                           ;stkvar	_a @ sp[(-4)+-8]
 13468  0127EA  0EFC               	movlw	-4
 13469  0127EC  006F FF8C  F035    	movff	plusw1,btemp
 13470  0127F2  0EF4               	movlw	-12
 13471  0127F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13472                           
 13473                           ;stkvar	_b @ sp[(-4)+-4]
 13474  0127FA  0EF9               	movlw	249
 13475  0127FC  24E1               	addwf	fsr1l,w,c
 13476  0127FE  6ED9               	movwf	fsr2l,c
 13477  012800  0EFF               	movlw	255
 13478  012802  20E2               	addwfc	fsr1h,w,c
 13479  012804  6EDA               	movwf	fsr2h,c
 13480  012806  50DF               	movf	indf2,w,c
 13481  012808  6E40               	movwf	(btemp+11)^0,c
 13482                           
 13483                           ;stkvar	_grs @ sp[(-4)+0]
 13484  01280A  0EFC               	movlw	-4
 13485  01280C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13486                           
 13487                           ;stkvar	_a @ sp[(-4)+-8]
 13488  012812  0EF5               	movlw	245
 13489  012814  24E1               	addwf	fsr1l,w,c
 13490  012816  6ED9               	movwf	fsr2l,c
 13491  012818  0EFF               	movlw	255
 13492  01281A  20E2               	addwfc	fsr1h,w,c
 13493  01281C  6EDA               	movwf	fsr2h,c
 13494                           
 13495                           ;stkvar	_b @ sp[(-4)+-4]
 13496  01281E  0EF9               	movlw	249
 13497  012820  24E1               	addwf	fsr1l,w,c
 13498  012822  6EE9               	movwf	fsr0l,c
 13499  012824  0EFF               	movlw	255
 13500  012826  20E2               	addwfc	fsr1h,w,c
 13501  012828  6EEA               	movwf	fsr0h,c
 13502  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13503                           
 13504                           ;stkvar	_grs @ sp[(-4)+0]
 13505                           ;stkvar	_a @ sp[(-4)+-8]
 13506  012830  0EF5               	movlw	245
 13507  012832  24E1               	addwf	fsr1l,w,c
 13508  012834  6ED9               	movwf	fsr2l,c
 13509  012836  0EFF               	movlw	255
 13510  012838  20E2               	addwfc	fsr1h,w,c
 13511  01283A  6EDA               	movwf	fsr2h,c
 13512  01283C  0EFC               	movlw	-4
 13513  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13514                           
 13515                           ;stkvar	_b @ sp[(-4)+-4]
 13516  012844  0EFA               	movlw	250
 13517  012846  24E1               	addwf	fsr1l,w,c
 13518  012848  6ED9               	movwf	fsr2l,c
 13519  01284A  0EFF               	movlw	255
 13520  01284C  20E2               	addwfc	fsr1h,w,c
 13521  01284E  6EDA               	movwf	fsr2h,c
 13522  012850  50DF               	movf	indf2,w,c
 13523  012852  6E40               	movwf	(btemp+11)^0,c
 13524                           
 13525                           ;stkvar	_grs @ sp[(-4)+0]
 13526  012854  0EFC               	movlw	-4
 13527  012856  0060  F103  FFE3   	movff	btemp+11,plusw1
 13528                           
 13529                           ;stkvar	_a @ sp[(-4)+-8]
 13530  01285C  0EF6               	movlw	246
 13531  01285E  24E1               	addwf	fsr1l,w,c
 13532  012860  6ED9               	movwf	fsr2l,c
 13533  012862  0EFF               	movlw	255
 13534  012864  20E2               	addwfc	fsr1h,w,c
 13535  012866  6EDA               	movwf	fsr2h,c
 13536                           
 13537                           ;stkvar	_b @ sp[(-4)+-4]
 13538  012868  0EFA               	movlw	250
 13539  01286A  24E1               	addwf	fsr1l,w,c
 13540  01286C  6EE9               	movwf	fsr0l,c
 13541  01286E  0EFF               	movlw	255
 13542  012870  20E2               	addwfc	fsr1h,w,c
 13543  012872  6EEA               	movwf	fsr0h,c
 13544  012874  006F FF7F FFEF     	movff	indf2,indf0
 13545                           
 13546                           ;stkvar	_grs @ sp[(-4)+0]
 13547                           ;stkvar	_a @ sp[(-4)+-8]
 13548  01287A  0EF6               	movlw	246
 13549  01287C  24E1               	addwf	fsr1l,w,c
 13550  01287E  6ED9               	movwf	fsr2l,c
 13551  012880  0EFF               	movlw	255
 13552  012882  20E2               	addwfc	fsr1h,w,c
 13553  012884  6EDA               	movwf	fsr2h,c
 13554  012886  0EFC               	movlw	-4
 13555  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13556                           
 13557                           ;stkvar	_b @ sp[(-4)+-4]
 13558  01288E  0EFB               	movlw	251
 13559  012890  24E1               	addwf	fsr1l,w,c
 13560  012892  6ED9               	movwf	fsr2l,c
 13561  012894  0EFF               	movlw	255
 13562  012896  20E2               	addwfc	fsr1h,w,c
 13563  012898  6EDA               	movwf	fsr2h,c
 13564  01289A  50DF               	movf	indf2,w,c
 13565  01289C  6E40               	movwf	(btemp+11)^0,c
 13566                           
 13567                           ;stkvar	_grs @ sp[(-4)+0]
 13568  01289E  0EFC               	movlw	-4
 13569  0128A0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13570                           
 13571                           ;stkvar	_a @ sp[(-4)+-8]
 13572  0128A6  0EF7               	movlw	247
 13573  0128A8  24E1               	addwf	fsr1l,w,c
 13574  0128AA  6ED9               	movwf	fsr2l,c
 13575  0128AC  0EFF               	movlw	255
 13576  0128AE  20E2               	addwfc	fsr1h,w,c
 13577  0128B0  6EDA               	movwf	fsr2h,c
 13578                           
 13579                           ;stkvar	_b @ sp[(-4)+-4]
 13580  0128B2  0EFB               	movlw	251
 13581  0128B4  24E1               	addwf	fsr1l,w,c
 13582  0128B6  6EE9               	movwf	fsr0l,c
 13583  0128B8  0EFF               	movlw	255
 13584  0128BA  20E2               	addwfc	fsr1h,w,c
 13585  0128BC  6EEA               	movwf	fsr0h,c
 13586  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13587                           
 13588                           ;stkvar	_grs @ sp[(-4)+0]
 13589                           ;stkvar	_a @ sp[(-4)+-8]
 13590  0128C4  0EF7               	movlw	247
 13591  0128C6  24E1               	addwf	fsr1l,w,c
 13592  0128C8  6ED9               	movwf	fsr2l,c
 13593  0128CA  0EFF               	movlw	255
 13594  0128CC  20E2               	addwfc	fsr1h,w,c
 13595  0128CE  6EDA               	movwf	fsr2h,c
 13596  0128D0  0EFC               	movlw	-4
 13597  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13598  0128D8                     l6026:
 13599                           
 13600                           ;stkvar	_grs @ sp[(-4)+0]
 13601  0128D8  0EFC               	movlw	-4
 13602  0128DA  6AE3               	clrf	plusw1,c
 13603                           
 13604                           ;stkvar	_aexp @ sp[(-4)+2]
 13605  0128DC  0EFE               	movlw	-2
 13606  0128DE  50E3               	movf	plusw1,w,c
 13607  0128E0  6E3F               	movwf	(btemp+10)^0,c
 13608  0128E2  6A40               	clrf	(btemp+11)^0,c
 13609                           
 13610                           ;stkvar	_bexp @ sp[(-4)+1]
 13611  0128E4  0EFD               	movlw	-3
 13612  0128E6  50E3               	movf	plusw1,w,c
 13613  0128E8  5E3F               	subwf	(btemp+10)^0,f,c
 13614  0128EA  0E00               	movlw	0
 13615  0128EC  5A40               	subwfb	(btemp+11)^0,f,c
 13616  0128EE  BE40               	btfsc	(btemp+11)^0,7,c
 13617  0128F0  D062               	goto	l6050
 13618  0128F2  5040               	movf	(btemp+11)^0,w,c
 13619  0128F4  E104               	bnz	u4450
 13620  0128F6  0E1A               	movlw	26
 13621  0128F8  5C3F               	subwf	(btemp+10)^0,w,c
 13622  0128FA  A0D8               	btfss	status,0,c
 13623  0128FC  D05C               	goto	l6050
 13624  0128FE                     u4450:
 13625                           
 13626                           ;stkvar	_b @ sp[(-4)+-4]
 13627  0128FE  0EF8               	movlw	-8
 13628  012900  50E3               	movf	plusw1,w,c
 13629  012902  E10A               	bnz	u4461
 13630  012904  0EF9               	movlw	-7
 13631  012906  50E3               	movf	plusw1,w,c
 13632  012908  E107               	bnz	u4461
 13633  01290A  0EFA               	movlw	-6
 13634  01290C  50E3               	movf	plusw1,w,c
 13635  01290E  E104               	bnz	u4461
 13636  012910  0EFB               	movlw	-5
 13637  012912  50E3               	movf	plusw1,w,c
 13638  012914  B4D8               	btfsc	status,2,c
 13639  012916  D003               	goto	u4460
 13640  012918                     u4461:
 13641  012918  6A40               	clrf	(btemp+11)^0,c
 13642  01291A  2A40               	incf	(btemp+11)^0,f,c
 13643  01291C  D001               	goto	u4478
 13644  01291E                     u4460:
 13645  01291E  6A40               	clrf	(btemp+11)^0,c
 13646  012920                     u4478:
 13647                           
 13648                           ;stkvar	_grs @ sp[(-4)+0]
 13649  012920  0EFC               	movlw	-4
 13650  012922  0060  F103  FFE3   	movff	btemp+11,plusw1
 13651                           
 13652                           ;stkvar	_b @ sp[(-4)+-4]
 13653  012928  0EF8               	movlw	-8
 13654  01292A  6AE3               	clrf	plusw1,c
 13655  01292C  0EF9               	movlw	-7
 13656  01292E  6AE3               	clrf	plusw1,c
 13657  012930  0EFA               	movlw	-6
 13658  012932  6AE3               	clrf	plusw1,c
 13659  012934  0EFB               	movlw	-5
 13660  012936  6AE3               	clrf	plusw1,c
 13661                           
 13662                           ;stkvar	_aexp @ sp[(-4)+2]
 13663                           ;stkvar	_bexp @ sp[(-4)+1]
 13664  012938  0EFE               	movlw	-2
 13665  01293A  006F FF8C  F035    	movff	plusw1,btemp
 13666  012940  0EFD               	movlw	-3
 13667  012942  0060  F0D7  FFE3   	movff	btemp,plusw1
 13668  012948  D042               	goto	u4510
 13669  01294A                     l6036:
 13670                           
 13671                           ;stkvar	_grs @ sp[(-4)+0]
 13672  01294A  0EFC               	movlw	-4
 13673  01294C  A0E3               	btfss	plusw1,0,c
 13674  01294E  D00D               	goto	l6040
 13675                           
 13676                           ;stkvar	_grs @ sp[(-4)+0]
 13677  012950  0EFC               	movlw	-4
 13678  012952  006F FF8C  F040    	movff	plusw1,btemp+11
 13679  012958  90D8               	bcf	status,0,c
 13680  01295A  3240               	rrcf	(btemp+11)^0,f,c
 13681  01295C  0E01               	movlw	1
 13682  01295E  1240               	iorwf	(btemp+11)^0,f,c
 13683                           
 13684                           ;stkvar	_grs @ sp[(-4)+0]
 13685  012960  0EFC               	movlw	-4
 13686  012962  0060  F103  FFE3   	movff	btemp+11,plusw1
 13687  012968  D009               	goto	l6042
 13688  01296A                     l6040:
 13689                           
 13690                           ;stkvar	_grs @ sp[(-4)+0]
 13691  01296A  50E1               	movf	fsr1l,w,c
 13692  01296C  0FFC               	addlw	-4
 13693  01296E  6ED9               	movwf	fsr2l,c
 13694  012970  50E2               	movf	fsr1h,w,c
 13695  012972  6EDA               	movwf	fsr2h,c
 13696  012974  0EFF               	movlw	255
 13697  012976  22DA               	addwfc	fsr2h,f,c
 13698  012978  90D8               	bcf	status,0,c
 13699  01297A  32DF               	rrcf	indf2,f,c
 13700  01297C                     l6042:
 13701                           
 13702                           ;stkvar	_b @ sp[(-4)+-4]
 13703  01297C  0EF8               	movlw	-8
 13704  01297E  A0E3               	btfss	plusw1,0,c
 13705  012980  D002               	goto	l6046
 13706                           
 13707                           ;stkvar	_grs @ sp[(-4)+0]
 13708  012982  0EFC               	movlw	-4
 13709  012984  8EE3               	bsf	plusw1,7,c
 13710  012986                     l6046:
 13711  012986  0E01               	movlw	1
 13712  012988  6E40               	movwf	(btemp+11)^0,c
 13713                           
 13714                           ;stkvar	_b @ sp[(-4)+-4]
 13715  01298A  50E1               	movf	fsr1l,w,c
 13716  01298C  0FF8               	addlw	-8
 13717  01298E  6ED9               	movwf	fsr2l,c
 13718  012990  50E2               	movf	fsr1h,w,c
 13719  012992  6EDA               	movwf	fsr2h,c
 13720  012994  0EFF               	movlw	255
 13721  012996  22DA               	addwfc	fsr2h,f,c
 13722  012998  2840               	incf	(btemp+11)^0,w,c
 13723  01299A  52DE               	movf	postinc2,f,c
 13724  01299C  D008               	goto	u4500
 13725  01299E                     u4505:
 13726  01299E  52DE               	movf	postinc2,f,c
 13727  0129A0  90D8               	bcf	status,0,c
 13728  0129A2  BEDC               	btfsc	preinc2,7,c
 13729  0129A4  80D8               	bsf	status,0,c
 13730  0129A6  32DD               	rrcf	postdec2,f,c
 13731  0129A8  32DD               	rrcf	postdec2,f,c
 13732  0129AA  32DD               	rrcf	postdec2,f,c
 13733  0129AC  32DE               	rrcf	postinc2,f,c
 13734  0129AE                     u4500:
 13735  0129AE  2EE8               	decfsz	wreg,f,c
 13736  0129B0  D7F6               	goto	u4505
 13737                           
 13738                           ;stkvar	_bexp @ sp[(-4)+1]
 13739  0129B2  0EFD               	movlw	-3
 13740  0129B4  2AE3               	incf	plusw1,f,c
 13741  0129B6                     l6050:
 13742                           
 13743                           ;stkvar	_aexp @ sp[(-4)+2]
 13744                           ;stkvar	_bexp @ sp[(-4)+1]
 13745  0129B6  50E1               	movf	fsr1l,w,c
 13746  0129B8  0FFD               	addlw	-3
 13747  0129BA  6ED9               	movwf	fsr2l,c
 13748  0129BC  50E2               	movf	fsr1h,w,c
 13749  0129BE  6EDA               	movwf	fsr2h,c
 13750  0129C0  0EFF               	movlw	255
 13751  0129C2  22DA               	addwfc	fsr2h,f,c
 13752  0129C4  0EFE               	movlw	-2
 13753  0129C6  50E3               	movf	plusw1,w,c
 13754  0129C8  5CDE               	subwf	postinc2,w,c
 13755  0129CA  A0D8               	btfss	status,0,c
 13756  0129CC  D7BE               	goto	l6036
 13757  0129CE                     u4510:
 13758                           
 13759                           ;stkvar	_signs @ sp[(-4)+3]
 13760  0129CE  0EFF               	movlw	-1
 13761  0129D0  BCE3               	btfsc	plusw1,6,c
 13762  0129D2  D066               	goto	l6078
 13763                           
 13764                           ;stkvar	_bexp @ sp[(-4)+1]
 13765  0129D4  0EFD               	movlw	-3
 13766  0129D6  50E3               	movf	plusw1,w,c
 13767  0129D8  B4D8               	btfsc	status,2,c
 13768  0129DA  D0F2               	goto	u4610
 13769                           
 13770                           ;stkvar	_a @ sp[(-4)+-8]
 13771                           ;stkvar	_b @ sp[(-4)+-4]
 13772  0129DC  0EF8               	movlw	-8
 13773  0129DE  50E3               	movf	plusw1,w,c
 13774  0129E0  6E35               	movwf	btemp^0,c
 13775  0129E2  0EF4               	movlw	-12
 13776  0129E4  50E3               	movf	plusw1,w,c
 13777  0129E6  2635               	addwf	btemp^0,f,c
 13778  0129E8  0EF8               	movlw	-8
 13779  0129EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 13780  0129F0  0EF9               	movlw	-7
 13781  0129F2  50E3               	movf	plusw1,w,c
 13782  0129F4  6E35               	movwf	btemp^0,c
 13783  0129F6  0EF5               	movlw	-11
 13784  0129F8  50E3               	movf	plusw1,w,c
 13785  0129FA  2235               	addwfc	btemp^0,f,c
 13786  0129FC  0EF9               	movlw	-7
 13787  0129FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 13788  012A04  0EFA               	movlw	-6
 13789  012A06  50E3               	movf	plusw1,w,c
 13790  012A08  6E35               	movwf	btemp^0,c
 13791  012A0A  0EF6               	movlw	-10
 13792  012A0C  50E3               	movf	plusw1,w,c
 13793  012A0E  2235               	addwfc	btemp^0,f,c
 13794  012A10  0EFA               	movlw	-6
 13795  012A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 13796  012A18  0EFB               	movlw	-5
 13797  012A1A  50E3               	movf	plusw1,w,c
 13798  012A1C  6E35               	movwf	btemp^0,c
 13799  012A1E  0EF7               	movlw	-9
 13800  012A20  50E3               	movf	plusw1,w,c
 13801  012A22  2235               	addwfc	btemp^0,f,c
 13802  012A24  0EFB               	movlw	-5
 13803  012A26  0060  F0D7  FFE3   	movff	btemp,plusw1
 13804                           
 13805                           ;stkvar	_b @ sp[(-4)+-4]
 13806  012A2C  0EFB               	movlw	-5
 13807  012A2E  A0E3               	btfss	plusw1,0,c
 13808  012A30  D101               	goto	u4650
 13809                           
 13810                           ;stkvar	_grs @ sp[(-4)+0]
 13811  012A32  0EFC               	movlw	-4
 13812  012A34  A0E3               	btfss	plusw1,0,c
 13813  012A36  D00D               	goto	l6068
 13814                           
 13815                           ;stkvar	_grs @ sp[(-4)+0]
 13816  012A38  0EFC               	movlw	-4
 13817  012A3A  006F FF8C  F040    	movff	plusw1,btemp+11
 13818  012A40  90D8               	bcf	status,0,c
 13819  012A42  3240               	rrcf	(btemp+11)^0,f,c
 13820  012A44  0E01               	movlw	1
 13821  012A46  1240               	iorwf	(btemp+11)^0,f,c
 13822                           
 13823                           ;stkvar	_grs @ sp[(-4)+0]
 13824  012A48  0EFC               	movlw	-4
 13825  012A4A  0060  F103  FFE3   	movff	btemp+11,plusw1
 13826  012A50  D009               	goto	l6070
 13827  012A52                     l6068:
 13828                           
 13829                           ;stkvar	_grs @ sp[(-4)+0]
 13830  012A52  50E1               	movf	fsr1l,w,c
 13831  012A54  0FFC               	addlw	-4
 13832  012A56  6ED9               	movwf	fsr2l,c
 13833  012A58  50E2               	movf	fsr1h,w,c
 13834  012A5A  6EDA               	movwf	fsr2h,c
 13835  012A5C  0EFF               	movlw	255
 13836  012A5E  22DA               	addwfc	fsr2h,f,c
 13837  012A60  90D8               	bcf	status,0,c
 13838  012A62  32DF               	rrcf	indf2,f,c
 13839  012A64                     l6070:
 13840                           
 13841                           ;stkvar	_b @ sp[(-4)+-4]
 13842  012A64  0EF8               	movlw	-8
 13843  012A66  A0E3               	btfss	plusw1,0,c
 13844  012A68  D002               	goto	l6074
 13845                           
 13846                           ;stkvar	_grs @ sp[(-4)+0]
 13847  012A6A  0EFC               	movlw	-4
 13848  012A6C  8EE3               	bsf	plusw1,7,c
 13849  012A6E                     l6074:
 13850  012A6E  0E01               	movlw	1
 13851  012A70  6E40               	movwf	(btemp+11)^0,c
 13852                           
 13853                           ;stkvar	_b @ sp[(-4)+-4]
 13854  012A72  50E1               	movf	fsr1l,w,c
 13855  012A74  0FF8               	addlw	-8
 13856  012A76  6ED9               	movwf	fsr2l,c
 13857  012A78  50E2               	movf	fsr1h,w,c
 13858  012A7A  6EDA               	movwf	fsr2h,c
 13859  012A7C  0EFF               	movlw	255
 13860  012A7E  22DA               	addwfc	fsr2h,f,c
 13861  012A80  2840               	incf	(btemp+11)^0,w,c
 13862  012A82  52DE               	movf	postinc2,f,c
 13863  012A84  D008               	goto	u4570
 13864  012A86                     u4575:
 13865  012A86  52DE               	movf	postinc2,f,c
 13866  012A88  90D8               	bcf	status,0,c
 13867  012A8A  BEDC               	btfsc	preinc2,7,c
 13868  012A8C  80D8               	bsf	status,0,c
 13869  012A8E  32DD               	rrcf	postdec2,f,c
 13870  012A90  32DD               	rrcf	postdec2,f,c
 13871  012A92  32DD               	rrcf	postdec2,f,c
 13872  012A94  32DE               	rrcf	postinc2,f,c
 13873  012A96                     u4570:
 13874  012A96  2EE8               	decfsz	wreg,f,c
 13875  012A98  D7F6               	goto	u4575
 13876                           
 13877                           ;stkvar	_bexp @ sp[(-4)+1]
 13878  012A9A  0EFD               	movlw	-3
 13879  012A9C  2AE3               	incf	plusw1,f,c
 13880  012A9E  D0CA               	goto	u4650
 13881  012AA0                     l6078:
 13882                           
 13883                           ;stkvar	_a @ sp[(-4)+-8]
 13884                           ;stkvar	_b @ sp[(-4)+-4]
 13885  012AA0  50E1               	movf	fsr1l,w,c
 13886  012AA2  0FF8               	addlw	-8
 13887  012AA4  6ED9               	movwf	fsr2l,c
 13888  012AA6  50E2               	movf	fsr1h,w,c
 13889  012AA8  6EDA               	movwf	fsr2h,c
 13890  012AAA  0EFF               	movlw	255
 13891  012AAC  22DA               	addwfc	fsr2h,f,c
 13892  012AAE  0EF4               	movlw	-12
 13893  012AB0  50E3               	movf	plusw1,w,c
 13894  012AB2  5CDE               	subwf	postinc2,w,c
 13895  012AB4  0EF5               	movlw	-11
 13896  012AB6  50E3               	movf	plusw1,w,c
 13897  012AB8  58DE               	subwfb	postinc2,w,c
 13898  012ABA  0EF6               	movlw	-10
 13899  012ABC  50E3               	movf	plusw1,w,c
 13900  012ABE  58DE               	subwfb	postinc2,w,c
 13901  012AC0  50DE               	movf	postinc2,w,c
 13902  012AC2  0A80               	xorlw	128
 13903  012AC4  6E35               	movwf	btemp^0,c
 13904  012AC6  0EF7               	movlw	-9
 13905  012AC8  50E3               	movf	plusw1,w,c
 13906  012ACA  0A80               	xorlw	128
 13907  012ACC  5835               	subwfb	btemp^0,w,c
 13908  012ACE  B0D8               	btfsc	status,0,c
 13909  012AD0  D053               	goto	l6090
 13910                           
 13911                           ;stkvar	_b @ sp[(-4)+-4]
 13912                           ;stkvar	_a @ sp[(-4)+-8]
 13913  012AD2  0EF4               	movlw	-12
 13914  012AD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 13915  012ADA  0EF5               	movlw	-11
 13916  012ADC  006F FF8C  F03E    	movff	plusw1,btemp+9
 13917  012AE2  0EF6               	movlw	-10
 13918  012AE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13919  012AEA  0EF7               	movlw	-9
 13920  012AEC  006F FF8C  F040    	movff	plusw1,btemp+11
 13921  012AF2  0EF8               	movlw	-8
 13922  012AF4  50E3               	movf	plusw1,w,c
 13923  012AF6  5E3D               	subwf	(btemp+8)^0,f,c
 13924  012AF8  0EF9               	movlw	-7
 13925  012AFA  50E3               	movf	plusw1,w,c
 13926  012AFC  5A3E               	subwfb	(btemp+9)^0,f,c
 13927  012AFE  0EFA               	movlw	-6
 13928  012B00  50E3               	movf	plusw1,w,c
 13929  012B02  5A3F               	subwfb	(btemp+10)^0,f,c
 13930  012B04  0EFB               	movlw	-5
 13931  012B06  50E3               	movf	plusw1,w,c
 13932  012B08  5A40               	subwfb	(btemp+11)^0,f,c
 13933  012B0A  0EFF               	movlw	255
 13934  012B0C  243D               	addwf	(btemp+8)^0,w,c
 13935  012B0E  6E39               	movwf	(btemp+4)^0,c
 13936  012B10  0EFF               	movlw	255
 13937  012B12  203E               	addwfc	(btemp+9)^0,w,c
 13938  012B14  6E3A               	movwf	(btemp+5)^0,c
 13939  012B16  0EFF               	movlw	255
 13940  012B18  203F               	addwfc	(btemp+10)^0,w,c
 13941  012B1A  6E3B               	movwf	(btemp+6)^0,c
 13942  012B1C  0EFF               	movlw	255
 13943  012B1E  2040               	addwfc	(btemp+11)^0,w,c
 13944  012B20  6E3C               	movwf	(btemp+7)^0,c
 13945                           
 13946                           ;stkvar	_b @ sp[(-4)+-4]
 13947  012B22  0EF8               	movlw	-8
 13948  012B24  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13949  012B2A  0EF9               	movlw	-7
 13950  012B2C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13951  012B32  0EFA               	movlw	-6
 13952  012B34  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13953  012B3A  0EFB               	movlw	-5
 13954  012B3C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13955                           
 13956                           ;stkvar	_signs @ sp[(-4)+3]
 13957  012B42  0EFF               	movlw	-1
 13958  012B44  7EE3               	btg	plusw1,7,c
 13959                           
 13960                           ;stkvar	_grs @ sp[(-4)+0]
 13961  012B46  0EFC               	movlw	-4
 13962  012B48  50E3               	movf	plusw1,w,c
 13963  012B4A  0800               	sublw	0
 13964  012B4C  6E40               	movwf	(btemp+11)^0,c
 13965                           
 13966                           ;stkvar	_grs @ sp[(-4)+0]
 13967  012B4E  0EFC               	movlw	-4
 13968  012B50  0060  F103  FFE3   	movff	btemp+11,plusw1
 13969                           
 13970                           ;stkvar	_grs @ sp[(-4)+0]
 13971  012B56  0EFC               	movlw	-4
 13972  012B58  50E3               	movf	plusw1,w,c
 13973  012B5A  A4D8               	btfss	status,2,c
 13974  012B5C  D020               	goto	l6092
 13975                           
 13976                           ;stkvar	_b @ sp[(-4)+-4]
 13977  012B5E  50E1               	movf	fsr1l,w,c
 13978  012B60  0FF8               	addlw	-8
 13979  012B62  6ED9               	movwf	fsr2l,c
 13980  012B64  50E2               	movf	fsr1h,w,c
 13981  012B66  6EDA               	movwf	fsr2h,c
 13982  012B68  0EFF               	movlw	255
 13983  012B6A  22DA               	addwfc	fsr2h,f,c
 13984  012B6C  2ADE               	incf	postinc2,f,c
 13985  012B6E  0E00               	movlw	0
 13986  012B70  22DE               	addwfc	postinc2,f,c
 13987  012B72  22DE               	addwfc	postinc2,f,c
 13988  012B74  22DE               	addwfc	postinc2,f,c
 13989  012B76  D013               	goto	l6092
 13990  012B78                     l6090:
 13991                           
 13992                           ;stkvar	_a @ sp[(-4)+-8]
 13993                           ;stkvar	_b @ sp[(-4)+-4]
 13994  012B78  50E1               	movf	fsr1l,w,c
 13995  012B7A  0FF8               	addlw	-8
 13996  012B7C  6ED9               	movwf	fsr2l,c
 13997  012B7E  50E2               	movf	fsr1h,w,c
 13998  012B80  6EDA               	movwf	fsr2h,c
 13999  012B82  0EFF               	movlw	255
 14000  012B84  22DA               	addwfc	fsr2h,f,c
 14001  012B86  0EF4               	movlw	-12
 14002  012B88  50E3               	movf	plusw1,w,c
 14003  012B8A  5EDE               	subwf	postinc2,f,c
 14004  012B8C  0EF5               	movlw	-11
 14005  012B8E  50E3               	movf	plusw1,w,c
 14006  012B90  5ADE               	subwfb	postinc2,f,c
 14007  012B92  0EF6               	movlw	-10
 14008  012B94  50E3               	movf	plusw1,w,c
 14009  012B96  5ADE               	subwfb	postinc2,f,c
 14010  012B98  0EF7               	movlw	-9
 14011  012B9A  50E3               	movf	plusw1,w,c
 14012  012B9C  5ADE               	subwfb	postinc2,f,c
 14013  012B9E                     l6092:
 14014                           
 14015                           ;stkvar	_b @ sp[(-4)+-4]
 14016  012B9E  0EF8               	movlw	-8
 14017  012BA0  50E3               	movf	plusw1,w,c
 14018  012BA2  E145               	bnz	l6114
 14019  012BA4  0EF9               	movlw	-7
 14020  012BA6  50E3               	movf	plusw1,w,c
 14021  012BA8  E142               	bnz	l6114
 14022  012BAA  0EFA               	movlw	-6
 14023  012BAC  50E3               	movf	plusw1,w,c
 14024  012BAE  E13F               	bnz	l6114
 14025  012BB0  0EFB               	movlw	-5
 14026  012BB2  50E3               	movf	plusw1,w,c
 14027  012BB4  A4D8               	btfss	status,2,c
 14028  012BB6  D03B               	goto	l6114
 14029                           
 14030                           ;stkvar	_grs @ sp[(-4)+0]
 14031  012BB8  0EFC               	movlw	-4
 14032  012BBA  50E3               	movf	plusw1,w,c
 14033  012BBC  A4D8               	btfss	status,2,c
 14034  012BBE  D037               	goto	l6114
 14035  012BC0                     u4610:
 14036  012BC0  0E00               	movlw	0
 14037  012BC2  6E35               	movwf	btemp^0,c
 14038  012BC4  0E00               	movlw	0
 14039  012BC6  6E36               	movwf	(btemp+1)^0,c
 14040  012BC8  0E00               	movlw	0
 14041  012BCA  6E37               	movwf	(btemp+2)^0,c
 14042  012BCC  0E00               	movlw	0
 14043  012BCE  6E38               	movwf	(btemp+3)^0,c
 14044  012BD0  D0C6               	goto	l2508
 14045  012BD2                     l6100:
 14046                           
 14047                           ;stkvar	_b @ sp[(-4)+-4]
 14048  012BD2  90D8               	bcf	status,0,c
 14049  012BD4  0EF8               	movlw	-8
 14050  012BD6  36E3               	rlcf	plusw1,f,c
 14051  012BD8  0EF9               	movlw	-7
 14052  012BDA  36E3               	rlcf	plusw1,f,c
 14053  012BDC  0EFA               	movlw	-6
 14054  012BDE  36E3               	rlcf	plusw1,f,c
 14055  012BE0  0EFB               	movlw	-5
 14056  012BE2  36E3               	rlcf	plusw1,f,c
 14057                           
 14058                           ;stkvar	_grs @ sp[(-4)+0]
 14059  012BE4  0EFC               	movlw	-4
 14060  012BE6  AEE3               	btfss	plusw1,7,c
 14061  012BE8  D002               	goto	l2520
 14062                           
 14063                           ;stkvar	_b @ sp[(-4)+-4]
 14064  012BEA  0EF8               	movlw	-8
 14065  012BEC  80E3               	bsf	plusw1,0,c
 14066  012BEE                     l2520:
 14067                           
 14068                           ;stkvar	_grs @ sp[(-4)+0]
 14069  012BEE  0EFC               	movlw	-4
 14070  012BF0  A0E3               	btfss	plusw1,0,c
 14071  012BF2  D00E               	goto	l6108
 14072                           
 14073                           ;stkvar	_grs @ sp[(-4)+0]
 14074  012BF4  0EFC               	movlw	-4
 14075  012BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 14076  012BFC  90D8               	bcf	status,0,c
 14077  012BFE  3440               	rlcf	(btemp+11)^0,w,c
 14078  012C00  6E3F               	movwf	(btemp+10)^0,c
 14079  012C02  0E01               	movlw	1
 14080  012C04  123F               	iorwf	(btemp+10)^0,f,c
 14081                           
 14082                           ;stkvar	_grs @ sp[(-4)+0]
 14083  012C06  0EFC               	movlw	-4
 14084  012C08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14085  012C0E  D009               	goto	l6110
 14086  012C10                     l6108:
 14087                           
 14088                           ;stkvar	_grs @ sp[(-4)+0]
 14089  012C10  50E1               	movf	fsr1l,w,c
 14090  012C12  0FFC               	addlw	-4
 14091  012C14  6ED9               	movwf	fsr2l,c
 14092  012C16  50E2               	movf	fsr1h,w,c
 14093  012C18  6EDA               	movwf	fsr2h,c
 14094  012C1A  0EFF               	movlw	255
 14095  012C1C  22DA               	addwfc	fsr2h,f,c
 14096  012C1E  90D8               	bcf	status,0,c
 14097  012C20  36DF               	rlcf	indf2,f,c
 14098  012C22                     l6110:
 14099                           
 14100                           ;stkvar	_bexp @ sp[(-4)+1]
 14101  012C22  0EFD               	movlw	-3
 14102  012C24  50E3               	movf	plusw1,w,c
 14103  012C26  B4D8               	btfsc	status,2,c
 14104  012C28  D002               	goto	l6114
 14105                           
 14106                           ;stkvar	_bexp @ sp[(-4)+1]
 14107  012C2A  0EFD               	movlw	-3
 14108  012C2C  06E3               	decf	plusw1,f,c
 14109  012C2E                     l6114:
 14110                           
 14111                           ;stkvar	_b @ sp[(-4)+-4]
 14112  012C2E  0EFA               	movlw	-6
 14113  012C30  AEE3               	btfss	plusw1,7,c
 14114  012C32  D7CF               	goto	l6100
 14115  012C34                     u4650:
 14116                           
 14117                           ;stkvar	_aexp @ sp[(-4)+2]
 14118  012C34  0EFE               	movlw	-2
 14119  012C36  6AE3               	clrf	plusw1,c
 14120                           
 14121                           ;stkvar	_grs @ sp[(-4)+0]
 14122  012C38  0EFC               	movlw	-4
 14123  012C3A  AEE3               	btfss	plusw1,7,c
 14124  012C3C  D00F               	goto	l6128
 14125                           
 14126                           ;stkvar	_grs @ sp[(-4)+0]
 14127  012C3E  0EFC               	movlw	-4
 14128  012C40  006F FF8C  F040    	movff	plusw1,btemp+11
 14129  012C46  0E7F               	movlw	127
 14130  012C48  1640               	andwf	(btemp+11)^0,f,c
 14131  012C4A  B4D8               	btfsc	status,2,c
 14132  012C4C  D004               	goto	l6124
 14133  012C4E                     u4670:
 14134                           
 14135                           ;stkvar	_aexp @ sp[(-4)+2]
 14136  012C4E  0EFE               	movlw	-2
 14137  012C50  6AE3               	clrf	plusw1,c
 14138  012C52  2AE3               	incf	plusw1,f,c
 14139  012C54  D003               	goto	l6128
 14140  012C56                     l6124:
 14141                           
 14142                           ;stkvar	_b @ sp[(-4)+-4]
 14143  012C56  0EF8               	movlw	-8
 14144  012C58  B0E3               	btfsc	plusw1,0,c
 14145  012C5A  D7F9               	goto	u4670
 14146  012C5C                     l6128:
 14147                           
 14148                           ;stkvar	_aexp @ sp[(-4)+2]
 14149  012C5C  0EFE               	movlw	-2
 14150  012C5E  50E3               	movf	plusw1,w,c
 14151  012C60  B4D8               	btfsc	status,2,c
 14152  012C62  D02B               	goto	l6140
 14153                           
 14154                           ;stkvar	_b @ sp[(-4)+-4]
 14155  012C64  50E1               	movf	fsr1l,w,c
 14156  012C66  0FF8               	addlw	-8
 14157  012C68  6ED9               	movwf	fsr2l,c
 14158  012C6A  50E2               	movf	fsr1h,w,c
 14159  012C6C  6EDA               	movwf	fsr2h,c
 14160  012C6E  0EFF               	movlw	255
 14161  012C70  22DA               	addwfc	fsr2h,f,c
 14162  012C72  2ADE               	incf	postinc2,f,c
 14163  012C74  0E00               	movlw	0
 14164  012C76  22DE               	addwfc	postinc2,f,c
 14165  012C78  22DE               	addwfc	postinc2,f,c
 14166  012C7A  22DE               	addwfc	postinc2,f,c
 14167                           
 14168                           ;stkvar	_b @ sp[(-4)+-4]
 14169  012C7C  0EFB               	movlw	-5
 14170  012C7E  A0E3               	btfss	plusw1,0,c
 14171  012C80  D01C               	goto	l6140
 14172  012C82  0E01               	movlw	1
 14173  012C84  6E40               	movwf	(btemp+11)^0,c
 14174                           
 14175                           ;stkvar	_b @ sp[(-4)+-4]
 14176  012C86  50E1               	movf	fsr1l,w,c
 14177  012C88  0FF8               	addlw	-8
 14178  012C8A  6ED9               	movwf	fsr2l,c
 14179  012C8C  50E2               	movf	fsr1h,w,c
 14180  012C8E  6EDA               	movwf	fsr2h,c
 14181  012C90  0EFF               	movlw	255
 14182  012C92  22DA               	addwfc	fsr2h,f,c
 14183  012C94  2840               	incf	(btemp+11)^0,w,c
 14184  012C96  52DE               	movf	postinc2,f,c
 14185  012C98  D008               	goto	u4710
 14186  012C9A                     u4715:
 14187  012C9A  52DE               	movf	postinc2,f,c
 14188  012C9C  90D8               	bcf	status,0,c
 14189  012C9E  BEDC               	btfsc	preinc2,7,c
 14190  012CA0  80D8               	bsf	status,0,c
 14191  012CA2  32DD               	rrcf	postdec2,f,c
 14192  012CA4  32DD               	rrcf	postdec2,f,c
 14193  012CA6  32DD               	rrcf	postdec2,f,c
 14194  012CA8  32DE               	rrcf	postinc2,f,c
 14195  012CAA                     u4710:
 14196  012CAA  2EE8               	decfsz	wreg,f,c
 14197  012CAC  D7F6               	goto	u4715
 14198                           
 14199                           ;stkvar	_bexp @ sp[(-4)+1]
 14200  012CAE  0EFD               	movlw	-3
 14201  012CB0  28E3               	incf	plusw1,w,c
 14202  012CB2  B4D8               	btfsc	status,2,c
 14203  012CB4  D002               	goto	l6140
 14204                           
 14205                           ;stkvar	_bexp @ sp[(-4)+1]
 14206  012CB6  0EFD               	movlw	-3
 14207  012CB8  2AE3               	incf	plusw1,f,c
 14208  012CBA                     l6140:
 14209                           
 14210                           ;stkvar	_bexp @ sp[(-4)+1]
 14211  012CBA  0EFD               	movlw	-3
 14212  012CBC  28E3               	incf	plusw1,w,c
 14213  012CBE  B4D8               	btfsc	status,2,c
 14214  012CC0  D004               	goto	u4740
 14215                           
 14216                           ;stkvar	_bexp @ sp[(-4)+1]
 14217  012CC2  0EFD               	movlw	-3
 14218  012CC4  50E3               	movf	plusw1,w,c
 14219  012CC6  A4D8               	btfss	status,2,c
 14220  012CC8  D00E               	goto	l6150
 14221  012CCA                     u4740:
 14222                           
 14223                           ;stkvar	_b @ sp[(-4)+-4]
 14224  012CCA  0EF8               	movlw	-8
 14225  012CCC  6AE3               	clrf	plusw1,c
 14226  012CCE  0EF9               	movlw	-7
 14227  012CD0  6AE3               	clrf	plusw1,c
 14228  012CD2  0EFA               	movlw	-6
 14229  012CD4  6AE3               	clrf	plusw1,c
 14230  012CD6  0EFB               	movlw	-5
 14231  012CD8  6AE3               	clrf	plusw1,c
 14232                           
 14233                           ;stkvar	_bexp @ sp[(-4)+1]
 14234  012CDA  0EFD               	movlw	-3
 14235  012CDC  50E3               	movf	plusw1,w,c
 14236  012CDE  A4D8               	btfss	status,2,c
 14237  012CE0  D002               	goto	l6150
 14238                           
 14239                           ;stkvar	_signs @ sp[(-4)+3]
 14240  012CE2  0EFF               	movlw	-1
 14241  012CE4  6AE3               	clrf	plusw1,c
 14242  012CE6                     l6150:
 14243                           
 14244                           ;stkvar	_bexp @ sp[(-4)+1]
 14245  012CE6  0EFD               	movlw	-3
 14246  012CE8  A0E3               	btfss	plusw1,0,c
 14247  012CEA  D009               	goto	l6154
 14248                           
 14249                           ;stkvar	_b @ sp[(-4)+-4]
 14250  012CEC  0EFA               	movlw	250
 14251  012CEE  24E1               	addwf	fsr1l,w,c
 14252  012CF0  6ED9               	movwf	fsr2l,c
 14253  012CF2  0EFF               	movlw	255
 14254  012CF4  20E2               	addwfc	fsr1h,w,c
 14255  012CF6  6EDA               	movwf	fsr2h,c
 14256  012CF8  0E00               	movlw	0
 14257  012CFA  8EDB               	bsf	plusw2,7,c
 14258  012CFC  D008               	goto	l6156
 14259  012CFE                     l6154:
 14260                           
 14261                           ;stkvar	_b @ sp[(-4)+-4]
 14262  012CFE  0EFA               	movlw	250
 14263  012D00  24E1               	addwf	fsr1l,w,c
 14264  012D02  6ED9               	movwf	fsr2l,c
 14265  012D04  0EFF               	movlw	255
 14266  012D06  20E2               	addwfc	fsr1h,w,c
 14267  012D08  6EDA               	movwf	fsr2h,c
 14268  012D0A  0E7F               	movlw	127
 14269  012D0C  16DF               	andwf	indf2,f,c
 14270  012D0E                     l6156:
 14271                           
 14272                           ;stkvar	_b @ sp[(-4)+-4]
 14273  012D0E  0EFB               	movlw	251
 14274  012D10  24E1               	addwf	fsr1l,w,c
 14275  012D12  6ED9               	movwf	fsr2l,c
 14276  012D14  0EFF               	movlw	255
 14277  012D16  20E2               	addwfc	fsr1h,w,c
 14278  012D18  6EDA               	movwf	fsr2h,c
 14279                           
 14280                           ;stkvar	_bexp @ sp[(-4)+1]
 14281  012D1A  0EFD               	movlw	-3
 14282  012D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 14283  012D22  90D8               	bcf	status,0,c
 14284  012D24  3040               	rrcf	(btemp+11)^0,w,c
 14285  012D26  6EDF               	movwf	indf2,c
 14286                           
 14287                           ;stkvar	_signs @ sp[(-4)+3]
 14288  012D28  0EFF               	movlw	-1
 14289  012D2A  AEE3               	btfss	plusw1,7,c
 14290  012D2C  D008               	goto	l6162
 14291                           
 14292                           ;stkvar	_b @ sp[(-4)+-4]
 14293  012D2E  0EFB               	movlw	251
 14294  012D30  24E1               	addwf	fsr1l,w,c
 14295  012D32  6ED9               	movwf	fsr2l,c
 14296  012D34  0EFF               	movlw	255
 14297  012D36  20E2               	addwfc	fsr1h,w,c
 14298  012D38  6EDA               	movwf	fsr2h,c
 14299  012D3A  0E00               	movlw	0
 14300  012D3C  8EDB               	bsf	plusw2,7,c
 14301  012D3E                     l6162:
 14302                           
 14303                           ;stkvar	_b @ sp[(-4)+-4]
 14304  012D3E  0EF8               	movlw	-8
 14305  012D40  006F FF8C  F035    	movff	plusw1,btemp
 14306  012D46  0EF9               	movlw	-7
 14307  012D48  006F FF8C  F036    	movff	plusw1,btemp+1
 14308  012D4E  0EFA               	movlw	-6
 14309  012D50  006F FF8C  F037    	movff	plusw1,btemp+2
 14310  012D56  0EFB               	movlw	-5
 14311  012D58  006F FF8C  F038    	movff	plusw1,btemp+3
 14312  012D5E                     l2508:
 14313                           
 14314                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14315  012D5E  0EF4               	movlw	244
 14316  012D60  26E1               	addwf	fsr1l,f,c
 14317  012D62  0EFF               	movlw	255
 14318  012D64  22E2               	addwfc	fsr1h,f,c
 14319  012D66  0012               	return		;funcret
 14320  012D68                     __end_of___fladd:
 14321                           	opt callstack 0
 14322                           
 14323 ;; *************** function ___flneg *****************
 14324 ;; Defined at:
 14325 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  f1              4  [STACK] unsigned char 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;		None
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  4  [STACK] unsigned char 
 14332 ;; Registers used:
 14333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/4
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14343 ;;Total ram usage:        0 bytes
 14344 ;; Hardware stack levels used:    1
 14345 ;; Hardware stack levels required when called:    6
 14346 ;; This function calls:
 14347 ;;		Nothing
 14348 ;; This function is called by:
 14349 ;;		_efgtoa
 14350 ;; This function uses a reentrant model
 14351 ;;
 14352                           
 14353                           	psect	text49
 14354  017A04                     __ptext49:
 14355                           	opt callstack 0
 14356  017A04                     ___flneg:
 14357                           	opt callstack 17
 14358                           
 14359                           ;stkvar	_f1 @ sp[(0)+-4]
 14360                           
 14361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14362                           ;incstack = 0
 14363  017A04  0EFC               	movlw	-4
 14364  017A06  50E3               	movf	plusw1,w,c
 14365  017A08  E10A               	bnz	u6050
 14366  017A0A  0EFD               	movlw	-3
 14367  017A0C  50E3               	movf	plusw1,w,c
 14368  017A0E  E107               	bnz	u6050
 14369  017A10  0EFE               	movlw	-2
 14370  017A12  50E3               	movf	plusw1,w,c
 14371  017A14  E104               	bnz	u6050
 14372  017A16  0EFF               	movlw	-1
 14373  017A18  50E3               	movf	plusw1,w,c
 14374  017A1A  B4D8               	btfsc	status,2,c
 14375  017A1C  D002               	goto	l6830
 14376  017A1E                     u6050:
 14377                           
 14378                           ;stkvar	_f1 @ sp[(0)+-4]
 14379  017A1E  0EFF               	movlw	-1
 14380  017A20  7EE3               	btg	plusw1,7,c
 14381  017A22                     l6830:
 14382                           
 14383                           ;stkvar	_f1 @ sp[(0)+-4]
 14384  017A22  0EFC               	movlw	-4
 14385  017A24  006F FF8C  F035    	movff	plusw1,btemp
 14386  017A2A  0EFD               	movlw	-3
 14387  017A2C  006F FF8C  F036    	movff	plusw1,btemp+1
 14388  017A32  0EFE               	movlw	-2
 14389  017A34  006F FF8C  F037    	movff	plusw1,btemp+2
 14390  017A3A  0EFF               	movlw	-1
 14391  017A3C  006F FF8C  F038    	movff	plusw1,btemp+3
 14392                           
 14393                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14394  017A42  52E5               	movf	postdec1,f,c
 14395  017A44  52E5               	movf	postdec1,f,c
 14396  017A46  52E5               	movf	postdec1,f,c
 14397  017A48  52E5               	movf	postdec1,f,c
 14398  017A4A  0012               	return		;funcret
 14399  017A4C                     __end_of___flneg:
 14400                           	opt callstack 0
 14401                           
 14402 ;; *************** function ___flmul *****************
 14403 ;; Defined at:
 14404 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;  b               4  [STACK] unsigned char 
 14407 ;;  a               4  [STACK] unsigned char 
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;  prod            4  [STACK] struct .
 14410 ;;  grs             4  [STACK] unsigned long 
 14411 ;;  temp            2  [STACK] struct .
 14412 ;;  bexp            1  [STACK] unsigned char 
 14413 ;;  aexp            1  [STACK] unsigned char 
 14414 ;;  sign            1  [STACK] unsigned char 
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  4  [STACK] unsigned char 
 14417 ;; Registers used:
 14418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14419 ;; Tracked objects:
 14420 ;;		On entry : 0/0
 14421 ;;		On exit  : 0/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14428 ;;Total ram usage:        0 bytes
 14429 ;; Hardware stack levels used:    1
 14430 ;; Hardware stack levels required when called:    6
 14431 ;; This function calls:
 14432 ;;		Nothing
 14433 ;; This function is called by:
 14434 ;;		_conv_raw_result
 14435 ;;		_lp_filter
 14436 ;;		_efgtoa
 14437 ;; This function uses a reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text50
 14441  011D82                     __ptext50:
 14442                           	opt callstack 0
 14443  011D82                     ___flmul:
 14444                           	opt callstack 0
 14445                           
 14446                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14447  011D82  0E0D               	movlw	13
 14448  011D84  26E1               	addwf	fsr1l,f,c
 14449  011D86  0E00               	movlw	0
 14450  011D88  22E2               	addwfc	fsr1h,f,c
 14451                           
 14452                           ;stkvar	_b @ sp[(-13)+-4]
 14453                           
 14454                           ;incstack = 0
 14455  011D8A  0EF2               	movlw	242
 14456  011D8C  24E1               	addwf	fsr1l,w,c
 14457  011D8E  6ED9               	movwf	fsr2l,c
 14458  011D90  0EFF               	movlw	255
 14459  011D92  20E2               	addwfc	fsr1h,w,c
 14460  011D94  6EDA               	movwf	fsr2h,c
 14461  011D96  50DF               	movf	indf2,w,c
 14462  011D98  6E40               	movwf	(btemp+11)^0,c
 14463  011D9A  0E80               	movlw	128
 14464  011D9C  1640               	andwf	(btemp+11)^0,f,c
 14465                           
 14466                           ;stkvar	_sign @ sp[(-13)+12]
 14467  011D9E  0EFF               	movlw	-1
 14468  011DA0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14469                           
 14470                           ;stkvar	_b @ sp[(-13)+-4]
 14471  011DA6  0EF2               	movlw	242
 14472  011DA8  24E1               	addwf	fsr1l,w,c
 14473  011DAA  6ED9               	movwf	fsr2l,c
 14474  011DAC  0EFF               	movlw	255
 14475  011DAE  20E2               	addwfc	fsr1h,w,c
 14476  011DB0  6EDA               	movwf	fsr2h,c
 14477  011DB2  50DF               	movf	indf2,w,c
 14478  011DB4  6E40               	movwf	(btemp+11)^0,c
 14479  011DB6  90D8               	bcf	status,0,c
 14480  011DB8  3440               	rlcf	(btemp+11)^0,w,c
 14481  011DBA  6E3F               	movwf	(btemp+10)^0,c
 14482                           
 14483                           ;stkvar	_bexp @ sp[(-13)+10]
 14484  011DBC  0EFD               	movlw	-3
 14485  011DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14486                           
 14487                           ;stkvar	_b @ sp[(-13)+-4]
 14488  011DC4  0EF1               	movlw	241
 14489  011DC6  24E1               	addwf	fsr1l,w,c
 14490  011DC8  6ED9               	movwf	fsr2l,c
 14491  011DCA  0EFF               	movlw	255
 14492  011DCC  20E2               	addwfc	fsr1h,w,c
 14493  011DCE  6EDA               	movwf	fsr2h,c
 14494  011DD0  AEDF               	btfss	indf2,7,c
 14495  011DD2  D002               	goto	l6546
 14496                           
 14497                           ;stkvar	_bexp @ sp[(-13)+10]
 14498  011DD4  0EFD               	movlw	-3
 14499  011DD6  80E3               	bsf	plusw1,0,c
 14500  011DD8                     l6546:
 14501                           
 14502                           ;stkvar	_bexp @ sp[(-13)+10]
 14503  011DD8  0EFD               	movlw	-3
 14504  011DDA  50E3               	movf	plusw1,w,c
 14505  011DDC  B4D8               	btfsc	status,2,c
 14506  011DDE  D01F               	goto	l6554
 14507                           
 14508                           ;stkvar	_bexp @ sp[(-13)+10]
 14509  011DE0  0EFD               	movlw	-3
 14510  011DE2  28E3               	incf	plusw1,w,c
 14511  011DE4  A4D8               	btfss	status,2,c
 14512  011DE6  D018               	goto	l6552
 14513  011DE8  0E00               	movlw	0
 14514  011DEA  6E3D               	movwf	(btemp+8)^0,c
 14515  011DEC  0E00               	movlw	0
 14516  011DEE  6E3E               	movwf	(btemp+9)^0,c
 14517  011DF0  0E00               	movlw	0
 14518  011DF2  6E3F               	movwf	(btemp+10)^0,c
 14519  011DF4  0E00               	movlw	0
 14520  011DF6  6E40               	movwf	(btemp+11)^0,c
 14521                           
 14522                           ;stkvar	_b @ sp[(-13)+-4]
 14523  011DF8  0EEF               	movlw	-17
 14524  011DFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14525  011E00  0EF0               	movlw	-16
 14526  011E02  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14527  011E08  0EF1               	movlw	-15
 14528  011E0A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14529  011E10  0EF2               	movlw	-14
 14530  011E12  0060  F103  FFE3   	movff	btemp+11,plusw1
 14531  011E18                     l6552:
 14532                           
 14533                           ;stkvar	_b @ sp[(-13)+-4]
 14534  011E18  0EF1               	movlw	-15
 14535  011E1A  8EE3               	bsf	plusw1,7,c
 14536  011E1C  D018               	goto	l6556
 14537  011E1E                     l6554:
 14538  011E1E  0E00               	movlw	0
 14539  011E20  6E3D               	movwf	(btemp+8)^0,c
 14540  011E22  0E00               	movlw	0
 14541  011E24  6E3E               	movwf	(btemp+9)^0,c
 14542  011E26  0E00               	movlw	0
 14543  011E28  6E3F               	movwf	(btemp+10)^0,c
 14544  011E2A  0E00               	movlw	0
 14545  011E2C  6E40               	movwf	(btemp+11)^0,c
 14546                           
 14547                           ;stkvar	_b @ sp[(-13)+-4]
 14548  011E2E  0EEF               	movlw	-17
 14549  011E30  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14550  011E36  0EF0               	movlw	-16
 14551  011E38  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14552  011E3E  0EF1               	movlw	-15
 14553  011E40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14554  011E46  0EF2               	movlw	-14
 14555  011E48  0060  F103  FFE3   	movff	btemp+11,plusw1
 14556  011E4E                     l6556:
 14557                           
 14558                           ;stkvar	_a @ sp[(-13)+-8]
 14559  011E4E  0EEE               	movlw	238
 14560  011E50  24E1               	addwf	fsr1l,w,c
 14561  011E52  6ED9               	movwf	fsr2l,c
 14562  011E54  0EFF               	movlw	255
 14563  011E56  20E2               	addwfc	fsr1h,w,c
 14564  011E58  6EDA               	movwf	fsr2h,c
 14565  011E5A  50DF               	movf	indf2,w,c
 14566  011E5C  6E40               	movwf	(btemp+11)^0,c
 14567  011E5E  0E80               	movlw	128
 14568  011E60  1640               	andwf	(btemp+11)^0,f,c
 14569                           
 14570                           ;stkvar	_sign @ sp[(-13)+12]
 14571  011E62  50E1               	movf	fsr1l,w,c
 14572  011E64  0FFF               	addlw	-1
 14573  011E66  6ED9               	movwf	fsr2l,c
 14574  011E68  50E2               	movf	fsr1h,w,c
 14575  011E6A  6EDA               	movwf	fsr2h,c
 14576  011E6C  0EFF               	movlw	255
 14577  011E6E  22DA               	addwfc	fsr2h,f,c
 14578  011E70  5040               	movf	(btemp+11)^0,w,c
 14579  011E72  1ADF               	xorwf	indf2,f,c
 14580                           
 14581                           ;stkvar	_a @ sp[(-13)+-8]
 14582  011E74  0EEE               	movlw	238
 14583  011E76  24E1               	addwf	fsr1l,w,c
 14584  011E78  6ED9               	movwf	fsr2l,c
 14585  011E7A  0EFF               	movlw	255
 14586  011E7C  20E2               	addwfc	fsr1h,w,c
 14587  011E7E  6EDA               	movwf	fsr2h,c
 14588  011E80  50DF               	movf	indf2,w,c
 14589  011E82  6E40               	movwf	(btemp+11)^0,c
 14590  011E84  90D8               	bcf	status,0,c
 14591  011E86  3440               	rlcf	(btemp+11)^0,w,c
 14592  011E88  6E3F               	movwf	(btemp+10)^0,c
 14593                           
 14594                           ;stkvar	_aexp @ sp[(-13)+11]
 14595  011E8A  0EFE               	movlw	-2
 14596  011E8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14597                           
 14598                           ;stkvar	_a @ sp[(-13)+-8]
 14599  011E92  0EED               	movlw	237
 14600  011E94  24E1               	addwf	fsr1l,w,c
 14601  011E96  6ED9               	movwf	fsr2l,c
 14602  011E98  0EFF               	movlw	255
 14603  011E9A  20E2               	addwfc	fsr1h,w,c
 14604  011E9C  6EDA               	movwf	fsr2h,c
 14605  011E9E  AEDF               	btfss	indf2,7,c
 14606  011EA0  D002               	goto	l6564
 14607                           
 14608                           ;stkvar	_aexp @ sp[(-13)+11]
 14609  011EA2  0EFE               	movlw	-2
 14610  011EA4  80E3               	bsf	plusw1,0,c
 14611  011EA6                     l6564:
 14612                           
 14613                           ;stkvar	_aexp @ sp[(-13)+11]
 14614  011EA6  0EFE               	movlw	-2
 14615  011EA8  50E3               	movf	plusw1,w,c
 14616  011EAA  B4D8               	btfsc	status,2,c
 14617  011EAC  D01F               	goto	l6572
 14618                           
 14619                           ;stkvar	_aexp @ sp[(-13)+11]
 14620  011EAE  0EFE               	movlw	-2
 14621  011EB0  28E3               	incf	plusw1,w,c
 14622  011EB2  A4D8               	btfss	status,2,c
 14623  011EB4  D018               	goto	l6570
 14624  011EB6  0E00               	movlw	0
 14625  011EB8  6E3D               	movwf	(btemp+8)^0,c
 14626  011EBA  0E00               	movlw	0
 14627  011EBC  6E3E               	movwf	(btemp+9)^0,c
 14628  011EBE  0E00               	movlw	0
 14629  011EC0  6E3F               	movwf	(btemp+10)^0,c
 14630  011EC2  0E00               	movlw	0
 14631  011EC4  6E40               	movwf	(btemp+11)^0,c
 14632                           
 14633                           ;stkvar	_a @ sp[(-13)+-8]
 14634  011EC6  0EEB               	movlw	-21
 14635  011EC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14636  011ECE  0EEC               	movlw	-20
 14637  011ED0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14638  011ED6  0EED               	movlw	-19
 14639  011ED8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14640  011EDE  0EEE               	movlw	-18
 14641  011EE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14642  011EE6                     l6570:
 14643                           
 14644                           ;stkvar	_a @ sp[(-13)+-8]
 14645  011EE6  0EED               	movlw	-19
 14646  011EE8  8EE3               	bsf	plusw1,7,c
 14647  011EEA  D018               	goto	l6574
 14648  011EEC                     l6572:
 14649  011EEC  0E00               	movlw	0
 14650  011EEE  6E3D               	movwf	(btemp+8)^0,c
 14651  011EF0  0E00               	movlw	0
 14652  011EF2  6E3E               	movwf	(btemp+9)^0,c
 14653  011EF4  0E00               	movlw	0
 14654  011EF6  6E3F               	movwf	(btemp+10)^0,c
 14655  011EF8  0E00               	movlw	0
 14656  011EFA  6E40               	movwf	(btemp+11)^0,c
 14657                           
 14658                           ;stkvar	_a @ sp[(-13)+-8]
 14659  011EFC  0EEB               	movlw	-21
 14660  011EFE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14661  011F04  0EEC               	movlw	-20
 14662  011F06  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14663  011F0C  0EED               	movlw	-19
 14664  011F0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14665  011F14  0EEE               	movlw	-18
 14666  011F16  0060  F103  FFE3   	movff	btemp+11,plusw1
 14667  011F1C                     l6574:
 14668                           
 14669                           ;stkvar	_aexp @ sp[(-13)+11]
 14670  011F1C  0EFE               	movlw	-2
 14671  011F1E  50E3               	movf	plusw1,w,c
 14672  011F20  B4D8               	btfsc	status,2,c
 14673  011F22  D004               	goto	u5680
 14674                           
 14675                           ;stkvar	_bexp @ sp[(-13)+10]
 14676  011F24  0EFD               	movlw	-3
 14677  011F26  50E3               	movf	plusw1,w,c
 14678  011F28  A4D8               	btfss	status,2,c
 14679  011F2A  D009               	goto	l6582
 14680  011F2C                     u5680:
 14681  011F2C  0E00               	movlw	0
 14682  011F2E  6E35               	movwf	btemp^0,c
 14683  011F30  0E00               	movlw	0
 14684  011F32  6E36               	movwf	(btemp+1)^0,c
 14685  011F34  0E00               	movlw	0
 14686  011F36  6E37               	movwf	(btemp+2)^0,c
 14687  011F38  0E00               	movlw	0
 14688  011F3A  6E38               	movwf	(btemp+3)^0,c
 14689  011F3C  D332               	goto	l2589
 14690  011F3E                     l6582:
 14691                           
 14692                           ;stkvar	_b @ sp[(-13)+-4]
 14693  011F3E  0EEF               	movlw	-17
 14694  011F40  006F FF8C  F040    	movff	plusw1,btemp+11
 14695                           
 14696                           ;stkvar	_a @ sp[(-13)+-8]
 14697  011F46  0EED               	movlw	237
 14698  011F48  24E1               	addwf	fsr1l,w,c
 14699  011F4A  6ED9               	movwf	fsr2l,c
 14700  011F4C  0EFF               	movlw	255
 14701  011F4E  20E2               	addwfc	fsr1h,w,c
 14702  011F50  6EDA               	movwf	fsr2h,c
 14703  011F52  50DF               	movf	indf2,w,c
 14704  011F54  0240               	mulwf	(btemp+11)^0,c
 14705                           
 14706                           ;stkvar	_temp @ sp[(-13)+8]
 14707  011F56  0EFB               	movlw	-5
 14708  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 14709  011F5E  0EFC               	movlw	-4
 14710  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 14711                           
 14712                           ;stkvar	_temp @ sp[(-13)+8]
 14713  011F66  0EFB               	movlw	-5
 14714  011F68  006F FF8C  F040    	movff	plusw1,btemp+11
 14715  011F6E  0060  F100  F039   	movff	btemp+11,btemp+4
 14716  011F74  6A3A               	clrf	(btemp+5)^0,c
 14717  011F76  6A3B               	clrf	(btemp+6)^0,c
 14718  011F78  6A3C               	clrf	(btemp+7)^0,c
 14719                           
 14720                           ;stkvar	_grs @ sp[(-13)+4]
 14721  011F7A  0EF7               	movlw	-9
 14722  011F7C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14723  011F82  0EF8               	movlw	-8
 14724  011F84  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14725  011F8A  0EF9               	movlw	-7
 14726  011F8C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14727  011F92  0EFA               	movlw	-6
 14728  011F94  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14729                           
 14730                           ;stkvar	_temp @ sp[(-13)+8]
 14731  011F9A  0EFC               	movlw	252
 14732  011F9C  24E1               	addwf	fsr1l,w,c
 14733  011F9E  6ED9               	movwf	fsr2l,c
 14734  011FA0  0EFF               	movlw	255
 14735  011FA2  20E2               	addwfc	fsr1h,w,c
 14736  011FA4  6EDA               	movwf	fsr2h,c
 14737  011FA6  50DF               	movf	indf2,w,c
 14738  011FA8  6E40               	movwf	(btemp+11)^0,c
 14739  011FAA  0060  F100  F039   	movff	btemp+11,btemp+4
 14740  011FB0  6A3A               	clrf	(btemp+5)^0,c
 14741  011FB2  6A3B               	clrf	(btemp+6)^0,c
 14742  011FB4  6A3C               	clrf	(btemp+7)^0,c
 14743                           
 14744                           ;stkvar	_prod @ sp[(-13)+0]
 14745  011FB6  0EF3               	movlw	-13
 14746  011FB8  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14747  011FBE  0EF4               	movlw	-12
 14748  011FC0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14749  011FC6  0EF5               	movlw	-11
 14750  011FC8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14751  011FCE  0EF6               	movlw	-10
 14752  011FD0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14753                           
 14754                           ;stkvar	_b @ sp[(-13)+-4]
 14755  011FD6  0EF0               	movlw	240
 14756  011FD8  24E1               	addwf	fsr1l,w,c
 14757  011FDA  6ED9               	movwf	fsr2l,c
 14758  011FDC  0EFF               	movlw	255
 14759  011FDE  20E2               	addwfc	fsr1h,w,c
 14760  011FE0  6EDA               	movwf	fsr2h,c
 14761  011FE2  50DF               	movf	indf2,w,c
 14762  011FE4  6E40               	movwf	(btemp+11)^0,c
 14763                           
 14764                           ;stkvar	_a @ sp[(-13)+-8]
 14765  011FE6  0EEC               	movlw	236
 14766  011FE8  24E1               	addwf	fsr1l,w,c
 14767  011FEA  6ED9               	movwf	fsr2l,c
 14768  011FEC  0EFF               	movlw	255
 14769  011FEE  20E2               	addwfc	fsr1h,w,c
 14770  011FF0  6EDA               	movwf	fsr2h,c
 14771  011FF2  50DF               	movf	indf2,w,c
 14772  011FF4  0240               	mulwf	(btemp+11)^0,c
 14773                           
 14774                           ;stkvar	_temp @ sp[(-13)+8]
 14775  011FF6  0EFB               	movlw	-5
 14776  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 14777  011FFE  0EFC               	movlw	-4
 14778  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 14779                           
 14780                           ;stkvar	_grs @ sp[(-13)+4]
 14781  012006  50E1               	movf	fsr1l,w,c
 14782  012008  0FF7               	addlw	-9
 14783  01200A  6ED9               	movwf	fsr2l,c
 14784  01200C  50E2               	movf	fsr1h,w,c
 14785  01200E  6EDA               	movwf	fsr2h,c
 14786  012010  0EFF               	movlw	255
 14787  012012  22DA               	addwfc	fsr2h,f,c
 14788                           
 14789                           ;stkvar	_temp @ sp[(-13)+8]
 14790  012014  0EFB               	movlw	-5
 14791  012016  50E3               	movf	plusw1,w,c
 14792  012018  26DE               	addwf	postinc2,f,c
 14793  01201A  0E00               	movlw	0
 14794  01201C  22DE               	addwfc	postinc2,f,c
 14795  01201E  22DE               	addwfc	postinc2,f,c
 14796  012020  22DE               	addwfc	postinc2,f,c
 14797                           
 14798                           ;stkvar	_prod @ sp[(-13)+0]
 14799  012022  50E1               	movf	fsr1l,w,c
 14800  012024  0FF3               	addlw	-13
 14801  012026  6ED9               	movwf	fsr2l,c
 14802  012028  50E2               	movf	fsr1h,w,c
 14803  01202A  6EDA               	movwf	fsr2h,c
 14804  01202C  0EFF               	movlw	255
 14805  01202E  22DA               	addwfc	fsr2h,f,c
 14806                           
 14807                           ;stkvar	_temp @ sp[(-13)+8]
 14808  012030  0EFC               	movlw	252
 14809  012032  24E1               	addwf	fsr1l,w,c
 14810  012034  6EE9               	movwf	fsr0l,c
 14811  012036  0EFF               	movlw	255
 14812  012038  20E2               	addwfc	fsr1h,w,c
 14813  01203A  6EEA               	movwf	fsr0h,c
 14814  01203C  50EF               	movf	indf0,w,c
 14815  01203E  26DE               	addwf	postinc2,f,c
 14816  012040  0E00               	movlw	0
 14817  012042  22DE               	addwfc	postinc2,f,c
 14818  012044  22DE               	addwfc	postinc2,f,c
 14819  012046  22DE               	addwfc	postinc2,f,c
 14820                           
 14821                           ;stkvar	_b @ sp[(-13)+-4]
 14822  012048  0EF1               	movlw	241
 14823  01204A  24E1               	addwf	fsr1l,w,c
 14824  01204C  6ED9               	movwf	fsr2l,c
 14825  01204E  0EFF               	movlw	255
 14826  012050  20E2               	addwfc	fsr1h,w,c
 14827  012052  6EDA               	movwf	fsr2h,c
 14828  012054  50DF               	movf	indf2,w,c
 14829  012056  6E40               	movwf	(btemp+11)^0,c
 14830                           
 14831                           ;stkvar	_a @ sp[(-13)+-8]
 14832  012058  0EEB               	movlw	-21
 14833  01205A  50E3               	movf	plusw1,w,c
 14834  01205C  0240               	mulwf	(btemp+11)^0,c
 14835                           
 14836                           ;stkvar	_temp @ sp[(-13)+8]
 14837  01205E  0EFB               	movlw	-5
 14838  012060  006F FFCF FFE3     	movff	prodl,plusw1
 14839  012066  0EFC               	movlw	-4
 14840  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 14841                           
 14842                           ;stkvar	_grs @ sp[(-13)+4]
 14843  01206E  50E1               	movf	fsr1l,w,c
 14844  012070  0FF7               	addlw	-9
 14845  012072  6ED9               	movwf	fsr2l,c
 14846  012074  50E2               	movf	fsr1h,w,c
 14847  012076  6EDA               	movwf	fsr2h,c
 14848  012078  0EFF               	movlw	255
 14849  01207A  22DA               	addwfc	fsr2h,f,c
 14850                           
 14851                           ;stkvar	_temp @ sp[(-13)+8]
 14852  01207C  0EFB               	movlw	-5
 14853  01207E  50E3               	movf	plusw1,w,c
 14854  012080  26DE               	addwf	postinc2,f,c
 14855  012082  0E00               	movlw	0
 14856  012084  22DE               	addwfc	postinc2,f,c
 14857  012086  22DE               	addwfc	postinc2,f,c
 14858  012088  22DE               	addwfc	postinc2,f,c
 14859                           
 14860                           ;stkvar	_prod @ sp[(-13)+0]
 14861  01208A  50E1               	movf	fsr1l,w,c
 14862  01208C  0FF3               	addlw	-13
 14863  01208E  6ED9               	movwf	fsr2l,c
 14864  012090  50E2               	movf	fsr1h,w,c
 14865  012092  6EDA               	movwf	fsr2h,c
 14866  012094  0EFF               	movlw	255
 14867  012096  22DA               	addwfc	fsr2h,f,c
 14868                           
 14869                           ;stkvar	_temp @ sp[(-13)+8]
 14870  012098  0EFC               	movlw	252
 14871  01209A  24E1               	addwf	fsr1l,w,c
 14872  01209C  6EE9               	movwf	fsr0l,c
 14873  01209E  0EFF               	movlw	255
 14874  0120A0  20E2               	addwfc	fsr1h,w,c
 14875  0120A2  6EEA               	movwf	fsr0h,c
 14876  0120A4  50EF               	movf	indf0,w,c
 14877  0120A6  26DE               	addwf	postinc2,f,c
 14878  0120A8  0E00               	movlw	0
 14879  0120AA  22DE               	addwfc	postinc2,f,c
 14880  0120AC  22DE               	addwfc	postinc2,f,c
 14881  0120AE  22DE               	addwfc	postinc2,f,c
 14882                           
 14883                           ;stkvar	_grs @ sp[(-13)+4]
 14884  0120B0  50E1               	movf	fsr1l,w,c
 14885  0120B2  0FF7               	addlw	-9
 14886  0120B4  6ED9               	movwf	fsr2l,c
 14887  0120B6  50E2               	movf	fsr1h,w,c
 14888  0120B8  6EDA               	movwf	fsr2h,c
 14889  0120BA  0EFF               	movlw	255
 14890  0120BC  22DA               	addwfc	fsr2h,f,c
 14891  0120BE  0E08               	movlw	8
 14892  0120C0                     u5695:
 14893  0120C0  90D8               	bcf	status,0,c
 14894  0120C2  36DE               	rlcf	postinc2,f,c
 14895  0120C4  36DE               	rlcf	postinc2,f,c
 14896  0120C6  36DE               	rlcf	postinc2,f,c
 14897  0120C8  36DD               	rlcf	postdec2,f,c
 14898  0120CA  52DD               	movf	postdec2,f,c
 14899  0120CC  52DD               	movf	postdec2,f,c
 14900  0120CE  2EE8               	decfsz	wreg,f,c
 14901  0120D0  D7F7               	goto	u5695
 14902                           
 14903                           ;stkvar	_b @ sp[(-13)+-4]
 14904  0120D2  0EF0               	movlw	240
 14905  0120D4  24E1               	addwf	fsr1l,w,c
 14906  0120D6  6ED9               	movwf	fsr2l,c
 14907  0120D8  0EFF               	movlw	255
 14908  0120DA  20E2               	addwfc	fsr1h,w,c
 14909  0120DC  6EDA               	movwf	fsr2h,c
 14910  0120DE  50DF               	movf	indf2,w,c
 14911  0120E0  6E40               	movwf	(btemp+11)^0,c
 14912                           
 14913                           ;stkvar	_a @ sp[(-13)+-8]
 14914  0120E2  0EEB               	movlw	-21
 14915  0120E4  50E3               	movf	plusw1,w,c
 14916  0120E6  0240               	mulwf	(btemp+11)^0,c
 14917                           
 14918                           ;stkvar	_temp @ sp[(-13)+8]
 14919  0120E8  0EFB               	movlw	-5
 14920  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 14921  0120F0  0EFC               	movlw	-4
 14922  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 14923                           
 14924                           ;stkvar	_temp @ sp[(-13)+8]
 14925  0120F8  0EFB               	movlw	-5
 14926  0120FA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14927  012100  0EFC               	movlw	-4
 14928  012102  006F FF8C  F040    	movff	plusw1,btemp+11
 14929                           
 14930                           ;stkvar	_grs @ sp[(-13)+4]
 14931  012108  50E1               	movf	fsr1l,w,c
 14932  01210A  0FF7               	addlw	-9
 14933  01210C  6ED9               	movwf	fsr2l,c
 14934  01210E  50E2               	movf	fsr1h,w,c
 14935  012110  6EDA               	movwf	fsr2h,c
 14936  012112  0EFF               	movlw	255
 14937  012114  22DA               	addwfc	fsr2h,f,c
 14938  012116  503F               	movf	(btemp+10)^0,w,c
 14939  012118  26DE               	addwf	postinc2,f,c
 14940  01211A  5040               	movf	(btemp+11)^0,w,c
 14941  01211C  22DE               	addwfc	postinc2,f,c
 14942  01211E  0E00               	movlw	0
 14943  012120  22DE               	addwfc	postinc2,f,c
 14944  012122  22DE               	addwfc	postinc2,f,c
 14945                           
 14946                           ;stkvar	_b @ sp[(-13)+-4]
 14947  012124  0EEF               	movlw	-17
 14948  012126  006F FF8C  F040    	movff	plusw1,btemp+11
 14949                           
 14950                           ;stkvar	_a @ sp[(-13)+-8]
 14951  01212C  0EEC               	movlw	236
 14952  01212E  24E1               	addwf	fsr1l,w,c
 14953  012130  6ED9               	movwf	fsr2l,c
 14954  012132  0EFF               	movlw	255
 14955  012134  20E2               	addwfc	fsr1h,w,c
 14956  012136  6EDA               	movwf	fsr2h,c
 14957  012138  50DF               	movf	indf2,w,c
 14958  01213A  0240               	mulwf	(btemp+11)^0,c
 14959                           
 14960                           ;stkvar	_temp @ sp[(-13)+8]
 14961  01213C  0EFB               	movlw	-5
 14962  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 14963  012144  0EFC               	movlw	-4
 14964  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 14965                           
 14966                           ;stkvar	_temp @ sp[(-13)+8]
 14967  01214C  0EFB               	movlw	-5
 14968  01214E  006F FF8C  F03F    	movff	plusw1,btemp+10
 14969  012154  0EFC               	movlw	-4
 14970  012156  006F FF8C  F040    	movff	plusw1,btemp+11
 14971                           
 14972                           ;stkvar	_grs @ sp[(-13)+4]
 14973  01215C  50E1               	movf	fsr1l,w,c
 14974  01215E  0FF7               	addlw	-9
 14975  012160  6ED9               	movwf	fsr2l,c
 14976  012162  50E2               	movf	fsr1h,w,c
 14977  012164  6EDA               	movwf	fsr2h,c
 14978  012166  0EFF               	movlw	255
 14979  012168  22DA               	addwfc	fsr2h,f,c
 14980  01216A  503F               	movf	(btemp+10)^0,w,c
 14981  01216C  26DE               	addwf	postinc2,f,c
 14982  01216E  5040               	movf	(btemp+11)^0,w,c
 14983  012170  22DE               	addwfc	postinc2,f,c
 14984  012172  0E00               	movlw	0
 14985  012174  22DE               	addwfc	postinc2,f,c
 14986  012176  22DE               	addwfc	postinc2,f,c
 14987                           
 14988                           ;stkvar	_grs @ sp[(-13)+4]
 14989  012178  50E1               	movf	fsr1l,w,c
 14990  01217A  0FF7               	addlw	-9
 14991  01217C  6ED9               	movwf	fsr2l,c
 14992  01217E  50E2               	movf	fsr1h,w,c
 14993  012180  6EDA               	movwf	fsr2h,c
 14994  012182  0EFF               	movlw	255
 14995  012184  22DA               	addwfc	fsr2h,f,c
 14996  012186  0E08               	movlw	8
 14997  012188                     u5705:
 14998  012188  90D8               	bcf	status,0,c
 14999  01218A  36DE               	rlcf	postinc2,f,c
 15000  01218C  36DE               	rlcf	postinc2,f,c
 15001  01218E  36DE               	rlcf	postinc2,f,c
 15002  012190  36DD               	rlcf	postdec2,f,c
 15003  012192  52DD               	movf	postdec2,f,c
 15004  012194  52DD               	movf	postdec2,f,c
 15005  012196  2EE8               	decfsz	wreg,f,c
 15006  012198  D7F7               	goto	u5705
 15007                           
 15008                           ;stkvar	_b @ sp[(-13)+-4]
 15009  01219A  0EEF               	movlw	-17
 15010  01219C  006F FF8C  F040    	movff	plusw1,btemp+11
 15011                           
 15012                           ;stkvar	_a @ sp[(-13)+-8]
 15013  0121A2  0EEB               	movlw	-21
 15014  0121A4  50E3               	movf	plusw1,w,c
 15015  0121A6  0240               	mulwf	(btemp+11)^0,c
 15016                           
 15017                           ;stkvar	_temp @ sp[(-13)+8]
 15018  0121A8  0EFB               	movlw	-5
 15019  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 15020  0121B0  0EFC               	movlw	-4
 15021  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 15022                           
 15023                           ;stkvar	_temp @ sp[(-13)+8]
 15024  0121B8  0EFB               	movlw	-5
 15025  0121BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 15026  0121C0  0EFC               	movlw	-4
 15027  0121C2  006F FF8C  F040    	movff	plusw1,btemp+11
 15028                           
 15029                           ;stkvar	_grs @ sp[(-13)+4]
 15030  0121C8  50E1               	movf	fsr1l,w,c
 15031  0121CA  0FF7               	addlw	-9
 15032  0121CC  6ED9               	movwf	fsr2l,c
 15033  0121CE  50E2               	movf	fsr1h,w,c
 15034  0121D0  6EDA               	movwf	fsr2h,c
 15035  0121D2  0EFF               	movlw	255
 15036  0121D4  22DA               	addwfc	fsr2h,f,c
 15037  0121D6  503F               	movf	(btemp+10)^0,w,c
 15038  0121D8  26DE               	addwf	postinc2,f,c
 15039  0121DA  5040               	movf	(btemp+11)^0,w,c
 15040  0121DC  22DE               	addwfc	postinc2,f,c
 15041  0121DE  0E00               	movlw	0
 15042  0121E0  22DE               	addwfc	postinc2,f,c
 15043  0121E2  22DE               	addwfc	postinc2,f,c
 15044                           
 15045                           ;stkvar	_b @ sp[(-13)+-4]
 15046  0121E4  0EF0               	movlw	240
 15047  0121E6  24E1               	addwf	fsr1l,w,c
 15048  0121E8  6ED9               	movwf	fsr2l,c
 15049  0121EA  0EFF               	movlw	255
 15050  0121EC  20E2               	addwfc	fsr1h,w,c
 15051  0121EE  6EDA               	movwf	fsr2h,c
 15052  0121F0  50DF               	movf	indf2,w,c
 15053  0121F2  6E40               	movwf	(btemp+11)^0,c
 15054                           
 15055                           ;stkvar	_a @ sp[(-13)+-8]
 15056  0121F4  0EED               	movlw	237
 15057  0121F6  24E1               	addwf	fsr1l,w,c
 15058  0121F8  6ED9               	movwf	fsr2l,c
 15059  0121FA  0EFF               	movlw	255
 15060  0121FC  20E2               	addwfc	fsr1h,w,c
 15061  0121FE  6EDA               	movwf	fsr2h,c
 15062  012200  50DF               	movf	indf2,w,c
 15063  012202  0240               	mulwf	(btemp+11)^0,c
 15064                           
 15065                           ;stkvar	_temp @ sp[(-13)+8]
 15066  012204  0EFB               	movlw	-5
 15067  012206  006F FFCF FFE3     	movff	prodl,plusw1
 15068  01220C  0EFC               	movlw	-4
 15069  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 15070                           
 15071                           ;stkvar	_temp @ sp[(-13)+8]
 15072  012214  0EFB               	movlw	-5
 15073  012216  006F FF8C  F03F    	movff	plusw1,btemp+10
 15074  01221C  0EFC               	movlw	-4
 15075  01221E  006F FF8C  F040    	movff	plusw1,btemp+11
 15076                           
 15077                           ;stkvar	_prod @ sp[(-13)+0]
 15078  012224  50E1               	movf	fsr1l,w,c
 15079  012226  0FF3               	addlw	-13
 15080  012228  6ED9               	movwf	fsr2l,c
 15081  01222A  50E2               	movf	fsr1h,w,c
 15082  01222C  6EDA               	movwf	fsr2h,c
 15083  01222E  0EFF               	movlw	255
 15084  012230  22DA               	addwfc	fsr2h,f,c
 15085  012232  503F               	movf	(btemp+10)^0,w,c
 15086  012234  26DE               	addwf	postinc2,f,c
 15087  012236  5040               	movf	(btemp+11)^0,w,c
 15088  012238  22DE               	addwfc	postinc2,f,c
 15089  01223A  0E00               	movlw	0
 15090  01223C  22DE               	addwfc	postinc2,f,c
 15091  01223E  22DE               	addwfc	postinc2,f,c
 15092                           
 15093                           ;stkvar	_b @ sp[(-13)+-4]
 15094  012240  0EF1               	movlw	241
 15095  012242  24E1               	addwf	fsr1l,w,c
 15096  012244  6ED9               	movwf	fsr2l,c
 15097  012246  0EFF               	movlw	255
 15098  012248  20E2               	addwfc	fsr1h,w,c
 15099  01224A  6EDA               	movwf	fsr2h,c
 15100  01224C  50DF               	movf	indf2,w,c
 15101  01224E  6E40               	movwf	(btemp+11)^0,c
 15102                           
 15103                           ;stkvar	_a @ sp[(-13)+-8]
 15104  012250  0EEC               	movlw	236
 15105  012252  24E1               	addwf	fsr1l,w,c
 15106  012254  6ED9               	movwf	fsr2l,c
 15107  012256  0EFF               	movlw	255
 15108  012258  20E2               	addwfc	fsr1h,w,c
 15109  01225A  6EDA               	movwf	fsr2h,c
 15110  01225C  50DF               	movf	indf2,w,c
 15111  01225E  0240               	mulwf	(btemp+11)^0,c
 15112                           
 15113                           ;stkvar	_temp @ sp[(-13)+8]
 15114  012260  0EFB               	movlw	-5
 15115  012262  006F FFCF FFE3     	movff	prodl,plusw1
 15116  012268  0EFC               	movlw	-4
 15117  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 15118                           
 15119                           ;stkvar	_temp @ sp[(-13)+8]
 15120  012270  0EFB               	movlw	-5
 15121  012272  006F FF8C  F03F    	movff	plusw1,btemp+10
 15122  012278  0EFC               	movlw	-4
 15123  01227A  006F FF8C  F040    	movff	plusw1,btemp+11
 15124                           
 15125                           ;stkvar	_prod @ sp[(-13)+0]
 15126  012280  50E1               	movf	fsr1l,w,c
 15127  012282  0FF3               	addlw	-13
 15128  012284  6ED9               	movwf	fsr2l,c
 15129  012286  50E2               	movf	fsr1h,w,c
 15130  012288  6EDA               	movwf	fsr2h,c
 15131  01228A  0EFF               	movlw	255
 15132  01228C  22DA               	addwfc	fsr2h,f,c
 15133  01228E  503F               	movf	(btemp+10)^0,w,c
 15134  012290  26DE               	addwf	postinc2,f,c
 15135  012292  5040               	movf	(btemp+11)^0,w,c
 15136  012294  22DE               	addwfc	postinc2,f,c
 15137  012296  0E00               	movlw	0
 15138  012298  22DE               	addwfc	postinc2,f,c
 15139  01229A  22DE               	addwfc	postinc2,f,c
 15140                           
 15141                           ;stkvar	_b @ sp[(-13)+-4]
 15142  01229C  0EF1               	movlw	241
 15143  01229E  24E1               	addwf	fsr1l,w,c
 15144  0122A0  6ED9               	movwf	fsr2l,c
 15145  0122A2  0EFF               	movlw	255
 15146  0122A4  20E2               	addwfc	fsr1h,w,c
 15147  0122A6  6EDA               	movwf	fsr2h,c
 15148  0122A8  50DF               	movf	indf2,w,c
 15149  0122AA  6E40               	movwf	(btemp+11)^0,c
 15150                           
 15151                           ;stkvar	_a @ sp[(-13)+-8]
 15152  0122AC  0EED               	movlw	237
 15153  0122AE  24E1               	addwf	fsr1l,w,c
 15154  0122B0  6ED9               	movwf	fsr2l,c
 15155  0122B2  0EFF               	movlw	255
 15156  0122B4  20E2               	addwfc	fsr1h,w,c
 15157  0122B6  6EDA               	movwf	fsr2h,c
 15158  0122B8  50DF               	movf	indf2,w,c
 15159  0122BA  0240               	mulwf	(btemp+11)^0,c
 15160                           
 15161                           ;stkvar	_temp @ sp[(-13)+8]
 15162  0122BC  0EFB               	movlw	-5
 15163  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15164  0122C4  0EFC               	movlw	-4
 15165  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15166                           
 15167                           ;stkvar	_temp @ sp[(-13)+8]
 15168  0122CC  0EFB               	movlw	-5
 15169  0122CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 15170  0122D4  0EFC               	movlw	-4
 15171  0122D6  006F FF8C  F040    	movff	plusw1,btemp+11
 15172  0122DC  503F               	movf	(btemp+10)^0,w,c
 15173  0122DE  6E39               	movwf	(btemp+4)^0,c
 15174  0122E0  5040               	movf	(btemp+11)^0,w,c
 15175  0122E2  6E3A               	movwf	(btemp+5)^0,c
 15176  0122E4  6A3B               	clrf	(btemp+6)^0,c
 15177  0122E6  6A3C               	clrf	(btemp+7)^0,c
 15178  0122E8  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 15179  0122EE  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 15180  0122F4  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 15181  0122FA  6A39               	clrf	(btemp+4)^0,c
 15182                           
 15183                           ;stkvar	_prod @ sp[(-13)+0]
 15184  0122FC  50E1               	movf	fsr1l,w,c
 15185  0122FE  0FF3               	addlw	-13
 15186  012300  6ED9               	movwf	fsr2l,c
 15187  012302  50E2               	movf	fsr1h,w,c
 15188  012304  6EDA               	movwf	fsr2h,c
 15189  012306  0EFF               	movlw	255
 15190  012308  22DA               	addwfc	fsr2h,f,c
 15191  01230A  5039               	movf	(btemp+4)^0,w,c
 15192  01230C  26DE               	addwf	postinc2,f,c
 15193  01230E  503A               	movf	(btemp+5)^0,w,c
 15194  012310  22DE               	addwfc	postinc2,f,c
 15195  012312  503B               	movf	(btemp+6)^0,w,c
 15196  012314  22DE               	addwfc	postinc2,f,c
 15197  012316  503C               	movf	(btemp+7)^0,w,c
 15198  012318  22DE               	addwfc	postinc2,f,c
 15199                           
 15200                           ;stkvar	_prod @ sp[(-13)+0]
 15201  01231A  50E1               	movf	fsr1l,w,c
 15202  01231C  0FF3               	addlw	-13
 15203  01231E  6ED9               	movwf	fsr2l,c
 15204  012320  50E2               	movf	fsr1h,w,c
 15205  012322  6EDA               	movwf	fsr2h,c
 15206  012324  0EFF               	movlw	255
 15207  012326  22DA               	addwfc	fsr2h,f,c
 15208                           
 15209                           ;stkvar	_grs @ sp[(-13)+4]
 15210  012328  0EFA               	movlw	250
 15211  01232A  24E1               	addwf	fsr1l,w,c
 15212  01232C  6EE9               	movwf	fsr0l,c
 15213  01232E  0EFF               	movlw	255
 15214  012330  20E2               	addwfc	fsr1h,w,c
 15215  012332  6EEA               	movwf	fsr0h,c
 15216  012334  50EF               	movf	indf0,w,c
 15217  012336  26DE               	addwf	postinc2,f,c
 15218  012338  0E00               	movlw	0
 15219  01233A  22DE               	addwfc	postinc2,f,c
 15220  01233C  22DE               	addwfc	postinc2,f,c
 15221  01233E  22DE               	addwfc	postinc2,f,c
 15222                           
 15223                           ;stkvar	_grs @ sp[(-13)+4]
 15224  012340  50E1               	movf	fsr1l,w,c
 15225  012342  0FF7               	addlw	-9
 15226  012344  6ED9               	movwf	fsr2l,c
 15227  012346  50E2               	movf	fsr1h,w,c
 15228  012348  6EDA               	movwf	fsr2h,c
 15229  01234A  0EFF               	movlw	255
 15230  01234C  22DA               	addwfc	fsr2h,f,c
 15231  01234E  0E08               	movlw	8
 15232  012350                     u5715:
 15233  012350  90D8               	bcf	status,0,c
 15234  012352  36DE               	rlcf	postinc2,f,c
 15235  012354  36DE               	rlcf	postinc2,f,c
 15236  012356  36DE               	rlcf	postinc2,f,c
 15237  012358  36DD               	rlcf	postdec2,f,c
 15238  01235A  52DD               	movf	postdec2,f,c
 15239  01235C  52DD               	movf	postdec2,f,c
 15240  01235E  2EE8               	decfsz	wreg,f,c
 15241  012360  D7F7               	goto	u5715
 15242  012362  0E82               	movlw	130
 15243  012364  6E3F               	movwf	(btemp+10)^0,c
 15244  012366  0EFF               	movlw	255
 15245  012368  6E40               	movwf	(btemp+11)^0,c
 15246                           
 15247                           ;stkvar	_bexp @ sp[(-13)+10]
 15248  01236A  0EFD               	movlw	-3
 15249  01236C  50E3               	movf	plusw1,w,c
 15250  01236E  6E3D               	movwf	(btemp+8)^0,c
 15251  012370  6A3E               	clrf	(btemp+9)^0,c
 15252                           
 15253                           ;stkvar	_aexp @ sp[(-13)+11]
 15254  012372  0EFE               	movlw	-2
 15255  012374  50E3               	movf	plusw1,w,c
 15256  012376  263D               	addwf	(btemp+8)^0,f,c
 15257  012378  0E00               	movlw	0
 15258  01237A  223E               	addwfc	(btemp+9)^0,f,c
 15259  01237C  503F               	movf	(btemp+10)^0,w,c
 15260  01237E  263D               	addwf	(btemp+8)^0,f,c
 15261  012380  5040               	movf	(btemp+11)^0,w,c
 15262  012382  223E               	addwfc	(btemp+9)^0,f,c
 15263                           
 15264                           ;stkvar	_temp @ sp[(-13)+8]
 15265  012384  0EFB               	movlw	-5
 15266  012386  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15267  01238C  0EFC               	movlw	-4
 15268  01238E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15269  012394  D021               	goto	l6644
 15270  012396                     l6634:
 15271                           
 15272                           ;stkvar	_prod @ sp[(-13)+0]
 15273  012396  90D8               	bcf	status,0,c
 15274  012398  0EF3               	movlw	-13
 15275  01239A  36E3               	rlcf	plusw1,f,c
 15276  01239C  0EF4               	movlw	-12
 15277  01239E  36E3               	rlcf	plusw1,f,c
 15278  0123A0  0EF5               	movlw	-11
 15279  0123A2  36E3               	rlcf	plusw1,f,c
 15280  0123A4  0EF6               	movlw	-10
 15281  0123A6  36E3               	rlcf	plusw1,f,c
 15282                           
 15283                           ;stkvar	_grs @ sp[(-13)+4]
 15284  0123A8  0EFA               	movlw	-6
 15285  0123AA  AEE3               	btfss	plusw1,7,c
 15286  0123AC  D002               	goto	l6640
 15287                           
 15288                           ;stkvar	_prod @ sp[(-13)+0]
 15289  0123AE  0EF3               	movlw	-13
 15290  0123B0  80E3               	bsf	plusw1,0,c
 15291  0123B2                     l6640:
 15292                           
 15293                           ;stkvar	_grs @ sp[(-13)+4]
 15294  0123B2  90D8               	bcf	status,0,c
 15295  0123B4  0EF7               	movlw	-9
 15296  0123B6  36E3               	rlcf	plusw1,f,c
 15297  0123B8  0EF8               	movlw	-8
 15298  0123BA  36E3               	rlcf	plusw1,f,c
 15299  0123BC  0EF9               	movlw	-7
 15300  0123BE  36E3               	rlcf	plusw1,f,c
 15301  0123C0  0EFA               	movlw	-6
 15302  0123C2  36E3               	rlcf	plusw1,f,c
 15303                           
 15304                           ;stkvar	_temp @ sp[(-13)+8]
 15305  0123C4  50E1               	movf	fsr1l,w,c
 15306  0123C6  0FFB               	addlw	-5
 15307  0123C8  6ED9               	movwf	fsr2l,c
 15308  0123CA  50E2               	movf	fsr1h,w,c
 15309  0123CC  6EDA               	movwf	fsr2h,c
 15310  0123CE  0EFF               	movlw	255
 15311  0123D0  22DA               	addwfc	fsr2h,f,c
 15312  0123D2  06DE               	decf	postinc2,f,c
 15313  0123D4  0E00               	movlw	0
 15314  0123D6  5ADD               	subwfb	postdec2,f,c
 15315  0123D8                     l6644:
 15316                           
 15317                           ;stkvar	_prod @ sp[(-13)+0]
 15318  0123D8  0EF5               	movlw	-11
 15319  0123DA  AEE3               	btfss	plusw1,7,c
 15320  0123DC  D7DC               	goto	l6634
 15321                           
 15322                           ;stkvar	_aexp @ sp[(-13)+11]
 15323  0123DE  0EFE               	movlw	-2
 15324  0123E0  6AE3               	clrf	plusw1,c
 15325                           
 15326                           ;stkvar	_grs @ sp[(-13)+4]
 15327  0123E2  0EFA               	movlw	-6
 15328  0123E4  AEE3               	btfss	plusw1,7,c
 15329  0123E6  D020               	goto	l6658
 15330                           
 15331                           ;stkvar	_grs @ sp[(-13)+4]
 15332  0123E8  50E1               	movf	fsr1l,w,c
 15333  0123EA  0FF7               	addlw	-9
 15334  0123EC  6ED9               	movwf	fsr2l,c
 15335  0123EE  50E2               	movf	fsr1h,w,c
 15336  0123F0  6EDA               	movwf	fsr2h,c
 15337  0123F2  0EFF               	movlw	255
 15338  0123F4  22DA               	addwfc	fsr2h,f,c
 15339  0123F6  0EFF               	movlw	255
 15340  0123F8  14DE               	andwf	postinc2,w,c
 15341  0123FA  6E3D               	movwf	(btemp+8)^0,c
 15342  0123FC  0EFF               	movlw	255
 15343  0123FE  14DE               	andwf	postinc2,w,c
 15344  012400  6E3E               	movwf	(btemp+9)^0,c
 15345  012402  0EFF               	movlw	255
 15346  012404  14DE               	andwf	postinc2,w,c
 15347  012406  6E3F               	movwf	(btemp+10)^0,c
 15348  012408  0E7F               	movlw	127
 15349  01240A  14DE               	andwf	postinc2,w,c
 15350  01240C  6E40               	movwf	(btemp+11)^0,c
 15351  01240E  503D               	movf	(btemp+8)^0,w,c
 15352  012410  103E               	iorwf	(btemp+9)^0,w,c
 15353  012412  103F               	iorwf	(btemp+10)^0,w,c
 15354  012414  1040               	iorwf	(btemp+11)^0,w,c
 15355  012416  B4D8               	btfsc	status,2,c
 15356  012418  D004               	goto	l6654
 15357  01241A                     u5750:
 15358                           
 15359                           ;stkvar	_aexp @ sp[(-13)+11]
 15360  01241A  0EFE               	movlw	-2
 15361  01241C  6AE3               	clrf	plusw1,c
 15362  01241E  2AE3               	incf	plusw1,f,c
 15363  012420  D003               	goto	l6658
 15364  012422                     l6654:
 15365                           
 15366                           ;stkvar	_prod @ sp[(-13)+0]
 15367  012422  0EF3               	movlw	-13
 15368  012424  B0E3               	btfsc	plusw1,0,c
 15369  012426  D7F9               	goto	u5750
 15370  012428                     l6658:
 15371                           
 15372                           ;stkvar	_aexp @ sp[(-13)+11]
 15373  012428  0EFE               	movlw	-2
 15374  01242A  50E3               	movf	plusw1,w,c
 15375  01242C  B4D8               	btfsc	status,2,c
 15376  01242E  D036               	goto	l6668
 15377                           
 15378                           ;stkvar	_prod @ sp[(-13)+0]
 15379  012430  50E1               	movf	fsr1l,w,c
 15380  012432  0FF3               	addlw	-13
 15381  012434  6ED9               	movwf	fsr2l,c
 15382  012436  50E2               	movf	fsr1h,w,c
 15383  012438  6EDA               	movwf	fsr2h,c
 15384  01243A  0EFF               	movlw	255
 15385  01243C  22DA               	addwfc	fsr2h,f,c
 15386  01243E  2ADE               	incf	postinc2,f,c
 15387  012440  0E00               	movlw	0
 15388  012442  22DE               	addwfc	postinc2,f,c
 15389  012444  22DE               	addwfc	postinc2,f,c
 15390  012446  22DE               	addwfc	postinc2,f,c
 15391                           
 15392                           ;stkvar	_prod @ sp[(-13)+0]
 15393  012448  0EF6               	movlw	-10
 15394  01244A  A0E3               	btfss	plusw1,0,c
 15395  01244C  D027               	goto	l6668
 15396  01244E  0E01               	movlw	1
 15397  012450  6E40               	movwf	(btemp+11)^0,c
 15398                           
 15399                           ;stkvar	_prod @ sp[(-13)+0]
 15400  012452  50E1               	movf	fsr1l,w,c
 15401  012454  0FF3               	addlw	-13
 15402  012456  6ED9               	movwf	fsr2l,c
 15403  012458  50E2               	movf	fsr1h,w,c
 15404  01245A  6EDA               	movwf	fsr2h,c
 15405  01245C  0EFF               	movlw	255
 15406  01245E  22DA               	addwfc	fsr2h,f,c
 15407  012460  2840               	incf	(btemp+11)^0,w,c
 15408  012462  52DE               	movf	postinc2,f,c
 15409  012464  D008               	goto	u5790
 15410  012466                     u5795:
 15411  012466  52DE               	movf	postinc2,f,c
 15412  012468  90D8               	bcf	status,0,c
 15413  01246A  BEDC               	btfsc	preinc2,7,c
 15414  01246C  80D8               	bsf	status,0,c
 15415  01246E  32DD               	rrcf	postdec2,f,c
 15416  012470  32DD               	rrcf	postdec2,f,c
 15417  012472  32DD               	rrcf	postdec2,f,c
 15418  012474  32DE               	rrcf	postinc2,f,c
 15419  012476                     u5790:
 15420  012476  2EE8               	decfsz	wreg,f,c
 15421  012478  D7F6               	goto	u5795
 15422                           
 15423                           ;stkvar	_temp @ sp[(-13)+8]
 15424  01247A  0EFB               	movlw	-5
 15425  01247C  50E3               	movf	plusw1,w,c
 15426  01247E  0F01               	addlw	1
 15427  012480  6E35               	movwf	btemp^0,c
 15428  012482  0EFB               	movlw	-5
 15429  012484  0060  F0D7  FFE3   	movff	btemp,plusw1
 15430  01248A  6A35               	clrf	btemp^0,c
 15431  01248C  0EFC               	movlw	-4
 15432  01248E  50E3               	movf	plusw1,w,c
 15433  012490  2035               	addwfc	btemp^0,w,c
 15434  012492  6E35               	movwf	btemp^0,c
 15435  012494  0EFC               	movlw	-4
 15436  012496  0060  F0D7  FFE3   	movff	btemp,plusw1
 15437  01249C                     l6668:
 15438                           
 15439                           ;stkvar	_temp @ sp[(-13)+8]
 15440  01249C  0EFC               	movlw	-4
 15441  01249E  BEE3               	btfsc	plusw1,7,c
 15442  0124A0  D020               	goto	l6672
 15443  0124A2  0EFC               	movlw	-4
 15444  0124A4  50E3               	movf	plusw1,w,c
 15445  0124A6  E104               	bnz	u5800
 15446  0124A8  0EFB               	movlw	-5
 15447  0124AA  28E3               	incf	plusw1,w,c
 15448  0124AC  A0D8               	btfss	status,0,c
 15449  0124AE  D019               	goto	l6672
 15450  0124B0                     u5800:
 15451  0124B0  0E00               	movlw	0
 15452  0124B2  6E3D               	movwf	(btemp+8)^0,c
 15453  0124B4  0E00               	movlw	0
 15454  0124B6  6E3E               	movwf	(btemp+9)^0,c
 15455  0124B8  0E80               	movlw	128
 15456  0124BA  6E3F               	movwf	(btemp+10)^0,c
 15457  0124BC  0E7F               	movlw	127
 15458  0124BE  6E40               	movwf	(btemp+11)^0,c
 15459                           
 15460                           ;stkvar	_prod @ sp[(-13)+0]
 15461  0124C0  0EF3               	movlw	-13
 15462  0124C2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15463  0124C8  0EF4               	movlw	-12
 15464  0124CA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15465  0124D0  0EF5               	movlw	-11
 15466  0124D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15467  0124D8  0EF6               	movlw	-10
 15468  0124DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 15469  0124E0  D044               	goto	l6688
 15470  0124E2                     l6672:
 15471                           
 15472                           ;stkvar	_temp @ sp[(-13)+8]
 15473  0124E2  0EFC               	movlw	-4
 15474  0124E4  BEE3               	btfsc	plusw1,7,c
 15475  0124E6  D007               	goto	u5810
 15476  0124E8  0EFC               	movlw	-4
 15477  0124EA  50E3               	movf	plusw1,w,c
 15478  0124EC  E10F               	bnz	l6678
 15479  0124EE  0EFB               	movlw	-5
 15480  0124F0  04E3               	decf	plusw1,w,c
 15481  0124F2  B0D8               	btfsc	status,0,c
 15482  0124F4  D00B               	goto	l6678
 15483  0124F6                     u5810:
 15484                           
 15485                           ;stkvar	_prod @ sp[(-13)+0]
 15486  0124F6  0EF3               	movlw	-13
 15487  0124F8  6AE3               	clrf	plusw1,c
 15488  0124FA  0EF4               	movlw	-12
 15489  0124FC  6AE3               	clrf	plusw1,c
 15490  0124FE  0EF5               	movlw	-11
 15491  012500  6AE3               	clrf	plusw1,c
 15492  012502  0EF6               	movlw	-10
 15493  012504  6AE3               	clrf	plusw1,c
 15494                           
 15495                           ;stkvar	_sign @ sp[(-13)+12]
 15496  012506  0EFF               	movlw	-1
 15497  012508  6AE3               	clrf	plusw1,c
 15498  01250A  D02F               	goto	l6688
 15499  01250C                     l6678:
 15500                           
 15501                           ;stkvar	_temp @ sp[(-13)+8]
 15502                           ;stkvar	_bexp @ sp[(-13)+10]
 15503  01250C  0EFB               	movlw	-5
 15504  01250E  006F FF8C  F035    	movff	plusw1,btemp
 15505  012514  0EFD               	movlw	-3
 15506  012516  0060  F0D7  FFE3   	movff	btemp,plusw1
 15507                           
 15508                           ;stkvar	_prod @ sp[(-13)+0]
 15509  01251C  50E1               	movf	fsr1l,w,c
 15510  01251E  0FF3               	addlw	-13
 15511  012520  6ED9               	movwf	fsr2l,c
 15512  012522  50E2               	movf	fsr1h,w,c
 15513  012524  6EDA               	movwf	fsr2h,c
 15514  012526  0EFF               	movlw	255
 15515  012528  22DA               	addwfc	fsr2h,f,c
 15516  01252A  0EFF               	movlw	255
 15517  01252C  16DE               	andwf	postinc2,f,c
 15518  01252E  0EFF               	movlw	255
 15519  012530  16DE               	andwf	postinc2,f,c
 15520  012532  0E7F               	movlw	127
 15521  012534  16DE               	andwf	postinc2,f,c
 15522  012536  0E00               	movlw	0
 15523  012538  16DE               	andwf	postinc2,f,c
 15524                           
 15525                           ;stkvar	_bexp @ sp[(-13)+10]
 15526  01253A  0EFD               	movlw	-3
 15527  01253C  A0E3               	btfss	plusw1,0,c
 15528  01253E  D008               	goto	l6686
 15529                           
 15530                           ;stkvar	_prod @ sp[(-13)+0]
 15531  012540  0EF5               	movlw	245
 15532  012542  24E1               	addwf	fsr1l,w,c
 15533  012544  6ED9               	movwf	fsr2l,c
 15534  012546  0EFF               	movlw	255
 15535  012548  20E2               	addwfc	fsr1h,w,c
 15536  01254A  6EDA               	movwf	fsr2h,c
 15537  01254C  0E00               	movlw	0
 15538  01254E  8EDB               	bsf	plusw2,7,c
 15539  012550                     l6686:
 15540                           
 15541                           ;stkvar	_prod @ sp[(-13)+0]
 15542  012550  0EF6               	movlw	246
 15543  012552  24E1               	addwf	fsr1l,w,c
 15544  012554  6ED9               	movwf	fsr2l,c
 15545  012556  0EFF               	movlw	255
 15546  012558  20E2               	addwfc	fsr1h,w,c
 15547  01255A  6EDA               	movwf	fsr2h,c
 15548                           
 15549                           ;stkvar	_bexp @ sp[(-13)+10]
 15550  01255C  0EFD               	movlw	-3
 15551  01255E  006F FF8C  F040    	movff	plusw1,btemp+11
 15552  012564  90D8               	bcf	status,0,c
 15553  012566  3040               	rrcf	(btemp+11)^0,w,c
 15554  012568  6EDF               	movwf	indf2,c
 15555  01256A                     l6688:
 15556                           
 15557                           ;stkvar	_sign @ sp[(-13)+12]
 15558  01256A  0EFF               	movlw	-1
 15559  01256C  006F FF8C  F040    	movff	plusw1,btemp+11
 15560                           
 15561                           ;stkvar	_prod @ sp[(-13)+0]
 15562  012572  0EF6               	movlw	246
 15563  012574  24E1               	addwf	fsr1l,w,c
 15564  012576  6ED9               	movwf	fsr2l,c
 15565  012578  0EFF               	movlw	255
 15566  01257A  20E2               	addwfc	fsr1h,w,c
 15567  01257C  6EDA               	movwf	fsr2h,c
 15568  01257E  5040               	movf	(btemp+11)^0,w,c
 15569  012580  12DF               	iorwf	indf2,f,c
 15570                           
 15571                           ;stkvar	_prod @ sp[(-13)+0]
 15572  012582  0EF3               	movlw	-13
 15573  012584  006F FF8C  F035    	movff	plusw1,btemp
 15574  01258A  0EF4               	movlw	-12
 15575  01258C  006F FF8C  F036    	movff	plusw1,btemp+1
 15576  012592  0EF5               	movlw	-11
 15577  012594  006F FF8C  F037    	movff	plusw1,btemp+2
 15578  01259A  0EF6               	movlw	-10
 15579  01259C  006F FF8C  F038    	movff	plusw1,btemp+3
 15580  0125A2                     l2589:
 15581                           
 15582                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15583  0125A2  0EEB               	movlw	235
 15584  0125A4  26E1               	addwf	fsr1l,f,c
 15585  0125A6  0EFF               	movlw	255
 15586  0125A8  22E2               	addwfc	fsr1h,f,c
 15587  0125AA  0012               	return		;funcret
 15588  0125AC                     __end_of___flmul:
 15589                           	opt callstack 0
 15590                           
 15591 ;; *************** function ___flge *****************
 15592 ;; Defined at:
 15593 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15594 ;; Parameters:    Size  Location     Type
 15595 ;;  ff1             4  [STACK] unsigned char 
 15596 ;;  ff2             4  [STACK] unsigned char 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;		None
 15599 ;; Return value:  Size  Location     Type
 15600 ;;		None               void
 15601 ;; Registers used:
 15602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15603 ;; Tracked objects:
 15604 ;;		On entry : 0/4
 15605 ;;		On exit  : 0/0
 15606 ;;		Unchanged: 0/0
 15607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15612 ;;Total ram usage:        0 bytes
 15613 ;; Hardware stack levels used:    1
 15614 ;; Hardware stack levels required when called:    6
 15615 ;; This function calls:
 15616 ;;		Nothing
 15617 ;; This function is called by:
 15618 ;;		_efgtoa
 15619 ;; This function uses a reentrant model
 15620 ;;
 15621                           
 15622                           	psect	text51
 15623  0160FE                     __ptext51:
 15624                           	opt callstack 0
 15625  0160FE                     ___flge:
 15626                           	opt callstack 17
 15627                           
 15628                           ;stkvar	_ff1 @ sp[(0)+-4]
 15629                           
 15630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15631                           ;incstack = 0
 15632  0160FE  50E1               	movf	fsr1l,w,c
 15633  016100  0FFC               	addlw	-4
 15634  016102  6ED9               	movwf	fsr2l,c
 15635  016104  50E2               	movf	fsr1h,w,c
 15636  016106  6EDA               	movwf	fsr2h,c
 15637  016108  0EFF               	movlw	255
 15638  01610A  22DA               	addwfc	fsr2h,f,c
 15639  01610C  0E00               	movlw	0
 15640  01610E  14DE               	andwf	postinc2,w,c
 15641  016110  6E3D               	movwf	(btemp+8)^0,c
 15642  016112  0E00               	movlw	0
 15643  016114  14DE               	andwf	postinc2,w,c
 15644  016116  6E3E               	movwf	(btemp+9)^0,c
 15645  016118  0E80               	movlw	128
 15646  01611A  14DE               	andwf	postinc2,w,c
 15647  01611C  6E3F               	movwf	(btemp+10)^0,c
 15648  01611E  0E7F               	movlw	127
 15649  016120  14DE               	andwf	postinc2,w,c
 15650  016122  6E40               	movwf	(btemp+11)^0,c
 15651  016124  503D               	movf	(btemp+8)^0,w,c
 15652  016126  103E               	iorwf	(btemp+9)^0,w,c
 15653  016128  103F               	iorwf	(btemp+10)^0,w,c
 15654  01612A  1040               	iorwf	(btemp+11)^0,w,c
 15655  01612C  A4D8               	btfss	status,2,c
 15656  01612E  D008               	goto	l6804
 15657                           
 15658                           ;stkvar	_ff1 @ sp[(0)+-4]
 15659  016130  0EFC               	movlw	-4
 15660  016132  6AE3               	clrf	plusw1,c
 15661  016134  0EFD               	movlw	-3
 15662  016136  6AE3               	clrf	plusw1,c
 15663  016138  0EFE               	movlw	-2
 15664  01613A  6AE3               	clrf	plusw1,c
 15665  01613C  0EFF               	movlw	-1
 15666  01613E  6AE3               	clrf	plusw1,c
 15667  016140                     l6804:
 15668                           
 15669                           ;stkvar	_ff2 @ sp[(0)+-8]
 15670  016140  50E1               	movf	fsr1l,w,c
 15671  016142  0FF8               	addlw	-8
 15672  016144  6ED9               	movwf	fsr2l,c
 15673  016146  50E2               	movf	fsr1h,w,c
 15674  016148  6EDA               	movwf	fsr2h,c
 15675  01614A  0EFF               	movlw	255
 15676  01614C  22DA               	addwfc	fsr2h,f,c
 15677  01614E  0E00               	movlw	0
 15678  016150  14DE               	andwf	postinc2,w,c
 15679  016152  6E3D               	movwf	(btemp+8)^0,c
 15680  016154  0E00               	movlw	0
 15681  016156  14DE               	andwf	postinc2,w,c
 15682  016158  6E3E               	movwf	(btemp+9)^0,c
 15683  01615A  0E80               	movlw	128
 15684  01615C  14DE               	andwf	postinc2,w,c
 15685  01615E  6E3F               	movwf	(btemp+10)^0,c
 15686  016160  0E7F               	movlw	127
 15687  016162  14DE               	andwf	postinc2,w,c
 15688  016164  6E40               	movwf	(btemp+11)^0,c
 15689  016166  503D               	movf	(btemp+8)^0,w,c
 15690  016168  103E               	iorwf	(btemp+9)^0,w,c
 15691  01616A  103F               	iorwf	(btemp+10)^0,w,c
 15692  01616C  1040               	iorwf	(btemp+11)^0,w,c
 15693  01616E  A4D8               	btfss	status,2,c
 15694  016170  D008               	goto	l2234
 15695                           
 15696                           ;stkvar	_ff2 @ sp[(0)+-8]
 15697  016172  0EF8               	movlw	-8
 15698  016174  6AE3               	clrf	plusw1,c
 15699  016176  0EF9               	movlw	-7
 15700  016178  6AE3               	clrf	plusw1,c
 15701  01617A  0EFA               	movlw	-6
 15702  01617C  6AE3               	clrf	plusw1,c
 15703  01617E  0EFB               	movlw	-5
 15704  016180  6AE3               	clrf	plusw1,c
 15705  016182                     l2234:
 15706                           
 15707                           ;stkvar	_ff1 @ sp[(0)+-4]
 15708  016182  0EFF               	movlw	-1
 15709  016184  AEE3               	btfss	plusw1,7,c
 15710  016186  D024               	goto	l6810
 15711                           
 15712                           ;stkvar	_ff1 @ sp[(0)+-4]
 15713  016188  0E00               	movlw	0
 15714  01618A  6E3D               	movwf	(btemp+8)^0,c
 15715  01618C  0E00               	movlw	0
 15716  01618E  6E3E               	movwf	(btemp+9)^0,c
 15717  016190  0E00               	movlw	0
 15718  016192  6E3F               	movwf	(btemp+10)^0,c
 15719  016194  0E80               	movlw	128
 15720  016196  6E40               	movwf	(btemp+11)^0,c
 15721  016198  0EFC               	movlw	-4
 15722  01619A  50E3               	movf	plusw1,w,c
 15723  01619C  5E3D               	subwf	(btemp+8)^0,f,c
 15724  01619E  0EFD               	movlw	-3
 15725  0161A0  50E3               	movf	plusw1,w,c
 15726  0161A2  5A3E               	subwfb	(btemp+9)^0,f,c
 15727  0161A4  0EFE               	movlw	-2
 15728  0161A6  50E3               	movf	plusw1,w,c
 15729  0161A8  5A3F               	subwfb	(btemp+10)^0,f,c
 15730  0161AA  0EFF               	movlw	-1
 15731  0161AC  50E3               	movf	plusw1,w,c
 15732  0161AE  5A40               	subwfb	(btemp+11)^0,f,c
 15733                           
 15734                           ;stkvar	_ff1 @ sp[(0)+-4]
 15735  0161B0  0EFC               	movlw	-4
 15736  0161B2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15737  0161B8  0EFD               	movlw	-3
 15738  0161BA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15739  0161C0  0EFE               	movlw	-2
 15740  0161C2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15741  0161C8  0EFF               	movlw	-1
 15742  0161CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 15743  0161D0                     l6810:
 15744                           
 15745                           ;stkvar	_ff2 @ sp[(0)+-8]
 15746  0161D0  0EFB               	movlw	-5
 15747  0161D2  AEE3               	btfss	plusw1,7,c
 15748  0161D4  D024               	goto	l6814
 15749                           
 15750                           ;stkvar	_ff2 @ sp[(0)+-8]
 15751  0161D6  0E00               	movlw	0
 15752  0161D8  6E3D               	movwf	(btemp+8)^0,c
 15753  0161DA  0E00               	movlw	0
 15754  0161DC  6E3E               	movwf	(btemp+9)^0,c
 15755  0161DE  0E00               	movlw	0
 15756  0161E0  6E3F               	movwf	(btemp+10)^0,c
 15757  0161E2  0E80               	movlw	128
 15758  0161E4  6E40               	movwf	(btemp+11)^0,c
 15759  0161E6  0EF8               	movlw	-8
 15760  0161E8  50E3               	movf	plusw1,w,c
 15761  0161EA  5E3D               	subwf	(btemp+8)^0,f,c
 15762  0161EC  0EF9               	movlw	-7
 15763  0161EE  50E3               	movf	plusw1,w,c
 15764  0161F0  5A3E               	subwfb	(btemp+9)^0,f,c
 15765  0161F2  0EFA               	movlw	-6
 15766  0161F4  50E3               	movf	plusw1,w,c
 15767  0161F6  5A3F               	subwfb	(btemp+10)^0,f,c
 15768  0161F8  0EFB               	movlw	-5
 15769  0161FA  50E3               	movf	plusw1,w,c
 15770  0161FC  5A40               	subwfb	(btemp+11)^0,f,c
 15771                           
 15772                           ;stkvar	_ff2 @ sp[(0)+-8]
 15773  0161FE  0EF8               	movlw	-8
 15774  016200  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15775  016206  0EF9               	movlw	-7
 15776  016208  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15777  01620E  0EFA               	movlw	-6
 15778  016210  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15779  016216  0EFB               	movlw	-5
 15780  016218  0060  F103  FFE3   	movff	btemp+11,plusw1
 15781  01621E                     l6814:
 15782                           
 15783                           ;stkvar	_ff1 @ sp[(0)+-4]
 15784  01621E  0EFF               	movlw	-1
 15785  016220  7EE3               	btg	plusw1,7,c
 15786                           
 15787                           ;stkvar	_ff2 @ sp[(0)+-8]
 15788  016222  0EFB               	movlw	-5
 15789  016224  7EE3               	btg	plusw1,7,c
 15790                           
 15791                           ;stkvar	_ff2 @ sp[(0)+-8]
 15792                           ;stkvar	_ff1 @ sp[(0)+-4]
 15793  016226  50E1               	movf	fsr1l,w,c
 15794  016228  0FFC               	addlw	-4
 15795  01622A  6ED9               	movwf	fsr2l,c
 15796  01622C  50E2               	movf	fsr1h,w,c
 15797  01622E  6EDA               	movwf	fsr2h,c
 15798  016230  0EFF               	movlw	255
 15799  016232  22DA               	addwfc	fsr2h,f,c
 15800  016234  0EF8               	movlw	-8
 15801  016236  50E3               	movf	plusw1,w,c
 15802  016238  5CDE               	subwf	postinc2,w,c
 15803  01623A  0EF9               	movlw	-7
 15804  01623C  50E3               	movf	plusw1,w,c
 15805  01623E  58DE               	subwfb	postinc2,w,c
 15806  016240  0EFA               	movlw	-6
 15807  016242  50E3               	movf	plusw1,w,c
 15808  016244  58DE               	subwfb	postinc2,w,c
 15809  016246  0EFB               	movlw	-5
 15810  016248  50E3               	movf	plusw1,w,c
 15811  01624A  58DE               	subwfb	postinc2,w,c
 15812  01624C  B0D8               	btfsc	status,0,c
 15813  01624E  D002               	goto	l6822
 15814  016250  9035               	bcf	btemp& (0+255),0,c
 15815  016252  D001               	goto	l2241
 15816  016254                     l6822:
 15817  016254  8035               	bsf	btemp& (0+255),0,c
 15818  016256                     l2241:
 15819                           
 15820                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15821  016256  0EF8               	movlw	248
 15822  016258  26E1               	addwf	fsr1l,f,c
 15823  01625A  0EFF               	movlw	255
 15824  01625C  22E2               	addwfc	fsr1h,f,c
 15825  01625E  0012               	return		;funcret
 15826  016260                     __end_of___flge:
 15827                           	opt callstack 0
 15828                           
 15829 ;; *************** function ___fleq *****************
 15830 ;; Defined at:
 15831 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15832 ;; Parameters:    Size  Location     Type
 15833 ;;  ff1             4  [STACK] unsigned char 
 15834 ;;  ff2             4  [STACK] unsigned char 
 15835 ;; Auto vars:     Size  Location     Type
 15836 ;;		None
 15837 ;; Return value:  Size  Location     Type
 15838 ;;		None               void
 15839 ;; Registers used:
 15840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15841 ;; Tracked objects:
 15842 ;;		On entry : 0/4
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15850 ;;Total ram usage:        0 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; Hardware stack levels required when called:    6
 15853 ;; This function calls:
 15854 ;;		Nothing
 15855 ;; This function is called by:
 15856 ;;		_efgtoa
 15857 ;; This function uses a reentrant model
 15858 ;;
 15859                           
 15860                           	psect	text52
 15861  016CC8                     __ptext52:
 15862                           	opt callstack 0
 15863  016CC8                     ___fleq:
 15864                           	opt callstack 17
 15865                           
 15866                           ;stkvar	_ff1 @ sp[(0)+-4]
 15867                           
 15868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15869                           ;incstack = 0
 15870  016CC8  50E1               	movf	fsr1l,w,c
 15871  016CCA  0FFC               	addlw	-4
 15872  016CCC  6ED9               	movwf	fsr2l,c
 15873  016CCE  50E2               	movf	fsr1h,w,c
 15874  016CD0  6EDA               	movwf	fsr2h,c
 15875  016CD2  0EFF               	movlw	255
 15876  016CD4  22DA               	addwfc	fsr2h,f,c
 15877  016CD6  0E00               	movlw	0
 15878  016CD8  14DE               	andwf	postinc2,w,c
 15879  016CDA  6E3D               	movwf	(btemp+8)^0,c
 15880  016CDC  0E00               	movlw	0
 15881  016CDE  14DE               	andwf	postinc2,w,c
 15882  016CE0  6E3E               	movwf	(btemp+9)^0,c
 15883  016CE2  0E80               	movlw	128
 15884  016CE4  14DE               	andwf	postinc2,w,c
 15885  016CE6  6E3F               	movwf	(btemp+10)^0,c
 15886  016CE8  0E7F               	movlw	127
 15887  016CEA  14DE               	andwf	postinc2,w,c
 15888  016CEC  6E40               	movwf	(btemp+11)^0,c
 15889  016CEE  503D               	movf	(btemp+8)^0,w,c
 15890  016CF0  103E               	iorwf	(btemp+9)^0,w,c
 15891  016CF2  103F               	iorwf	(btemp+10)^0,w,c
 15892  016CF4  1040               	iorwf	(btemp+11)^0,w,c
 15893  016CF6  A4D8               	btfss	status,2,c
 15894  016CF8  D008               	goto	l6788
 15895                           
 15896                           ;stkvar	_ff1 @ sp[(0)+-4]
 15897  016CFA  0EFC               	movlw	-4
 15898  016CFC  6AE3               	clrf	plusw1,c
 15899  016CFE  0EFD               	movlw	-3
 15900  016D00  6AE3               	clrf	plusw1,c
 15901  016D02  0EFE               	movlw	-2
 15902  016D04  6AE3               	clrf	plusw1,c
 15903  016D06  0EFF               	movlw	-1
 15904  016D08  6AE3               	clrf	plusw1,c
 15905  016D0A                     l6788:
 15906                           
 15907                           ;stkvar	_ff2 @ sp[(0)+-8]
 15908  016D0A  50E1               	movf	fsr1l,w,c
 15909  016D0C  0FF8               	addlw	-8
 15910  016D0E  6ED9               	movwf	fsr2l,c
 15911  016D10  50E2               	movf	fsr1h,w,c
 15912  016D12  6EDA               	movwf	fsr2h,c
 15913  016D14  0EFF               	movlw	255
 15914  016D16  22DA               	addwfc	fsr2h,f,c
 15915  016D18  0E00               	movlw	0
 15916  016D1A  14DE               	andwf	postinc2,w,c
 15917  016D1C  6E3D               	movwf	(btemp+8)^0,c
 15918  016D1E  0E00               	movlw	0
 15919  016D20  14DE               	andwf	postinc2,w,c
 15920  016D22  6E3E               	movwf	(btemp+9)^0,c
 15921  016D24  0E80               	movlw	128
 15922  016D26  14DE               	andwf	postinc2,w,c
 15923  016D28  6E3F               	movwf	(btemp+10)^0,c
 15924  016D2A  0E7F               	movlw	127
 15925  016D2C  14DE               	andwf	postinc2,w,c
 15926  016D2E  6E40               	movwf	(btemp+11)^0,c
 15927  016D30  503D               	movf	(btemp+8)^0,w,c
 15928  016D32  103E               	iorwf	(btemp+9)^0,w,c
 15929  016D34  103F               	iorwf	(btemp+10)^0,w,c
 15930  016D36  1040               	iorwf	(btemp+11)^0,w,c
 15931  016D38  A4D8               	btfss	status,2,c
 15932  016D3A  D008               	goto	l6792
 15933                           
 15934                           ;stkvar	_ff2 @ sp[(0)+-8]
 15935  016D3C  0EF8               	movlw	-8
 15936  016D3E  6AE3               	clrf	plusw1,c
 15937  016D40  0EF9               	movlw	-7
 15938  016D42  6AE3               	clrf	plusw1,c
 15939  016D44  0EFA               	movlw	-6
 15940  016D46  6AE3               	clrf	plusw1,c
 15941  016D48  0EFB               	movlw	-5
 15942  016D4A  6AE3               	clrf	plusw1,c
 15943  016D4C                     l6792:
 15944                           
 15945                           ;stkvar	_ff2 @ sp[(0)+-8]
 15946                           ;stkvar	_ff1 @ sp[(0)+-4]
 15947  016D4C  50E1               	movf	fsr1l,w,c
 15948  016D4E  0FFC               	addlw	-4
 15949  016D50  6ED9               	movwf	fsr2l,c
 15950  016D52  50E2               	movf	fsr1h,w,c
 15951  016D54  6EDA               	movwf	fsr2h,c
 15952  016D56  0EFF               	movlw	255
 15953  016D58  22DA               	addwfc	fsr2h,f,c
 15954  016D5A  0EF8               	movlw	-8
 15955  016D5C  50E3               	movf	plusw1,w,c
 15956  016D5E  18DE               	xorwf	postinc2,w,c
 15957  016D60  E10D               	bnz	u5990
 15958  016D62  0EF9               	movlw	-7
 15959  016D64  50E3               	movf	plusw1,w,c
 15960  016D66  18DE               	xorwf	postinc2,w,c
 15961  016D68  E109               	bnz	u5990
 15962  016D6A  0EFA               	movlw	-6
 15963  016D6C  50E3               	movf	plusw1,w,c
 15964  016D6E  18DE               	xorwf	postinc2,w,c
 15965  016D70  E105               	bnz	u5990
 15966  016D72  0EFB               	movlw	-5
 15967  016D74  50E3               	movf	plusw1,w,c
 15968  016D76  18DE               	xorwf	postinc2,w,c
 15969  016D78  B4D8               	btfsc	status,2,c
 15970  016D7A  D002               	goto	l6796
 15971  016D7C                     u5990:
 15972  016D7C  9035               	bcf	btemp& (0+255),0,c
 15973  016D7E  D001               	goto	l2230
 15974  016D80                     l6796:
 15975  016D80  8035               	bsf	btemp& (0+255),0,c
 15976  016D82                     l2230:
 15977                           
 15978                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15979  016D82  0EF8               	movlw	248
 15980  016D84  26E1               	addwf	fsr1l,f,c
 15981  016D86  0EFF               	movlw	255
 15982  016D88  22E2               	addwfc	fsr1h,f,c
 15983  016D8A  0012               	return		;funcret
 15984  016D8C                     __end_of___fleq:
 15985                           	opt callstack 0
 15986                           
 15987 ;; *************** function ___fldiv *****************
 15988 ;; Defined at:
 15989 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15990 ;; Parameters:    Size  Location     Type
 15991 ;;  b               4  [STACK] unsigned char 
 15992 ;;  a               4  [STACK] unsigned char 
 15993 ;; Auto vars:     Size  Location     Type
 15994 ;;  grs             4  [STACK] unsigned long 
 15995 ;;  rem             4  [STACK] unsigned long 
 15996 ;;  new_exp         2  [STACK] short 
 15997 ;;  aexp            1  [STACK] unsigned char 
 15998 ;;  bexp            1  [STACK] unsigned char 
 15999 ;;  sign            1  [STACK] unsigned char 
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  4  [STACK] unsigned char 
 16002 ;; Registers used:
 16003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16013 ;;Total ram usage:        0 bytes
 16014 ;; Hardware stack levels used:    1
 16015 ;; Hardware stack levels required when called:    6
 16016 ;; This function calls:
 16017 ;;		Nothing
 16018 ;; This function is called by:
 16019 ;;		_conv_raw_result
 16020 ;;		_lp_filter
 16021 ;;		_efgtoa
 16022 ;; This function uses a reentrant model
 16023 ;;
 16024                           
 16025                           	psect	text53
 16026  0133AE                     __ptext53:
 16027                           	opt callstack 0
 16028  0133AE                     ___fldiv:
 16029                           	opt callstack 0
 16030                           
 16031                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16032  0133AE  0E0D               	movlw	13
 16033  0133B0  26E1               	addwf	fsr1l,f,c
 16034  0133B2  0E00               	movlw	0
 16035  0133B4  22E2               	addwfc	fsr1h,f,c
 16036                           
 16037                           ;stkvar	_b @ sp[(-13)+-4]
 16038                           
 16039                           ;incstack = 0
 16040  0133B6  0EF2               	movlw	242
 16041  0133B8  24E1               	addwf	fsr1l,w,c
 16042  0133BA  6ED9               	movwf	fsr2l,c
 16043  0133BC  0EFF               	movlw	255
 16044  0133BE  20E2               	addwfc	fsr1h,w,c
 16045  0133C0  6EDA               	movwf	fsr2h,c
 16046  0133C2  50DF               	movf	indf2,w,c
 16047  0133C4  6E40               	movwf	(btemp+11)^0,c
 16048  0133C6  0E80               	movlw	128
 16049  0133C8  1640               	andwf	(btemp+11)^0,f,c
 16050                           
 16051                           ;stkvar	_sign @ sp[(-13)+12]
 16052  0133CA  0EFF               	movlw	-1
 16053  0133CC  0060  F103  FFE3   	movff	btemp+11,plusw1
 16054                           
 16055                           ;stkvar	_b @ sp[(-13)+-4]
 16056  0133D2  0EF2               	movlw	242
 16057  0133D4  24E1               	addwf	fsr1l,w,c
 16058  0133D6  6ED9               	movwf	fsr2l,c
 16059  0133D8  0EFF               	movlw	255
 16060  0133DA  20E2               	addwfc	fsr1h,w,c
 16061  0133DC  6EDA               	movwf	fsr2h,c
 16062  0133DE  50DF               	movf	indf2,w,c
 16063  0133E0  6E40               	movwf	(btemp+11)^0,c
 16064  0133E2  90D8               	bcf	status,0,c
 16065  0133E4  3440               	rlcf	(btemp+11)^0,w,c
 16066  0133E6  6E3F               	movwf	(btemp+10)^0,c
 16067                           
 16068                           ;stkvar	_bexp @ sp[(-13)+11]
 16069  0133E8  0EFE               	movlw	-2
 16070  0133EA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16071                           
 16072                           ;stkvar	_b @ sp[(-13)+-4]
 16073  0133F0  0EF1               	movlw	241
 16074  0133F2  24E1               	addwf	fsr1l,w,c
 16075  0133F4  6ED9               	movwf	fsr2l,c
 16076  0133F6  0EFF               	movlw	255
 16077  0133F8  20E2               	addwfc	fsr1h,w,c
 16078  0133FA  6EDA               	movwf	fsr2h,c
 16079  0133FC  AEDF               	btfss	indf2,7,c
 16080  0133FE  D002               	goto	l6390
 16081                           
 16082                           ;stkvar	_bexp @ sp[(-13)+11]
 16083  013400  0EFE               	movlw	-2
 16084  013402  80E3               	bsf	plusw1,0,c
 16085  013404                     l6390:
 16086                           
 16087                           ;stkvar	_bexp @ sp[(-13)+11]
 16088  013404  0EFE               	movlw	-2
 16089  013406  50E3               	movf	plusw1,w,c
 16090  013408  B4D8               	btfsc	status,2,c
 16091  01340A  D027               	goto	l6400
 16092                           
 16093                           ;stkvar	_bexp @ sp[(-13)+11]
 16094  01340C  0EFE               	movlw	-2
 16095  01340E  28E3               	incf	plusw1,w,c
 16096  013410  A4D8               	btfss	status,2,c
 16097  013412  D018               	goto	l6396
 16098  013414  0E00               	movlw	0
 16099  013416  6E3D               	movwf	(btemp+8)^0,c
 16100  013418  0E00               	movlw	0
 16101  01341A  6E3E               	movwf	(btemp+9)^0,c
 16102  01341C  0E00               	movlw	0
 16103  01341E  6E3F               	movwf	(btemp+10)^0,c
 16104  013420  0E00               	movlw	0
 16105  013422  6E40               	movwf	(btemp+11)^0,c
 16106                           
 16107                           ;stkvar	_b @ sp[(-13)+-4]
 16108  013424  0EEF               	movlw	-17
 16109  013426  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16110  01342C  0EF0               	movlw	-16
 16111  01342E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16112  013434  0EF1               	movlw	-15
 16113  013436  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16114  01343C  0EF2               	movlw	-14
 16115  01343E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16116  013444                     l6396:
 16117                           
 16118                           ;stkvar	_b @ sp[(-13)+-4]
 16119  013444  0EF1               	movlw	-15
 16120  013446  8EE3               	bsf	plusw1,7,c
 16121                           
 16122                           ;stkvar	_b @ sp[(-13)+-4]
 16123  013448  0EF2               	movlw	242
 16124  01344A  24E1               	addwf	fsr1l,w,c
 16125  01344C  6ED9               	movwf	fsr2l,c
 16126  01344E  0EFF               	movlw	255
 16127  013450  20E2               	addwfc	fsr1h,w,c
 16128  013452  6EDA               	movwf	fsr2h,c
 16129  013454  0E00               	movlw	0
 16130  013456  6EDF               	movwf	indf2,c
 16131  013458  D018               	goto	l6402
 16132  01345A                     l6400:
 16133  01345A  0E00               	movlw	0
 16134  01345C  6E3D               	movwf	(btemp+8)^0,c
 16135  01345E  0E00               	movlw	0
 16136  013460  6E3E               	movwf	(btemp+9)^0,c
 16137  013462  0E00               	movlw	0
 16138  013464  6E3F               	movwf	(btemp+10)^0,c
 16139  013466  0E00               	movlw	0
 16140  013468  6E40               	movwf	(btemp+11)^0,c
 16141                           
 16142                           ;stkvar	_b @ sp[(-13)+-4]
 16143  01346A  0EEF               	movlw	-17
 16144  01346C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16145  013472  0EF0               	movlw	-16
 16146  013474  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16147  01347A  0EF1               	movlw	-15
 16148  01347C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16149  013482  0EF2               	movlw	-14
 16150  013484  0060  F103  FFE3   	movff	btemp+11,plusw1
 16151  01348A                     l6402:
 16152                           
 16153                           ;stkvar	_a @ sp[(-13)+-8]
 16154  01348A  0EEE               	movlw	238
 16155  01348C  24E1               	addwf	fsr1l,w,c
 16156  01348E  6ED9               	movwf	fsr2l,c
 16157  013490  0EFF               	movlw	255
 16158  013492  20E2               	addwfc	fsr1h,w,c
 16159  013494  6EDA               	movwf	fsr2h,c
 16160  013496  50DF               	movf	indf2,w,c
 16161  013498  6E40               	movwf	(btemp+11)^0,c
 16162  01349A  0E80               	movlw	128
 16163  01349C  1640               	andwf	(btemp+11)^0,f,c
 16164                           
 16165                           ;stkvar	_sign @ sp[(-13)+12]
 16166  01349E  50E1               	movf	fsr1l,w,c
 16167  0134A0  0FFF               	addlw	-1
 16168  0134A2  6ED9               	movwf	fsr2l,c
 16169  0134A4  50E2               	movf	fsr1h,w,c
 16170  0134A6  6EDA               	movwf	fsr2h,c
 16171  0134A8  0EFF               	movlw	255
 16172  0134AA  22DA               	addwfc	fsr2h,f,c
 16173  0134AC  5040               	movf	(btemp+11)^0,w,c
 16174  0134AE  1ADF               	xorwf	indf2,f,c
 16175                           
 16176                           ;stkvar	_a @ sp[(-13)+-8]
 16177  0134B0  0EEE               	movlw	238
 16178  0134B2  24E1               	addwf	fsr1l,w,c
 16179  0134B4  6ED9               	movwf	fsr2l,c
 16180  0134B6  0EFF               	movlw	255
 16181  0134B8  20E2               	addwfc	fsr1h,w,c
 16182  0134BA  6EDA               	movwf	fsr2h,c
 16183  0134BC  50DF               	movf	indf2,w,c
 16184  0134BE  6E40               	movwf	(btemp+11)^0,c
 16185  0134C0  90D8               	bcf	status,0,c
 16186  0134C2  3440               	rlcf	(btemp+11)^0,w,c
 16187  0134C4  6E3F               	movwf	(btemp+10)^0,c
 16188                           
 16189                           ;stkvar	_aexp @ sp[(-13)+10]
 16190  0134C6  0EFD               	movlw	-3
 16191  0134C8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16192                           
 16193                           ;stkvar	_a @ sp[(-13)+-8]
 16194  0134CE  0EED               	movlw	237
 16195  0134D0  24E1               	addwf	fsr1l,w,c
 16196  0134D2  6ED9               	movwf	fsr2l,c
 16197  0134D4  0EFF               	movlw	255
 16198  0134D6  20E2               	addwfc	fsr1h,w,c
 16199  0134D8  6EDA               	movwf	fsr2h,c
 16200  0134DA  AEDF               	btfss	indf2,7,c
 16201  0134DC  D002               	goto	l6410
 16202                           
 16203                           ;stkvar	_aexp @ sp[(-13)+10]
 16204  0134DE  0EFD               	movlw	-3
 16205  0134E0  80E3               	bsf	plusw1,0,c
 16206  0134E2                     l6410:
 16207                           
 16208                           ;stkvar	_aexp @ sp[(-13)+10]
 16209  0134E2  0EFD               	movlw	-3
 16210  0134E4  50E3               	movf	plusw1,w,c
 16211  0134E6  B4D8               	btfsc	status,2,c
 16212  0134E8  D027               	goto	l6420
 16213                           
 16214                           ;stkvar	_aexp @ sp[(-13)+10]
 16215  0134EA  0EFD               	movlw	-3
 16216  0134EC  28E3               	incf	plusw1,w,c
 16217  0134EE  A4D8               	btfss	status,2,c
 16218  0134F0  D018               	goto	l6416
 16219  0134F2  0E00               	movlw	0
 16220  0134F4  6E3D               	movwf	(btemp+8)^0,c
 16221  0134F6  0E00               	movlw	0
 16222  0134F8  6E3E               	movwf	(btemp+9)^0,c
 16223  0134FA  0E00               	movlw	0
 16224  0134FC  6E3F               	movwf	(btemp+10)^0,c
 16225  0134FE  0E00               	movlw	0
 16226  013500  6E40               	movwf	(btemp+11)^0,c
 16227                           
 16228                           ;stkvar	_a @ sp[(-13)+-8]
 16229  013502  0EEB               	movlw	-21
 16230  013504  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16231  01350A  0EEC               	movlw	-20
 16232  01350C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16233  013512  0EED               	movlw	-19
 16234  013514  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16235  01351A  0EEE               	movlw	-18
 16236  01351C  0060  F103  FFE3   	movff	btemp+11,plusw1
 16237  013522                     l6416:
 16238                           
 16239                           ;stkvar	_a @ sp[(-13)+-8]
 16240  013522  0EED               	movlw	-19
 16241  013524  8EE3               	bsf	plusw1,7,c
 16242                           
 16243                           ;stkvar	_a @ sp[(-13)+-8]
 16244  013526  0EEE               	movlw	238
 16245  013528  24E1               	addwf	fsr1l,w,c
 16246  01352A  6ED9               	movwf	fsr2l,c
 16247  01352C  0EFF               	movlw	255
 16248  01352E  20E2               	addwfc	fsr1h,w,c
 16249  013530  6EDA               	movwf	fsr2h,c
 16250  013532  0E00               	movlw	0
 16251  013534  6EDF               	movwf	indf2,c
 16252  013536  D018               	goto	l6422
 16253  013538                     l6420:
 16254  013538  0E00               	movlw	0
 16255  01353A  6E3D               	movwf	(btemp+8)^0,c
 16256  01353C  0E00               	movlw	0
 16257  01353E  6E3E               	movwf	(btemp+9)^0,c
 16258  013540  0E00               	movlw	0
 16259  013542  6E3F               	movwf	(btemp+10)^0,c
 16260  013544  0E00               	movlw	0
 16261  013546  6E40               	movwf	(btemp+11)^0,c
 16262                           
 16263                           ;stkvar	_a @ sp[(-13)+-8]
 16264  013548  0EEB               	movlw	-21
 16265  01354A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16266  013550  0EEC               	movlw	-20
 16267  013552  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16268  013558  0EED               	movlw	-19
 16269  01355A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16270  013560  0EEE               	movlw	-18
 16271  013562  0060  F103  FFE3   	movff	btemp+11,plusw1
 16272  013568                     l6422:
 16273                           
 16274                           ;stkvar	_a @ sp[(-13)+-8]
 16275  013568  0EEB               	movlw	-21
 16276  01356A  50E3               	movf	plusw1,w,c
 16277  01356C  E139               	bnz	l6434
 16278  01356E  0EEC               	movlw	-20
 16279  013570  50E3               	movf	plusw1,w,c
 16280  013572  E136               	bnz	l6434
 16281  013574  0EED               	movlw	-19
 16282  013576  50E3               	movf	plusw1,w,c
 16283  013578  E133               	bnz	l6434
 16284  01357A  0EEE               	movlw	-18
 16285  01357C  50E3               	movf	plusw1,w,c
 16286  01357E  A4D8               	btfss	status,2,c
 16287  013580  D02F               	goto	l6434
 16288                           
 16289                           ;stkvar	_b @ sp[(-13)+-4]
 16290  013582  0EEF               	movlw	-17
 16291  013584  6AE3               	clrf	plusw1,c
 16292  013586  0EF0               	movlw	-16
 16293  013588  6AE3               	clrf	plusw1,c
 16294  01358A  0EF1               	movlw	-15
 16295  01358C  6AE3               	clrf	plusw1,c
 16296  01358E  0EF2               	movlw	-14
 16297  013590  6AE3               	clrf	plusw1,c
 16298                           
 16299                           ;stkvar	_b @ sp[(-13)+-4]
 16300  013592  0EF1               	movlw	241
 16301  013594  24E1               	addwf	fsr1l,w,c
 16302  013596  6ED9               	movwf	fsr2l,c
 16303  013598  0EFF               	movlw	255
 16304  01359A  20E2               	addwfc	fsr1h,w,c
 16305  01359C  6EDA               	movwf	fsr2h,c
 16306  01359E  0E80               	movlw	128
 16307  0135A0  12DE               	iorwf	postinc2,f,c
 16308  0135A2  0E7F               	movlw	127
 16309  0135A4  12DD               	iorwf	postdec2,f,c
 16310  0135A6                     l6428:
 16311                           
 16312                           ;stkvar	_sign @ sp[(-13)+12]
 16313  0135A6  0EFF               	movlw	-1
 16314  0135A8  006F FF8C  F040    	movff	plusw1,btemp+11
 16315                           
 16316                           ;stkvar	_b @ sp[(-13)+-4]
 16317  0135AE  0EF2               	movlw	242
 16318  0135B0  24E1               	addwf	fsr1l,w,c
 16319  0135B2  6ED9               	movwf	fsr2l,c
 16320  0135B4  0EFF               	movlw	255
 16321  0135B6  20E2               	addwfc	fsr1h,w,c
 16322  0135B8  6EDA               	movwf	fsr2h,c
 16323  0135BA  5040               	movf	(btemp+11)^0,w,c
 16324  0135BC  12DF               	iorwf	indf2,f,c
 16325                           
 16326                           ;stkvar	_b @ sp[(-13)+-4]
 16327  0135BE  0EEF               	movlw	-17
 16328  0135C0  006F FF8C  F035    	movff	plusw1,btemp
 16329  0135C6  0EF0               	movlw	-16
 16330  0135C8  006F FF8C  F036    	movff	plusw1,btemp+1
 16331  0135CE  0EF1               	movlw	-15
 16332  0135D0  006F FF8C  F037    	movff	plusw1,btemp+2
 16333  0135D6  0EF2               	movlw	-14
 16334  0135D8  006F FF8C  F038    	movff	plusw1,btemp+3
 16335  0135DE  D19F               	goto	l2553
 16336  0135E0                     l6434:
 16337                           
 16338                           ;stkvar	_bexp @ sp[(-13)+11]
 16339  0135E0  0EFE               	movlw	-2
 16340  0135E2  50E3               	movf	plusw1,w,c
 16341  0135E4  A4D8               	btfss	status,2,c
 16342  0135E6  D009               	goto	l6442
 16343  0135E8  0E00               	movlw	0
 16344  0135EA  6E35               	movwf	btemp^0,c
 16345  0135EC  0E00               	movlw	0
 16346  0135EE  6E36               	movwf	(btemp+1)^0,c
 16347  0135F0  0E00               	movlw	0
 16348  0135F2  6E37               	movwf	(btemp+2)^0,c
 16349  0135F4  0E00               	movlw	0
 16350  0135F6  6E38               	movwf	(btemp+3)^0,c
 16351  0135F8  D192               	goto	l2553
 16352  0135FA                     l6442:
 16353                           
 16354                           ;stkvar	_bexp @ sp[(-13)+11]
 16355  0135FA  0EFE               	movlw	-2
 16356  0135FC  50E3               	movf	plusw1,w,c
 16357  0135FE  6E3F               	movwf	(btemp+10)^0,c
 16358  013600  6A40               	clrf	(btemp+11)^0,c
 16359                           
 16360                           ;stkvar	_aexp @ sp[(-13)+10]
 16361  013602  0EFD               	movlw	-3
 16362  013604  50E3               	movf	plusw1,w,c
 16363  013606  5E3F               	subwf	(btemp+10)^0,f,c
 16364  013608  0E00               	movlw	0
 16365  01360A  5A40               	subwfb	(btemp+11)^0,f,c
 16366  01360C  0E7F               	movlw	127
 16367  01360E  263F               	addwf	(btemp+10)^0,f,c
 16368  013610  0E00               	movlw	0
 16369  013612  2240               	addwfc	(btemp+11)^0,f,c
 16370                           
 16371                           ;stkvar	_new_exp @ sp[(-13)+8]
 16372  013614  0EFB               	movlw	-5
 16373  013616  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16374  01361C  0EFC               	movlw	-4
 16375  01361E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16376                           
 16377                           ;stkvar	_b @ sp[(-13)+-4]
 16378  013624  0EEF               	movlw	-17
 16379  013626  006F FF8C  F03D    	movff	plusw1,btemp+8
 16380  01362C  0EF0               	movlw	-16
 16381  01362E  006F FF8C  F03E    	movff	plusw1,btemp+9
 16382  013634  0EF1               	movlw	-15
 16383  013636  006F FF8C  F03F    	movff	plusw1,btemp+10
 16384  01363C  0EF2               	movlw	-14
 16385  01363E  006F FF8C  F040    	movff	plusw1,btemp+11
 16386                           
 16387                           ;stkvar	_rem @ sp[(-13)+4]
 16388  013644  0EF7               	movlw	-9
 16389  013646  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16390  01364C  0EF8               	movlw	-8
 16391  01364E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16392  013654  0EF9               	movlw	-7
 16393  013656  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16394  01365C  0EFA               	movlw	-6
 16395  01365E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16396                           
 16397                           ;stkvar	_b @ sp[(-13)+-4]
 16398  013664  0EEF               	movlw	-17
 16399  013666  6AE3               	clrf	plusw1,c
 16400  013668  0EF0               	movlw	-16
 16401  01366A  6AE3               	clrf	plusw1,c
 16402  01366C  0EF1               	movlw	-15
 16403  01366E  6AE3               	clrf	plusw1,c
 16404  013670  0EF2               	movlw	-14
 16405  013672  6AE3               	clrf	plusw1,c
 16406                           
 16407                           ;stkvar	_grs @ sp[(-13)+0]
 16408  013674  0EF3               	movlw	-13
 16409  013676  6AE3               	clrf	plusw1,c
 16410  013678  0EF4               	movlw	-12
 16411  01367A  6AE3               	clrf	plusw1,c
 16412  01367C  0EF5               	movlw	-11
 16413  01367E  6AE3               	clrf	plusw1,c
 16414  013680  0EF6               	movlw	-10
 16415  013682  6AE3               	clrf	plusw1,c
 16416                           
 16417                           ;stkvar	_aexp @ sp[(-13)+10]
 16418  013684  0EFD               	movlw	-3
 16419  013686  6AE3               	clrf	plusw1,c
 16420  013688  D050               	goto	l6470
 16421  01368A                     l6452:
 16422                           
 16423                           ;stkvar	_aexp @ sp[(-13)+10]
 16424  01368A  0EFD               	movlw	-3
 16425  01368C  50E3               	movf	plusw1,w,c
 16426  01368E  B4D8               	btfsc	status,2,c
 16427  013690  D020               	goto	l6462
 16428                           
 16429                           ;stkvar	_rem @ sp[(-13)+4]
 16430  013692  90D8               	bcf	status,0,c
 16431  013694  0EF7               	movlw	-9
 16432  013696  36E3               	rlcf	plusw1,f,c
 16433  013698  0EF8               	movlw	-8
 16434  01369A  36E3               	rlcf	plusw1,f,c
 16435  01369C  0EF9               	movlw	-7
 16436  01369E  36E3               	rlcf	plusw1,f,c
 16437  0136A0  0EFA               	movlw	-6
 16438  0136A2  36E3               	rlcf	plusw1,f,c
 16439                           
 16440                           ;stkvar	_b @ sp[(-13)+-4]
 16441  0136A4  90D8               	bcf	status,0,c
 16442  0136A6  0EEF               	movlw	-17
 16443  0136A8  36E3               	rlcf	plusw1,f,c
 16444  0136AA  0EF0               	movlw	-16
 16445  0136AC  36E3               	rlcf	plusw1,f,c
 16446  0136AE  0EF1               	movlw	-15
 16447  0136B0  36E3               	rlcf	plusw1,f,c
 16448  0136B2  0EF2               	movlw	-14
 16449  0136B4  36E3               	rlcf	plusw1,f,c
 16450                           
 16451                           ;stkvar	_grs @ sp[(-13)+0]
 16452  0136B6  0EF6               	movlw	-10
 16453  0136B8  AEE3               	btfss	plusw1,7,c
 16454  0136BA  D002               	goto	l6460
 16455                           
 16456                           ;stkvar	_b @ sp[(-13)+-4]
 16457  0136BC  0EEF               	movlw	-17
 16458  0136BE  80E3               	bsf	plusw1,0,c
 16459  0136C0                     l6460:
 16460                           
 16461                           ;stkvar	_grs @ sp[(-13)+0]
 16462  0136C0  90D8               	bcf	status,0,c
 16463  0136C2  0EF3               	movlw	-13
 16464  0136C4  36E3               	rlcf	plusw1,f,c
 16465  0136C6  0EF4               	movlw	-12
 16466  0136C8  36E3               	rlcf	plusw1,f,c
 16467  0136CA  0EF5               	movlw	-11
 16468  0136CC  36E3               	rlcf	plusw1,f,c
 16469  0136CE  0EF6               	movlw	-10
 16470  0136D0  36E3               	rlcf	plusw1,f,c
 16471  0136D2                     l6462:
 16472                           
 16473                           ;stkvar	_a @ sp[(-13)+-8]
 16474                           ;stkvar	_rem @ sp[(-13)+4]
 16475  0136D2  50E1               	movf	fsr1l,w,c
 16476  0136D4  0FF7               	addlw	-9
 16477  0136D6  6ED9               	movwf	fsr2l,c
 16478  0136D8  50E2               	movf	fsr1h,w,c
 16479  0136DA  6EDA               	movwf	fsr2h,c
 16480  0136DC  0EFF               	movlw	255
 16481  0136DE  22DA               	addwfc	fsr2h,f,c
 16482  0136E0  0EEB               	movlw	-21
 16483  0136E2  50E3               	movf	plusw1,w,c
 16484  0136E4  5CDE               	subwf	postinc2,w,c
 16485  0136E6  0EEC               	movlw	-20
 16486  0136E8  50E3               	movf	plusw1,w,c
 16487  0136EA  58DE               	subwfb	postinc2,w,c
 16488  0136EC  0EED               	movlw	-19
 16489  0136EE  50E3               	movf	plusw1,w,c
 16490  0136F0  58DE               	subwfb	postinc2,w,c
 16491  0136F2  0EEE               	movlw	-18
 16492  0136F4  50E3               	movf	plusw1,w,c
 16493  0136F6  58DE               	subwfb	postinc2,w,c
 16494  0136F8  A0D8               	btfss	status,0,c
 16495  0136FA  D015               	goto	l6468
 16496                           
 16497                           ;stkvar	_grs @ sp[(-13)+0]
 16498  0136FC  0EF6               	movlw	-10
 16499  0136FE  8CE3               	bsf	plusw1,6,c
 16500                           
 16501                           ;stkvar	_a @ sp[(-13)+-8]
 16502                           ;stkvar	_rem @ sp[(-13)+4]
 16503  013700  50E1               	movf	fsr1l,w,c
 16504  013702  0FF7               	addlw	-9
 16505  013704  6ED9               	movwf	fsr2l,c
 16506  013706  50E2               	movf	fsr1h,w,c
 16507  013708  6EDA               	movwf	fsr2h,c
 16508  01370A  0EFF               	movlw	255
 16509  01370C  22DA               	addwfc	fsr2h,f,c
 16510  01370E  0EEB               	movlw	-21
 16511  013710  50E3               	movf	plusw1,w,c
 16512  013712  5EDE               	subwf	postinc2,f,c
 16513  013714  0EEC               	movlw	-20
 16514  013716  50E3               	movf	plusw1,w,c
 16515  013718  5ADE               	subwfb	postinc2,f,c
 16516  01371A  0EED               	movlw	-19
 16517  01371C  50E3               	movf	plusw1,w,c
 16518  01371E  5ADE               	subwfb	postinc2,f,c
 16519  013720  0EEE               	movlw	-18
 16520  013722  50E3               	movf	plusw1,w,c
 16521  013724  5ADE               	subwfb	postinc2,f,c
 16522  013726                     l6468:
 16523                           
 16524                           ;stkvar	_aexp @ sp[(-13)+10]
 16525  013726  0EFD               	movlw	-3
 16526  013728  2AE3               	incf	plusw1,f,c
 16527  01372A                     l6470:
 16528                           
 16529                           ;stkvar	_aexp @ sp[(-13)+10]
 16530  01372A  0EFD               	movlw	-3
 16531  01372C  006F FF8C  F035    	movff	plusw1,btemp
 16532  013732  0E19               	movlw	25
 16533  013734  6435               	cpfsgt	btemp^0,c
 16534  013736  D7A9               	goto	l6452
 16535                           
 16536                           ;stkvar	_rem @ sp[(-13)+4]
 16537  013738  0EF7               	movlw	-9
 16538  01373A  50E3               	movf	plusw1,w,c
 16539  01373C  E10A               	bnz	u5490
 16540  01373E  0EF8               	movlw	-8
 16541  013740  50E3               	movf	plusw1,w,c
 16542  013742  E107               	bnz	u5490
 16543  013744  0EF9               	movlw	-7
 16544  013746  50E3               	movf	plusw1,w,c
 16545  013748  E104               	bnz	u5490
 16546  01374A  0EFA               	movlw	-6
 16547  01374C  50E3               	movf	plusw1,w,c
 16548  01374E  B4D8               	btfsc	status,2,c
 16549  013750  D024               	goto	l6486
 16550  013752                     u5490:
 16551                           
 16552                           ;stkvar	_grs @ sp[(-13)+0]
 16553  013752  0EF3               	movlw	-13
 16554  013754  80E3               	bsf	plusw1,0,c
 16555  013756  D021               	goto	l6486
 16556  013758                     l6476:
 16557                           
 16558                           ;stkvar	_b @ sp[(-13)+-4]
 16559  013758  90D8               	bcf	status,0,c
 16560  01375A  0EEF               	movlw	-17
 16561  01375C  36E3               	rlcf	plusw1,f,c
 16562  01375E  0EF0               	movlw	-16
 16563  013760  36E3               	rlcf	plusw1,f,c
 16564  013762  0EF1               	movlw	-15
 16565  013764  36E3               	rlcf	plusw1,f,c
 16566  013766  0EF2               	movlw	-14
 16567  013768  36E3               	rlcf	plusw1,f,c
 16568                           
 16569                           ;stkvar	_grs @ sp[(-13)+0]
 16570  01376A  0EF6               	movlw	-10
 16571  01376C  AEE3               	btfss	plusw1,7,c
 16572  01376E  D002               	goto	l6482
 16573                           
 16574                           ;stkvar	_b @ sp[(-13)+-4]
 16575  013770  0EEF               	movlw	-17
 16576  013772  80E3               	bsf	plusw1,0,c
 16577  013774                     l6482:
 16578                           
 16579                           ;stkvar	_grs @ sp[(-13)+0]
 16580  013774  90D8               	bcf	status,0,c
 16581  013776  0EF3               	movlw	-13
 16582  013778  36E3               	rlcf	plusw1,f,c
 16583  01377A  0EF4               	movlw	-12
 16584  01377C  36E3               	rlcf	plusw1,f,c
 16585  01377E  0EF5               	movlw	-11
 16586  013780  36E3               	rlcf	plusw1,f,c
 16587  013782  0EF6               	movlw	-10
 16588  013784  36E3               	rlcf	plusw1,f,c
 16589                           
 16590                           ;stkvar	_new_exp @ sp[(-13)+8]
 16591  013786  50E1               	movf	fsr1l,w,c
 16592  013788  0FFB               	addlw	-5
 16593  01378A  6ED9               	movwf	fsr2l,c
 16594  01378C  50E2               	movf	fsr1h,w,c
 16595  01378E  6EDA               	movwf	fsr2h,c
 16596  013790  0EFF               	movlw	255
 16597  013792  22DA               	addwfc	fsr2h,f,c
 16598  013794  06DE               	decf	postinc2,f,c
 16599  013796  0E00               	movlw	0
 16600  013798  5ADD               	subwfb	postdec2,f,c
 16601  01379A                     l6486:
 16602                           
 16603                           ;stkvar	_b @ sp[(-13)+-4]
 16604  01379A  0EF1               	movlw	-15
 16605  01379C  AEE3               	btfss	plusw1,7,c
 16606  01379E  D7DC               	goto	l6476
 16607                           
 16608                           ;stkvar	_aexp @ sp[(-13)+10]
 16609  0137A0  0EFD               	movlw	-3
 16610  0137A2  6AE3               	clrf	plusw1,c
 16611                           
 16612                           ;stkvar	_grs @ sp[(-13)+0]
 16613  0137A4  0EF6               	movlw	-10
 16614  0137A6  AEE3               	btfss	plusw1,7,c
 16615  0137A8  D020               	goto	l6500
 16616                           
 16617                           ;stkvar	_grs @ sp[(-13)+0]
 16618  0137AA  50E1               	movf	fsr1l,w,c
 16619  0137AC  0FF3               	addlw	-13
 16620  0137AE  6ED9               	movwf	fsr2l,c
 16621  0137B0  50E2               	movf	fsr1h,w,c
 16622  0137B2  6EDA               	movwf	fsr2h,c
 16623  0137B4  0EFF               	movlw	255
 16624  0137B6  22DA               	addwfc	fsr2h,f,c
 16625  0137B8  0EFF               	movlw	255
 16626  0137BA  14DE               	andwf	postinc2,w,c
 16627  0137BC  6E3D               	movwf	(btemp+8)^0,c
 16628  0137BE  0EFF               	movlw	255
 16629  0137C0  14DE               	andwf	postinc2,w,c
 16630  0137C2  6E3E               	movwf	(btemp+9)^0,c
 16631  0137C4  0EFF               	movlw	255
 16632  0137C6  14DE               	andwf	postinc2,w,c
 16633  0137C8  6E3F               	movwf	(btemp+10)^0,c
 16634  0137CA  0E7F               	movlw	127
 16635  0137CC  14DE               	andwf	postinc2,w,c
 16636  0137CE  6E40               	movwf	(btemp+11)^0,c
 16637  0137D0  503D               	movf	(btemp+8)^0,w,c
 16638  0137D2  103E               	iorwf	(btemp+9)^0,w,c
 16639  0137D4  103F               	iorwf	(btemp+10)^0,w,c
 16640  0137D6  1040               	iorwf	(btemp+11)^0,w,c
 16641  0137D8  B4D8               	btfsc	status,2,c
 16642  0137DA  D004               	goto	l6496
 16643  0137DC                     u5530:
 16644                           
 16645                           ;stkvar	_aexp @ sp[(-13)+10]
 16646  0137DC  0EFD               	movlw	-3
 16647  0137DE  6AE3               	clrf	plusw1,c
 16648  0137E0  2AE3               	incf	plusw1,f,c
 16649  0137E2  D003               	goto	l6500
 16650  0137E4                     l6496:
 16651                           
 16652                           ;stkvar	_b @ sp[(-13)+-4]
 16653  0137E4  0EEF               	movlw	-17
 16654  0137E6  B0E3               	btfsc	plusw1,0,c
 16655  0137E8  D7F9               	goto	u5530
 16656  0137EA                     l6500:
 16657                           
 16658                           ;stkvar	_aexp @ sp[(-13)+10]
 16659  0137EA  0EFD               	movlw	-3
 16660  0137EC  50E3               	movf	plusw1,w,c
 16661  0137EE  B4D8               	btfsc	status,2,c
 16662  0137F0  D036               	goto	l6510
 16663                           
 16664                           ;stkvar	_b @ sp[(-13)+-4]
 16665  0137F2  50E1               	movf	fsr1l,w,c
 16666  0137F4  0FEF               	addlw	-17
 16667  0137F6  6ED9               	movwf	fsr2l,c
 16668  0137F8  50E2               	movf	fsr1h,w,c
 16669  0137FA  6EDA               	movwf	fsr2h,c
 16670  0137FC  0EFF               	movlw	255
 16671  0137FE  22DA               	addwfc	fsr2h,f,c
 16672  013800  2ADE               	incf	postinc2,f,c
 16673  013802  0E00               	movlw	0
 16674  013804  22DE               	addwfc	postinc2,f,c
 16675  013806  22DE               	addwfc	postinc2,f,c
 16676  013808  22DE               	addwfc	postinc2,f,c
 16677                           
 16678                           ;stkvar	_b @ sp[(-13)+-4]
 16679  01380A  0EF2               	movlw	-14
 16680  01380C  A0E3               	btfss	plusw1,0,c
 16681  01380E  D027               	goto	l6510
 16682  013810  0E01               	movlw	1
 16683  013812  6E40               	movwf	(btemp+11)^0,c
 16684                           
 16685                           ;stkvar	_b @ sp[(-13)+-4]
 16686  013814  50E1               	movf	fsr1l,w,c
 16687  013816  0FEF               	addlw	-17
 16688  013818  6ED9               	movwf	fsr2l,c
 16689  01381A  50E2               	movf	fsr1h,w,c
 16690  01381C  6EDA               	movwf	fsr2h,c
 16691  01381E  0EFF               	movlw	255
 16692  013820  22DA               	addwfc	fsr2h,f,c
 16693  013822  2840               	incf	(btemp+11)^0,w,c
 16694  013824  52DE               	movf	postinc2,f,c
 16695  013826  D008               	goto	u5570
 16696  013828                     u5575:
 16697  013828  52DE               	movf	postinc2,f,c
 16698  01382A  90D8               	bcf	status,0,c
 16699  01382C  BEDC               	btfsc	preinc2,7,c
 16700  01382E  80D8               	bsf	status,0,c
 16701  013830  32DD               	rrcf	postdec2,f,c
 16702  013832  32DD               	rrcf	postdec2,f,c
 16703  013834  32DD               	rrcf	postdec2,f,c
 16704  013836  32DE               	rrcf	postinc2,f,c
 16705  013838                     u5570:
 16706  013838  2EE8               	decfsz	wreg,f,c
 16707  01383A  D7F6               	goto	u5575
 16708                           
 16709                           ;stkvar	_new_exp @ sp[(-13)+8]
 16710  01383C  0EFB               	movlw	-5
 16711  01383E  50E3               	movf	plusw1,w,c
 16712  013840  0F01               	addlw	1
 16713  013842  6E35               	movwf	btemp^0,c
 16714  013844  0EFB               	movlw	-5
 16715  013846  0060  F0D7  FFE3   	movff	btemp,plusw1
 16716  01384C  6A35               	clrf	btemp^0,c
 16717  01384E  0EFC               	movlw	-4
 16718  013850  50E3               	movf	plusw1,w,c
 16719  013852  2035               	addwfc	btemp^0,w,c
 16720  013854  6E35               	movwf	btemp^0,c
 16721  013856  0EFC               	movlw	-4
 16722  013858  0060  F0D7  FFE3   	movff	btemp,plusw1
 16723  01385E                     l6510:
 16724                           
 16725                           ;stkvar	_new_exp @ sp[(-13)+8]
 16726  01385E  0EFC               	movlw	-4
 16727  013860  BEE3               	btfsc	plusw1,7,c
 16728  013862  D01B               	goto	l6516
 16729  013864  0EFC               	movlw	-4
 16730  013866  50E3               	movf	plusw1,w,c
 16731  013868  E104               	bnz	u5580
 16732  01386A  0EFB               	movlw	-5
 16733  01386C  28E3               	incf	plusw1,w,c
 16734  01386E  A0D8               	btfss	status,0,c
 16735  013870  D014               	goto	l6516
 16736  013872                     u5580:
 16737  013872  0EFF               	movlw	255
 16738  013874  6E3F               	movwf	(btemp+10)^0,c
 16739  013876  0E00               	movlw	0
 16740  013878  6E40               	movwf	(btemp+11)^0,c
 16741                           
 16742                           ;stkvar	_new_exp @ sp[(-13)+8]
 16743  01387A  0EFB               	movlw	-5
 16744  01387C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16745  013882  0EFC               	movlw	-4
 16746  013884  0060  F103  FFE3   	movff	btemp+11,plusw1
 16747                           
 16748                           ;stkvar	_b @ sp[(-13)+-4]
 16749  01388A  0EEF               	movlw	-17
 16750  01388C  6AE3               	clrf	plusw1,c
 16751  01388E  0EF0               	movlw	-16
 16752  013890  6AE3               	clrf	plusw1,c
 16753  013892  0EF1               	movlw	-15
 16754  013894  6AE3               	clrf	plusw1,c
 16755  013896  0EF2               	movlw	-14
 16756  013898  6AE3               	clrf	plusw1,c
 16757  01389A                     l6516:
 16758                           
 16759                           ;stkvar	_new_exp @ sp[(-13)+8]
 16760  01389A  0EFC               	movlw	-4
 16761  01389C  BEE3               	btfsc	plusw1,7,c
 16762  01389E  D007               	goto	u5590
 16763  0138A0  0EFC               	movlw	-4
 16764  0138A2  50E3               	movf	plusw1,w,c
 16765  0138A4  E112               	bnz	l6522
 16766  0138A6  0EFB               	movlw	-5
 16767  0138A8  04E3               	decf	plusw1,w,c
 16768  0138AA  B0D8               	btfsc	status,0,c
 16769  0138AC  D00E               	goto	l6522
 16770  0138AE                     u5590:
 16771                           
 16772                           ;stkvar	_new_exp @ sp[(-13)+8]
 16773  0138AE  0EFB               	movlw	-5
 16774  0138B0  6AE3               	clrf	plusw1,c
 16775  0138B2  0EFC               	movlw	-4
 16776  0138B4  6AE3               	clrf	plusw1,c
 16777                           
 16778                           ;stkvar	_b @ sp[(-13)+-4]
 16779  0138B6  0EEF               	movlw	-17
 16780  0138B8  6AE3               	clrf	plusw1,c
 16781  0138BA  0EF0               	movlw	-16
 16782  0138BC  6AE3               	clrf	plusw1,c
 16783  0138BE  0EF1               	movlw	-15
 16784  0138C0  6AE3               	clrf	plusw1,c
 16785  0138C2  0EF2               	movlw	-14
 16786  0138C4  6AE3               	clrf	plusw1,c
 16787                           
 16788                           ;stkvar	_sign @ sp[(-13)+12]
 16789  0138C6  0EFF               	movlw	-1
 16790  0138C8  6AE3               	clrf	plusw1,c
 16791  0138CA                     l6522:
 16792                           
 16793                           ;stkvar	_new_exp @ sp[(-13)+8]
 16794                           ;stkvar	_bexp @ sp[(-13)+11]
 16795  0138CA  0EFB               	movlw	-5
 16796  0138CC  006F FF8C  F035    	movff	plusw1,btemp
 16797  0138D2  0EFE               	movlw	-2
 16798  0138D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 16799                           
 16800                           ;stkvar	_bexp @ sp[(-13)+11]
 16801  0138DA  0EFE               	movlw	-2
 16802  0138DC  A0E3               	btfss	plusw1,0,c
 16803  0138DE  D009               	goto	l6528
 16804                           
 16805                           ;stkvar	_b @ sp[(-13)+-4]
 16806  0138E0  0EF1               	movlw	241
 16807  0138E2  24E1               	addwf	fsr1l,w,c
 16808  0138E4  6ED9               	movwf	fsr2l,c
 16809  0138E6  0EFF               	movlw	255
 16810  0138E8  20E2               	addwfc	fsr1h,w,c
 16811  0138EA  6EDA               	movwf	fsr2h,c
 16812  0138EC  0E00               	movlw	0
 16813  0138EE  8EDB               	bsf	plusw2,7,c
 16814  0138F0  D008               	goto	l6530
 16815  0138F2                     l6528:
 16816                           
 16817                           ;stkvar	_b @ sp[(-13)+-4]
 16818  0138F2  0EF1               	movlw	241
 16819  0138F4  24E1               	addwf	fsr1l,w,c
 16820  0138F6  6ED9               	movwf	fsr2l,c
 16821  0138F8  0EFF               	movlw	255
 16822  0138FA  20E2               	addwfc	fsr1h,w,c
 16823  0138FC  6EDA               	movwf	fsr2h,c
 16824  0138FE  0E7F               	movlw	127
 16825  013900  16DF               	andwf	indf2,f,c
 16826  013902                     l6530:
 16827                           
 16828                           ;stkvar	_b @ sp[(-13)+-4]
 16829  013902  0EF2               	movlw	242
 16830  013904  24E1               	addwf	fsr1l,w,c
 16831  013906  6ED9               	movwf	fsr2l,c
 16832  013908  0EFF               	movlw	255
 16833  01390A  20E2               	addwfc	fsr1h,w,c
 16834  01390C  6EDA               	movwf	fsr2h,c
 16835                           
 16836                           ;stkvar	_bexp @ sp[(-13)+11]
 16837  01390E  0EFE               	movlw	-2
 16838  013910  006F FF8C  F040    	movff	plusw1,btemp+11
 16839  013916  90D8               	bcf	status,0,c
 16840  013918  3040               	rrcf	(btemp+11)^0,w,c
 16841  01391A  6EDF               	movwf	indf2,c
 16842  01391C  D644               	goto	l6428
 16843  01391E                     l2553:
 16844                           
 16845                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16846  01391E  0EEB               	movlw	235
 16847  013920  26E1               	addwf	fsr1l,f,c
 16848  013922  0EFF               	movlw	255
 16849  013924  22E2               	addwfc	fsr1h,f,c
 16850  013926  0012               	return		;funcret
 16851  013928                     __end_of___fldiv:
 16852                           	opt callstack 0
 16853                           
 16854 ;; *************** function ___awmod *****************
 16855 ;; Defined at:
 16856 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16857 ;; Parameters:    Size  Location     Type
 16858 ;;  dividend        2  [STACK] int 
 16859 ;;  divisor         2  [STACK] int 
 16860 ;; Auto vars:     Size  Location     Type
 16861 ;;  sign            1  [STACK] unsigned char 
 16862 ;;  counter         1  [STACK] unsigned char 
 16863 ;; Return value:  Size  Location     Type
 16864 ;;                  2  [STACK] int 
 16865 ;; Registers used:
 16866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16867 ;; Tracked objects:
 16868 ;;		On entry : 0/4
 16869 ;;		On exit  : 0/0
 16870 ;;		Unchanged: 0/0
 16871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16876 ;;Total ram usage:        0 bytes
 16877 ;; Hardware stack levels used:    1
 16878 ;; Hardware stack levels required when called:    6
 16879 ;; This function calls:
 16880 ;;		Nothing
 16881 ;; This function is called by:
 16882 ;;		_efgtoa
 16883 ;; This function uses a reentrant model
 16884 ;;
 16885                           
 16886                           	psect	text54
 16887  016600                     __ptext54:
 16888                           	opt callstack 0
 16889  016600                     ___awmod:
 16890                           	opt callstack 0
 16891                           
 16892                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16893  016600  52E6               	movf	postinc1,f,c
 16894  016602  52E6               	movf	postinc1,f,c
 16895                           
 16896                           ;stkvar	_sign @ sp[(-2)+0]
 16897                           
 16898                           ;incstack = 0
 16899  016604  0EFE               	movlw	-2
 16900  016606  6AE3               	clrf	plusw1,c
 16901                           
 16902                           ;stkvar	_dividend @ sp[(-2)+-2]
 16903  016608  0EFD               	movlw	-3
 16904  01660A  AEE3               	btfss	plusw1,7,c
 16905  01660C  D009               	goto	l6754
 16906                           
 16907                           ;stkvar	_dividend @ sp[(-2)+-2]
 16908                           ;stkvar	_dividend @ sp[(-2)+-2]
 16909  01660E  0EFC               	movlw	-4
 16910  016610  6CE3               	negf	plusw1,c
 16911  016612  0EFD               	movlw	-3
 16912  016614  1EE3               	comf	plusw1,f,c
 16913  016616  B0D8               	btfsc	status,0,c
 16914  016618  2AE3               	incf	plusw1,f,c
 16915                           
 16916                           ;stkvar	_sign @ sp[(-2)+0]
 16917  01661A  0EFE               	movlw	-2
 16918  01661C  6AE3               	clrf	plusw1,c
 16919  01661E  2AE3               	incf	plusw1,f,c
 16920  016620                     l6754:
 16921                           
 16922                           ;stkvar	_divisor @ sp[(-2)+-4]
 16923  016620  0EFB               	movlw	-5
 16924  016622  AEE3               	btfss	plusw1,7,c
 16925  016624  D006               	goto	l6758
 16926                           
 16927                           ;stkvar	_divisor @ sp[(-2)+-4]
 16928                           ;stkvar	_divisor @ sp[(-2)+-4]
 16929  016626  0EFA               	movlw	-6
 16930  016628  6CE3               	negf	plusw1,c
 16931  01662A  0EFB               	movlw	-5
 16932  01662C  1EE3               	comf	plusw1,f,c
 16933  01662E  B0D8               	btfsc	status,0,c
 16934  016630  2AE3               	incf	plusw1,f,c
 16935  016632                     l6758:
 16936                           
 16937                           ;stkvar	_divisor @ sp[(-2)+-4]
 16938  016632  0EFA               	movlw	-6
 16939  016634  006F FF8C  F035    	movff	plusw1,btemp
 16940  01663A  0EFB               	movlw	-5
 16941  01663C  50E3               	movf	plusw1,w,c
 16942  01663E  1035               	iorwf	btemp^0,w,c
 16943  016640  B4D8               	btfsc	status,2,c
 16944  016642  D053               	goto	u5950
 16945                           
 16946                           ;stkvar	_counter @ sp[(-2)+1]
 16947  016644  0EFF               	movlw	-1
 16948  016646  6AE3               	clrf	plusw1,c
 16949  016648  D012               	goto	L13
 16950  01664A                     l6762:
 16951                           
 16952                           ;stkvar	_divisor @ sp[(-2)+-4]
 16953  01664A  0EFA               	movlw	-6
 16954  01664C  50E3               	movf	plusw1,w,c
 16955  01664E  90D8               	bcf	status,0,c
 16956  016650  34E8               	rlcf	wreg,w,c
 16957  016652  6E35               	movwf	btemp^0,c
 16958  016654  0EFA               	movlw	-6
 16959  016656  0060  F0D7  FFE3   	movff	btemp,plusw1
 16960  01665C  0EFB               	movlw	-5
 16961  01665E  50E3               	movf	plusw1,w,c
 16962  016660  34E8               	rlcf	wreg,w,c
 16963  016662  6E35               	movwf	btemp^0,c
 16964  016664  0EFB               	movlw	-5
 16965  016666  0060  F0D7  FFE3   	movff	btemp,plusw1
 16966                           
 16967                           ;stkvar	_counter @ sp[(-2)+1]
 16968  01666C  0EFF               	movlw	-1
 16969  01666E                     L13:
 16970  01666E  2AE3               	incf	plusw1,f,c
 16971                           
 16972                           ;stkvar	_divisor @ sp[(-2)+-4]
 16973  016670  0EFB               	movlw	-5
 16974  016672  AEE3               	btfss	plusw1,7,c
 16975  016674  D7EA               	goto	l6762
 16976  016676                     u5930:
 16977                           
 16978                           ;stkvar	_divisor @ sp[(-2)+-4]
 16979  016676  0EFA               	movlw	-6
 16980  016678  006F FF8C  F03F    	movff	plusw1,btemp+10
 16981  01667E  0EFB               	movlw	-5
 16982  016680  006F FF8C  F040    	movff	plusw1,btemp+11
 16983                           
 16984                           ;stkvar	_dividend @ sp[(-2)+-2]
 16985  016686  0EFC               	movlw	-4
 16986  016688  006F FF8C  F03D    	movff	plusw1,btemp+8
 16987  01668E  0EFD               	movlw	-3
 16988  016690  006F FF8C  F03E    	movff	plusw1,btemp+9
 16989  016696  503F               	movf	(btemp+10)^0,w,c
 16990  016698  5C3D               	subwf	(btemp+8)^0,w,c
 16991  01669A  5040               	movf	(btemp+11)^0,w,c
 16992  01669C  583E               	subwfb	(btemp+9)^0,w,c
 16993  01669E  A0D8               	btfss	status,0,c
 16994  0166A0  D014               	goto	l6772
 16995                           
 16996                           ;stkvar	_divisor @ sp[(-2)+-4]
 16997                           ;stkvar	_dividend @ sp[(-2)+-2]
 16998  0166A2  0EFC               	movlw	-4
 16999  0166A4  50E3               	movf	plusw1,w,c
 17000  0166A6  6E35               	movwf	btemp^0,c
 17001  0166A8  0EFA               	movlw	-6
 17002  0166AA  50E3               	movf	plusw1,w,c
 17003  0166AC  5E35               	subwf	btemp^0,f,c
 17004  0166AE  0EFC               	movlw	-4
 17005  0166B0  0060  F0D7  FFE3   	movff	btemp,plusw1
 17006  0166B6  0EFD               	movlw	-3
 17007  0166B8  50E3               	movf	plusw1,w,c
 17008  0166BA  6E35               	movwf	btemp^0,c
 17009  0166BC  0EFB               	movlw	-5
 17010  0166BE  50E3               	movf	plusw1,w,c
 17011  0166C0  5A35               	subwfb	btemp^0,f,c
 17012  0166C2  0EFD               	movlw	-3
 17013  0166C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 17014  0166CA                     l6772:
 17015                           
 17016                           ;stkvar	_divisor @ sp[(-2)+-4]
 17017  0166CA  90D8               	bcf	status,0,c
 17018  0166CC  0EFB               	movlw	-5
 17019  0166CE  32E3               	rrcf	plusw1,f,c
 17020  0166D0  0EFA               	movlw	-6
 17021  0166D2  32E3               	rrcf	plusw1,f,c
 17022                           
 17023                           ;stkvar	_counter @ sp[(-2)+1]
 17024  0166D4  0EFF               	movlw	-1
 17025  0166D6  50E3               	movf	plusw1,w,c
 17026  0166D8  6E35               	movwf	btemp^0,c
 17027  0166DA  0E01               	movlw	1
 17028  0166DC  5E35               	subwf	btemp^0,f,c
 17029  0166DE  0EFF               	movlw	-1
 17030  0166E0  0060  F0D7  FFE3   	movff	btemp,plusw1
 17031  0166E6  A4D8               	btfss	status,2,c
 17032  0166E8  D7C6               	goto	u5930
 17033  0166EA                     u5950:
 17034                           
 17035                           ;stkvar	_sign @ sp[(-2)+0]
 17036  0166EA  0EFE               	movlw	-2
 17037  0166EC  50E3               	movf	plusw1,w,c
 17038  0166EE  B4D8               	btfsc	status,2,c
 17039  0166F0  D006               	goto	l6780
 17040                           
 17041                           ;stkvar	_dividend @ sp[(-2)+-2]
 17042                           ;stkvar	_dividend @ sp[(-2)+-2]
 17043  0166F2  0EFC               	movlw	-4
 17044  0166F4  6CE3               	negf	plusw1,c
 17045  0166F6  0EFD               	movlw	-3
 17046  0166F8  1EE3               	comf	plusw1,f,c
 17047  0166FA  B0D8               	btfsc	status,0,c
 17048  0166FC  2AE3               	incf	plusw1,f,c
 17049  0166FE                     l6780:
 17050                           
 17051                           ;stkvar	_dividend @ sp[(-2)+-2]
 17052  0166FE  0EFC               	movlw	-4
 17053  016700  006F FF8C  F035    	movff	plusw1,btemp
 17054  016706  0EFD               	movlw	-3
 17055  016708  006F FF8C  F036    	movff	plusw1,btemp+1
 17056                           
 17057                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17058  01670E  0EFA               	movlw	250
 17059  016710  26E1               	addwf	fsr1l,f,c
 17060  016712  0EFF               	movlw	255
 17061  016714  22E2               	addwfc	fsr1h,f,c
 17062  016716  0012               	return		;funcret
 17063  016718                     __end_of___awmod:
 17064                           	opt callstack 0
 17065                           
 17066 ;; *************** function ___awdiv *****************
 17067 ;; Defined at:
 17068 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17069 ;; Parameters:    Size  Location     Type
 17070 ;;  dividend        2  [STACK] int 
 17071 ;;  divisor         2  [STACK] int 
 17072 ;; Auto vars:     Size  Location     Type
 17073 ;;  quotient        2  [STACK] int 
 17074 ;;  sign            1  [STACK] unsigned char 
 17075 ;;  counter         1  [STACK] unsigned char 
 17076 ;; Return value:  Size  Location     Type
 17077 ;;                  2  [STACK] int 
 17078 ;; Registers used:
 17079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17080 ;; Tracked objects:
 17081 ;;		On entry : 0/4
 17082 ;;		On exit  : 0/0
 17083 ;;		Unchanged: 0/0
 17084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17089 ;;Total ram usage:        0 bytes
 17090 ;; Hardware stack levels used:    1
 17091 ;; Hardware stack levels required when called:    6
 17092 ;; This function calls:
 17093 ;;		Nothing
 17094 ;; This function is called by:
 17095 ;;		_efgtoa
 17096 ;; This function uses a reentrant model
 17097 ;;
 17098                           
 17099                           	psect	text55
 17100  016260                     __ptext55:
 17101                           	opt callstack 0
 17102  016260                     ___awdiv:
 17103                           	opt callstack 0
 17104                           
 17105                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17106  016260  52E6               	movf	postinc1,f,c
 17107  016262  52E6               	movf	postinc1,f,c
 17108  016264  52E6               	movf	postinc1,f,c
 17109  016266  52E6               	movf	postinc1,f,c
 17110                           
 17111                           ;stkvar	_sign @ sp[(-4)+2]
 17112                           
 17113                           ;incstack = 0
 17114  016268  0EFE               	movlw	-2
 17115  01626A  6AE3               	clrf	plusw1,c
 17116                           
 17117                           ;stkvar	_divisor @ sp[(-4)+-4]
 17118  01626C  0EF9               	movlw	-7
 17119  01626E  AEE3               	btfss	plusw1,7,c
 17120  016270  D009               	goto	l6708
 17121                           
 17122                           ;stkvar	_divisor @ sp[(-4)+-4]
 17123                           ;stkvar	_divisor @ sp[(-4)+-4]
 17124  016272  0EF8               	movlw	-8
 17125  016274  6CE3               	negf	plusw1,c
 17126  016276  0EF9               	movlw	-7
 17127  016278  1EE3               	comf	plusw1,f,c
 17128  01627A  B0D8               	btfsc	status,0,c
 17129  01627C  2AE3               	incf	plusw1,f,c
 17130                           
 17131                           ;stkvar	_sign @ sp[(-4)+2]
 17132  01627E  0EFE               	movlw	-2
 17133  016280  6AE3               	clrf	plusw1,c
 17134  016282  2AE3               	incf	plusw1,f,c
 17135  016284                     l6708:
 17136                           
 17137                           ;stkvar	_dividend @ sp[(-4)+-2]
 17138  016284  0EFB               	movlw	-5
 17139  016286  AEE3               	btfss	plusw1,7,c
 17140  016288  D008               	goto	l6714
 17141                           
 17142                           ;stkvar	_dividend @ sp[(-4)+-2]
 17143                           ;stkvar	_dividend @ sp[(-4)+-2]
 17144  01628A  0EFA               	movlw	-6
 17145  01628C  6CE3               	negf	plusw1,c
 17146  01628E  0EFB               	movlw	-5
 17147  016290  1EE3               	comf	plusw1,f,c
 17148  016292  B0D8               	btfsc	status,0,c
 17149  016294  2AE3               	incf	plusw1,f,c
 17150                           
 17151                           ;stkvar	_sign @ sp[(-4)+2]
 17152  016296  0EFE               	movlw	-2
 17153  016298  70E3               	btg	plusw1,0,c
 17154  01629A                     l6714:
 17155                           
 17156                           ;stkvar	_quotient @ sp[(-4)+0]
 17157  01629A  0EFC               	movlw	-4
 17158  01629C  6AE3               	clrf	plusw1,c
 17159  01629E  0EFD               	movlw	-3
 17160  0162A0  6AE3               	clrf	plusw1,c
 17161                           
 17162                           ;stkvar	_divisor @ sp[(-4)+-4]
 17163  0162A2  0EF8               	movlw	-8
 17164  0162A4  006F FF8C  F035    	movff	plusw1,btemp
 17165  0162AA  0EF9               	movlw	-7
 17166  0162AC  50E3               	movf	plusw1,w,c
 17167  0162AE  1035               	iorwf	btemp^0,w,c
 17168  0162B0  B4D8               	btfsc	status,2,c
 17169  0162B2  D066               	goto	u5880
 17170                           
 17171                           ;stkvar	_counter @ sp[(-4)+3]
 17172  0162B4  0EFF               	movlw	-1
 17173  0162B6  6AE3               	clrf	plusw1,c
 17174  0162B8  D012               	goto	L14
 17175  0162BA                     l6720:
 17176                           
 17177                           ;stkvar	_divisor @ sp[(-4)+-4]
 17178  0162BA  0EF8               	movlw	-8
 17179  0162BC  50E3               	movf	plusw1,w,c
 17180  0162BE  90D8               	bcf	status,0,c
 17181  0162C0  34E8               	rlcf	wreg,w,c
 17182  0162C2  6E35               	movwf	btemp^0,c
 17183  0162C4  0EF8               	movlw	-8
 17184  0162C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 17185  0162CC  0EF9               	movlw	-7
 17186  0162CE  50E3               	movf	plusw1,w,c
 17187  0162D0  34E8               	rlcf	wreg,w,c
 17188  0162D2  6E35               	movwf	btemp^0,c
 17189  0162D4  0EF9               	movlw	-7
 17190  0162D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 17191                           
 17192                           ;stkvar	_counter @ sp[(-4)+3]
 17193  0162DC  0EFF               	movlw	-1
 17194  0162DE                     L14:
 17195  0162DE  2AE3               	incf	plusw1,f,c
 17196                           
 17197                           ;stkvar	_divisor @ sp[(-4)+-4]
 17198  0162E0  0EF9               	movlw	-7
 17199  0162E2  AEE3               	btfss	plusw1,7,c
 17200  0162E4  D7EA               	goto	l6720
 17201  0162E6                     u5860:
 17202                           
 17203                           ;stkvar	_quotient @ sp[(-4)+0]
 17204  0162E6  0EFC               	movlw	-4
 17205  0162E8  50E3               	movf	plusw1,w,c
 17206  0162EA  90D8               	bcf	status,0,c
 17207  0162EC  34E8               	rlcf	wreg,w,c
 17208  0162EE  6E35               	movwf	btemp^0,c
 17209  0162F0  0EFC               	movlw	-4
 17210  0162F2  0060  F0D7  FFE3   	movff	btemp,plusw1
 17211  0162F8  0EFD               	movlw	-3
 17212  0162FA  50E3               	movf	plusw1,w,c
 17213  0162FC  34E8               	rlcf	wreg,w,c
 17214  0162FE  6E35               	movwf	btemp^0,c
 17215  016300  0EFD               	movlw	-3
 17216  016302  0060  F0D7  FFE3   	movff	btemp,plusw1
 17217                           
 17218                           ;stkvar	_divisor @ sp[(-4)+-4]
 17219  016308  0EF8               	movlw	-8
 17220  01630A  006F FF8C  F03F    	movff	plusw1,btemp+10
 17221  016310  0EF9               	movlw	-7
 17222  016312  006F FF8C  F040    	movff	plusw1,btemp+11
 17223                           
 17224                           ;stkvar	_dividend @ sp[(-4)+-2]
 17225  016318  0EFA               	movlw	-6
 17226  01631A  006F FF8C  F03D    	movff	plusw1,btemp+8
 17227  016320  0EFB               	movlw	-5
 17228  016322  006F FF8C  F03E    	movff	plusw1,btemp+9
 17229  016328  503F               	movf	(btemp+10)^0,w,c
 17230  01632A  5C3D               	subwf	(btemp+8)^0,w,c
 17231  01632C  5040               	movf	(btemp+11)^0,w,c
 17232  01632E  583E               	subwfb	(btemp+9)^0,w,c
 17233  016330  A0D8               	btfss	status,0,c
 17234  016332  D016               	goto	l6734
 17235                           
 17236                           ;stkvar	_divisor @ sp[(-4)+-4]
 17237                           ;stkvar	_dividend @ sp[(-4)+-2]
 17238  016334  0EFA               	movlw	-6
 17239  016336  50E3               	movf	plusw1,w,c
 17240  016338  6E35               	movwf	btemp^0,c
 17241  01633A  0EF8               	movlw	-8
 17242  01633C  50E3               	movf	plusw1,w,c
 17243  01633E  5E35               	subwf	btemp^0,f,c
 17244  016340  0EFA               	movlw	-6
 17245  016342  0060  F0D7  FFE3   	movff	btemp,plusw1
 17246  016348  0EFB               	movlw	-5
 17247  01634A  50E3               	movf	plusw1,w,c
 17248  01634C  6E35               	movwf	btemp^0,c
 17249  01634E  0EF9               	movlw	-7
 17250  016350  50E3               	movf	plusw1,w,c
 17251  016352  5A35               	subwfb	btemp^0,f,c
 17252  016354  0EFB               	movlw	-5
 17253  016356  0060  F0D7  FFE3   	movff	btemp,plusw1
 17254                           
 17255                           ;stkvar	_quotient @ sp[(-4)+0]
 17256  01635C  0EFC               	movlw	-4
 17257  01635E  80E3               	bsf	plusw1,0,c
 17258  016360                     l6734:
 17259                           
 17260                           ;stkvar	_divisor @ sp[(-4)+-4]
 17261  016360  90D8               	bcf	status,0,c
 17262  016362  0EF9               	movlw	-7
 17263  016364  32E3               	rrcf	plusw1,f,c
 17264  016366  0EF8               	movlw	-8
 17265  016368  32E3               	rrcf	plusw1,f,c
 17266                           
 17267                           ;stkvar	_counter @ sp[(-4)+3]
 17268  01636A  0EFF               	movlw	-1
 17269  01636C  50E3               	movf	plusw1,w,c
 17270  01636E  6E35               	movwf	btemp^0,c
 17271  016370  0E01               	movlw	1
 17272  016372  5E35               	subwf	btemp^0,f,c
 17273  016374  0EFF               	movlw	-1
 17274  016376  0060  F0D7  FFE3   	movff	btemp,plusw1
 17275  01637C  A4D8               	btfss	status,2,c
 17276  01637E  D7B3               	goto	u5860
 17277  016380                     u5880:
 17278                           
 17279                           ;stkvar	_sign @ sp[(-4)+2]
 17280  016380  0EFE               	movlw	-2
 17281  016382  50E3               	movf	plusw1,w,c
 17282  016384  B4D8               	btfsc	status,2,c
 17283  016386  D006               	goto	l6742
 17284                           
 17285                           ;stkvar	_quotient @ sp[(-4)+0]
 17286                           ;stkvar	_quotient @ sp[(-4)+0]
 17287  016388  0EFC               	movlw	-4
 17288  01638A  6CE3               	negf	plusw1,c
 17289  01638C  0EFD               	movlw	-3
 17290  01638E  1EE3               	comf	plusw1,f,c
 17291  016390  B0D8               	btfsc	status,0,c
 17292  016392  2AE3               	incf	plusw1,f,c
 17293  016394                     l6742:
 17294                           
 17295                           ;stkvar	_quotient @ sp[(-4)+0]
 17296  016394  0EFC               	movlw	-4
 17297  016396  006F FF8C  F035    	movff	plusw1,btemp
 17298  01639C  0EFD               	movlw	-3
 17299  01639E  006F FF8C  F036    	movff	plusw1,btemp+1
 17300                           
 17301                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17302  0163A4  0EF8               	movlw	248
 17303  0163A6  26E1               	addwf	fsr1l,f,c
 17304  0163A8  0EFF               	movlw	255
 17305  0163AA  22E2               	addwfc	fsr1h,f,c
 17306  0163AC  0012               	return		;funcret
 17307  0163AE                     __end_of___awdiv:
 17308                           	opt callstack 0
 17309                           
 17310 ;; *************** function _dtoa *****************
 17311 ;; Defined at:
 17312 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17315 ;;		 -> f(6), NULL(0), 
 17316 ;;  d               8  [STACK] long long 
 17317 ;; Auto vars:     Size  Location     Type
 17318 ;;  n               8  [STACK] long long 
 17319 ;;  i               2  [STACK] int 
 17320 ;;  s               2  [STACK] int 
 17321 ;;  w               2  [STACK] int 
 17322 ;;  p               2  [STACK] int 
 17323 ;; Return value:  Size  Location     Type
 17324 ;;                  2  [STACK] int 
 17325 ;; Registers used:
 17326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17327 ;; Tracked objects:
 17328 ;;		On entry : 0/4
 17329 ;;		On exit  : 0/0
 17330 ;;		Unchanged: 0/0
 17331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17336 ;;Total ram usage:        0 bytes
 17337 ;; Hardware stack levels used:    1
 17338 ;; Hardware stack levels required when called:   11
 17339 ;; This function calls:
 17340 ;;		___aodiv
 17341 ;;		___aomod
 17342 ;;		_abs
 17343 ;;		_pad
 17344 ;; This function is called by:
 17345 ;;		_vfpfcnvrt
 17346 ;; This function uses a reentrant model
 17347 ;;
 17348                           
 17349                           	psect	text56
 17350  013928                     __ptext56:
 17351                           	opt callstack 0
 17352  013928                     _dtoa:
 17353                           	opt callstack 0
 17354                           
 17355                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17356  013928  0E12               	movlw	18
 17357  01392A  26E1               	addwf	fsr1l,f,c
 17358  01392C  0E00               	movlw	0
 17359  01392E  22E2               	addwfc	fsr1h,f,c
 17360                           
 17361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17362                           ;stkvar	_d @ sp[(-18)+-10]
 17363                           
 17364                           ;incstack = 0
 17365  013930  0EE4               	movlw	228
 17366  013932  24E1               	addwf	fsr1l,w,c
 17367  013934  6ED9               	movwf	fsr2l,c
 17368  013936  0EFF               	movlw	255
 17369  013938  20E2               	addwfc	fsr1h,w,c
 17370  01393A  6EDA               	movwf	fsr2h,c
 17371                           
 17372                           ;stkvar	_n @ sp[(-18)+2]
 17373  01393C  0E08               	movlw	8
 17374  01393E  6E35               	movwf	btemp^0,c
 17375  013940  0EF0               	movlw	-16
 17376  013942                     us857999:
 17377  013942  006F FF7B FFE3     	movff	postinc2,plusw1
 17378  013948  28E8               	incf	wreg,w,c
 17379  01394A  2E35               	decfsz	btemp^0,f,c
 17380  01394C  D7FA               	bra	us857999
 17381                           
 17382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17383                           ;stkvar	_n @ sp[(-18)+2]
 17384  01394E  0EF7               	movlw	-9
 17385  013950  AEE3               	btfss	plusw1,7,c
 17386  013952  D002               	goto	u8580
 17387  013954  0E01               	movlw	1
 17388  013956  D001               	goto	u8590
 17389  013958                     u8580:
 17390  013958  0E00               	movlw	0
 17391  01395A                     u8590:
 17392  01395A  6E3F               	movwf	(btemp+10)^0,c
 17393  01395C  6A40               	clrf	(btemp+11)^0,c
 17394                           
 17395                           ;stkvar	_s @ sp[(-18)+12]
 17396  01395E  0EFA               	movlw	-6
 17397  013960  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17398  013966  0EFB               	movlw	-5
 17399  013968  0060  F103  FFE3   	movff	btemp+11,plusw1
 17400                           
 17401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17402                           ;stkvar	_s @ sp[(-18)+12]
 17403  01396E  0EFA               	movlw	-6
 17404  013970  006F FF8C  F035    	movff	plusw1,btemp
 17405  013976  0EFB               	movlw	-5
 17406  013978  50E3               	movf	plusw1,w,c
 17407  01397A  1035               	iorwf	btemp^0,w,c
 17408  01397C  B4D8               	btfsc	status,2,c
 17409  01397E  D025               	goto	u8610
 17410                           
 17411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17412                           ;stkvar	_n @ sp[(-18)+2]
 17413                           ;stkvar	_n @ sp[(-18)+2]
 17414  013980  0EF0               	movlw	-16
 17415  013982  6CE3               	negf	plusw1,c
 17416  013984  0EF1               	movlw	-15
 17417  013986  1EE3               	comf	plusw1,f,c
 17418  013988  0EF2               	movlw	-14
 17419  01398A  1EE3               	comf	plusw1,f,c
 17420  01398C  0EF3               	movlw	-13
 17421  01398E  1EE3               	comf	plusw1,f,c
 17422  013990  0EF4               	movlw	-12
 17423  013992  1EE3               	comf	plusw1,f,c
 17424  013994  0EF5               	movlw	-11
 17425  013996  1EE3               	comf	plusw1,f,c
 17426  013998  0EF6               	movlw	-10
 17427  01399A  1EE3               	comf	plusw1,f,c
 17428  01399C  0EF7               	movlw	-9
 17429  01399E  1EE3               	comf	plusw1,f,c
 17430  0139A0  E314               	bnc	u8610
 17431  0139A2  0EF1               	movlw	-15
 17432  0139A4  2AE3               	incf	plusw1,f,c
 17433  0139A6  E311               	bnc	u8610
 17434  0139A8  0EF2               	movlw	-14
 17435  0139AA  2AE3               	incf	plusw1,f,c
 17436  0139AC  E30E               	bnc	u8610
 17437  0139AE  0EF3               	movlw	-13
 17438  0139B0  2AE3               	incf	plusw1,f,c
 17439  0139B2  E30B               	bnc	u8610
 17440  0139B4  0EF4               	movlw	-12
 17441  0139B6  2AE3               	incf	plusw1,f,c
 17442  0139B8  E308               	bnc	u8610
 17443  0139BA  0EF5               	movlw	-11
 17444  0139BC  2AE3               	incf	plusw1,f,c
 17445  0139BE  E305               	bnc	u8610
 17446  0139C0  0EF6               	movlw	-10
 17447  0139C2  2AE3               	incf	plusw1,f,c
 17448  0139C4  E302               	bnc	u8610
 17449  0139C6  0EF7               	movlw	-9
 17450  0139C8  2AE3               	incf	plusw1,f,c
 17451  0139CA                     u8610:
 17452                           
 17453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17454  0139CA  AE21               	btfss	(_prec+1)^0,7,c
 17455                           
 17456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17457  0139CC  9222               	bcf	_flags^0,1,c
 17458                           
 17459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17460  0139CE  BE21               	btfsc	(_prec+1)^0,7,c
 17461  0139D0  D005               	goto	u8630
 17462  0139D2  5021               	movf	(_prec+1)^0,w,c
 17463  0139D4  E110               	bnz	l8994
 17464  0139D6  0420               	decf	_prec^0,w,c
 17465  0139D8  B0D8               	btfsc	status,0,c
 17466  0139DA  D00D               	goto	l8994
 17467  0139DC                     u8630:
 17468  0139DC  0E01               	movlw	1
 17469  0139DE  6E3F               	movwf	(btemp+10)^0,c
 17470  0139E0  0E00               	movlw	0
 17471  0139E2  6E40               	movwf	(btemp+11)^0,c
 17472                           
 17473                           ;stkvar	_p @ sp[(-18)+16]
 17474  0139E4  0EFE               	movlw	-2
 17475  0139E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17476  0139EC  0EFF               	movlw	-1
 17477  0139EE  0060  F103  FFE3   	movff	btemp+11,plusw1
 17478  0139F4  D008               	goto	l1757
 17479  0139F6                     l8994:
 17480                           
 17481                           ;stkvar	_p @ sp[(-18)+16]
 17482  0139F6  0EFE               	movlw	-2
 17483  0139F8  0060  F083  FFE3   	movff	_prec,plusw1
 17484  0139FE  0EFF               	movlw	-1
 17485  013A00  0060  F087  FFE3   	movff	_prec+1,plusw1
 17486  013A06                     l1757:
 17487                           
 17488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17489                           ;stkvar	_w @ sp[(-18)+14]
 17490  013A06  0EFC               	movlw	-4
 17491  013A08  0060  F07B  FFE3   	movff	_width,plusw1
 17492  013A0E  0EFD               	movlw	-3
 17493  013A10  0060  F07F  FFE3   	movff	_width+1,plusw1
 17494                           
 17495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17496                           ;stkvar	_s @ sp[(-18)+12]
 17497  013A16  0EFA               	movlw	-6
 17498  013A18  006F FF8C  F035    	movff	plusw1,btemp
 17499  013A1E  0EFB               	movlw	-5
 17500  013A20  50E3               	movf	plusw1,w,c
 17501  013A22  1035               	iorwf	btemp^0,w,c
 17502  013A24  A4D8               	btfss	status,2,c
 17503  013A26  D002               	goto	u8650
 17504  013A28  A422               	btfss	_flags^0,2,c
 17505  013A2A  D00A               	goto	l9002
 17506  013A2C                     u8650:
 17507                           
 17508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17509                           ;stkvar	_w @ sp[(-18)+14]
 17510  013A2C  50E1               	movf	fsr1l,w,c
 17511  013A2E  0FFC               	addlw	-4
 17512  013A30  6ED9               	movwf	fsr2l,c
 17513  013A32  50E2               	movf	fsr1h,w,c
 17514  013A34  6EDA               	movwf	fsr2h,c
 17515  013A36  0EFF               	movlw	255
 17516  013A38  22DA               	addwfc	fsr2h,f,c
 17517  013A3A  06DE               	decf	postinc2,f,c
 17518  013A3C  0E00               	movlw	0
 17519  013A3E  5ADD               	subwfb	postdec2,f,c
 17520  013A40                     l9002:
 17521                           
 17522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17523  013A40  0E4F               	movlw	79
 17524  013A42  6E3F               	movwf	(btemp+10)^0,c
 17525  013A44  0E00               	movlw	0
 17526  013A46  6E40               	movwf	(btemp+11)^0,c
 17527                           
 17528                           ;stkvar	_i @ sp[(-18)+10]
 17529  013A48  0EF8               	movlw	-8
 17530  013A4A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17531  013A50  0EF9               	movlw	-7
 17532  013A52  0060  F103  FFE3   	movff	btemp+11,plusw1
 17533                           
 17534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17535  013A58  0101               	movlb	1	; () banked
 17536  013A5A  6BF3               	clrf	(_dbuf+79)& (0+255),b
 17537                           
 17538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17539  013A5C  D109               	goto	l9016
 17540  013A5E                     l9006:
 17541                           
 17542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17543                           ;stkvar	_i @ sp[(-18)+10]
 17544  013A5E  50E1               	movf	fsr1l,w,c
 17545  013A60  0FF8               	addlw	-8
 17546  013A62  6ED9               	movwf	fsr2l,c
 17547  013A64  50E2               	movf	fsr1h,w,c
 17548  013A66  6EDA               	movwf	fsr2h,c
 17549  013A68  0EFF               	movlw	255
 17550  013A6A  22DA               	addwfc	fsr2h,f,c
 17551  013A6C  06DE               	decf	postinc2,f,c
 17552  013A6E  0E00               	movlw	0
 17553  013A70  5ADD               	subwfb	postdec2,f,c
 17554                           
 17555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17556  013A72  0E0A               	movlw	10
 17557  013A74  6EE6               	movwf	postinc1,c
 17558  013A76  0E00               	movlw	0
 17559  013A78  6EE6               	movwf	postinc1,c
 17560  013A7A  0E00               	movlw	0
 17561  013A7C  6EE6               	movwf	postinc1,c
 17562  013A7E  0E00               	movlw	0
 17563  013A80  6EE6               	movwf	postinc1,c
 17564  013A82  0E00               	movlw	0
 17565  013A84  6EE6               	movwf	postinc1,c
 17566  013A86  0E00               	movlw	0
 17567  013A88  6EE6               	movwf	postinc1,c
 17568  013A8A  0E00               	movlw	0
 17569  013A8C  6EE6               	movwf	postinc1,c
 17570  013A8E  0E00               	movlw	0
 17571  013A90  6EE6               	movwf	postinc1,c
 17572                           
 17573                           ;stkvar	_n @ sp[(-26)+2]
 17574  013A92  50E1               	movf	fsr1l,w,c
 17575  013A94  0FE8               	addlw	-24
 17576  013A96  6ED9               	movwf	fsr2l,c
 17577  013A98  50E2               	movf	fsr1h,w,c
 17578  013A9A  6EDA               	movwf	fsr2h,c
 17579  013A9C  0EFF               	movlw	255
 17580  013A9E  22DA               	addwfc	fsr2h,f,c
 17581  013AA0  006F FF7B FFE6     	movff	postinc2,postinc1
 17582  013AA6  006F FF7B FFE6     	movff	postinc2,postinc1
 17583  013AAC  006F FF7B FFE6     	movff	postinc2,postinc1
 17584  013AB2  006F FF7B FFE6     	movff	postinc2,postinc1
 17585  013AB8  006F FF7B FFE6     	movff	postinc2,postinc1
 17586  013ABE  006F FF7B FFE6     	movff	postinc2,postinc1
 17587  013AC4  006F FF7B FFE6     	movff	postinc2,postinc1
 17588  013ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 17589  013AD0  ECEC  F0AA         	call	___aomod	;wreg free
 17590  013AD4  52E5               	movf	postdec1,f,c
 17591  013AD6  006F FF9C  F04C    	movff	indf1,btemp+23
 17592  013ADC  52E5               	movf	postdec1,f,c
 17593  013ADE  006F FF9C  F04B    	movff	indf1,btemp+22
 17594  013AE4  52E5               	movf	postdec1,f,c
 17595  013AE6  006F FF9C  F04A    	movff	indf1,btemp+21
 17596  013AEC  52E5               	movf	postdec1,f,c
 17597  013AEE  006F FF9C  F049    	movff	indf1,btemp+20
 17598  013AF4  52E5               	movf	postdec1,f,c
 17599  013AF6  006F FF9C  F048    	movff	indf1,btemp+19
 17600  013AFC  52E5               	movf	postdec1,f,c
 17601  013AFE  006F FF9C  F047    	movff	indf1,btemp+18
 17602  013B04  52E5               	movf	postdec1,f,c
 17603  013B06  006F FF9C  F046    	movff	indf1,btemp+17
 17604  013B0C  52E5               	movf	postdec1,f,c
 17605  013B0E  006F FF9C  F045    	movff	indf1,btemp+16
 17606  013B14  0EF8               	movlw	248
 17607  013B16  26E1               	addwf	fsr1l,f,c
 17608  013B18  0EFF               	movlw	255
 17609  013B1A  22E2               	addwfc	fsr1h,f,c
 17610  013B1C  0060  F114  F03F   	movff	btemp+16,btemp+10
 17611  013B22  0060  F118  F040   	movff	btemp+17,btemp+11
 17612  013B28  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17613  013B2E  0060  F103  FFE6   	movff	btemp+11,postinc1
 17614  013B34  EC49  F0BD         	call	_abs	;wreg free
 17615  013B38  0E30               	movlw	48
 17616  013B3A  2635               	addwf	btemp^0,f,c
 17617                           
 17618                           ;stkvar	_i @ sp[(-18)+10]
 17619  013B3C  0EF8               	movlw	-8
 17620  013B3E  006F FF8C  F03F    	movff	plusw1,btemp+10
 17621  013B44  0EF9               	movlw	-7
 17622  013B46  006F FF8C  F040    	movff	plusw1,btemp+11
 17623  013B4C  0EA4               	movlw	low _dbuf
 17624  013B4E  243F               	addwf	(btemp+10)^0,w,c
 17625  013B50  6ED9               	movwf	fsr2l,c
 17626  013B52  0E01               	movlw	high _dbuf
 17627  013B54  2040               	addwfc	(btemp+11)^0,w,c
 17628  013B56  6EDA               	movwf	fsr2h,c
 17629  013B58  0060  F0D7  FFDF   	movff	btemp,indf2
 17630                           
 17631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17632                           ;stkvar	_p @ sp[(-18)+16]
 17633  013B5E  50E1               	movf	fsr1l,w,c
 17634  013B60  0FFE               	addlw	-2
 17635  013B62  6ED9               	movwf	fsr2l,c
 17636  013B64  50E2               	movf	fsr1h,w,c
 17637  013B66  6EDA               	movwf	fsr2h,c
 17638  013B68  0EFF               	movlw	255
 17639  013B6A  22DA               	addwfc	fsr2h,f,c
 17640  013B6C  06DE               	decf	postinc2,f,c
 17641  013B6E  0E00               	movlw	0
 17642  013B70  5ADD               	subwfb	postdec2,f,c
 17643                           
 17644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17645                           ;stkvar	_w @ sp[(-18)+14]
 17646  013B72  50E1               	movf	fsr1l,w,c
 17647  013B74  0FFC               	addlw	-4
 17648  013B76  6ED9               	movwf	fsr2l,c
 17649  013B78  50E2               	movf	fsr1h,w,c
 17650  013B7A  6EDA               	movwf	fsr2h,c
 17651  013B7C  0EFF               	movlw	255
 17652  013B7E  22DA               	addwfc	fsr2h,f,c
 17653  013B80  06DE               	decf	postinc2,f,c
 17654  013B82  0E00               	movlw	0
 17655  013B84  5ADD               	subwfb	postdec2,f,c
 17656                           
 17657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17658  013B86  0E0A               	movlw	10
 17659  013B88  6EE6               	movwf	postinc1,c
 17660  013B8A  0E00               	movlw	0
 17661  013B8C  6EE6               	movwf	postinc1,c
 17662  013B8E  0E00               	movlw	0
 17663  013B90  6EE6               	movwf	postinc1,c
 17664  013B92  0E00               	movlw	0
 17665  013B94  6EE6               	movwf	postinc1,c
 17666  013B96  0E00               	movlw	0
 17667  013B98  6EE6               	movwf	postinc1,c
 17668  013B9A  0E00               	movlw	0
 17669  013B9C  6EE6               	movwf	postinc1,c
 17670  013B9E  0E00               	movlw	0
 17671  013BA0  6EE6               	movwf	postinc1,c
 17672  013BA2  0E00               	movlw	0
 17673  013BA4  6EE6               	movwf	postinc1,c
 17674                           
 17675                           ;stkvar	_n @ sp[(-26)+2]
 17676  013BA6  50E1               	movf	fsr1l,w,c
 17677  013BA8  0FE8               	addlw	-24
 17678  013BAA  6ED9               	movwf	fsr2l,c
 17679  013BAC  50E2               	movf	fsr1h,w,c
 17680  013BAE  6EDA               	movwf	fsr2h,c
 17681  013BB0  0EFF               	movlw	255
 17682  013BB2  22DA               	addwfc	fsr2h,f,c
 17683  013BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 17684  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 17685  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 17686  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 17687  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 17688  013BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 17689  013BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 17690  013BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 17691  013BE4  EC43  F0A7         	call	___aodiv	;wreg free
 17692  013BE8  52E5               	movf	postdec1,f,c
 17693  013BEA  006F FF9C  F04C    	movff	indf1,btemp+23
 17694  013BF0  52E5               	movf	postdec1,f,c
 17695  013BF2  006F FF9C  F04B    	movff	indf1,btemp+22
 17696  013BF8  52E5               	movf	postdec1,f,c
 17697  013BFA  006F FF9C  F04A    	movff	indf1,btemp+21
 17698  013C00  52E5               	movf	postdec1,f,c
 17699  013C02  006F FF9C  F049    	movff	indf1,btemp+20
 17700  013C08  52E5               	movf	postdec1,f,c
 17701  013C0A  006F FF9C  F048    	movff	indf1,btemp+19
 17702  013C10  52E5               	movf	postdec1,f,c
 17703  013C12  006F FF9C  F047    	movff	indf1,btemp+18
 17704  013C18  52E5               	movf	postdec1,f,c
 17705  013C1A  006F FF9C  F046    	movff	indf1,btemp+17
 17706  013C20  52E5               	movf	postdec1,f,c
 17707  013C22  006F FF9C  F045    	movff	indf1,btemp+16
 17708  013C28  0EF8               	movlw	248
 17709  013C2A  26E1               	addwf	fsr1l,f,c
 17710  013C2C  0EFF               	movlw	255
 17711  013C2E  22E2               	addwfc	fsr1h,f,c
 17712                           
 17713                           ;stkvar	_n @ sp[(-18)+2]
 17714  013C30  0EF0               	movlw	-16
 17715  013C32  0060  F117  FFE3   	movff	btemp+16,plusw1
 17716  013C38  0EF1               	movlw	-15
 17717  013C3A  0060  F11B  FFE3   	movff	btemp+17,plusw1
 17718  013C40  0EF2               	movlw	-14
 17719  013C42  0060  F11F  FFE3   	movff	btemp+18,plusw1
 17720  013C48  0EF3               	movlw	-13
 17721  013C4A  0060  F123  FFE3   	movff	btemp+19,plusw1
 17722  013C50  0EF4               	movlw	-12
 17723  013C52  0060  F127  FFE3   	movff	btemp+20,plusw1
 17724  013C58  0EF5               	movlw	-11
 17725  013C5A  0060  F12B  FFE3   	movff	btemp+21,plusw1
 17726  013C60  0EF6               	movlw	-10
 17727  013C62  0060  F12F  FFE3   	movff	btemp+22,plusw1
 17728  013C68  0EF7               	movlw	-9
 17729  013C6A  0060  F133  FFE3   	movff	btemp+23,plusw1
 17730  013C70                     l9016:
 17731                           
 17732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17733                           ;stkvar	_i @ sp[(-18)+10]
 17734  013C70  0EF9               	movlw	-7
 17735  013C72  BEE3               	btfsc	plusw1,7,c
 17736  013C74  D036               	goto	u8700
 17737  013C76  0EF9               	movlw	-7
 17738  013C78  50E3               	movf	plusw1,w,c
 17739  013C7A  E104               	bnz	u8660
 17740  013C7C  0EF8               	movlw	-8
 17741  013C7E  04E3               	decf	plusw1,w,c
 17742  013C80  A0D8               	btfss	status,0,c
 17743  013C82  D02F               	goto	u8700
 17744  013C84                     u8660:
 17745                           
 17746                           ;stkvar	_n @ sp[(-18)+2]
 17747  013C84  0EF0               	movlw	-16
 17748  013C86  50E3               	movf	plusw1,w,c
 17749  013C88  E115               	bnz	u8671
 17750  013C8A  0EF1               	movlw	-15
 17751  013C8C  50E3               	movf	plusw1,w,c
 17752  013C8E  E112               	bnz	u8671
 17753  013C90  0EF2               	movlw	-14
 17754  013C92  50E3               	movf	plusw1,w,c
 17755  013C94  E10F               	bnz	u8671
 17756  013C96  0EF3               	movlw	-13
 17757  013C98  50E3               	movf	plusw1,w,c
 17758  013C9A  E10C               	bnz	u8671
 17759  013C9C  0EF4               	movlw	-12
 17760  013C9E  50E3               	movf	plusw1,w,c
 17761  013CA0  E109               	bnz	u8671
 17762  013CA2  0EF5               	movlw	-11
 17763  013CA4  50E3               	movf	plusw1,w,c
 17764  013CA6  E106               	bnz	u8671
 17765  013CA8  0EF6               	movlw	-10
 17766  013CAA  50E3               	movf	plusw1,w,c
 17767  013CAC  E103               	bnz	u8671
 17768  013CAE  0EF7               	movlw	-9
 17769  013CB0  50E3               	movf	plusw1,w,c
 17770  013CB2  A4D8               	btfss	status,2,c
 17771  013CB4                     u8671:
 17772  013CB4  D6D4               	goto	l9006
 17773                           
 17774                           ;stkvar	_p @ sp[(-18)+16]
 17775  013CB6  0EFF               	movlw	-1
 17776  013CB8  BEE3               	btfsc	plusw1,7,c
 17777  013CBA  D007               	goto	u8680
 17778  013CBC  0EFF               	movlw	-1
 17779  013CBE  50E3               	movf	plusw1,w,c
 17780  013CC0  E103               	bnz	u8681
 17781  013CC2  0EFE               	movlw	-2
 17782  013CC4  04E3               	decf	plusw1,w,c
 17783  013CC6  B0D8               	btfsc	status,0,c
 17784  013CC8                     u8681:
 17785  013CC8  D6CA               	goto	l9006
 17786  013CCA                     u8680:
 17787                           
 17788                           ;stkvar	_w @ sp[(-18)+14]
 17789  013CCA  0EFD               	movlw	-3
 17790  013CCC  BEE3               	btfsc	plusw1,7,c
 17791  013CCE  D009               	goto	u8700
 17792  013CD0  0EFD               	movlw	-3
 17793  013CD2  50E3               	movf	plusw1,w,c
 17794  013CD4  E104               	bnz	u8690
 17795  013CD6  0EFC               	movlw	-4
 17796  013CD8  04E3               	decf	plusw1,w,c
 17797  013CDA  A0D8               	btfss	status,0,c
 17798  013CDC  D002               	goto	u8700
 17799  013CDE                     u8690:
 17800  013CDE  B222               	btfsc	_flags^0,1,c
 17801  013CE0  D6BE               	goto	l9006
 17802  013CE2                     u8700:
 17803                           
 17804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17805                           ;stkvar	_s @ sp[(-18)+12]
 17806  013CE2  0EFA               	movlw	-6
 17807  013CE4  006F FF8C  F035    	movff	plusw1,btemp
 17808  013CEA  0EFB               	movlw	-5
 17809  013CEC  50E3               	movf	plusw1,w,c
 17810  013CEE  1035               	iorwf	btemp^0,w,c
 17811  013CF0  A4D8               	btfss	status,2,c
 17812  013CF2  D002               	goto	u8720
 17813  013CF4  A422               	btfss	_flags^0,2,c
 17814  013CF6  D033               	goto	l9040
 17815  013CF8                     u8720:
 17816                           
 17817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17818                           ;stkvar	_i @ sp[(-18)+10]
 17819  013CF8  50E1               	movf	fsr1l,w,c
 17820  013CFA  0FF8               	addlw	-8
 17821  013CFC  6ED9               	movwf	fsr2l,c
 17822  013CFE  50E2               	movf	fsr1h,w,c
 17823  013D00  6EDA               	movwf	fsr2h,c
 17824  013D02  0EFF               	movlw	255
 17825  013D04  22DA               	addwfc	fsr2h,f,c
 17826  013D06  06DE               	decf	postinc2,f,c
 17827  013D08  0E00               	movlw	0
 17828  013D0A  5ADD               	subwfb	postdec2,f,c
 17829                           
 17830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17831                           ;stkvar	_s @ sp[(-18)+12]
 17832  013D0C  0EFA               	movlw	-6
 17833  013D0E  006F FF8C  F035    	movff	plusw1,btemp
 17834  013D14  0EFB               	movlw	-5
 17835  013D16  50E3               	movf	plusw1,w,c
 17836  013D18  1035               	iorwf	btemp^0,w,c
 17837  013D1A  A4D8               	btfss	status,2,c
 17838  013D1C  D002               	goto	l9036
 17839  013D1E  0E2B               	movlw	43
 17840  013D20  D001               	goto	L15
 17841  013D22                     l9036:
 17842  013D22  0E2D               	movlw	45
 17843  013D24                     L15:
 17844  013D24  6E3F               	movwf	(btemp+10)^0,c
 17845  013D26  0E00               	movlw	0
 17846  013D28  6E40               	movwf	(btemp+11)^0,c
 17847                           
 17848                           ;stkvar	_dtoa$4086 @ sp[(-18)+0]
 17849  013D2A  0EEE               	movlw	-18
 17850  013D2C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17851  013D32  0EEF               	movlw	-17
 17852  013D34  0060  F103  FFE3   	movff	btemp+11,plusw1
 17853                           
 17854                           ;stkvar	_dtoa$4086 @ sp[(-18)+0]
 17855                           ;stkvar	_i @ sp[(-18)+10]
 17856  013D3A  0EF8               	movlw	-8
 17857  013D3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 17858  013D42  0EF9               	movlw	-7
 17859  013D44  006F FF8C  F040    	movff	plusw1,btemp+11
 17860  013D4A  0EA4               	movlw	low _dbuf
 17861  013D4C  243F               	addwf	(btemp+10)^0,w,c
 17862  013D4E  6ED9               	movwf	fsr2l,c
 17863  013D50  0E01               	movlw	high _dbuf
 17864  013D52  2040               	addwfc	(btemp+11)^0,w,c
 17865  013D54  6EDA               	movwf	fsr2h,c
 17866  013D56  0EEE               	movlw	-18
 17867  013D58  006F FF8F FFDF     	movff	plusw1,indf2
 17868  013D5E                     l9040:
 17869                           
 17870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17871                           ;stkvar	_w @ sp[(-18)+14]
 17872  013D5E  0EFC               	movlw	-4
 17873  013D60  006F FF8F FFE6     	movff	plusw1,postinc1
 17874  013D66  006F FF8F FFE6     	movff	plusw1,postinc1
 17875                           
 17876                           ;stkvar	_i @ sp[(-20)+10]
 17877  013D6C  0EA4               	movlw	low _dbuf
 17878  013D6E  6E3F               	movwf	(btemp+10)^0,c
 17879  013D70  0E01               	movlw	high _dbuf
 17880  013D72  6E40               	movwf	(btemp+11)^0,c
 17881  013D74  0EF6               	movlw	-10
 17882  013D76  50E3               	movf	plusw1,w,c
 17883  013D78  263F               	addwf	(btemp+10)^0,f,c
 17884  013D7A  0EF7               	movlw	-9
 17885  013D7C  50E3               	movf	plusw1,w,c
 17886  013D7E  2240               	addwfc	(btemp+11)^0,f,c
 17887  013D80  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17888  013D86  0060  F103  FFE6   	movff	btemp+11,postinc1
 17889                           
 17890                           ;stkvar	_fp @ sp[(-22)+-2]
 17891  013D8C  0EE8               	movlw	-24
 17892  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 17893  013D94  006F FF8F FFE6     	movff	plusw1,postinc1
 17894  013D9A  EC8C  F0B3         	call	_pad	;wreg free
 17895                           
 17896                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17897  013D9E  0EE4               	movlw	228
 17898  013DA0  26E1               	addwf	fsr1l,f,c
 17899  013DA2  0EFF               	movlw	255
 17900  013DA4  22E2               	addwfc	fsr1h,f,c
 17901  013DA6  0012               	return		;funcret
 17902  013DA8                     __end_of_dtoa:
 17903                           	opt callstack 0
 17904                           
 17905 ;; *************** function _abs *****************
 17906 ;; Defined at:
 17907 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17908 ;; Parameters:    Size  Location     Type
 17909 ;;  a               2  [STACK] int 
 17910 ;; Auto vars:     Size  Location     Type
 17911 ;;		None
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  2  [STACK] int 
 17914 ;; Registers used:
 17915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17916 ;; Tracked objects:
 17917 ;;		On entry : 0/1
 17918 ;;		On exit  : 0/0
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17925 ;;Total ram usage:        0 bytes
 17926 ;; Hardware stack levels used:    1
 17927 ;; Hardware stack levels required when called:    6
 17928 ;; This function calls:
 17929 ;;		Nothing
 17930 ;; This function is called by:
 17931 ;;		_dtoa
 17932 ;; This function uses a reentrant model
 17933 ;;
 17934                           
 17935                           	psect	text57
 17936  017A92                     __ptext57:
 17937                           	opt callstack 0
 17938  017A92                     _abs:
 17939                           	opt callstack 17
 17940                           
 17941                           ;stkvar	_a @ sp[(0)+-2]
 17942                           
 17943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17944                           ;incstack = 0
 17945  017A92  0EFF               	movlw	-1
 17946  017A94  BEE3               	btfsc	plusw1,7,c
 17947  017A96  D007               	goto	u4840
 17948  017A98  0EFF               	movlw	-1
 17949  017A9A  50E3               	movf	plusw1,w,c
 17950  017A9C  E112               	bnz	l6196
 17951  017A9E  0EFE               	movlw	-2
 17952  017AA0  04E3               	decf	plusw1,w,c
 17953  017AA2  B0D8               	btfsc	status,0,c
 17954  017AA4  D00E               	goto	l6196
 17955  017AA6                     u4840:
 17956                           
 17957                           ;stkvar	_a @ sp[(0)+-2]
 17958  017AA6  0EFE               	movlw	-2
 17959  017AA8  006F FF8C  F035    	movff	plusw1,btemp
 17960  017AAE  1E35               	comf	btemp^0,f,c
 17961  017AB0  0EFF               	movlw	-1
 17962  017AB2  006F FF8C  F036    	movff	plusw1,btemp+1
 17963  017AB8  1E36               	comf	(btemp+1)^0,f,c
 17964  017ABA  2A35               	incf	btemp^0,f,c
 17965  017ABC  B4D8               	btfsc	status,2,c
 17966  017ABE  2A36               	incf	(btemp+1)^0,f,c
 17967  017AC0  D008               	goto	l2660
 17968  017AC2                     l6196:
 17969                           
 17970                           ;stkvar	_a @ sp[(0)+-2]
 17971  017AC2  0EFE               	movlw	-2
 17972  017AC4  006F FF8C  F035    	movff	plusw1,btemp
 17973  017ACA  0EFF               	movlw	-1
 17974  017ACC  006F FF8C  F036    	movff	plusw1,btemp+1
 17975  017AD2                     l2660:
 17976                           
 17977                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17978  017AD2  52E5               	movf	postdec1,f,c
 17979  017AD4  52E5               	movf	postdec1,f,c
 17980  017AD6  0012               	return		;funcret
 17981  017AD8                     __end_of_abs:
 17982                           	opt callstack 0
 17983                           
 17984 ;; *************** function ___aomod *****************
 17985 ;; Defined at:
 17986 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17987 ;; Parameters:    Size  Location     Type
 17988 ;;  dividend        8  [STACK] long long 
 17989 ;;  divisor         8  [STACK] long long 
 17990 ;; Auto vars:     Size  Location     Type
 17991 ;;  sign            1  [STACK] unsigned char 
 17992 ;;  counter         1  [STACK] unsigned char 
 17993 ;; Return value:  Size  Location     Type
 17994 ;;                  8  [STACK] long long 
 17995 ;; Registers used:
 17996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17997 ;; Tracked objects:
 17998 ;;		On entry : 0/1
 17999 ;;		On exit  : 0/0
 18000 ;;		Unchanged: 0/0
 18001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18006 ;;Total ram usage:        0 bytes
 18007 ;; Hardware stack levels used:    1
 18008 ;; Hardware stack levels required when called:    6
 18009 ;; This function calls:
 18010 ;;		Nothing
 18011 ;; This function is called by:
 18012 ;;		_dtoa
 18013 ;; This function uses a reentrant model
 18014 ;;
 18015                           
 18016                           	psect	text58
 18017  0155D8                     __ptext58:
 18018                           	opt callstack 0
 18019  0155D8                     ___aomod:
 18020                           	opt callstack 0
 18021                           
 18022                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18023  0155D8  52E6               	movf	postinc1,f,c
 18024  0155DA  52E6               	movf	postinc1,f,c
 18025                           
 18026                           ;stkvar	_sign @ sp[(-2)+0]
 18027                           
 18028                           ;incstack = 0
 18029  0155DC  0EFE               	movlw	-2
 18030  0155DE  6AE3               	clrf	plusw1,c
 18031                           
 18032                           ;stkvar	_dividend @ sp[(-2)+-8]
 18033  0155E0  0EFD               	movlw	-3
 18034  0155E2  AEE3               	btfss	plusw1,7,c
 18035  0155E4  D028               	goto	l6354
 18036                           
 18037                           ;stkvar	_dividend @ sp[(-2)+-8]
 18038                           ;stkvar	_dividend @ sp[(-2)+-8]
 18039  0155E6  0EF6               	movlw	-10
 18040  0155E8  6CE3               	negf	plusw1,c
 18041  0155EA  0EF7               	movlw	-9
 18042  0155EC  1EE3               	comf	plusw1,f,c
 18043  0155EE  0EF8               	movlw	-8
 18044  0155F0  1EE3               	comf	plusw1,f,c
 18045  0155F2  0EF9               	movlw	-7
 18046  0155F4  1EE3               	comf	plusw1,f,c
 18047  0155F6  0EFA               	movlw	-6
 18048  0155F8  1EE3               	comf	plusw1,f,c
 18049  0155FA  0EFB               	movlw	-5
 18050  0155FC  1EE3               	comf	plusw1,f,c
 18051  0155FE  0EFC               	movlw	-4
 18052  015600  1EE3               	comf	plusw1,f,c
 18053  015602  0EFD               	movlw	-3
 18054  015604  1EE3               	comf	plusw1,f,c
 18055  015606  E314               	bnc	u5270
 18056  015608  0EF7               	movlw	-9
 18057  01560A  2AE3               	incf	plusw1,f,c
 18058  01560C  E311               	bnc	u5270
 18059  01560E  0EF8               	movlw	-8
 18060  015610  2AE3               	incf	plusw1,f,c
 18061  015612  E30E               	bnc	u5270
 18062  015614  0EF9               	movlw	-7
 18063  015616  2AE3               	incf	plusw1,f,c
 18064  015618  E30B               	bnc	u5270
 18065  01561A  0EFA               	movlw	-6
 18066  01561C  2AE3               	incf	plusw1,f,c
 18067  01561E  E308               	bnc	u5270
 18068  015620  0EFB               	movlw	-5
 18069  015622  2AE3               	incf	plusw1,f,c
 18070  015624  E305               	bnc	u5270
 18071  015626  0EFC               	movlw	-4
 18072  015628  2AE3               	incf	plusw1,f,c
 18073  01562A  E302               	bnc	u5270
 18074  01562C  0EFD               	movlw	-3
 18075  01562E  2AE3               	incf	plusw1,f,c
 18076  015630                     u5270:
 18077                           
 18078                           ;stkvar	_sign @ sp[(-2)+0]
 18079  015630  0EFE               	movlw	-2
 18080  015632  6AE3               	clrf	plusw1,c
 18081  015634  2AE3               	incf	plusw1,f,c
 18082  015636                     l6354:
 18083                           
 18084                           ;stkvar	_divisor @ sp[(-2)+-16]
 18085  015636  0EF5               	movlw	-11
 18086  015638  AEE3               	btfss	plusw1,7,c
 18087  01563A  D025               	goto	u5290
 18088                           
 18089                           ;stkvar	_divisor @ sp[(-2)+-16]
 18090                           ;stkvar	_divisor @ sp[(-2)+-16]
 18091  01563C  0EEE               	movlw	-18
 18092  01563E  6CE3               	negf	plusw1,c
 18093  015640  0EEF               	movlw	-17
 18094  015642  1EE3               	comf	plusw1,f,c
 18095  015644  0EF0               	movlw	-16
 18096  015646  1EE3               	comf	plusw1,f,c
 18097  015648  0EF1               	movlw	-15
 18098  01564A  1EE3               	comf	plusw1,f,c
 18099  01564C  0EF2               	movlw	-14
 18100  01564E  1EE3               	comf	plusw1,f,c
 18101  015650  0EF3               	movlw	-13
 18102  015652  1EE3               	comf	plusw1,f,c
 18103  015654  0EF4               	movlw	-12
 18104  015656  1EE3               	comf	plusw1,f,c
 18105  015658  0EF5               	movlw	-11
 18106  01565A  1EE3               	comf	plusw1,f,c
 18107  01565C  E314               	bnc	u5290
 18108  01565E  0EEF               	movlw	-17
 18109  015660  2AE3               	incf	plusw1,f,c
 18110  015662  E311               	bnc	u5290
 18111  015664  0EF0               	movlw	-16
 18112  015666  2AE3               	incf	plusw1,f,c
 18113  015668  E30E               	bnc	u5290
 18114  01566A  0EF1               	movlw	-15
 18115  01566C  2AE3               	incf	plusw1,f,c
 18116  01566E  E30B               	bnc	u5290
 18117  015670  0EF2               	movlw	-14
 18118  015672  2AE3               	incf	plusw1,f,c
 18119  015674  E308               	bnc	u5290
 18120  015676  0EF3               	movlw	-13
 18121  015678  2AE3               	incf	plusw1,f,c
 18122  01567A  E305               	bnc	u5290
 18123  01567C  0EF4               	movlw	-12
 18124  01567E  2AE3               	incf	plusw1,f,c
 18125  015680  E302               	bnc	u5290
 18126  015682  0EF5               	movlw	-11
 18127  015684  2AE3               	incf	plusw1,f,c
 18128  015686                     u5290:
 18129                           
 18130                           ;stkvar	_divisor @ sp[(-2)+-16]
 18131  015686  0EEE               	movlw	-18
 18132  015688  50E3               	movf	plusw1,w,c
 18133  01568A  E116               	bnz	u5300
 18134  01568C  0EEF               	movlw	-17
 18135  01568E  50E3               	movf	plusw1,w,c
 18136  015690  E113               	bnz	u5300
 18137  015692  0EF0               	movlw	-16
 18138  015694  50E3               	movf	plusw1,w,c
 18139  015696  E110               	bnz	u5300
 18140  015698  0EF1               	movlw	-15
 18141  01569A  50E3               	movf	plusw1,w,c
 18142  01569C  E10D               	bnz	u5300
 18143  01569E  0EF2               	movlw	-14
 18144  0156A0  50E3               	movf	plusw1,w,c
 18145  0156A2  E10A               	bnz	u5300
 18146  0156A4  0EF3               	movlw	-13
 18147  0156A6  50E3               	movf	plusw1,w,c
 18148  0156A8  E107               	bnz	u5300
 18149  0156AA  0EF4               	movlw	-12
 18150  0156AC  50E3               	movf	plusw1,w,c
 18151  0156AE  E104               	bnz	u5300
 18152  0156B0  0EF5               	movlw	-11
 18153  0156B2  50E3               	movf	plusw1,w,c
 18154  0156B4  B4D8               	btfsc	status,2,c
 18155  0156B6  D075               	goto	u5330
 18156  0156B8                     u5300:
 18157                           
 18158                           ;stkvar	_counter @ sp[(-2)+1]
 18159  0156B8  0EFF               	movlw	-1
 18160  0156BA  6AE3               	clrf	plusw1,c
 18161  0156BC  D012               	goto	L16
 18162  0156BE                     l6362:
 18163                           
 18164                           ;stkvar	_divisor @ sp[(-2)+-16]
 18165  0156BE  90D8               	bcf	status,0,c
 18166  0156C0  0EEE               	movlw	-18
 18167  0156C2  36E3               	rlcf	plusw1,f,c
 18168  0156C4  0EEF               	movlw	-17
 18169  0156C6  36E3               	rlcf	plusw1,f,c
 18170  0156C8  0EF0               	movlw	-16
 18171  0156CA  36E3               	rlcf	plusw1,f,c
 18172  0156CC  0EF1               	movlw	-15
 18173  0156CE  36E3               	rlcf	plusw1,f,c
 18174  0156D0  0EF2               	movlw	-14
 18175  0156D2  36E3               	rlcf	plusw1,f,c
 18176  0156D4  0EF3               	movlw	-13
 18177  0156D6  36E3               	rlcf	plusw1,f,c
 18178  0156D8  0EF4               	movlw	-12
 18179  0156DA  36E3               	rlcf	plusw1,f,c
 18180  0156DC  0EF5               	movlw	-11
 18181  0156DE  36E3               	rlcf	plusw1,f,c
 18182                           
 18183                           ;stkvar	_counter @ sp[(-2)+1]
 18184  0156E0  0EFF               	movlw	-1
 18185  0156E2                     L16:
 18186  0156E2  2AE3               	incf	plusw1,f,c
 18187                           
 18188                           ;stkvar	_divisor @ sp[(-2)+-16]
 18189  0156E4  0EF5               	movlw	-11
 18190  0156E6  AEE3               	btfss	plusw1,7,c
 18191  0156E8  D7EA               	goto	l6362
 18192  0156EA                     u5310:
 18193                           
 18194                           ;stkvar	_divisor @ sp[(-2)+-16]
 18195                           ;stkvar	_dividend @ sp[(-2)+-8]
 18196  0156EA  50E1               	movf	fsr1l,w,c
 18197  0156EC  0FF6               	addlw	-10
 18198  0156EE  6ED9               	movwf	fsr2l,c
 18199  0156F0  50E2               	movf	fsr1h,w,c
 18200  0156F2  6EDA               	movwf	fsr2h,c
 18201  0156F4  0EFF               	movlw	255
 18202  0156F6  22DA               	addwfc	fsr2h,f,c
 18203  0156F8  0EEE               	movlw	-18
 18204  0156FA  50E3               	movf	plusw1,w,c
 18205  0156FC  5CDE               	subwf	postinc2,w,c
 18206  0156FE  0EEF               	movlw	-17
 18207  015700  50E3               	movf	plusw1,w,c
 18208  015702  58DE               	subwfb	postinc2,w,c
 18209  015704  0EF0               	movlw	-16
 18210  015706  50E3               	movf	plusw1,w,c
 18211  015708  58DE               	subwfb	postinc2,w,c
 18212  01570A  0EF1               	movlw	-15
 18213  01570C  50E3               	movf	plusw1,w,c
 18214  01570E  58DE               	subwfb	postinc2,w,c
 18215  015710  0EF2               	movlw	-14
 18216  015712  50E3               	movf	plusw1,w,c
 18217  015714  58DE               	subwfb	postinc2,w,c
 18218  015716  0EF3               	movlw	-13
 18219  015718  50E3               	movf	plusw1,w,c
 18220  01571A  58DE               	subwfb	postinc2,w,c
 18221  01571C  0EF4               	movlw	-12
 18222  01571E  50E3               	movf	plusw1,w,c
 18223  015720  58DE               	subwfb	postinc2,w,c
 18224  015722  0EF5               	movlw	-11
 18225  015724  50E3               	movf	plusw1,w,c
 18226  015726  58DE               	subwfb	postinc2,w,c
 18227  015728  A0D8               	btfss	status,0,c
 18228  01572A  D01F               	goto	l6370
 18229                           
 18230                           ;stkvar	_divisor @ sp[(-2)+-16]
 18231                           ;stkvar	_dividend @ sp[(-2)+-8]
 18232  01572C  50E1               	movf	fsr1l,w,c
 18233  01572E  0FF6               	addlw	-10
 18234  015730  6ED9               	movwf	fsr2l,c
 18235  015732  50E2               	movf	fsr1h,w,c
 18236  015734  6EDA               	movwf	fsr2h,c
 18237  015736  0EFF               	movlw	255
 18238  015738  22DA               	addwfc	fsr2h,f,c
 18239  01573A  0EEE               	movlw	-18
 18240  01573C  50E3               	movf	plusw1,w,c
 18241  01573E  5EDE               	subwf	postinc2,f,c
 18242  015740  0EEF               	movlw	-17
 18243  015742  50E3               	movf	plusw1,w,c
 18244  015744  5ADE               	subwfb	postinc2,f,c
 18245  015746  0EF0               	movlw	-16
 18246  015748  50E3               	movf	plusw1,w,c
 18247  01574A  5ADE               	subwfb	postinc2,f,c
 18248  01574C  0EF1               	movlw	-15
 18249  01574E  50E3               	movf	plusw1,w,c
 18250  015750  5ADE               	subwfb	postinc2,f,c
 18251  015752  0EF2               	movlw	-14
 18252  015754  50E3               	movf	plusw1,w,c
 18253  015756  5ADE               	subwfb	postinc2,f,c
 18254  015758  0EF3               	movlw	-13
 18255  01575A  50E3               	movf	plusw1,w,c
 18256  01575C  5ADE               	subwfb	postinc2,f,c
 18257  01575E  0EF4               	movlw	-12
 18258  015760  50E3               	movf	plusw1,w,c
 18259  015762  5ADE               	subwfb	postinc2,f,c
 18260  015764  0EF5               	movlw	-11
 18261  015766  50E3               	movf	plusw1,w,c
 18262  015768  5ADE               	subwfb	postinc2,f,c
 18263  01576A                     l6370:
 18264                           
 18265                           ;stkvar	_divisor @ sp[(-2)+-16]
 18266  01576A  90D8               	bcf	status,0,c
 18267  01576C  0EF5               	movlw	-11
 18268  01576E  32E3               	rrcf	plusw1,f,c
 18269  015770  0EF4               	movlw	-12
 18270  015772  32E3               	rrcf	plusw1,f,c
 18271  015774  0EF3               	movlw	-13
 18272  015776  32E3               	rrcf	plusw1,f,c
 18273  015778  0EF2               	movlw	-14
 18274  01577A  32E3               	rrcf	plusw1,f,c
 18275  01577C  0EF1               	movlw	-15
 18276  01577E  32E3               	rrcf	plusw1,f,c
 18277  015780  0EF0               	movlw	-16
 18278  015782  32E3               	rrcf	plusw1,f,c
 18279  015784  0EEF               	movlw	-17
 18280  015786  32E3               	rrcf	plusw1,f,c
 18281  015788  0EEE               	movlw	-18
 18282  01578A  32E3               	rrcf	plusw1,f,c
 18283                           
 18284                           ;stkvar	_counter @ sp[(-2)+1]
 18285  01578C  0EFF               	movlw	-1
 18286  01578E  50E3               	movf	plusw1,w,c
 18287  015790  6E35               	movwf	btemp^0,c
 18288  015792  0E01               	movlw	1
 18289  015794  5E35               	subwf	btemp^0,f,c
 18290  015796  0EFF               	movlw	-1
 18291  015798  0060  F0D7  FFE3   	movff	btemp,plusw1
 18292  01579E  A4D8               	btfss	status,2,c
 18293  0157A0  D7A4               	goto	u5310
 18294  0157A2                     u5330:
 18295                           
 18296                           ;stkvar	_sign @ sp[(-2)+0]
 18297  0157A2  0EFE               	movlw	-2
 18298  0157A4  50E3               	movf	plusw1,w,c
 18299  0157A6  B4D8               	btfsc	status,2,c
 18300  0157A8  D025               	goto	u5350
 18301                           
 18302                           ;stkvar	_dividend @ sp[(-2)+-8]
 18303                           ;stkvar	_dividend @ sp[(-2)+-8]
 18304  0157AA  0EF6               	movlw	-10
 18305  0157AC  6CE3               	negf	plusw1,c
 18306  0157AE  0EF7               	movlw	-9
 18307  0157B0  1EE3               	comf	plusw1,f,c
 18308  0157B2  0EF8               	movlw	-8
 18309  0157B4  1EE3               	comf	plusw1,f,c
 18310  0157B6  0EF9               	movlw	-7
 18311  0157B8  1EE3               	comf	plusw1,f,c
 18312  0157BA  0EFA               	movlw	-6
 18313  0157BC  1EE3               	comf	plusw1,f,c
 18314  0157BE  0EFB               	movlw	-5
 18315  0157C0  1EE3               	comf	plusw1,f,c
 18316  0157C2  0EFC               	movlw	-4
 18317  0157C4  1EE3               	comf	plusw1,f,c
 18318  0157C6  0EFD               	movlw	-3
 18319  0157C8  1EE3               	comf	plusw1,f,c
 18320  0157CA  E314               	bnc	u5350
 18321  0157CC  0EF7               	movlw	-9
 18322  0157CE  2AE3               	incf	plusw1,f,c
 18323  0157D0  E311               	bnc	u5350
 18324  0157D2  0EF8               	movlw	-8
 18325  0157D4  2AE3               	incf	plusw1,f,c
 18326  0157D6  E30E               	bnc	u5350
 18327  0157D8  0EF9               	movlw	-7
 18328  0157DA  2AE3               	incf	plusw1,f,c
 18329  0157DC  E30B               	bnc	u5350
 18330  0157DE  0EFA               	movlw	-6
 18331  0157E0  2AE3               	incf	plusw1,f,c
 18332  0157E2  E308               	bnc	u5350
 18333  0157E4  0EFB               	movlw	-5
 18334  0157E6  2AE3               	incf	plusw1,f,c
 18335  0157E8  E305               	bnc	u5350
 18336  0157EA  0EFC               	movlw	-4
 18337  0157EC  2AE3               	incf	plusw1,f,c
 18338  0157EE  E302               	bnc	u5350
 18339  0157F0  0EFD               	movlw	-3
 18340  0157F2  2AE3               	incf	plusw1,f,c
 18341  0157F4                     u5350:
 18342                           
 18343                           ;stkvar	_dividend @ sp[(-2)+-8]
 18344  0157F4  0EF6               	movlw	246
 18345  0157F6  24E1               	addwf	fsr1l,w,c
 18346  0157F8  6ED9               	movwf	fsr2l,c
 18347  0157FA  0EFF               	movlw	255
 18348  0157FC  20E2               	addwfc	fsr1h,w,c
 18349  0157FE  6EDA               	movwf	fsr2h,c
 18350                           
 18351                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18352  015800  0E08               	movlw	8
 18353  015802  6E35               	movwf	btemp^0,c
 18354  015804  0EF6               	movlw	-10
 18355  015806                     us536999:
 18356  015806  006F FF7B FFE3     	movff	postinc2,plusw1
 18357  01580C  28E8               	incf	wreg,w,c
 18358  01580E  2E35               	decfsz	btemp^0,f,c
 18359  015810  D7FA               	bra	us536999
 18360                           
 18361                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18362  015812  52E5               	movf	postdec1,f,c
 18363  015814  52E5               	movf	postdec1,f,c
 18364  015816  0012               	return		;funcret
 18365  015818                     __end_of___aomod:
 18366                           	opt callstack 0
 18367                           
 18368 ;; *************** function ___aodiv *****************
 18369 ;; Defined at:
 18370 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18371 ;; Parameters:    Size  Location     Type
 18372 ;;  dividend        8  [STACK] long long 
 18373 ;;  divisor         8  [STACK] long long 
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;  quotient        8  [STACK] long long 
 18376 ;;  sign            1  [STACK] unsigned char 
 18377 ;;  counter         1  [STACK] unsigned char 
 18378 ;; Return value:  Size  Location     Type
 18379 ;;                  8  [STACK] long long 
 18380 ;; Registers used:
 18381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18382 ;; Tracked objects:
 18383 ;;		On entry : 0/1
 18384 ;;		On exit  : 0/0
 18385 ;;		Unchanged: 0/0
 18386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18391 ;;Total ram usage:        0 bytes
 18392 ;; Hardware stack levels used:    1
 18393 ;; Hardware stack levels required when called:    6
 18394 ;; This function calls:
 18395 ;;		Nothing
 18396 ;; This function is called by:
 18397 ;;		_dtoa
 18398 ;; This function uses a reentrant model
 18399 ;;
 18400                           
 18401                           	psect	text59
 18402  014E86                     __ptext59:
 18403                           	opt callstack 0
 18404  014E86                     ___aodiv:
 18405                           	opt callstack 0
 18406                           
 18407                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18408  014E86  0E0A               	movlw	10
 18409  014E88  26E1               	addwf	fsr1l,f,c
 18410  014E8A  0E00               	movlw	0
 18411  014E8C  22E2               	addwfc	fsr1h,f,c
 18412                           
 18413                           ;stkvar	_sign @ sp[(-10)+8]
 18414                           
 18415                           ;incstack = 0
 18416  014E8E  0EFE               	movlw	-2
 18417  014E90  6AE3               	clrf	plusw1,c
 18418                           
 18419                           ;stkvar	_divisor @ sp[(-10)+-16]
 18420  014E92  0EED               	movlw	-19
 18421  014E94  AEE3               	btfss	plusw1,7,c
 18422  014E96  D028               	goto	l6310
 18423                           
 18424                           ;stkvar	_divisor @ sp[(-10)+-16]
 18425                           ;stkvar	_divisor @ sp[(-10)+-16]
 18426  014E98  0EE6               	movlw	-26
 18427  014E9A  6CE3               	negf	plusw1,c
 18428  014E9C  0EE7               	movlw	-25
 18429  014E9E  1EE3               	comf	plusw1,f,c
 18430  014EA0  0EE8               	movlw	-24
 18431  014EA2  1EE3               	comf	plusw1,f,c
 18432  014EA4  0EE9               	movlw	-23
 18433  014EA6  1EE3               	comf	plusw1,f,c
 18434  014EA8  0EEA               	movlw	-22
 18435  014EAA  1EE3               	comf	plusw1,f,c
 18436  014EAC  0EEB               	movlw	-21
 18437  014EAE  1EE3               	comf	plusw1,f,c
 18438  014EB0  0EEC               	movlw	-20
 18439  014EB2  1EE3               	comf	plusw1,f,c
 18440  014EB4  0EED               	movlw	-19
 18441  014EB6  1EE3               	comf	plusw1,f,c
 18442  014EB8  E314               	bnc	u5150
 18443  014EBA  0EE7               	movlw	-25
 18444  014EBC  2AE3               	incf	plusw1,f,c
 18445  014EBE  E311               	bnc	u5150
 18446  014EC0  0EE8               	movlw	-24
 18447  014EC2  2AE3               	incf	plusw1,f,c
 18448  014EC4  E30E               	bnc	u5150
 18449  014EC6  0EE9               	movlw	-23
 18450  014EC8  2AE3               	incf	plusw1,f,c
 18451  014ECA  E30B               	bnc	u5150
 18452  014ECC  0EEA               	movlw	-22
 18453  014ECE  2AE3               	incf	plusw1,f,c
 18454  014ED0  E308               	bnc	u5150
 18455  014ED2  0EEB               	movlw	-21
 18456  014ED4  2AE3               	incf	plusw1,f,c
 18457  014ED6  E305               	bnc	u5150
 18458  014ED8  0EEC               	movlw	-20
 18459  014EDA  2AE3               	incf	plusw1,f,c
 18460  014EDC  E302               	bnc	u5150
 18461  014EDE  0EED               	movlw	-19
 18462  014EE0  2AE3               	incf	plusw1,f,c
 18463  014EE2                     u5150:
 18464                           
 18465                           ;stkvar	_sign @ sp[(-10)+8]
 18466  014EE2  0EFE               	movlw	-2
 18467  014EE4  6AE3               	clrf	plusw1,c
 18468  014EE6  2AE3               	incf	plusw1,f,c
 18469  014EE8                     l6310:
 18470                           
 18471                           ;stkvar	_dividend @ sp[(-10)+-8]
 18472  014EE8  0EF5               	movlw	-11
 18473  014EEA  AEE3               	btfss	plusw1,7,c
 18474  014EEC  D027               	goto	l6316
 18475                           
 18476                           ;stkvar	_dividend @ sp[(-10)+-8]
 18477                           ;stkvar	_dividend @ sp[(-10)+-8]
 18478  014EEE  0EEE               	movlw	-18
 18479  014EF0  6CE3               	negf	plusw1,c
 18480  014EF2  0EEF               	movlw	-17
 18481  014EF4  1EE3               	comf	plusw1,f,c
 18482  014EF6  0EF0               	movlw	-16
 18483  014EF8  1EE3               	comf	plusw1,f,c
 18484  014EFA  0EF1               	movlw	-15
 18485  014EFC  1EE3               	comf	plusw1,f,c
 18486  014EFE  0EF2               	movlw	-14
 18487  014F00  1EE3               	comf	plusw1,f,c
 18488  014F02  0EF3               	movlw	-13
 18489  014F04  1EE3               	comf	plusw1,f,c
 18490  014F06  0EF4               	movlw	-12
 18491  014F08  1EE3               	comf	plusw1,f,c
 18492  014F0A  0EF5               	movlw	-11
 18493  014F0C  1EE3               	comf	plusw1,f,c
 18494  014F0E  E314               	bnc	u5170
 18495  014F10  0EEF               	movlw	-17
 18496  014F12  2AE3               	incf	plusw1,f,c
 18497  014F14  E311               	bnc	u5170
 18498  014F16  0EF0               	movlw	-16
 18499  014F18  2AE3               	incf	plusw1,f,c
 18500  014F1A  E30E               	bnc	u5170
 18501  014F1C  0EF1               	movlw	-15
 18502  014F1E  2AE3               	incf	plusw1,f,c
 18503  014F20  E30B               	bnc	u5170
 18504  014F22  0EF2               	movlw	-14
 18505  014F24  2AE3               	incf	plusw1,f,c
 18506  014F26  E308               	bnc	u5170
 18507  014F28  0EF3               	movlw	-13
 18508  014F2A  2AE3               	incf	plusw1,f,c
 18509  014F2C  E305               	bnc	u5170
 18510  014F2E  0EF4               	movlw	-12
 18511  014F30  2AE3               	incf	plusw1,f,c
 18512  014F32  E302               	bnc	u5170
 18513  014F34  0EF5               	movlw	-11
 18514  014F36  2AE3               	incf	plusw1,f,c
 18515  014F38                     u5170:
 18516                           
 18517                           ;stkvar	_sign @ sp[(-10)+8]
 18518  014F38  0EFE               	movlw	-2
 18519  014F3A  70E3               	btg	plusw1,0,c
 18520  014F3C                     l6316:
 18521                           
 18522                           ;stkvar	_quotient @ sp[(-10)+0]
 18523  014F3C  0E07               	movlw	7
 18524  014F3E  6E35               	movwf	btemp^0,c
 18525  014F40  0EF6               	movlw	-10
 18526  014F42                     u5181:
 18527  014F42  6AE3               	clrf	plusw1,c
 18528  014F44  2AE8               	incf	wreg,f,c
 18529  014F46  0635               	decf	btemp^0,f,c
 18530  014F48  E2FC               	bc	u5181
 18531                           
 18532                           ;stkvar	_divisor @ sp[(-10)+-16]
 18533  014F4A  0EE6               	movlw	-26
 18534  014F4C  50E3               	movf	plusw1,w,c
 18535  014F4E  E116               	bnz	u5190
 18536  014F50  0EE7               	movlw	-25
 18537  014F52  50E3               	movf	plusw1,w,c
 18538  014F54  E113               	bnz	u5190
 18539  014F56  0EE8               	movlw	-24
 18540  014F58  50E3               	movf	plusw1,w,c
 18541  014F5A  E110               	bnz	u5190
 18542  014F5C  0EE9               	movlw	-23
 18543  014F5E  50E3               	movf	plusw1,w,c
 18544  014F60  E10D               	bnz	u5190
 18545  014F62  0EEA               	movlw	-22
 18546  014F64  50E3               	movf	plusw1,w,c
 18547  014F66  E10A               	bnz	u5190
 18548  014F68  0EEB               	movlw	-21
 18549  014F6A  50E3               	movf	plusw1,w,c
 18550  014F6C  E107               	bnz	u5190
 18551  014F6E  0EEC               	movlw	-20
 18552  014F70  50E3               	movf	plusw1,w,c
 18553  014F72  E104               	bnz	u5190
 18554  014F74  0EED               	movlw	-19
 18555  014F76  50E3               	movf	plusw1,w,c
 18556  014F78  B4D8               	btfsc	status,2,c
 18557  014F7A  D088               	goto	u5220
 18558  014F7C                     u5190:
 18559                           
 18560                           ;stkvar	_counter @ sp[(-10)+9]
 18561  014F7C  0EFF               	movlw	-1
 18562  014F7E  6AE3               	clrf	plusw1,c
 18563  014F80  D012               	goto	L17
 18564  014F82                     l6322:
 18565                           
 18566                           ;stkvar	_divisor @ sp[(-10)+-16]
 18567  014F82  90D8               	bcf	status,0,c
 18568  014F84  0EE6               	movlw	-26
 18569  014F86  36E3               	rlcf	plusw1,f,c
 18570  014F88  0EE7               	movlw	-25
 18571  014F8A  36E3               	rlcf	plusw1,f,c
 18572  014F8C  0EE8               	movlw	-24
 18573  014F8E  36E3               	rlcf	plusw1,f,c
 18574  014F90  0EE9               	movlw	-23
 18575  014F92  36E3               	rlcf	plusw1,f,c
 18576  014F94  0EEA               	movlw	-22
 18577  014F96  36E3               	rlcf	plusw1,f,c
 18578  014F98  0EEB               	movlw	-21
 18579  014F9A  36E3               	rlcf	plusw1,f,c
 18580  014F9C  0EEC               	movlw	-20
 18581  014F9E  36E3               	rlcf	plusw1,f,c
 18582  014FA0  0EED               	movlw	-19
 18583  014FA2  36E3               	rlcf	plusw1,f,c
 18584                           
 18585                           ;stkvar	_counter @ sp[(-10)+9]
 18586  014FA4  0EFF               	movlw	-1
 18587  014FA6                     L17:
 18588  014FA6  2AE3               	incf	plusw1,f,c
 18589                           
 18590                           ;stkvar	_divisor @ sp[(-10)+-16]
 18591  014FA8  0EED               	movlw	-19
 18592  014FAA  AEE3               	btfss	plusw1,7,c
 18593  014FAC  D7EA               	goto	l6322
 18594  014FAE                     u5200:
 18595                           
 18596                           ;stkvar	_quotient @ sp[(-10)+0]
 18597  014FAE  90D8               	bcf	status,0,c
 18598  014FB0  0EF6               	movlw	-10
 18599  014FB2  36E3               	rlcf	plusw1,f,c
 18600  014FB4  0EF7               	movlw	-9
 18601  014FB6  36E3               	rlcf	plusw1,f,c
 18602  014FB8  0EF8               	movlw	-8
 18603  014FBA  36E3               	rlcf	plusw1,f,c
 18604  014FBC  0EF9               	movlw	-7
 18605  014FBE  36E3               	rlcf	plusw1,f,c
 18606  014FC0  0EFA               	movlw	-6
 18607  014FC2  36E3               	rlcf	plusw1,f,c
 18608  014FC4  0EFB               	movlw	-5
 18609  014FC6  36E3               	rlcf	plusw1,f,c
 18610  014FC8  0EFC               	movlw	-4
 18611  014FCA  36E3               	rlcf	plusw1,f,c
 18612  014FCC  0EFD               	movlw	-3
 18613  014FCE  36E3               	rlcf	plusw1,f,c
 18614                           
 18615                           ;stkvar	_divisor @ sp[(-10)+-16]
 18616                           ;stkvar	_dividend @ sp[(-10)+-8]
 18617  014FD0  50E1               	movf	fsr1l,w,c
 18618  014FD2  0FEE               	addlw	-18
 18619  014FD4  6ED9               	movwf	fsr2l,c
 18620  014FD6  50E2               	movf	fsr1h,w,c
 18621  014FD8  6EDA               	movwf	fsr2h,c
 18622  014FDA  0EFF               	movlw	255
 18623  014FDC  22DA               	addwfc	fsr2h,f,c
 18624  014FDE  0EE6               	movlw	-26
 18625  014FE0  50E3               	movf	plusw1,w,c
 18626  014FE2  5CDE               	subwf	postinc2,w,c
 18627  014FE4  0EE7               	movlw	-25
 18628  014FE6  50E3               	movf	plusw1,w,c
 18629  014FE8  58DE               	subwfb	postinc2,w,c
 18630  014FEA  0EE8               	movlw	-24
 18631  014FEC  50E3               	movf	plusw1,w,c
 18632  014FEE  58DE               	subwfb	postinc2,w,c
 18633  014FF0  0EE9               	movlw	-23
 18634  014FF2  50E3               	movf	plusw1,w,c
 18635  014FF4  58DE               	subwfb	postinc2,w,c
 18636  014FF6  0EEA               	movlw	-22
 18637  014FF8  50E3               	movf	plusw1,w,c
 18638  014FFA  58DE               	subwfb	postinc2,w,c
 18639  014FFC  0EEB               	movlw	-21
 18640  014FFE  50E3               	movf	plusw1,w,c
 18641  015000  58DE               	subwfb	postinc2,w,c
 18642  015002  0EEC               	movlw	-20
 18643  015004  50E3               	movf	plusw1,w,c
 18644  015006  58DE               	subwfb	postinc2,w,c
 18645  015008  0EED               	movlw	-19
 18646  01500A  50E3               	movf	plusw1,w,c
 18647  01500C  58DE               	subwfb	postinc2,w,c
 18648  01500E  A0D8               	btfss	status,0,c
 18649  015010  D021               	goto	l6334
 18650                           
 18651                           ;stkvar	_divisor @ sp[(-10)+-16]
 18652                           ;stkvar	_dividend @ sp[(-10)+-8]
 18653  015012  50E1               	movf	fsr1l,w,c
 18654  015014  0FEE               	addlw	-18
 18655  015016  6ED9               	movwf	fsr2l,c
 18656  015018  50E2               	movf	fsr1h,w,c
 18657  01501A  6EDA               	movwf	fsr2h,c
 18658  01501C  0EFF               	movlw	255
 18659  01501E  22DA               	addwfc	fsr2h,f,c
 18660  015020  0EE6               	movlw	-26
 18661  015022  50E3               	movf	plusw1,w,c
 18662  015024  5EDE               	subwf	postinc2,f,c
 18663  015026  0EE7               	movlw	-25
 18664  015028  50E3               	movf	plusw1,w,c
 18665  01502A  5ADE               	subwfb	postinc2,f,c
 18666  01502C  0EE8               	movlw	-24
 18667  01502E  50E3               	movf	plusw1,w,c
 18668  015030  5ADE               	subwfb	postinc2,f,c
 18669  015032  0EE9               	movlw	-23
 18670  015034  50E3               	movf	plusw1,w,c
 18671  015036  5ADE               	subwfb	postinc2,f,c
 18672  015038  0EEA               	movlw	-22
 18673  01503A  50E3               	movf	plusw1,w,c
 18674  01503C  5ADE               	subwfb	postinc2,f,c
 18675  01503E  0EEB               	movlw	-21
 18676  015040  50E3               	movf	plusw1,w,c
 18677  015042  5ADE               	subwfb	postinc2,f,c
 18678  015044  0EEC               	movlw	-20
 18679  015046  50E3               	movf	plusw1,w,c
 18680  015048  5ADE               	subwfb	postinc2,f,c
 18681  01504A  0EED               	movlw	-19
 18682  01504C  50E3               	movf	plusw1,w,c
 18683  01504E  5ADE               	subwfb	postinc2,f,c
 18684                           
 18685                           ;stkvar	_quotient @ sp[(-10)+0]
 18686  015050  0EF6               	movlw	-10
 18687  015052  80E3               	bsf	plusw1,0,c
 18688  015054                     l6334:
 18689                           
 18690                           ;stkvar	_divisor @ sp[(-10)+-16]
 18691  015054  90D8               	bcf	status,0,c
 18692  015056  0EED               	movlw	-19
 18693  015058  32E3               	rrcf	plusw1,f,c
 18694  01505A  0EEC               	movlw	-20
 18695  01505C  32E3               	rrcf	plusw1,f,c
 18696  01505E  0EEB               	movlw	-21
 18697  015060  32E3               	rrcf	plusw1,f,c
 18698  015062  0EEA               	movlw	-22
 18699  015064  32E3               	rrcf	plusw1,f,c
 18700  015066  0EE9               	movlw	-23
 18701  015068  32E3               	rrcf	plusw1,f,c
 18702  01506A  0EE8               	movlw	-24
 18703  01506C  32E3               	rrcf	plusw1,f,c
 18704  01506E  0EE7               	movlw	-25
 18705  015070  32E3               	rrcf	plusw1,f,c
 18706  015072  0EE6               	movlw	-26
 18707  015074  32E3               	rrcf	plusw1,f,c
 18708                           
 18709                           ;stkvar	_counter @ sp[(-10)+9]
 18710  015076  0EFF               	movlw	-1
 18711  015078  50E3               	movf	plusw1,w,c
 18712  01507A  6E35               	movwf	btemp^0,c
 18713  01507C  0E01               	movlw	1
 18714  01507E  5E35               	subwf	btemp^0,f,c
 18715  015080  0EFF               	movlw	-1
 18716  015082  0060  F0D7  FFE3   	movff	btemp,plusw1
 18717  015088  A4D8               	btfss	status,2,c
 18718  01508A  D791               	goto	u5200
 18719  01508C                     u5220:
 18720                           
 18721                           ;stkvar	_sign @ sp[(-10)+8]
 18722  01508C  0EFE               	movlw	-2
 18723  01508E  50E3               	movf	plusw1,w,c
 18724  015090  B4D8               	btfsc	status,2,c
 18725  015092  D025               	goto	u5240
 18726                           
 18727                           ;stkvar	_quotient @ sp[(-10)+0]
 18728                           ;stkvar	_quotient @ sp[(-10)+0]
 18729  015094  0EF6               	movlw	-10
 18730  015096  6CE3               	negf	plusw1,c
 18731  015098  0EF7               	movlw	-9
 18732  01509A  1EE3               	comf	plusw1,f,c
 18733  01509C  0EF8               	movlw	-8
 18734  01509E  1EE3               	comf	plusw1,f,c
 18735  0150A0  0EF9               	movlw	-7
 18736  0150A2  1EE3               	comf	plusw1,f,c
 18737  0150A4  0EFA               	movlw	-6
 18738  0150A6  1EE3               	comf	plusw1,f,c
 18739  0150A8  0EFB               	movlw	-5
 18740  0150AA  1EE3               	comf	plusw1,f,c
 18741  0150AC  0EFC               	movlw	-4
 18742  0150AE  1EE3               	comf	plusw1,f,c
 18743  0150B0  0EFD               	movlw	-3
 18744  0150B2  1EE3               	comf	plusw1,f,c
 18745  0150B4  E314               	bnc	u5240
 18746  0150B6  0EF7               	movlw	-9
 18747  0150B8  2AE3               	incf	plusw1,f,c
 18748  0150BA  E311               	bnc	u5240
 18749  0150BC  0EF8               	movlw	-8
 18750  0150BE  2AE3               	incf	plusw1,f,c
 18751  0150C0  E30E               	bnc	u5240
 18752  0150C2  0EF9               	movlw	-7
 18753  0150C4  2AE3               	incf	plusw1,f,c
 18754  0150C6  E30B               	bnc	u5240
 18755  0150C8  0EFA               	movlw	-6
 18756  0150CA  2AE3               	incf	plusw1,f,c
 18757  0150CC  E308               	bnc	u5240
 18758  0150CE  0EFB               	movlw	-5
 18759  0150D0  2AE3               	incf	plusw1,f,c
 18760  0150D2  E305               	bnc	u5240
 18761  0150D4  0EFC               	movlw	-4
 18762  0150D6  2AE3               	incf	plusw1,f,c
 18763  0150D8  E302               	bnc	u5240
 18764  0150DA  0EFD               	movlw	-3
 18765  0150DC  2AE3               	incf	plusw1,f,c
 18766  0150DE                     u5240:
 18767                           
 18768                           ;stkvar	_quotient @ sp[(-10)+0]
 18769  0150DE  0EF6               	movlw	246
 18770  0150E0  24E1               	addwf	fsr1l,w,c
 18771  0150E2  6ED9               	movwf	fsr2l,c
 18772  0150E4  0EFF               	movlw	255
 18773  0150E6  20E2               	addwfc	fsr1h,w,c
 18774  0150E8  6EDA               	movwf	fsr2h,c
 18775                           
 18776                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18777  0150EA  0E08               	movlw	8
 18778  0150EC  6E35               	movwf	btemp^0,c
 18779  0150EE  0EEE               	movlw	-18
 18780  0150F0                     us525999:
 18781  0150F0  006F FF7B FFE3     	movff	postinc2,plusw1
 18782  0150F6  28E8               	incf	wreg,w,c
 18783  0150F8  2E35               	decfsz	btemp^0,f,c
 18784  0150FA  D7FA               	bra	us525999
 18785                           
 18786                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18787  0150FC  0EF6               	movlw	246
 18788  0150FE  26E1               	addwf	fsr1l,f,c
 18789  015100  0EFF               	movlw	255
 18790  015102  22E2               	addwfc	fsr1h,f,c
 18791  015104  0012               	return		;funcret
 18792  015106                     __end_of___aodiv:
 18793                           	opt callstack 0
 18794                           
 18795 ;; *************** function _ctoa *****************
 18796 ;; Defined at:
 18797 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18800 ;;		 -> f(6), NULL(0), 
 18801 ;;  c               1  [STACK] unsigned char 
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;  w               2  [STACK] int 
 18804 ;;  l               2    0        int 
 18805 ;; Return value:  Size  Location     Type
 18806 ;;                  2  [STACK] int 
 18807 ;; Registers used:
 18808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18809 ;; Tracked objects:
 18810 ;;		On entry : 0/4
 18811 ;;		On exit  : 0/0
 18812 ;;		Unchanged: 0/0
 18813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18818 ;;Total ram usage:        0 bytes
 18819 ;; Hardware stack levels used:    1
 18820 ;; Hardware stack levels required when called:   11
 18821 ;; This function calls:
 18822 ;;		_pad
 18823 ;; This function is called by:
 18824 ;;		_vfpfcnvrt
 18825 ;; This function uses a reentrant model
 18826 ;;
 18827                           
 18828                           	psect	text60
 18829  017334                     __ptext60:
 18830                           	opt callstack 0
 18831  017334                     _ctoa:
 18832                           	opt callstack 0
 18833                           
 18834                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18835  017334  52E6               	movf	postinc1,f,c
 18836  017336  52E6               	movf	postinc1,f,c
 18837                           
 18838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18839                           
 18840                           ;incstack = 0
 18841  017338  501E               	movf	_width^0,w,c
 18842  01733A  101F               	iorwf	(_width+1)^0,w,c
 18843  01733C  A4D8               	btfss	status,2,c
 18844  01733E  D009               	goto	l8968
 18845                           
 18846                           ;stkvar	_w @ sp[(-2)+0]
 18847  017340  0EFE               	movlw	-2
 18848  017342  0060  F07B  FFE3   	movff	_width,plusw1
 18849  017348  0EFF               	movlw	-1
 18850  01734A  0060  F07F  FFE3   	movff	_width+1,plusw1
 18851  017350  D016               	goto	l8970
 18852  017352                     l8968:
 18853  017352  0EFF               	movlw	255
 18854  017354  6E3F               	movwf	(btemp+10)^0,c
 18855  017356  0EFF               	movlw	255
 18856  017358  6E40               	movwf	(btemp+11)^0,c
 18857  01735A  0060  F078  F03D   	movff	_width,btemp+8
 18858  017360  0060  F07C  F03E   	movff	_width+1,btemp+9
 18859  017366  503F               	movf	(btemp+10)^0,w,c
 18860  017368  263D               	addwf	(btemp+8)^0,f,c
 18861  01736A  5040               	movf	(btemp+11)^0,w,c
 18862  01736C  223E               	addwfc	(btemp+9)^0,f,c
 18863                           
 18864                           ;stkvar	_w @ sp[(-2)+0]
 18865  01736E  0EFE               	movlw	-2
 18866  017370  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 18867  017376  0EFF               	movlw	-1
 18868  017378  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 18869  01737E                     l8970:
 18870                           
 18871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18872                           ;stkvar	_c @ sp[(-2)+-3]
 18873  01737E  0EFB               	movlw	-5
 18874  017380  006F FF8C  F1A4    	movff	plusw1,_dbuf
 18875                           
 18876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18877  017386  0101               	movlb	1	; () banked
 18878  017388  6BA5               	clrf	(_dbuf+1)& (0+255),b
 18879                           
 18880                           ; BSR set to: 1
 18881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18882                           ;stkvar	_w @ sp[(-2)+0]
 18883  01738A  0EFE               	movlw	-2
 18884  01738C  006F FF8F FFE6     	movff	plusw1,postinc1
 18885  017392  006F FF8F FFE6     	movff	plusw1,postinc1
 18886  017398  0EA4               	movlw	low _dbuf
 18887  01739A  6EE6               	movwf	postinc1,c
 18888  01739C  0E01               	movlw	high _dbuf
 18889  01739E  6EE6               	movwf	postinc1,c
 18890                           
 18891                           ;stkvar	_fp @ sp[(-6)+-2]
 18892  0173A0  0EF8               	movlw	-8
 18893  0173A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18894  0173A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18895  0173AE  EC8C  F0B3         	call	_pad	;wreg free
 18896                           
 18897                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18898  0173B2  0EFB               	movlw	251
 18899  0173B4  26E1               	addwf	fsr1l,f,c
 18900  0173B6  0EFF               	movlw	255
 18901  0173B8  22E2               	addwfc	fsr1h,f,c
 18902  0173BA  0012               	return		;funcret
 18903  0173BC                     __end_of_ctoa:
 18904                           	opt callstack 0
 18905                           
 18906 ;; *************** function _pad *****************
 18907 ;; Defined at:
 18908 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18909 ;; Parameters:    Size  Location     Type
 18910 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18911 ;;		 -> f(6), NULL(0), 
 18912 ;;  buf             2  [STACK] PTR unsigned char 
 18913 ;;		 -> dbuf(80), 
 18914 ;;  p               2  [STACK] int 
 18915 ;; Auto vars:     Size  Location     Type
 18916 ;;  w               2  [STACK] int 
 18917 ;;  i               2  [STACK] int 
 18918 ;; Return value:  Size  Location     Type
 18919 ;;                  2  [STACK] int 
 18920 ;; Registers used:
 18921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18922 ;; Tracked objects:
 18923 ;;		On entry : 0/1
 18924 ;;		On exit  : 0/0
 18925 ;;		Unchanged: 0/0
 18926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18931 ;;Total ram usage:        0 bytes
 18932 ;; Hardware stack levels used:    1
 18933 ;; Hardware stack levels required when called:   10
 18934 ;; This function calls:
 18935 ;;		_fputc
 18936 ;;		_fputs
 18937 ;;		_strlen
 18938 ;; This function is called by:
 18939 ;;		_ctoa
 18940 ;;		_dtoa
 18941 ;;		_efgtoa
 18942 ;;		_xtoa
 18943 ;; This function uses a reentrant model
 18944 ;;
 18945                           
 18946                           	psect	text61
 18947  016718                     __ptext61:
 18948                           	opt callstack 0
 18949  016718                     _pad:
 18950                           	opt callstack 0
 18951                           
 18952                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18953  016718  52E6               	movf	postinc1,f,c
 18954  01671A  52E6               	movf	postinc1,f,c
 18955  01671C  52E6               	movf	postinc1,f,c
 18956  01671E  52E6               	movf	postinc1,f,c
 18957                           
 18958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18959                           
 18960                           ;incstack = 0
 18961  016720  A022               	btfss	_flags^0,0,c
 18962  016722  D010               	goto	l8942
 18963                           
 18964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18965                           ;stkvar	_fp @ sp[(-4)+-2]
 18966  016724  0EFA               	movlw	-6
 18967  016726  006F FF8F FFE6     	movff	plusw1,postinc1
 18968  01672C  006F FF8F FFE6     	movff	plusw1,postinc1
 18969                           
 18970                           ;stkvar	_buf @ sp[(-6)+-4]
 18971  016732  0EF6               	movlw	-10
 18972  016734  006F FF8F FFE6     	movff	plusw1,postinc1
 18973  01673A  006F FF8F FFE6     	movff	plusw1,postinc1
 18974  016740  EC72  F0B8         	call	_fputs	;wreg free
 18975  016744                     l8942:
 18976                           
 18977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18978                           ;stkvar	_p @ sp[(-4)+-6]
 18979  016744  0EF7               	movlw	-9
 18980  016746  BEE3               	btfsc	plusw1,7,c
 18981  016748  D011               	goto	l8946
 18982                           
 18983                           ;stkvar	_p @ sp[(-4)+-6]
 18984                           ;stkvar	_w @ sp[(-4)+0]
 18985  01674A  0EF6               	movlw	-10
 18986  01674C  006F FF8C  F035    	movff	plusw1,btemp
 18987  016752  0EFC               	movlw	-4
 18988  016754  0060  F0D7  FFE3   	movff	btemp,plusw1
 18989  01675A  0EF7               	movlw	-9
 18990  01675C  006F FF8C  F035    	movff	plusw1,btemp
 18991  016762  0EFD               	movlw	-3
 18992  016764  0060  F0D7  FFE3   	movff	btemp,plusw1
 18993  01676A  D004               	goto	l1737
 18994  01676C                     l8946:
 18995                           
 18996                           ;stkvar	_w @ sp[(-4)+0]
 18997  01676C  0EFC               	movlw	-4
 18998  01676E  6AE3               	clrf	plusw1,c
 18999  016770  0EFD               	movlw	-3
 19000  016772  6AE3               	clrf	plusw1,c
 19001  016774                     l1737:
 19002                           
 19003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19004                           ;stkvar	_i @ sp[(-4)+2]
 19005  016774  0EFE               	movlw	-2
 19006  016776  6AE3               	clrf	plusw1,c
 19007  016778  0EFF               	movlw	-1
 19008  01677A  6AE3               	clrf	plusw1,c
 19009                           
 19010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19011  01677C  D01E               	goto	l8952
 19012  01677E                     l8948:
 19013                           
 19014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19015                           ;stkvar	_fp @ sp[(-4)+-2]
 19016  01677E  0EFA               	movlw	-6
 19017  016780  006F FF8F FFE6     	movff	plusw1,postinc1
 19018  016786  006F FF8F FFE6     	movff	plusw1,postinc1
 19019  01678C  0E20               	movlw	32
 19020  01678E  6EE6               	movwf	postinc1,c
 19021  016790  0E00               	movlw	0
 19022  016792  6EE6               	movwf	postinc1,c
 19023  016794  EC6E  F0B2         	call	_fputc	;wreg free
 19024                           
 19025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19026                           ;stkvar	_i @ sp[(-4)+2]
 19027  016798  0EFE               	movlw	-2
 19028  01679A  50E3               	movf	plusw1,w,c
 19029  01679C  0F01               	addlw	1
 19030  01679E  6E35               	movwf	btemp^0,c
 19031  0167A0  0EFE               	movlw	-2
 19032  0167A2  0060  F0D7  FFE3   	movff	btemp,plusw1
 19033  0167A8  6A35               	clrf	btemp^0,c
 19034  0167AA  0EFF               	movlw	-1
 19035  0167AC  50E3               	movf	plusw1,w,c
 19036  0167AE  2035               	addwfc	btemp^0,w,c
 19037  0167B0  6E35               	movwf	btemp^0,c
 19038  0167B2  0EFF               	movlw	-1
 19039  0167B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 19040  0167BA                     l8952:
 19041                           
 19042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19043                           ;stkvar	_w @ sp[(-4)+0]
 19044                           ;stkvar	_i @ sp[(-4)+2]
 19045  0167BA  50E1               	movf	fsr1l,w,c
 19046  0167BC  0FFE               	addlw	-2
 19047  0167BE  6ED9               	movwf	fsr2l,c
 19048  0167C0  50E2               	movf	fsr1h,w,c
 19049  0167C2  6EDA               	movwf	fsr2h,c
 19050  0167C4  0EFF               	movlw	255
 19051  0167C6  22DA               	addwfc	fsr2h,f,c
 19052  0167C8  0EFC               	movlw	-4
 19053  0167CA  50E3               	movf	plusw1,w,c
 19054  0167CC  5CDE               	subwf	postinc2,w,c
 19055  0167CE  50DE               	movf	postinc2,w,c
 19056  0167D0  0A80               	xorlw	128
 19057  0167D2  6E35               	movwf	btemp^0,c
 19058  0167D4  0EFD               	movlw	-3
 19059  0167D6  50E3               	movf	plusw1,w,c
 19060  0167D8  0A80               	xorlw	128
 19061  0167DA  5835               	subwfb	btemp^0,w,c
 19062  0167DC  A0D8               	btfss	status,0,c
 19063  0167DE  D7CF               	goto	l8948
 19064                           
 19065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19066  0167E0  B022               	btfsc	_flags^0,0,c
 19067  0167E2  D010               	goto	l8956
 19068                           
 19069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19070                           ;stkvar	_fp @ sp[(-4)+-2]
 19071  0167E4  0EFA               	movlw	-6
 19072  0167E6  006F FF8F FFE6     	movff	plusw1,postinc1
 19073  0167EC  006F FF8F FFE6     	movff	plusw1,postinc1
 19074                           
 19075                           ;stkvar	_buf @ sp[(-6)+-4]
 19076  0167F2  0EF6               	movlw	-10
 19077  0167F4  006F FF8F FFE6     	movff	plusw1,postinc1
 19078  0167FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19079  016800  EC72  F0B8         	call	_fputs	;wreg free
 19080  016804                     l8956:
 19081                           
 19082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19083                           ;stkvar	_w @ sp[(-4)+0]
 19084                           ;stkvar	_buf @ sp[(-4)+-4]
 19085  016804  0EF8               	movlw	-8
 19086  016806  006F FF8F FFE6     	movff	plusw1,postinc1
 19087  01680C  006F FF8F FFE6     	movff	plusw1,postinc1
 19088  016812  EC21  F0B8         	call	_strlen	;wreg free
 19089  016816  0EFC               	movlw	-4
 19090  016818  50E3               	movf	plusw1,w,c
 19091  01681A  2635               	addwf	btemp^0,f,c
 19092  01681C  0EFD               	movlw	-3
 19093  01681E  50E3               	movf	plusw1,w,c
 19094  016820  2236               	addwfc	(btemp+1)^0,f,c
 19095                           
 19096                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19097  016822  0EF6               	movlw	246
 19098  016824  26E1               	addwf	fsr1l,f,c
 19099  016826  0EFF               	movlw	255
 19100  016828  22E2               	addwfc	fsr1h,f,c
 19101  01682A  0012               	return		;funcret
 19102  01682C                     __end_of_pad:
 19103                           	opt callstack 0
 19104                           
 19105 ;; *************** function _strlen *****************
 19106 ;; Defined at:
 19107 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19108 ;; Parameters:    Size  Location     Type
 19109 ;;  s               2  [STACK] PTR const unsigned char 
 19110 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19111 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 19112 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 19113 ;; Auto vars:     Size  Location     Type
 19114 ;;  a               2  [STACK] PTR const unsigned char 
 19115 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19116 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 19117 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 19118 ;; Return value:  Size  Location     Type
 19119 ;;                  2  [STACK] unsigned int 
 19120 ;; Registers used:
 19121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19122 ;; Tracked objects:
 19123 ;;		On entry : 0/0
 19124 ;;		On exit  : 0/0
 19125 ;;		Unchanged: 0/0
 19126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19131 ;;Total ram usage:        0 bytes
 19132 ;; Hardware stack levels used:    1
 19133 ;; Hardware stack levels required when called:    6
 19134 ;; This function calls:
 19135 ;;		Nothing
 19136 ;; This function is called by:
 19137 ;;		_eaDogM_WriteString
 19138 ;;		_pad
 19139 ;;		_stoa
 19140 ;; This function uses a reentrant model
 19141 ;;
 19142                           
 19143                           	psect	text62
 19144  017042                     __ptext62:
 19145                           	opt callstack 0
 19146  017042                     _strlen:
 19147                           	opt callstack 0
 19148                           
 19149                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19150  017042  52E6               	movf	postinc1,f,c
 19151  017044  52E6               	movf	postinc1,f,c
 19152                           
 19153                           ;stkvar	_s @ sp[(-2)+-2]
 19154                           
 19155                           ;incstack = 0
 19156  017046  0EFC               	movlw	-4
 19157  017048  006F FF8C  F03F    	movff	plusw1,btemp+10
 19158  01704E  0EFD               	movlw	-3
 19159  017050  006F FF8C  F040    	movff	plusw1,btemp+11
 19160                           
 19161                           ;stkvar	_a @ sp[(-2)+0]
 19162  017056  0EFF               	movlw	-1
 19163  017058  0060  F103  FFE3   	movff	btemp+11,plusw1
 19164  01705E  0EFE               	movlw	-2
 19165  017060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19166  017066  D011               	goto	l5928
 19167  017068                     l5926:
 19168                           
 19169                           ;stkvar	_s @ sp[(-2)+-2]
 19170  017068  0EFC               	movlw	-4
 19171  01706A  50E3               	movf	plusw1,w,c
 19172  01706C  0F01               	addlw	1
 19173  01706E  6E35               	movwf	btemp^0,c
 19174  017070  0EFC               	movlw	-4
 19175  017072  0060  F0D7  FFE3   	movff	btemp,plusw1
 19176  017078  6A35               	clrf	btemp^0,c
 19177  01707A  0EFD               	movlw	-3
 19178  01707C  50E3               	movf	plusw1,w,c
 19179  01707E  2035               	addwfc	btemp^0,w,c
 19180  017080  6E35               	movwf	btemp^0,c
 19181  017082  0EFD               	movlw	-3
 19182  017084  0060  F0D7  FFE3   	movff	btemp,plusw1
 19183  01708A                     l5928:
 19184                           
 19185                           ;stkvar	_s @ sp[(-2)+-2]
 19186  01708A  0EFC               	movlw	-4
 19187  01708C  006F FF8F FFF6     	movff	plusw1,tblptrl
 19188  017092  0EFD               	movlw	-3
 19189  017094  006F FF8F FFF7     	movff	plusw1,tblptrh
 19190  01709A  0E00               	movlw	low (__mediumconst shr (0+16))
 19191  01709C  6EF8               	movwf	tblptru,c
 19192  01709E  0E1F               	movlw	(high __ramtop+-1)
 19193  0170A0  64F7               	cpfsgt	tblptrh,c
 19194  0170A2  D003               	bra	u4317
 19195  0170A4  0008               	tblrd		*
 19196  0170A6  50F5               	movf	tablat,w,c
 19197  0170A8  D007               	bra	u4310
 19198  0170AA                     u4317:
 19199  0170AA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19200  0170B0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19201  0170B6  50EF               	movf	indf0,w,c
 19202  0170B8                     u4310:
 19203  0170B8  0900               	iorlw	0
 19204  0170BA  A4D8               	btfss	status,2,c
 19205  0170BC  D7D5               	goto	l5926
 19206                           
 19207                           ;stkvar	_a @ sp[(-2)+0]
 19208                           ;stkvar	_s @ sp[(-2)+-2]
 19209  0170BE  0EFC               	movlw	-4
 19210  0170C0  006F FF8C  F035    	movff	plusw1,btemp
 19211  0170C6  0EFD               	movlw	-3
 19212  0170C8  006F FF8C  F036    	movff	plusw1,btemp+1
 19213  0170CE  0EFE               	movlw	-2
 19214  0170D0  50E3               	movf	plusw1,w,c
 19215  0170D2  5E35               	subwf	btemp^0,f,c
 19216  0170D4  0EFF               	movlw	-1
 19217  0170D6  50E3               	movf	plusw1,w,c
 19218  0170D8  5A36               	subwfb	(btemp+1)^0,f,c
 19219                           
 19220                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19221  0170DA  52E5               	movf	postdec1,f,c
 19222  0170DC  52E5               	movf	postdec1,f,c
 19223  0170DE  52E5               	movf	postdec1,f,c
 19224  0170E0  52E5               	movf	postdec1,f,c
 19225  0170E2  0012               	return		;funcret
 19226  0170E4                     __end_of_strlen:
 19227                           	opt callstack 0
 19228                           
 19229 ;; *************** function _fputs *****************
 19230 ;; Defined at:
 19231 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19232 ;; Parameters:    Size  Location     Type
 19233 ;;  s               2  [STACK] PTR const unsigned char 
 19234 ;;		 -> dbuf(80), 
 19235 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19236 ;;		 -> f(6), NULL(0), 
 19237 ;; Auto vars:     Size  Location     Type
 19238 ;;  i               2  [STACK] int 
 19239 ;;  c               1  [STACK] unsigned char 
 19240 ;; Return value:  Size  Location     Type
 19241 ;;                  2  [STACK] int 
 19242 ;; Registers used:
 19243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19244 ;; Tracked objects:
 19245 ;;		On entry : 0/1
 19246 ;;		On exit  : 0/0
 19247 ;;		Unchanged: 0/0
 19248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19253 ;;Total ram usage:        0 bytes
 19254 ;; Hardware stack levels used:    1
 19255 ;; Hardware stack levels required when called:    9
 19256 ;; This function calls:
 19257 ;;		_fputc
 19258 ;; This function is called by:
 19259 ;;		_pad
 19260 ;; This function uses a reentrant model
 19261 ;;
 19262                           
 19263                           	psect	text63
 19264  0170E4                     __ptext63:
 19265                           	opt callstack 0
 19266  0170E4                     _fputs:
 19267                           	opt callstack 0
 19268                           
 19269                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19270  0170E4  52E6               	movf	postinc1,f,c
 19271  0170E6  52E6               	movf	postinc1,f,c
 19272  0170E8  52E6               	movf	postinc1,f,c
 19273                           
 19274                           ;stkvar	_i @ sp[(-3)+0]
 19275                           
 19276                           ;incstack = 0
 19277  0170EA  0EFD               	movlw	-3
 19278  0170EC  6AE3               	clrf	plusw1,c
 19279  0170EE  0EFE               	movlw	-2
 19280  0170F0  6AE3               	clrf	plusw1,c
 19281  0170F2  D01F               	goto	l8936
 19282  0170F4                     l8932:
 19283                           
 19284                           ;stkvar	_fp @ sp[(-3)+-4]
 19285  0170F4  0EF9               	movlw	-7
 19286  0170F6  006F FF8F FFE6     	movff	plusw1,postinc1
 19287  0170FC  006F FF8F FFE6     	movff	plusw1,postinc1
 19288                           
 19289                           ;stkvar	_c @ sp[(-5)+2]
 19290  017102  0EFD               	movlw	-3
 19291  017104  50E3               	movf	plusw1,w,c
 19292  017106  6EE6               	movwf	postinc1,c
 19293  017108  0E00               	movlw	0
 19294  01710A  6EE6               	movwf	postinc1,c
 19295  01710C  EC6E  F0B2         	call	_fputc	;wreg free
 19296                           
 19297                           ;stkvar	_i @ sp[(-3)+0]
 19298  017110  0EFD               	movlw	-3
 19299  017112  50E3               	movf	plusw1,w,c
 19300  017114  0F01               	addlw	1
 19301  017116  6E35               	movwf	btemp^0,c
 19302  017118  0EFD               	movlw	-3
 19303  01711A  0060  F0D7  FFE3   	movff	btemp,plusw1
 19304  017120  6A35               	clrf	btemp^0,c
 19305  017122  0EFE               	movlw	-2
 19306  017124  50E3               	movf	plusw1,w,c
 19307  017126  2035               	addwfc	btemp^0,w,c
 19308  017128  6E35               	movwf	btemp^0,c
 19309  01712A  0EFE               	movlw	-2
 19310  01712C  0060  F0D7  FFE3   	movff	btemp,plusw1
 19311  017132                     l8936:
 19312                           
 19313                           ;stkvar	_i @ sp[(-3)+0]
 19314  017132  0EFD               	movlw	-3
 19315  017134  006F FF8C  F03F    	movff	plusw1,btemp+10
 19316  01713A  0EFE               	movlw	-2
 19317  01713C  006F FF8C  F040    	movff	plusw1,btemp+11
 19318                           
 19319                           ;stkvar	_s @ sp[(-3)+-2]
 19320  017142  0EFB               	movlw	-5
 19321  017144  006F FF8C  F03D    	movff	plusw1,btemp+8
 19322  01714A  0EFC               	movlw	-4
 19323  01714C  006F FF8C  F03E    	movff	plusw1,btemp+9
 19324  017152  503F               	movf	(btemp+10)^0,w,c
 19325  017154  243D               	addwf	(btemp+8)^0,w,c
 19326  017156  6ED9               	movwf	fsr2l,c
 19327  017158  5040               	movf	(btemp+11)^0,w,c
 19328  01715A  203E               	addwfc	(btemp+9)^0,w,c
 19329  01715C  6EDA               	movwf	fsr2h,c
 19330  01715E  50DF               	movf	indf2,w,c
 19331  017160  6E40               	movwf	(btemp+11)^0,c
 19332                           
 19333                           ;stkvar	_c @ sp[(-3)+2]
 19334  017162  0EFF               	movlw	-1
 19335  017164  0060  F103  FFE3   	movff	btemp+11,plusw1
 19336  01716A  0EFF               	movlw	-1
 19337  01716C  50E3               	movf	plusw1,w,c
 19338  01716E  A4D8               	btfss	status,2,c
 19339  017170  D7C1               	goto	l8932
 19340                           
 19341                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19342  017172  0EF9               	movlw	249
 19343  017174  26E1               	addwf	fsr1l,f,c
 19344  017176  0EFF               	movlw	255
 19345  017178  22E2               	addwfc	fsr1h,f,c
 19346  01717A  0012               	return		;funcret
 19347  01717C                     __end_of_fputs:
 19348                           	opt callstack 0
 19349                           
 19350 ;; *************** function _fputc *****************
 19351 ;; Defined at:
 19352 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19353 ;; Parameters:    Size  Location     Type
 19354 ;;  c               2  [STACK] int 
 19355 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19356 ;;		 -> f(6), NULL(0), 
 19357 ;; Auto vars:     Size  Location     Type
 19358 ;;		None
 19359 ;; Return value:  Size  Location     Type
 19360 ;;                  2  [STACK] int 
 19361 ;; Registers used:
 19362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19363 ;; Tracked objects:
 19364 ;;		On entry : 0/4
 19365 ;;		On exit  : 0/0
 19366 ;;		Unchanged: 0/0
 19367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19372 ;;Total ram usage:        0 bytes
 19373 ;; Hardware stack levels used:    1
 19374 ;; Hardware stack levels required when called:    8
 19375 ;; This function calls:
 19376 ;;		_putch
 19377 ;; This function is called by:
 19378 ;;		_pad
 19379 ;;		_stoa
 19380 ;;		_vfpfcnvrt
 19381 ;;		_fputs
 19382 ;; This function uses a reentrant model
 19383 ;;
 19384                           
 19385                           	psect	text64
 19386  0164DC                     __ptext64:
 19387                           	opt callstack 0
 19388  0164DC                     _fputc:
 19389                           	opt callstack 13
 19390                           
 19391                           ;stkvar	_fp @ sp[(0)+-4]
 19392                           
 19393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19394                           ;incstack = 0
 19395  0164DC  0EFC               	movlw	-4
 19396  0164DE  006F FF8C  F035    	movff	plusw1,btemp
 19397  0164E4  0EFD               	movlw	-3
 19398  0164E6  50E3               	movf	plusw1,w,c
 19399  0164E8  1035               	iorwf	btemp^0,w,c
 19400  0164EA  B4D8               	btfsc	status,2,c
 19401  0164EC  D009               	goto	u8460
 19402                           
 19403                           ;stkvar	_fp @ sp[(0)+-4]
 19404  0164EE  0EFC               	movlw	-4
 19405  0164F0  006F FF8C  F035    	movff	plusw1,btemp
 19406  0164F6  0EFD               	movlw	-3
 19407  0164F8  50E3               	movf	plusw1,w,c
 19408  0164FA  1035               	iorwf	btemp^0,w,c
 19409  0164FC  A4D8               	btfss	status,2,c
 19410  0164FE  D006               	goto	l8920
 19411  016500                     u8460:
 19412                           
 19413                           ;stkvar	_c @ sp[(0)+-2]
 19414  016500  0EFE               	movlw	-2
 19415  016502  50E3               	movf	plusw1,w,c
 19416  016504  6EE6               	movwf	postinc1,c
 19417  016506  ECDA  F0C1         	call	_putch	;wreg free
 19418  01650A  D075               	goto	l2755
 19419  01650C                     l8920:
 19420                           
 19421                           ;stkvar	_fp @ sp[(0)+-4]
 19422  01650C  0EFC               	movlw	-4
 19423  01650E  006F FF8C  F03F    	movff	plusw1,btemp+10
 19424  016514  0EFD               	movlw	-3
 19425  016516  006F FF8C  F040    	movff	plusw1,btemp+11
 19426  01651C  0E04               	movlw	4
 19427  01651E  243F               	addwf	(btemp+10)^0,w,c
 19428  016520  6ED9               	movwf	fsr2l,c
 19429  016522  0E00               	movlw	0
 19430  016524  2040               	addwfc	(btemp+11)^0,w,c
 19431  016526  6EDA               	movwf	fsr2h,c
 19432  016528  50DE               	movf	postinc2,w,c
 19433  01652A  10DE               	iorwf	postinc2,w,c
 19434  01652C  B4D8               	btfsc	status,2,c
 19435  01652E  D026               	goto	u8480
 19436                           
 19437                           ;stkvar	_fp @ sp[(0)+-4]
 19438  016530  0EFC               	movlw	-4
 19439  016532  006F FF8C  F03F    	movff	plusw1,btemp+10
 19440  016538  0EFD               	movlw	-3
 19441  01653A  006F FF8C  F040    	movff	plusw1,btemp+11
 19442  016540  0E04               	movlw	4
 19443  016542  243F               	addwf	(btemp+10)^0,w,c
 19444  016544  6ED9               	movwf	fsr2l,c
 19445  016546  0E00               	movlw	0
 19446  016548  2040               	addwfc	(btemp+11)^0,w,c
 19447  01654A  6EDA               	movwf	fsr2h,c
 19448                           
 19449                           ;stkvar	_fp @ sp[(0)+-4]
 19450  01654C  0EFC               	movlw	-4
 19451  01654E  006F FF8C  F03F    	movff	plusw1,btemp+10
 19452  016554  0EFD               	movlw	-3
 19453  016556  006F FF8C  F040    	movff	plusw1,btemp+11
 19454  01655C  0E02               	movlw	2
 19455  01655E  243F               	addwf	(btemp+10)^0,w,c
 19456  016560  6EE9               	movwf	fsr0l,c
 19457  016562  0E00               	movlw	0
 19458  016564  2040               	addwfc	(btemp+11)^0,w,c
 19459  016566  6EEA               	movwf	fsr0h,c
 19460  016568  50DE               	movf	postinc2,w,c
 19461  01656A  5CEE               	subwf	postinc0,w,c
 19462  01656C  50EE               	movf	postinc0,w,c
 19463  01656E  0A80               	xorlw	128
 19464  016570  6E35               	movwf	btemp^0,c
 19465  016572  50DE               	movf	postinc2,w,c
 19466  016574  0A80               	xorlw	128
 19467  016576  5835               	subwfb	btemp^0,w,c
 19468  016578  B0D8               	btfsc	status,0,c
 19469  01657A  D03D               	goto	l2755
 19470  01657C                     u8480:
 19471                           
 19472                           ;stkvar	_c @ sp[(0)+-2]
 19473                           ;stkvar	_fp @ sp[(0)+-4]
 19474  01657C  0EFC               	movlw	-4
 19475  01657E  006F FF8C  F03F    	movff	plusw1,btemp+10
 19476  016584  0EFD               	movlw	-3
 19477  016586  006F FF8C  F040    	movff	plusw1,btemp+11
 19478  01658C  0E02               	movlw	2
 19479  01658E  243F               	addwf	(btemp+10)^0,w,c
 19480  016590  6ED9               	movwf	fsr2l,c
 19481  016592  0E00               	movlw	0
 19482  016594  2040               	addwfc	(btemp+11)^0,w,c
 19483  016596  6EDA               	movwf	fsr2h,c
 19484  016598  006F FF78  F03F    	movff	postinc2,btemp+10
 19485  01659E  006F FF74  F040    	movff	postdec2,btemp+11
 19486                           
 19487                           ;stkvar	_fp @ sp[(0)+-4]
 19488  0165A4  0EFC               	movlw	-4
 19489  0165A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19490  0165AC  0EFD               	movlw	-3
 19491  0165AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19492  0165B4  006F FF78  F03D    	movff	postinc2,btemp+8
 19493  0165BA  006F FF74  F03E    	movff	postdec2,btemp+9
 19494  0165C0  503F               	movf	(btemp+10)^0,w,c
 19495  0165C2  243D               	addwf	(btemp+8)^0,w,c
 19496  0165C4  6ED9               	movwf	fsr2l,c
 19497  0165C6  5040               	movf	(btemp+11)^0,w,c
 19498  0165C8  203E               	addwfc	(btemp+9)^0,w,c
 19499  0165CA  6EDA               	movwf	fsr2h,c
 19500  0165CC  0EFE               	movlw	-2
 19501  0165CE  006F FF8F FFDF     	movff	plusw1,indf2
 19502                           
 19503                           ;stkvar	_fp @ sp[(0)+-4]
 19504  0165D4  0EFC               	movlw	-4
 19505  0165D6  006F FF8C  F03F    	movff	plusw1,btemp+10
 19506  0165DC  0EFD               	movlw	-3
 19507  0165DE  006F FF8C  F040    	movff	plusw1,btemp+11
 19508  0165E4  0E02               	movlw	2
 19509  0165E6  243F               	addwf	(btemp+10)^0,w,c
 19510  0165E8  6ED9               	movwf	fsr2l,c
 19511  0165EA  0E00               	movlw	0
 19512  0165EC  2040               	addwfc	(btemp+11)^0,w,c
 19513  0165EE  6EDA               	movwf	fsr2h,c
 19514  0165F0  2ADE               	incf	postinc2,f,c
 19515  0165F2  0E00               	movlw	0
 19516  0165F4  22DD               	addwfc	postdec2,f,c
 19517  0165F6                     l2755:
 19518                           
 19519                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19520  0165F6  52E5               	movf	postdec1,f,c
 19521  0165F8  52E5               	movf	postdec1,f,c
 19522  0165FA  52E5               	movf	postdec1,f,c
 19523  0165FC  52E5               	movf	postdec1,f,c
 19524  0165FE  0012               	return		;funcret
 19525  016600                     __end_of_fputc:
 19526                           	opt callstack 0
 19527                           
 19528 ;; *************** function _putch *****************
 19529 ;; Defined at:
 19530 ;;		line 155 in file "eadog.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;  c               1  [STACK] unsigned char 
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;		None
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1  [STACK] void 
 19537 ;; Registers used:
 19538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/4
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19548 ;;Total ram usage:        0 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    7
 19551 ;; This function calls:
 19552 ;;		_ringBufS_put_dma
 19553 ;; This function is called by:
 19554 ;;		_fputc
 19555 ;; This function uses a reentrant model
 19556 ;;
 19557                           
 19558                           	psect	text65
 19559  0183B4                     __ptext65:
 19560                           	opt callstack 0
 19561  0183B4                     _putch:
 19562                           	opt callstack 13
 19563                           
 19564                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19565                           ;stkvar	_c @ sp[(0)+-1]
 19566                           
 19567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19568                           ;incstack = 0
 19569  0183B4  0EFF               	movlw	-1
 19570  0183B6  50E3               	movf	plusw1,w,c
 19571  0183B8  6EE6               	movwf	postinc1,c
 19572  0183BA  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 19573  0183C0  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 19574  0183C6  EC25  F0B7         	call	_ringBufS_put_dma	;wreg free
 19575                           
 19576                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19577  0183CA  52E5               	movf	postdec1,f,c
 19578  0183CC  0012               	return		;funcret
 19579  0183CE                     __end_of_putch:
 19580                           	opt callstack 0
 19581                           
 19582 ;; *************** function _ringBufS_put_dma *****************
 19583 ;; Defined at:
 19584 ;;		line 67 in file "ringbufs.c"
 19585 ;; Parameters:    Size  Location     Type
 19586 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19587 ;;		 -> ring_buf1(67), 
 19588 ;;  c               1  [STACK] const unsigned char 
 19589 ;; Auto vars:     Size  Location     Type
 19590 ;;		None
 19591 ;; Return value:  Size  Location     Type
 19592 ;;                  1  [STACK] void 
 19593 ;; Registers used:
 19594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19595 ;; Tracked objects:
 19596 ;;		On entry : 0/4
 19597 ;;		On exit  : 0/0
 19598 ;;		Unchanged: 0/0
 19599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19604 ;;Total ram usage:        0 bytes
 19605 ;; Hardware stack levels used:    1
 19606 ;; Hardware stack levels required when called:    6
 19607 ;; This function calls:
 19608 ;;		Nothing
 19609 ;; This function is called by:
 19610 ;;		_putch
 19611 ;; This function uses a reentrant model
 19612 ;;
 19613                           
 19614                           	psect	text66
 19615  016E4A                     __ptext66:
 19616                           	opt callstack 0
 19617  016E4A                     _ringBufS_put_dma:
 19618                           	opt callstack 13
 19619                           
 19620                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19621                           ;stkvar	__this @ sp[(0)+-2]
 19622                           
 19623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19624                           ;incstack = 0
 19625  016E4A  0EFE               	movlw	-2
 19626  016E4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 19627  016E52  0EFF               	movlw	-1
 19628  016E54  006F FF8C  F040    	movff	plusw1,btemp+11
 19629  016E5A  0E42               	movlw	66
 19630  016E5C  243F               	addwf	(btemp+10)^0,w,c
 19631  016E5E  6ED9               	movwf	fsr2l,c
 19632  016E60  0E00               	movlw	0
 19633  016E62  2040               	addwfc	(btemp+11)^0,w,c
 19634  016E64  6EDA               	movwf	fsr2h,c
 19635  016E66  0E40               	movlw	64
 19636  016E68  60DF               	cpfslt	indf2,c
 19637  016E6A  D040               	goto	l1464
 19638                           
 19639                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19640                           ;stkvar	_c @ sp[(0)+-3]
 19641                           ;stkvar	__this @ sp[(0)+-2]
 19642  016E6C  0EFE               	movlw	-2
 19643  016E6E  006F FF8C  F03F    	movff	plusw1,btemp+10
 19644  016E74  0EFF               	movlw	-1
 19645  016E76  006F FF8C  F040    	movff	plusw1,btemp+11
 19646  016E7C  0E40               	movlw	64
 19647  016E7E  243F               	addwf	(btemp+10)^0,w,c
 19648  016E80  6ED9               	movwf	fsr2l,c
 19649  016E82  0E00               	movlw	0
 19650  016E84  2040               	addwfc	(btemp+11)^0,w,c
 19651  016E86  6EDA               	movwf	fsr2h,c
 19652  016E88  50DF               	movf	indf2,w,c
 19653  016E8A  6E40               	movwf	(btemp+11)^0,c
 19654                           
 19655                           ;stkvar	__this @ sp[(0)+-2]
 19656  016E8C  0EFE               	movlw	-2
 19657  016E8E  006F FF8C  F03D    	movff	plusw1,btemp+8
 19658  016E94  0EFF               	movlw	-1
 19659  016E96  006F FF8C  F03E    	movff	plusw1,btemp+9
 19660  016E9C  5040               	movf	(btemp+11)^0,w,c
 19661  016E9E  243D               	addwf	(btemp+8)^0,w,c
 19662  016EA0  6ED9               	movwf	fsr2l,c
 19663  016EA2  0E00               	movlw	0
 19664  016EA4  203E               	addwfc	(btemp+9)^0,w,c
 19665  016EA6  6EDA               	movwf	fsr2h,c
 19666  016EA8  0EFD               	movlw	-3
 19667  016EAA  006F FF8F FFDF     	movff	plusw1,indf2
 19668                           
 19669                           ;ringbufs.c: 71:   ++_this->head;
 19670                           ;stkvar	__this @ sp[(0)+-2]
 19671  016EB0  0EFE               	movlw	-2
 19672  016EB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 19673  016EB8  0EFF               	movlw	-1
 19674  016EBA  006F FF8C  F040    	movff	plusw1,btemp+11
 19675  016EC0  0E40               	movlw	64
 19676  016EC2  243F               	addwf	(btemp+10)^0,w,c
 19677  016EC4  6ED9               	movwf	fsr2l,c
 19678  016EC6  0E00               	movlw	0
 19679  016EC8  2040               	addwfc	(btemp+11)^0,w,c
 19680  016ECA  6EDA               	movwf	fsr2h,c
 19681  016ECC  2ADF               	incf	indf2,f,c
 19682                           
 19683                           ;ringbufs.c: 72:   ++_this->count;
 19684                           ;stkvar	__this @ sp[(0)+-2]
 19685  016ECE  0EFE               	movlw	-2
 19686  016ED0  006F FF8C  F03F    	movff	plusw1,btemp+10
 19687  016ED6  0EFF               	movlw	-1
 19688  016ED8  006F FF8C  F040    	movff	plusw1,btemp+11
 19689  016EDE  0E42               	movlw	66
 19690  016EE0  243F               	addwf	(btemp+10)^0,w,c
 19691  016EE2  6ED9               	movwf	fsr2l,c
 19692  016EE4  0E00               	movlw	0
 19693  016EE6  2040               	addwfc	(btemp+11)^0,w,c
 19694  016EE8  6EDA               	movwf	fsr2h,c
 19695  016EEA  2ADF               	incf	indf2,f,c
 19696  016EEC                     l1464:
 19697                           
 19698                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19699  016EEC  52E5               	movf	postdec1,f,c
 19700  016EEE  52E5               	movf	postdec1,f,c
 19701  016EF0  52E5               	movf	postdec1,f,c
 19702  016EF2  0012               	return		;funcret
 19703  016EF4                     __end_of_ringBufS_put_dma:
 19704                           	opt callstack 0
 19705                           
 19706 ;; *************** function _atoi *****************
 19707 ;; Defined at:
 19708 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19709 ;; Parameters:    Size  Location     Type
 19710 ;;  s               2  [STACK] PTR const unsigned char 
 19711 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
 19712 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 19713 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
 19714 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
 19715 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
 19716 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
 19717 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 19718 ;; Auto vars:     Size  Location     Type
 19719 ;;  n               2  [STACK] int 
 19720 ;;  neg             2  [STACK] int 
 19721 ;; Return value:  Size  Location     Type
 19722 ;;                  2  [STACK] int 
 19723 ;; Registers used:
 19724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19725 ;; Tracked objects:
 19726 ;;		On entry : 0/4
 19727 ;;		On exit  : 0/0
 19728 ;;		Unchanged: 0/0
 19729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19734 ;;Total ram usage:        0 bytes
 19735 ;; Hardware stack levels used:    1
 19736 ;; Hardware stack levels required when called:    7
 19737 ;; This function calls:
 19738 ;;		_isdigit
 19739 ;;		_isspace
 19740 ;; This function is called by:
 19741 ;;		_vfpfcnvrt
 19742 ;; This function uses a reentrant model
 19743 ;;
 19744                           
 19745                           	psect	text67
 19746  015106                     __ptext67:
 19747                           	opt callstack 0
 19748  015106                     _atoi:
 19749                           	opt callstack 0
 19750                           
 19751                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19752  015106  0E09               	movlw	9
 19753  015108  26E1               	addwf	fsr1l,f,c
 19754  01510A  0E00               	movlw	0
 19755  01510C  22E2               	addwfc	fsr1h,f,c
 19756                           
 19757                           ;stkvar	_n @ sp[(-9)+5]
 19758                           
 19759                           ;incstack = 0
 19760  01510E  0EFC               	movlw	-4
 19761  015110  6AE3               	clrf	plusw1,c
 19762  015112  0EFD               	movlw	-3
 19763  015114  6AE3               	clrf	plusw1,c
 19764                           
 19765                           ;stkvar	_neg @ sp[(-9)+7]
 19766  015116  0EFE               	movlw	-2
 19767  015118  6AE3               	clrf	plusw1,c
 19768  01511A  0EFF               	movlw	-1
 19769  01511C  6AE3               	clrf	plusw1,c
 19770  01511E  D011               	goto	l7400
 19771  015120                     l7398:
 19772                           
 19773                           ;stkvar	_s @ sp[(-9)+-2]
 19774  015120  0EF5               	movlw	-11
 19775  015122  50E3               	movf	plusw1,w,c
 19776  015124  0F01               	addlw	1
 19777  015126  6E35               	movwf	btemp^0,c
 19778  015128  0EF5               	movlw	-11
 19779  01512A  0060  F0D7  FFE3   	movff	btemp,plusw1
 19780  015130  6A35               	clrf	btemp^0,c
 19781  015132  0EF6               	movlw	-10
 19782  015134  50E3               	movf	plusw1,w,c
 19783  015136  2035               	addwfc	btemp^0,w,c
 19784  015138  6E35               	movwf	btemp^0,c
 19785  01513A  0EF6               	movlw	-10
 19786  01513C  0060  F0D7  FFE3   	movff	btemp,plusw1
 19787  015142                     l7400:
 19788                           
 19789                           ;stkvar	_atoi$4638 @ sp[(-9)+4]
 19790  015142  0EFB               	movlw	-5
 19791  015144  6AE3               	clrf	plusw1,c
 19792  015146  2AE3               	incf	plusw1,f,c
 19793                           
 19794                           ;stkvar	_s @ sp[(-9)+-2]
 19795  015148  50E1               	movf	fsr1l,w,c
 19796  01514A  0FF5               	addlw	-11
 19797  01514C  6ED9               	movwf	fsr2l,c
 19798  01514E  50E2               	movf	fsr1h,w,c
 19799  015150  6EDA               	movwf	fsr2h,c
 19800  015152  0EFF               	movlw	255
 19801  015154  22DA               	addwfc	fsr2h,f,c
 19802  015156  006F FF7B FFF6     	movff	postinc2,tblptrl
 19803  01515C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19804  015162                     	if	0	;tblptru may be non-zero
 19805  015162                     	endif
 19806  015162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19807  015162  0E00               	movlw	low (__mediumconst shr (0+16))
 19808  015164  6EF8               	movwf	tblptru,c
 19809  015166                     	endif
 19810  015166  0008               	tblrd		*
 19811  015168  50F5               	movf	tablat,w,c
 19812  01516A  0A20               	xorlw	32
 19813  01516C  B4D8               	btfsc	status,2,c
 19814  01516E  D023               	goto	l7408
 19815  015170  0EF7               	movlw	247
 19816  015172  6E3F               	movwf	(btemp+10)^0,c
 19817  015174  0EFF               	movlw	255
 19818  015176  6E40               	movwf	(btemp+11)^0,c
 19819                           
 19820                           ;stkvar	_s @ sp[(-9)+-2]
 19821  015178  50E1               	movf	fsr1l,w,c
 19822  01517A  0FF5               	addlw	-11
 19823  01517C  6ED9               	movwf	fsr2l,c
 19824  01517E  50E2               	movf	fsr1h,w,c
 19825  015180  6EDA               	movwf	fsr2h,c
 19826  015182  0EFF               	movlw	255
 19827  015184  22DA               	addwfc	fsr2h,f,c
 19828  015186  006F FF7B FFF6     	movff	postinc2,tblptrl
 19829  01518C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19830  015192                     	if	0	;tblptru may be non-zero
 19831  015192                     	endif
 19832  015192                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19833  015192  0E00               	movlw	low (__mediumconst shr (0+16))
 19834  015194  6EF8               	movwf	tblptru,c
 19835  015196                     	endif
 19836  015196  0008               	tblrd		*
 19837  015198  50F5               	movf	tablat,w,c
 19838  01519A  6E3D               	movwf	(btemp+8)^0,c
 19839  01519C  6A3E               	clrf	(btemp+9)^0,c
 19840  01519E  503F               	movf	(btemp+10)^0,w,c
 19841  0151A0  263D               	addwf	(btemp+8)^0,f,c
 19842  0151A2  5040               	movf	(btemp+11)^0,w,c
 19843  0151A4  223E               	addwfc	(btemp+9)^0,f,c
 19844  0151A6  503E               	movf	(btemp+9)^0,w,c
 19845  0151A8  E104               	bnz	u7170
 19846  0151AA  0E05               	movlw	5
 19847  0151AC  5C3D               	subwf	(btemp+8)^0,w,c
 19848  0151AE  A0D8               	btfss	status,0,c
 19849  0151B0  D002               	goto	l7408
 19850  0151B2                     u7170:
 19851                           
 19852                           ;stkvar	_atoi$4638 @ sp[(-9)+4]
 19853  0151B2  0EFB               	movlw	-5
 19854  0151B4  6AE3               	clrf	plusw1,c
 19855  0151B6                     l7408:
 19856                           
 19857                           ;stkvar	_atoi$4638 @ sp[(-9)+4]
 19858  0151B6  0EFB               	movlw	-5
 19859  0151B8  50E3               	movf	plusw1,w,c
 19860  0151BA  6E3F               	movwf	(btemp+10)^0,c
 19861  0151BC  6A40               	clrf	(btemp+11)^0,c
 19862                           
 19863                           ;stkvar	_atoi$4637 @ sp[(-9)+2]
 19864  0151BE  0EF9               	movlw	-7
 19865  0151C0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19866  0151C6  0EFA               	movlw	-6
 19867  0151C8  0060  F103  FFE3   	movff	btemp+11,plusw1
 19868                           
 19869                           ;stkvar	_atoi$4637 @ sp[(-9)+2]
 19870  0151CE  0EF9               	movlw	-7
 19871  0151D0  006F FF8C  F035    	movff	plusw1,btemp
 19872  0151D6  0EFA               	movlw	-6
 19873  0151D8  50E3               	movf	plusw1,w,c
 19874  0151DA  1035               	iorwf	btemp^0,w,c
 19875  0151DC  B4D8               	btfsc	status,2,c
 19876  0151DE  D01F               	goto	l7418
 19877  0151E0  D79F               	goto	l7398
 19878  0151E2                     l7414:
 19879  0151E2  0E01               	movlw	1
 19880  0151E4  6E3F               	movwf	(btemp+10)^0,c
 19881  0151E6  0E00               	movlw	0
 19882  0151E8  6E40               	movwf	(btemp+11)^0,c
 19883                           
 19884                           ;stkvar	_neg @ sp[(-9)+7]
 19885  0151EA  0EFE               	movlw	-2
 19886  0151EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19887  0151F2  0EFF               	movlw	-1
 19888  0151F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 19889  0151FA                     l7416:
 19890                           
 19891                           ;stkvar	_s @ sp[(-9)+-2]
 19892  0151FA  0EF5               	movlw	-11
 19893  0151FC  50E3               	movf	plusw1,w,c
 19894  0151FE  0F01               	addlw	1
 19895  015200  6E35               	movwf	btemp^0,c
 19896  015202  0EF5               	movlw	-11
 19897  015204  0060  F0D7  FFE3   	movff	btemp,plusw1
 19898  01520A  6A35               	clrf	btemp^0,c
 19899  01520C  0EF6               	movlw	-10
 19900  01520E  50E3               	movf	plusw1,w,c
 19901  015210  2035               	addwfc	btemp^0,w,c
 19902  015212  6E35               	movwf	btemp^0,c
 19903  015214  0EF6               	movlw	-10
 19904  015216  0060  F0D7  FFE3   	movff	btemp,plusw1
 19905  01521C  D053               	goto	l7424
 19906  01521E                     l7418:
 19907                           
 19908                           ;stkvar	_s @ sp[(-9)+-2]
 19909  01521E  50E1               	movf	fsr1l,w,c
 19910  015220  0FF5               	addlw	-11
 19911  015222  6ED9               	movwf	fsr2l,c
 19912  015224  50E2               	movf	fsr1h,w,c
 19913  015226  6EDA               	movwf	fsr2h,c
 19914  015228  0EFF               	movlw	255
 19915  01522A  22DA               	addwfc	fsr2h,f,c
 19916  01522C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19917  015232  006F FF77 FFF7     	movff	postdec2,tblptrh
 19918  015238                     	if	0	;tblptru may be non-zero
 19919  015238                     	endif
 19920  015238                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19921  015238  0E00               	movlw	low (__mediumconst shr (0+16))
 19922  01523A  6EF8               	movwf	tblptru,c
 19923  01523C                     	endif
 19924  01523C  0008               	tblrd		*
 19925  01523E  50F5               	movf	tablat,w,c
 19926  015240  6E3F               	movwf	(btemp+10)^0,c
 19927  015242  6A40               	clrf	(btemp+11)^0,c
 19928                           
 19929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19930                           ; Switch size 1, requested type "simple"
 19931                           ; Number of cases is 1, Range of values is 0 to 0
 19932                           ; switch strategies available:
 19933                           ; Name         Instructions Cycles
 19934                           ; simple_byte            4     3 (average)
 19935                           ;	Chosen strategy is simple_byte
 19936  015244  5040               	movf	(btemp+11)^0,w,c
 19937  015246  0A00               	xorlw	0	; case 0
 19938  015248  A4D8               	btfss	status,2,c
 19939  01524A  D03C               	goto	l7424
 19940                           
 19941                           ; Switch size 1, requested type "simple"
 19942                           ; Number of cases is 2, Range of values is 43 to 45
 19943                           ; switch strategies available:
 19944                           ; Name         Instructions Cycles
 19945                           ; simple_byte            7     4 (average)
 19946                           ;	Chosen strategy is simple_byte
 19947  01524C  503F               	movf	(btemp+10)^0,w,c
 19948  01524E  0A2B               	xorlw	43	; case 43
 19949  015250  B4D8               	btfsc	status,2,c
 19950  015252  D7D3               	goto	l7416
 19951  015254  0A06               	xorlw	6	; case 45
 19952  015256  B4D8               	btfsc	status,2,c
 19953  015258  D7C4               	goto	l7414
 19954  01525A  D034               	goto	l7424
 19955  01525C                     l7420:
 19956                           
 19957                           ;stkvar	_n @ sp[(-9)+5]
 19958  01525C  0EFC               	movlw	-4
 19959  01525E  006F FF8C  F03F    	movff	plusw1,btemp+10
 19960  015264  0EFD               	movlw	-3
 19961  015266  006F FF8C  F040    	movff	plusw1,btemp+11
 19962  01526C  0E0A               	movlw	10
 19963  01526E  023F               	mulwf	(btemp+10)^0,c
 19964  015270  006F FFCC  F03D    	movff	prodl,btemp+8
 19965  015276  006F FFD0  F03E    	movff	prodh,btemp+9
 19966  01527C  0240               	mulwf	(btemp+11)^0,c
 19967  01527E  50F3               	movf	prodl,w,c
 19968  015280  263E               	addwf	(btemp+9)^0,f,c
 19969                           
 19970                           ;stkvar	_s @ sp[(-9)+-2]
 19971  015282  50E1               	movf	fsr1l,w,c
 19972  015284  0FF5               	addlw	-11
 19973  015286  6ED9               	movwf	fsr2l,c
 19974  015288  50E2               	movf	fsr1h,w,c
 19975  01528A  6EDA               	movwf	fsr2h,c
 19976  01528C  0EFF               	movlw	255
 19977  01528E  22DA               	addwfc	fsr2h,f,c
 19978  015290  006F FF7B FFF6     	movff	postinc2,tblptrl
 19979  015296  006F FF77 FFF7     	movff	postdec2,tblptrh
 19980  01529C                     	if	0	;tblptru may be non-zero
 19981  01529C                     	endif
 19982  01529C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19983  01529C  0E00               	movlw	low (__mediumconst shr (0+16))
 19984  01529E  6EF8               	movwf	tblptru,c
 19985  0152A0                     	endif
 19986  0152A0  0008               	tblrd		*
 19987  0152A2  50F5               	movf	tablat,w,c
 19988  0152A4  5E3D               	subwf	(btemp+8)^0,f,c
 19989  0152A6  0E00               	movlw	0
 19990  0152A8  5A3E               	subwfb	(btemp+9)^0,f,c
 19991  0152AA  0E30               	movlw	48
 19992  0152AC  263D               	addwf	(btemp+8)^0,f,c
 19993  0152AE  0E00               	movlw	0
 19994  0152B0  223E               	addwfc	(btemp+9)^0,f,c
 19995                           
 19996                           ;stkvar	_n @ sp[(-9)+5]
 19997  0152B2  0EFC               	movlw	-4
 19998  0152B4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 19999  0152BA  0EFD               	movlw	-3
 20000  0152BC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 20001  0152C2  D79B               	goto	l7416
 20002  0152C4                     l7424:
 20003  0152C4  0ED0               	movlw	208
 20004  0152C6  6E3F               	movwf	(btemp+10)^0,c
 20005  0152C8  0EFF               	movlw	255
 20006  0152CA  6E40               	movwf	(btemp+11)^0,c
 20007                           
 20008                           ;stkvar	_s @ sp[(-9)+-2]
 20009  0152CC  50E1               	movf	fsr1l,w,c
 20010  0152CE  0FF5               	addlw	-11
 20011  0152D0  6ED9               	movwf	fsr2l,c
 20012  0152D2  50E2               	movf	fsr1h,w,c
 20013  0152D4  6EDA               	movwf	fsr2h,c
 20014  0152D6  0EFF               	movlw	255
 20015  0152D8  22DA               	addwfc	fsr2h,f,c
 20016  0152DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20017  0152E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20018  0152E6                     	if	0	;tblptru may be non-zero
 20019  0152E6                     	endif
 20020  0152E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20021  0152E6  0E00               	movlw	low (__mediumconst shr (0+16))
 20022  0152E8  6EF8               	movwf	tblptru,c
 20023  0152EA                     	endif
 20024  0152EA  0008               	tblrd		*
 20025  0152EC  50F5               	movf	tablat,w,c
 20026  0152EE  6E3D               	movwf	(btemp+8)^0,c
 20027  0152F0  6A3E               	clrf	(btemp+9)^0,c
 20028  0152F2  503F               	movf	(btemp+10)^0,w,c
 20029  0152F4  263D               	addwf	(btemp+8)^0,f,c
 20030  0152F6  5040               	movf	(btemp+11)^0,w,c
 20031  0152F8  223E               	addwfc	(btemp+9)^0,f,c
 20032  0152FA  503E               	movf	(btemp+9)^0,w,c
 20033  0152FC  E106               	bnz	u7190
 20034  0152FE  0E0A               	movlw	10
 20035  015300  5C3D               	subwf	(btemp+8)^0,w,c
 20036  015302  B0D8               	btfsc	status,0,c
 20037  015304  D002               	goto	u7190
 20038  015306  0E01               	movlw	1
 20039  015308  D001               	goto	u7200
 20040  01530A                     u7190:
 20041  01530A  0E00               	movlw	0
 20042  01530C                     u7200:
 20043  01530C  6E3F               	movwf	(btemp+10)^0,c
 20044  01530E  6A40               	clrf	(btemp+11)^0,c
 20045                           
 20046                           ;stkvar	_atoi$4639 @ sp[(-9)+0]
 20047  015310  0EF7               	movlw	-9
 20048  015312  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 20049  015318  0EF8               	movlw	-8
 20050  01531A  0060  F103  FFE3   	movff	btemp+11,plusw1
 20051                           
 20052                           ;stkvar	_atoi$4639 @ sp[(-9)+0]
 20053  015320  0EF7               	movlw	-9
 20054  015322  006F FF8C  F035    	movff	plusw1,btemp
 20055  015328  0EF8               	movlw	-8
 20056  01532A  50E3               	movf	plusw1,w,c
 20057  01532C  1035               	iorwf	btemp^0,w,c
 20058  01532E  A4D8               	btfss	status,2,c
 20059  015330  D795               	goto	l7420
 20060                           
 20061                           ;stkvar	_neg @ sp[(-9)+7]
 20062  015332  0EFE               	movlw	-2
 20063  015334  006F FF8C  F035    	movff	plusw1,btemp
 20064  01533A  0EFF               	movlw	-1
 20065  01533C  50E3               	movf	plusw1,w,c
 20066  01533E  1035               	iorwf	btemp^0,w,c
 20067  015340  A4D8               	btfss	status,2,c
 20068  015342  D00E               	goto	l7434
 20069                           
 20070                           ;stkvar	_n @ sp[(-9)+5]
 20071  015344  0EFC               	movlw	-4
 20072  015346  006F FF8C  F035    	movff	plusw1,btemp
 20073  01534C  1E35               	comf	btemp^0,f,c
 20074  01534E  0EFD               	movlw	-3
 20075  015350  006F FF8C  F036    	movff	plusw1,btemp+1
 20076  015356  1E36               	comf	(btemp+1)^0,f,c
 20077  015358  2A35               	incf	btemp^0,f,c
 20078  01535A  B4D8               	btfsc	status,2,c
 20079  01535C  2A36               	incf	(btemp+1)^0,f,c
 20080  01535E  D008               	goto	l2691
 20081  015360                     l7434:
 20082                           
 20083                           ;stkvar	_n @ sp[(-9)+5]
 20084  015360  0EFC               	movlw	-4
 20085  015362  006F FF8C  F035    	movff	plusw1,btemp
 20086  015368  0EFD               	movlw	-3
 20087  01536A  006F FF8C  F036    	movff	plusw1,btemp+1
 20088  015370                     l2691:
 20089                           
 20090                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20091  015370  0EF5               	movlw	245
 20092  015372  26E1               	addwf	fsr1l,f,c
 20093  015374  0EFF               	movlw	255
 20094  015376  22E2               	addwfc	fsr1h,f,c
 20095  015378  0012               	return		;funcret
 20096  01537A                     __end_of_atoi:
 20097                           	opt callstack 0
 20098                           
 20099 ;; *************** function _isspace *****************
 20100 ;; Defined at:
 20101 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;  c               2  [STACK] int 
 20104 ;; Auto vars:     Size  Location     Type
 20105 ;;		None
 20106 ;; Return value:  Size  Location     Type
 20107 ;;                  2  [STACK] int 
 20108 ;; Registers used:
 20109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20110 ;; Tracked objects:
 20111 ;;		On entry : 0/0
 20112 ;;		On exit  : 0/0
 20113 ;;		Unchanged: 0/0
 20114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20119 ;;Total ram usage:        0 bytes
 20120 ;; Hardware stack levels used:    1
 20121 ;; Hardware stack levels required when called:    6
 20122 ;; This function calls:
 20123 ;;		Nothing
 20124 ;; This function is called by:
 20125 ;;		_atoi
 20126 ;; This function uses a reentrant model
 20127 ;;
 20128                           
 20129                           	psect	text68
 20130  0179B2                     __ptext68:
 20131                           	opt callstack 0
 20132  0179B2                     _isspace:
 20133                           	opt callstack 0
 20134                           
 20135                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20136  0179B2  52E6               	movf	postinc1,f,c
 20137                           
 20138                           ;stkvar	_isspace$4677 @ sp[(-1)+0]
 20139                           
 20140                           ;incstack = 0
 20141  0179B4  0EFF               	movlw	-1
 20142  0179B6  6AE3               	clrf	plusw1,c
 20143  0179B8  2AE3               	incf	plusw1,f,c
 20144                           
 20145                           ;stkvar	_c @ sp[(-1)+-2]
 20146  0179BA  0EFD               	movlw	-3
 20147  0179BC  006F FF8C  F035    	movff	plusw1,btemp
 20148  0179C2  0E20               	movlw	32
 20149  0179C4  1835               	xorwf	btemp^0,w,c
 20150  0179C6  E104               	bnz	u6160
 20151  0179C8  0EFE               	movlw	-2
 20152  0179CA  50E3               	movf	plusw1,w,c
 20153  0179CC  B4D8               	btfsc	status,2,c
 20154  0179CE  D012               	goto	l6884
 20155  0179D0                     u6160:
 20156                           
 20157                           ;stkvar	_c @ sp[(-1)+-2]
 20158  0179D0  0EFD               	movlw	-3
 20159  0179D2  50E3               	movf	plusw1,w,c
 20160  0179D4  0FF7               	addlw	247
 20161  0179D6  6E3F               	movwf	(btemp+10)^0,c
 20162  0179D8  0EFE               	movlw	-2
 20163  0179DA  006F FF8C  F040    	movff	plusw1,btemp+11
 20164  0179E0  0EFF               	movlw	255
 20165  0179E2  2240               	addwfc	(btemp+11)^0,f,c
 20166  0179E4  5040               	movf	(btemp+11)^0,w,c
 20167  0179E6  E104               	bnz	u6170
 20168  0179E8  0E05               	movlw	5
 20169  0179EA  5C3F               	subwf	(btemp+10)^0,w,c
 20170  0179EC  A0D8               	btfss	status,0,c
 20171  0179EE  D002               	goto	l6884
 20172  0179F0                     u6170:
 20173                           
 20174                           ;stkvar	_isspace$4677 @ sp[(-1)+0]
 20175  0179F0  0EFF               	movlw	-1
 20176  0179F2  6AE3               	clrf	plusw1,c
 20177  0179F4                     l6884:
 20178                           
 20179                           ;stkvar	_isspace$4677 @ sp[(-1)+0]
 20180  0179F4  0EFF               	movlw	-1
 20181  0179F6  50E3               	movf	plusw1,w,c
 20182  0179F8  6E35               	movwf	btemp^0,c
 20183  0179FA  6A36               	clrf	(btemp+1)^0,c
 20184                           
 20185                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20186  0179FC  52E5               	movf	postdec1,f,c
 20187  0179FE  52E5               	movf	postdec1,f,c
 20188  017A00  52E5               	movf	postdec1,f,c
 20189  017A02  0012               	return		;funcret
 20190  017A04                     __end_of_isspace:
 20191                           	opt callstack 0
 20192                           
 20193 ;; *************** function _isdigit *****************
 20194 ;; Defined at:
 20195 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20196 ;; Parameters:    Size  Location     Type
 20197 ;;  c               2  [STACK] int 
 20198 ;; Auto vars:     Size  Location     Type
 20199 ;;		None
 20200 ;; Return value:  Size  Location     Type
 20201 ;;                  2  [STACK] int 
 20202 ;; Registers used:
 20203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20204 ;; Tracked objects:
 20205 ;;		On entry : 0/0
 20206 ;;		On exit  : 0/0
 20207 ;;		Unchanged: 0/0
 20208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20213 ;;Total ram usage:        0 bytes
 20214 ;; Hardware stack levels used:    1
 20215 ;; Hardware stack levels required when called:    6
 20216 ;; This function calls:
 20217 ;;		Nothing
 20218 ;; This function is called by:
 20219 ;;		_vfpfcnvrt
 20220 ;;		_atoi
 20221 ;; This function uses a reentrant model
 20222 ;;
 20223                           
 20224                           	psect	text69
 20225  017E94                     __ptext69:
 20226                           	opt callstack 0
 20227  017E94                     _isdigit:
 20228                           	opt callstack 18
 20229                           
 20230                           ;stkvar	_c @ sp[(0)+-2]
 20231                           
 20232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20233                           ;incstack = 0
 20234  017E94  0EFE               	movlw	-2
 20235  017E96  50E3               	movf	plusw1,w,c
 20236  017E98  0FD0               	addlw	208
 20237  017E9A  6E3F               	movwf	(btemp+10)^0,c
 20238  017E9C  0EFF               	movlw	-1
 20239  017E9E  006F FF8C  F040    	movff	plusw1,btemp+11
 20240  017EA4  0EFF               	movlw	255
 20241  017EA6  2240               	addwfc	(btemp+11)^0,f,c
 20242  017EA8  5040               	movf	(btemp+11)^0,w,c
 20243  017EAA  E106               	bnz	u5120
 20244  017EAC  0E0A               	movlw	10
 20245  017EAE  5C3F               	subwf	(btemp+10)^0,w,c
 20246  017EB0  B0D8               	btfsc	status,0,c
 20247  017EB2  D002               	goto	u5120
 20248  017EB4  0E01               	movlw	1
 20249  017EB6  D001               	goto	u5130
 20250  017EB8                     u5120:
 20251  017EB8  0E00               	movlw	0
 20252  017EBA                     u5130:
 20253  017EBA  6E35               	movwf	btemp^0,c
 20254  017EBC  6A36               	clrf	(btemp+1)^0,c
 20255                           
 20256                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20257  017EBE  52E5               	movf	postdec1,f,c
 20258  017EC0  52E5               	movf	postdec1,f,c
 20259  017EC2  0012               	return		;funcret
 20260  017EC4                     __end_of_isdigit:
 20261                           	opt callstack 0
 20262                           
 20263 ;; *************** function _set_vterm *****************
 20264 ;; Defined at:
 20265 ;;		line 104 in file "mconfig.c"
 20266 ;; Parameters:    Size  Location     Type
 20267 ;;  vterm           1  [STACK] unsigned char 
 20268 ;; Auto vars:     Size  Location     Type
 20269 ;;		None
 20270 ;; Return value:  Size  Location     Type
 20271 ;;                  1  [STACK] unsigned char 
 20272 ;; Registers used:
 20273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20274 ;; Tracked objects:
 20275 ;;		On entry : 0/0
 20276 ;;		On exit  : 3F/4
 20277 ;;		Unchanged: 0/0
 20278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20283 ;;Total ram usage:        0 bytes
 20284 ;; Hardware stack levels used:    1
 20285 ;; Hardware stack levels required when called:    6
 20286 ;; This function calls:
 20287 ;;		Nothing
 20288 ;; This function is called by:
 20289 ;;		_main
 20290 ;;		_check_help
 20291 ;; This function uses a reentrant model
 20292 ;;
 20293                           
 20294                           	psect	text70
 20295  018398                     __ptext70:
 20296                           	opt callstack 0
 20297  018398                     _set_vterm:
 20298                           	opt callstack 24
 20299                           
 20300                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 20301                           ;stkvar	_vterm @ sp[(0)+-1]
 20302                           
 20303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20304                           ;incstack = 0
 20305  018398  0EFF               	movlw	-1
 20306  01839A  006F FF8C  F040    	movff	plusw1,btemp+11
 20307  0183A0  0E03               	movlw	3
 20308  0183A2  1640               	andwf	(btemp+11)^0,f,c
 20309  0183A4  0104               	movlb	4	; () banked
 20310  0183A6  51D8               	movf	(_D+216)& (0+255),w,b
 20311  0183A8  1840               	xorwf	(btemp+11)^0,w,c
 20312  0183AA  0BFE               	andlw	-2
 20313  0183AC  1840               	xorwf	(btemp+11)^0,w,c
 20314  0183AE  6FD8               	movwf	(_D+216)& (0+255),b
 20315                           
 20316                           ; BSR set to: 4
 20317                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20318  0183B0  52E5               	movf	postdec1,f,c
 20319  0183B2  0012               	return		;funcret
 20320  0183B4                     __end_of_set_vterm:
 20321                           	opt callstack 0
 20322                           
 20323 ;; *************** function _set_temp_display_help *****************
 20324 ;; Defined at:
 20325 ;;		line 208 in file "mconfig.c"
 20326 ;; Parameters:    Size  Location     Type
 20327 ;;  new_response    1  [STACK] const enum E16501
 20328 ;; Auto vars:     Size  Location     Type
 20329 ;;		None
 20330 ;; Return value:  Size  Location     Type
 20331 ;;                  1  [STACK] enum E16501
 20332 ;; Registers used:
 20333 ;;		wreg, fsr1l, fsr1h
 20334 ;; Tracked objects:
 20335 ;;		On entry : 0/4
 20336 ;;		On exit  : 3F/2
 20337 ;;		Unchanged: 0/0
 20338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20343 ;;Total ram usage:        0 bytes
 20344 ;; Hardware stack levels used:    1
 20345 ;; Hardware stack levels required when called:    6
 20346 ;; This function calls:
 20347 ;;		Nothing
 20348 ;; This function is called by:
 20349 ;;		_check_help
 20350 ;; This function uses a reentrant model
 20351 ;;
 20352                           
 20353                           	psect	text71
 20354  01849A                     __ptext71:
 20355                           	opt callstack 0
 20356  01849A                     _set_temp_display_help:
 20357                           	opt callstack 23
 20358                           
 20359                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 20360                           
 20361                           ; BSR set to: 4
 20362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20363                           ;incstack = 0
 20364  01849A  0102               	movlb	2	; () banked
 20365  01849C  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
 20366                           
 20367                           ; BSR set to: 2
 20368                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 20369                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20370  01849E  0EFF               	movlw	-1
 20371  0184A0  006F FF8C  F2B2    	movff	plusw1,_V+178	;volatile
 20372                           
 20373                           ; BSR set to: 2
 20374                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20375  0184A6  52E5               	movf	postdec1,f,c
 20376  0184A8  0012               	return		;funcret
 20377  0184AA                     __end_of_set_temp_display_help:
 20378                           	opt callstack 0
 20379                           
 20380 ;; *************** function _set_display_info *****************
 20381 ;; Defined at:
 20382 ;;		line 197 in file "mconfig.c"
 20383 ;; Parameters:    Size  Location     Type
 20384 ;;  new_response    1  [STACK] const enum E16501
 20385 ;; Auto vars:     Size  Location     Type
 20386 ;;		None
 20387 ;; Return value:  Size  Location     Type
 20388 ;;                  1  [STACK] enum E16986
 20389 ;; Registers used:
 20390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20391 ;; Tracked objects:
 20392 ;;		On entry : 0/4
 20393 ;;		On exit  : 0/0
 20394 ;;		Unchanged: 0/0
 20395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20400 ;;Total ram usage:        0 bytes
 20401 ;; Hardware stack levels used:    1
 20402 ;; Hardware stack levels required when called:    7
 20403 ;; This function calls:
 20404 ;;		_TimerDone
 20405 ;; This function is called by:
 20406 ;;		_main
 20407 ;;		_check_help
 20408 ;; This function uses a reentrant model
 20409 ;;
 20410                           
 20411                           	psect	text72
 20412  018304                     __ptext72:
 20413                           	opt callstack 0
 20414  018304                     _set_display_info:
 20415                           	opt callstack 23
 20416                           
 20417                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 20418                           
 20419                           ; BSR set to: 2
 20420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20421                           ;incstack = 0
 20422  018304  0E07               	movlw	7
 20423  018306  6EE6               	movwf	postinc1,c
 20424  018308  EC0D  F0C1         	call	_TimerDone	;wreg free
 20425  01830C  5035               	movf	btemp^0,w,c
 20426  01830E  B4D8               	btfsc	status,2,c
 20427  018310  D006               	goto	l1601
 20428                           
 20429                           ;mconfig.c: 202:   old_info = V.response.info;
 20430  018312  0102               	movlb	2	; () banked
 20431  018314  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
 20432                           
 20433                           ; BSR set to: 2
 20434                           ;mconfig.c: 203:   V.response.info = new_response_info;
 20435                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20436  018316  0EFF               	movlw	-1
 20437  018318  006F FF8C  F2B1    	movff	plusw1,_V+177	;volatile
 20438  01831E                     l1601:
 20439                           
 20440                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20441  01831E  52E5               	movf	postdec1,f,c
 20442  018320  0012               	return		;funcret
 20443  018322                     __end_of_set_display_info:
 20444                           	opt callstack 0
 20445                           
 20446 ;; *************** function _mode_lamp_dim *****************
 20447 ;; Defined at:
 20448 ;;		line 13 in file "mconfig.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;  level           2  [STACK] const unsigned short 
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;		None
 20453 ;; Return value:  Size  Location     Type
 20454 ;;                  1  [STACK] void 
 20455 ;; Registers used:
 20456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/2
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20466 ;;Total ram usage:        0 bytes
 20467 ;; Hardware stack levels used:    1
 20468 ;; Hardware stack levels required when called:    7
 20469 ;; This function calls:
 20470 ;;		_PWM8_LoadDutyValue
 20471 ;; This function is called by:
 20472 ;;		_main
 20473 ;;		_check_help
 20474 ;; This function uses a reentrant model
 20475 ;;
 20476                           
 20477                           	psect	text73
 20478  018402                     __ptext73:
 20479                           	opt callstack 0
 20480  018402                     _mode_lamp_dim:
 20481                           	opt callstack 23
 20482                           
 20483                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20484                           ;stkvar	_level @ sp[(0)+-2]
 20485                           
 20486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20487                           ;incstack = 0
 20488  018402  0EFE               	movlw	-2
 20489  018404  006F FF8F FFE6     	movff	plusw1,postinc1
 20490  01840A  006F FF8F FFE6     	movff	plusw1,postinc1
 20491  018410  ECF7  F0BD         	call	_PWM8_LoadDutyValue	;wreg free
 20492                           
 20493                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20494  018414  52E5               	movf	postdec1,f,c
 20495  018416  52E5               	movf	postdec1,f,c
 20496  018418  0012               	return		;funcret
 20497  01841A                     __end_of_mode_lamp_dim:
 20498                           	opt callstack 0
 20499                           
 20500 ;; *************** function _mode_lamp_bright *****************
 20501 ;; Defined at:
 20502 ;;		line 18 in file "mconfig.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;		None
 20505 ;; Auto vars:     Size  Location     Type
 20506 ;;		None
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  1  [STACK] void 
 20509 ;; Registers used:
 20510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/2
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20520 ;;Total ram usage:        0 bytes
 20521 ;; Hardware stack levels used:    1
 20522 ;; Hardware stack levels required when called:    7
 20523 ;; This function calls:
 20524 ;;		_PWM8_LoadDutyValue
 20525 ;; This function is called by:
 20526 ;;		_check_help
 20527 ;; This function uses a reentrant model
 20528 ;;
 20529                           
 20530                           	psect	text74
 20531  0184B8                     __ptext74:
 20532                           	opt callstack 0
 20533  0184B8                     _mode_lamp_bright:
 20534                           	opt callstack 22
 20535                           
 20536                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20537                           
 20538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20539                           ;incstack = 0
 20540  0184B8  0E2C               	movlw	44
 20541  0184BA  6EE6               	movwf	postinc1,c
 20542  0184BC  0E01               	movlw	1
 20543  0184BE  6EE6               	movwf	postinc1,c
 20544  0184C0  ECF7  F0BD         	call	_PWM8_LoadDutyValue	;wreg free
 20545                           
 20546                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20547  0184C4  0012               	return		;funcret
 20548  0184C6                     __end_of_mode_lamp_bright:
 20549                           	opt callstack 0
 20550                           
 20551 ;; *************** function _PWM8_LoadDutyValue *****************
 20552 ;; Defined at:
 20553 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20554 ;; Parameters:    Size  Location     Type
 20555 ;;  dutyValue       2  [STACK] unsigned short 
 20556 ;; Auto vars:     Size  Location     Type
 20557 ;;		None
 20558 ;; Return value:  Size  Location     Type
 20559 ;;                  1  [STACK] void 
 20560 ;; Registers used:
 20561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20562 ;; Tracked objects:
 20563 ;;		On entry : 0/2
 20564 ;;		On exit  : 0/0
 20565 ;;		Unchanged: 0/0
 20566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20571 ;;Total ram usage:        0 bytes
 20572 ;; Hardware stack levels used:    1
 20573 ;; Hardware stack levels required when called:    6
 20574 ;; This function calls:
 20575 ;;		Nothing
 20576 ;; This function is called by:
 20577 ;;		_mode_lamp_dim
 20578 ;;		_mode_lamp_bright
 20579 ;; This function uses a reentrant model
 20580 ;;
 20581                           
 20582                           	psect	text75
 20583  017BEE                     __ptext75:
 20584                           	opt callstack 0
 20585  017BEE                     _PWM8_LoadDutyValue:
 20586                           	opt callstack 23
 20587                           
 20588                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20589                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20590                           
 20591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20592                           ;incstack = 0
 20593  017BEE  0EFE               	movlw	-2
 20594  017BF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 20595  017BF6  0EFF               	movlw	-1
 20596  017BF8  006F FF8C  F040    	movff	plusw1,btemp+11
 20597  017BFE  90D8               	bcf	status,0,c
 20598  017C00  3240               	rrcf	(btemp+11)^0,f,c
 20599  017C02  323F               	rrcf	(btemp+10)^0,f,c
 20600  017C04  90D8               	bcf	status,0,c
 20601  017C06  3240               	rrcf	(btemp+11)^0,f,c
 20602  017C08  323F               	rrcf	(btemp+10)^0,f,c
 20603  017C0A  503F               	movf	(btemp+10)^0,w,c
 20604  017C0C  6E61               	movwf	97,c	;volatile
 20605                           
 20606                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20607                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20608  017C0E  0EFE               	movlw	-2
 20609  017C10  006F FF8C  F040    	movff	plusw1,btemp+11
 20610  017C16  0E03               	movlw	3
 20611  017C18  1640               	andwf	(btemp+11)^0,f,c
 20612  017C1A  0E06               	movlw	6
 20613  017C1C  6E35               	movwf	btemp^0,c
 20614  017C1E                     u7655:
 20615  017C1E  90D8               	bcf	status,0,c
 20616  017C20  3640               	rlcf	(btemp+11)^0,f,c
 20617  017C22  2E35               	decfsz	btemp^0,f,c
 20618  017C24  D7FC               	goto	u7655
 20619  017C26  5040               	movf	(btemp+11)^0,w,c
 20620  017C28  6E60               	movwf	96,c	;volatile
 20621                           
 20622                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20623  017C2A  52E5               	movf	postdec1,f,c
 20624  017C2C  52E5               	movf	postdec1,f,c
 20625  017C2E  0012               	return		;funcret
 20626  017C30                     __end_of_PWM8_LoadDutyValue:
 20627                           	opt callstack 0
 20628                           
 20629 ;; *************** function _help_button *****************
 20630 ;; Defined at:
 20631 ;;		line 26 in file "mconfig.c"
 20632 ;; Parameters:    Size  Location     Type
 20633 ;;		None
 20634 ;; Auto vars:     Size  Location     Type
 20635 ;;		None
 20636 ;; Return value:  Size  Location     Type
 20637 ;;                  1  [STACK] _Bool 
 20638 ;; Registers used:
 20639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20640 ;; Tracked objects:
 20641 ;;		On entry : 0/2
 20642 ;;		On exit  : 0/0
 20643 ;;		Unchanged: 0/0
 20644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20649 ;;Total ram usage:        0 bytes
 20650 ;; Hardware stack levels used:    1
 20651 ;; Hardware stack levels required when called:    7
 20652 ;; This function calls:
 20653 ;;		_StartTimer
 20654 ;;		_TimerDone
 20655 ;; This function is called by:
 20656 ;;		_check_help
 20657 ;; This function uses a reentrant model
 20658 ;;
 20659                           
 20660                           	psect	text76
 20661  017CEE                     __ptext76:
 20662                           	opt callstack 0
 20663  017CEE                     _help_button:
 20664                           	opt callstack 22
 20665                           
 20666                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20667                           
 20668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20669                           ;incstack = 0
 20670  017CEE  B0CB               	btfsc	203,0,c	;volatile
 20671  017CF0  D00C               	goto	l1544
 20672                           
 20673                           ;mconfig.c: 29:   V.help = 1;
 20674  017CF2  0102               	movlb	2	; () banked
 20675  017CF4  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
 20676                           
 20677                           ; BSR set to: 2
 20678                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20679  017CF6  0E08               	movlw	8
 20680  017CF8  6EE6               	movwf	postinc1,c
 20681  017CFA  EC0D  F0C1         	call	_TimerDone	;wreg free
 20682  017CFE  5035               	movf	btemp^0,w,c
 20683  017D00  B4D8               	btfsc	status,2,c
 20684  017D02  D003               	goto	l1544
 20685                           
 20686                           ;mconfig.c: 31:    return 1;
 20687  017D04  0E01               	movlw	1
 20688  017D06  6E35               	movwf	btemp^0,c
 20689  017D08  0012               	return	
 20690  017D0A                     l1544:
 20691                           
 20692                           ;mconfig.c: 34:  if (!V.help)
 20693  017D0A  0102               	movlb	2	; () banked
 20694  017D0C  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
 20695  017D0E  D008               	goto	l8266
 20696                           
 20697                           ; BSR set to: 2
 20698                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20699  017D10  0E2C               	movlw	44
 20700  017D12  6EE6               	movwf	postinc1,c
 20701  017D14  0E01               	movlw	1
 20702  017D16  6EE6               	movwf	postinc1,c
 20703  017D18  0E08               	movlw	8
 20704  017D1A  6EE6               	movwf	postinc1,c
 20705  017D1C  EC59  F0BE         	call	_StartTimer	;wreg free
 20706  017D20                     l8266:
 20707                           
 20708                           ;mconfig.c: 37:  return 0;
 20709  017D20  0E00               	movlw	0
 20710  017D22  6E35               	movwf	btemp^0,c
 20711                           
 20712                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20713  017D24  0012               	return		;funcret
 20714  017D26                     __end_of_help_button:
 20715                           	opt callstack 0
 20716                           
 20717 ;; *************** function _TimerDone *****************
 20718 ;; Defined at:
 20719 ;;		line 20 in file "timers.c"
 20720 ;; Parameters:    Size  Location     Type
 20721 ;;  timer           1  [STACK] const unsigned char 
 20722 ;; Auto vars:     Size  Location     Type
 20723 ;;		None
 20724 ;; Return value:  Size  Location     Type
 20725 ;;                  1  [STACK] _Bool 
 20726 ;; Registers used:
 20727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20728 ;; Tracked objects:
 20729 ;;		On entry : 0/4
 20730 ;;		On exit  : 0/0
 20731 ;;		Unchanged: 0/0
 20732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20737 ;;Total ram usage:        0 bytes
 20738 ;; Hardware stack levels used:    1
 20739 ;; Hardware stack levels required when called:    6
 20740 ;; This function calls:
 20741 ;;		Nothing
 20742 ;; This function is called by:
 20743 ;;		_main
 20744 ;;		_WaitMs
 20745 ;;		_help_button
 20746 ;;		_check_help
 20747 ;;		_set_display_info
 20748 ;; This function uses a reentrant model
 20749 ;;
 20750                           
 20751                           	psect	text77
 20752  01821A                     __ptext77:
 20753                           	opt callstack 0
 20754  01821A                     _TimerDone:
 20755                           	opt callstack 23
 20756                           
 20757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20758                           ;incstack = 0
 20759  01821A  0004               	clrwdt		;# 
 20760                           
 20761                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20762                           ;stkvar	_timer @ sp[(0)+-1]
 20763  01821C  0EFF               	movlw	-1
 20764  01821E  50E3               	movf	plusw1,w,c
 20765  018220  0D02               	mullw	2
 20766  018222  50F3               	movf	243,w,c
 20767  018224  0F60               	addlw	low _tickCount
 20768  018226  6ED9               	movwf	fsr2l,c
 20769  018228  6ADA               	clrf	fsr2h,c
 20770  01822A  50DE               	movf	postinc2,w,c
 20771  01822C  10DE               	iorwf	postinc2,w,c
 20772  01822E  A4D8               	btfss	status,2,c
 20773  018230  D002               	goto	l7720
 20774                           
 20775                           ;timers.c: 24:   return 1;
 20776  018232  0E01               	movlw	1
 20777  018234  D001               	goto	L18
 20778  018236                     l7720:
 20779                           
 20780                           ;timers.c: 26:  return 0;
 20781  018236  0E00               	movlw	0
 20782  018238                     L18:
 20783  018238  6E35               	movwf	btemp^0,c
 20784                           
 20785                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20786  01823A  52E5               	movf	postdec1,f,c
 20787  01823C  0012               	return		;funcret
 20788  01823E                     __end_of_TimerDone:
 20789                           	opt callstack 0
 20790                           
 20791 ;; *************** function _StartTimer *****************
 20792 ;; Defined at:
 20793 ;;		line 12 in file "timers.c"
 20794 ;; Parameters:    Size  Location     Type
 20795 ;;  timer           1  [STACK] const unsigned char 
 20796 ;;  count           2  [STACK] const unsigned short 
 20797 ;; Auto vars:     Size  Location     Type
 20798 ;;		None
 20799 ;; Return value:  Size  Location     Type
 20800 ;;                  1  [STACK] void 
 20801 ;; Registers used:
 20802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20803 ;; Tracked objects:
 20804 ;;		On entry : 0/4
 20805 ;;		On exit  : 0/0
 20806 ;;		Unchanged: 0/0
 20807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20812 ;;Total ram usage:        0 bytes
 20813 ;; Hardware stack levels used:    1
 20814 ;; Hardware stack levels required when called:    6
 20815 ;; This function calls:
 20816 ;;		Nothing
 20817 ;; This function is called by:
 20818 ;;		_main
 20819 ;;		_WaitMs
 20820 ;;		_help_button
 20821 ;;		_check_help
 20822 ;; This function uses a reentrant model
 20823 ;;
 20824                           
 20825                           	psect	text78
 20826  017CB2                     __ptext78:
 20827                           	opt callstack 0
 20828  017CB2                     _StartTimer:
 20829                           	opt callstack 21
 20830                           
 20831                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 20832                           ;stkvar	_count @ sp[(0)+-3]
 20833                           
 20834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20835                           ;incstack = 0
 20836  017CB2  0EFD               	movlw	-3
 20837  017CB4  006F FF8C  F03F    	movff	plusw1,btemp+10
 20838  017CBA  0EFE               	movlw	-2
 20839  017CBC  006F FF8C  F040    	movff	plusw1,btemp+11
 20840  017CC2  90D8               	bcf	status,0,c
 20841  017CC4  343F               	rlcf	(btemp+10)^0,w,c
 20842  017CC6  6E3D               	movwf	(btemp+8)^0,c
 20843  017CC8  3440               	rlcf	(btemp+11)^0,w,c
 20844  017CCA  6E3E               	movwf	(btemp+9)^0,c
 20845                           
 20846                           ;stkvar	_timer @ sp[(0)+-1]
 20847  017CCC  0EFF               	movlw	-1
 20848  017CCE  50E3               	movf	plusw1,w,c
 20849  017CD0  0D02               	mullw	2
 20850  017CD2  50F3               	movf	243,w,c
 20851  017CD4  0F60               	addlw	low _tickCount
 20852  017CD6  6ED9               	movwf	fsr2l,c
 20853  017CD8  6ADA               	clrf	fsr2h,c
 20854  017CDA  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 20855  017CE0  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 20856                           
 20857                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20858  017CE6  52E5               	movf	postdec1,f,c
 20859  017CE8  52E5               	movf	postdec1,f,c
 20860  017CEA  52E5               	movf	postdec1,f,c
 20861  017CEC  0012               	return		;funcret
 20862  017CEE                     __end_of_StartTimer:
 20863                           	opt callstack 0
 20864                           
 20865 ;; *************** function _display_info *****************
 20866 ;; Defined at:
 20867 ;;		line 187 in file "mconfig.c"
 20868 ;; Parameters:    Size  Location     Type
 20869 ;;		None
 20870 ;; Auto vars:     Size  Location     Type
 20871 ;;		None
 20872 ;; Return value:  Size  Location     Type
 20873 ;;                  1  [STACK] enum E16501
 20874 ;; Registers used:
 20875 ;;		btemp
 20876 ;; Tracked objects:
 20877 ;;		On entry : 0/2
 20878 ;;		On exit  : 0/0
 20879 ;;		Unchanged: 0/0
 20880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20885 ;;Total ram usage:        0 bytes
 20886 ;; Hardware stack levels used:    1
 20887 ;; Hardware stack levels required when called:    6
 20888 ;; This function calls:
 20889 ;;		Nothing
 20890 ;; This function is called by:
 20891 ;;		_check_help
 20892 ;; This function uses a reentrant model
 20893 ;;
 20894                           
 20895                           	psect	text79
 20896  018522                     __ptext79:
 20897                           	opt callstack 0
 20898  018522                     _display_info:
 20899                           	opt callstack 23
 20900                           
 20901                           ;mconfig.c: 189:  return V.response.info;
 20902                           
 20903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20904                           ;incstack = 0
 20905  018522  0060  FAC4  F035   	movff	_V+177,btemp	;volatile
 20906                           
 20907                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20908  018528  0012               	return		;funcret
 20909  01852A                     __end_of_display_info:
 20910                           	opt callstack 0
 20911                           
 20912 ;; *************** function _display_help *****************
 20913 ;; Defined at:
 20914 ;;		line 192 in file "mconfig.c"
 20915 ;; Parameters:    Size  Location     Type
 20916 ;;		None
 20917 ;; Auto vars:     Size  Location     Type
 20918 ;;		None
 20919 ;; Return value:  Size  Location     Type
 20920 ;;                  1  [STACK] enum E16501
 20921 ;; Registers used:
 20922 ;;		btemp
 20923 ;; Tracked objects:
 20924 ;;		On entry : 3F/2
 20925 ;;		On exit  : 0/0
 20926 ;;		Unchanged: 0/0
 20927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20932 ;;Total ram usage:        0 bytes
 20933 ;; Hardware stack levels used:    1
 20934 ;; Hardware stack levels required when called:    6
 20935 ;; This function calls:
 20936 ;;		Nothing
 20937 ;; This function is called by:
 20938 ;;		_check_help
 20939 ;; This function uses a reentrant model
 20940 ;;
 20941                           
 20942                           	psect	text80
 20943  01852A                     __ptext80:
 20944                           	opt callstack 0
 20945  01852A                     _display_help:
 20946                           	opt callstack 23
 20947                           
 20948                           ;mconfig.c: 194:  return V.response.help_temp;
 20949                           
 20950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20951                           ;incstack = 0
 20952  01852A  0060  FAC8  F035   	movff	_V+178,btemp	;volatile
 20953                           
 20954                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20955  018530  0012               	return		;funcret
 20956  018532                     __end_of_display_help:
 20957                           	opt callstack 0
 20958                           
 20959 ;; *************** function _check_adc_scan *****************
 20960 ;; Defined at:
 20961 ;;		line 51 in file "daq.c"
 20962 ;; Parameters:    Size  Location     Type
 20963 ;;		None
 20964 ;; Auto vars:     Size  Location     Type
 20965 ;;		None
 20966 ;; Return value:  Size  Location     Type
 20967 ;;                  1  [STACK] _Bool 
 20968 ;; Registers used:
 20969 ;;		btemp
 20970 ;; Tracked objects:
 20971 ;;		On entry : 0/4
 20972 ;;		On exit  : 0/0
 20973 ;;		Unchanged: 0/0
 20974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20979 ;;Total ram usage:        0 bytes
 20980 ;; Hardware stack levels used:    1
 20981 ;; Hardware stack levels required when called:    6
 20982 ;; This function calls:
 20983 ;;		Nothing
 20984 ;; This function is called by:
 20985 ;;		_main
 20986 ;; This function uses a reentrant model
 20987 ;;
 20988                           
 20989                           	psect	text81
 20990  018532                     __ptext81:
 20991                           	opt callstack 0
 20992  018532                     _check_adc_scan:
 20993                           	opt callstack 24
 20994                           
 20995                           ;daq.c: 53:  return R.done;
 20996                           
 20997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20998                           ;incstack = 0
 20999  018532  0060  F330  F035   	movff	_R+41,btemp	;volatile
 21000                           
 21001                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21002  018538  0012               	return		;funcret
 21003  01853A                     __end_of_check_adc_scan:
 21004                           	opt callstack 0
 21005                           
 21006 ;; *************** function _SYSTEM_Initialize *****************
 21007 ;; Defined at:
 21008 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21009 ;; Parameters:    Size  Location     Type
 21010 ;;		None
 21011 ;; Auto vars:     Size  Location     Type
 21012 ;;		None
 21013 ;; Return value:  Size  Location     Type
 21014 ;;                  1  [STACK] void 
 21015 ;; Registers used:
 21016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21017 ;; Tracked objects:
 21018 ;;		On entry : 0/0
 21019 ;;		On exit  : 3F/3C
 21020 ;;		Unchanged: 0/0
 21021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21026 ;;Total ram usage:        0 bytes
 21027 ;; Hardware stack levels used:    1
 21028 ;; Hardware stack levels required when called:    8
 21029 ;; This function calls:
 21030 ;;		_ADCC_Initialize
 21031 ;;		_CLKREF_Initialize
 21032 ;;		_DMA1_Initialize
 21033 ;;		_DMA2_Initialize
 21034 ;;		_EXT_INT_Initialize
 21035 ;;		_FVR_Initialize
 21036 ;;		_INTERRUPT_Initialize
 21037 ;;		_OSCILLATOR_Initialize
 21038 ;;		_PIN_MANAGER_Initialize
 21039 ;;		_PMD_Initialize
 21040 ;;		_PWM8_Initialize
 21041 ;;		_SPI1_Initialize
 21042 ;;		_TMR2_Initialize
 21043 ;;		_TMR5_Initialize
 21044 ;;		_TMR6_Initialize
 21045 ;;		_UART1_Initialize
 21046 ;;		_UART2_Initialize
 21047 ;; This function is called by:
 21048 ;;		_main
 21049 ;; This function uses a reentrant model
 21050 ;;
 21051                           
 21052                           	psect	text82
 21053  017AD8                     __ptext82:
 21054                           	opt callstack 0
 21055  017AD8                     _SYSTEM_Initialize:
 21056                           	opt callstack 22
 21057                           
 21058                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21059                           
 21060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21061                           ;incstack = 0
 21062  017AD8  EC00  F0BB         	call	_INTERRUPT_Initialize	;wreg free
 21063                           
 21064                           ; BSR set to: 57
 21065                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21066  017ADC  EC3A  F0C2         	call	_PMD_Initialize	;wreg free
 21067                           
 21068                           ; BSR set to: 57
 21069                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21070  017AE0  EC52  F0B9         	call	_PIN_MANAGER_Initialize	;wreg free
 21071                           
 21072                           ; BSR set to: 58
 21073                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21074  017AE4  EC2F  F0C2         	call	_OSCILLATOR_Initialize	;wreg free
 21075                           
 21076                           ; BSR set to: 57
 21077                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21078  017AE8  EC9D  F0C2         	call	_FVR_Initialize	;wreg free
 21079                           
 21080                           ; BSR set to: 62
 21081                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21082  017AEC  EC97  F0BA         	call	_ADCC_Initialize	;wreg free
 21083                           
 21084                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 21085  017AF0  EC24  F0C2         	call	_PWM8_Initialize	;wreg free
 21086                           
 21087                           ; BSR set to: 63
 21088                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 21089  017AF4  EC0D  F0C2         	call	_TMR2_Initialize	;wreg free
 21090                           
 21091                           ; BSR set to: 57
 21092                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21093  017AF8  EC00  F0BF         	call	_EXT_INT_Initialize	;wreg free
 21094                           
 21095                           ; BSR set to: 57
 21096                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21097  017AFC  ECA5  F0BF         	call	_TMR6_Initialize	;wreg free
 21098                           
 21099                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21100  017B00  EC8F  F0BD         	call	_TMR5_Initialize	;wreg free
 21101                           
 21102                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21103  017B04  EC65  F0BB         	call	_UART1_Initialize	;wreg free
 21104                           
 21105                           ; BSR set to: 57
 21106                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21107  017B08  ECF9  F0BB         	call	_UART2_Initialize	;wreg free
 21108                           
 21109                           ; BSR set to: 57
 21110                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21111  017B0C  EC19  F0C2         	call	_SPI1_Initialize	;wreg free
 21112                           
 21113                           ; BSR set to: 61
 21114                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21115  017B10  EC83  F0BC         	call	_DMA2_Initialize	;wreg free
 21116                           
 21117                           ; BSR set to: 59
 21118                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21119  017B14  EC62  F0BA         	call	_DMA1_Initialize	;wreg free
 21120                           
 21121                           ; BSR set to: 59
 21122                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21123  017B18  EC7B  F0C2         	call	_CLKREF_Initialize	;wreg free
 21124                           
 21125                           ; BSR set to: 60
 21126                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21127  017B1C  0012               	return		;funcret
 21128  017B1E                     __end_of_SYSTEM_Initialize:
 21129                           	opt callstack 0
 21130                           
 21131 ;; *************** function _UART2_Initialize *****************
 21132 ;; Defined at:
 21133 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21134 ;; Parameters:    Size  Location     Type
 21135 ;;		None
 21136 ;; Auto vars:     Size  Location     Type
 21137 ;;		None
 21138 ;; Return value:  Size  Location     Type
 21139 ;;                  1  [STACK] void 
 21140 ;; Registers used:
 21141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21142 ;; Tracked objects:
 21143 ;;		On entry : 3F/39
 21144 ;;		On exit  : 3F/39
 21145 ;;		Unchanged: 0/0
 21146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21151 ;;Total ram usage:        0 bytes
 21152 ;; Hardware stack levels used:    1
 21153 ;; Hardware stack levels required when called:    7
 21154 ;; This function calls:
 21155 ;;		_UART2_SetRxInterruptHandler
 21156 ;;		_UART2_SetTxInterruptHandler
 21157 ;; This function is called by:
 21158 ;;		_SYSTEM_Initialize
 21159 ;; This function uses a reentrant model
 21160 ;;
 21161                           
 21162                           	psect	text83
 21163  0177F2                     __ptext83:
 21164                           	opt callstack 0
 21165  0177F2                     _UART2_Initialize:
 21166                           	opt callstack 22
 21167                           
 21168                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21169                           
 21170                           ; BSR set to: 60
 21171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21172                           ;incstack = 0
 21173  0177F2  0139               	movlb	57	; () banked
 21174  0177F4  9596               	bcf	150,2,b	;volatile
 21175                           
 21176                           ; BSR set to: 57
 21177                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21178  0177F6  0E5E               	movlw	low _UART2_Receive_ISR
 21179  0177F8  6EE6               	movwf	postinc1,c
 21180  0177FA  0E83               	movlw	high _UART2_Receive_ISR
 21181  0177FC  6EE6               	movwf	postinc1,c
 21182  0177FE  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21183  017800  6EE6               	movwf	postinc1,c
 21184  017802  EC0A  F0C0         	call	_UART2_SetRxInterruptHandler	;wreg free
 21185                           
 21186                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21187  017806  0139               	movlb	57	; () banked
 21188  017808  9796               	bcf	150,3,b	;volatile
 21189                           
 21190                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21191  01780A  0E1E               	movlw	low _UART2_Transmit_ISR
 21192  01780C  6EE6               	movwf	postinc1,c
 21193  01780E  0E7F               	movlw	high _UART2_Transmit_ISR
 21194  017810  6EE6               	movwf	postinc1,c
 21195  017812  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21196  017814  6EE6               	movwf	postinc1,c
 21197  017816  ECF6  F0BF         	call	_UART2_SetTxInterruptHandler	;wreg free
 21198                           
 21199                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21200  01781A  013D               	movlb	61	; () banked
 21201  01781C  6BD4               	clrf	212,b	;volatile
 21202                           
 21203                           ; BSR set to: 61
 21204                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21205  01781E  6BD6               	clrf	214,b	;volatile
 21206                           
 21207                           ; BSR set to: 61
 21208                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21209  017820  6BD8               	clrf	216,b	;volatile
 21210                           
 21211                           ; BSR set to: 61
 21212                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21213  017822  0EB0               	movlw	176
 21214  017824  6FDA               	movwf	218,b	;volatile
 21215                           
 21216                           ; BSR set to: 61
 21217                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21218  017826  0E80               	movlw	128
 21219  017828  6FDB               	movwf	219,b	;volatile
 21220                           
 21221                           ; BSR set to: 61
 21222                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21223  01782A  6BDC               	clrf	220,b	;volatile
 21224                           
 21225                           ; BSR set to: 61
 21226                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21227  01782C  0E82               	movlw	130
 21228  01782E  6FDD               	movwf	221,b	;volatile
 21229                           
 21230                           ; BSR set to: 61
 21231                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21232  017830  0E06               	movlw	6
 21233  017832  6FDE               	movwf	222,b	;volatile
 21234                           
 21235                           ; BSR set to: 61
 21236                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21237  017834  6BDF               	clrf	223,b	;volatile
 21238                           
 21239                           ; BSR set to: 61
 21240                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21241  017836  6BE0               	clrf	224,b	;volatile
 21242                           
 21243                           ; BSR set to: 61
 21244                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21245  017838  6BE1               	clrf	225,b	;volatile
 21246                           
 21247                           ; BSR set to: 61
 21248                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21249  01783A  6BE2               	clrf	226,b	;volatile
 21250                           
 21251                           ; BSR set to: 61
 21252                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21253  01783C  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 21254                           
 21255                           ; BSR set to: 61
 21256                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21257  01783E  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 21258                           
 21259                           ; BSR set to: 61
 21260                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21261  017840  0E40               	movlw	64
 21262  017842  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21263                           
 21264                           ; BSR set to: 61
 21265                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21266  017844  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 21267                           
 21268                           ; BSR set to: 61
 21269                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21270  017846  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 21271                           
 21272                           ; BSR set to: 61
 21273                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21274  017848  6A29               	clrf	_uart2RxCount^0,c	;volatile
 21275                           
 21276                           ; BSR set to: 61
 21277                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21278  01784A  0139               	movlb	57	; () banked
 21279  01784C  8596               	bsf	150,2,b	;volatile
 21280                           
 21281                           ; BSR set to: 57
 21282                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21283  01784E  0012               	return		;funcret
 21284  017850                     __end_of_UART2_Initialize:
 21285                           	opt callstack 0
 21286                           
 21287 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21288 ;; Defined at:
 21289 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21290 ;; Parameters:    Size  Location     Type
 21291 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21292 ;;		 -> UART2_Transmit_ISR(1), 
 21293 ;; Auto vars:     Size  Location     Type
 21294 ;;		None
 21295 ;; Return value:  Size  Location     Type
 21296 ;;                  1  [STACK] void 
 21297 ;; Registers used:
 21298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21299 ;; Tracked objects:
 21300 ;;		On entry : 3F/39
 21301 ;;		On exit  : 0/0
 21302 ;;		Unchanged: 0/0
 21303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21308 ;;Total ram usage:        0 bytes
 21309 ;; Hardware stack levels used:    1
 21310 ;; Hardware stack levels required when called:    6
 21311 ;; This function calls:
 21312 ;;		Nothing
 21313 ;; This function is called by:
 21314 ;;		_UART2_Initialize
 21315 ;; This function uses a reentrant model
 21316 ;;
 21317                           
 21318                           	psect	text84
 21319  017FEC                     __ptext84:
 21320                           	opt callstack 0
 21321  017FEC                     _UART2_SetTxInterruptHandler:
 21322                           	opt callstack 22
 21323                           
 21324                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21325                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21326                           
 21327                           ; BSR set to: 57
 21328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21329                           ;incstack = 0
 21330  017FEC  50E1               	movf	fsr1l,w,c
 21331  017FEE  0FFD               	addlw	-3
 21332  017FF0  6ED9               	movwf	fsr2l,c
 21333  017FF2  50E2               	movf	fsr1h,w,c
 21334  017FF4  6EDA               	movwf	fsr2h,c
 21335  017FF6  0EFF               	movlw	255
 21336  017FF8  22DA               	addwfc	fsr2h,f,c
 21337  017FFA  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 21338  018000  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 21339  018006  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 21340                           
 21341                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21342  01800C  52E5               	movf	postdec1,f,c
 21343  01800E  52E5               	movf	postdec1,f,c
 21344  018010  52E5               	movf	postdec1,f,c
 21345  018012  0012               	return		;funcret
 21346  018014                     __end_of_UART2_SetTxInterruptHandler:
 21347                           	opt callstack 0
 21348                           
 21349 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21350 ;; Defined at:
 21351 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21352 ;; Parameters:    Size  Location     Type
 21353 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21354 ;;		 -> UART2_Receive_ISR(1), 
 21355 ;; Auto vars:     Size  Location     Type
 21356 ;;		None
 21357 ;; Return value:  Size  Location     Type
 21358 ;;                  1  [STACK] void 
 21359 ;; Registers used:
 21360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21361 ;; Tracked objects:
 21362 ;;		On entry : 3F/39
 21363 ;;		On exit  : 0/0
 21364 ;;		Unchanged: 0/0
 21365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21370 ;;Total ram usage:        0 bytes
 21371 ;; Hardware stack levels used:    1
 21372 ;; Hardware stack levels required when called:    6
 21373 ;; This function calls:
 21374 ;;		Nothing
 21375 ;; This function is called by:
 21376 ;;		_UART2_Initialize
 21377 ;; This function uses a reentrant model
 21378 ;;
 21379                           
 21380                           	psect	text85
 21381  018014                     __ptext85:
 21382                           	opt callstack 0
 21383  018014                     _UART2_SetRxInterruptHandler:
 21384                           	opt callstack 22
 21385                           
 21386                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21387                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21388                           
 21389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21390                           ;incstack = 0
 21391  018014  50E1               	movf	fsr1l,w,c
 21392  018016  0FFD               	addlw	-3
 21393  018018  6ED9               	movwf	fsr2l,c
 21394  01801A  50E2               	movf	fsr1h,w,c
 21395  01801C  6EDA               	movwf	fsr2h,c
 21396  01801E  0EFF               	movlw	255
 21397  018020  22DA               	addwfc	fsr2h,f,c
 21398  018022  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 21399  018028  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 21400  01802E  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 21401                           
 21402                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21403  018034  52E5               	movf	postdec1,f,c
 21404  018036  52E5               	movf	postdec1,f,c
 21405  018038  52E5               	movf	postdec1,f,c
 21406  01803A  0012               	return		;funcret
 21407  01803C                     __end_of_UART2_SetRxInterruptHandler:
 21408                           	opt callstack 0
 21409                           
 21410 ;; *************** function _UART1_Initialize *****************
 21411 ;; Defined at:
 21412 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21413 ;; Parameters:    Size  Location     Type
 21414 ;;		None
 21415 ;; Auto vars:     Size  Location     Type
 21416 ;;		None
 21417 ;; Return value:  Size  Location     Type
 21418 ;;                  1  [STACK] void 
 21419 ;; Registers used:
 21420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21421 ;; Tracked objects:
 21422 ;;		On entry : 0/39
 21423 ;;		On exit  : 3F/39
 21424 ;;		Unchanged: 0/0
 21425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21430 ;;Total ram usage:        0 bytes
 21431 ;; Hardware stack levels used:    1
 21432 ;; Hardware stack levels required when called:    7
 21433 ;; This function calls:
 21434 ;;		_UART1_SetRxInterruptHandler
 21435 ;;		_UART1_SetTxInterruptHandler
 21436 ;; This function is called by:
 21437 ;;		_SYSTEM_Initialize
 21438 ;; This function uses a reentrant model
 21439 ;;
 21440                           
 21441                           	psect	text86
 21442  0176CA                     __ptext86:
 21443                           	opt callstack 0
 21444  0176CA                     _UART1_Initialize:
 21445                           	opt callstack 22
 21446                           
 21447                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21448                           
 21449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21450                           ;incstack = 0
 21451  0176CA  0139               	movlb	57	; () banked
 21452  0176CC  9793               	bcf	147,3,b	;volatile
 21453                           
 21454                           ; BSR set to: 57
 21455                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21456  0176CE  0E40               	movlw	low _UART1_Receive_ISR
 21457  0176D0  6EE6               	movwf	postinc1,c
 21458  0176D2  0E83               	movlw	high _UART1_Receive_ISR
 21459  0176D4  6EE6               	movwf	postinc1,c
 21460  0176D6  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21461  0176D8  6EE6               	movwf	postinc1,c
 21462  0176DA  EC32  F0C0         	call	_UART1_SetRxInterruptHandler	;wreg free
 21463                           
 21464                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21465  0176DE  0139               	movlb	57	; () banked
 21466  0176E0  9993               	bcf	147,4,b	;volatile
 21467                           
 21468                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21469  0176E2  0EF2               	movlw	low _UART1_Transmit_ISR
 21470  0176E4  6EE6               	movwf	postinc1,c
 21471  0176E6  0E7E               	movlw	high _UART1_Transmit_ISR
 21472  0176E8  6EE6               	movwf	postinc1,c
 21473  0176EA  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21474  0176EC  6EE6               	movwf	postinc1,c
 21475  0176EE  EC1E  F0C0         	call	_UART1_SetTxInterruptHandler	;wreg free
 21476                           
 21477                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21478  0176F2  013D               	movlb	61	; () banked
 21479  0176F4  6BEC               	clrf	236,b	;volatile
 21480                           
 21481                           ; BSR set to: 61
 21482                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21483  0176F6  6BED               	clrf	237,b	;volatile
 21484                           
 21485                           ; BSR set to: 61
 21486                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21487  0176F8  6BEE               	clrf	238,b	;volatile
 21488                           
 21489                           ; BSR set to: 61
 21490                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21491  0176FA  6BEF               	clrf	239,b	;volatile
 21492                           
 21493                           ; BSR set to: 61
 21494                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21495  0176FC  6BF0               	clrf	240,b	;volatile
 21496                           
 21497                           ; BSR set to: 61
 21498                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21499  0176FE  6BF1               	clrf	241,b	;volatile
 21500                           
 21501                           ; BSR set to: 61
 21502                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21503  017700  0EB0               	movlw	176
 21504  017702  6FF2               	movwf	242,b	;volatile
 21505                           
 21506                           ; BSR set to: 61
 21507                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21508  017704  0E80               	movlw	128
 21509  017706  6FF3               	movwf	243,b	;volatile
 21510                           
 21511                           ; BSR set to: 61
 21512                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21513  017708  6BF4               	clrf	244,b	;volatile
 21514                           
 21515                           ; BSR set to: 61
 21516                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21517  01770A  0E82               	movlw	130
 21518  01770C  6FF5               	movwf	245,b	;volatile
 21519                           
 21520                           ; BSR set to: 61
 21521                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21522  01770E  0E06               	movlw	6
 21523  017710  6FF6               	movwf	246,b	;volatile
 21524                           
 21525                           ; BSR set to: 61
 21526                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21527  017712  6BF7               	clrf	247,b	;volatile
 21528                           
 21529                           ; BSR set to: 61
 21530                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21531  017714  6BF8               	clrf	248,b	;volatile
 21532                           
 21533                           ; BSR set to: 61
 21534                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21535  017716  6BF9               	clrf	249,b	;volatile
 21536                           
 21537                           ; BSR set to: 61
 21538                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21539  017718  6BFA               	clrf	250,b	;volatile
 21540                           
 21541                           ; BSR set to: 61
 21542                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21543  01771A  6A34               	clrf	_uart1TxHead^0,c	;volatile
 21544                           
 21545                           ; BSR set to: 61
 21546                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21547  01771C  6A33               	clrf	_uart1TxTail^0,c	;volatile
 21548                           
 21549                           ; BSR set to: 61
 21550                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21551  01771E  0E40               	movlw	64
 21552  017720  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21553                           
 21554                           ; BSR set to: 61
 21555                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21556  017722  6A31               	clrf	_uart1RxHead^0,c	;volatile
 21557                           
 21558                           ; BSR set to: 61
 21559                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21560  017724  6A30               	clrf	_uart1RxTail^0,c	;volatile
 21561                           
 21562                           ; BSR set to: 61
 21563                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21564  017726  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 21565                           
 21566                           ; BSR set to: 61
 21567                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21568  017728  0139               	movlb	57	; () banked
 21569  01772A  8793               	bsf	147,3,b	;volatile
 21570                           
 21571                           ; BSR set to: 57
 21572                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21573  01772C  0012               	return		;funcret
 21574  01772E                     __end_of_UART1_Initialize:
 21575                           	opt callstack 0
 21576                           
 21577 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21578 ;; Defined at:
 21579 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21580 ;; Parameters:    Size  Location     Type
 21581 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21582 ;;		 -> UART1_Transmit_ISR(1), 
 21583 ;; Auto vars:     Size  Location     Type
 21584 ;;		None
 21585 ;; Return value:  Size  Location     Type
 21586 ;;                  1  [STACK] void 
 21587 ;; Registers used:
 21588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21589 ;; Tracked objects:
 21590 ;;		On entry : 3F/39
 21591 ;;		On exit  : 0/0
 21592 ;;		Unchanged: 0/0
 21593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21598 ;;Total ram usage:        0 bytes
 21599 ;; Hardware stack levels used:    1
 21600 ;; Hardware stack levels required when called:    6
 21601 ;; This function calls:
 21602 ;;		Nothing
 21603 ;; This function is called by:
 21604 ;;		_UART1_Initialize
 21605 ;; This function uses a reentrant model
 21606 ;;
 21607                           
 21608                           	psect	text87
 21609  01803C                     __ptext87:
 21610                           	opt callstack 0
 21611  01803C                     _UART1_SetTxInterruptHandler:
 21612                           	opt callstack 22
 21613                           
 21614                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21615                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21616                           
 21617                           ; BSR set to: 57
 21618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21619                           ;incstack = 0
 21620  01803C  50E1               	movf	fsr1l,w,c
 21621  01803E  0FFD               	addlw	-3
 21622  018040  6ED9               	movwf	fsr2l,c
 21623  018042  50E2               	movf	fsr1h,w,c
 21624  018044  6EDA               	movwf	fsr2h,c
 21625  018046  0EFF               	movlw	255
 21626  018048  22DA               	addwfc	fsr2h,f,c
 21627  01804A  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 21628  018050  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 21629  018056  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 21630                           
 21631                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21632  01805C  52E5               	movf	postdec1,f,c
 21633  01805E  52E5               	movf	postdec1,f,c
 21634  018060  52E5               	movf	postdec1,f,c
 21635  018062  0012               	return		;funcret
 21636  018064                     __end_of_UART1_SetTxInterruptHandler:
 21637                           	opt callstack 0
 21638                           
 21639 ;; *************** function _UART1_SetRxInterruptHandler *****************
 21640 ;; Defined at:
 21641 ;;		line 241 in file "mcc_generated_files/uart1.c"
 21642 ;; Parameters:    Size  Location     Type
 21643 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21644 ;;		 -> UART1_Receive_ISR(1), 
 21645 ;; Auto vars:     Size  Location     Type
 21646 ;;		None
 21647 ;; Return value:  Size  Location     Type
 21648 ;;                  1  [STACK] void 
 21649 ;; Registers used:
 21650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21651 ;; Tracked objects:
 21652 ;;		On entry : 3F/39
 21653 ;;		On exit  : 0/0
 21654 ;;		Unchanged: 0/0
 21655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21660 ;;Total ram usage:        0 bytes
 21661 ;; Hardware stack levels used:    1
 21662 ;; Hardware stack levels required when called:    6
 21663 ;; This function calls:
 21664 ;;		Nothing
 21665 ;; This function is called by:
 21666 ;;		_UART1_Initialize
 21667 ;; This function uses a reentrant model
 21668 ;;
 21669                           
 21670                           	psect	text88
 21671  018064                     __ptext88:
 21672                           	opt callstack 0
 21673  018064                     _UART1_SetRxInterruptHandler:
 21674                           	opt callstack 22
 21675                           
 21676                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 21677                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21678                           
 21679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21680                           ;incstack = 0
 21681  018064  50E1               	movf	fsr1l,w,c
 21682  018066  0FFD               	addlw	-3
 21683  018068  6ED9               	movwf	fsr2l,c
 21684  01806A  50E2               	movf	fsr1h,w,c
 21685  01806C  6EDA               	movwf	fsr2h,c
 21686  01806E  0EFF               	movlw	255
 21687  018070  22DA               	addwfc	fsr2h,f,c
 21688  018072  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 21689  018078  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 21690  01807E  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 21691                           
 21692                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21693  018084  52E5               	movf	postdec1,f,c
 21694  018086  52E5               	movf	postdec1,f,c
 21695  018088  52E5               	movf	postdec1,f,c
 21696  01808A  0012               	return		;funcret
 21697  01808C                     __end_of_UART1_SetRxInterruptHandler:
 21698                           	opt callstack 0
 21699                           
 21700 ;; *************** function _TMR6_Initialize *****************
 21701 ;; Defined at:
 21702 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 21703 ;; Parameters:    Size  Location     Type
 21704 ;;		None
 21705 ;; Auto vars:     Size  Location     Type
 21706 ;;		None
 21707 ;; Return value:  Size  Location     Type
 21708 ;;                  1  [STACK] void 
 21709 ;; Registers used:
 21710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21711 ;; Tracked objects:
 21712 ;;		On entry : 3F/39
 21713 ;;		On exit  : 0/0
 21714 ;;		Unchanged: 0/0
 21715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21720 ;;Total ram usage:        0 bytes
 21721 ;; Hardware stack levels used:    1
 21722 ;; Hardware stack levels required when called:    7
 21723 ;; This function calls:
 21724 ;;		_TMR6_SetInterruptHandler
 21725 ;; This function is called by:
 21726 ;;		_SYSTEM_Initialize
 21727 ;; This function uses a reentrant model
 21728 ;;
 21729                           
 21730                           	psect	text89
 21731  017F4A                     __ptext89:
 21732                           	opt callstack 0
 21733  017F4A                     _TMR6_Initialize:
 21734                           	opt callstack 22
 21735                           
 21736                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 21737                           
 21738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21739                           ;incstack = 0
 21740  017F4A  0E01               	movlw	1
 21741  017F4C  6E96               	movwf	150,c	;volatile
 21742                           
 21743                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 21744  017F4E  6A95               	clrf	149,c	;volatile
 21745                           
 21746                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 21747  017F50  6A97               	clrf	151,c	;volatile
 21748                           
 21749                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 21750  017F52  0E7C               	movlw	124
 21751  017F54  6E93               	movwf	147,c	;volatile
 21752                           
 21753                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 21754  017F56  6A92               	clrf	146,c	;volatile
 21755                           
 21756                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 21757  017F58  0139               	movlb	57	; () banked
 21758  017F5A  91A9               	bcf	169,0,b	;volatile
 21759                           
 21760                           ; BSR set to: 57
 21761                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 21762  017F5C  8199               	bsf	153,0,b	;volatile
 21763                           
 21764                           ; BSR set to: 57
 21765                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 21766  017F5E  0E64               	movlw	low _TMR6_DefaultInterruptHandler
 21767  017F60  6EE6               	movwf	postinc1,c
 21768  017F62  0E7B               	movlw	high _TMR6_DefaultInterruptHandler
 21769  017F64  6EE6               	movwf	postinc1,c
 21770  017F66  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 21771  017F68  6EE6               	movwf	postinc1,c
 21772  017F6A  EC46  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 21773                           
 21774                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 21775  017F6E  0EE0               	movlw	224
 21776  017F70  6E94               	movwf	148,c	;volatile
 21777                           
 21778                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21779  017F72  0012               	return		;funcret
 21780  017F74                     __end_of_TMR6_Initialize:
 21781                           	opt callstack 0
 21782                           
 21783 ;; *************** function _TMR6_SetInterruptHandler *****************
 21784 ;; Defined at:
 21785 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 21786 ;; Parameters:    Size  Location     Type
 21787 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21788 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 21789 ;; Auto vars:     Size  Location     Type
 21790 ;;		None
 21791 ;; Return value:  Size  Location     Type
 21792 ;;                  1  [STACK] void 
 21793 ;; Registers used:
 21794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21795 ;; Tracked objects:
 21796 ;;		On entry : 3F/39
 21797 ;;		On exit  : 0/0
 21798 ;;		Unchanged: 0/0
 21799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21804 ;;Total ram usage:        0 bytes
 21805 ;; Hardware stack levels used:    1
 21806 ;; Hardware stack levels required when called:    6
 21807 ;; This function calls:
 21808 ;;		Nothing
 21809 ;; This function is called by:
 21810 ;;		_TMR6_Initialize
 21811 ;; This function uses a reentrant model
 21812 ;;
 21813                           
 21814                           	psect	text90
 21815  01808C                     __ptext90:
 21816                           	opt callstack 0
 21817  01808C                     _TMR6_SetInterruptHandler:
 21818                           	opt callstack 22
 21819                           
 21820                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 21821                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21822                           
 21823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21824                           ;incstack = 0
 21825  01808C  50E1               	movf	fsr1l,w,c
 21826  01808E  0FFD               	addlw	-3
 21827  018090  6ED9               	movwf	fsr2l,c
 21828  018092  50E2               	movf	fsr1h,w,c
 21829  018094  6EDA               	movwf	fsr2h,c
 21830  018096  0EFF               	movlw	255
 21831  018098  22DA               	addwfc	fsr2h,f,c
 21832  01809A  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 21833  0180A0  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 21834  0180A6  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 21835                           
 21836                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21837  0180AC  52E5               	movf	postdec1,f,c
 21838  0180AE  52E5               	movf	postdec1,f,c
 21839  0180B0  52E5               	movf	postdec1,f,c
 21840  0180B2  0012               	return		;funcret
 21841  0180B4                     __end_of_TMR6_SetInterruptHandler:
 21842                           	opt callstack 0
 21843                           
 21844 ;; *************** function _TMR5_Initialize *****************
 21845 ;; Defined at:
 21846 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 21847 ;; Parameters:    Size  Location     Type
 21848 ;;		None
 21849 ;; Auto vars:     Size  Location     Type
 21850 ;;		None
 21851 ;; Return value:  Size  Location     Type
 21852 ;;                  1  [STACK] void 
 21853 ;; Registers used:
 21854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21855 ;; Tracked objects:
 21856 ;;		On entry : 0/39
 21857 ;;		On exit  : 0/0
 21858 ;;		Unchanged: 0/0
 21859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21864 ;;Total ram usage:        0 bytes
 21865 ;; Hardware stack levels used:    1
 21866 ;; Hardware stack levels required when called:    7
 21867 ;; This function calls:
 21868 ;;		_TMR5_SetInterruptHandler
 21869 ;; This function is called by:
 21870 ;;		_SYSTEM_Initialize
 21871 ;; This function uses a reentrant model
 21872 ;;
 21873                           
 21874                           	psect	text91
 21875  017B1E                     __ptext91:
 21876                           	opt callstack 0
 21877  017B1E                     _TMR5_Initialize:
 21878                           	opt callstack 22
 21879                           
 21880                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 21881                           
 21882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21883                           ;incstack = 0
 21884  017B1E  6A9B               	clrf	155,c	;volatile
 21885                           
 21886                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 21887  017B20  6A9C               	clrf	156,c	;volatile
 21888                           
 21889                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 21890  017B22  0E01               	movlw	1
 21891  017B24  6E9D               	movwf	157,c	;volatile
 21892                           
 21893                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 21894  017B26  0E63               	movlw	99
 21895  017B28  6E99               	movwf	153,c	;volatile
 21896                           
 21897                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 21898  017B2A  0EC0               	movlw	192
 21899  017B2C  6E98               	movwf	152,c	;volatile
 21900                           
 21901                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 21902  017B2E  5098               	movf	152,w,c	;volatile
 21903  017B30  006F FE64  F035    	movff	16281,btemp	;volatile
 21904  017B36  6A36               	clrf	(btemp+1)^0,c
 21905  017B38  0060  F0D4  F036   	movff	btemp,btemp+1
 21906  017B3E  6A35               	clrf	btemp^0,c
 21907  017B40  1035               	iorwf	btemp^0,w,c
 21908  017B42  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 21909  017B44  5036               	movf	(btemp+1)^0,w,c
 21910  017B46  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 21911                           
 21912                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 21913  017B48  0139               	movlb	57	; () banked
 21914  017B4A  9DA8               	bcf	168,6,b	;volatile
 21915                           
 21916                           ; BSR set to: 57
 21917                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 21918  017B4C  8D98               	bsf	152,6,b	;volatile
 21919                           
 21920                           ; BSR set to: 57
 21921                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 21922  017B4E  0ECE               	movlw	low _TMR5_DefaultInterruptHandler
 21923  017B50  6EE6               	movwf	postinc1,c
 21924  017B52  0E83               	movlw	high _TMR5_DefaultInterruptHandler
 21925  017B54  6EE6               	movwf	postinc1,c
 21926  017B56  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 21927  017B58  6EE6               	movwf	postinc1,c
 21928  017B5A  EC5A  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 21929                           
 21930                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 21931  017B5E  0E31               	movlw	49
 21932  017B60  6E9A               	movwf	154,c	;volatile
 21933                           
 21934                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21935  017B62  0012               	return		;funcret
 21936  017B64                     __end_of_TMR5_Initialize:
 21937                           	opt callstack 0
 21938                           
 21939 ;; *************** function _TMR5_SetInterruptHandler *****************
 21940 ;; Defined at:
 21941 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 21942 ;; Parameters:    Size  Location     Type
 21943 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21944 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21945 ;; Auto vars:     Size  Location     Type
 21946 ;;		None
 21947 ;; Return value:  Size  Location     Type
 21948 ;;                  1  [STACK] void 
 21949 ;; Registers used:
 21950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21951 ;; Tracked objects:
 21952 ;;		On entry : 3F/39
 21953 ;;		On exit  : 0/0
 21954 ;;		Unchanged: 0/0
 21955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21960 ;;Total ram usage:        0 bytes
 21961 ;; Hardware stack levels used:    1
 21962 ;; Hardware stack levels required when called:    6
 21963 ;; This function calls:
 21964 ;;		Nothing
 21965 ;; This function is called by:
 21966 ;;		_TMR5_Initialize
 21967 ;; This function uses a reentrant model
 21968 ;;
 21969                           
 21970                           	psect	text92
 21971  0180B4                     __ptext92:
 21972                           	opt callstack 0
 21973  0180B4                     _TMR5_SetInterruptHandler:
 21974                           	opt callstack 22
 21975                           
 21976                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 21977                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21978                           
 21979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21980                           ;incstack = 0
 21981  0180B4  50E1               	movf	fsr1l,w,c
 21982  0180B6  0FFD               	addlw	-3
 21983  0180B8  6ED9               	movwf	fsr2l,c
 21984  0180BA  50E2               	movf	fsr1h,w,c
 21985  0180BC  6EDA               	movwf	fsr2h,c
 21986  0180BE  0EFF               	movlw	255
 21987  0180C0  22DA               	addwfc	fsr2h,f,c
 21988  0180C2  006F FF78  F098    	movff	postinc2,_TMR5_InterruptHandler
 21989  0180C8  006F FF78  F099    	movff	postinc2,_TMR5_InterruptHandler+1
 21990  0180CE  006F FF74  F09A    	movff	postdec2,_TMR5_InterruptHandler+2
 21991                           
 21992                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21993  0180D4  52E5               	movf	postdec1,f,c
 21994  0180D6  52E5               	movf	postdec1,f,c
 21995  0180D8  52E5               	movf	postdec1,f,c
 21996  0180DA  0012               	return		;funcret
 21997  0180DC                     __end_of_TMR5_SetInterruptHandler:
 21998                           	opt callstack 0
 21999                           
 22000 ;; *************** function _TMR2_Initialize *****************
 22001 ;; Defined at:
 22002 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22003 ;; Parameters:    Size  Location     Type
 22004 ;;		None
 22005 ;; Auto vars:     Size  Location     Type
 22006 ;;		None
 22007 ;; Return value:  Size  Location     Type
 22008 ;;                  1  [STACK] void 
 22009 ;; Registers used:
 22010 ;;		wreg, status,2
 22011 ;; Tracked objects:
 22012 ;;		On entry : 3F/3F
 22013 ;;		On exit  : 3F/39
 22014 ;;		Unchanged: 0/0
 22015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22020 ;;Total ram usage:        0 bytes
 22021 ;; Hardware stack levels used:    1
 22022 ;; Hardware stack levels required when called:    6
 22023 ;; This function calls:
 22024 ;;		Nothing
 22025 ;; This function is called by:
 22026 ;;		_SYSTEM_Initialize
 22027 ;; This function uses a reentrant model
 22028 ;;
 22029                           
 22030                           	psect	text93
 22031  01841A                     __ptext93:
 22032                           	opt callstack 0
 22033  01841A                     _TMR2_Initialize:
 22034                           	opt callstack 23
 22035                           
 22036                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22037                           
 22038                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22039                           ;incstack = 0
 22040  01841A  0E01               	movlw	1
 22041  01841C  6EAE               	movwf	174,c	;volatile
 22042                           
 22043                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22044  01841E  6AAD               	clrf	173,c	;volatile
 22045                           
 22046                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22047  018420  6AAF               	clrf	175,c	;volatile
 22048                           
 22049                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22050  018422  0E63               	movlw	99
 22051  018424  6EAB               	movwf	171,c	;volatile
 22052                           
 22053                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22054  018426  6AAA               	clrf	170,c	;volatile
 22055                           
 22056                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22057  018428  0139               	movlb	57	; () banked
 22058  01842A  95A4               	bcf	164,2,b	;volatile
 22059                           
 22060                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22061  01842C  0EC0               	movlw	192
 22062  01842E  6EAC               	movwf	172,c	;volatile
 22063                           
 22064                           ; BSR set to: 57
 22065                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22066  018430  0012               	return		;funcret
 22067  018432                     __end_of_TMR2_Initialize:
 22068                           	opt callstack 0
 22069                           
 22070 ;; *************** function _SPI1_Initialize *****************
 22071 ;; Defined at:
 22072 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22073 ;; Parameters:    Size  Location     Type
 22074 ;;		None
 22075 ;; Auto vars:     Size  Location     Type
 22076 ;;		None
 22077 ;; Return value:  Size  Location     Type
 22078 ;;                  1  [STACK] void 
 22079 ;; Registers used:
 22080 ;;		wreg, status,2
 22081 ;; Tracked objects:
 22082 ;;		On entry : 3F/39
 22083 ;;		On exit  : 3F/3D
 22084 ;;		Unchanged: 0/0
 22085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22090 ;;Total ram usage:        0 bytes
 22091 ;; Hardware stack levels used:    1
 22092 ;; Hardware stack levels required when called:    6
 22093 ;; This function calls:
 22094 ;;		Nothing
 22095 ;; This function is called by:
 22096 ;;		_SYSTEM_Initialize
 22097 ;; This function uses a reentrant model
 22098 ;;
 22099                           
 22100                           	psect	text94
 22101  018432                     __ptext94:
 22102                           	opt callstack 0
 22103  018432                     _SPI1_Initialize:
 22104                           	opt callstack 23
 22105                           
 22106                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22107                           
 22108                           ; BSR set to: 57
 22109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22110                           ;incstack = 0
 22111  018432  0E40               	movlw	64
 22112  018434  013D               	movlb	61	; () banked
 22113  018436  6F15               	movwf	21,b	;volatile
 22114                           
 22115                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22116  018438  0E03               	movlw	3
 22117  01843A  6F16               	movwf	22,b	;volatile
 22118                           
 22119                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22120  01843C  0E4F               	movlw	79
 22121  01843E  6F19               	movwf	25,b	;volatile
 22122                           
 22123                           ; BSR set to: 61
 22124                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22125  018440  6B1C               	clrf	28,b	;volatile
 22126                           
 22127                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22128  018442  0E83               	movlw	131
 22129  018444  6F14               	movwf	20,b	;volatile
 22130                           
 22131                           ; BSR set to: 61
 22132                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22133  018446  0012               	return		;funcret
 22134  018448                     __end_of_SPI1_Initialize:
 22135                           	opt callstack 0
 22136                           
 22137 ;; *************** function _PWM8_Initialize *****************
 22138 ;; Defined at:
 22139 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22140 ;; Parameters:    Size  Location     Type
 22141 ;;		None
 22142 ;; Auto vars:     Size  Location     Type
 22143 ;;		None
 22144 ;; Return value:  Size  Location     Type
 22145 ;;                  1  [STACK] void 
 22146 ;; Registers used:
 22147 ;;		wreg, status,2
 22148 ;; Tracked objects:
 22149 ;;		On entry : 0/3E
 22150 ;;		On exit  : 3F/3F
 22151 ;;		Unchanged: 0/0
 22152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22157 ;;Total ram usage:        0 bytes
 22158 ;; Hardware stack levels used:    1
 22159 ;; Hardware stack levels required when called:    6
 22160 ;; This function calls:
 22161 ;;		Nothing
 22162 ;; This function is called by:
 22163 ;;		_SYSTEM_Initialize
 22164 ;; This function uses a reentrant model
 22165 ;;
 22166                           
 22167                           	psect	text95
 22168  018448                     __ptext95:
 22169                           	opt callstack 0
 22170  018448                     _PWM8_Initialize:
 22171                           	opt callstack 23
 22172                           
 22173                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22174                           
 22175                           ; BSR set to: 61
 22176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22177                           ;incstack = 0
 22178  018448  0E80               	movlw	128
 22179  01844A  6E62               	movwf	98,c	;volatile
 22180                           
 22181                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22182  01844C  6A61               	clrf	97,c	;volatile
 22183                           
 22184                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22185  01844E  0E40               	movlw	64
 22186  018450  6E60               	movwf	96,c	;volatile
 22187                           
 22188                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22189  018452  013F               	movlb	63	; () banked
 22190  018454  515F               	movf	95,w,b	;volatile
 22191  018456  0B3F               	andlw	-193
 22192  018458  0940               	iorlw	64
 22193  01845A  6F5F               	movwf	95,b	;volatile
 22194                           
 22195                           ; BSR set to: 63
 22196                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22197  01845C  0012               	return		;funcret
 22198  01845E                     __end_of_PWM8_Initialize:
 22199                           	opt callstack 0
 22200                           
 22201 ;; *************** function _PMD_Initialize *****************
 22202 ;; Defined at:
 22203 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22204 ;; Parameters:    Size  Location     Type
 22205 ;;		None
 22206 ;; Auto vars:     Size  Location     Type
 22207 ;;		None
 22208 ;; Return value:  Size  Location     Type
 22209 ;;                  1  [STACK] void 
 22210 ;; Registers used:
 22211 ;;		None
 22212 ;; Tracked objects:
 22213 ;;		On entry : 3F/39
 22214 ;;		On exit  : 3F/39
 22215 ;;		Unchanged: 0/0
 22216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22221 ;;Total ram usage:        0 bytes
 22222 ;; Hardware stack levels used:    1
 22223 ;; Hardware stack levels required when called:    6
 22224 ;; This function calls:
 22225 ;;		Nothing
 22226 ;; This function is called by:
 22227 ;;		_SYSTEM_Initialize
 22228 ;; This function uses a reentrant model
 22229 ;;
 22230                           
 22231                           	psect	text96
 22232  018474                     __ptext96:
 22233                           	opt callstack 0
 22234  018474                     _PMD_Initialize:
 22235                           	opt callstack 23
 22236                           
 22237                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22238                           
 22239                           ; BSR set to: 63
 22240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22241                           ;incstack = 0
 22242  018474  0139               	movlb	57	; () banked
 22243  018476  6BC0               	clrf	192,b	;volatile
 22244                           
 22245                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22246  018478  6BC1               	clrf	193,b	;volatile
 22247                           
 22248                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22249  01847A  6BC2               	clrf	194,b	;volatile
 22250                           
 22251                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22252  01847C  6BC3               	clrf	195,b	;volatile
 22253                           
 22254                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22255  01847E  6BC4               	clrf	196,b	;volatile
 22256                           
 22257                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22258  018480  6BC5               	clrf	197,b	;volatile
 22259                           
 22260                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22261  018482  6BC6               	clrf	198,b	;volatile
 22262                           
 22263                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22264  018484  6BC7               	clrf	199,b	;volatile
 22265                           
 22266                           ; BSR set to: 57
 22267                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22268  018486  0012               	return		;funcret
 22269  018488                     __end_of_PMD_Initialize:
 22270                           	opt callstack 0
 22271                           
 22272 ;; *************** function _PIN_MANAGER_Initialize *****************
 22273 ;; Defined at:
 22274 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22275 ;; Parameters:    Size  Location     Type
 22276 ;;		None
 22277 ;; Auto vars:     Size  Location     Type
 22278 ;;		None
 22279 ;; Return value:  Size  Location     Type
 22280 ;;                  1  [STACK] void 
 22281 ;; Registers used:
 22282 ;;		wreg, status,2
 22283 ;; Tracked objects:
 22284 ;;		On entry : 3F/39
 22285 ;;		On exit  : 3F/3A
 22286 ;;		Unchanged: 0/0
 22287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22292 ;;Total ram usage:        0 bytes
 22293 ;; Hardware stack levels used:    1
 22294 ;; Hardware stack levels required when called:    6
 22295 ;; This function calls:
 22296 ;;		Nothing
 22297 ;; This function is called by:
 22298 ;;		_SYSTEM_Initialize
 22299 ;; This function uses a reentrant model
 22300 ;;
 22301                           
 22302                           	psect	text97
 22303  0172A4                     __ptext97:
 22304                           	opt callstack 0
 22305  0172A4                     _PIN_MANAGER_Initialize:
 22306                           	opt callstack 23
 22307                           
 22308                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22309                           
 22310                           ; BSR set to: 57
 22311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22312                           ;incstack = 0
 22313  0172A4  0E07               	movlw	7
 22314  0172A6  6EBE               	movwf	190,c	;volatile
 22315                           
 22316                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 22317  0172A8  6ABD               	clrf	189,c	;volatile
 22318                           
 22319                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22320  0172AA  6ABA               	clrf	186,c	;volatile
 22321                           
 22322                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22323  0172AC  6ABF               	clrf	191,c	;volatile
 22324                           
 22325                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22326  0172AE  6ABB               	clrf	187,c	;volatile
 22327                           
 22328                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22329  0172B0  0E07               	movlw	7
 22330  0172B2  6EBC               	movwf	188,c	;volatile
 22331                           
 22332                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22333  0172B4  6AC6               	clrf	198,c	;volatile
 22334                           
 22335                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22336  0172B6  0E0F               	movlw	15
 22337  0172B8  6EC7               	movwf	199,c	;volatile
 22338                           
 22339                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22340  0172BA  68C2               	setf	194,c	;volatile
 22341                           
 22342                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22343  0172BC  0EBF               	movlw	191
 22344  0172BE  6EC3               	movwf	195,c	;volatile
 22345                           
 22346                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22347  0172C0  0E90               	movlw	144
 22348  0172C2  6EC4               	movwf	196,c	;volatile
 22349                           
 22350                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22351  0172C4  0E0C               	movlw	12
 22352  0172C6  6EC5               	movwf	197,c	;volatile
 22353                           
 22354                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22355  0172C8  013A               	movlb	58	; () banked
 22356  0172CA  6B70               	clrf	112,b	;volatile
 22357                           
 22358                           ; BSR set to: 58
 22359                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22360  0172CC  6B60               	clrf	96,b	;volatile
 22361                           
 22362                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22363  0172CE  0E3C               	movlw	60
 22364  0172D0  6F50               	movwf	80,b	;volatile
 22365                           
 22366                           ; BSR set to: 58
 22367                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22368  0172D2  6B80               	clrf	128,b	;volatile
 22369                           
 22370                           ; BSR set to: 58
 22371                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22372  0172D4  6B90               	clrf	144,b	;volatile
 22373                           
 22374                           ; BSR set to: 58
 22375                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22376  0172D6  6940               	setf	64,b	;volatile
 22377                           
 22378                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22379  0172D8  0E0C               	movlw	12
 22380  0172DA  6F71               	movwf	113,b	;volatile
 22381                           
 22382                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22383  0172DC  0E0F               	movlw	15
 22384  0172DE  6F91               	movwf	145,b	;volatile
 22385                           
 22386                           ; BSR set to: 58
 22387                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22388  0172E0  6B81               	clrf	129,b	;volatile
 22389                           
 22390                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 22391  0172E2  0E87               	movlw	135
 22392  0172E4  6F51               	movwf	81,b	;volatile
 22393                           
 22394                           ; BSR set to: 58
 22395                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22396  0172E6  6B41               	clrf	65,b	;volatile
 22397                           
 22398                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22399  0172E8  0E97               	movlw	151
 22400  0172EA  6F61               	movwf	97,b	;volatile
 22401                           
 22402                           ; BSR set to: 58
 22403                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22404  0172EC  6B82               	clrf	130,b	;volatile
 22405                           
 22406                           ; BSR set to: 58
 22407                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22408  0172EE  6B92               	clrf	146,b	;volatile
 22409                           
 22410                           ; BSR set to: 58
 22411                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22412  0172F0  6B42               	clrf	66,b	;volatile
 22413                           
 22414                           ; BSR set to: 58
 22415                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22416  0172F2  6B52               	clrf	82,b	;volatile
 22417                           
 22418                           ; BSR set to: 58
 22419                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22420  0172F4  6B62               	clrf	98,b	;volatile
 22421                           
 22422                           ; BSR set to: 58
 22423                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22424  0172F6  6B72               	clrf	114,b	;volatile
 22425                           
 22426                           ; BSR set to: 58
 22427                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22428  0172F8  6943               	setf	67,b	;volatile
 22429                           
 22430                           ; BSR set to: 58
 22431                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22432  0172FA  6953               	setf	83,b	;volatile
 22433                           
 22434                           ; BSR set to: 58
 22435                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22436  0172FC  6963               	setf	99,b	;volatile
 22437                           
 22438                           ; BSR set to: 58
 22439                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22440  0172FE  6973               	setf	115,b	;volatile
 22441                           
 22442                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22443  017300  0E07               	movlw	7
 22444  017302  6F83               	movwf	131,b	;volatile
 22445                           
 22446                           ; BSR set to: 58
 22447                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22448  017304  6993               	setf	147,b	;volatile
 22449                           
 22450                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22451  017306  0E0F               	movlw	15
 22452  017308  6FE8               	movwf	232,b	;volatile
 22453                           
 22454                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22455  01730A  0E13               	movlw	19
 22456  01730C  6FDE               	movwf	222,b	;volatile
 22457                           
 22458                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22459  01730E  0E16               	movlw	22
 22460  017310  6F0E               	movwf	14,b	;volatile
 22461                           
 22462                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22463  017312  0E1E               	movlw	30
 22464  017314  6F13               	movwf	19,b	;volatile
 22465                           
 22466                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22467  017316  0E08               	movlw	8
 22468  017318  6FC0               	movwf	192,b	;volatile
 22469                           
 22470                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22471  01731A  0E10               	movlw	16
 22472  01731C  6F19               	movwf	25,b	;volatile
 22473                           
 22474                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22475  01731E  0E09               	movlw	9
 22476  017320  6FC1               	movwf	193,b	;volatile
 22477                           
 22478                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22479  017322  0E1F               	movlw	31
 22480  017324  6F15               	movwf	21,b	;volatile
 22481                           
 22482                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22483  017326  0E13               	movlw	19
 22484  017328  6F16               	movwf	22,b	;volatile
 22485                           
 22486                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22487  01732A  0E17               	movlw	23
 22488  01732C  6FE5               	movwf	229,b	;volatile
 22489                           
 22490                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22491  01732E  0E14               	movlw	20
 22492  017330  6FDF               	movwf	223,b	;volatile
 22493                           
 22494                           ; BSR set to: 58
 22495                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22496  017332  0012               	return		;funcret
 22497  017334                     __end_of_PIN_MANAGER_Initialize:
 22498                           	opt callstack 0
 22499                           
 22500 ;; *************** function _OSCILLATOR_Initialize *****************
 22501 ;; Defined at:
 22502 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22503 ;; Parameters:    Size  Location     Type
 22504 ;;		None
 22505 ;; Auto vars:     Size  Location     Type
 22506 ;;		None
 22507 ;; Return value:  Size  Location     Type
 22508 ;;                  1  [STACK] void 
 22509 ;; Registers used:
 22510 ;;		wreg, status,2
 22511 ;; Tracked objects:
 22512 ;;		On entry : 3F/3A
 22513 ;;		On exit  : 3F/39
 22514 ;;		Unchanged: 0/0
 22515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22520 ;;Total ram usage:        0 bytes
 22521 ;; Hardware stack levels used:    1
 22522 ;; Hardware stack levels required when called:    6
 22523 ;; This function calls:
 22524 ;;		Nothing
 22525 ;; This function is called by:
 22526 ;;		_SYSTEM_Initialize
 22527 ;; This function uses a reentrant model
 22528 ;;
 22529                           
 22530                           	psect	text98
 22531  01845E                     __ptext98:
 22532                           	opt callstack 0
 22533  01845E                     _OSCILLATOR_Initialize:
 22534                           	opt callstack 23
 22535                           
 22536                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22537                           
 22538                           ; BSR set to: 58
 22539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22540                           ;incstack = 0
 22541  01845E  0E20               	movlw	32
 22542  018460  0139               	movlb	57	; () banked
 22543  018462  6FD9               	movwf	217,b	;volatile
 22544                           
 22545                           ; BSR set to: 57
 22546                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22547  018464  6BDB               	clrf	219,b	;volatile
 22548                           
 22549                           ; BSR set to: 57
 22550                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22551  018466  6BDD               	clrf	221,b	;volatile
 22552                           
 22553                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22554  018468  0E02               	movlw	2
 22555  01846A  6FDF               	movwf	223,b	;volatile
 22556                           
 22557                           ; BSR set to: 57
 22558                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22559  01846C  6BDE               	clrf	222,b	;volatile
 22560  01846E                     l171:
 22561                           
 22562                           ; BSR set to: 57
 22563                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22564  01846E  B1DC               	btfsc	220,0,b	;volatile
 22565  018470  0012               	return	
 22566  018472  D7FD               	goto	l171
 22567  018474                     __end_of_OSCILLATOR_Initialize:
 22568                           	opt callstack 0
 22569                           
 22570 ;; *************** function _INTERRUPT_Initialize *****************
 22571 ;; Defined at:
 22572 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22573 ;; Parameters:    Size  Location     Type
 22574 ;;		None
 22575 ;; Auto vars:     Size  Location     Type
 22576 ;;  state           1  [STACK] _Bool 
 22577 ;; Return value:  Size  Location     Type
 22578 ;;                  1  [STACK] void 
 22579 ;; Registers used:
 22580 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22581 ;; Tracked objects:
 22582 ;;		On entry : 0/0
 22583 ;;		On exit  : 3F/39
 22584 ;;		Unchanged: 0/0
 22585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22590 ;;Total ram usage:        0 bytes
 22591 ;; Hardware stack levels used:    1
 22592 ;; Hardware stack levels required when called:    6
 22593 ;; This function calls:
 22594 ;;		Nothing
 22595 ;; This function is called by:
 22596 ;;		_SYSTEM_Initialize
 22597 ;; This function uses a reentrant model
 22598 ;;
 22599                           
 22600                           	psect	text99
 22601  017600                     __ptext99:
 22602                           	opt callstack 0
 22603  017600                     _INTERRUPT_Initialize:
 22604                           	opt callstack 0
 22605                           
 22606                           ; BSR set to: 57
 22607                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22608  017600  52E6               	movf	postinc1,f,c
 22609                           
 22610                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22611                           
 22612                           ;incstack = 0
 22613  017602  8AD2               	bsf	210,5,c	;volatile
 22614                           
 22615                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22616  017604  AED2               	btfss	16338,7,c	;volatile
 22617  017606  D003               	goto	u7670
 22618  017608  6A40               	clrf	(btemp+11)^0,c
 22619  01760A  2A40               	incf	(btemp+11)^0,f,c
 22620  01760C  D001               	goto	u7688
 22621  01760E                     u7670:
 22622  01760E  6A40               	clrf	(btemp+11)^0,c
 22623  017610                     u7688:
 22624                           
 22625                           ;stkvar	_state @ sp[(-1)+0]
 22626  017610  0EFF               	movlw	-1
 22627  017612  0060  F103  FFE3   	movff	btemp+11,plusw1
 22628                           
 22629                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22630  017618  9ED2               	bcf	16338,7,c	;volatile
 22631                           
 22632                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22633  01761A  0E55               	movlw	85
 22634  01761C  6ED4               	movwf	212,c	;volatile
 22635                           
 22636                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 22637  01761E  0EAA               	movlw	170
 22638  017620  6ED4               	movwf	212,c	;volatile
 22639                           
 22640                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 22641  017622  90D4               	bcf	212,0,c	;volatile
 22642                           
 22643                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 22644  017624  0138               	movlb	56	; () banked
 22645  017626  6B9F               	clrf	159,b	;volatile
 22646                           
 22647                           ; BSR set to: 56
 22648                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 22649  017628  6B9E               	clrf	158,b	;volatile
 22650                           
 22651                           ; BSR set to: 56
 22652                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 22653  01762A  0E08               	movlw	8
 22654  01762C  6F9D               	movwf	157,b	;volatile
 22655                           
 22656                           ; BSR set to: 56
 22657                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 22658  01762E  0E55               	movlw	85
 22659  017630  6ED4               	movwf	212,c	;volatile
 22660                           
 22661                           ; BSR set to: 56
 22662                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 22663  017632  0EAA               	movlw	170
 22664  017634  6ED4               	movwf	212,c	;volatile
 22665                           
 22666                           ; BSR set to: 56
 22667                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 22668  017636  80D4               	bsf	212,0,c	;volatile
 22669                           
 22670                           ; BSR set to: 56
 22671                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 22672                           ;stkvar	_state @ sp[(-1)+0]
 22673  017638  0EFF               	movlw	-1
 22674  01763A  B0E3               	btfsc	plusw1,0,c
 22675  01763C  D002               	bra	u7695
 22676  01763E  9ED2               	bcf	16338,7,c	;volatile
 22677  017640  D001               	bra	u7696
 22678  017642                     u7695:
 22679  017642  8ED2               	bsf	16338,7,c	;volatile
 22680  017644                     u7696:
 22681                           
 22682                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 22683  017644  0139               	movlb	57	; () banked
 22684  017646  8782               	bsf	130,3,b	;volatile
 22685                           
 22686                           ; BSR set to: 57
 22687                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 22688  017648  8382               	bsf	130,1,b	;volatile
 22689                           
 22690                           ; BSR set to: 57
 22691                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 22692  01764A  8182               	bsf	130,0,b	;volatile
 22693                           
 22694                           ; BSR set to: 57
 22695                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 22696  01764C  8582               	bsf	130,2,b	;volatile
 22697                           
 22698                           ; BSR set to: 57
 22699                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 22700  01764E  8786               	bsf	134,3,b	;volatile
 22701                           
 22702                           ; BSR set to: 57
 22703                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 22704  017650  8586               	bsf	134,2,b	;volatile
 22705                           
 22706                           ; BSR set to: 57
 22707                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 22708  017652  8983               	bsf	131,4,b	;volatile
 22709                           
 22710                           ; BSR set to: 57
 22711                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 22712  017654  8783               	bsf	131,3,b	;volatile
 22713                           
 22714                           ; BSR set to: 57
 22715                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 22716  017656  8181               	bsf	129,0,b	;volatile
 22717                           
 22718                           ; BSR set to: 57
 22719                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 22720  017658  8185               	bsf	133,0,b	;volatile
 22721                           
 22722                           ; BSR set to: 57
 22723                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 22724  01765A  8189               	bsf	137,0,b	;volatile
 22725                           
 22726                           ; BSR set to: 57
 22727                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 22728  01765C  9D88               	bcf	136,6,b	;volatile
 22729                           
 22730                           ; BSR set to: 57
 22731                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 22732  01765E  8581               	bsf	129,2,b	;volatile
 22733                           
 22734                           ; BSR set to: 57
 22735                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 22736  017660  8781               	bsf	129,3,b	;volatile
 22737                           
 22738                           ; BSR set to: 57
 22739                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 22740  017662  52E5               	movf	postdec1,f,c
 22741  017664  0012               	return		;funcret
 22742  017666                     __end_of_INTERRUPT_Initialize:
 22743                           	opt callstack 0
 22744                           
 22745 ;; *************** function _FVR_Initialize *****************
 22746 ;; Defined at:
 22747 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22748 ;; Parameters:    Size  Location     Type
 22749 ;;		None
 22750 ;; Auto vars:     Size  Location     Type
 22751 ;;		None
 22752 ;; Return value:  Size  Location     Type
 22753 ;;                  1  [STACK] void 
 22754 ;; Registers used:
 22755 ;;		wreg, status,2
 22756 ;; Tracked objects:
 22757 ;;		On entry : 3F/39
 22758 ;;		On exit  : 3F/3E
 22759 ;;		Unchanged: 0/0
 22760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22765 ;;Total ram usage:        0 bytes
 22766 ;; Hardware stack levels used:    1
 22767 ;; Hardware stack levels required when called:    6
 22768 ;; This function calls:
 22769 ;;		Nothing
 22770 ;; This function is called by:
 22771 ;;		_SYSTEM_Initialize
 22772 ;; This function uses a reentrant model
 22773 ;;
 22774                           
 22775                           	psect	text100
 22776  01853A                     __ptext100:
 22777                           	opt callstack 0
 22778  01853A                     _FVR_Initialize:
 22779                           	opt callstack 23
 22780                           
 22781                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 22782                           
 22783                           ; BSR set to: 57
 22784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22785                           ;incstack = 0
 22786  01853A  0EAF               	movlw	175
 22787  01853C  013E               	movlb	62	; () banked
 22788  01853E  6FC1               	movwf	193,b	;volatile
 22789                           
 22790                           ; BSR set to: 62
 22791                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22792  018540  0012               	return		;funcret
 22793  018542                     __end_of_FVR_Initialize:
 22794                           	opt callstack 0
 22795                           
 22796 ;; *************** function _EXT_INT_Initialize *****************
 22797 ;; Defined at:
 22798 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 22799 ;; Parameters:    Size  Location     Type
 22800 ;;		None
 22801 ;; Auto vars:     Size  Location     Type
 22802 ;;		None
 22803 ;; Return value:  Size  Location     Type
 22804 ;;                  1  [STACK] void 
 22805 ;; Registers used:
 22806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22807 ;; Tracked objects:
 22808 ;;		On entry : 3F/39
 22809 ;;		On exit  : 3F/39
 22810 ;;		Unchanged: 0/0
 22811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22816 ;;Total ram usage:        0 bytes
 22817 ;; Hardware stack levels used:    1
 22818 ;; Hardware stack levels required when called:    7
 22819 ;; This function calls:
 22820 ;;		_INT0_SetInterruptHandler
 22821 ;;		_INT1_SetInterruptHandler
 22822 ;; This function is called by:
 22823 ;;		_SYSTEM_Initialize
 22824 ;; This function uses a reentrant model
 22825 ;;
 22826                           
 22827                           	psect	text101
 22828  017E00                     __ptext101:
 22829                           	opt callstack 0
 22830  017E00                     _EXT_INT_Initialize:
 22831                           	opt callstack 22
 22832                           
 22833                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 22834                           
 22835                           ; BSR set to: 62
 22836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22837                           ;incstack = 0
 22838  017E00  0139               	movlb	57	; () banked
 22839  017E02  91A1               	bcf	161,0,b	;volatile
 22840                           
 22841                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 22842  017E04  90D2               	bcf	210,0,c	;volatile
 22843                           
 22844                           ; BSR set to: 57
 22845                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 22846  017E06  0E5A               	movlw	low _INT0_DefaultInterruptHandler
 22847  017E08  6EE6               	movwf	postinc1,c
 22848  017E0A  0E85               	movlw	high _INT0_DefaultInterruptHandler
 22849  017E0C  6EE6               	movwf	postinc1,c
 22850  017E0E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 22851  017E10  6EE6               	movwf	postinc1,c
 22852  017E12  EC82  F0C0         	call	_INT0_SetInterruptHandler	;wreg free
 22853                           
 22854                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 22855  017E16  0139               	movlb	57	; () banked
 22856  017E18  8191               	bsf	145,0,b	;volatile
 22857                           
 22858                           ; BSR set to: 57
 22859                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 22860  017E1A  91A5               	bcf	165,0,b	;volatile
 22861                           
 22862                           ; BSR set to: 57
 22863                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 22864  017E1C  92D2               	bcf	210,1,c	;volatile
 22865                           
 22866                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 22867  017E1E  0E5C               	movlw	low _INT1_DefaultInterruptHandler
 22868  017E20  6EE6               	movwf	postinc1,c
 22869  017E22  0E85               	movlw	high _INT1_DefaultInterruptHandler
 22870  017E24  6EE6               	movwf	postinc1,c
 22871  017E26  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 22872  017E28  6EE6               	movwf	postinc1,c
 22873  017E2A  EC6E  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
 22874                           
 22875                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 22876  017E2E  0139               	movlb	57	; () banked
 22877  017E30  8195               	bsf	149,0,b	;volatile
 22878                           
 22879                           ; BSR set to: 57
 22880                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 22881  017E32  0012               	return		;funcret
 22882  017E34                     __end_of_EXT_INT_Initialize:
 22883                           	opt callstack 0
 22884                           
 22885 ;; *************** function _INT1_SetInterruptHandler *****************
 22886 ;; Defined at:
 22887 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 22888 ;; Parameters:    Size  Location     Type
 22889 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22890 ;;		 -> INT1_DefaultInterruptHandler(1), 
 22891 ;; Auto vars:     Size  Location     Type
 22892 ;;		None
 22893 ;; Return value:  Size  Location     Type
 22894 ;;                  1  [STACK] void 
 22895 ;; Registers used:
 22896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22897 ;; Tracked objects:
 22898 ;;		On entry : 3F/39
 22899 ;;		On exit  : 0/0
 22900 ;;		Unchanged: 0/0
 22901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;Total ram usage:        0 bytes
 22907 ;; Hardware stack levels used:    1
 22908 ;; Hardware stack levels required when called:    6
 22909 ;; This function calls:
 22910 ;;		Nothing
 22911 ;; This function is called by:
 22912 ;;		_EXT_INT_Initialize
 22913 ;; This function uses a reentrant model
 22914 ;;
 22915                           
 22916                           	psect	text102
 22917  0180DC                     __ptext102:
 22918                           	opt callstack 0
 22919  0180DC                     _INT1_SetInterruptHandler:
 22920                           	opt callstack 22
 22921                           
 22922                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 22923                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22924                           
 22925                           ; BSR set to: 57
 22926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22927                           ;incstack = 0
 22928  0180DC  50E1               	movf	fsr1l,w,c
 22929  0180DE  0FFD               	addlw	-3
 22930  0180E0  6ED9               	movwf	fsr2l,c
 22931  0180E2  50E2               	movf	fsr1h,w,c
 22932  0180E4  6EDA               	movwf	fsr2h,c
 22933  0180E6  0EFF               	movlw	255
 22934  0180E8  22DA               	addwfc	fsr2h,f,c
 22935  0180EA  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 22936  0180F0  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 22937  0180F6  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 22938                           
 22939                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22940  0180FC  52E5               	movf	postdec1,f,c
 22941  0180FE  52E5               	movf	postdec1,f,c
 22942  018100  52E5               	movf	postdec1,f,c
 22943  018102  0012               	return		;funcret
 22944  018104                     __end_of_INT1_SetInterruptHandler:
 22945                           	opt callstack 0
 22946                           
 22947 ;; *************** function _INT0_SetInterruptHandler *****************
 22948 ;; Defined at:
 22949 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 22950 ;; Parameters:    Size  Location     Type
 22951 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22952 ;;		 -> INT0_DefaultInterruptHandler(1), 
 22953 ;; Auto vars:     Size  Location     Type
 22954 ;;		None
 22955 ;; Return value:  Size  Location     Type
 22956 ;;                  1  [STACK] void 
 22957 ;; Registers used:
 22958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22959 ;; Tracked objects:
 22960 ;;		On entry : 3F/39
 22961 ;;		On exit  : 0/0
 22962 ;;		Unchanged: 0/0
 22963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22968 ;;Total ram usage:        0 bytes
 22969 ;; Hardware stack levels used:    1
 22970 ;; Hardware stack levels required when called:    6
 22971 ;; This function calls:
 22972 ;;		Nothing
 22973 ;; This function is called by:
 22974 ;;		_EXT_INT_Initialize
 22975 ;; This function uses a reentrant model
 22976 ;;
 22977                           
 22978                           	psect	text103
 22979  018104                     __ptext103:
 22980                           	opt callstack 0
 22981  018104                     _INT0_SetInterruptHandler:
 22982                           	opt callstack 22
 22983                           
 22984                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 22985                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22986                           
 22987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22988                           ;incstack = 0
 22989  018104  50E1               	movf	fsr1l,w,c
 22990  018106  0FFD               	addlw	-3
 22991  018108  6ED9               	movwf	fsr2l,c
 22992  01810A  50E2               	movf	fsr1h,w,c
 22993  01810C  6EDA               	movwf	fsr2h,c
 22994  01810E  0EFF               	movlw	255
 22995  018110  22DA               	addwfc	fsr2h,f,c
 22996  018112  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 22997  018118  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 22998  01811E  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 22999                           
 23000                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23001  018124  52E5               	movf	postdec1,f,c
 23002  018126  52E5               	movf	postdec1,f,c
 23003  018128  52E5               	movf	postdec1,f,c
 23004  01812A  0012               	return		;funcret
 23005  01812C                     __end_of_INT0_SetInterruptHandler:
 23006                           	opt callstack 0
 23007                           
 23008 ;; *************** function _DMA2_Initialize *****************
 23009 ;; Defined at:
 23010 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23011 ;; Parameters:    Size  Location     Type
 23012 ;;		None
 23013 ;; Auto vars:     Size  Location     Type
 23014 ;;		None
 23015 ;; Return value:  Size  Location     Type
 23016 ;;                  1  [STACK] void 
 23017 ;; Registers used:
 23018 ;;		wreg, status,2
 23019 ;; Tracked objects:
 23020 ;;		On entry : 3F/3D
 23021 ;;		On exit  : 3F/3B
 23022 ;;		Unchanged: 0/0
 23023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23028 ;;Total ram usage:        0 bytes
 23029 ;; Hardware stack levels used:    1
 23030 ;; Hardware stack levels required when called:    6
 23031 ;; This function calls:
 23032 ;;		Nothing
 23033 ;; This function is called by:
 23034 ;;		_SYSTEM_Initialize
 23035 ;; This function uses a reentrant model
 23036 ;;
 23037                           
 23038                           	psect	text104
 23039  017906                     __ptext104:
 23040                           	opt callstack 0
 23041  017906                     _DMA2_Initialize:
 23042                           	opt callstack 23
 23043                           
 23044                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23045                           
 23046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23047                           ;incstack = 0
 23048  017906  0E00               	movlw	0
 23049  017908  013B               	movlb	59	; () banked
 23050  01790A  6FD9               	movwf	217,b	;volatile
 23051  01790C  0E10               	movlw	16
 23052  01790E  6FDA               	movwf	218,b	;volatile
 23053  017910  0E00               	movlw	0
 23054  017912  6FDB               	movwf	219,b	;volatile
 23055                           
 23056                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23057  017914  0E3F               	movlw	63
 23058  017916  6FD1               	movwf	209,b	;volatile
 23059  017918  0EBB               	movlw	187
 23060  01791A  6FD0               	movwf	208,b	;volatile
 23061                           
 23062                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23063  01791C  0E03               	movlw	3
 23064  01791E  6FDD               	movwf	221,b	;volatile
 23065                           
 23066                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23067  017920  0E00               	movlw	0
 23068  017922  6FD8               	movwf	216,b	;volatile
 23069  017924  0E01               	movlw	1
 23070  017926  6FD7               	movwf	215,b	;volatile
 23071                           
 23072                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23073  017928  0E00               	movlw	0
 23074  01792A  6FCF               	movwf	207,b	;volatile
 23075  01792C  0E01               	movlw	1
 23076  01792E  6FCE               	movwf	206,b	;volatile
 23077                           
 23078                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23079  017930  0E46               	movlw	70
 23080  017932  6FDF               	movwf	223,b	;volatile
 23081                           
 23082                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23083  017934  0E3D               	movlw	61
 23084  017936  6FDE               	movwf	222,b	;volatile
 23085                           
 23086                           ; BSR set to: 59
 23087                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23088  017938  0139               	movlb	57	; () banked
 23089  01793A  97A5               	bcf	165,3,b	;volatile
 23090                           
 23091                           ; BSR set to: 57
 23092                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23093  01793C  95A5               	bcf	165,2,b	;volatile
 23094                           
 23095                           ; BSR set to: 57
 23096                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23097  01793E  9BA5               	bcf	165,5,b	;volatile
 23098                           
 23099                           ; BSR set to: 57
 23100                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23101  017940  99A5               	bcf	165,4,b	;volatile
 23102                           
 23103                           ; BSR set to: 57
 23104                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23105  017942  9795               	bcf	149,3,b	;volatile
 23106                           
 23107                           ; BSR set to: 57
 23108                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23109  017944  9595               	bcf	149,2,b	;volatile
 23110                           
 23111                           ; BSR set to: 57
 23112                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23113  017946  9B95               	bcf	149,5,b	;volatile
 23114                           
 23115                           ; BSR set to: 57
 23116                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23117  017948  9995               	bcf	149,4,b	;volatile
 23118  01794A  9ED2               	bcf	16338,7,c	;# 
 23119  01794C  0139               	banksel	14831	;# 
 23120  01794E  0E55               	movlw	85	;# 
 23121  017950  6FEF               	movwf	14831,b	;# 
 23122  017952  0EAA               	movlw	170	;# 
 23123  017954  6FEF               	movwf	14831,b	;# 
 23124  017956  81EF               	bsf	14831,0,b	;# 
 23125  017958  8ED2               	bsf	16338,7,c	;# 
 23126                           
 23127                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23128  01795A  013B               	movlb	59	; () banked
 23129  01795C  6BDC               	clrf	220,b	;volatile
 23130                           
 23131                           ; BSR set to: 59
 23132                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23133  01795E  0012               	return		;funcret
 23134  017960                     __end_of_DMA2_Initialize:
 23135                           	opt callstack 0
 23136                           
 23137 ;; *************** function _DMA1_Initialize *****************
 23138 ;; Defined at:
 23139 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23140 ;; Parameters:    Size  Location     Type
 23141 ;;		None
 23142 ;; Auto vars:     Size  Location     Type
 23143 ;;		None
 23144 ;; Return value:  Size  Location     Type
 23145 ;;                  1  [STACK] void 
 23146 ;; Registers used:
 23147 ;;		wreg, status,2
 23148 ;; Tracked objects:
 23149 ;;		On entry : 3F/3B
 23150 ;;		On exit  : 3F/3B
 23151 ;;		Unchanged: 0/0
 23152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23157 ;;Total ram usage:        0 bytes
 23158 ;; Hardware stack levels used:    1
 23159 ;; Hardware stack levels required when called:    6
 23160 ;; This function calls:
 23161 ;;		Nothing
 23162 ;; This function is called by:
 23163 ;;		_SYSTEM_Initialize
 23164 ;; This function uses a reentrant model
 23165 ;;
 23166                           
 23167                           	psect	text105
 23168  0174C4                     __ptext105:
 23169                           	opt callstack 0
 23170  0174C4                     _DMA1_Initialize:
 23171                           	opt callstack 23
 23172                           
 23173                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23174                           
 23175                           ; BSR set to: 59
 23176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23177                           ;incstack = 0
 23178  0174C4  0E00               	movlw	0
 23179  0174C6  013B               	movlb	59	; () banked
 23180  0174C8  6FF9               	movwf	249,b	;volatile
 23181  0174CA  0E10               	movlw	16
 23182  0174CC  6FFA               	movwf	250,b	;volatile
 23183  0174CE  0E00               	movlw	0
 23184  0174D0  6FFB               	movwf	251,b	;volatile
 23185                           
 23186                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23187  0174D2  0E3D               	movlw	61
 23188  0174D4  6FF1               	movwf	241,b	;volatile
 23189  0174D6  0E11               	movlw	17
 23190  0174D8  6FF0               	movwf	240,b	;volatile
 23191                           
 23192                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23193  0174DA  0E03               	movlw	3
 23194  0174DC  6FFD               	movwf	253,b	;volatile
 23195                           
 23196                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23197  0174DE  0E00               	movlw	0
 23198  0174E0  6FF8               	movwf	248,b	;volatile
 23199  0174E2  0E01               	movlw	1
 23200  0174E4  6FF7               	movwf	247,b	;volatile
 23201                           
 23202                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23203  0174E6  0E00               	movlw	0
 23204  0174E8  6FEF               	movwf	239,b	;volatile
 23205  0174EA  0E01               	movlw	1
 23206  0174EC  6FEE               	movwf	238,b	;volatile
 23207                           
 23208                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23209  0174EE  0E15               	movlw	21
 23210  0174F0  6FFF               	movwf	255,b	;volatile
 23211                           
 23212                           ; BSR set to: 59
 23213                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23214  0174F2  6BFE               	clrf	254,b	;volatile
 23215                           
 23216                           ; BSR set to: 59
 23217                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23218  0174F4  0139               	movlb	57	; () banked
 23219  0174F6  93A2               	bcf	162,1,b	;volatile
 23220                           
 23221                           ; BSR set to: 57
 23222                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23223  0174F8  91A2               	bcf	162,0,b	;volatile
 23224                           
 23225                           ; BSR set to: 57
 23226                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23227  0174FA  97A2               	bcf	162,3,b	;volatile
 23228                           
 23229                           ; BSR set to: 57
 23230                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23231  0174FC  95A2               	bcf	162,2,b	;volatile
 23232                           
 23233                           ; BSR set to: 57
 23234                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23235  0174FE  8392               	bsf	146,1,b	;volatile
 23236                           
 23237                           ; BSR set to: 57
 23238                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23239  017500  8192               	bsf	146,0,b	;volatile
 23240                           
 23241                           ; BSR set to: 57
 23242                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23243  017502  8792               	bsf	146,3,b	;volatile
 23244                           
 23245                           ; BSR set to: 57
 23246                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23247  017504  8592               	bsf	146,2,b	;volatile
 23248                           
 23249                           ; BSR set to: 57
 23250                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23251  017506  6BF1               	clrf	241,b	;volatile
 23252                           
 23253                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23254  017508  0E01               	movlw	1
 23255  01750A  6FF2               	movwf	242,b	;volatile
 23256                           
 23257                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23258  01750C  0E04               	movlw	4
 23259  01750E  6FF3               	movwf	243,b	;volatile
 23260                           
 23261                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23262  017510  0E02               	movlw	2
 23263  017512  6FF4               	movwf	244,b	;volatile
 23264                           
 23265                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23266  017514  0E03               	movlw	3
 23267  017516  6FF7               	movwf	247,b	;volatile
 23268  017518  9ED2               	bcf	16338,7,c	;# 
 23269  01751A  0139               	banksel	14831	;# 
 23270  01751C  0E55               	movlw	85	;# 
 23271  01751E  6FEF               	movwf	14831,b	;# 
 23272  017520  0EAA               	movlw	170	;# 
 23273  017522  6FEF               	movwf	14831,b	;# 
 23274  017524  81EF               	bsf	14831,0,b	;# 
 23275  017526  8ED2               	bsf	16338,7,c	;# 
 23276                           
 23277                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23278  017528  013B               	movlb	59	; () banked
 23279  01752A  6BFC               	clrf	252,b	;volatile
 23280                           
 23281                           ; BSR set to: 59
 23282                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23283  01752C  0012               	return		;funcret
 23284  01752E                     __end_of_DMA1_Initialize:
 23285                           	opt callstack 0
 23286                           
 23287 ;; *************** function _CLKREF_Initialize *****************
 23288 ;; Defined at:
 23289 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23290 ;; Parameters:    Size  Location     Type
 23291 ;;		None
 23292 ;; Auto vars:     Size  Location     Type
 23293 ;;		None
 23294 ;; Return value:  Size  Location     Type
 23295 ;;                  1  [STACK] void 
 23296 ;; Registers used:
 23297 ;;		wreg, status,2
 23298 ;; Tracked objects:
 23299 ;;		On entry : 3F/3B
 23300 ;;		On exit  : 3F/3C
 23301 ;;		Unchanged: 0/0
 23302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23307 ;;Total ram usage:        0 bytes
 23308 ;; Hardware stack levels used:    1
 23309 ;; Hardware stack levels required when called:    6
 23310 ;; This function calls:
 23311 ;;		Nothing
 23312 ;; This function is called by:
 23313 ;;		_SYSTEM_Initialize
 23314 ;; This function uses a reentrant model
 23315 ;;
 23316                           
 23317                           	psect	text106
 23318  0184F6                     __ptext106:
 23319                           	opt callstack 0
 23320  0184F6                     _CLKREF_Initialize:
 23321                           	opt callstack 23
 23322                           
 23323                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23324                           
 23325                           ; BSR set to: 59
 23326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23327                           ;incstack = 0
 23328  0184F6  013C               	movlb	60	; () banked
 23329  0184F8  6BE6               	clrf	230,b	;volatile
 23330                           
 23331                           ; BSR set to: 60
 23332                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23333  0184FA  0E94               	movlw	148
 23334  0184FC  6FE5               	movwf	229,b	;volatile
 23335                           
 23336                           ; BSR set to: 60
 23337                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23338  0184FE  0012               	return		;funcret
 23339  018500                     __end_of_CLKREF_Initialize:
 23340                           	opt callstack 0
 23341                           
 23342 ;; *************** function _ADCC_Initialize *****************
 23343 ;; Defined at:
 23344 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23345 ;; Parameters:    Size  Location     Type
 23346 ;;		None
 23347 ;; Auto vars:     Size  Location     Type
 23348 ;;		None
 23349 ;; Return value:  Size  Location     Type
 23350 ;;                  1  [STACK] void 
 23351 ;; Registers used:
 23352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23353 ;; Tracked objects:
 23354 ;;		On entry : 3F/3E
 23355 ;;		On exit  : 0/0
 23356 ;;		Unchanged: 0/0
 23357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23362 ;;Total ram usage:        0 bytes
 23363 ;; Hardware stack levels used:    1
 23364 ;; Hardware stack levels required when called:    7
 23365 ;; This function calls:
 23366 ;;		_ADCC_SetADIInterruptHandler
 23367 ;;		_ADCC_SetADTIInterruptHandler
 23368 ;; This function is called by:
 23369 ;;		_SYSTEM_Initialize
 23370 ;; This function uses a reentrant model
 23371 ;;
 23372                           
 23373                           	psect	text107
 23374  01752E                     __ptext107:
 23375                           	opt callstack 0
 23376  01752E                     _ADCC_Initialize:
 23377                           	opt callstack 22
 23378                           
 23379                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23380                           
 23381                           ; BSR set to: 60
 23382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23383                           ;incstack = 0
 23384  01752E  013E               	movlb	62	; () banked
 23385  017530  6BDE               	clrf	222,b	;volatile
 23386                           
 23387                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23388  017532  6BDF               	clrf	223,b	;volatile
 23389                           
 23390                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23391  017534  6BE0               	clrf	224,b	;volatile
 23392                           
 23393                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23394  017536  6BE1               	clrf	225,b	;volatile
 23395                           
 23396                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23397  017538  6BE4               	clrf	228,b	;volatile
 23398                           
 23399                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23400  01753A  6BE5               	clrf	229,b	;volatile
 23401                           
 23402                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23403  01753C  6BEA               	clrf	234,b	;volatile
 23404                           
 23405                           ; BSR set to: 62
 23406                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23407  01753E  0E40               	movlw	64
 23408  017540  6FEC               	movwf	236,b	;volatile
 23409                           
 23410                           ; BSR set to: 62
 23411                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23412  017542  6BF1               	clrf	241,b	;volatile
 23413                           
 23414                           ; BSR set to: 62
 23415                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 23416  017544  6BF3               	clrf	243,b	;volatile
 23417                           
 23418                           ; BSR set to: 62
 23419                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23420  017546  6BF4               	clrf	244,b	;volatile
 23421                           
 23422                           ; BSR set to: 62
 23423                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23424  017548  6BF5               	clrf	245,b	;volatile
 23425                           
 23426                           ; BSR set to: 62
 23427                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23428  01754A  6BF6               	clrf	246,b	;volatile
 23429                           
 23430                           ; BSR set to: 62
 23431                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23432  01754C  6BF7               	clrf	247,b	;volatile
 23433                           
 23434                           ; BSR set to: 62
 23435                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23436  01754E  6BF9               	clrf	249,b	;volatile
 23437                           
 23438                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 23439  017550  0E6B               	movlw	107
 23440  017552  6FFA               	movwf	250,b	;volatile
 23441                           
 23442                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23443  017554  0E27               	movlw	39
 23444  017556  6FFB               	movwf	251,b	;volatile
 23445                           
 23446                           ; BSR set to: 62
 23447                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23448  017558  6BFC               	clrf	252,b	;volatile
 23449                           
 23450                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23451  01755A  0E02               	movlw	2
 23452  01755C  6FFD               	movwf	253,b	;volatile
 23453                           
 23454                           ; BSR set to: 62
 23455                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23456  01755E  6BFE               	clrf	254,b	;volatile
 23457                           
 23458                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 23459  017560  0E02               	movlw	2
 23460  017562  6FFF               	movwf	255,b	;volatile
 23461                           
 23462                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x94;
 23463  017564  0E94               	movlw	148
 23464  017566  6FF8               	movwf	248,b	;volatile
 23465                           
 23466                           ; BSR set to: 62
 23467                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23468  017568  0139               	movlb	57	; () banked
 23469  01756A  95A1               	bcf	161,2,b	;volatile
 23470                           
 23471                           ; BSR set to: 57
 23472                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23473  01756C  8591               	bsf	145,2,b	;volatile
 23474                           
 23475                           ; BSR set to: 57
 23476                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23477  01756E  0E5E               	movlw	low _ADCC_DefaultInterruptHandler
 23478  017570  6EE6               	movwf	postinc1,c
 23479  017572  0E85               	movlw	high _ADCC_DefaultInterruptHandler
 23480  017574  6EE6               	movwf	postinc1,c
 23481  017576  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23482  017578  6EE6               	movwf	postinc1,c
 23483  01757A  ECAA  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23484                           
 23485                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23486  01757E  0139               	movlb	57	; () banked
 23487  017580  97A1               	bcf	161,3,b	;volatile
 23488                           
 23489                           ; BSR set to: 57
 23490                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23491  017582  8791               	bsf	145,3,b	;volatile
 23492                           
 23493                           ; BSR set to: 57
 23494                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23495  017584  0E5E               	movlw	low _ADCC_DefaultInterruptHandler
 23496  017586  6EE6               	movwf	postinc1,c
 23497  017588  0E85               	movlw	high _ADCC_DefaultInterruptHandler
 23498  01758A  6EE6               	movwf	postinc1,c
 23499  01758C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23500  01758E  6EE6               	movwf	postinc1,c
 23501  017590  EC96  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23502                           
 23503                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23504  017594  0012               	return		;funcret
 23505  017596                     __end_of_ADCC_Initialize:
 23506                           	opt callstack 0
 23507                           
 23508 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23509 ;; Defined at:
 23510 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23511 ;; Parameters:    Size  Location     Type
 23512 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23513 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23514 ;; Auto vars:     Size  Location     Type
 23515 ;;		None
 23516 ;; Return value:  Size  Location     Type
 23517 ;;                  1  [STACK] void 
 23518 ;; Registers used:
 23519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23520 ;; Tracked objects:
 23521 ;;		On entry : 0/0
 23522 ;;		On exit  : 0/0
 23523 ;;		Unchanged: 0/0
 23524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23529 ;;Total ram usage:        0 bytes
 23530 ;; Hardware stack levels used:    1
 23531 ;; Hardware stack levels required when called:    6
 23532 ;; This function calls:
 23533 ;;		Nothing
 23534 ;; This function is called by:
 23535 ;;		_ADCC_Initialize
 23536 ;;		_start_adc_scan
 23537 ;; This function uses a reentrant model
 23538 ;;
 23539                           
 23540                           	psect	text108
 23541  01812C                     __ptext108:
 23542                           	opt callstack 0
 23543  01812C                     _ADCC_SetADTIInterruptHandler:
 23544                           	opt callstack 23
 23545                           
 23546                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23547                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23548                           
 23549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23550                           ;incstack = 0
 23551  01812C  50E1               	movf	fsr1l,w,c
 23552  01812E  0FFD               	addlw	-3
 23553  018130  6ED9               	movwf	fsr2l,c
 23554  018132  50E2               	movf	fsr1h,w,c
 23555  018134  6EDA               	movwf	fsr2h,c
 23556  018136  0EFF               	movlw	255
 23557  018138  22DA               	addwfc	fsr2h,f,c
 23558  01813A  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23559  018140  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23560  018146  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23561                           
 23562                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23563  01814C  52E5               	movf	postdec1,f,c
 23564  01814E  52E5               	movf	postdec1,f,c
 23565  018150  52E5               	movf	postdec1,f,c
 23566  018152  0012               	return		;funcret
 23567  018154                     __end_of_ADCC_SetADTIInterruptHandler:
 23568                           	opt callstack 0
 23569                           
 23570 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23571 ;; Defined at:
 23572 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23573 ;; Parameters:    Size  Location     Type
 23574 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23575 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23576 ;; Auto vars:     Size  Location     Type
 23577 ;;		None
 23578 ;; Return value:  Size  Location     Type
 23579 ;;                  1  [STACK] void 
 23580 ;; Registers used:
 23581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23582 ;; Tracked objects:
 23583 ;;		On entry : 6/0
 23584 ;;		On exit  : 0/0
 23585 ;;		Unchanged: 0/0
 23586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;Total ram usage:        0 bytes
 23592 ;; Hardware stack levels used:    1
 23593 ;; Hardware stack levels required when called:    6
 23594 ;; This function calls:
 23595 ;;		Nothing
 23596 ;; This function is called by:
 23597 ;;		_ADCC_Initialize
 23598 ;;		_start_adc_scan
 23599 ;; This function uses a reentrant model
 23600 ;;
 23601                           
 23602                           	psect	text109
 23603  018154                     __ptext109:
 23604                           	opt callstack 0
 23605  018154                     _ADCC_SetADIInterruptHandler:
 23606                           	opt callstack 23
 23607                           
 23608                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23609                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23610                           
 23611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23612                           ;incstack = 0
 23613  018154  50E1               	movf	fsr1l,w,c
 23614  018156  0FFD               	addlw	-3
 23615  018158  6ED9               	movwf	fsr2l,c
 23616  01815A  50E2               	movf	fsr1h,w,c
 23617  01815C  6EDA               	movwf	fsr2h,c
 23618  01815E  0EFF               	movlw	255
 23619  018160  22DA               	addwfc	fsr2h,f,c
 23620  018162  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23621  018168  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23622  01816E  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23623                           
 23624                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23625  018174  52E5               	movf	postdec1,f,c
 23626  018176  52E5               	movf	postdec1,f,c
 23627  018178  52E5               	movf	postdec1,f,c
 23628  01817A  0012               	return		;funcret
 23629  01817C                     __end_of_ADCC_SetADIInterruptHandler:
 23630                           	opt callstack 0
 23631                           
 23632 ;; *************** function _TMR5_ISR *****************
 23633 ;; Defined at:
 23634 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23635 ;; Parameters:    Size  Location     Type
 23636 ;;		None
 23637 ;; Auto vars:     Size  Location     Type
 23638 ;;		None
 23639 ;; Return value:  Size  Location     Type
 23640 ;;                  1    wreg      void 
 23641 ;; Registers used:
 23642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 23643 ;; Tracked objects:
 23644 ;;		On entry : 0/0
 23645 ;;		On exit  : 0/0
 23646 ;;		Unchanged: 0/0
 23647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23650 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23651 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23652 ;;Total ram usage:        4 bytes
 23653 ;; Hardware stack levels used:    1
 23654 ;; Hardware stack levels required when called:    5
 23655 ;; This function calls:
 23656 ;;		_TMR5_CallBack
 23657 ;;		_TMR5_WriteTimer
 23658 ;; This function is called by:
 23659 ;;		Interrupt level 1
 23660 ;; This function uses a non-reentrant model
 23661 ;;
 23662                           
 23663                           	psect	text110
 23664  017850                     __ptext110:
 23665                           	opt callstack 0
 23666  017850                     _TMR5_ISR:
 23667                           	opt callstack 12
 23668                           
 23669                           ;incstack = 0
 23670  017850  006F FF60  F0E7    	movff	status,??_TMR5_ISR+2
 23671  017856  0060  F100  F0E8   	movff	btemp+11,??_TMR5_ISR+3
 23672  01785C  EE15  F3AB         	lfsr	1,___intlo_sp
 23673                           
 23674                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 23675  017860  0139               	movlb	57	; () banked
 23676  017862  9DA8               	bcf	168,6,b	;volatile
 23677                           
 23678                           ; BSR set to: 57
 23679                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 23680  017864  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 23681  01786A  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 23682  017870  EC39  F0BE         	call	_TMR5_WriteTimer	;wreg free
 23683                           
 23684                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 23685  017874  0102               	movlb	2	; () banked
 23686  017876  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 23687  017878  0100               	movlb	0	; () banked
 23688  01787A  6FE5               	movwf	??_TMR5_ISR& (0+255),b
 23689  01787C  6BE6               	clrf	(??_TMR5_ISR+1)& (0+255),b
 23690  01787E  0E05               	movlw	5
 23691  017880  27E5               	addwf	??_TMR5_ISR& (0+255),f,b
 23692  017882  0E00               	movlw	0
 23693  017884  23E6               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 23694  017886  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 23695  017888  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 23696  01788A  51E5               	movf	??_TMR5_ISR& (0+255),w,b
 23697  01788C  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 23698  01788E  51E6               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 23699  017890  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 23700  017892  A0D8               	btfss	status,0,c
 23701  017894  D004               	goto	i1l1045
 23702                           
 23703                           ; BSR set to: 0
 23704                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 23705  017896  EC1F  F0C1         	call	_TMR5_CallBack	;wreg free
 23706                           
 23707                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 23708  01789A  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 23709  01789C  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 23710  01789E                     i1l1045:
 23711  01789E  0060  F3A0  F040   	movff	??_TMR5_ISR+3,btemp+11
 23712  0178A4  0060  F39F  FFD8   	movff	??_TMR5_ISR+2,status
 23713  0178AA  0011               	retfie		f
 23714  0178AC                     __end_of_TMR5_ISR:
 23715                           	opt callstack 0
 23716                           
 23717 ;; *************** function _TMR5_WriteTimer *****************
 23718 ;; Defined at:
 23719 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 23720 ;; Parameters:    Size  Location     Type
 23721 ;;  timerVal        2  [STACK] unsigned short 
 23722 ;; Auto vars:     Size  Location     Type
 23723 ;;		None
 23724 ;; Return value:  Size  Location     Type
 23725 ;;                  1  [STACK] void 
 23726 ;; Registers used:
 23727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23728 ;; Tracked objects:
 23729 ;;		On entry : 3F/39
 23730 ;;		On exit  : 0/0
 23731 ;;		Unchanged: 0/0
 23732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23737 ;;Total ram usage:        0 bytes
 23738 ;; Hardware stack levels used:    1
 23739 ;; Hardware stack levels required when called:    3
 23740 ;; This function calls:
 23741 ;;		Nothing
 23742 ;; This function is called by:
 23743 ;;		_TMR5_ISR
 23744 ;; This function uses a reentrant model
 23745 ;;
 23746                           
 23747                           	psect	text111
 23748  017C72                     __ptext111:
 23749                           	opt callstack 0
 23750  017C72                     _TMR5_WriteTimer:
 23751                           	opt callstack 13
 23752                           
 23753                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 23754                           
 23755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23756                           ;incstack = 0
 23757  017C72  A49A               	btfss	154,2,c	;volatile
 23758  017C74  D00F               	goto	l8450
 23759                           
 23760                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 23761  017C76  909A               	bcf	154,0,c	;volatile
 23762                           
 23763                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 23764                           ;stkvar	_timerVal @ sp[(0)+-2]
 23765  017C78  0EFF               	movlw	255
 23766  017C7A  24E1               	addwf	fsr1l,w,c
 23767  017C7C  6ED9               	movwf	fsr2l,c
 23768  017C7E  0EFF               	movlw	255
 23769  017C80  20E2               	addwfc	fsr1h,w,c
 23770  017C82  6EDA               	movwf	fsr2h,c
 23771  017C84  50DF               	movf	indf2,w,c
 23772  017C86  6E99               	movwf	153,c	;volatile
 23773                           
 23774                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 23775                           ;stkvar	_timerVal @ sp[(0)+-2]
 23776  017C88  0EFE               	movlw	-2
 23777  017C8A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23778                           
 23779                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 23780  017C90  809A               	bsf	154,0,c	;volatile
 23781                           
 23782                           ;mcc_generated_files/tmr5.c: 142:  } else {
 23783  017C92  D00C               	goto	l1028
 23784  017C94                     l8450:
 23785                           
 23786                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 23787                           ;stkvar	_timerVal @ sp[(0)+-2]
 23788  017C94  0EFF               	movlw	255
 23789  017C96  24E1               	addwf	fsr1l,w,c
 23790  017C98  6ED9               	movwf	fsr2l,c
 23791  017C9A  0EFF               	movlw	255
 23792  017C9C  20E2               	addwfc	fsr1h,w,c
 23793  017C9E  6EDA               	movwf	fsr2h,c
 23794  017CA0  50DF               	movf	indf2,w,c
 23795  017CA2  6E99               	movwf	153,c	;volatile
 23796                           
 23797                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 23798                           ;stkvar	_timerVal @ sp[(0)+-2]
 23799  017CA4  0EFE               	movlw	-2
 23800  017CA6  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23801  017CAC                     l1028:
 23802                           
 23803                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23804  017CAC  52E5               	movf	postdec1,f,c
 23805  017CAE  52E5               	movf	postdec1,f,c
 23806  017CB0  0012               	return		;funcret
 23807  017CB2                     __end_of_TMR5_WriteTimer:
 23808                           	opt callstack 0
 23809                           
 23810 ;; *************** function _TMR5_CallBack *****************
 23811 ;; Defined at:
 23812 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23813 ;; Parameters:    Size  Location     Type
 23814 ;;		None
 23815 ;; Auto vars:     Size  Location     Type
 23816 ;;		None
 23817 ;; Return value:  Size  Location     Type
 23818 ;;                  1  [STACK] void 
 23819 ;; Registers used:
 23820 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23821 ;; Tracked objects:
 23822 ;;		On entry : 3F/0
 23823 ;;		On exit  : 0/0
 23824 ;;		Unchanged: 0/0
 23825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23830 ;;Total ram usage:        0 bytes
 23831 ;; Hardware stack levels used:    1
 23832 ;; Hardware stack levels required when called:    4
 23833 ;; This function calls:
 23834 ;;		Absolute function
 23835 ;;		_TMR5_DefaultInterruptHandler
 23836 ;; This function is called by:
 23837 ;;		_TMR5_ISR
 23838 ;; This function uses a reentrant model
 23839 ;;
 23840                           
 23841                           	psect	text112
 23842  01823E                     __ptext112:
 23843                           	opt callstack 0
 23844  01823E                     _TMR5_CallBack:
 23845                           	opt callstack 12
 23846                           
 23847                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 23848                           
 23849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23850                           ;incstack = 0
 23851  01823E  0100               	movlb	0	; () banked
 23852  018240  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23853  018242  1199               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23854  018244  119A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23855  018246  B4D8               	btfsc	status,2,c
 23856  018248  0012               	return	
 23857                           
 23858                           ; BSR set to: 0
 23859                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 23860  01824A  D801               	call	u800_28
 23861  01824C  0012               	return	
 23862  01824E                     u800_28:
 23863  01824E  0005               	push	
 23864  018250  6EFA               	movwf	pclath,c
 23865  018252  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23866  018254  6EFD               	movwf	tosl,c
 23867  018256  5199               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23868  018258  6EFE               	movwf	tosh,c
 23869  01825A  519A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23870  01825C  6EFF               	movwf	tosu,c
 23871  01825E  50FA               	movf	pclath,w,c
 23872  018260  0012               	return		;indir
 23873  018262                     __end_of_TMR5_CallBack:
 23874                           	opt callstack 0
 23875                           
 23876 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23877 ;; Defined at:
 23878 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 23879 ;; Parameters:    Size  Location     Type
 23880 ;;		None
 23881 ;; Auto vars:     Size  Location     Type
 23882 ;;		None
 23883 ;; Return value:  Size  Location     Type
 23884 ;;                  1  [STACK] void 
 23885 ;; Registers used:
 23886 ;;		wreg, status,2, status,0, btemp+11
 23887 ;; Tracked objects:
 23888 ;;		On entry : 3F/0
 23889 ;;		On exit  : 0/0
 23890 ;;		Unchanged: 0/0
 23891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23896 ;;Total ram usage:        0 bytes
 23897 ;; Hardware stack levels used:    1
 23898 ;; Hardware stack levels required when called:    3
 23899 ;; This function calls:
 23900 ;;		Nothing
 23901 ;; This function is called by:
 23902 ;;		_TMR5_Initialize
 23903 ;;		_TMR5_CallBack
 23904 ;; This function uses a reentrant model
 23905 ;;
 23906                           
 23907                           	psect	text113
 23908  0183CE                     __ptext113:
 23909                           	opt callstack 0
 23910  0183CE                     _TMR5_DefaultInterruptHandler:
 23911                           	opt callstack 12
 23912                           
 23913                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 23914                           
 23915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23916                           ;incstack = 0
 23917  0183CE  A0BE               	btfss	190,0,c	;volatile
 23918  0183D0  D002               	goto	u773_20
 23919  0183D2  0E01               	movlw	1
 23920  0183D4  D001               	goto	u773_26
 23921  0183D6                     u773_20:
 23922  0183D6  0E00               	movlw	0
 23923  0183D8                     u773_26:
 23924  0183D8  0AFF               	xorlw	255
 23925  0183DA  6E40               	movwf	(btemp+11)^0,c
 23926  0183DC  50BE               	movf	190,w,c	;volatile
 23927  0183DE  1840               	xorwf	(btemp+11)^0,w,c
 23928  0183E0  0BFE               	andlw	-2
 23929  0183E2  1840               	xorwf	(btemp+11)^0,w,c
 23930  0183E4  6EBE               	movwf	190,c	;volatile
 23931                           
 23932                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23933  0183E6  0012               	return		;funcret
 23934  0183E8                     __end_of_TMR5_DefaultInterruptHandler:
 23935                           	opt callstack 0
 23936                           
 23937 ;; *************** function _INT0_ISR *****************
 23938 ;; Defined at:
 23939 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 23940 ;; Parameters:    Size  Location     Type
 23941 ;;		None
 23942 ;; Auto vars:     Size  Location     Type
 23943 ;;		None
 23944 ;; Return value:  Size  Location     Type
 23945 ;;                  1    wreg      void 
 23946 ;; Registers used:
 23947 ;;		wreg, status,2, status,0, pclath, tosl
 23948 ;; Tracked objects:
 23949 ;;		On entry : 0/0
 23950 ;;		On exit  : 0/0
 23951 ;;		Unchanged: 0/0
 23952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23957 ;;Total ram usage:        0 bytes
 23958 ;; Hardware stack levels used:    1
 23959 ;; Hardware stack levels required when called:    2
 23960 ;; This function calls:
 23961 ;;		_INT0_CallBack
 23962 ;; This function is called by:
 23963 ;;		Interrupt level 2
 23964 ;; This function uses a non-reentrant model
 23965 ;;
 23966                           
 23967                           	psect	text114
 23968  0184C8                     __ptext114:
 23969                           	opt callstack 0
 23970  0184C8                     _INT0_ISR:
 23971                           	opt callstack 12
 23972                           
 23973                           ;incstack = 0
 23974  0184C8  EE13  F356         	lfsr	1,___inthi_sp
 23975                           
 23976                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 23977  0184CC  0139               	movlb	57	; () banked
 23978  0184CE  91A1               	bcf	161,0,b	;volatile
 23979                           
 23980                           ; BSR set to: 57
 23981                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 23982  0184D0  EC31  F0C1         	call	_INT0_CallBack	;wreg free
 23983  0184D4  0011               	retfie		f
 23984  0184D6                     __end_of_INT0_ISR:
 23985                           	opt callstack 0
 23986                           
 23987 ;; *************** function _INT0_CallBack *****************
 23988 ;; Defined at:
 23989 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 23990 ;; Parameters:    Size  Location     Type
 23991 ;;		None
 23992 ;; Auto vars:     Size  Location     Type
 23993 ;;		None
 23994 ;; Return value:  Size  Location     Type
 23995 ;;                  1  [STACK] void 
 23996 ;; Registers used:
 23997 ;;		wreg, status,2, status,0, pclath, tosl
 23998 ;; Tracked objects:
 23999 ;;		On entry : 3F/39
 24000 ;;		On exit  : 0/0
 24001 ;;		Unchanged: 0/0
 24002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24007 ;;Total ram usage:        0 bytes
 24008 ;; Hardware stack levels used:    1
 24009 ;; Hardware stack levels required when called:    1
 24010 ;; This function calls:
 24011 ;;		Absolute function
 24012 ;;		_INT0_DefaultInterruptHandler
 24013 ;; This function is called by:
 24014 ;;		_INT0_ISR
 24015 ;; This function uses a reentrant model
 24016 ;;
 24017                           
 24018                           	psect	text115
 24019  018262                     __ptext115:
 24020                           	opt callstack 0
 24021  018262                     _INT0_CallBack:
 24022                           	opt callstack 12
 24023                           
 24024                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 24025                           
 24026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24027                           ;incstack = 0
 24028  018262  5019               	movf	_INT0_InterruptHandler^0,w,c
 24029  018264  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 24030  018266  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 24031  018268  B4D8               	btfsc	status,2,c
 24032  01826A  0012               	return	
 24033                           
 24034                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 24035  01826C  D801               	call	u366_48
 24036  01826E  0012               	return	
 24037  018270                     u366_48:
 24038  018270  0005               	push	
 24039  018272  6EFA               	movwf	pclath,c
 24040  018274  5019               	movf	_INT0_InterruptHandler^0,w,c
 24041  018276  6EFD               	movwf	tosl,c
 24042  018278  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 24043  01827A  6EFE               	movwf	tosh,c
 24044  01827C  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 24045  01827E  6EFF               	movwf	tosu,c
 24046  018280  50FA               	movf	pclath,w,c
 24047  018282  0012               	return		;indir
 24048  018284                     __end_of_INT0_CallBack:
 24049                           	opt callstack 0
 24050                           
 24051 ;; *************** function _INT0_DefaultInterruptHandler *****************
 24052 ;; Defined at:
 24053 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 24054 ;; Parameters:    Size  Location     Type
 24055 ;;		None
 24056 ;; Auto vars:     Size  Location     Type
 24057 ;;		None
 24058 ;; Return value:  Size  Location     Type
 24059 ;;                  1  [STACK] void 
 24060 ;; Registers used:
 24061 ;;		None
 24062 ;; Tracked objects:
 24063 ;;		On entry : 0/39
 24064 ;;		On exit  : 0/0
 24065 ;;		Unchanged: 0/0
 24066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24071 ;;Total ram usage:        0 bytes
 24072 ;; Hardware stack levels used:    1
 24073 ;; This function calls:
 24074 ;;		Nothing
 24075 ;; This function is called by:
 24076 ;;		_EXT_INT_Initialize
 24077 ;;		_INT0_CallBack
 24078 ;; This function uses a reentrant model
 24079 ;;
 24080                           
 24081                           	psect	text116
 24082  01855A                     __ptext116:
 24083                           	opt callstack 0
 24084  01855A                     _INT0_DefaultInterruptHandler:
 24085                           	opt callstack 12
 24086                           
 24087                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24088                           
 24089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24090                           ;incstack = 0
 24091  01855A  0012               	return		;funcret
 24092  01855C                     __end_of_INT0_DefaultInterruptHandler:
 24093                           	opt callstack 0
 24094                           
 24095 ;; *************** function _INT1_ISR *****************
 24096 ;; Defined at:
 24097 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 24098 ;; Parameters:    Size  Location     Type
 24099 ;;		None
 24100 ;; Auto vars:     Size  Location     Type
 24101 ;;		None
 24102 ;; Return value:  Size  Location     Type
 24103 ;;                  1    wreg      void 
 24104 ;; Registers used:
 24105 ;;		wreg, status,2, status,0, pclath, tosl
 24106 ;; Tracked objects:
 24107 ;;		On entry : 0/0
 24108 ;;		On exit  : 0/0
 24109 ;;		Unchanged: 0/0
 24110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24115 ;;Total ram usage:        0 bytes
 24116 ;; Hardware stack levels used:    1
 24117 ;; Hardware stack levels required when called:    2
 24118 ;; This function calls:
 24119 ;;		_INT1_CallBack
 24120 ;; This function is called by:
 24121 ;;		Interrupt level 2
 24122 ;; This function uses a non-reentrant model
 24123 ;;
 24124                           
 24125                           	psect	text117
 24126  0184D8                     __ptext117:
 24127                           	opt callstack 0
 24128  0184D8                     _INT1_ISR:
 24129                           	opt callstack 12
 24130                           
 24131                           ;incstack = 0
 24132  0184D8  EE13  F356         	lfsr	1,___inthi_sp
 24133                           
 24134                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 24135  0184DC  0139               	movlb	57	; () banked
 24136  0184DE  91A5               	bcf	165,0,b	;volatile
 24137                           
 24138                           ; BSR set to: 57
 24139                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 24140  0184E0  EC42  F0C1         	call	_INT1_CallBack	;wreg free
 24141  0184E4  0011               	retfie		f
 24142  0184E6                     __end_of_INT1_ISR:
 24143                           	opt callstack 0
 24144                           
 24145 ;; *************** function _INT1_CallBack *****************
 24146 ;; Defined at:
 24147 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 24148 ;; Parameters:    Size  Location     Type
 24149 ;;		None
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;		None
 24152 ;; Return value:  Size  Location     Type
 24153 ;;                  1  [STACK] void 
 24154 ;; Registers used:
 24155 ;;		wreg, status,2, status,0, pclath, tosl
 24156 ;; Tracked objects:
 24157 ;;		On entry : 3F/39
 24158 ;;		On exit  : 0/0
 24159 ;;		Unchanged: 0/0
 24160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24165 ;;Total ram usage:        0 bytes
 24166 ;; Hardware stack levels used:    1
 24167 ;; Hardware stack levels required when called:    1
 24168 ;; This function calls:
 24169 ;;		Absolute function
 24170 ;;		_INT1_DefaultInterruptHandler
 24171 ;; This function is called by:
 24172 ;;		_INT1_ISR
 24173 ;; This function uses a reentrant model
 24174 ;;
 24175                           
 24176                           	psect	text118
 24177  018284                     __ptext118:
 24178                           	opt callstack 0
 24179  018284                     _INT1_CallBack:
 24180                           	opt callstack 12
 24181                           
 24182                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 24183                           
 24184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24185                           ;incstack = 0
 24186  018284  5016               	movf	_INT1_InterruptHandler^0,w,c
 24187  018286  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24188  018288  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24189  01828A  B4D8               	btfsc	status,2,c
 24190  01828C  0012               	return	
 24191                           
 24192                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 24193  01828E  D801               	call	u368_48
 24194  018290  0012               	return	
 24195  018292                     u368_48:
 24196  018292  0005               	push	
 24197  018294  6EFA               	movwf	pclath,c
 24198  018296  5016               	movf	_INT1_InterruptHandler^0,w,c
 24199  018298  6EFD               	movwf	tosl,c
 24200  01829A  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24201  01829C  6EFE               	movwf	tosh,c
 24202  01829E  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24203  0182A0  6EFF               	movwf	tosu,c
 24204  0182A2  50FA               	movf	pclath,w,c
 24205  0182A4  0012               	return		;indir
 24206  0182A6                     __end_of_INT1_CallBack:
 24207                           	opt callstack 0
 24208                           
 24209 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24210 ;; Defined at:
 24211 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 24212 ;; Parameters:    Size  Location     Type
 24213 ;;		None
 24214 ;; Auto vars:     Size  Location     Type
 24215 ;;		None
 24216 ;; Return value:  Size  Location     Type
 24217 ;;                  1  [STACK] void 
 24218 ;; Registers used:
 24219 ;;		None
 24220 ;; Tracked objects:
 24221 ;;		On entry : 0/39
 24222 ;;		On exit  : 0/0
 24223 ;;		Unchanged: 0/0
 24224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24229 ;;Total ram usage:        0 bytes
 24230 ;; Hardware stack levels used:    1
 24231 ;; This function calls:
 24232 ;;		Nothing
 24233 ;; This function is called by:
 24234 ;;		_EXT_INT_Initialize
 24235 ;;		_INT1_CallBack
 24236 ;; This function uses a reentrant model
 24237 ;;
 24238                           
 24239                           	psect	text119
 24240  01855C                     __ptext119:
 24241                           	opt callstack 0
 24242  01855C                     _INT1_DefaultInterruptHandler:
 24243                           	opt callstack 12
 24244                           
 24245                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24246                           
 24247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24248                           ;incstack = 0
 24249  01855C  0012               	return		;funcret
 24250  01855E                     __end_of_INT1_DefaultInterruptHandler:
 24251                           	opt callstack 0
 24252                           
 24253 ;; *************** function _Default_ISR *****************
 24254 ;; Defined at:
 24255 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24256 ;; Parameters:    Size  Location     Type
 24257 ;;		None
 24258 ;; Auto vars:     Size  Location     Type
 24259 ;;		None
 24260 ;; Return value:  Size  Location     Type
 24261 ;;                  1    wreg      void 
 24262 ;; Registers used:
 24263 ;;		None
 24264 ;; Tracked objects:
 24265 ;;		On entry : 0/0
 24266 ;;		On exit  : 0/0
 24267 ;;		Unchanged: 0/0
 24268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24273 ;;Total ram usage:        0 bytes
 24274 ;; Hardware stack levels used:    1
 24275 ;; This function calls:
 24276 ;;		Nothing
 24277 ;; This function is called by:
 24278 ;;		Interrupt level 2
 24279 ;; This function uses a non-reentrant model
 24280 ;;
 24281                           
 24282                           	psect	text120
 24283  018554                     __ptext120:
 24284                           	opt callstack 0
 24285  018554                     _Default_ISR:
 24286                           	opt callstack 14
 24287                           
 24288                           ;incstack = 0
 24289  018554  EE13  F356         	lfsr	1,___inthi_sp
 24290  018558  0011               	retfie		f
 24291  01855A                     __end_of_Default_ISR:
 24292                           	opt callstack 0
 24293                           
 24294 ;; *************** function _ADCC_ISR *****************
 24295 ;; Defined at:
 24296 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24297 ;; Parameters:    Size  Location     Type
 24298 ;;		None
 24299 ;; Auto vars:     Size  Location     Type
 24300 ;;		None
 24301 ;; Return value:  Size  Location     Type
 24302 ;;                  1    wreg      void 
 24303 ;; Registers used:
 24304 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24305 ;; Tracked objects:
 24306 ;;		On entry : 0/0
 24307 ;;		On exit  : 0/0
 24308 ;;		Unchanged: 0/0
 24309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24314 ;;Total ram usage:        1 bytes
 24315 ;; Hardware stack levels used:    1
 24316 ;; Hardware stack levels required when called:    1
 24317 ;; This function calls:
 24318 ;;		Absolute function
 24319 ;;		_ADCC_DefaultInterruptHandler
 24320 ;;		_adc_int_handler
 24321 ;; This function is called by:
 24322 ;;		Interrupt level 2
 24323 ;; This function uses a non-reentrant model
 24324 ;;
 24325                           
 24326                           	psect	text121
 24327  017D28                     __ptext121:
 24328                           	opt callstack 0
 24329  017D28                     _ADCC_ISR:
 24330                           	opt callstack 13
 24331                           
 24332                           ;incstack = 0
 24333  017D28  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 24334  017D2E  EE13  F356         	lfsr	1,___inthi_sp
 24335                           
 24336                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 24337  017D32  0139               	movlb	57	; () banked
 24338  017D34  95A1               	bcf	161,2,b	;volatile
 24339                           
 24340                           ; BSR set to: 57
 24341                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 24342  017D36  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24343  017D38  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24344  017D3A  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24345  017D3C  B4D8               	btfsc	status,2,c
 24346  017D3E  D00C               	goto	i2u406_49
 24347                           
 24348                           ; BSR set to: 57
 24349                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 24350  017D40  D801               	call	i2u406_48
 24351  017D42  D00A               	goto	i2u406_49
 24352  017D44                     i2u406_48:
 24353  017D44  0005               	push	
 24354  017D46  6EFA               	movwf	pclath,c
 24355  017D48  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24356  017D4A  6EFD               	movwf	tosl,c
 24357  017D4C  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24358  017D4E  6EFE               	movwf	tosh,c
 24359  017D50  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24360  017D52  6EFF               	movwf	tosu,c
 24361  017D54  50FA               	movf	pclath,w,c
 24362  017D56  0012               	return		;indir
 24363  017D58                     i2u406_49:
 24364  017D58  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 24365  017D5E  0011               	retfie		f
 24366  017D60                     __end_of_ADCC_ISR:
 24367                           	opt callstack 0
 24368                           
 24369 ;; *************** function _adc_int_t_handler *****************
 24370 ;; Defined at:
 24371 ;;		line 117 in file "daq.c"
 24372 ;; Parameters:    Size  Location     Type
 24373 ;;		None
 24374 ;; Auto vars:     Size  Location     Type
 24375 ;;		None
 24376 ;; Return value:  Size  Location     Type
 24377 ;;                  1  [STACK] void 
 24378 ;; Registers used:
 24379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 24380 ;; Tracked objects:
 24381 ;;		On entry : 3F/39
 24382 ;;		On exit  : 1/0
 24383 ;;		Unchanged: 0/0
 24384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24389 ;;Total ram usage:        0 bytes
 24390 ;; Hardware stack levels used:    1
 24391 ;; Hardware stack levels required when called:    1
 24392 ;; This function calls:
 24393 ;;		_ADCC_StartConversion
 24394 ;; This function is called by:
 24395 ;;		_start_adc_scan
 24396 ;;		_ADCC_ThresholdISR
 24397 ;; This function uses a reentrant model
 24398 ;;
 24399                           
 24400                           	psect	text122
 24401  01717C                     __ptext122:
 24402                           	opt callstack 0
 24403  01717C                     _adc_int_t_handler:
 24404                           	opt callstack 12
 24405                           
 24406                           ;daq.c: 122:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 24407                           
 24408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24409                           ;incstack = 0
 24410  01717C  013E               	movlb	62	; () banked
 24411  01717E  51E6               	movf	230,w,b	;volatile
 24412  017180  006F FB9C  F035    	movff	16103,btemp	;volatile
 24413  017186  6A36               	clrf	(btemp+1)^0,c
 24414  017188  0060  F0D4  F036   	movff	btemp,btemp+1
 24415  01718E  6A35               	clrf	btemp^0,c
 24416  017190  2635               	addwf	btemp^0,f,c
 24417  017192  0E00               	movlw	0
 24418  017194  2236               	addwfc	(btemp+1)^0,f,c
 24419  017196  0100               	movlb	0	; () banked
 24420  017198  51C9               	movf	(_R+38)& (0+255),w,b	;volatile
 24421  01719A  0D02               	mullw	2
 24422  01719C  50F3               	movf	243,w,c
 24423  01719E  0FA3               	addlw	low _R
 24424  0171A0  6ED9               	movwf	fsr2l,c
 24425  0171A2  6ADA               	clrf	fsr2h,c
 24426  0171A4  0060  F0D7  FFDE   	movff	btemp,postinc2
 24427  0171AA  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 24428  0171B0                     l8680:
 24429                           
 24430                           ;daq.c: 124:   if (++R.scan_index > 0XD) {
 24431  0171B0  0100               	movlb	0	; () banked
 24432  0171B2  2BC9               	incf	(_R+38)& (0+255),f,b	;volatile
 24433  0171B4  0E0D               	movlw	13
 24434  0171B6  65C9               	cpfsgt	(_R+38)& (0+255),b	;volatile
 24435  0171B8  D004               	goto	l8688
 24436                           
 24437                           ; BSR set to: 0
 24438                           ;daq.c: 125:    R.done = 1;
 24439  0171BA  0E01               	movlw	1
 24440  0171BC  6FCC               	movwf	(_R+41)& (0+255),b	;volatile
 24441                           
 24442                           ; BSR set to: 0
 24443  0171BE  92BE               	bcf	190,1,c	;volatile
 24444  0171C0  0012               	return	
 24445  0171C2                     l8688:
 24446                           
 24447                           ; BSR set to: 0
 24448                           ;daq.c: 129:  } while (!((R.scan_select >> R.scan_index) &0x1));
 24449  0171C2  0060  F324  F040   	movff	_R+38,btemp+11	;volatile
 24450  0171C8  EE20  F0CA         	lfsr	2,_R+39	;volatile
 24451  0171CC  006F FF78  F03D    	movff	postinc2,btemp+8
 24452  0171D2  006F FF74  F03E    	movff	postdec2,btemp+9
 24453  0171D8  2A40               	incf	(btemp+11)^0,f,c
 24454  0171DA  D003               	goto	u822_44
 24455  0171DC                     u822_45:
 24456  0171DC  90D8               	bcf	status,0,c
 24457  0171DE  323E               	rrcf	(btemp+9)^0,f,c
 24458  0171E0  323D               	rrcf	(btemp+8)^0,f,c
 24459  0171E2                     u822_44:
 24460  0171E2  2E40               	decfsz	(btemp+11)^0,f,c
 24461  0171E4  D7FB               	goto	u822_45
 24462  0171E6  A03D               	btfss	(btemp+8)^0,0,c
 24463  0171E8  D7E3               	goto	l8680
 24464                           
 24465                           ;daq.c: 130:  ADCC_StartConversion(R.scan_index & 0xf);
 24466  0171EA  0100               	movlb	0	; () banked
 24467  0171EC  51C9               	movf	(_R+38)& (0+255),w,b	;volatile
 24468  0171EE  0B0F               	andlw	15
 24469  0171F0  6EE6               	movwf	postinc1,c
 24470  0171F2  EC44  F0C2         	call	_ADCC_StartConversion	;wreg free
 24471                           
 24472                           ; BSR set to: 62
 24473  0171F6  A2BE               	btfss	190,1,c	;volatile
 24474  0171F8  D002               	goto	u824_40
 24475  0171FA  0E01               	movlw	1
 24476  0171FC  D001               	goto	u824_46
 24477  0171FE                     u824_40:
 24478  0171FE  0E00               	movlw	0
 24479  017200                     u824_46:
 24480  017200  0AFF               	xorlw	255
 24481  017202  6E40               	movwf	(btemp+11)^0,c
 24482  017204  4640               	rlncf	(btemp+11)^0,f,c
 24483  017206  50BE               	movf	190,w,c	;volatile
 24484  017208  1840               	xorwf	(btemp+11)^0,w,c
 24485  01720A  0BFD               	andlw	-3
 24486  01720C  1840               	xorwf	(btemp+11)^0,w,c
 24487  01720E  6EBE               	movwf	190,c	;volatile
 24488                           
 24489                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24490  017210  0012               	return		;funcret
 24491  017212                     __end_of_adc_int_t_handler:
 24492                           	opt callstack 0
 24493                           
 24494 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24495 ;; Defined at:
 24496 ;;		line 339 in file "mcc_generated_files/adcc.c"
 24497 ;; Parameters:    Size  Location     Type
 24498 ;;		None
 24499 ;; Auto vars:     Size  Location     Type
 24500 ;;		None
 24501 ;; Return value:  Size  Location     Type
 24502 ;;                  1  [STACK] void 
 24503 ;; Registers used:
 24504 ;;		None
 24505 ;; Tracked objects:
 24506 ;;		On entry : 3F/39
 24507 ;;		On exit  : 0/0
 24508 ;;		Unchanged: 0/0
 24509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24514 ;;Total ram usage:        0 bytes
 24515 ;; Hardware stack levels used:    1
 24516 ;; This function calls:
 24517 ;;		Nothing
 24518 ;; This function is called by:
 24519 ;;		_ADCC_Initialize
 24520 ;;		_ADCC_ISR
 24521 ;;		_ADCC_ThresholdISR
 24522 ;; This function uses a reentrant model
 24523 ;;
 24524                           
 24525                           	psect	text123
 24526  01855E                     __ptext123:
 24527                           	opt callstack 0
 24528  01855E                     _ADCC_DefaultInterruptHandler:
 24529                           	opt callstack 13
 24530                           
 24531                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24532                           
 24533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24534                           ;incstack = 0
 24535  01855E  0012               	return		;funcret
 24536  018560                     __end_of_ADCC_DefaultInterruptHandler:
 24537                           	opt callstack 0
 24538                           
 24539 ;; *************** function _adc_int_handler *****************
 24540 ;; Defined at:
 24541 ;;		line 109 in file "daq.c"
 24542 ;; Parameters:    Size  Location     Type
 24543 ;;		None
 24544 ;; Auto vars:     Size  Location     Type
 24545 ;;		None
 24546 ;; Return value:  Size  Location     Type
 24547 ;;                  1  [STACK] void 
 24548 ;; Registers used:
 24549 ;;		wreg, status,2, status,0, btemp+11
 24550 ;; Tracked objects:
 24551 ;;		On entry : 3F/39
 24552 ;;		On exit  : 0/0
 24553 ;;		Unchanged: 0/0
 24554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24559 ;;Total ram usage:        0 bytes
 24560 ;; Hardware stack levels used:    1
 24561 ;; This function calls:
 24562 ;;		Nothing
 24563 ;; This function is called by:
 24564 ;;		_start_adc_scan
 24565 ;;		_ADCC_ISR
 24566 ;; This function uses a reentrant model
 24567 ;;
 24568                           
 24569                           	psect	text124
 24570  018322                     __ptext124:
 24571                           	opt callstack 0
 24572  018322                     _adc_int_handler:
 24573                           	opt callstack 13
 24574                           
 24575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24576                           ;incstack = 0
 24577                           ;daq.c: 111:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 24578  018322  A4BE               	btfss	190,2,c	;volatile
 24579  018324  D002               	goto	u400_40
 24580  018326  0E01               	movlw	1
 24581  018328  D001               	goto	u400_46
 24582  01832A                     u400_40:
 24583  01832A  0E00               	movlw	0
 24584  01832C                     u400_46:
 24585  01832C  0AFF               	xorlw	255
 24586  01832E  6E40               	movwf	(btemp+11)^0,c
 24587  018330  4640               	rlncf	(btemp+11)^0,f,c
 24588  018332  4640               	rlncf	(btemp+11)^0,f,c
 24589  018334  50BE               	movf	190,w,c	;volatile
 24590  018336  1840               	xorwf	(btemp+11)^0,w,c
 24591  018338  0BFB               	andlw	-5
 24592  01833A  1840               	xorwf	(btemp+11)^0,w,c
 24593  01833C  6EBE               	movwf	190,c	;volatile
 24594                           
 24595                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24596  01833E  0012               	return		;funcret
 24597  018340                     __end_of_adc_int_handler:
 24598                           	opt callstack 0
 24599                           
 24600 ;; *************** function _ADCC_ThresholdISR *****************
 24601 ;; Defined at:
 24602 ;;		line 327 in file "mcc_generated_files/adcc.c"
 24603 ;; Parameters:    Size  Location     Type
 24604 ;;		None
 24605 ;; Auto vars:     Size  Location     Type
 24606 ;;		None
 24607 ;; Return value:  Size  Location     Type
 24608 ;;                  1    wreg      void 
 24609 ;; Registers used:
 24610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 24611 ;; Tracked objects:
 24612 ;;		On entry : 0/0
 24613 ;;		On exit  : 0/0
 24614 ;;		Unchanged: 0/0
 24615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24618 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24619 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24620 ;;Total ram usage:        5 bytes
 24621 ;; Hardware stack levels used:    1
 24622 ;; Hardware stack levels required when called:    2
 24623 ;; This function calls:
 24624 ;;		Absolute function
 24625 ;;		_ADCC_DefaultInterruptHandler
 24626 ;;		_adc_int_t_handler
 24627 ;; This function is called by:
 24628 ;;		Interrupt level 2
 24629 ;; This function uses a non-reentrant model
 24630 ;;
 24631                           
 24632                           	psect	text125
 24633  017598                     __ptext125:
 24634                           	opt callstack 0
 24635  017598                     _ADCC_ThresholdISR:
 24636                           	opt callstack 12
 24637                           
 24638                           ;incstack = 0
 24639  017598  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 24640  01759E  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 24641  0175A4  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 24642  0175AA  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 24643  0175B0  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 24644  0175B6  EE13  F356         	lfsr	1,___inthi_sp
 24645                           
 24646                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 24647  0175BA  0139               	movlb	57	; () banked
 24648  0175BC  97A1               	bcf	161,3,b	;volatile
 24649                           
 24650                           ; BSR set to: 57
 24651                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 24652  0175BE  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24653  0175C0  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24654  0175C2  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24655  0175C4  B4D8               	btfsc	status,2,c
 24656  0175C6  D00C               	goto	i2u826_49
 24657                           
 24658                           ; BSR set to: 57
 24659                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 24660  0175C8  D801               	call	i2u826_48
 24661  0175CA  D00A               	goto	i2u826_49
 24662  0175CC                     i2u826_48:
 24663  0175CC  0005               	push	
 24664  0175CE  6EFA               	movwf	pclath,c
 24665  0175D0  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24666  0175D2  6EFD               	movwf	tosl,c
 24667  0175D4  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24668  0175D6  6EFE               	movwf	tosh,c
 24669  0175D8  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24670  0175DA  6EFF               	movwf	tosu,c
 24671  0175DC  50FA               	movf	pclath,w,c
 24672  0175DE  0012               	return		;indir
 24673  0175E0                     i2u826_49:
 24674  0175E0  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 24675  0175E6  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 24676  0175EC  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 24677  0175F2  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 24678  0175F8  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 24679  0175FE  0011               	retfie		f
 24680  017600                     __end_of_ADCC_ThresholdISR:
 24681                           	opt callstack 0
 24682                           
 24683 ;; *************** function _UART1_tx_vect_isr *****************
 24684 ;; Defined at:
 24685 ;;		line 199 in file "mcc_generated_files/uart1.c"
 24686 ;; Parameters:    Size  Location     Type
 24687 ;;		None
 24688 ;; Auto vars:     Size  Location     Type
 24689 ;;		None
 24690 ;; Return value:  Size  Location     Type
 24691 ;;                  1    wreg      void 
 24692 ;; Registers used:
 24693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24694 ;; Tracked objects:
 24695 ;;		On entry : 0/0
 24696 ;;		On exit  : 0/0
 24697 ;;		Unchanged: 0/0
 24698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24703 ;;Total ram usage:        0 bytes
 24704 ;; Hardware stack levels used:    1
 24705 ;; Hardware stack levels required when called:    1
 24706 ;; This function calls:
 24707 ;;		Absolute function
 24708 ;;		_UART1_Transmit_ISR
 24709 ;; This function is called by:
 24710 ;;		Interrupt level 2
 24711 ;; This function uses a non-reentrant model
 24712 ;;
 24713                           
 24714                           	psect	text126
 24715  01817C                     __ptext126:
 24716                           	opt callstack 0
 24717  01817C                     _UART1_tx_vect_isr:
 24718                           	opt callstack 13
 24719                           
 24720                           ;incstack = 0
 24721  01817C  EE13  F356         	lfsr	1,___inthi_sp
 24722                           
 24723                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 24724  018180  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24725  018182  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 24726  018184  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 24727  018186  B4D8               	btfsc	status,2,c
 24728  018188  0011               	retfie		f
 24729                           
 24730                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 24731  01818A  D801               	call	i2u998_48
 24732  01818C  0011               	retfie		f
 24733  01818E                     i2u998_48:
 24734  01818E  0005               	push	
 24735  018190  6EFA               	movwf	pclath,c
 24736  018192  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24737  018194  6EFD               	movwf	tosl,c
 24738  018196  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 24739  018198  6EFE               	movwf	tosh,c
 24740  01819A  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 24741  01819C  6EFF               	movwf	tosu,c
 24742  01819E  50FA               	movf	pclath,w,c
 24743  0181A0  0012               	return		;indir
 24744  0181A2                     __end_of_UART1_tx_vect_isr:
 24745                           	opt callstack 0
 24746                           
 24747 ;; *************** function _UART1_Transmit_ISR *****************
 24748 ;; Defined at:
 24749 ;;		line 213 in file "mcc_generated_files/uart1.c"
 24750 ;; Parameters:    Size  Location     Type
 24751 ;;		None
 24752 ;; Auto vars:     Size  Location     Type
 24753 ;;		None
 24754 ;; Return value:  Size  Location     Type
 24755 ;;                  1  [STACK] void 
 24756 ;; Registers used:
 24757 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24758 ;; Tracked objects:
 24759 ;;		On entry : 0/0
 24760 ;;		On exit  : 3B/39
 24761 ;;		Unchanged: 0/0
 24762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24767 ;;Total ram usage:        0 bytes
 24768 ;; Hardware stack levels used:    1
 24769 ;; This function calls:
 24770 ;;		Nothing
 24771 ;; This function is called by:
 24772 ;;		_UART1_Initialize
 24773 ;;		_UART1_tx_vect_isr
 24774 ;; This function uses a reentrant model
 24775 ;;
 24776                           
 24777                           	psect	text127
 24778  017EF2                     __ptext127:
 24779                           	opt callstack 0
 24780  017EF2                     _UART1_Transmit_ISR:
 24781                           	opt callstack 13
 24782                           
 24783                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 24784                           
 24785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24786                           ;incstack = 0
 24787  017EF2  0E40               	movlw	64
 24788  017EF4  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 24789  017EF6  D010               	goto	l581
 24790                           
 24791                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 24792  017EF8  0EBD               	movlw	low _uart1TxBuffer
 24793  017EFA  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 24794  017EFC  6ED9               	movwf	fsr2l,c
 24795  017EFE  6ADA               	clrf	fsr2h,c
 24796  017F00  0E02               	movlw	high _uart1TxBuffer
 24797  017F02  22DA               	addwfc	fsr2h,f,c
 24798  017F04  50DF               	movf	indf2,w,c
 24799  017F06  013D               	movlb	61	; () banked
 24800  017F08  6FEA               	movwf	234,b	;volatile
 24801                           
 24802                           ; BSR set to: 61
 24803  017F0A  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 24804                           
 24805                           ; BSR set to: 61
 24806                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 24807  017F0C  0E3F               	movlw	63
 24808  017F0E  6433               	cpfsgt	_uart1TxTail^0,c
 24809  017F10  D001               	goto	l8402
 24810                           
 24811                           ; BSR set to: 61
 24812                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 24813  017F12  6A33               	clrf	_uart1TxTail^0,c	;volatile
 24814  017F14                     l8402:
 24815                           
 24816                           ; BSR set to: 61
 24817                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 24818  017F14  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 24819                           
 24820                           ;mcc_generated_files/uart1.c: 222:  } else {
 24821  017F16  0012               	return	
 24822  017F18                     l581:
 24823                           
 24824                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 24825  017F18  0139               	movlb	57	; () banked
 24826  017F1A  9993               	bcf	147,4,b	;volatile
 24827                           
 24828                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24829  017F1C  0012               	return		;funcret
 24830  017F1E                     __end_of_UART1_Transmit_ISR:
 24831                           	opt callstack 0
 24832                           
 24833 ;; *************** function _UART1_rx_vect_isr *****************
 24834 ;; Defined at:
 24835 ;;		line 206 in file "mcc_generated_files/uart1.c"
 24836 ;; Parameters:    Size  Location     Type
 24837 ;;		None
 24838 ;; Auto vars:     Size  Location     Type
 24839 ;;		None
 24840 ;; Return value:  Size  Location     Type
 24841 ;;                  1    wreg      void 
 24842 ;; Registers used:
 24843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24844 ;; Tracked objects:
 24845 ;;		On entry : 0/0
 24846 ;;		On exit  : 0/0
 24847 ;;		Unchanged: 0/0
 24848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24853 ;;Total ram usage:        0 bytes
 24854 ;; Hardware stack levels used:    1
 24855 ;; Hardware stack levels required when called:    1
 24856 ;; This function calls:
 24857 ;;		Absolute function
 24858 ;;		_UART1_Receive_ISR
 24859 ;; This function is called by:
 24860 ;;		Interrupt level 2
 24861 ;; This function uses a non-reentrant model
 24862 ;;
 24863                           
 24864                           	psect	text128
 24865  0181A4                     __ptext128:
 24866                           	opt callstack 0
 24867  0181A4                     _UART1_rx_vect_isr:
 24868                           	opt callstack 13
 24869                           
 24870                           ;incstack = 0
 24871  0181A4  EE13  F356         	lfsr	1,___inthi_sp
 24872                           
 24873                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 24874  0181A8  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24875  0181AA  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 24876  0181AC  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 24877  0181AE  B4D8               	btfsc	status,2,c
 24878  0181B0  0011               	retfie		f
 24879                           
 24880                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 24881  0181B2  D801               	call	i2u1000_48
 24882  0181B4  0011               	retfie		f
 24883  0181B6                     i2u1000_48:
 24884  0181B6  0005               	push	
 24885  0181B8  6EFA               	movwf	pclath,c
 24886  0181BA  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24887  0181BC  6EFD               	movwf	tosl,c
 24888  0181BE  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 24889  0181C0  6EFE               	movwf	tosh,c
 24890  0181C2  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 24891  0181C4  6EFF               	movwf	tosu,c
 24892  0181C6  50FA               	movf	pclath,w,c
 24893  0181C8  0012               	return		;indir
 24894  0181CA                     __end_of_UART1_rx_vect_isr:
 24895                           	opt callstack 0
 24896                           
 24897 ;; *************** function _UART1_Receive_ISR *****************
 24898 ;; Defined at:
 24899 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24900 ;; Parameters:    Size  Location     Type
 24901 ;;		None
 24902 ;; Auto vars:     Size  Location     Type
 24903 ;;		None
 24904 ;; Return value:  Size  Location     Type
 24905 ;;                  1  [STACK] void 
 24906 ;; Registers used:
 24907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24908 ;; Tracked objects:
 24909 ;;		On entry : 0/0
 24910 ;;		On exit  : 0/0
 24911 ;;		Unchanged: 0/0
 24912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24917 ;;Total ram usage:        0 bytes
 24918 ;; Hardware stack levels used:    1
 24919 ;; This function calls:
 24920 ;;		Nothing
 24921 ;; This function is called by:
 24922 ;;		_UART1_Initialize
 24923 ;;		_UART1_rx_vect_isr
 24924 ;; This function uses a reentrant model
 24925 ;;
 24926                           
 24927                           	psect	text129
 24928  018340                     __ptext129:
 24929                           	opt callstack 0
 24930  018340                     _UART1_Receive_ISR:
 24931                           	opt callstack 13
 24932                           
 24933                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 24934                           
 24935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24936                           ;incstack = 0
 24937  018340  0E00               	movlw	low _uart1RxBuffer
 24938  018342  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 24939  018344  6ED9               	movwf	fsr2l,c
 24940  018346  6ADA               	clrf	fsr2h,c
 24941  018348  0E05               	movlw	high _uart1RxBuffer
 24942  01834A  22DA               	addwfc	fsr2h,f,c
 24943  01834C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 24944  018352  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 24945                           
 24946                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 24947  018354  2831               	incf	_uart1RxHead^0,w,c
 24948  018356  B4D8               	btfsc	status,2,c
 24949                           
 24950                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 24951  018358  6A31               	clrf	_uart1RxHead^0,c	;volatile
 24952                           
 24953                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 24954  01835A  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 24955                           
 24956                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24957  01835C  0012               	return		;funcret
 24958  01835E                     __end_of_UART1_Receive_ISR:
 24959                           	opt callstack 0
 24960                           
 24961 ;; *************** function _UART2_tx_vect_isr *****************
 24962 ;; Defined at:
 24963 ;;		line 195 in file "mcc_generated_files/uart2.c"
 24964 ;; Parameters:    Size  Location     Type
 24965 ;;		None
 24966 ;; Auto vars:     Size  Location     Type
 24967 ;;		None
 24968 ;; Return value:  Size  Location     Type
 24969 ;;                  1    wreg      void 
 24970 ;; Registers used:
 24971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24972 ;; Tracked objects:
 24973 ;;		On entry : 0/0
 24974 ;;		On exit  : 0/0
 24975 ;;		Unchanged: 0/0
 24976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24981 ;;Total ram usage:        0 bytes
 24982 ;; Hardware stack levels used:    1
 24983 ;; Hardware stack levels required when called:    1
 24984 ;; This function calls:
 24985 ;;		Absolute function
 24986 ;;		_UART2_Transmit_ISR
 24987 ;; This function is called by:
 24988 ;;		Interrupt level 2
 24989 ;; This function uses a non-reentrant model
 24990 ;;
 24991                           
 24992                           	psect	text130
 24993  0181CC                     __ptext130:
 24994                           	opt callstack 0
 24995  0181CC                     _UART2_tx_vect_isr:
 24996                           	opt callstack 13
 24997                           
 24998                           ;incstack = 0
 24999  0181CC  EE13  F356         	lfsr	1,___inthi_sp
 25000                           
 25001                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25002  0181D0  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 25003  0181D2  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25004  0181D4  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25005  0181D6  B4D8               	btfsc	status,2,c
 25006  0181D8  0011               	retfie		f
 25007                           
 25008                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25009  0181DA  D801               	call	i2u1002_48
 25010  0181DC  0011               	retfie		f
 25011  0181DE                     i2u1002_48:
 25012  0181DE  0005               	push	
 25013  0181E0  6EFA               	movwf	pclath,c
 25014  0181E2  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 25015  0181E4  6EFD               	movwf	tosl,c
 25016  0181E6  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25017  0181E8  6EFE               	movwf	tosh,c
 25018  0181EA  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25019  0181EC  6EFF               	movwf	tosu,c
 25020  0181EE  50FA               	movf	pclath,w,c
 25021  0181F0  0012               	return		;indir
 25022  0181F2                     __end_of_UART2_tx_vect_isr:
 25023                           	opt callstack 0
 25024                           
 25025 ;; *************** function _UART2_Transmit_ISR *****************
 25026 ;; Defined at:
 25027 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25028 ;; Parameters:    Size  Location     Type
 25029 ;;		None
 25030 ;; Auto vars:     Size  Location     Type
 25031 ;;		None
 25032 ;; Return value:  Size  Location     Type
 25033 ;;                  1  [STACK] void 
 25034 ;; Registers used:
 25035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25036 ;; Tracked objects:
 25037 ;;		On entry : 0/0
 25038 ;;		On exit  : 3B/39
 25039 ;;		Unchanged: 0/0
 25040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25045 ;;Total ram usage:        0 bytes
 25046 ;; Hardware stack levels used:    1
 25047 ;; This function calls:
 25048 ;;		Nothing
 25049 ;; This function is called by:
 25050 ;;		_UART2_Initialize
 25051 ;;		_UART2_tx_vect_isr
 25052 ;; This function uses a reentrant model
 25053 ;;
 25054                           
 25055                           	psect	text131
 25056  017F1E                     __ptext131:
 25057                           	opt callstack 0
 25058  017F1E                     _UART2_Transmit_ISR:
 25059                           	opt callstack 13
 25060                           
 25061                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25062                           
 25063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25064                           ;incstack = 0
 25065  017F1E  0E40               	movlw	64
 25066  017F20  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 25067  017F22  D010               	goto	l701
 25068                           
 25069                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25070  017F24  0E00               	movlw	low _uart2TxBuffer
 25071  017F26  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 25072  017F28  6ED9               	movwf	fsr2l,c
 25073  017F2A  6ADA               	clrf	fsr2h,c
 25074  017F2C  0E03               	movlw	high _uart2TxBuffer
 25075  017F2E  22DA               	addwfc	fsr2h,f,c
 25076  017F30  50DF               	movf	indf2,w,c
 25077  017F32  013D               	movlb	61	; () banked
 25078  017F34  6FD2               	movwf	210,b	;volatile
 25079                           
 25080                           ; BSR set to: 61
 25081  017F36  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 25082                           
 25083                           ; BSR set to: 61
 25084                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25085  017F38  0E3F               	movlw	63
 25086  017F3A  642D               	cpfsgt	_uart2TxTail^0,c
 25087  017F3C  D001               	goto	l8424
 25088                           
 25089                           ; BSR set to: 61
 25090                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25091  017F3E  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 25092  017F40                     l8424:
 25093                           
 25094                           ; BSR set to: 61
 25095                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25096  017F40  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25097                           
 25098                           ;mcc_generated_files/uart2.c: 224:     }
 25099  017F42  0012               	return	
 25100  017F44                     l701:
 25101                           
 25102                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25103  017F44  0139               	movlb	57	; () banked
 25104  017F46  9796               	bcf	150,3,b	;volatile
 25105                           
 25106                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25107  017F48  0012               	return		;funcret
 25108  017F4A                     __end_of_UART2_Transmit_ISR:
 25109                           	opt callstack 0
 25110                           
 25111 ;; *************** function _UART2_rx_vect_isr *****************
 25112 ;; Defined at:
 25113 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25114 ;; Parameters:    Size  Location     Type
 25115 ;;		None
 25116 ;; Auto vars:     Size  Location     Type
 25117 ;;		None
 25118 ;; Return value:  Size  Location     Type
 25119 ;;                  1    wreg      void 
 25120 ;; Registers used:
 25121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25122 ;; Tracked objects:
 25123 ;;		On entry : 0/0
 25124 ;;		On exit  : 0/0
 25125 ;;		Unchanged: 0/0
 25126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25131 ;;Total ram usage:        0 bytes
 25132 ;; Hardware stack levels used:    1
 25133 ;; Hardware stack levels required when called:    1
 25134 ;; This function calls:
 25135 ;;		Absolute function
 25136 ;;		_UART2_Receive_ISR
 25137 ;; This function is called by:
 25138 ;;		Interrupt level 2
 25139 ;; This function uses a non-reentrant model
 25140 ;;
 25141                           
 25142                           	psect	text132
 25143  0181F4                     __ptext132:
 25144                           	opt callstack 0
 25145  0181F4                     _UART2_rx_vect_isr:
 25146                           	opt callstack 13
 25147                           
 25148                           ;incstack = 0
 25149  0181F4  EE13  F356         	lfsr	1,___inthi_sp
 25150                           
 25151                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25152  0181F8  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 25153  0181FA  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 25154  0181FC  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25155  0181FE  B4D8               	btfsc	status,2,c
 25156  018200  0011               	retfie		f
 25157                           
 25158                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25159  018202  D801               	call	i2u1004_48
 25160  018204  0011               	retfie		f
 25161  018206                     i2u1004_48:
 25162  018206  0005               	push	
 25163  018208  6EFA               	movwf	pclath,c
 25164  01820A  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 25165  01820C  6EFD               	movwf	tosl,c
 25166  01820E  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25167  018210  6EFE               	movwf	tosh,c
 25168  018212  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25169  018214  6EFF               	movwf	tosu,c
 25170  018216  50FA               	movf	pclath,w,c
 25171  018218  0012               	return		;indir
 25172  01821A                     __end_of_UART2_rx_vect_isr:
 25173                           	opt callstack 0
 25174                           
 25175 ;; *************** function _UART2_Receive_ISR *****************
 25176 ;; Defined at:
 25177 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25178 ;; Parameters:    Size  Location     Type
 25179 ;;		None
 25180 ;; Auto vars:     Size  Location     Type
 25181 ;;		None
 25182 ;; Return value:  Size  Location     Type
 25183 ;;                  1  [STACK] void 
 25184 ;; Registers used:
 25185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25186 ;; Tracked objects:
 25187 ;;		On entry : 0/0
 25188 ;;		On exit  : 0/0
 25189 ;;		Unchanged: 0/0
 25190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25195 ;;Total ram usage:        0 bytes
 25196 ;; Hardware stack levels used:    1
 25197 ;; This function calls:
 25198 ;;		Nothing
 25199 ;; This function is called by:
 25200 ;;		_UART2_Initialize
 25201 ;;		_UART2_rx_vect_isr
 25202 ;; This function uses a reentrant model
 25203 ;;
 25204                           
 25205                           	psect	text133
 25206  01835E                     __ptext133:
 25207                           	opt callstack 0
 25208  01835E                     _UART2_Receive_ISR:
 25209                           	opt callstack 13
 25210                           
 25211                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25212                           
 25213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25214                           ;incstack = 0
 25215  01835E  0E00               	movlw	low _uart2RxBuffer
 25216  018360  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 25217  018362  6ED9               	movwf	fsr2l,c
 25218  018364  6ADA               	clrf	fsr2h,c
 25219  018366  0E06               	movlw	high _uart2RxBuffer
 25220  018368  22DA               	addwfc	fsr2h,f,c
 25221  01836A  006F F743 FFDF     	movff	15824,indf2	;volatile
 25222  018370  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 25223                           
 25224                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25225  018372  282B               	incf	_uart2RxHead^0,w,c
 25226  018374  B4D8               	btfsc	status,2,c
 25227                           
 25228                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25229  018376  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 25230                           
 25231                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25232  018378  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 25233                           
 25234                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25235  01837A  0012               	return		;funcret
 25236  01837C                     __end_of_UART2_Receive_ISR:
 25237                           	opt callstack 0
 25238                           
 25239 ;; *************** function _TMR6_ISR *****************
 25240 ;; Defined at:
 25241 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25242 ;; Parameters:    Size  Location     Type
 25243 ;;		None
 25244 ;; Auto vars:     Size  Location     Type
 25245 ;;		None
 25246 ;; Return value:  Size  Location     Type
 25247 ;;                  1    wreg      void 
 25248 ;; Registers used:
 25249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25250 ;; Tracked objects:
 25251 ;;		On entry : 0/0
 25252 ;;		On exit  : 0/0
 25253 ;;		Unchanged: 0/0
 25254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25258 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25259 ;;Total ram usage:        1 bytes
 25260 ;; Hardware stack levels used:    1
 25261 ;; Hardware stack levels required when called:    2
 25262 ;; This function calls:
 25263 ;;		_TMR6_CallBack
 25264 ;; This function is called by:
 25265 ;;		Interrupt level 2
 25266 ;; This function uses a non-reentrant model
 25267 ;;
 25268                           
 25269                           	psect	text134
 25270  0183E8                     __ptext134:
 25271                           	opt callstack 0
 25272  0183E8                     _TMR6_ISR:
 25273                           	opt callstack 12
 25274                           
 25275                           ;incstack = 0
 25276  0183E8  0060  F0D4  F0E4   	movff	btemp,??_TMR6_ISR
 25277  0183EE  EE13  F356         	lfsr	1,___inthi_sp
 25278                           
 25279                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25280  0183F2  0139               	movlb	57	; () banked
 25281  0183F4  91A9               	bcf	169,0,b	;volatile
 25282                           
 25283                           ; BSR set to: 57
 25284                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25285  0183F6  EC53  F0C1         	call	_TMR6_CallBack	;wreg free
 25286  0183FA  0060  F390  F035   	movff	??_TMR6_ISR,btemp
 25287  018400  0011               	retfie		f
 25288  018402                     __end_of_TMR6_ISR:
 25289                           	opt callstack 0
 25290                           
 25291 ;; *************** function _TMR6_CallBack *****************
 25292 ;; Defined at:
 25293 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25294 ;; Parameters:    Size  Location     Type
 25295 ;;		None
 25296 ;; Auto vars:     Size  Location     Type
 25297 ;;		None
 25298 ;; Return value:  Size  Location     Type
 25299 ;;                  1  [STACK] void 
 25300 ;; Registers used:
 25301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25302 ;; Tracked objects:
 25303 ;;		On entry : 3F/39
 25304 ;;		On exit  : 0/0
 25305 ;;		Unchanged: 0/0
 25306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25311 ;;Total ram usage:        0 bytes
 25312 ;; Hardware stack levels used:    1
 25313 ;; Hardware stack levels required when called:    1
 25314 ;; This function calls:
 25315 ;;		Absolute function
 25316 ;;		_TMR6_DefaultInterruptHandler
 25317 ;; This function is called by:
 25318 ;;		_TMR6_ISR
 25319 ;; This function uses a reentrant model
 25320 ;;
 25321                           
 25322                           	psect	text135
 25323  0182A6                     __ptext135:
 25324                           	opt callstack 0
 25325  0182A6                     _TMR6_CallBack:
 25326                           	opt callstack 12
 25327                           
 25328                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25329                           
 25330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25331                           ;incstack = 0
 25332  0182A6  5001               	movf	_TMR6_InterruptHandler^0,w,c
 25333  0182A8  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 25334  0182AA  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 25335  0182AC  B4D8               	btfsc	status,2,c
 25336  0182AE  0012               	return	
 25337                           
 25338                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 25339  0182B0  D801               	call	u797_48
 25340  0182B2  0012               	return	
 25341  0182B4                     u797_48:
 25342  0182B4  0005               	push	
 25343  0182B6  6EFA               	movwf	pclath,c
 25344  0182B8  5001               	movf	_TMR6_InterruptHandler^0,w,c
 25345  0182BA  6EFD               	movwf	tosl,c
 25346  0182BC  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 25347  0182BE  6EFE               	movwf	tosh,c
 25348  0182C0  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 25349  0182C2  6EFF               	movwf	tosu,c
 25350  0182C4  50FA               	movf	pclath,w,c
 25351  0182C6  0012               	return		;indir
 25352  0182C8                     __end_of_TMR6_CallBack:
 25353                           	opt callstack 0
 25354                           
 25355 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25356 ;; Defined at:
 25357 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 25358 ;; Parameters:    Size  Location     Type
 25359 ;;		None
 25360 ;; Auto vars:     Size  Location     Type
 25361 ;;  i               1  [STACK] unsigned char 
 25362 ;; Return value:  Size  Location     Type
 25363 ;;                  1  [STACK] void 
 25364 ;; Registers used:
 25365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25366 ;; Tracked objects:
 25367 ;;		On entry : 0/39
 25368 ;;		On exit  : 0/0
 25369 ;;		Unchanged: 0/0
 25370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25375 ;;Total ram usage:        0 bytes
 25376 ;; Hardware stack levels used:    1
 25377 ;; This function calls:
 25378 ;;		Nothing
 25379 ;; This function is called by:
 25380 ;;		_TMR6_Initialize
 25381 ;;		_TMR6_CallBack
 25382 ;; This function uses a reentrant model
 25383 ;;
 25384                           
 25385                           	psect	text136
 25386  017B64                     __ptext136:
 25387                           	opt callstack 0
 25388  017B64                     _TMR6_DefaultInterruptHandler:
 25389                           	opt callstack 0
 25390                           
 25391                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25392  017B64  52E6               	movf	postinc1,f,c
 25393                           
 25394                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 25395                           ;stkvar	_i @ sp[(-1)+0]
 25396                           
 25397                           ;incstack = 0
 25398  017B66  0EFF               	movlw	-1
 25399  017B68  6AE3               	clrf	plusw1,c
 25400  017B6A                     l8186:
 25401                           
 25402                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 25403                           ;stkvar	_i @ sp[(-1)+0]
 25404  017B6A  0EFF               	movlw	-1
 25405  017B6C  50E3               	movf	plusw1,w,c
 25406  017B6E  0D02               	mullw	2
 25407  017B70  50F3               	movf	243,w,c
 25408  017B72  0F60               	addlw	low _tickCount
 25409  017B74  6ED9               	movwf	fsr2l,c
 25410  017B76  6ADA               	clrf	fsr2h,c
 25411  017B78  50DE               	movf	postinc2,w,c
 25412  017B7A  10DE               	iorwf	postinc2,w,c
 25413  017B7C  B4D8               	btfsc	status,2,c
 25414  017B7E  D00A               	goto	l8190
 25415                           
 25416                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 25417                           ;stkvar	_i @ sp[(-1)+0]
 25418  017B80  0EFF               	movlw	-1
 25419  017B82  50E3               	movf	plusw1,w,c
 25420  017B84  0D02               	mullw	2
 25421  017B86  50F3               	movf	243,w,c
 25422  017B88  0F60               	addlw	low _tickCount
 25423  017B8A  6ED9               	movwf	fsr2l,c
 25424  017B8C  6ADA               	clrf	fsr2h,c
 25425  017B8E  06DE               	decf	postinc2,f,c
 25426  017B90  0E00               	movlw	0
 25427  017B92  5ADD               	subwfb	postdec2,f,c
 25428  017B94                     l8190:
 25429                           
 25430                           ;mcc_generated_files/tmr6.c: 207:  }
 25431                           ;stkvar	_i @ sp[(-1)+0]
 25432  017B94  0EFF               	movlw	-1
 25433  017B96  2AE3               	incf	plusw1,f,c
 25434                           
 25435                           ;stkvar	_i @ sp[(-1)+0]
 25436  017B98  0EFF               	movlw	-1
 25437  017B9A  006F FF8C  F035    	movff	plusw1,btemp
 25438  017BA0  0E0B               	movlw	11
 25439  017BA2  6435               	cpfsgt	btemp^0,c
 25440  017BA4  D7E2               	goto	l8186
 25441                           
 25442                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25443  017BA6  52E5               	movf	postdec1,f,c
 25444  017BA8  0012               	return		;funcret
 25445  017BAA                     __end_of_TMR6_DefaultInterruptHandler:
 25446                           	opt callstack 0
 25447                           
 25448 ;; *************** function _DMA1_DMASCNT_ISR *****************
 25449 ;; Defined at:
 25450 ;;		line 126 in file "mcc_generated_files/dma1.c"
 25451 ;; Parameters:    Size  Location     Type
 25452 ;;		None
 25453 ;; Auto vars:     Size  Location     Type
 25454 ;;		None
 25455 ;; Return value:  Size  Location     Type
 25456 ;;                  1    wreg      void 
 25457 ;; Registers used:
 25458 ;;		None
 25459 ;; Tracked objects:
 25460 ;;		On entry : 0/0
 25461 ;;		On exit  : 3F/0
 25462 ;;		Unchanged: 0/0
 25463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25468 ;;Total ram usage:        0 bytes
 25469 ;; Hardware stack levels used:    1
 25470 ;; This function calls:
 25471 ;;		Nothing
 25472 ;; This function is called by:
 25473 ;;		Interrupt level 2
 25474 ;; This function uses a non-reentrant model
 25475 ;;
 25476                           
 25477                           	psect	text137
 25478  0184E8                     __ptext137:
 25479                           	opt callstack 0
 25480  0184E8                     _DMA1_DMASCNT_ISR:
 25481                           	opt callstack 14
 25482                           
 25483                           ;incstack = 0
 25484  0184E8  EE13  F356         	lfsr	1,___inthi_sp
 25485                           
 25486                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 25487  0184EC  0139               	movlb	57	; () banked
 25488  0184EE  91A2               	bcf	162,0,b	;volatile
 25489                           
 25490                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 25491  0184F0  0100               	movlb	0	; () banked
 25492  0184F2  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 25493                           
 25494                           ; BSR set to: 0
 25495  0184F4  0011               	retfie		f
 25496  0184F6                     __end_of_DMA1_DMASCNT_ISR:
 25497                           	opt callstack 0
 25498                           
 25499 ;; *************** function _DMA1_DMADCNT_ISR *****************
 25500 ;; Defined at:
 25501 ;;		line 134 in file "mcc_generated_files/dma1.c"
 25502 ;; Parameters:    Size  Location     Type
 25503 ;;		None
 25504 ;; Auto vars:     Size  Location     Type
 25505 ;;		None
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  1    wreg      void 
 25508 ;; Registers used:
 25509 ;;		None
 25510 ;; Tracked objects:
 25511 ;;		On entry : 0/0
 25512 ;;		On exit  : 3F/39
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25519 ;;Total ram usage:        0 bytes
 25520 ;; Hardware stack levels used:    1
 25521 ;; This function calls:
 25522 ;;		Nothing
 25523 ;; This function is called by:
 25524 ;;		Interrupt level 2
 25525 ;; This function uses a non-reentrant model
 25526 ;;
 25527                           
 25528                           	psect	text138
 25529  018500                     __ptext138:
 25530                           	opt callstack 0
 25531  018500                     _DMA1_DMADCNT_ISR:
 25532                           	opt callstack 14
 25533                           
 25534                           ; BSR set to: 0
 25535                           ;incstack = 0
 25536  018500  EE13  F356         	lfsr	1,___inthi_sp
 25537                           
 25538                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 25539  018504  0139               	movlb	57	; () banked
 25540  018506  93A2               	bcf	162,1,b	;volatile
 25541                           
 25542                           ; BSR set to: 57
 25543  018508  0011               	retfie		f
 25544  01850A                     __end_of_DMA1_DMADCNT_ISR:
 25545                           	opt callstack 0
 25546                           
 25547 ;; *************** function _DMA1_DMAA_ISR *****************
 25548 ;; Defined at:
 25549 ;;		line 144 in file "mcc_generated_files/dma1.c"
 25550 ;; Parameters:    Size  Location     Type
 25551 ;;		None
 25552 ;; Auto vars:     Size  Location     Type
 25553 ;;		None
 25554 ;; Return value:  Size  Location     Type
 25555 ;;                  1    wreg      void 
 25556 ;; Registers used:
 25557 ;;		None
 25558 ;; Tracked objects:
 25559 ;;		On entry : 0/0
 25560 ;;		On exit  : 3F/39
 25561 ;;		Unchanged: 0/0
 25562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25567 ;;Total ram usage:        0 bytes
 25568 ;; Hardware stack levels used:    1
 25569 ;; This function calls:
 25570 ;;		Nothing
 25571 ;; This function is called by:
 25572 ;;		Interrupt level 2
 25573 ;; This function uses a non-reentrant model
 25574 ;;
 25575                           
 25576                           	psect	text139
 25577  01850C                     __ptext139:
 25578                           	opt callstack 0
 25579  01850C                     _DMA1_DMAA_ISR:
 25580                           	opt callstack 14
 25581                           
 25582                           ; BSR set to: 57
 25583                           ;incstack = 0
 25584  01850C  EE13  F356         	lfsr	1,___inthi_sp
 25585                           
 25586                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 25587  018510  0139               	movlb	57	; () banked
 25588  018512  97A2               	bcf	162,3,b	;volatile
 25589                           
 25590                           ; BSR set to: 57
 25591  018514  0011               	retfie		f
 25592  018516                     __end_of_DMA1_DMAA_ISR:
 25593                           	opt callstack 0
 25594                           
 25595 ;; *************** function _DMA1_DMAOR_ISR *****************
 25596 ;; Defined at:
 25597 ;;		line 155 in file "mcc_generated_files/dma1.c"
 25598 ;; Parameters:    Size  Location     Type
 25599 ;;		None
 25600 ;; Auto vars:     Size  Location     Type
 25601 ;;		None
 25602 ;; Return value:  Size  Location     Type
 25603 ;;                  1    wreg      void 
 25604 ;; Registers used:
 25605 ;;		None
 25606 ;; Tracked objects:
 25607 ;;		On entry : 0/0
 25608 ;;		On exit  : 3F/39
 25609 ;;		Unchanged: 0/0
 25610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25615 ;;Total ram usage:        0 bytes
 25616 ;; Hardware stack levels used:    1
 25617 ;; This function calls:
 25618 ;;		Nothing
 25619 ;; This function is called by:
 25620 ;;		Interrupt level 2
 25621 ;; This function uses a non-reentrant model
 25622 ;;
 25623                           
 25624                           	psect	text140
 25625  018518                     __ptext140:
 25626                           	opt callstack 0
 25627  018518                     _DMA1_DMAOR_ISR:
 25628                           	opt callstack 14
 25629                           
 25630                           ; BSR set to: 57
 25631                           ;incstack = 0
 25632  018518  EE13  F356         	lfsr	1,___inthi_sp
 25633                           
 25634                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 25635  01851C  0139               	movlb	57	; () banked
 25636  01851E  95A2               	bcf	162,2,b	;volatile
 25637                           
 25638                           ; BSR set to: 57
 25639  018520  0011               	retfie		f
 25640  018522                     __end_of_DMA1_DMAOR_ISR:
 25641                           	opt callstack 0
 25642                           
 25643                           ;
 25644                           ; Interrupt Vector Table @ 0x8
 25645                           ;
 25646                           
 25647                           	psect	ivt0x8
 25648  000008                     __pivt0x8:
 25649                           	opt callstack 0
 25650  000008                     ivt0x8_base:
 25651                           	opt callstack 0
 25652                           
 25653                           ; Vector 0 : SWINT
 25654  000008  6155               	dw	_Default_ISR shr (0+2)
 25655                           
 25656                           ; Vector 1 : HLVD
 25657  00000A  6155               	dw	_Default_ISR shr (0+2)
 25658                           
 25659                           ; Vector 2 : OSF
 25660  00000C  6155               	dw	_Default_ISR shr (0+2)
 25661                           
 25662                           ; Vector 3 : CSW
 25663  00000E  6155               	dw	_Default_ISR shr (0+2)
 25664                           
 25665                           ; Vector 4 : NVM
 25666  000010  6155               	dw	_Default_ISR shr (0+2)
 25667                           
 25668                           ; Vector 5 : SCAN
 25669  000012  6155               	dw	_Default_ISR shr (0+2)
 25670                           
 25671                           ; Vector 6 : CRC
 25672  000014  6155               	dw	_Default_ISR shr (0+2)
 25673                           
 25674                           ; Vector 7 : IOC
 25675  000016  6155               	dw	_Default_ISR shr (0+2)
 25676                           
 25677                           ; Vector 8 : INT0
 25678  000018  6132               	dw	_INT0_ISR shr (0+2)
 25679                           
 25680                           ; Vector 9 : ZCD
 25681  00001A  6155               	dw	_Default_ISR shr (0+2)
 25682                           
 25683                           ; Vector 10 : AD
 25684  00001C  5F4A               	dw	_ADCC_ISR shr (0+2)
 25685                           
 25686                           ; Vector 11 : ADT
 25687  00001E  5D66               	dw	_ADCC_ThresholdISR shr (0+2)
 25688                           
 25689                           ; Vector 12 : CMP1
 25690  000020  6155               	dw	_Default_ISR shr (0+2)
 25691                           
 25692                           ; Vector 13 : SMT1
 25693  000022  6155               	dw	_Default_ISR shr (0+2)
 25694                           
 25695                           ; Vector 14 : SMT1PRA
 25696  000024  6155               	dw	_Default_ISR shr (0+2)
 25697                           
 25698                           ; Vector 15 : SMT1PRW
 25699  000026  6155               	dw	_Default_ISR shr (0+2)
 25700                           
 25701                           ; Vector 16 : DMA1SCNT
 25702  000028  613A               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 25703                           
 25704                           ; Vector 17 : DMA1DCNT
 25705  00002A  6140               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 25706                           
 25707                           ; Vector 18 : DMA1OR
 25708  00002C  6146               	dw	_DMA1_DMAOR_ISR shr (0+2)
 25709                           
 25710                           ; Vector 19 : DMA1A
 25711  00002E  6143               	dw	_DMA1_DMAA_ISR shr (0+2)
 25712                           
 25713                           ; Vector 20 : SPI1RX
 25714  000030  6155               	dw	_Default_ISR shr (0+2)
 25715                           
 25716                           ; Vector 21 : SPI1TX
 25717  000032  6155               	dw	_Default_ISR shr (0+2)
 25718                           
 25719                           ; Vector 22 : SPI1
 25720  000034  6155               	dw	_Default_ISR shr (0+2)
 25721                           
 25722                           ; Vector 23 : I2C1RX
 25723  000036  6155               	dw	_Default_ISR shr (0+2)
 25724                           
 25725                           ; Vector 24 : I2C1TX
 25726  000038  6155               	dw	_Default_ISR shr (0+2)
 25727                           
 25728                           ; Vector 25 : I2C1
 25729  00003A  6155               	dw	_Default_ISR shr (0+2)
 25730                           
 25731                           ; Vector 26 : I2C1E
 25732  00003C  6155               	dw	_Default_ISR shr (0+2)
 25733                           
 25734                           ; Vector 27 : U1RX
 25735  00003E  6069               	dw	_UART1_rx_vect_isr shr (0+2)
 25736                           
 25737                           ; Vector 28 : U1TX
 25738  000040  605F               	dw	_UART1_tx_vect_isr shr (0+2)
 25739                           
 25740                           ; Vector 29 : U1E
 25741  000042  6155               	dw	_Default_ISR shr (0+2)
 25742                           
 25743                           ; Vector 30 : U1
 25744  000044  6155               	dw	_Default_ISR shr (0+2)
 25745                           
 25746                           ; Vector 31 : TMR0
 25747  000046  6155               	dw	_Default_ISR shr (0+2)
 25748                           
 25749                           ; Vector 32 : TMR1
 25750  000048  6155               	dw	_Default_ISR shr (0+2)
 25751                           
 25752                           ; Vector 33 : TMR1G
 25753  00004A  6155               	dw	_Default_ISR shr (0+2)
 25754                           
 25755                           ; Vector 34 : TMR2
 25756  00004C  6155               	dw	_Default_ISR shr (0+2)
 25757                           
 25758                           ; Vector 35 : CCP1
 25759  00004E  6155               	dw	_Default_ISR shr (0+2)
 25760                           
 25761                           ; Vector 36 : Undefined
 25762  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 25763                           
 25764                           ; Vector 37 : NCO1
 25765  000052  6155               	dw	_Default_ISR shr (0+2)
 25766                           
 25767                           ; Vector 38 : CWG1
 25768  000054  6155               	dw	_Default_ISR shr (0+2)
 25769                           
 25770                           ; Vector 39 : CLC1
 25771  000056  6155               	dw	_Default_ISR shr (0+2)
 25772                           
 25773                           ; Vector 40 : INT1
 25774  000058  6136               	dw	_INT1_ISR shr (0+2)
 25775                           
 25776                           ; Vector 41 : CMP2
 25777  00005A  6155               	dw	_Default_ISR shr (0+2)
 25778                           
 25779                           ; Vector 42 : DMA2SCNT
 25780  00005C  6155               	dw	_Default_ISR shr (0+2)
 25781                           
 25782                           ; Vector 43 : DMA2DCNT
 25783  00005E  6155               	dw	_Default_ISR shr (0+2)
 25784                           
 25785                           ; Vector 44 : DMA2OR
 25786  000060  6155               	dw	_Default_ISR shr (0+2)
 25787                           
 25788                           ; Vector 45 : DMA2A
 25789  000062  6155               	dw	_Default_ISR shr (0+2)
 25790                           
 25791                           ; Vector 46 : I2C2RX
 25792  000064  6155               	dw	_Default_ISR shr (0+2)
 25793                           
 25794                           ; Vector 47 : I2C2TX
 25795  000066  6155               	dw	_Default_ISR shr (0+2)
 25796                           
 25797                           ; Vector 48 : I2C2
 25798  000068  6155               	dw	_Default_ISR shr (0+2)
 25799                           
 25800                           ; Vector 49 : I2C2E
 25801  00006A  6155               	dw	_Default_ISR shr (0+2)
 25802                           
 25803                           ; Vector 50 : U2RX
 25804  00006C  607D               	dw	_UART2_rx_vect_isr shr (0+2)
 25805                           
 25806                           ; Vector 51 : U2TX
 25807  00006E  6073               	dw	_UART2_tx_vect_isr shr (0+2)
 25808                           
 25809                           ; Vector 52 : U2E
 25810  000070  6155               	dw	_Default_ISR shr (0+2)
 25811                           
 25812                           ; Vector 53 : U2
 25813  000072  6155               	dw	_Default_ISR shr (0+2)
 25814                           
 25815                           ; Vector 54 : TMR3
 25816  000074  6155               	dw	_Default_ISR shr (0+2)
 25817                           
 25818                           ; Vector 55 : TMR3G
 25819  000076  6155               	dw	_Default_ISR shr (0+2)
 25820                           
 25821                           ; Vector 56 : TMR4
 25822  000078  6155               	dw	_Default_ISR shr (0+2)
 25823                           
 25824                           ; Vector 57 : CCP2
 25825  00007A  6155               	dw	_Default_ISR shr (0+2)
 25826                           
 25827                           ; Vector 58 : Undefined
 25828  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 25829                           
 25830                           ; Vector 59 : CWG2
 25831  00007E  6155               	dw	_Default_ISR shr (0+2)
 25832                           
 25833                           ; Vector 60 : CLC2
 25834  000080  6155               	dw	_Default_ISR shr (0+2)
 25835                           
 25836                           ; Vector 61 : INT2
 25837  000082  6155               	dw	_Default_ISR shr (0+2)
 25838                           
 25839                           ; Vector 62 : Undefined
 25840  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 25841                           
 25842                           ; Vector 63 : Undefined
 25843  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 25844                           
 25845                           ; Vector 64 : Undefined
 25846  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 25847                           
 25848                           ; Vector 65 : Undefined
 25849  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 25850                           
 25851                           ; Vector 66 : Undefined
 25852  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 25853                           
 25854                           ; Vector 67 : Undefined
 25855  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 25856                           
 25857                           ; Vector 68 : Undefined
 25858  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 25859                           
 25860                           ; Vector 69 : Undefined
 25861  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 25862                           
 25863                           ; Vector 70 : TMR5
 25864  000094  5E14               	dw	_TMR5_ISR shr (0+2)
 25865                           
 25866                           ; Vector 71 : TMR5G
 25867  000096  6155               	dw	_Default_ISR shr (0+2)
 25868                           
 25869                           ; Vector 72 : TMR6
 25870  000098  60FA               	dw	_TMR6_ISR shr (0+2)
 25871                           
 25872                           ; Vector 73 : CCP3
 25873  00009A  6155               	dw	_Default_ISR shr (0+2)
 25874                           
 25875                           ; Vector 74 : CWG3
 25876  00009C  6155               	dw	_Default_ISR shr (0+2)
 25877                           
 25878                           ; Vector 75 : CLC3
 25879  00009E  6155               	dw	_Default_ISR shr (0+2)
 25880                           
 25881                           ; Vector 76 : Undefined
 25882  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 25883                           
 25884                           ; Vector 77 : Undefined
 25885  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 25886                           
 25887                           ; Vector 78 : Undefined
 25888  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 25889                           
 25890                           ; Vector 79 : Undefined
 25891  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 25892                           
 25893                           ; Vector 80 : CCP4
 25894  0000A8  6155               	dw	_Default_ISR shr (0+2)
 25895                           
 25896                           ; Vector 81 : CLC4
 25897  0000AA  6155               	dw	_Default_ISR shr (0+2)
 25898  0000AC                     ivt0x8_undefint:
 25899                           	opt callstack 0
 25900  0000AC  00FF               	reset	
 25901                           
 25902                           	psect	text141
 25903  000000                     __ptext141:
 25904                           	opt callstack 0
 25905                           
 25906                           	psect	param0
 25907  0000                     
 25908                           	psect	temp
 25909  000035                     btemp:
 25910                           	opt callstack 0
 25911  000035                     	ds	32
 25912  0000                     wtemp0	set	btemp
 25913  0000                     wtemp1	set	btemp+2
 25914  0000                     wtemp2	set	btemp+4
 25915  0000                     wtemp3	set	btemp+6
 25916  0000                     wtemp4	set	btemp+8
 25917  0000                     wtemp5	set	btemp+10
 25918  0000                     wtemp8	set	btemp+1
 25919  0000                     ttemp0	set	btemp
 25920  0000                     ttemp1	set	btemp+3
 25921  0000                     ttemp2	set	btemp+6
 25922  0000                     ttemp3	set	btemp+9
 25923  0000                     ttemp5	set	btemp+1
 25924  0000                     ttemp6	set	btemp+4
 25925  0000                     ttemp7	set	btemp+8
 25926  0000                     ltemp0	set	btemp
 25927  0000                     ltemp1	set	btemp+4
 25928  0000                     ltemp2	set	btemp+8
 25929  0000                     lltemp0	set	btemp
 25930  0000                     lltemp1	set	btemp+8
 25931  0000                     lltemp2	set	btemp+16
 25932  0000                     lltemp3	set	btemp+24
 25933                           tosu	equ	0x3FFF
 25934                           tosh	equ	0x3FFE
 25935                           tosl	equ	0x3FFD
 25936                           stkptr	equ	0x3FFC
 25937                           pclatu	equ	0x3FFB
 25938                           pclath	equ	0x3FFA
 25939                           pcl	equ	0x3FF9
 25940                           tblptru	equ	0x3FF8
 25941                           tblptrh	equ	0x3FF7
 25942                           tblptrl	equ	0x3FF6
 25943                           tablat	equ	0x3FF5
 25944                           prodh	equ	0x3FF4
 25945                           prodl	equ	0x3FF3
 25946                           indf0	equ	0x3FEF
 25947                           postinc0	equ	0x3FEE
 25948                           postdec0	equ	0x3FED
 25949                           preinc0	equ	0x3FEC
 25950                           plusw0	equ	0x3FEB
 25951                           fsr0h	equ	0x3FEA
 25952                           fsr0l	equ	0x3FE9
 25953                           wreg	equ	0x3FE8
 25954                           indf1	equ	0x3FE7
 25955                           postinc1	equ	0x3FE6
 25956                           postdec1	equ	0x3FE5
 25957                           preinc1	equ	0x3FE4
 25958                           plusw1	equ	0x3FE3
 25959                           fsr1h	equ	0x3FE2
 25960                           fsr1l	equ	0x3FE1
 25961                           bsr	equ	0x3FE0
 25962                           indf2	equ	0x3FDF
 25963                           postinc2	equ	0x3FDE
 25964                           postdec2	equ	0x3FDD
 25965                           preinc2	equ	0x3FDC
 25966                           plusw2	equ	0x3FDB
 25967                           fsr2h	equ	0x3FDA
 25968                           fsr2l	equ	0x3FD9
 25969                           status	equ	0x3FD8


Data Sizes:
    Strings     252
    Constant    144
    Data        254
    BSS         1353
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     137
    BANK1           256      0     244
    BANK2           256      0     253
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_32(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4705_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  292088
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                    _conv_raw_result
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                            6     0      6    6733
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _conv_raw_result                                      2     0      2    5116
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (2) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F4       7       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      89       5       85.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     652      58        0.0%
DATA                 0      0     652       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov  8 15:15:28 2019

                    _SPI1_Exchange8bit 82C8               __end_of_set_display_info 8322  
                                    _C 0100                                      _D 0400  
                                    _R 00A3                                      _T FE73  
                                    _V 0200       __end_of_TMR5_SetInterruptHandler 80DC  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 8542                            __CFG_LVP$ON 000000  
                                  l171 846E                                    l701 7F44  
                                  l581 7F18                                    l835 82D6  
                                  _GIE 01FE97                                    _abs 7A92  
                                  _pad 6718                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 841A                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 8262                     _UART1_Transmit_ISR 7EF2  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 8284  
                         __CFG_ZCD$OFF 000000                                   l1028 7CAC  
                                 l1242 2DAC                                   l1251 2F58  
                                 l2230 6D82                                   l1328 78B6  
                                 l1601 831E                                   l2241 6256  
                                 l2234 6182                                   l1544 7D0A  
                                 l1464 6EEC                                   l2520 2BEE  
                                 l1561 6936                                   l1553 58CA  
                                 l1483 7D78                                   l1651 41B0  
                                 l2508 2D5E                                   l2268 60F4  
                                 l1468 729C                                   l1557 5A26  
                                 l1822 066A                                   l1737 6774  
                                 l2553 391E                                   l2801 5DEC  
                                 l2660 7AD2                                   l6100 2BD2  
                                 l2652 5F82                                   l1757 3A06  
                                 l1837 0B1A                                   l2629 5C24  
                                 l6110 2C22                   _ADCC_StartConversion 8488  
                                 l1687 55CE                                   l6040 296A  
                                 l2816 74BA                                   l1793 123A  
                                 l6114 2C2E                                   l6042 297C  
                                 l6050 29B6                                   l6026 28D8  
                                 l6210 5F20                                   l1946 1D78  
                                 l2691 5370                                   l2755 65F6  
                                 l1875 4CB2                                   l6140 2CBA  
                                 l6124 2C56                                   l6108 2C10  
                                 l6036 294A                                   l6220 5F7A  
                                 l2589 25A2                                   l2829 7436  
                                 l6310 4EE8                                   l6150 2CE6  
                                 l6070 2A64                                   l6046 2986  
                                 l6214 5F24                                   l6400 345A  
                                 l6128 2C5C                                   l1896 41FA  
                                 l6322 4F82                                   l6410 34E2  
                                 l6402 348A                                   l6162 2D3E  
                                 l6154 2CFE                                   l6090 2B78  
                                 l6074 2A6E                                   l6316 4F3C  
                                 l6500 37EA                                   l6420 3538  
                                 l6156 2D0E                                   l6092 2B9E  
                                 l6068 2A52                                   l6252 468E  
                                 l6334 5054                                   l6510 385E  
                                 l6422 3568                                   l6078 2AA0  
                                 l6238 74AA                                   l7400 5142  
                                 l6416 3522                                   l6272 4844  
                                 l6370 576A                                   l6362 56BE  
                                 l6354 5636                                   l9002 3A40  
                                 l6530 3902                                   l6522 38CA  
                                 l6442 35FA                                   l6434 35E0  
                                 l6266 47AC                                   l7420 525C  
                                 l6196 7AC2                                   l6516 389A  
                                 l6460 36C0                                   l6452 368A  
                                 l6428 35A6                                   l6276 48B2  
                                 l6268 47FC                                   l7414 51E2  
                                 l9006 3A5E                                   l6462 36D2  
                                 l6470 372A                                   l6390 3404  
                                 l9102 02FC                                   l9110 032A  
                                 l6294 7426                                   l7424 52C4  
                                 l7416 51FA                                   l7408 51B6  
                                 l9040 3D5E                                   l9016 3C70  
                                 l6720 62BA                                   l6528 38F2  
                                 l6640 23B2                                   l6552 1E18  
                                 l8320 5AE0                                   l8312 5A74  
                                 l8402 7F14                                   l7434 5360  
                                 l7418 521E                                   l6714 629A  
                                 l6482 3774                                   l6810 61D0  
                                 l6634 2396                                   l6570 1EE6  
                                 l6554 1E1E                                   l6546 1DD8  
                                 l9122 0406                                   l7450 5CB6  
                                 l8322 5AEE                                   l9036 3D22  
                                 l6708 6284                                   l6476 3758  
                                 l6468 3726                                   l6396 3444  
                                 l6804 6140                                   l6644 23D8  
                                 l6572 1EEC                                   l6564 1EA6  
                                 l6556 1E4E                                   l9300 0FF0  
                                 l9220 0B12                                   l9212 0A48  
                                 l9140 0554                                   l9124 0470  
                                 l7452 5D22                                   l8332 5B50  
                                 l8324 5B04                                   l8190 7B94  
                                 l5926 7068                                   l6742 6394  
                                 l6734 6360                                   l6486 379A  
                                 l6822 6254                                   l6814 621E  
                                 l6654 2422                                   l6582 1F3E  
                                 l6574 1F1C                                   l6830 7A22  
                                 l9310 1092                                   l9222 0B34  
                                 l9118 0396                                   l9054 00AC  
                                 l8334 5B6E                                   l8326 5B22  
                                 l8424 7F40                                   l7720 8236  
                                 l5928 708A                                   l6496 37E4  
                                 l6672 24E2                                   l5960 2642  
                                 l6840 5FDE                                   l9320 10E2  
                                 l9160 05F6                                   l9152 0594  
                                 l9144 057C                                   l9128 04D2  
                                 l7800 7D82                                   l8344 5BA2  
                                 l8336 5B84                                   l8186 7B6A  
                                 l8450 7C94                                   l8266 7D20  
                                 l6762 664A                                   l6754 6620  
                                 l6658 2428                                   l5954 2602  
                                 l9162 0602                                   l9146 058E  
                                 l9066 00F0                                   l9074 0146  
                                 l8354 5C04                                   l6780 66FE  
                                 l6772 66CA                                   l6668 249C  
                                 l5972 26C0                                   l5964 2658  
                                 l9236 0C32                                   l9084 01EA  
                                 l9092 0258                                   l9420 4260  
                                 l7398 5120                                   l6758 6632  
                                 l6686 2550                                   l6678 250C  
                                 l5990 2778                                   l5966 2688  
                                 l9182 06F0                                   l9086 0216  
                                 l9414 4224                                   l8550 3DD8  
                                 l8614 53D6                                   l8606 53AA  
                                 l6792 6D4C                                   l6688 256A  
                                 l5984 2732                                   l6864 608C  
                                 l6856 6060                                   l9336 119A  
                                 l9248 0CBA                                   l9256 0D24  
                                 l9264 0D90                                   l9272 0EA2  
                                 l9088 022C                                   l9408 41EA  
                                 l9512 14A8                                   l8560 3F18  
                                 l5978 26F2                                   l6866 60A2  
                                 l6858 607C                                   l9178 06B8  
                                 l9610 1CA6                                   l9514 14E2  
                                 l8618 53F0                                   l6884 79F4  
                                 l6796 6D80                                   l6788 6D0A  
                                 l5996 279A                                   l5988 2748  
                                 l9284 0F3A                                   l9188 077A  
                                 l9380 4D54                                   l9372 4CE8  
                                 l9356 4C34                                   l9444 43B6  
                                 l9428 42C0                                   l9452 443C  
                                 l9620 1D04                                   l9532 165C  
                                 l9516 14F8                                   l8572 4046  
                                 l8564 4014                                   l9198 0926  
                                 l9390 4E0A                                   l9542 16F2  
                                 l8582 417E                                   l8590 4190  
                                 l8680 71B0                                   l8920 650C  
                                 l9376 4D24                                   l9616 1D00  
                                 l8576 40E2                                   l9298 0FD6  
                                 l9394 4E46                                   l9386 4DDE  
                                 l9562 18E8                                   l9554 1830  
                                 l9490 1326                                   l9626 1D24  
                                 l8932 70F4                                   l9468 4526  
                                 l9492 1360                                   l9660 4A9C  
                                 l9732 6FF4                                   l8942 6744  
                                 l9566 191C                                   l9494 1376  
                                 l9654 4A32                                   l8688 71C2  
                                 l8936 7132                                   l8952 67BA  
                                 l9680 6F1E                                   l9648 4974  
                                 l8946 676C                                   l8970 737E  
                                 l8962 6B76                                   l9586 1A7C  
                                 l9682 6F5E                                   l8956 6804  
                                 l8948 677E                                   l9596 1B2A  
                                 l9668 4B4A                                   l9766 684E  
                                 STR_1 FF76                                   l8968 7352  
                                 STR_2 FFA7                                   STR_3 FFF2  
                                 l8994 39F6                                   l9882 589A  
                                 l9970 2DC6                                   l9962 2D8E  
                                 STR_4 FF65                                   STR_5 FF87  
                                 l9964 2D96                                   STR_6 FFA7  
                                 STR_7 FFF2                                   l9894 59C2  
                                 STR_8 FF54                                   STR_9 FFB6  
                                 l9968 2DB4                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   _T2PR 003FAB  
                                 u5020 4752                                   u5100 73E6  
                                 u5005 46AC                                   u4310 70B8  
                                 u5006 46B2                                   u5007 46C0  
                                 u5120 7EB8                                   u5200 4FAE  
                                 u5040 482A                                   u5025 4748  
                                 u5130 7EBA                                   u5220 508C  
                                 u5300 56B8                                   u4500 29AE  
                                 u4340 7E88                                   u4317 70AA  
                                 u5045 4820                                   u5150 4EE2  
                                 u5310 56EA                                   u4510 29CE  
                                 u4350 7E8A                                   u5070 7BE2  
                                 u5240 50DE                                   u5080 7BE4  
                                 u4505 299E                                   u5170 4F38  
                                 u5330 57A2                                   u6050 7A1E  
                                 u4610 2BC0                                   u4450 28FE  
                                 u6130 60AA                                   u5090 73E4  
                                 _T6PR 003F93                                   u4460 291E  
                                 u6060 5FBE                                   _PMD0 0039C0  
                                 u5181 4F42                                   u4461 2918  
                                 _PMD1 0039C1                                   u5190 4F7C  
                                 u5350 57F4                                   u5270 5630  
                                 u4710 2CAA                                   u6150 60D4  
                                 u6070 5FD2                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u6160 79D0  
                                 u7200 530C                                   u6080 600C  
                                 _PMD4 0039C4                                   u6065 5FB4  
                                 _PMD5 0039C5                                   u6170 79F0  
                                 u5290 5686                                   u5530 37DC  
                                 u4650 2C34                                   u4570 2A96  
                                 _PMD6 0039C6                                   u4715 2C9A  
                                 _PMD7 0039C7                                   u4740 2CCA  
                                 u4900 5F72                                   u8100 5388  
                                 u6085 6002                                   u4670 2C4E  
                                 u4478 2920                                   u4910 5F74  
                                 u4575 2A86                                   u4840 7AA6  
                                 u5800 24B0                                   u8024 3DC2  
                                 u5705 2188                                   u8025 3DBC  
                                 u7170 51B2                                   u5570 3838  
                                 u5490 3752                                   u5810 24F6  
                                 u4850 5EA4                                   u5715 2350  
                                 u5580 3872                                   u4940 7468  
                                 u4780 7E58                                   u8044 3DF2  
                                 u8045 3DEC                                   u7190 530A  
                                 u5590 38AE                                   u5750 241A  
                                 u4950 746A                                   u7270 5DAE  
                                 u4790 7E5A                                   u5575 3828  
                                 u4855 5E9A                                   u5680 1F2C  
                                 u8064 3E14                                   u8065 3E0E  
                                 u5930 6676                                   u4970 4626  
                                 u9210 10B8                                   u9050 0A18  
                                 u5860 62E6                                   u4980 4672  
                                 u8084 402E                                   u8085 4028  
                                 u5950 66EA                                   u5790 2476  
                                 u9230 116E                                   u9150 0EE4  
                                 u9310 4D4A                                   u5695 20C0  
                                 u4895 5F54                                   u4975 461C  
                                 u5880 6380                                   u9240 1170  
                                 u9320 4D90                                   u9400 42B8  
                                 u8610 39CA                                   u9410 430C  
                                 u5795 2466                                   u8460 6500  
                                 u8700 3CE2                                   u8540 6BF0  
                                 u9500 449E                                   u9420 430E  
                                 u9501 449C                                   u7670 760E  
                                 u8630 39DC                                   u5990 6D7C  
                                 u9350 4E6C                                   u9510 44B2  
                                 u7655 7C1E                                   u9327 4D82  
                                 u8480 657C                                   u8720 3CF8  
                                 u8800 0196                                   u9520 44B6  
                                 u9440 436C                                   u8650 3A2C  
                                 u9450 436E                                   u9370 41D0  
                                 u8547 6BE2                                   u8660 3C84  
                                 u8580 3958                                   u9620 1540  
                                 u7860 5B98                                   u8590 395A  
                                 u8910 0562                                   u8830 02A6  
                                 u9470 4438                                   u9630 1542  
                                 u7695 7642                                   u8671 3CB4  
                                 u7696 7644                                   u7688 7610  
                                 u8680 3CCA                                   u8840 02A8  
                                 u8760 00DA                                   u9480 4458  
                                 u9720 19D6                                   u9640 1568  
                                 u8681 3CC8                                   u8690 3CDE  
                                 u9730 19D8                                   u9570 13BE  
                                 _PLLR 01CEE0                                   u9491 4488  
                                 u9475 441A                                   u8940 05C6  
                                 u9580 13C0                                   u8790 0194  
                                 u9590 13E6                                   u9830 4BBE  
                                 u8880 050E                                   u9770 1B7E  
                                 u9690 1746                                   u8980 0648  
                                 u9860 6FD4                                   u9950 5A12  
                                 u9960 5A14                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                       __end_of_ADCC_ISR 7D60  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01A4  
                                 _atoi 5106                                   _ctoa 7334  
                                 _main 2D68                                   _dtoa 3928  
                                 _nanf 772E                                   _seed 009B  
                                 _prec 0020                                   _nout 001C  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 4BC8  
                                 btemp 0035                                   _xtoa 41B6  
               __end_of_check_adc_scan 853A                          ___fpclassifyf 5DF6  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0026  
            __end_of_SPI1_Exchange8bit 82E6                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 81A4                           ___param_bank 000000  
                   ?_UART1_rx_vect_isr 0055                       __end_of_INT0_ISR 84D6  
                     __end_of_INT1_ISR 84E6         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 6EF4          __end_of_OSCILLATOR_Initialize 8474  
                                l10010 2F5C                                  l10012 2F84  
                                l10032 32A8                                  l10040 3368  
                                l10024 3284                                  l10052 339C  
                                PRLOCK 0039EF                        __end_of___aodiv 5106  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                      __end_of___fladd 2D68                                  _ADCLK 003EFF  
                      __end_of___aomod 5818                                  _ADPCH 003EF1  
                      __end_of___fldiv 3928                                  _ADREF 003EFD  
                      __end_of___awdiv 63AE                        __end_of___flneg 7A4C  
                                STR_10 FFB6                                  STR_11 FFFC  
                                STR_12 FFF9                                  STR_20 FF98  
                                STR_21 FF98                                  STR_22 FF98  
                                STR_14 FFC3                                  STR_15 FFD9  
                                STR_23 FF03                                  STR_32 FF2D  
                                STR_16 FF2E                                  STR_17 FF2E  
                                STR_41 FFF6                                  STR_33 FFE2  
                                STR_25 FF41                          __CFG_WDTE$OFF 000000  
                                STR_34 FFEA                                  STR_18 FFCF  
                                STR_26 FF1B                                  STR_19 FFCF  
                                STR_43 FFF6                        __end_of___awmod 6718  
                                STR_37 FFE6                                  STR_38 FFEE  
                                _ADRPT 003EEC                        __end_of___flmul 25AC  
                      __end_of___flsub 7A92                        __end_of___fltol 60FE  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _T2CON 003FAC                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T2HLT 003FAD  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
           _ADCC_ADTI_InterruptHandler 0004                                  _T2TMR 003FAA  
                                _U1UIR 003DF8                                  _T2RST 003FAF  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 00E4  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 8554                __size_of_clear_adc_scan 0006  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 817C  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 78AC  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 8402  
                         _DMA1CON1bits 003BFD                                  _flags 0022  
                                _fputc 64DC             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 7BEE                                  _fputs 70E4  
                      __end_of_isdigit 7EC4                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 0055                                  _srand 7DCC  
                                _width 001E                                  _putch 83B4  
                      __end_of_islower 7E64                        __end_of_isspace 7A04  
             _INT1_SetInterruptHandler 80DC                        __end_of_isupper 7E94  
                                pclath 003FFA                                  tablat 003FF5  
                                ltemp0 0035                                  ltemp1 0039  
                                ltemp2 003D               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 0035                                  ttemp1 0038  
                                ttemp2 003B                                  ttemp3 003E  
                                ttemp5 0036                                  ttemp6 0039  
                                ttemp7 003D                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 808C            _UART1_SetRxInterruptHandler 8064  
                                wtemp0 0035                                  wtemp1 0037  
                                wtemp2 0039                                  wtemp3 003B  
                                wtemp4 003D                                  wtemp5 003F  
                                wtemp8 0036                        __end_of_sprintf 6A44  
                      __end_of_tolower 74C4                        __end_of_strncmp 5DF6  
                      __end_of_toupper 7440                    ??_UART1_tx_vect_isr 00E4  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 81CA  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 7B1E  
                __end_of_ringBufS_init 7FEC                        __initialization 6C02  
                    _UART2_rx_vect_isr 81F4                           __end_of_atoi 537A  
                         __end_of_ctoa 73BC                           __end_of_main 33AE  
                         __end_of_dtoa 3DA8                           __end_of_nanf 7790  
                         __end_of_stoa 4E86                           __end_of_xtoa 4570  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0055  
              __end_of_TMR2_Initialize 8432               __size_of_DMA2_Initialize 005A  
             _TMR5_SetInterruptHandler 80B4                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 00E4              __end_of_UART1_tx_vect_isr 81A2  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 7F4A  
                      _PWM8_Initialize 8448                       _UART1_Initialize 76CA  
                    _UART2_tx_vect_isr 81CC                     _UART2_Transmit_ISR 7F1E  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                         _start_adc_scan 7666  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                     _PWM8_LoadDutyValue 7BEE  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0055                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               _RB6PPS 003A0E                                 i1l1045 789E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                       __CFG_WDTCCS$SC 000000                                 u400_40 832A  
                               u400_46 832C                                 _FVRCON 003EC1  
                     _mode_lamp_bright 84B8                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u366_48 8270  
         __size_of_eaDogM_WriteCommand 000E                                 u800_28 824E  
                               u368_48 8292                                 _OSCFRQ 0039DF  
                               u822_44 71E2                                 u822_45 71DC  
                               u824_40 71FE                                 u824_46 7200  
                               u773_20 83D6                                 u773_26 83D8  
                               u797_48 82B4                       __end_of___xxtofl 5C2E  
             __end_of_send_lcd_cmd_dma 79B2                    ??_UART2_tx_vect_isr 00E4  
            __end_of_UART2_rx_vect_isr 821A             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 84F6                       _UART2_Initialize 77F2  
                               _WaitMs 7D60                        _conv_raw_result 3DA8  
                         _CCPTMRS1bits 003F5F   __size_of_ADCC_SetADIInterruptHandler 0028  
                               ___flge 60FE                                 ___fleq 6CC8  
                    _ADCC_ThresholdISR 7598                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 7212                                 _efgtoa 0000  
                               _floorf 4570                     ?_ADCC_ThresholdISR 0055  
                               _memset 48DC                   __size_of_help_button 0038  
                               clear_0 6C4E                                 clear_1 6C62  
                               clear_2 6C74                                 clear_3 6C80  
                               clear_4 6C8C                                 clear_5 6C98  
                               clear_6 6CA4                                 clear_7 6CB0  
                               _printf 7790                     _eaDogM_WriteString 6F9C  
                               _strcpy 6B2E                              ?_ADCC_ISR 0055  
                               _strlen 7042                     __size_of_TimerDone 0024  
                      _ADCC_Initialize 752E                         _PMD_Initialize 8474  
            __end_of_UART2_tx_vect_isr 81F2                                 lltemp0 0035  
                               lltemp1 003D                                 lltemp2 0045  
                               lltemp3 004D                    ??_ADCC_ThresholdISR 0056  
               __end_of_start_adc_scan 76CA                           __mediumconst FE72  
                               preinc2 003FDC                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 7906                       __end_of_vfprintf 6F9C  
                           _StartTimer 7CB2          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 7B64                      _SYSTEM_Initialize 7AD8  
                           __accesstop 0060                __end_of__initialization 6CC2  
                            ?_INT0_ISR 0055                              ?_INT1_ISR 0055  
                 __end_of_display_help 8532                   __end_of_display_info 852A  
            __end_of_CLKREF_Initialize 8500                          ___rparam_used 000000  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 7C72  
                _set_temp_display_help 849A              __end_of_ADCC_ThresholdISR 7600  
               __end_of_ringBufS_flush 72A4                         __pcstackCOMRAM 0055  
                           ___inthi_sp 0F56                             ___intlo_sp 17AB  
                         __pidataBANK0 7C30                           __pidataBANK2 6D8C  
                            ?_TMR5_ISR 0055                              ?_TMR6_ISR 0055  
                       ivt0x8_undefint 00AC                          __end_of_fputc 6600  
                        __end_of_fputs 717C                          __end_of_srand 7E00  
                __end_of_TMR5_CallBack 8262                          __end_of_putch 83CE  
              __end_of_PWM8_Initialize 845E                __end_of_TMR6_Initialize 7F74  
                    _adc_int_t_handler 717C                 __end_of_PMD_Initialize 8488  
                           ??_ADCC_ISR 0055                  __end_of_TMR6_CallBack 82C8  
                    lp_filter@lp_speed 0090            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 850C  
                       _clear_adc_scan 8542                 __size_of_mode_lamp_dim 0018  
             _UART2_RxInterruptHandler 0013              __end_of_SYSTEM_Initialize 7B1E  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
                           __pbssBANK2 02BD                             __pbssBANK3 0300  
                           __pbssBANK4 0400                             __pbssBANK5 0500  
                           __pbssBANK6 0600                             _check_help 5818  
              __end_of_conv_raw_result 41B6                  _INT0_InterruptHandler 0019  
                           ??_INT0_ISR 0055                             ??_INT1_ISR 0055  
                    __end_of_TimerDone 823E                       _DMA1_DMADCNT_ISR 8500  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                   __size_of_lp_filter 025E                  __end_of_wait_lcd_done 8398  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 80B4  
              __end_of_ADCC_Initialize 7596                             ??_TMR5_ISR 00E5  
            __end_of_adc_int_t_handler 7212                             ??_TMR6_ISR 00E4  
                              _ADFLTRH 003EE7                                _ADFLTRL 003EE6  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
 __end_of_ADCC_SetADTIInterruptHandler 8154  __size_of_ADCC_SetADTIInterruptHandler 0028  
         _ADCC_SetADTIInterruptHandler 812C                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 8340  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
               __end_of_clear_adc_scan 8548                         ?_DMA1_DMAA_ISR 0055  
                     _DMA1_DMASCNT_ISR 84E8                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001C                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 0055  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 0B3E                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 7CB2  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
           __size_of_ADCC_ThresholdISR 0068                          _mode_lamp_dim 8402  
                              __Lparam 0000               __end_of_UART1_Initialize 772E  
                      __size_of_WaitMs 0036                        __size_of___flge 0162  
                      __size_of___fleq 00C4                                ___aodiv 4E86  
                              ___fladd 25AC                                ___aomod 55D8  
                              ___fldiv 33AE                                ___awdiv 6260  
                              ___flneg 7A04                                ___awmod 6600  
                              ___flmul 1D82                                ___flsub 7A4C  
                              ___fltol 5F8C              __end_of_UART1_Receive_ISR 835E  
                      __size_of_efgtoa 1244                        __size_of_floorf 036C  
                 __end_of_init_display 6B2E                                __pcinit 6C02  
             __end_of_mode_lamp_bright 84C6                        __size_of_memset 02EC  
             __size_of_adc_int_handler 001E                    _eaDogM_WriteCommand 84AA  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 2D68                                __ptext1 7666  
                              __ptext2 8488                                __ptext3 7DCC  
                              __ptext4 537A                                __ptext5 6A44  
                              __ptext6 7F74                                __ptext7 7F9C  
                              __ptext8 82C8                                __ptext9 7FC4  
                    _UART2_Receive_ISR 835E                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strcpy 00D4  
                      __size_of_strlen 00A2                  _OSCILLATOR_Initialize 845E  
                              us525999 50F0                           __size_of_abs 0046  
                              us536999 5806                           __size_of_pad 0114  
                              _isalpha 7BAA                                _isdigit 7E94  
                              us926999 4BDA                                us857999 3942  
                              _mode_sw 0028                                us939999 4236  
                    __end_of_lp_filter 55D8                                _islower 7E34  
                              _isspace 79B2                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 7850  
                              _isupper 7E64             __size_of_SYSTEM_Initialize 0046  
                              _sprintf 693A                                _tolower 7440  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _strncmp 5C2E                                _toupper 73BC  
                 end_of_initialization 6CC2    __end_of_UART1_SetTxInterruptHandler 8064  
          _UART1_SetTxInterruptHandler 803C                              i2u1000_48 81B6  
  __end_of_UART2_SetRxInterruptHandler 803C            _UART2_SetRxInterruptHandler 8014  
                            i2u1002_48 81DE                              i2u1004_48 8206  
                    __end_of_set_vterm 83B4                      __end_of_vfpfcnvrt 1D82  
                            _SPI1TCNTL 003D12                                postdec0 003FED  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE             __size_of_adc_int_t_handler 0096  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 8554  
            __end_of_UART2_Receive_ISR 837C                         wdtdelay@dcount 0094  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 00E5  
                _INT1_InterruptHandler 0016                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 808C                           _display_help 852A  
                _TMR5_InterruptHandler 0098                           _display_info 8522  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 0038  
  __end_of_ADCC_SetADIInterruptHandler 817C            _ADCC_SetADIInterruptHandler 8154  
                           _update_lcd 682C                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 74C4  
                      _SPI1_Initialize 8432                  __end_of_get_vterm_ptr 7EF2  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                       __end_of_WaitMs 7D96           __end_of_INTERRUPT_Initialize 7666  
                           _vterm_dump 63AE                         __end_of___flge 6260  
                       __end_of___fleq 6D8C   __end_of_INT0_DefaultInterruptHandler 855C  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 855A  
           __size_of_UART1_Receive_ISR 001E                        _DMA2_Initialize 7906  
                       __end_of_efgtoa 1244                      __size_of_TMR5_ISR 005C  
                    __size_of_TMR6_ISR 001A                    __size_of_check_help 0212  
                       __end_of_floorf 48DC            __size_of_UART2_Transmit_ISR 002C  
                           floorf@F524 0084                         __end_of_memset 4BC8  
                       __end_of_printf 77F2               __end_of_DMA1_DMADCNT_ISR 850A  
          __size_of_PWM8_LoadDutyValue 0042                  __end_of_INT0_CallBack 8284  
                       __end_of_strcpy 6C02                         __end_of_strlen 70E4  
                  start_initialization 6C02   __end_of_TMR5_DefaultInterruptHandler 83E8  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 83CE  
      __size_of_PIN_MANAGER_Initialize 0090                            __end_of_abs 7AD8  
                __end_of_INT1_CallBack 82A6              __size_of_set_display_info 001E  
                          __end_of_pad 682C                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 7FC4          __size_of_ADCC_StartConversion 0012  
                           ivt0x8_base 0008                          _uart1RxBuffer 0500  
                __end_of___fpclassifyf 5F8C                          _uart2RxBuffer 0600  
                        _uart1TxBuffer 02BD               __end_of_DMA1_DMASCNT_ISR 84F6  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 8518  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A6                              _TimerDone 821A  
                        _ringBufS_init 7FC4                            __pdataBANK0 00A3  
                          __pdataBANK2 0200             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 7E34                    __end_of_help_button 7D26  
      __end_of_eaDogM_WriteStringAtPos 7DCC                __end_of_DMA1_Initialize 752E  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 812C  
                        __pcstackBANK0 00E4               __size_of_TMR2_Initialize 0018  
                    __size_of___xxtofl 0204                __end_of_SPI1_Initialize 8448  
             _UART1_RxInterruptHandler 000D               _UART2_TxInterruptHandler 0010  
                            __end_of_T FF03              __size_of_ringBufS_put_dma 00AA  
                         _init_display 6A44                 __end_of_DMA1_DMAOR_ISR 8522  
               __size_of_TMR5_CallBack 0024                  _TMR6_InterruptHandler 0001  
               __size_of_TMR6_CallBack 0022                __end_of_DMA2_Initialize 7960  
               _PIN_MANAGER_Initialize 72A4                   __end_of_wait_lcd_set 854E  
                        __pmediumconst FE72                              __ptext100 853A  
                            __ptext101 7E00                              __ptext110 7850  
                            __ptext102 80DC                              __ptext111 7C72  
                            __ptext103 8104                              __ptext120 8554  
                            __ptext112 823E                              __ptext104 7906  
                            __ptext121 7D28                              __ptext113 83CE  
                            __ptext105 74C4                              __ptext130 81CC  
                            __ptext122 717C                              __ptext114 84C8  
                            __ptext106 84F6                              __ptext131 7F1E  
                            __ptext123 855E                              __ptext115 8262  
                            __ptext107 752E                              __ptext140 8518  
                            __ptext132 81F4                              __ptext124 8322  
                            __ptext116 855A                              __ptext108 812C  
                            __ptext141 0000                              __ptext133 835E  
                            __ptext125 7598                              __ptext117 84D8  
                            __ptext109 8154                              __ptext134 83E8  
                            __ptext126 817C                              __ptext118 8284  
                            __ptext135 82A6                              __ptext127 7EF2  
                            __ptext119 855C                              __ptext136 7B64  
                            __ptext128 81A4                              __ptext137 84E8  
                            __ptext129 8340                              __ptext138 8500  
                            __ptext139 850C                     __end_of_StartTimer 7CEE  
                    __size_of_wdtdelay 005A                      __size_of_vfprintf 00A8  
                             _ADCC_ISR 7D28                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
              __size_of_get_raw_result 001E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                               _T2CLKCON 003FAE  
                       __size_of_fputs 0098                              _lp_filter 537A  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 7600                               _T6CLKCON 003F96  
                      ?_DMA1_DMAOR_ISR 0055                               _INT0_ISR 84C8  
                             _INT1_ISR 84D8                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0060                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0383  
                            _ring_buf2 0340                               i2u406_48 7D44  
                             i2u406_49 7D58                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _PIR4bits 0039A4                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9                               i2u826_48 75CC  
                             i2u826_49 75E0               __size_of_TMR5_Initialize 0046  
                             i2u998_48 818E                              _set_vterm 8398  
                  __size_of_update_lcd 010E                            _help_button 7CEE  
           __end_of_UART1_Transmit_ISR 7F1E                               _TMR5_ISR 7850  
                             _TMR6_ISR 83E8                              _port_data 00D4  
                            _vfpfcnvrt 1244                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 823E                             _ADCON0bits 003EF8  
                   __end_of_check_help 5A2A                              _start_lcd 854E  
              __size_of_FVR_Initialize 0008              __size_of_send_lcd_cmd_dma 0052  
                        _TMR6_CallBack 82A6                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                       _set_display_info 8304  
             __size_of_PWM8_Initialize 0016               __size_of_TMR6_Initialize 002A  
                          _INTCON0bits 003FD2                              copy_data0 6C16  
                            copy_data1 6C38               _INT0_SetInterruptHandler 8104  
                  __size_of_vterm_dump 012E                 _uart1TxBufferRemaining 0032  
  __end_of_UART2_SetTxInterruptHandler 8014            _UART2_SetTxInterruptHandler 7FEC  
                             __Hparam0 0000                           _uart1RxCount 002F  
                         _uart2RxCount 0029                               __Lparam0 0000  
     __size_of_eaDogM_WriteStringAtPos 0036                __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_check_adc_scan 0008                     __CFG_BOREN$SBORDIS 000000  
             __size_of_conv_raw_result 040E                          _wait_lcd_done 837C  
                         _send_lcd_cmd 7F9C                       __size_of___aodiv 0280  
                     __size_of___fladd 07BC                       __size_of___aomod 0240  
                      _adc_int_handler 8322                       __size_of___fldiv 057A  
                     __size_of___awdiv 014E                       __size_of___flneg 0048  
                     __size_of___awmod 0118                       __size_of___flmul 082A  
                     __size_of___flsub 0046                       __size_of___fltol 0172  
                __end_of_DMA1_DMAA_ISR 8516                     ___fpclassifyf@F463 0088  
 __size_of_UART1_SetRxInterruptHandler 0028                        lp_filter@smooth 0168  
                             ___xxtofl 5A2A                      ?_DMA1_DMADCNT_ISR 0055  
             __size_of_ADCC_Initialize 0068            __end_of_eaDogM_WriteCommand 84B8  
                     __size_of_isalpha 0044                       __size_of_isdigit 0030  
                             __pivt0x8 0008                       __size_of_islower 0030  
                     __size_of_isspace 0052                     ??_DMA1_DMADCNT_ISR 00E5  
                             __ptext10 84AA                               __ptext11 3DA8  
                             __ptext20 7D60                               __ptext12 772E  
                             __ptext21 682C                               __ptext13 82E6  
                             __ptext30 48DC                               __ptext22 7D96  
                             __ptext14 5A2A                               __ptext31 7790  
                             __ptext23 7960                               __ptext15 8542  
                             __ptext40 0000                               __ptext32 6EF4  
                             __ptext24 837C                               __ptext16 5818  
                             __ptext41 7440                               __ptext33 1244  
                             __ptext25 78AC                               __ptext17 63AE  
                             __ptext50 1D82                               __ptext42 7E64  
                             __ptext34 41B6                               __ptext26 6F9C  
                             __ptext18 693A                               __ptext51 60FE  
                             __ptext43 6B2E                               __ptext35 73BC  
                             __ptext27 8548                               __ptext19 7EC4  
                             __ptext60 7334                               __ptext52 6CC8  
                             __ptext44 4570                               __ptext36 7E34  
                             __ptext28 854E                               __ptext61 6718  
                             __ptext53 33AE                               __ptext45 5DF6  
                             __ptext37 7BAA                               __ptext29 7212  
                             __ptext70 8398                               __ptext62 7042  
                             __ptext54 6600                               __ptext46 5F8C  
                             __ptext38 5C2E                               __ptext71 849A  
                             __ptext63 70E4                               __ptext55 6260  
                             __ptext47 7A4C                               __ptext39 4BC8  
                             __ptext80 852A                               __ptext72 8304  
                             __ptext64 64DC                               __ptext56 3928  
                             __ptext48 25AC                               __ptext81 8532  
                             __ptext73 8402                               __ptext65 83B4  
                             __ptext57 7A92                               __ptext49 7A04  
                             __ptext90 808C                               __ptext82 7AD8  
                             __ptext74 84B8                               __ptext66 6E4A  
                             __ptext58 55D8                               __ptext91 7B1E  
                             __ptext83 77F2                               __ptext75 7BEE  
                             __ptext67 5106                               __ptext59 4E86  
                             __ptext92 80B4                               __ptext84 7FEC  
                             __ptext76 7CEE                               __ptext68 79B2  
                             __ptext93 841A                               __ptext85 8014  
                             __ptext77 821A                               __ptext69 7E94  
                             __ptext94 8432                               __ptext86 76CA  
                             __ptext78 7CB2                               __ptext95 8448  
                             __ptext87 803C                               __ptext79 8522  
                             __ptext96 8474                               __ptext88 8064  
                             __ptext97 72A4                               __ptext89 7F4A  
                             __ptext98 845E                               __ptext99 7600  
                     __size_of_isupper 0030                       __size_of_sprintf 010A  
                     __size_of_tolower 0084                       __size_of_strncmp 01C8  
                     __size_of_toupper 0084                       _ringBufS_put_dma 6E4A  
                        __size_of_atoi 0274                          __size_of_ctoa 0088  
                        __size_of_main 0646                          __size_of_dtoa 0480  
                        __size_of_nanf 0062                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                          __size_of_xtoa 03BA  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0055  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0007                              stoa@F1166 00CD  
                   ??_DMA1_DMASCNT_ISR 00E5           __end_of_ADCC_StartConversion 849A  
                             _spi_link 0078                               _wdtdelay 78AC  
           __end_of_UART2_Transmit_ISR 7F4A                               _vfprintf 6EF4  
           __end_of_PWM8_LoadDutyValue 7C30   __end_of_INT1_DefaultInterruptHandler 855E  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 855C  
                        ??_Default_ISR 0055                            _uart1RxHead 0031  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0034  
                          _uart2RxHead 002B                            _uart1RxTail 0030  
                       _get_raw_result 82E6                            _uart2TxHead 002E  
                          _uart1TxTail 0033                            _uart2RxTail 002A  
                          _uart2TxTail 002D                           _wait_lcd_set 8548  
                   _EXT_INT_Initialize 7E00   __end_of_TMR6_DefaultInterruptHandler 7BAA  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 7B64  
 __end_of_ADCC_DefaultInterruptHandler 8560  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 855E                               intlevel1 0000  
                             intlevel2 0000                      _send_lcd_cmd_long 7F74  
       __size_of_set_temp_display_help 0010          __end_of_set_temp_display_help 84AA  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 7042  
                __end_of_mode_lamp_dim 841A                __end_of_adc_int_handler 8340  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 693A                 _uart2TxBufferRemaining 002C  
                       _FVR_Initialize 853A                          lp_filter@lp_x 008C  
               __end_of_get_raw_result 8304                       _send_lcd_cmd_dma 7960  
               __size_of___fpclassifyf 0196                  TMR5_ISR@CountCallBack 0024  
     __end_of_INT1_SetInterruptHandler 8104              __size_of_UART1_Initialize 0064  
                     ??_DMA1_DMAOR_ISR 00E5               _UART1_TxInterruptHandler 000A  
            __end_of_send_lcd_cmd_long 7F9C                __size_of_start_adc_scan 0064  
                  __end_of_Default_ISR 855A         __end_of_PIN_MANAGER_Initialize 7334  
            __size_of_mode_lamp_bright 000E                     __end_of_vterm_dump 64DC  
              _eaDogM_WriteStringAtPos 7D96                          _get_vterm_ptr 7EC4  
                       _check_adc_scan 8532              __size_of_UART2_Initialize 005E  
