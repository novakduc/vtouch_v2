

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 01:58:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=4,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=4,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=4,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text178,global,reloc=4,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=4,class=CODE,delta=1
   205                           	psect	text182,global,reloc=4,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=4,class=CODE,delta=1
   210                           	psect	text187,global,reloc=4,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=4,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=4,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=4,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=4,class=CODE,delta=1
   220                           	psect	text197,global,reloc=4,class=CODE,delta=1
   221                           	psect	text198,global,reloc=4,class=CODE,delta=1
   222                           	psect	text199,global,reloc=4,class=CODE,delta=1
   223                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   224                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   225                           	psect	text200,global,reloc=4,class=CODE,delta=1
   226                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   227                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   228  0000                     
   229                           ; Version 2.10
   230                           ; Generated 31/07/2019 GMT
   231                           ; 
   232                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   233                           ; All rights reserved.
   234                           ; 
   235                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   236                           ; 
   237                           ; Redistribution and use in source and binary forms, with or without modification, are
   238                           ; permitted provided that the following conditions are met:
   239                           ; 
   240                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   241                           ;        conditions and the following disclaimer.
   242                           ; 
   243                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   244                           ;        of conditions and the following disclaimer in the documentation and/or other
   245                           ;        materials provided with the distribution.
   246                           ; 
   247                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   248                           ;        software without specific prior written permission.
   249                           ; 
   250                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   251                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   252                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   253                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   254                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   255                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   256                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   257                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   258                           ; 
   259                           ; 
   260                           ; Code-generator required, PIC18F57K42 Definitions
   261                           ; 
   262                           ; SFR Addresses
   263  0000                     
   264 ;;_main$3976	offset	0
   265 ;;_main$3972	offset	2
   266 ;;_esr_temp	offset	4
   267 ;;_i_esr	offset	8
   268 ;;_shape	offset	10
   269 ;;_inp_index	offset	11
   270 ;;_k	offset	12
   271 ;;_j	offset	13
   272 ;;_i	offset	14
   273 ;;_mode	offset	15
   274 ;;_i_ror	offset	16
   275 ;;_s	offset=-2 (param)
   276 ;;_voltage	offset=-4 (param)
   277 ;;_voltage	offset=-4 (param)
   278 ;;_voltage	offset=-4 (param)
   279 ;;_set	offset=-1 (param)
   280 ;;_x	offset	0
   281 ;;_r_cal_ptr	offset	2
   282 ;;_y	offset	4
   283 ;;_crcVal_save	offset	6
   284 ;;_bAdd	offset=-2 (param)
   285 ;;_data	offset=-1 (param)
   286 ;;_cmd	offset=-1 (param)
   287 ;;_cmd	offset=-1 (param)
   288 ;;_data	offset=-1 (param)
   289 ;;__this	offset=-2 (param)
   290 ;;_soc	offset	0
   291 ;;_slot	offset	2
   292 ;;_cvoltage	offset=-4 (param)
   293 ;;_h	offset=-2 (param)
   294 ;;_h	offset=-2 (param)
   295 ;;_fsm	offset=-1 (param)
   296 ;;_mode	offset=-1 (param)
   297 ;;_mode	offset=-1 (param)
   298 ;;_cmd	offset=-1 (param)
   299 ;;_cp	offset	0
   300 ;;_cb	offset	4
   301 ;;_cpz	offset	8
   302 ;;_cbz	offset	12
   303 ;;_x	offset	16
   304 ;;_x	offset	0
   305 ;;_y	offset	2
   306 ;;_r_cal_ptr	offset	4
   307 ;;_crcVal	offset	5
   308 ;;_GIEBitValue	offset	0
   309 ;;_bAdd	offset=-2 (param)
   310 ;;_bData	offset=-3 (param)
   311 ;;_result	offset	0
   312 ;;_mask	offset	2
   313 ;;_reverse	offset=-1 (param)
   314 ;;_xorValue	offset=-3 (param)
   315 ;;_mask	offset	0
   316 ;;_reverse	offset	2
   317 ;;_crc	offset=-2 (param)
   318 ;;_data	offset=-1 (param)
   319 ;;_channel	offset=-1 (param)
   320 ;;_c	offset	0
   321 ;;_shape	offset=-1 (param)
   322 ;;_reset	offset=-2 (param)
   323 ;;_i	offset=-1 (param)
   324 ;;_i	offset=-1 (param)
   325 ;;_mode	offset=-1 (param)
   326 ;;_cb	offset=-3 (param)
   327 ;;_cp	offset=-5 (param)
   328 ;;_mode	offset=-1 (param)
   329 ;;_cb	offset=-3 (param)
   330 ;;_cp	offset=-5 (param)
   331 ;;_scaleb	offset=-9 (param)
   332 ;;_scalep	offset=-13 (param)
   333 ;;_value	offset=-2 (param)
   334 ;;_window	offset=-4 (param)
   335 ;;_standard	offset=-6 (param)
   336 ;;_i	offset	0
   337 ;;_h	offset=-2 (param)
   338 ;;_flipper	offset=-1 (param)
   339 ;;_f	offset	0
   340 ;;_ap	offset	6
   341 ;;_s	offset=-3 (param)
   342 ;;_fmt	offset=-5 (param)
   343 ;;_line	offset=-1 (param)
   344 ;;_vterm	offset=-2 (param)
   345 ;;_numMilliseconds	offset=-2 (param)
   346 ;;_vterm	offset=-1 (param)
   347 ;;_row	offset	0
   348 ;;_r	offset=-1 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_strPtr	offset=-4 (param)
   351 ;;_strPtr	offset=-1 (param)
   352 ;;_delay	offset=-4 (param)
   353 ;;_strPtr	offset=-1 (param)
   354 ;;_strPtr	offset=-2 (param)
   355 ;;__this	offset=-2 (param)
   356 ;;_clearBuffer	offset=-3 (param)
   357 ;;_s	offset	0
   358 ;;_k	offset	2
   359 ;;_dest	offset=-2 (param)
   360 ;;_c	offset=-4 (param)
   361 ;;_n	offset=-6 (param)
   362 ;;_ap	offset	0
   363 ;;_fmt	offset=-3 (param)
   364 ;;_cfmt	offset	0
   365 ;;_fp	offset=-2 (param)
   366 ;;_fmt	offset=-4 (param)
   367 ;;_ap	offset=-6 (param)
   368 ;;_vfpfcnvrt$6241	offset	0
   369 ;;_vfpfcnvrt$6252	offset	2
   370 ;;_vfpfcnvrt$6240	offset	4
   371 ;;_llu	offset	6
   372 ;;_ll	offset	14
   373 ;;_f	offset	22
   374 ;;_ct	offset	26
   375 ;;_cp	offset	29
   376 ;;_c	offset	31
   377 ;;_fp	offset=-2 (param)
   378 ;;_fmt	offset=-4 (param)
   379 ;;_ap	offset=-6 (param)
   380 ;;_xtoa$6226	offset	0
   381 ;;_xtoa$6225	offset	2
   382 ;;_n	offset	4
   383 ;;_c	offset	12
   384 ;;_i	offset	14
   385 ;;_w	offset	16
   386 ;;_p	offset	18
   387 ;;_fp	offset=-2 (param)
   388 ;;_d	offset=-10 (param)
   389 ;;_x	offset=-11 (param)
   390 ;;_toupper$7032	offset	0
   391 ;;_c	offset=-2 (param)
   392 ;;_c	offset=-2 (param)
   393 ;;_c	offset=-2 (param)
   394 ;;_n	offset	0
   395 ;;_i	offset	8
   396 ;;_w	offset	10
   397 ;;_p	offset	12
   398 ;;_fp	offset=-2 (param)
   399 ;;_d	offset=-10 (param)
   400 ;;_counter	offset	0
   401 ;;_dividend	offset=-8 (param)
   402 ;;_divisor	offset=-16 (param)
   403 ;;_quotient	offset	0
   404 ;;_counter	offset	8
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_r	offset	0
   408 ;;_l	offset	2
   409 ;;__l	offset=-2 (param)
   410 ;;__r	offset=-4 (param)
   411 ;;_n	offset=-6 (param)
   412 ;;_nuls	offset	0
   413 ;;_l	offset	7
   414 ;;_p	offset	9
   415 ;;_cp	offset	11
   416 ;;_w	offset	13
   417 ;;_i	offset	15
   418 ;;_fp	offset=-2 (param)
   419 ;;_s	offset=-4 (param)
   420 ;;_efgtoa$6198	offset	0
   421 ;;_efgtoa$6197	offset	2
   422 ;;_efgtoa$6196	offset	4
   423 ;;_efgtoa$6192	offset	6
   424 ;;_efgtoa$6188	offset	8
   425 ;;_efgtoa$6187	offset	10
   426 ;;_u	offset	12
   427 ;;_g	offset	16
   428 ;;_l	offset	20
   429 ;;_h	offset	24
   430 ;;_ou	offset	28
   431 ;;_n	offset	32
   432 ;;_e	offset	34
   433 ;;_i	offset	36
   434 ;;_w	offset	38
   435 ;;_p	offset	40
   436 ;;_sign	offset	42
   437 ;;_d	offset	44
   438 ;;_ne	offset	46
   439 ;;_m	offset	48
   440 ;;_pp	offset	50
   441 ;;_t	offset	52
   442 ;;_mode	offset	54
   443 ;;_nmode	offset	55
   444 ;;_fp	offset=-2 (param)
   445 ;;_f	offset=-6 (param)
   446 ;;_c	offset=-7 (param)
   447 ;;_tolower$7017	offset	0
   448 ;;_c	offset=-2 (param)
   449 ;;_c	offset=-2 (param)
   450 ;;_d	offset	0
   451 ;;_s	offset	2
   452 ;;_dest	offset=-2 (param)
   453 ;;_src	offset=-4 (param)
   454 ;;_u	offset	0
   455 ;;_m	offset	4
   456 ;;_e	offset	8
   457 ;;_x	offset=-4 (param)
   458 ;;_u	offset	0
   459 ;;_e	offset	4
   460 ;;_x	offset=-4 (param)
   461 ;;_exp1	offset	0
   462 ;;_sign1	offset	1
   463 ;;_f1	offset=-4 (param)
   464 ;;_f1	offset=-4 (param)
   465 ;;_ff1	offset=-4 (param)
   466 ;;_ff2	offset=-8 (param)
   467 ;;_sign	offset	0
   468 ;;_counter	offset	1
   469 ;;_dividend	offset=-2 (param)
   470 ;;_divisor	offset=-4 (param)
   471 ;;_quotient	offset	0
   472 ;;_sign	offset	2
   473 ;;_counter	offset	3
   474 ;;_dividend	offset=-2 (param)
   475 ;;_divisor	offset=-4 (param)
   476 ;;_dtoa$6164	offset	0
   477 ;;_n	offset	2
   478 ;;_i	offset	10
   479 ;;_s	offset	12
   480 ;;_w	offset	14
   481 ;;_p	offset	16
   482 ;;_fp	offset=-2 (param)
   483 ;;_d	offset=-10 (param)
   484 ;;_a	offset=-2 (param)
   485 ;;_sign	offset	0
   486 ;;_counter	offset	1
   487 ;;_dividend	offset=-8 (param)
   488 ;;_divisor	offset=-16 (param)
   489 ;;_quotient	offset	0
   490 ;;_sign	offset	8
   491 ;;_counter	offset	9
   492 ;;_dividend	offset=-8 (param)
   493 ;;_divisor	offset=-16 (param)
   494 ;;_w	offset	0
   495 ;;_fp	offset=-2 (param)
   496 ;;_c	offset=-3 (param)
   497 ;;_w	offset	0
   498 ;;_i	offset	2
   499 ;;_fp	offset=-2 (param)
   500 ;;_buf	offset=-4 (param)
   501 ;;_p	offset=-6 (param)
   502 ;;_a	offset	0
   503 ;;_s	offset=-2 (param)
   504 ;;_i	offset	0
   505 ;;_c	offset	2
   506 ;;_s	offset=-2 (param)
   507 ;;_fp	offset=-4 (param)
   508 ;;_c	offset=-2 (param)
   509 ;;_fp	offset=-4 (param)
   510 ;;_c	offset=-1 (param)
   511 ;;__this	offset=-2 (param)
   512 ;;_c	offset=-3 (param)
   513 ;;_atoi$6748	offset	0
   514 ;;_atoi$6746	offset	2
   515 ;;_atoi$6747	offset	4
   516 ;;_n	offset	5
   517 ;;_neg	offset	7
   518 ;;_s	offset=-2 (param)
   519 ;;_isspace$6797	offset	0
   520 ;;_c	offset=-2 (param)
   521 ;;_c	offset=-2 (param)
   522 ;;_vterm	offset=-1 (param)
   523 ;;_new_response_info	offset=-1 (param)
   524 ;;_new_response_info	offset=-1 (param)
   525 ;;_level	offset=-2 (param)
   526 ;;_dutyValue	offset=-2 (param)
   527 ;;_timer	offset=-1 (param)
   528 ;;_timer	offset=-1 (param)
   529 ;;_count	offset=-3 (param)
   530 ;;_h	offset=-2 (param)
   531 ;;_u	offset	0
   532 ;;_x	offset=-4 (param)
   533 ;;_chan	offset=-1 (param)
   534 ;;_to_what	offset=-2 (param)
   535 ;;_u	offset	0
   536 ;;_s	offset=-2 (param)
   537 ;;_index	offset=-1 (param)
   538 ;;_arg	offset	0
   539 ;;_exp	offset	4
   540 ;;_sign	offset=-1 (param)
   541 ;;_val	offset=-5 (param)
   542 ;;_grs	offset	0
   543 ;;_rem	offset	4
   544 ;;_new_exp	offset	8
   545 ;;_aexp	offset	10
   546 ;;_bexp	offset	11
   547 ;;_sign	offset	12
   548 ;;_b	offset=-4 (param)
   549 ;;_a	offset=-8 (param)
   550 ;;_ff1	offset=-4 (param)
   551 ;;_ff2	offset=-8 (param)
   552 ;;_lp_speed	offset	0
   553 ;;_new	offset=-4 (param)
   554 ;;_bn	offset=-5 (param)
   555 ;;_slow	offset=-6 (param)
   556 ;;_b	offset=-4 (param)
   557 ;;_a	offset=-8 (param)
   558 ;;_grs	offset	0
   559 ;;_bexp	offset	1
   560 ;;_aexp	offset	2
   561 ;;_signs	offset	3
   562 ;;_b	offset=-4 (param)
   563 ;;_a	offset=-8 (param)
   564 ;;_prod	offset	0
   565 ;;_grs	offset	4
   566 ;;_temp	offset	8
   567 ;;_bexp	offset	10
   568 ;;_aexp	offset	11
   569 ;;_sign	offset	12
   570 ;;_b	offset=-4 (param)
   571 ;;_a	offset=-8 (param)
   572 ;;_InterruptHandler	offset=-3 (param)
   573 ;;_InterruptHandler	offset=-3 (param)
   574 ;;_InterruptHandler	offset=-3 (param)
   575 ;;_InterruptHandler	offset=-3 (param)
   576 ;;_InterruptHandler	offset=-3 (param)
   577 ;;_InterruptHandler	offset=-3 (param)
   578 ;;_state	offset	0
   579 ;;_InterruptHandler	offset=-3 (param)
   580 ;;_InterruptHandler	offset=-3 (param)
   581 ;;_seed	offset	0
   582 ;;_poly	offset	2
   583 ;;_InterruptHandler	offset=-3 (param)
   584 ;;_InterruptHandler	offset=-3 (param)
   585 ;;_i	offset	0
   586 ;;_sw_value	offset	1
   587 ;;_timerVal	offset=-2 (param)
   588 ;;_light	offset	0
   589 ;;_mode	offset=-1 (param)
   590 ;;_chan	offset=-1 (param)
   591 ;;_to_what	offset=-2 (param)
   592 ;;_u	offset	0
   593 ;;_s	offset=-2 (param)
   594 ;;_index	offset=-1 (param)
   595 ;;_arg	offset	0
   596 ;;_exp	offset	4
   597 ;;_sign	offset=-1 (param)
   598 ;;_val	offset=-5 (param)
   599 ;;_b	offset=-4 (param)
   600 ;;_a	offset=-8 (param)
   601 ;;_grs	offset	0
   602 ;;_bexp	offset	1
   603 ;;_aexp	offset	2
   604 ;;_signs	offset	3
   605 ;;_b	offset=-4 (param)
   606 ;;_a	offset=-8 (param)
   607 ;;_prod	offset	0
   608 ;;_grs	offset	4
   609 ;;_temp	offset	8
   610 ;;_bexp	offset	10
   611 ;;_aexp	offset	11
   612 ;;_sign	offset	12
   613 ;;_b	offset=-4 (param)
   614 ;;_a	offset=-8 (param)
   615 ;;_grs	offset	0
   616 ;;_rem	offset	4
   617 ;;_new_exp	offset	8
   618 ;;_aexp	offset	10
   619 ;;_bexp	offset	11
   620 ;;_sign	offset	12
   621 ;;_b	offset=-4 (param)
   622 ;;_a	offset=-8 (param)
   623 ;;_ff1	offset=-4 (param)
   624 ;;_ff2	offset=-8 (param)
   625 ;;_timerVal	offset=-2 (param)
   626 ;;_adj	offset	0
   627 ;;_log_ptr	offset	4
   628 ;;_f	offset	0
   629 ;;_ap	offset	6
   630 ;;_s	offset=-3 (param)
   631 ;;_fmt	offset=-5 (param)
   632 ;;_cfmt	offset	0
   633 ;;_fp	offset=-2 (param)
   634 ;;_fmt	offset=-4 (param)
   635 ;;_ap	offset=-6 (param)
   636 ;;_vfpfcnvrt$6241	offset	0
   637 ;;_vfpfcnvrt$6252	offset	2
   638 ;;_vfpfcnvrt$6240	offset	4
   639 ;;_llu	offset	6
   640 ;;_ll	offset	14
   641 ;;_f	offset	22
   642 ;;_ct	offset	26
   643 ;;_cp	offset	29
   644 ;;_c	offset	31
   645 ;;_fp	offset=-2 (param)
   646 ;;_fmt	offset=-4 (param)
   647 ;;_ap	offset=-6 (param)
   648 ;;_xtoa$6226	offset	0
   649 ;;_xtoa$6225	offset	2
   650 ;;_n	offset	4
   651 ;;_c	offset	12
   652 ;;_i	offset	14
   653 ;;_w	offset	16
   654 ;;_p	offset	18
   655 ;;_fp	offset=-2 (param)
   656 ;;_d	offset=-10 (param)
   657 ;;_x	offset=-11 (param)
   658 ;;_toupper$7032	offset	0
   659 ;;_c	offset=-2 (param)
   660 ;;_c	offset=-2 (param)
   661 ;;_c	offset=-2 (param)
   662 ;;_n	offset	0
   663 ;;_i	offset	8
   664 ;;_w	offset	10
   665 ;;_p	offset	12
   666 ;;_fp	offset=-2 (param)
   667 ;;_d	offset=-10 (param)
   668 ;;_counter	offset	0
   669 ;;_dividend	offset=-8 (param)
   670 ;;_divisor	offset=-16 (param)
   671 ;;_quotient	offset	0
   672 ;;_counter	offset	8
   673 ;;_dividend	offset=-8 (param)
   674 ;;_divisor	offset=-16 (param)
   675 ;;_r	offset	0
   676 ;;_l	offset	2
   677 ;;__l	offset=-2 (param)
   678 ;;__r	offset=-4 (param)
   679 ;;_n	offset=-6 (param)
   680 ;;_nuls	offset	0
   681 ;;_l	offset	7
   682 ;;_p	offset	9
   683 ;;_cp	offset	11
   684 ;;_w	offset	13
   685 ;;_i	offset	15
   686 ;;_fp	offset=-2 (param)
   687 ;;_s	offset=-4 (param)
   688 ;;_efgtoa$6198	offset	0
   689 ;;_efgtoa$6197	offset	2
   690 ;;_efgtoa$6196	offset	4
   691 ;;_efgtoa$6192	offset	6
   692 ;;_efgtoa$6188	offset	8
   693 ;;_efgtoa$6187	offset	10
   694 ;;_u	offset	12
   695 ;;_g	offset	16
   696 ;;_l	offset	20
   697 ;;_h	offset	24
   698 ;;_ou	offset	28
   699 ;;_n	offset	32
   700 ;;_e	offset	34
   701 ;;_i	offset	36
   702 ;;_w	offset	38
   703 ;;_p	offset	40
   704 ;;_sign	offset	42
   705 ;;_d	offset	44
   706 ;;_ne	offset	46
   707 ;;_m	offset	48
   708 ;;_pp	offset	50
   709 ;;_t	offset	52
   710 ;;_mode	offset	54
   711 ;;_nmode	offset	55
   712 ;;_fp	offset=-2 (param)
   713 ;;_f	offset=-6 (param)
   714 ;;_c	offset=-7 (param)
   715 ;;_tolower$7017	offset	0
   716 ;;_c	offset=-2 (param)
   717 ;;_c	offset=-2 (param)
   718 ;;_d	offset	0
   719 ;;_s	offset	2
   720 ;;_dest	offset=-2 (param)
   721 ;;_src	offset=-4 (param)
   722 ;;_u	offset	0
   723 ;;_m	offset	4
   724 ;;_e	offset	8
   725 ;;_x	offset=-4 (param)
   726 ;;_u	offset	0
   727 ;;_e	offset	4
   728 ;;_x	offset=-4 (param)
   729 ;;_exp1	offset	0
   730 ;;_sign1	offset	1
   731 ;;_f1	offset=-4 (param)
   732 ;;_f1	offset=-4 (param)
   733 ;;_ff1	offset=-4 (param)
   734 ;;_ff2	offset=-8 (param)
   735 ;;_sign	offset	0
   736 ;;_counter	offset	1
   737 ;;_dividend	offset=-2 (param)
   738 ;;_divisor	offset=-4 (param)
   739 ;;_quotient	offset	0
   740 ;;_sign	offset	2
   741 ;;_counter	offset	3
   742 ;;_dividend	offset=-2 (param)
   743 ;;_divisor	offset=-4 (param)
   744 ;;_dtoa$6164	offset	0
   745 ;;_n	offset	2
   746 ;;_i	offset	10
   747 ;;_s	offset	12
   748 ;;_w	offset	14
   749 ;;_p	offset	16
   750 ;;_fp	offset=-2 (param)
   751 ;;_d	offset=-10 (param)
   752 ;;_a	offset=-2 (param)
   753 ;;_sign	offset	0
   754 ;;_counter	offset	1
   755 ;;_dividend	offset=-8 (param)
   756 ;;_divisor	offset=-16 (param)
   757 ;;_quotient	offset	0
   758 ;;_sign	offset	8
   759 ;;_counter	offset	9
   760 ;;_dividend	offset=-8 (param)
   761 ;;_divisor	offset=-16 (param)
   762 ;;_w	offset	0
   763 ;;_fp	offset=-2 (param)
   764 ;;_c	offset=-3 (param)
   765 ;;_w	offset	0
   766 ;;_i	offset	2
   767 ;;_fp	offset=-2 (param)
   768 ;;_buf	offset=-4 (param)
   769 ;;_p	offset=-6 (param)
   770 ;;_a	offset	0
   771 ;;_s	offset=-2 (param)
   772 ;;_i	offset	0
   773 ;;_c	offset	2
   774 ;;_s	offset=-2 (param)
   775 ;;_fp	offset=-4 (param)
   776 ;;_c	offset=-2 (param)
   777 ;;_fp	offset=-4 (param)
   778 ;;_c	offset=-1 (param)
   779 ;;__this	offset=-2 (param)
   780 ;;_c	offset=-3 (param)
   781 ;;_atoi$6748	offset	0
   782 ;;_atoi$6746	offset	2
   783 ;;_atoi$6747	offset	4
   784 ;;_n	offset	5
   785 ;;_neg	offset	7
   786 ;;_s	offset=-2 (param)
   787 ;;_isspace$6797	offset	0
   788 ;;_c	offset=-2 (param)
   789 ;;_c	offset=-2 (param)
   790 ;;_dsize	offset=-2 (param)
   791 ;;_u	offset	0
   792 ;;_x	offset=-4 (param)
   793 ;;_f1p	offset=-2 (param)
   794 ;;_f2	offset=-6 (param)
   795 ;;_timer	offset=-1 (param)
   796 ;;_count	offset=-3 (param)
   797 ;;_channel	offset=-1 (param)
   798 ;;_i	offset	0
   799                           
   800                           	psect	idataBIGRAM
   801  0177DE                     __pidataBIGRAM:
   802                           	opt callstack 0
   803                           
   804                           ;initializer for _port_data
   805  0177DE  FF                 	db	255
   806  0177DF  00                 	db	0
   807  0177E0  FF                 	db	255
   808  0177E1  00                 	db	0
   809  0177E2  FF                 	db	255
   810  0177E3  00                 	db	0
   811  0177E4  FF                 	db	255
   812  0177E5  00                 	db	0
   813  0177E6  FF                 	db	255
   814  0177E7  00                 	db	0
   815  0177E8  FF                 	db	255
   816  0177E9  00                 	db	0
   817  0177EA  FF                 	db	255
   818  0177EB  00                 	db	0
   819  0177EC  FF                 	db	255
   820  0177ED  00                 	db	0
   821  0177EE  00                 	db	0
   822  0177EF  00                 	db	0
   823  0177F0  00                 	db	0
   824  0177F1  00                 	db	0
   825  0177F2  00                 	db	0
   826  0177F3  00                 	db	0
   827  0177F4  00                 	db	0
   828  0177F5  00                 	db	0
   829  0177F6  00                 	db	0
   830  0177F7  00                 	db	0
   831  0177F8  00                 	db	0
   832  0177F9  00                 	db	0
   833  0177FA  00                 	db	0
   834  0177FB  00                 	db	0
   835  0177FC  00                 	db	0
   836  0177FD  00                 	db	0
   837  0177FE  00                 	db	0
   838  0177FF  00                 	db	0
   839  017800  00                 	db	0
   840  017801  00                 	db	0
   841  017802  00                 	db	0
   842  017803  00                 	db	0
   843  017804  00                 	db	0
   844  017805  00                 	db	0
   845  017806  00                 	db	0
   846  017807  00                 	db	0
   847  017808  00                 	db	0
   848  017809  00                 	db	0
   849  01780A  00                 	db	0
   850  01780B  00                 	db	0
   851  01780C  00                 	db	0
   852  01780D  00                 	db	0
   853  01780E  00                 	db	0
   854  01780F  00                 	db	0
   855  017810  00                 	db	0
   856  017811  00                 	db	0
   857  017812  00                 	db	0
   858  017813  00                 	db	0
   859  017814  00                 	db	0
   860  017815  00                 	db	0
   861  017816  00                 	db	0
   862  017817  00                 	db	0
   863  017818  00                 	db	0
   864  017819  00                 	db	0
   865  01781A  00                 	db	0
   866  01781B  00                 	db	0
   867  01781C  00                 	db	0
   868  01781D  00                 	db	0
   869  01781E  00                 	db	0
   870  01781F  00                 	db	0
   871  017820  00                 	db	0
   872  017821  00                 	db	0
   873  017822  00                 	db	0
   874  017823  00                 	db	0
   875  017824  00                 	db	0
   876  017825  00                 	db	0
   877  017826  00                 	db	0
   878  017827  00                 	db	0
   879  017828  00                 	db	0
   880  017829  00                 	db	0
   881  01782A  00                 	db	0
   882  01782B  00                 	db	0
   883  01782C  00                 	db	0
   884  01782D  00                 	db	0
   885  01782E  00                 	db	0
   886  01782F  00                 	db	0
   887  017830  00                 	db	0
   888  017831  00                 	db	0
   889  017832  00                 	db	0
   890  017833  00                 	db	0
   891  017834  00                 	db	0
   892  017835  00                 	db	0
   893  017836  00                 	db	0
   894  017837  00                 	db	0
   895  017838  00                 	db	0
   896  017839  00                 	db	0
   897  01783A  00                 	db	0
   898  01783B  00                 	db	0
   899  01783C  00                 	db	0
   900  01783D  00                 	db	0
   901  01783E  00                 	db	0
   902  01783F  00                 	db	0
   903  017840  00                 	db	0
   904  017841  00                 	db	0
   905  017842  00                 	db	0
   906  017843  00                 	db	0
   907  017844  00                 	db	0
   908  017845  00                 	db	0
   909  017846  00                 	db	0
   910  017847  00                 	db	0
   911  017848  00                 	db	0
   912  017849  00                 	db	0
   913  01784A  00                 	db	0
   914  01784B  00                 	db	0
   915  01784C  00                 	db	0
   916  01784D  00                 	db	0
   917  01784E  00                 	db	0
   918  01784F  00                 	db	0
   919  017850  00                 	db	0
   920  017851  00                 	db	0
   921  017852  00                 	db	0
   922  017853  00                 	db	0
   923  017854  00                 	db	0
   924  017855  00                 	db	0
   925  017856  00                 	db	0
   926  017857  00                 	db	0
   927  017858  00                 	db	0
   928  017859  00                 	db	0
   929  01785A  00                 	db	0
   930  01785B  00                 	db	0
   931  01785C  00                 	db	0
   932  01785D  00                 	db	0
   933  01785E  00                 	db	0
   934  01785F  00                 	db	0
   935  017860  00                 	db	0
   936  017861  00                 	db	0
   937  017862  00                 	db	0
   938  017863  00                 	db	0
   939  017864  00                 	db	0
   940  017865  00                 	db	0
   941  017866  00                 	db	0
   942  017867  00                 	db	0
   943  017868  00                 	db	0
   944  017869  00                 	db	0
   945  01786A  00                 	db	0
   946  01786B  00                 	db	0
   947  01786C  00                 	db	0
   948  01786D  00                 	db	0
   949  01786E  00                 	db	0
   950  01786F  00                 	db	0
   951  017870  00                 	db	0
   952  017871  00                 	db	0
   953  017872  00                 	db	0
   954  017873  00                 	db	0
   955  017874  00                 	db	0
   956  017875  00                 	db	0
   957  017876  00                 	db	0
   958  017877  00                 	db	0
   959  017878  00                 	db	0
   960  017879  00                 	db	0
   961  01787A  00                 	db	0
   962  01787B  00                 	db	0
   963  01787C  00                 	db	0
   964  01787D  00                 	db	0
   965  01787E  00                 	db	0
   966  01787F  00                 	db	0
   967  017880  00                 	db	0
   968  017881  00                 	db	0
   969  017882  00                 	db	0
   970  017883  00                 	db	0
   971  017884  00                 	db	0
   972  017885  00                 	db	0
   973  017886  00                 	db	0
   974  017887  00                 	db	0
   975  017888  00                 	db	0
   976  017889  00                 	db	0
   977  01788A  00                 	db	0
   978  01788B  00                 	db	0
   979  01788C  00                 	db	0
   980  01788D  00                 	db	0
   981  01788E  00                 	db	0
   982  01788F  00                 	db	0
   983  017890  00                 	db	0
   984  017891  00                 	db	0
   985  017892  00                 	db	0
   986  017893  00                 	db	0
   987  017894  00                 	db	0
   988  017895  00                 	db	0
   989  017896  00                 	db	0
   990  017897  00                 	db	0
   991  017898  00                 	db	0
   992  017899  00                 	db	0
   993  01789A  00                 	db	0
   994  01789B  00                 	db	0
   995  01789C  00                 	db	0
   996  01789D  00                 	db	0
   997  01789E  00                 	db	0
   998  01789F  00                 	db	0
   999  0178A0  00                 	db	0
  1000  0178A1  00                 	db	0
  1001  0178A2  00                 	db	0
  1002  0178A3  00                 	db	0
  1003  0178A4  00                 	db	0
  1004  0178A5  00                 	db	0
  1005  0178A6  00                 	db	0
  1006  0178A7  00                 	db	0
  1007  0178A8  00                 	db	0
  1008  0178A9  00                 	db	0
  1009  0178AA  00                 	db	0
  1010  0178AB  00                 	db	0
  1011  0178AC  00                 	db	0
  1012  0178AD  00                 	db	0
  1013  0178AE  00                 	db	0
  1014  0178AF  00                 	db	0
  1015  0178B0  00                 	db	0
  1016  0178B1  00                 	db	0
  1017  0178B2  00                 	db	0
  1018  0178B3  00                 	db	0
  1019  0178B4  00                 	db	0
  1020  0178B5  00                 	db	0
  1021  0178B6  00                 	db	0
  1022  0178B7  00                 	db	0
  1023  0178B8  00                 	db	0
  1024  0178B9  00                 	db	0
  1025  0178BA  00                 	db	0
  1026  0178BB  00                 	db	0
  1027  0178BC  00                 	db	0
  1028  0178BD  00                 	db	0
  1029  0178BE  00                 	db	0
  1030  0178BF  00                 	db	0
  1031  0178C0  00                 	db	0
  1032  0178C1  00                 	db	0
  1033  0178C2  00                 	db	0
  1034  0178C3  00                 	db	0
  1035  0178C4  00                 	db	0
  1036  0178C5  00                 	db	0
  1037  0178C6  00                 	db	0
  1038  0178C7  00                 	db	0
  1039  0178C8  00                 	db	0
  1040  0178C9  00                 	db	0
  1041  0178CA  00                 	db	0
  1042  0178CB  00                 	db	0
  1043  0178CC  00                 	db	0
  1044  0178CD  00                 	db	0
  1045  0178CE  00                 	db	0
  1046  0178CF  00                 	db	0
  1047  0178D0  00                 	db	0
  1048  0178D1  00                 	db	0
  1049  0178D2  00                 	db	0
  1050  0178D3  00                 	db	0
  1051  0178D4  00                 	db	0
  1052  0178D5  00                 	db	0
  1053  0178D6  00                 	db	0
  1054  0178D7  00                 	db	0
  1055  0178D8  00                 	db	0
  1056  0178D9  00                 	db	0
  1057  0178DA  00                 	db	0
  1058  0178DB  00                 	db	0
  1059  0178DC  00                 	db	0
  1060  0178DD  00                 	db	0
  1061  0178DE  00                 	db	0
  1062  0178DF  00                 	db	0
  1063  0178E0  00                 	db	0
  1064  0178E1  00                 	db	0
  1065  0178E2  00                 	db	0
  1066  0178E3  00                 	db	0
  1067  0178E4  00                 	db	0
  1068  0178E5  00                 	db	0
  1069  0178E6  00                 	db	0
  1070  0178E7  00                 	db	0
  1071  0178E8  00                 	db	0
  1072  0178E9  00                 	db	0
  1073  0178EA  00                 	db	0
  1074  0178EB  00                 	db	0
  1075  0178EC  00                 	db	0
  1076  0178ED  00                 	db	0
  1077  0178EE  00                 	db	0
  1078  0178EF  00                 	db	0
  1079  0178F0  00                 	db	0
  1080  0178F1  00                 	db	0
  1081  0178F2  00                 	db	0
  1082  0178F3  00                 	db	0
  1083  0178F4  00                 	db	0
  1084  0178F5  00                 	db	0
  1085  0178F6  00                 	db	0
  1086  0178F7  00                 	db	0
  1087  0178F8  00                 	db	0
  1088  0178F9  00                 	db	0
  1089  0178FA  00                 	db	0
  1090  0178FB  00                 	db	0
  1091  0178FC  00                 	db	0
  1092  0178FD  00                 	db	0
  1093  0178FE  00                 	db	0
  1094  0178FF  00                 	db	0
  1095  017900  00                 	db	0
  1096  017901  00                 	db	0
  1097  017902  00                 	db	0
  1098  017903  00                 	db	0
  1099  017904  00                 	db	0
  1100  017905  00                 	db	0
  1101  017906  00                 	db	0
  1102  017907  00                 	db	0
  1103  017908  00                 	db	0
  1104  017909  00                 	db	0
  1105  01790A  00                 	db	0
  1106  01790B  00                 	db	0
  1107  01790C  00                 	db	0
  1108  01790D  00                 	db	0
  1109  01790E  00                 	db	0
  1110  01790F  00                 	db	0
  1111  017910  00                 	db	0
  1112  017911  00                 	db	0
  1113  017912  00                 	db	0
  1114  017913  00                 	db	0
  1115  017914  00                 	db	0
  1116  017915  00                 	db	0
  1117  017916  00                 	db	0
  1118  017917  00                 	db	0
  1119  017918  00                 	db	0
  1120  017919  00                 	db	0
  1121  01791A  00                 	db	0
  1122  01791B  00                 	db	0
  1123  01791C  00                 	db	0
  1124  01791D  00                 	db	0
  1125  01791E  00                 	db	0
  1126  01791F  00                 	db	0
  1127  017920  00                 	db	0
  1128  017921  00                 	db	0
  1129  017922  00                 	db	0
  1130  017923  00                 	db	0
  1131  017924  00                 	db	0
  1132  017925  00                 	db	0
  1133  017926  00                 	db	0
  1134  017927  00                 	db	0
  1135  017928  00                 	db	0
  1136  017929  00                 	db	0
  1137  01792A  00                 	db	0
  1138  01792B  00                 	db	0
  1139  01792C  00                 	db	0
  1140  01792D  00                 	db	0
  1141  01792E  00                 	db	0
  1142  01792F  00                 	db	0
  1143  017930  00                 	db	0
  1144  017931  00                 	db	0
  1145  017932  00                 	db	0
  1146  017933  00                 	db	0
  1147  017934  00                 	db	0
  1148  017935  00                 	db	0
  1149  017936  00                 	db	0
  1150  017937  00                 	db	0
  1151  017938  00                 	db	0
  1152  017939  00                 	db	0
  1153  01793A  00                 	db	0
  1154  01793B  00                 	db	0
  1155  01793C  00                 	db	0
  1156  01793D  00                 	db	0
  1157  01793E  00                 	db	0
  1158  01793F  00                 	db	0
  1159  017940  00                 	db	0
  1160  017941  00                 	db	0
  1161  017942  00                 	db	0
  1162  017943  00                 	db	0
  1163  017944  00                 	db	0
  1164  017945  00                 	db	0
  1165  017946  00                 	db	0
  1166  017947  00                 	db	0
  1167  017948  00                 	db	0
  1168  017949  00                 	db	0
  1169  01794A  00                 	db	0
  1170  01794B  00                 	db	0
  1171  01794C  00                 	db	0
  1172  01794D  00                 	db	0
  1173  01794E  00                 	db	0
  1174  01794F  00                 	db	0
  1175  017950  00                 	db	0
  1176  017951  00                 	db	0
  1177  017952  00                 	db	0
  1178  017953  00                 	db	0
  1179  017954  00                 	db	0
  1180  017955  00                 	db	0
  1181  017956  00                 	db	0
  1182  017957  00                 	db	0
  1183  017958  00                 	db	0
  1184  017959  00                 	db	0
  1185  01795A  00                 	db	0
  1186  01795B  00                 	db	0
  1187  01795C  00                 	db	0
  1188  01795D  00                 	db	0
  1189  01795E  00                 	db	0
  1190  01795F  00                 	db	0
  1191  017960  00                 	db	0
  1192  017961  00                 	db	0
  1193  017962  00                 	db	0
  1194  017963  00                 	db	0
  1195  017964  00                 	db	0
  1196  017965  00                 	db	0
  1197  017966  00                 	db	0
  1198  017967  00                 	db	0
  1199  017968  00                 	db	0
  1200  017969  00                 	db	0
  1201  01796A  00                 	db	0
  1202  01796B  00                 	db	0
  1203  01796C  00                 	db	0
  1204  01796D  00                 	db	0
  1205  01796E  00                 	db	0
  1206  01796F  00                 	db	0
  1207  017970  00                 	db	0
  1208  017971  00                 	db	0
  1209  017972  00                 	db	0
  1210  017973  00                 	db	0
  1211  017974  00                 	db	0
  1212  017975  00                 	db	0
  1213  017976  00                 	db	0
  1214  017977  00                 	db	0
  1215  017978  00                 	db	0
  1216  017979  00                 	db	0
  1217  01797A  00                 	db	0
  1218  01797B  00                 	db	0
  1219  01797C  00                 	db	0
  1220  01797D  00                 	db	0
  1221  01797E  00                 	db	0
  1222  01797F  00                 	db	0
  1223  017980  00                 	db	0
  1224  017981  00                 	db	0
  1225  017982  00                 	db	0
  1226  017983  00                 	db	0
  1227  017984  00                 	db	0
  1228  017985  00                 	db	0
  1229  017986  00                 	db	0
  1230  017987  00                 	db	0
  1231  017988  00                 	db	0
  1232  017989  00                 	db	0
  1233  01798A  00                 	db	0
  1234  01798B  00                 	db	0
  1235  01798C  00                 	db	0
  1236  01798D  00                 	db	0
  1237  01798E  00                 	db	0
  1238  01798F  00                 	db	0
  1239  017990  00                 	db	0
  1240  017991  00                 	db	0
  1241  017992  00                 	db	0
  1242  017993  00                 	db	0
  1243  017994  00                 	db	0
  1244  017995  00                 	db	0
  1245  017996  00                 	db	0
  1246  017997  00                 	db	0
  1247  017998  00                 	db	0
  1248  017999  00                 	db	0
  1249  01799A  00                 	db	0
  1250  01799B  00                 	db	0
  1251  01799C  00                 	db	0
  1252  01799D  00                 	db	0
  1253  01799E  00                 	db	0
  1254  01799F  00                 	db	0
  1255  0179A0  00                 	db	0
  1256  0179A1  00                 	db	0
  1257  0179A2  00                 	db	0
  1258  0179A3  00                 	db	0
  1259  0179A4  00                 	db	0
  1260  0179A5  00                 	db	0
  1261  0179A6  00                 	db	0
  1262  0179A7  00                 	db	0
  1263  0179A8  00                 	db	0
  1264  0179A9  00                 	db	0
  1265  0179AA  00                 	db	0
  1266  0179AB  00                 	db	0
  1267  0179AC  00                 	db	0
  1268  0179AD  00                 	db	0
  1269  0179AE  00                 	db	0
  1270  0179AF  00                 	db	0
  1271  0179B0  00                 	db	0
  1272  0179B1  00                 	db	0
  1273  0179B2  00                 	db	0
  1274  0179B3  00                 	db	0
  1275  0179B4  00                 	db	0
  1276  0179B5  00                 	db	0
  1277  0179B6  00                 	db	0
  1278  0179B7  00                 	db	0
  1279  0179B8  00                 	db	0
  1280  0179B9  00                 	db	0
  1281  0179BA  00                 	db	0
  1282  0179BB  00                 	db	0
  1283  0179BC  00                 	db	0
  1284  0179BD  00                 	db	0
  1285  0179BE  00                 	db	0
  1286  0179BF  00                 	db	0
  1287  0179C0  00                 	db	0
  1288  0179C1  00                 	db	0
  1289  0179C2  00                 	db	0
  1290  0179C3  00                 	db	0
  1291  0179C4  00                 	db	0
  1292  0179C5  00                 	db	0
  1293  0179C6  00                 	db	0
  1294  0179C7  00                 	db	0
  1295  0179C8  00                 	db	0
  1296  0179C9  00                 	db	0
  1297  0179CA  00                 	db	0
  1298  0179CB  00                 	db	0
  1299  0179CC  00                 	db	0
  1300  0179CD  00                 	db	0
  1301  0179CE  00                 	db	0
  1302  0179CF  00                 	db	0
  1303  0179D0  00                 	db	0
  1304  0179D1  00                 	db	0
  1305  0179D2  00                 	db	0
  1306  0179D3  00                 	db	0
  1307  0179D4  00                 	db	0
  1308  0179D5  00                 	db	0
  1309  0179D6  00                 	db	0
  1310  0179D7  00                 	db	0
  1311  0179D8  00                 	db	0
  1312  0179D9  00                 	db	0
  1313  0179DA  00                 	db	0
  1314  0179DB  00                 	db	0
  1315  0179DC  00                 	db	0
  1316  0179DD  00                 	db	0
  1317                           
  1318                           ;initializer for _C
  1319  0179DE  0000               	dw	0
  1320  0179E0  0000               	dw	0
  1321  0179E2  0000               	dw	0
  1322  0179E4  0000               	dw	0
  1323  0179E6  0000               	dw	0
  1324  0179E8  0000               	dw	0
  1325  0179EA  0000               	dw	0
  1326  0179EC  0000               	dw	0
  1327  0179EE  0000               	dw	0
  1328  0179F0  0000               	dw	0
  1329  0179F2  0000               	dw	0
  1330  0179F4  0000               	dw	0
  1331  0179F6  0000               	dw	0
  1332  0179F8  0000               	dw	0
  1333  0179FA  0000               	dw	0
  1334  0179FC  0000               	dw	0
  1335  0179FE  0000               	dw	0
  1336  017A00  0000               	dw	0
  1337  017A02  0000               	dw	0
  1338  017A04  0000               	dw	0
  1339  017A06  0000               	dw	0
  1340  017A08  0000               	dw	0
  1341  017A0A  0000               	dw	0
  1342  017A0C  0000               	dw	0
  1343  017A0E  0000               	dw	0
  1344  017A10  0000               	dw	0
  1345  017A12  0000               	dw	0
  1346  017A14  0000               	dw	0
  1347  017A16  0000               	dw	0
  1348  017A18  0000               	dw	0
  1349  017A1A  0000               	dw	0
  1350  017A1C  0000               	dw	0
  1351  017A1E  0000               	dw	0
  1352  017A20  0000               	dw	0
  1353  017A22  0000               	dw	0
  1354  017A24  0000               	dw	0
  1355  017A26  0000               	dw	0
  1356  017A28  0000               	dw	0
  1357  017A2A  0000               	dw	0
  1358  017A2C  0000               	dw	0
  1359  017A2E  0000               	dw	0
  1360  017A30  0000               	dw	0
  1361  017A32  0000               	dw	0
  1362  017A34  0000               	dw	0
  1363  017A36  0000               	dw	0
  1364  017A38  0000               	dw	0
  1365  017A3A  0000               	dw	0
  1366  017A3C  0000               	dw	0
  1367  017A3E  0000               	dw	0
  1368  017A40  0000               	dw	0
  1369  017A42  0000               	dw	0
  1370  017A44  0000               	dw	0
  1371  017A46  0000               	dw	0
  1372  017A48  0000               	dw	0
  1373  017A4A  0000               	dw	0
  1374  017A4C  0000               	dw	0
  1375  017A4E  0000               	dw	0
  1376  017A50  0000               	dw	0
  1377  017A52  0000               	dw	0
  1378  017A54  0000               	dw	0
  1379  017A56  0000               	dw	0
  1380  017A58  0000               	dw	0
  1381  017A5A  0000               	dw	0
  1382  017A5C  0000               	dw	0
  1383  017A5E  0000               	dw	0
  1384  017A60  0000               	dw	0
  1385  017A62  0000               	dw	0
  1386  017A64  0000               	dw	0
  1387  017A66  0000               	dw	0
  1388  017A68  0000               	dw	0
  1389  017A6A  0000               	dw	0
  1390  017A6C  42FA               	dw	17146
  1391  017A6E  0000               	dw	0
  1392  017A70  0000               	dw	0
  1393  017A72  0000               	dw	0
  1394  017A74  0000               	dw	0
  1395  017A76  0000               	dw	0
  1396  017A78  0000               	dw	0
  1397  017A7A  0000               	dw	0
  1398  017A7C  0000               	dw	0
  1399  017A7E  0000               	dw	0
  1400  017A80  0000               	dw	0
  1401  017A82  0000               	dw	0
  1402  017A84  0000               	dw	0
  1403  017A86  0000               	dw	0
  1404  017A88  0000               	dw	0
  1405  017A8A  0000               	dw	0
  1406  017A8C  0000               	dw	0
  1407  017A8E  0000               	dw	0
  1408  017A90  0000               	dw	0
  1409  017A92  0000               	dw	0
  1410  017A94  0000               	dw	0
  1411  017A96  00                 	db	0
  1412  017A97  01                 	db	1
  1413  017A98  0000               	dw	0
  1414  017A9A  3F80               	dw	16256
  1415  017A9C  0000               	dw	0
  1416  017A9E  3F80               	dw	16256
  1417  017AA0  00                 	db	0
  1418  017AA1  00                 	db	0
  1419  017AA2  00                 	db	0
  1420  017AA3  00                 	db	0
  1421  017AA4  00                 	db	0
  1422  017AA5  00                 	db	0
  1423  017AA6  00                 	db	0
  1424  017AA7  00                 	db	0
  1425  017AA8  00                 	db	0
  1426  017AA9  00                 	db	0
  1427  017AAA  00                 	db	0
  1428  017AAB  00                 	db	0
  1429  017AAC  00                 	db	0
  1430  017AAD  00                 	db	0
  1431  017AAE  00                 	db	0
  1432  017AAF  00                 	db	0
  1433  017AB0  00                 	db	0
  1434  017AB1  00                 	db	0
  1435  017AB2  00                 	db	0
  1436  017AB3  00                 	db	0
  1437  017AB4  00                 	db	0
  1438  017AB5  00                 	db	0
  1439  017AB6  00                 	db	0
  1440  017AB7  00                 	db	0
  1441  017AB8  00                 	db	0
  1442  017AB9  00                 	db	0
  1443  017ABA  00                 	db	0
  1444  017ABB  00                 	db	0
  1445  017ABC  00                 	db	0
  1446  017ABD  00                 	db	0
  1447  017ABE  00                 	db	0
  1448  017ABF  00                 	db	0
  1449  017AC0  00                 	db	0
  1450  017AC1  00                 	db	0
  1451  017AC2  00                 	db	0
  1452  017AC3  00                 	db	0
  1453  017AC4  00                 	db	0
  1454  017AC5  00                 	db	0
  1455  017AC6  00                 	db	0
  1456  017AC7  00                 	db	0
  1457  017AC8  00                 	db	0
  1458  017AC9  00                 	db	0
  1459  017ACA  00                 	db	0
  1460  017ACB  00                 	db	0
  1461  017ACC  00                 	db	0
  1462  017ACD  00                 	db	0
  1463  017ACE  00                 	db	0
  1464  017ACF  00                 	db	0
  1465  017AD0  00                 	db	0
  1466  017AD1  00                 	db	0
  1467  017AD2  00                 	db	0
  1468  017AD3  00                 	db	0
  1469  017AD4  00                 	db	0
  1470  017AD5  00                 	db	0
  1471  017AD6  00                 	db	0
  1472  017AD7  00                 	db	0
  1473  017AD8  00                 	db	0
  1474  017AD9  00                 	db	0
  1475  017ADA  00                 	db	0
  1476  017ADB  00                 	db	0
  1477  017ADC  00                 	db	0
  1478  017ADD  00                 	db	0
  1479  017ADE  00                 	db	0
  1480  017ADF  00                 	db	0
  1481  017AE0  00                 	db	0
  1482  017AE1  00                 	db	0
  1483  017AE2  00                 	db	0
  1484  017AE3  00                 	db	0
  1485  017AE4  00                 	db	0
  1486  017AE5  00                 	db	0
  1487  017AE6  00                 	db	0
  1488  017AE7  00                 	db	0
  1489  017AE8  00                 	db	0
  1490  017AE9  00                 	db	0
  1491  017AEA  00                 	db	0
  1492  017AEB  00                 	db	0
  1493  017AEC  0000               	dw	0
  1494  017AEE  0000               	dw	0
  1495  017AF0  0000               	dw	0
  1496  017AF2  0000               	dw	0
  1497  017AF4  0000               	dw	0
  1498  017AF6  0000               	dw	0
  1499  017AF8  0000               	dw	0
  1500  017AFA  0000               	dw	0
  1501  017AFC  0000               	dw	0
  1502  017AFE  0000               	dw	0
  1503  017B00  01                 	db	1
  1504  017B01  00                 	db	0
  1505  017B02  00                 	db	0
  1506  017B03  00                 	db	0
  1507  017B04  00                 	db	0
  1508  017B05  00                 	db	0
  1509  017B06  00                 	db	0
  1510  017B07  00                 	db	0
  1511  017B08  00                 	db	0
  1512                           
  1513                           	psect	idataBANK0
  1514  01D1E8                     __pidataBANK0:
  1515                           	opt callstack 0
  1516                           
  1517                           ;initializer for _R
  1518  01D1E8  0000               	dw	0
  1519  01D1EA  0000               	dw	0
  1520  01D1EC  0000               	dw	0
  1521  01D1EE  0000               	dw	0
  1522  01D1F0  0000               	dw	0
  1523  01D1F2  0000               	dw	0
  1524  01D1F4  0000               	dw	0
  1525  01D1F6  0000               	dw	0
  1526  01D1F8  0000               	dw	0
  1527  01D1FA  0000               	dw	0
  1528  01D1FC  0000               	dw	0
  1529  01D1FE  0000               	dw	0
  1530  01D200  0000               	dw	0
  1531  01D202  0000               	dw	0
  1532  01D204  0000               	dw	0
  1533  01D206  0000               	dw	0
  1534  01D208  0000               	dw	0
  1535  01D20A  0000               	dw	0
  1536  01D20C  0000               	dw	0
  1537  01D20E  0F62               	dw	3938
  1538  01D210  0FA4               	dw	4004
  1539  01D212  89A0               	dw	35232
  1540  01D214  3DB0               	dw	15792
  1541  01D216  DEA4               	dw	56996
  1542  01D218  3D13               	dw	15635
  1543  01D21A  00                 	db	0
  1544  01D21B  0000               	dw	0
  1545  01D21D  00                 	db	0
  1546  01D21E  1957               	dw	6487
  1547  01D220  42                 	db	66
  1548                           
  1549                           	psect	idataBANK1
  1550  01B716                     __pidataBANK1:
  1551                           	opt callstack 0
  1552                           
  1553                           ;initializer for stoa@F1166
  1554  01B716  28                 	db	40
  1555  01B717  6E                 	db	110
  1556  01B718  75                 	db	117
  1557  01B719  6C                 	db	108
  1558  01B71A  6C                 	db	108
  1559  01B71B  29                 	db	41
  1560  01B71C  00                 	db	0
  1561                           
  1562                           ;initializer for _V
  1563  01B71D  00                 	db	0
  1564  01B71E  00                 	db	0
  1565  01B71F  00                 	db	0
  1566  01B720  00                 	db	0
  1567  01B721  00                 	db	0
  1568  01B722  00                 	db	0
  1569  01B723  00                 	db	0
  1570  01B724  00                 	db	0
  1571  01B725  00                 	db	0
  1572  01B726  00                 	db	0
  1573  01B727  00                 	db	0
  1574  01B728  00                 	db	0
  1575  01B729  00                 	db	0
  1576  01B72A  00                 	db	0
  1577  01B72B  00                 	db	0
  1578  01B72C  00                 	db	0
  1579  01B72D  00                 	db	0
  1580  01B72E  00                 	db	0
  1581  01B72F  00                 	db	0
  1582  01B730  00                 	db	0
  1583  01B731  00                 	db	0
  1584  01B732  00                 	db	0
  1585  01B733  00                 	db	0
  1586  01B734  00                 	db	0
  1587  01B735  00                 	db	0
  1588  01B736  00                 	db	0
  1589  01B737  00                 	db	0
  1590  01B738  00                 	db	0
  1591  01B739  00                 	db	0
  1592  01B73A  00                 	db	0
  1593  01B73B  00                 	db	0
  1594  01B73C  00                 	db	0
  1595  01B73D  00                 	db	0
  1596  01B73E  00                 	db	0
  1597  01B73F  00                 	db	0
  1598  01B740  00                 	db	0
  1599  01B741  00                 	db	0
  1600  01B742  00                 	db	0
  1601  01B743  00                 	db	0
  1602  01B744  00                 	db	0
  1603  01B745  00                 	db	0
  1604  01B746  00                 	db	0
  1605  01B747  00                 	db	0
  1606  01B748  00                 	db	0
  1607  01B749  00                 	db	0
  1608  01B74A  00                 	db	0
  1609  01B74B  00                 	db	0
  1610  01B74C  00                 	db	0
  1611  01B74D  00                 	db	0
  1612  01B74E  00                 	db	0
  1613  01B74F  00                 	db	0
  1614  01B750  00                 	db	0
  1615  01B751  00                 	db	0
  1616  01B752  00                 	db	0
  1617  01B753  00                 	db	0
  1618  01B754  00                 	db	0
  1619  01B755  00                 	db	0
  1620  01B756  00                 	db	0
  1621  01B757  00                 	db	0
  1622  01B758  00                 	db	0
  1623  01B759  00                 	db	0
  1624  01B75A  00                 	db	0
  1625  01B75B  00                 	db	0
  1626  01B75C  00                 	db	0
  1627  01B75D  00                 	db	0
  1628  01B75E  00                 	db	0
  1629  01B75F  00                 	db	0
  1630  01B760  00                 	db	0
  1631  01B761  00                 	db	0
  1632  01B762  00                 	db	0
  1633  01B763  00                 	db	0
  1634  01B764  00                 	db	0
  1635  01B765  00                 	db	0
  1636  01B766  00                 	db	0
  1637  01B767  00                 	db	0
  1638  01B768  00                 	db	0
  1639  01B769  00                 	db	0
  1640  01B76A  00                 	db	0
  1641  01B76B  00                 	db	0
  1642  01B76C  00                 	db	0
  1643  01B76D  00                 	db	0
  1644  01B76E  00                 	db	0
  1645  01B76F  00                 	db	0
  1646  01B770  00                 	db	0
  1647  01B771  00                 	db	0
  1648  01B772  00                 	db	0
  1649  01B773  00                 	db	0
  1650  01B774  00                 	db	0
  1651  01B775  00                 	db	0
  1652  01B776  00                 	db	0
  1653  01B777  00                 	db	0
  1654  01B778  00                 	db	0
  1655  01B779  00                 	db	0
  1656  01B77A  00                 	db	0
  1657  01B77B  00                 	db	0
  1658  01B77C  00                 	db	0
  1659  01B77D  00                 	db	0
  1660  01B77E  00                 	db	0
  1661  01B77F  00                 	db	0
  1662  01B780  00                 	db	0
  1663  01B781  00                 	db	0
  1664  01B782  00                 	db	0
  1665  01B783  00                 	db	0
  1666  01B784  00                 	db	0
  1667  01B785  00                 	db	0
  1668  01B786  00                 	db	0
  1669  01B787  00                 	db	0
  1670  01B788  00                 	db	0
  1671  01B789  00                 	db	0
  1672  01B78A  00                 	db	0
  1673  01B78B  00                 	db	0
  1674  01B78C  00                 	db	0
  1675  01B78D  00                 	db	0
  1676  01B78E  00                 	db	0
  1677  01B78F  00                 	db	0
  1678  01B790  00                 	db	0
  1679  01B791  00                 	db	0
  1680  01B792  00                 	db	0
  1681  01B793  00                 	db	0
  1682  01B794  00                 	db	0
  1683  01B795  00                 	db	0
  1684  01B796  00                 	db	0
  1685  01B797  00                 	db	0
  1686  01B798  00                 	db	0
  1687  01B799  00                 	db	0
  1688  01B79A  00                 	db	0
  1689  01B79B  00                 	db	0
  1690  01B79C  00                 	db	0
  1691  01B79D  00                 	db	0
  1692  01B79E  0000               	dw	0
  1693  01B7A0  0000               	dw	0
  1694  01B7A2  0000               	dw	0
  1695  01B7A4  0000               	dw	0
  1696  01B7A6  00                 	db	0
  1697  01B7A7  00                 	db	0
  1698  01B7A8  00                 	db	0
  1699  01B7A9  00                 	db	0
  1700  01B7AA  00                 	db	0
  1701  01B7AB  00                 	db	0
  1702  01B7AC  0000               	dw	0
  1703  01B7AE  0000               	dw	0
  1704  01B7B0  0000               	dw	0
  1705  01B7B2  0000               	dw	0
  1706  01B7B4  0000               	dw	0
  1707  01B7B6  0000               	dw	0
  1708  01B7B8  00                 	db	0
  1709  01B7B9  00                 	db	0
  1710  01B7BA  00                 	db	0
  1711  01B7BB  00                 	db	0
  1712  01B7BC  00                 	db	0
  1713  01B7BD  00                 	db	0
  1714  01B7BE  00                 	db	0
  1715  01B7BF  00                 	db	0
  1716  01B7C0  00                 	db	0
  1717  01B7C1  00                 	db	0
  1718  01B7C2  00                 	db	0
  1719  01B7C3  0000               	dw	0
  1720  01B7C5  0000               	dw	0
  1721  01B7C7  2D                 	db	45
  1722  01B7C8  00                 	db	0
  1723  01B7C9  00                 	db	0
  1724  01B7CA  00                 	db	0
  1725  01B7CB  00                 	db	0
  1726  01B7CC  00                 	db	0
  1727  01B7CD  0000               	dw	0
  1728  01B7CF  0000               	dw	0
  1729  01B7D1  0000               	dw	0
  1730  01B7D3  0000               	dw	0
  1731  01B7D5  0000               	dw	0
  1732  01B7D7  0000               	dw	0
  1733  01B7D9  0000               	dw	0
  1734  01B7DB  0000               	dw	0
  1735                           
  1736                           ;initializer for _H
  1737  01B7DD  00                 	db	0
  1738  01B7DE  00                 	db	0
  1739  01B7DF  01                 	db	1
  1740  01B7E0  00                 	db	0
  1741  01B7E1  01                 	db	1
  1742  01B7E2  00                 	db	0
  1743  01B7E3  01                 	db	1
  1744  01B7E4  00                 	db	0
  1745  01B7E5  00                 	db	0
  1746                           
  1747                           	psect	mediumconst
  1748  00F87C                     __pmediumconst:
  1749                           	opt callstack 0
  1750  00F87C  00                 	db	0
  1751  00F87D                     _BVSOC_TABLE:
  1752                           	opt callstack 0
  1753  00F87D  59D8               	dw	23000
  1754  00F87F  0000               	dw	0
  1755  00F881  0005               	dw	5
  1756  00F883  0000               	dw	0
  1757  00F885  5B68               	dw	23400
  1758  00F887  0000               	dw	0
  1759  00F889  000A               	dw	10
  1760  00F88B  0000               	dw	0
  1761  00F88D  5C30               	dw	23600
  1762  00F88F  0000               	dw	0
  1763  00F891  0014               	dw	20
  1764  00F893  0000               	dw	0
  1765  00F895  5E38               	dw	24120
  1766  00F897  0000               	dw	0
  1767  00F899  0019               	dw	25
  1768  00F89B  0000               	dw	0
  1769  00F89D  5E88               	dw	24200
  1770  00F89F  0000               	dw	0
  1771  00F8A1  001E               	dw	30
  1772  00F8A3  0000               	dw	0
  1773  00F8A5  5F78               	dw	24440
  1774  00F8A7  0000               	dw	0
  1775  00F8A9  0028               	dw	40
  1776  00F8AB  0000               	dw	0
  1777  00F8AD  5FDC               	dw	24540
  1778  00F8AF  0000               	dw	0
  1779  00F8B1  002D               	dw	45
  1780  00F8B3  0000               	dw	0
  1781  00F8B5  6018               	dw	24600
  1782  00F8B7  0000               	dw	0
  1783  00F8B9  0032               	dw	50
  1784  00F8BB  0000               	dw	0
  1785  00F8BD  6046               	dw	24646
  1786  00F8BF  0000               	dw	0
  1787  00F8C1  0035               	dw	53
  1788  00F8C3  0000               	dw	0
  1789  00F8C5  607C               	dw	24700
  1790  00F8C7  0000               	dw	0
  1791  00F8C9  0037               	dw	55
  1792  00F8CB  0000               	dw	0
  1793  00F8CD  60AE               	dw	24750
  1794  00F8CF  0000               	dw	0
  1795  00F8D1  0039               	dw	57
  1796  00F8D3  0000               	dw	0
  1797  00F8D5  60E0               	dw	24800
  1798  00F8D7  0000               	dw	0
  1799  00F8D9  003C               	dw	60
  1800  00F8DB  0000               	dw	0
  1801  00F8DD  6112               	dw	24850
  1802  00F8DF  0000               	dw	0
  1803  00F8E1  003F               	dw	63
  1804  00F8E3  0000               	dw	0
  1805  00F8E5  615D               	dw	24925
  1806  00F8E7  0000               	dw	0
  1807  00F8E9  0043               	dw	67
  1808  00F8EB  0000               	dw	0
  1809  00F8ED  61A8               	dw	25000
  1810  00F8EF  0000               	dw	0
  1811  00F8F1  0046               	dw	70
  1812  00F8F3  0000               	dw	0
  1813  00F8F5  61BC               	dw	25020
  1814  00F8F7  0000               	dw	0
  1815  00F8F9  0048               	dw	72
  1816  00F8FB  0000               	dw	0
  1817  00F8FD  61D0               	dw	25040
  1818  00F8FF  0000               	dw	0
  1819  00F901  004B               	dw	75
  1820  00F903  0000               	dw	0
  1821  00F905  61DA               	dw	25050
  1822  00F907  0000               	dw	0
  1823  00F909  0050               	dw	80
  1824  00F90B  0000               	dw	0
  1825  00F90D  61E4               	dw	25060
  1826  00F90F  0000               	dw	0
  1827  00F911  0055               	dw	85
  1828  00F913  0000               	dw	0
  1829  00F915  61F8               	dw	25080
  1830  00F917  0000               	dw	0
  1831  00F919  005A               	dw	90
  1832  00F91B  0000               	dw	0
  1833  00F91D  6208               	dw	25096
  1834  00F91F  0000               	dw	0
  1835  00F921  005C               	dw	92
  1836  00F923  0000               	dw	0
  1837  00F925  6222               	dw	25122
  1838  00F927  0000               	dw	0
  1839  00F929  005D               	dw	93
  1840  00F92B  0000               	dw	0
  1841  00F92D  6234               	dw	25140
  1842  00F92F  0000               	dw	0
  1843  00F931  005F               	dw	95
  1844  00F933  0000               	dw	0
  1845  00F935  6248               	dw	25160
  1846  00F937  0000               	dw	0
  1847  00F939  0061               	dw	97
  1848  00F93B  0000               	dw	0
  1849  00F93D  625C               	dw	25180
  1850  00F93F  0000               	dw	0
  1851  00F941  0064               	dw	100
  1852  00F943  0000               	dw	0
  1853  00F945  6784               	dw	26500
  1854  00F947  0000               	dw	0
  1855  00F949  0062               	dw	98
  1856  00F94B  0000               	dw	0
  1857  00F94D                     __end_of_BVSOC_TABLE:
  1858                           	opt callstack 0
  1859  00F94D                     _T:
  1860                           	opt callstack 0
  1861  00F94D  63                 	db	99
  1862  00F94E  6F                 	db	111
  1863  00F94F  6D                 	db	109
  1864  00F950  6D                 	db	109
  1865  00F951  61                 	db	97
  1866  00F952  6E                 	db	110
  1867  00F953  64                 	db	100
  1868  00F954  73                 	db	115
  1869  00F955  20                 	db	32
  1870  00F956  31                 	db	49
  1871  00F957  00                 	db	0
  1872  00F958  00                 	db	0
  1873  00F959  00                 	db	0
  1874  00F95A  00                 	db	0
  1875  00F95B  00                 	db	0
  1876  00F95C  00                 	db	0
  1877  00F95D  00                 	db	0
  1878  00F95E  00                 	db	0
  1879  00F95F  64                 	db	100
  1880  00F960  69                 	db	105
  1881  00F961  73                 	db	115
  1882  00F962  70                 	db	112
  1883  00F963  6C                 	db	108
  1884  00F964  61                 	db	97
  1885  00F965  79                 	db	121
  1886  00F966  73                 	db	115
  1887  00F967  20                 	db	32
  1888  00F968  31                 	db	49
  1889  00F969  00                 	db	0
  1890  00F96A  00                 	db	0
  1891  00F96B  00                 	db	0
  1892  00F96C  00                 	db	0
  1893  00F96D  00                 	db	0
  1894  00F96E  00                 	db	0
  1895  00F96F  00                 	db	0
  1896  00F970  00                 	db	0
  1897  00F971  63                 	db	99
  1898  00F972  6F                 	db	111
  1899  00F973  6D                 	db	109
  1900  00F974  6D                 	db	109
  1901  00F975  61                 	db	97
  1902  00F976  6E                 	db	110
  1903  00F977  64                 	db	100
  1904  00F978  73                 	db	115
  1905  00F979  20                 	db	32
  1906  00F97A  32                 	db	50
  1907  00F97B  00                 	db	0
  1908  00F97C  00                 	db	0
  1909  00F97D  00                 	db	0
  1910  00F97E  00                 	db	0
  1911  00F97F  00                 	db	0
  1912  00F980  00                 	db	0
  1913  00F981  00                 	db	0
  1914  00F982  00                 	db	0
  1915  00F983  64                 	db	100
  1916  00F984  69                 	db	105
  1917  00F985  73                 	db	115
  1918  00F986  70                 	db	112
  1919  00F987  6C                 	db	108
  1920  00F988  61                 	db	97
  1921  00F989  79                 	db	121
  1922  00F98A  73                 	db	115
  1923  00F98B  20                 	db	32
  1924  00F98C  32                 	db	50
  1925  00F98D  00                 	db	0
  1926  00F98E  00                 	db	0
  1927  00F98F  00                 	db	0
  1928  00F990  00                 	db	0
  1929  00F991  00                 	db	0
  1930  00F992  00                 	db	0
  1931  00F993  00                 	db	0
  1932  00F994  00                 	db	0
  1933  00F995  63                 	db	99
  1934  00F996  6F                 	db	111
  1935  00F997  6D                 	db	109
  1936  00F998  6D                 	db	109
  1937  00F999  61                 	db	97
  1938  00F99A  6E                 	db	110
  1939  00F99B  64                 	db	100
  1940  00F99C  73                 	db	115
  1941  00F99D  20                 	db	32
  1942  00F99E  33                 	db	51
  1943  00F99F  00                 	db	0
  1944  00F9A0  00                 	db	0
  1945  00F9A1  00                 	db	0
  1946  00F9A2  00                 	db	0
  1947  00F9A3  00                 	db	0
  1948  00F9A4  00                 	db	0
  1949  00F9A5  00                 	db	0
  1950  00F9A6  00                 	db	0
  1951  00F9A7  64                 	db	100
  1952  00F9A8  69                 	db	105
  1953  00F9A9  73                 	db	115
  1954  00F9AA  70                 	db	112
  1955  00F9AB  6C                 	db	108
  1956  00F9AC  61                 	db	97
  1957  00F9AD  79                 	db	121
  1958  00F9AE  73                 	db	115
  1959  00F9AF  20                 	db	32
  1960  00F9B0  33                 	db	51
  1961  00F9B1  00                 	db	0
  1962  00F9B2  00                 	db	0
  1963  00F9B3  00                 	db	0
  1964  00F9B4  00                 	db	0
  1965  00F9B5  00                 	db	0
  1966  00F9B6  00                 	db	0
  1967  00F9B7  00                 	db	0
  1968  00F9B8  00                 	db	0
  1969  00F9B9  63                 	db	99
  1970  00F9BA  6F                 	db	111
  1971  00F9BB  6D                 	db	109
  1972  00F9BC  6D                 	db	109
  1973  00F9BD  61                 	db	97
  1974  00F9BE  6E                 	db	110
  1975  00F9BF  64                 	db	100
  1976  00F9C0  73                 	db	115
  1977  00F9C1  20                 	db	32
  1978  00F9C2  34                 	db	52
  1979  00F9C3  00                 	db	0
  1980  00F9C4  00                 	db	0
  1981  00F9C5  00                 	db	0
  1982  00F9C6  00                 	db	0
  1983  00F9C7  00                 	db	0
  1984  00F9C8  00                 	db	0
  1985  00F9C9  00                 	db	0
  1986  00F9CA  00                 	db	0
  1987  00F9CB  64                 	db	100
  1988  00F9CC  69                 	db	105
  1989  00F9CD  73                 	db	115
  1990  00F9CE  70                 	db	112
  1991  00F9CF  6C                 	db	108
  1992  00F9D0  61                 	db	97
  1993  00F9D1  79                 	db	121
  1994  00F9D2  73                 	db	115
  1995  00F9D3  20                 	db	32
  1996  00F9D4  34                 	db	52
  1997  00F9D5  00                 	db	0
  1998  00F9D6  00                 	db	0
  1999  00F9D7  00                 	db	0
  2000  00F9D8  00                 	db	0
  2001  00F9D9  00                 	db	0
  2002  00F9DA  00                 	db	0
  2003  00F9DB  00                 	db	0
  2004  00F9DC  00                 	db	0
  2005  00F9DD                     __end_of_T:
  2006                           	opt callstack 0
  2007  00F9DD                     _spin:
  2008                           	opt callstack 0
  2009  00F9DD  7C                 	db	124
  2010  00F9DE  7C                 	db	124
  2011  00F9DF  2F                 	db	47
  2012  00F9E0  2F                 	db	47
  2013  00F9E1  2D                 	db	45
  2014  00F9E2  2D                 	db	45
  2015  00F9E3  00                 	db	0
  2016  00F9E4  00                 	db	0
  2017  00F9E5  00                 	db	0
  2018  00F9E6  00                 	db	0
  2019  00F9E7  00                 	db	0
  2020  00F9E8  00                 	db	0
  2021  00F9E9  00                 	db	0
  2022  00F9EA  00                 	db	0
  2023  00F9EB  00                 	db	0
  2024  00F9EC  00                 	db	0
  2025  00F9ED  00                 	db	0
  2026  00F9EE  00                 	db	0
  2027  00F9EF  00                 	db	0
  2028  00F9F0  00                 	db	0
  2029  00F9F1  7C                 	db	124
  2030  00F9F2  7C                 	db	124
  2031  00F9F3  2F                 	db	47
  2032  00F9F4  2F                 	db	47
  2033  00F9F5  2D                 	db	45
  2034  00F9F6  2D                 	db	45
  2035  00F9F7  5C                 	db	92
  2036  00F9F8  5C                 	db	92
  2037  00F9F9  00                 	db	0
  2038  00F9FA  00                 	db	0
  2039  00F9FB  00                 	db	0
  2040  00F9FC  00                 	db	0
  2041  00F9FD  00                 	db	0
  2042  00F9FE  00                 	db	0
  2043  00F9FF  00                 	db	0
  2044  00FA00  00                 	db	0
  2045  00FA01  00                 	db	0
  2046  00FA02  00                 	db	0
  2047  00FA03  00                 	db	0
  2048  00FA04  00                 	db	0
  2049  00FA05  4F                 	db	79
  2050  00FA06  4F                 	db	79
  2051  00FA07  4F                 	db	79
  2052  00FA08  4F                 	db	79
  2053  00FA09  4F                 	db	79
  2054  00FA0A  4F                 	db	79
  2055  00FA0B  2D                 	db	45
  2056  00FA0C  2D                 	db	45
  2057  00FA0D  5F                 	db	95
  2058  00FA0E  5F                 	db	95
  2059  00FA0F  2D                 	db	45
  2060  00FA10  00                 	db	0
  2061  00FA11  00                 	db	0
  2062  00FA12  00                 	db	0
  2063  00FA13  00                 	db	0
  2064  00FA14  00                 	db	0
  2065  00FA15  00                 	db	0
  2066  00FA16  00                 	db	0
  2067  00FA17  00                 	db	0
  2068  00FA18  00                 	db	0
  2069  00FA19  76                 	db	118
  2070  00FA1A  76                 	db	118
  2071  00FA1B  3C                 	db	60
  2072  00FA1C  3C                 	db	60
  2073  00FA1D  5E                 	db	94
  2074  00FA1E  5E                 	db	94
  2075  00FA1F  3E                 	db	62
  2076  00FA20  3E                 	db	62
  2077  00FA21  00                 	db	0
  2078  00FA22  00                 	db	0
  2079  00FA23  00                 	db	0
  2080  00FA24  00                 	db	0
  2081  00FA25  00                 	db	0
  2082  00FA26  00                 	db	0
  2083  00FA27  00                 	db	0
  2084  00FA28  00                 	db	0
  2085  00FA29  00                 	db	0
  2086  00FA2A  00                 	db	0
  2087  00FA2B  00                 	db	0
  2088  00FA2C  00                 	db	0
  2089  00FA2D  2E                 	db	46
  2090  00FA2E  2E                 	db	46
  2091  00FA2F  2A                 	db	42
  2092  00FA30  2A                 	db	42
  2093  00FA31  78                 	db	120
  2094  00FA32  23                 	db	35
  2095  00FA33  78                 	db	120
  2096  00FA34  23                 	db	35
  2097  00FA35  58                 	db	88
  2098  00FA36  58                 	db	88
  2099  00FA37  7C                 	db	124
  2100  00FA38  7C                 	db	124
  2101  00FA39  2D                 	db	45
  2102  00FA3A  2D                 	db	45
  2103  00FA3B  00                 	db	0
  2104  00FA3C  00                 	db	0
  2105  00FA3D  00                 	db	0
  2106  00FA3E  00                 	db	0
  2107  00FA3F  00                 	db	0
  2108  00FA40  00                 	db	0
  2109  00FA41  2E                 	db	46
  2110  00FA42  2E                 	db	46
  2111  00FA43  6F                 	db	111
  2112  00FA44  6F                 	db	111
  2113  00FA45  4F                 	db	79
  2114  00FA46  4F                 	db	79
  2115  00FA47  6F                 	db	111
  2116  00FA48  6F                 	db	111
  2117  00FA49  00                 	db	0
  2118  00FA4A  00                 	db	0
  2119  00FA4B  00                 	db	0
  2120  00FA4C  00                 	db	0
  2121  00FA4D  00                 	db	0
  2122  00FA4E  00                 	db	0
  2123  00FA4F  00                 	db	0
  2124  00FA50  00                 	db	0
  2125  00FA51  00                 	db	0
  2126  00FA52  00                 	db	0
  2127  00FA53  00                 	db	0
  2128  00FA54  00                 	db	0
  2129  00FA55                     __end_of_spin:
  2130                           	opt callstack 0
  2131  00FA55  0000               	dw	0
  2132  00FA57  3F80               	dw	16256
  2133  00FA59  0000               	dw	0
  2134  00FA5B  3FC0               	dw	16320
  2135  00FA5D                     __end_of_bp:
  2136                           	opt callstack 0
  2137  00FA5D  AA00               	dw	43520
  2138  00FA5F  3FB8               	dw	16312
  2139  00FA61                     __end_of_ivln2_h:
  2140                           	opt callstack 0
  2141  00FA61  23C6               	dw	9158
  2142  00FA63  B8F6               	dw	47350
  2143  00FA65                     __end_of_cp_l:
  2144                           	opt callstack 0
  2145  00FA65  4000               	dw	16384
  2146  00FA67  3F76               	dw	16246
  2147  00FA69                     __end_of_cp_h:
  2148                           	opt callstack 0
  2149  0000                     _IVTADL	set	14493
  2150  0000                     _IVTADH	set	14494
  2151  0000                     _IVTADU	set	14495
  2152  0000                     _CRCDATH	set	14689
  2153  0000                     _CRCDATL	set	14688
  2154  0000                     _CRCCON0bits	set	14696
  2155  0000                     _CRCCON1bits	set	14697
  2156  0000                     _CRCXORL	set	14694
  2157  0000                     _CRCXORH	set	14695
  2158  0000                     _SCANTRIG	set	14717
  2159  0000                     _SCANHADRL	set	14713
  2160  0000                     _SCANHADRH	set	14714
  2161  0000                     _SCANHADRU	set	14715
  2162  0000                     _SCANLADRL	set	14710
  2163  0000                     _SCANLADRH	set	14711
  2164  0000                     _SCANLADRU	set	14712
  2165  0000                     _SCANCON0	set	14716
  2166  0000                     _CRCACCH	set	14691
  2167  0000                     _CRCACCL	set	14690
  2168  0000                     _CRCCON1	set	14697
  2169  0000                     _CRCCON0	set	14696
  2170  0000                     _PIR6bits	set	14758
  2171  0000                     _PIR4bits	set	14756
  2172  0000                     _PIE8bits	set	14744
  2173  0000                     _PIR8bits	set	14760
  2174  0000                     _PIR0bits	set	14752
  2175  0000                     _NVMCON2	set	14822
  2176  0000                     _NVMDAT	set	14819
  2177  0000                     _NVMADRL	set	14816
  2178  0000                     _NVMADRH	set	14817
  2179  0000                     _NVMCON1bits	set	14821
  2180  0000                     _SCANPR	set	14839
  2181  0000                     _DMA2PR	set	14836
  2182  0000                     _DMA1PR	set	14835
  2183  0000                     _MAINPR	set	14834
  2184  0000                     _ISRPR	set	14833
  2185  0000                     _PIE2bits	set	14738
  2186  0000                     _PIR2bits	set	14754
  2187  0000                     _PIE9bits	set	14745
  2188  0000                     _PIR9bits	set	14761
  2189  0000                     _PIE6bits	set	14742
  2190  0000                     _PIE3bits	set	14739
  2191  0000                     _PMD7	set	14791
  2192  0000                     _PMD6	set	14790
  2193  0000                     _PMD5	set	14789
  2194  0000                     _PMD4	set	14788
  2195  0000                     _PMD3	set	14787
  2196  0000                     _PMD2	set	14786
  2197  0000                     _PMD1	set	14785
  2198  0000                     _PMD0	set	14784
  2199  0000                     _OSCTUNE	set	14814
  2200  0000                     _OSCFRQ	set	14815
  2201  0000                     _OSCEN	set	14813
  2202  0000                     _OSCCON3	set	14811
  2203  0000                     _OSCCON1	set	14809
  2204  0000                     _IPR8bits	set	14728
  2205  0000                     _IPR9bits	set	14729
  2206  0000                     _IPR5bits	set	14725
  2207  0000                     _IPR1bits	set	14721
  2208  0000                     _IPR3bits	set	14723
  2209  0000                     _IPR6bits	set	14726
  2210  0000                     _IPR2bits	set	14722
  2211  0000                     _PIE5bits	set	14741
  2212  0000                     _PIE1bits	set	14737
  2213  0000                     _PIR5bits	set	14757
  2214  0000                     _PIR1bits	set	14753
  2215  0000                     _PLLR	set	118496
  2216  0000                     _SPI1SDIPPS	set	15071
  2217  0000                     _U1RXPPS	set	15077
  2218  0000                     _RC6PPS	set	14870
  2219  0000                     _RC5PPS	set	14869
  2220  0000                     _INT1PPS	set	15041
  2221  0000                     _RD1PPS	set	14873
  2222  0000                     _INT0PPS	set	15040
  2223  0000                     _RC3PPS	set	14867
  2224  0000                     _RB6PPS	set	14862
  2225  0000                     _SPI1SCKPPS	set	15070
  2226  0000                     _U2RXPPS	set	15080
  2227  0000                     _SLRCONF	set	14995
  2228  0000                     _SLRCONE	set	14979
  2229  0000                     _SLRCOND	set	14963
  2230  0000                     _SLRCONC	set	14947
  2231  0000                     _SLRCONB	set	14931
  2232  0000                     _SLRCONA	set	14915
  2233  0000                     _ODCOND	set	14962
  2234  0000                     _ODCONC	set	14946
  2235  0000                     _ODCONB	set	14930
  2236  0000                     _ODCONA	set	14914
  2237  0000                     _ODCONF	set	14994
  2238  0000                     _ODCONE	set	14978
  2239  0000                     _WPUC	set	14945
  2240  0000                     _WPUA	set	14913
  2241  0000                     _WPUB	set	14929
  2242  0000                     _WPUE	set	14977
  2243  0000                     _WPUF	set	14993
  2244  0000                     _WPUD	set	14961
  2245  0000                     _ANSELA	set	14912
  2246  0000                     _ANSELF	set	14992
  2247  0000                     _ANSELE	set	14976
  2248  0000                     _ANSELB	set	14928
  2249  0000                     _ANSELC	set	14944
  2250  0000                     _ANSELD	set	14960
  2251  0000                     _DMA2SSA	set	15321
  2252  0000                     _DMA1SSA	set	15353
  2253  0000                     _DMA2DSZ	set	15310
  2254  0000                     _DMA2SSZ	set	15319
  2255  0000                     _DMA2DSA	set	15312
  2256  0000                     _DMA1DSZ	set	15342
  2257  0000                     _DMA1SSZ	set	15351
  2258  0000                     _DMA1DSA	set	15344
  2259  0000                     _DMA2CON0bits	set	15324
  2260  0000                     _DMA2CON1bits	set	15325
  2261  0000                     _DMA1CON0bits	set	15356
  2262  0000                     _DMA1CON1bits	set	15357
  2263  0000                     _DMA2CON0	set	15324
  2264  0000                     _DMA2AIRQ	set	15326
  2265  0000                     _DMA2SIRQ	set	15327
  2266  0000                     _DMA2CON1	set	15325
  2267  0000                     _DMA1CON0	set	15356
  2268  0000                     _DMA1AIRQ	set	15358
  2269  0000                     _DMA1SIRQ	set	15359
  2270  0000                     _DMA1CON1	set	15357
  2271  0000                     _CLKRCON	set	15589
  2272  0000                     _CLKRCLK	set	15590
  2273  0000                     _SPI1CON1bits	set	15637
  2274  0000                     _SPI1STATUSbits	set	15639
  2275  0000                     _SPI1INTFbits	set	15642
  2276  0000                     _SPI1CON0bits	set	15636
  2277  0000                     _SPI1RXB	set	15632
  2278  0000                     _SPI1TXB	set	15633
  2279  0000                     _SPI1TCNTL	set	15634
  2280  0000                     _SPI1CON0	set	15636
  2281  0000                     _SPI1CLK	set	15644
  2282  0000                     _SPI1BAUD	set	15641
  2283  0000                     _SPI1CON2	set	15638
  2284  0000                     _SPI1CON1	set	15637
  2285  0000                     _U2RXB	set	15824
  2286  0000                     _U2TXB	set	15826
  2287  0000                     _U2ERRIE	set	15842
  2288  0000                     _U2ERRIR	set	15841
  2289  0000                     _U2UIR	set	15840
  2290  0000                     _U2FIFO	set	15839
  2291  0000                     _U2BRGH	set	15838
  2292  0000                     _U2BRGL	set	15837
  2293  0000                     _U2CON2	set	15836
  2294  0000                     _U2CON1	set	15835
  2295  0000                     _U2CON0	set	15834
  2296  0000                     _U2P3L	set	15832
  2297  0000                     _U2P2L	set	15830
  2298  0000                     _U2P1L	set	15828
  2299  0000                     _U1RXB	set	15848
  2300  0000                     _U1ERRIE	set	15866
  2301  0000                     _U1ERRIR	set	15865
  2302  0000                     _U1UIR	set	15864
  2303  0000                     _U1FIFO	set	15863
  2304  0000                     _U1BRGH	set	15862
  2305  0000                     _U1BRGL	set	15861
  2306  0000                     _U1CON2	set	15860
  2307  0000                     _U1CON1	set	15859
  2308  0000                     _U1CON0	set	15858
  2309  0000                     _U1P3H	set	15857
  2310  0000                     _U1P3L	set	15856
  2311  0000                     _U1P2H	set	15855
  2312  0000                     _U1P2L	set	15854
  2313  0000                     _U1P1H	set	15853
  2314  0000                     _U1P1L	set	15852
  2315  0000                     _FVRCON	set	16065
  2316  0000                     _ADFLTRL	set	16102
  2317  0000                     _ADFLTRH	set	16103
  2318  0000                     _ADCON0bits	set	16120
  2319  0000                     _ADCON0	set	16120
  2320  0000                     _ADCLK	set	16127
  2321  0000                     _ADACT	set	16126
  2322  0000                     _ADREF	set	16125
  2323  0000                     _ADSTAT	set	16124
  2324  0000                     _ADCON3	set	16123
  2325  0000                     _ADCON2	set	16122
  2326  0000                     _ADCON1	set	16121
  2327  0000                     _ADPREH	set	16119
  2328  0000                     _ADPREL	set	16118
  2329  0000                     _ADCAP	set	16117
  2330  0000                     _ADACQH	set	16116
  2331  0000                     _ADACQL	set	16115
  2332  0000                     _ADPCH	set	16113
  2333  0000                     _ADRPT	set	16108
  2334  0000                     _ADACCU	set	16106
  2335  0000                     _ADSTPTH	set	16101
  2336  0000                     _ADSTPTL	set	16100
  2337  0000                     _ADUTHH	set	16097
  2338  0000                     _ADUTHL	set	16096
  2339  0000                     _ADLTHH	set	16095
  2340  0000                     _ADLTHL	set	16094
  2341  0000                     _CCPTMRS1bits	set	16223
  2342  0000                     _PORTDbits	set	16333
  2343  0000                     _PORTFbits	set	16335
  2344  0000                     _LATFbits	set	16319
  2345  0000                     _LATCbits	set	16316
  2346  0000                     _LATDbits	set	16317
  2347  0000                     _PORTBbits	set	16331
  2348  0000                     _T3CONbits	set	16294
  2349  0000                     _T3CON	set	16294
  2350  0000                     _TMR3L	set	16292
  2351  0000                     _TMR3H	set	16293
  2352  0000                     _T3CLK	set	16297
  2353  0000                     _T3GATE	set	16296
  2354  0000                     _T3GCON	set	16295
  2355  0000                     _T2CON	set	16300
  2356  0000                     _T2TMR	set	16298
  2357  0000                     _T2PR	set	16299
  2358  0000                     _T2RST	set	16303
  2359  0000                     _T2HLT	set	16301
  2360  0000                     _T2CLKCON	set	16302
  2361  0000                     _PWM8DCL	set	16224
  2362  0000                     _PWM8DCH	set	16225
  2363  0000                     _PWM8CON	set	16226
  2364  0000                     _LATEbits	set	16318
  2365  0000                     _T5CONbits	set	16282
  2366  0000                     _T5CON	set	16282
  2367  0000                     _TMR5L	set	16280
  2368  0000                     _TMR5H	set	16281
  2369  0000                     _T5CLK	set	16285
  2370  0000                     _T5GATE	set	16284
  2371  0000                     _T5GCON	set	16283
  2372  0000                     _T6CON	set	16276
  2373  0000                     _T6TMR	set	16274
  2374  0000                     _T6PR	set	16275
  2375  0000                     _T6RST	set	16279
  2376  0000                     _T6HLT	set	16277
  2377  0000                     _T6CLKCON	set	16278
  2378  0000                     _TRISD	set	16325
  2379  0000                     _TRISC	set	16324
  2380  0000                     _TRISB	set	16323
  2381  0000                     _TRISA	set	16322
  2382  0000                     _TRISF	set	16327
  2383  0000                     _TRISE	set	16326
  2384  0000                     _LATC	set	16316
  2385  0000                     _LATB	set	16315
  2386  0000                     _LATF	set	16319
  2387  0000                     _LATA	set	16314
  2388  0000                     _LATD	set	16317
  2389  0000                     _LATE	set	16318
  2390  0000                     _IVTLOCKbits	set	16340
  2391  0000                     _IVTLOCK	set	16340
  2392  0000                     _INTCON0bits	set	16338
  2393  0000                     _GIE	set	130711
  2394  00FA69                     STR_93:
  2395                           
  2396                           ; BSR set to: 57
  2397  00FA69  20                 	db	32
  2398  00FA6A  25                 	db	37
  2399  00FA6B  63                 	db	99	;'c'
  2400  00FA6C  20                 	db	32
  2401  00FA6D  2C                 	db	44
  2402  00FA6E  25                 	db	37
  2403  00FA6F  6C                 	db	108	;'l'
  2404  00FA70  75                 	db	117	;'u'
  2405  00FA71  2C                 	db	44
  2406  00FA72  25                 	db	37
  2407  00FA73  34                 	db	52	;'4'
  2408  00FA74  2E                 	db	46
  2409  00FA75  34                 	db	52	;'4'
  2410  00FA76  66                 	db	102	;'f'
  2411  00FA77  2C                 	db	44
  2412  00FA78  25                 	db	37
  2413  00FA79  34                 	db	52	;'4'
  2414  00FA7A  2E                 	db	46
  2415  00FA7B  34                 	db	52	;'4'
  2416  00FA7C  66                 	db	102	;'f'
  2417  00FA7D  2C                 	db	44
  2418  00FA7E  25                 	db	37
  2419  00FA7F  34                 	db	52	;'4'
  2420  00FA80  2E                 	db	46
  2421  00FA81  34                 	db	52	;'4'
  2422  00FA82  66                 	db	102	;'f'
  2423  00FA83  2C                 	db	44
  2424  00FA84  25                 	db	37
  2425  00FA85  34                 	db	52	;'4'
  2426  00FA86  2E                 	db	46
  2427  00FA87  34                 	db	52	;'4'
  2428  00FA88  66                 	db	102	;'f'
  2429  00FA89  2C                 	db	44
  2430  00FA8A  25                 	db	37
  2431  00FA8B  34                 	db	52	;'4'
  2432  00FA8C  2E                 	db	46
  2433  00FA8D  34                 	db	52	;'4'
  2434  00FA8E  66                 	db	102	;'f'
  2435  00FA8F  2C                 	db	44
  2436  00FA90  25                 	db	37
  2437  00FA91  34                 	db	52	;'4'
  2438  00FA92  2E                 	db	46
  2439  00FA93  33                 	db	51	;'3'
  2440  00FA94  66                 	db	102	;'f'
  2441  00FA95  2C                 	db	44
  2442  00FA96  25                 	db	37
  2443  00FA97  34                 	db	52	;'4'
  2444  00FA98  2E                 	db	46
  2445  00FA99  33                 	db	51	;'3'
  2446  00FA9A  66                 	db	102	;'f'
  2447  00FA9B  2C                 	db	44
  2448  00FA9C  25                 	db	37
  2449  00FA9D  34                 	db	52	;'4'
  2450  00FA9E  2E                 	db	46
  2451  00FA9F  33                 	db	51	;'3'
  2452  00FAA0  66                 	db	102	;'f'
  2453  00FAA1  2C                 	db	44
  2454  00FAA2  25                 	db	37
  2455  00FAA3  34                 	db	52	;'4'
  2456  00FAA4  2E                 	db	46
  2457  00FAA5  33                 	db	51	;'3'
  2458  00FAA6  66                 	db	102	;'f'
  2459  00FAA7  2C                 	db	44
  2460  00FAA8  25                 	db	37
  2461  00FAA9  34                 	db	52	;'4'
  2462  00FAAA  2E                 	db	46
  2463  00FAAB  33                 	db	51	;'3'
  2464  00FAAC  66                 	db	102	;'f'
  2465  00FAAD  2C                 	db	44
  2466  00FAAE  25                 	db	37
  2467  00FAAF  34                 	db	52	;'4'
  2468  00FAB0  2E                 	db	46
  2469  00FAB1  33                 	db	51	;'3'
  2470  00FAB2  66                 	db	102	;'f'
  2471  00FAB3  2C                 	db	44
  2472  00FAB4  25                 	db	37
  2473  00FAB5  64                 	db	100	;'d'
  2474  00FAB6  2C                 	db	44
  2475  00FAB7  25                 	db	37
  2476  00FAB8  64                 	db	100	;'d'
  2477  00FAB9  2C                 	db	44
  2478  00FABA  25                 	db	37
  2479  00FABB  32                 	db	50	;'2'
  2480  00FABC  2E                 	db	46
  2481  00FABD  36                 	db	54	;'6'
  2482  00FABE  66                 	db	102	;'f'
  2483  00FABF  2C                 	db	44
  2484  00FAC0  25                 	db	37
  2485  00FAC1  34                 	db	52	;'4'
  2486  00FAC2  2E                 	db	46
  2487  00FAC3  33                 	db	51	;'3'
  2488  00FAC4  66                 	db	102	;'f'
  2489  00FAC5  2C                 	db	44
  2490  00FAC6  25                 	db	37
  2491  00FAC7  64                 	db	100	;'d'
  2492  00FAC8  2C                 	db	44
  2493  00FAC9  25                 	db	37
  2494  00FACA  64                 	db	100	;'d'
  2495  00FACB  2C                 	db	44
  2496  00FACC  25                 	db	37
  2497  00FACD  6C                 	db	108	;'l'
  2498  00FACE  75                 	db	117	;'u'
  2499  00FACF  2C                 	db	44
  2500  00FAD0  25                 	db	37
  2501  00FAD1  6C                 	db	108	;'l'
  2502  00FAD2  75                 	db	117	;'u'
  2503  00FAD3  2C                 	db	44
  2504  00FAD4  25                 	db	37
  2505  00FAD5  34                 	db	52	;'4'
  2506  00FAD6  2E                 	db	46
  2507  00FAD7  33                 	db	51	;'3'
  2508  00FAD8  66                 	db	102	;'f'
  2509  00FAD9  2C                 	db	44
  2510  00FADA  25                 	db	37
  2511  00FADB  34                 	db	52	;'4'
  2512  00FADC  2E                 	db	46
  2513  00FADD  33                 	db	51	;'3'
  2514  00FADE  66                 	db	102	;'f'
  2515  00FADF  2C                 	db	44
  2516  00FAE0  25                 	db	37
  2517  00FAE1  34                 	db	52	;'4'
  2518  00FAE2  2E                 	db	46
  2519  00FAE3  33                 	db	51	;'3'
  2520  00FAE4  66                 	db	102	;'f'
  2521  00FAE5  0D                 	db	13
  2522  00FAE6  0A                 	db	10
  2523  00FAE7  00                 	db	0
  2524  00FAE8                     STR_39:
  2525                           
  2526                           ; BSR set to: 57
  2527  00FAE8  53                 	db	83	;'S'
  2528  00FAE9  25                 	db	37
  2529  00FAEA  63                 	db	99	;'c'
  2530  00FAEB  43                 	db	67	;'C'
  2531  00FAEC  20                 	db	32
  2532  00FAED  25                 	db	37
  2533  00FAEE  64                 	db	100	;'d'
  2534  00FAEF  20                 	db	32
  2535  00FAF0  52                 	db	82	;'R'
  2536  00FAF1  55                 	db	85	;'U'
  2537  00FAF2  4E                 	db	78	;'N'
  2538  00FAF3  20                 	db	32
  2539  00FAF4  25                 	db	37
  2540  00FAF5  64                 	db	100	;'d'
  2541  00FAF6  20                 	db	32
  2542  00FAF7  56                 	db	86	;'V'
  2543  00FAF8  25                 	db	37
  2544  00FAF9  32                 	db	50	;'2'
  2545  00FAFA  2E                 	db	46
  2546  00FAFB  32                 	db	50	;'2'
  2547  00FAFC  66                 	db	102	;'f'
  2548  00FAFD  20                 	db	32
  2549  00FAFE  20                 	db	32
  2550  00FAFF  20                 	db	32
  2551  00FB00  20                 	db	32
  2552  00FB01  20                 	db	32
  2553  00FB02  20                 	db	32
  2554  00FB03  20                 	db	32
  2555  00FB04  00                 	db	0
  2556  00FB05                     STR_20:
  2557                           
  2558                           ; BSR set to: 57
  2559  00FB05  52                 	db	82	;'R'
  2560  00FB06  31                 	db	49	;'1'
  2561  00FB07  20                 	db	32
  2562  00FB08  25                 	db	37
  2563  00FB09  32                 	db	50	;'2'
  2564  00FB0A  2E                 	db	46
  2565  00FB0B  33                 	db	51	;'3'
  2566  00FB0C  66                 	db	102	;'f'
  2567  00FB0D  20                 	db	32
  2568  00FB0E  25                 	db	37
  2569  00FB0F  33                 	db	51	;'3'
  2570  00FB10  2E                 	db	46
  2571  00FB11  34                 	db	52	;'4'
  2572  00FB12  66                 	db	102	;'f'
  2573  00FB13  20                 	db	32
  2574  00FB14  20                 	db	32
  2575  00FB15  20                 	db	32
  2576  00FB16  20                 	db	32
  2577  00FB17  20                 	db	32
  2578  00FB18  20                 	db	32
  2579  00FB19  20                 	db	32
  2580  00FB1A  20                 	db	32
  2581  00FB1B  20                 	db	32
  2582  00FB1C  20                 	db	32
  2583  00FB1D  20                 	db	32
  2584  00FB1E  00                 	db	0
  2585  00FB1F                     STR_21:
  2586                           
  2587                           ; BSR set to: 57
  2588  00FB1F  52                 	db	82	;'R'
  2589  00FB20  32                 	db	50	;'2'
  2590  00FB21  20                 	db	32
  2591  00FB22  25                 	db	37
  2592  00FB23  32                 	db	50	;'2'
  2593  00FB24  2E                 	db	46
  2594  00FB25  33                 	db	51	;'3'
  2595  00FB26  66                 	db	102	;'f'
  2596  00FB27  20                 	db	32
  2597  00FB28  25                 	db	37
  2598  00FB29  33                 	db	51	;'3'
  2599  00FB2A  2E                 	db	46
  2600  00FB2B  34                 	db	52	;'4'
  2601  00FB2C  66                 	db	102	;'f'
  2602  00FB2D  20                 	db	32
  2603  00FB2E  20                 	db	32
  2604  00FB2F  20                 	db	32
  2605  00FB30  20                 	db	32
  2606  00FB31  20                 	db	32
  2607  00FB32  20                 	db	32
  2608  00FB33  20                 	db	32
  2609  00FB34  20                 	db	32
  2610  00FB35  20                 	db	32
  2611  00FB36  20                 	db	32
  2612  00FB37  20                 	db	32
  2613  00FB38  00                 	db	0
  2614  00FB39                     STR_11:
  2615                           
  2616                           ; BSR set to: 57
  2617  00FB39  53                 	db	83	;'S'
  2618  00FB3A  20                 	db	32
  2619  00FB3B  53                 	db	83	;'S'
  2620  00FB3C  25                 	db	37
  2621  00FB3D  63                 	db	99	;'c'
  2622  00FB3E  43                 	db	67	;'C'
  2623  00FB3F  20                 	db	32
  2624  00FB40  25                 	db	37
  2625  00FB41  64                 	db	100	;'d'
  2626  00FB42  20                 	db	32
  2627  00FB43  25                 	db	37
  2628  00FB44  32                 	db	50	;'2'
  2629  00FB45  2E                 	db	46
  2630  00FB46  34                 	db	52	;'4'
  2631  00FB47  66                 	db	102	;'f'
  2632  00FB48  20                 	db	32
  2633  00FB49  20                 	db	32
  2634  00FB4A  20                 	db	32
  2635  00FB4B  20                 	db	32
  2636  00FB4C  20                 	db	32
  2637  00FB4D  20                 	db	32
  2638  00FB4E  20                 	db	32
  2639  00FB4F  20                 	db	32
  2640  00FB50  20                 	db	32
  2641  00FB51  20                 	db	32
  2642  00FB52  00                 	db	0
  2643  00FB53                     
  2644                           ; BSR set to: 57
  2645  00FB53  20                 	db	32
  2646  00FB54  4D                 	db	77	;'M'
  2647  00FB55  65                 	db	101	;'e'
  2648  00FB56  73                 	db	115	;'s'
  2649  00FB57  67                 	db	103	;'g'
  2650  00FB58  20                 	db	32
  2651  00FB59  25                 	db	37
  2652  00FB5A  64                 	db	100	;'d'
  2653  00FB5B  20                 	db	32
  2654  00FB5C  53                 	db	83	;'S'
  2655  00FB5D  74                 	db	116	;'t'
  2656  00FB5E  61                 	db	97	;'a'
  2657  00FB5F  63                 	db	99	;'c'
  2658  00FB60  6B                 	db	107	;'k'
  2659  00FB61  20                 	db	32
  2660  00FB62  25                 	db	37
  2661  00FB63  64                 	db	100	;'d'
  2662  00FB64  20                 	db	32
  2663  00FB65  20                 	db	32
  2664  00FB66  20                 	db	32
  2665  00FB67  20                 	db	32
  2666  00FB68  20                 	db	32
  2667  00FB69  20                 	db	32
  2668  00FB6A  00                 	db	0
  2669  00FB6B                     STR_40:
  2670                           
  2671                           ; BSR set to: 57
  2672  00FB6B  45                 	db	69	;'E'
  2673  00FB6C  53                 	db	83	;'S'
  2674  00FB6D  52                 	db	82	;'R'
  2675  00FB6E  20                 	db	32
  2676  00FB6F  20                 	db	32
  2677  00FB70  25                 	db	37
  2678  00FB71  32                 	db	50	;'2'
  2679  00FB72  2E                 	db	46
  2680  00FB73  36                 	db	54	;'6'
  2681  00FB74  66                 	db	102	;'f'
  2682  00FB75  20                 	db	32
  2683  00FB76  20                 	db	32
  2684  00FB77  20                 	db	32
  2685  00FB78  20                 	db	32
  2686  00FB79  20                 	db	32
  2687  00FB7A  20                 	db	32
  2688  00FB7B  20                 	db	32
  2689  00FB7C  20                 	db	32
  2690  00FB7D  20                 	db	32
  2691  00FB7E  20                 	db	32
  2692  00FB7F  20                 	db	32
  2693  00FB80  20                 	db	32
  2694  00FB81  00                 	db	0
  2695  00FB82                     STR_37:
  2696                           
  2697                           ; BSR set to: 57
  2698  00FB82  42                 	db	66	;'B'
  2699  00FB83  41                 	db	65	;'A'
  2700  00FB84  54                 	db	84	;'T'
  2701  00FB85  54                 	db	84	;'T'
  2702  00FB86  20                 	db	32
  2703  00FB87  50                 	db	80	;'P'
  2704  00FB88  57                 	db	87	;'W'
  2705  00FB89  52                 	db	82	;'R'
  2706  00FB8A  20                 	db	32
  2707  00FB8B  25                 	db	37
  2708  00FB8C  33                 	db	51	;'3'
  2709  00FB8D  2E                 	db	46
  2710  00FB8E  32                 	db	50	;'2'
  2711  00FB8F  66                 	db	102	;'f'
  2712  00FB90  20                 	db	32
  2713  00FB91  20                 	db	32
  2714  00FB92  20                 	db	32
  2715  00FB93  20                 	db	32
  2716  00FB94  20                 	db	32
  2717  00FB95  20                 	db	32
  2718  00FB96  20                 	db	32
  2719  00FB97  20                 	db	32
  2720  00FB98  00                 	db	0
  2721  00FB99                     STR_41:
  2722                           
  2723                           ; BSR set to: 57
  2724  00FB99  52                 	db	82	;'R'
  2725  00FB9A  31                 	db	49	;'1'
  2726  00FB9B  20                 	db	32
  2727  00FB9C  25                 	db	37
  2728  00FB9D  32                 	db	50	;'2'
  2729  00FB9E  2E                 	db	46
  2730  00FB9F  33                 	db	51	;'3'
  2731  00FBA0  66                 	db	102	;'f'
  2732  00FBA1  20                 	db	32
  2733  00FBA2  25                 	db	37
  2734  00FBA3  33                 	db	51	;'3'
  2735  00FBA4  2E                 	db	46
  2736  00FBA5  34                 	db	52	;'4'
  2737  00FBA6  66                 	db	102	;'f'
  2738  00FBA7  20                 	db	32
  2739  00FBA8  20                 	db	32
  2740  00FBA9  20                 	db	32
  2741  00FBAA  20                 	db	32
  2742  00FBAB  20                 	db	32
  2743  00FBAC  20                 	db	32
  2744  00FBAD  20                 	db	32
  2745  00FBAE  20                 	db	32
  2746  00FBAF  00                 	db	0
  2747  00FBB0                     STR_42:
  2748                           
  2749                           ; BSR set to: 57
  2750  00FBB0  52                 	db	82	;'R'
  2751  00FBB1  32                 	db	50	;'2'
  2752  00FBB2  20                 	db	32
  2753  00FBB3  25                 	db	37
  2754  00FBB4  32                 	db	50	;'2'
  2755  00FBB5  2E                 	db	46
  2756  00FBB6  33                 	db	51	;'3'
  2757  00FBB7  66                 	db	102	;'f'
  2758  00FBB8  20                 	db	32
  2759  00FBB9  25                 	db	37
  2760  00FBBA  33                 	db	51	;'3'
  2761  00FBBB  2E                 	db	46
  2762  00FBBC  34                 	db	52	;'4'
  2763  00FBBD  66                 	db	102	;'f'
  2764  00FBBE  20                 	db	32
  2765  00FBBF  20                 	db	32
  2766  00FBC0  20                 	db	32
  2767  00FBC1  20                 	db	32
  2768  00FBC2  20                 	db	32
  2769  00FBC3  20                 	db	32
  2770  00FBC4  20                 	db	32
  2771  00FBC5  20                 	db	32
  2772  00FBC6  00                 	db	0
  2773  00FBC7                     STR_38:
  2774                           
  2775                           ; BSR set to: 57
  2776  00FBC7  42                 	db	66	;'B'
  2777  00FBC8  41                 	db	65	;'A'
  2778  00FBC9  48                 	db	72	;'H'
  2779  00FBCA  20                 	db	32
  2780  00FBCB  25                 	db	37
  2781  00FBCC  33                 	db	51	;'3'
  2782  00FBCD  2E                 	db	46
  2783  00FBCE  32                 	db	50	;'2'
  2784  00FBCF  66                 	db	102	;'f'
  2785  00FBD0  20                 	db	32
  2786  00FBD1  50                 	db	80	;'P'
  2787  00FBD2  25                 	db	37
  2788  00FBD3  33                 	db	51	;'3'
  2789  00FBD4  2E                 	db	46
  2790  00FBD5  32                 	db	50	;'2'
  2791  00FBD6  66                 	db	102	;'f'
  2792  00FBD7  20                 	db	32
  2793  00FBD8  20                 	db	32
  2794  00FBD9  20                 	db	32
  2795  00FBDA  20                 	db	32
  2796  00FBDB  20                 	db	32
  2797  00FBDC  20                 	db	32
  2798  00FBDD  00                 	db	0
  2799  00FBDE                     STR_14:
  2800                           
  2801                           ; BSR set to: 57
  2802  00FBDE  20                 	db	32
  2803  00FBDF  20                 	db	32
  2804  00FBE0  20                 	db	32
  2805  00FBE1  20                 	db	32
  2806  00FBE2  20                 	db	32
  2807  00FBE3  20                 	db	32
  2808  00FBE4  20                 	db	32
  2809  00FBE5  20                 	db	32
  2810  00FBE6  20                 	db	32
  2811  00FBE7  20                 	db	32
  2812  00FBE8  20                 	db	32
  2813  00FBE9  20                 	db	32
  2814  00FBEA  20                 	db	32
  2815  00FBEB  20                 	db	32
  2816  00FBEC  20                 	db	32
  2817  00FBED  20                 	db	32
  2818  00FBEE  20                 	db	32
  2819  00FBEF  20                 	db	32
  2820  00FBF0  20                 	db	32
  2821  00FBF1  20                 	db	32
  2822  00FBF2  20                 	db	32
  2823  00FBF3  00                 	db	0
  2824  00FBF4                     STR_19:
  2825                           
  2826                           ; BSR set to: 57
  2827  00FBF4  45                 	db	69	;'E'
  2828  00FBF5  53                 	db	83	;'S'
  2829  00FBF6  52                 	db	82	;'R'
  2830  00FBF7  20                 	db	32
  2831  00FBF8  20                 	db	32
  2832  00FBF9  25                 	db	37
  2833  00FBFA  32                 	db	50	;'2'
  2834  00FBFB  2E                 	db	46
  2835  00FBFC  36                 	db	54	;'6'
  2836  00FBFD  66                 	db	102	;'f'
  2837  00FBFE  20                 	db	32
  2838  00FBFF  20                 	db	32
  2839  00FC00  20                 	db	32
  2840  00FC01  20                 	db	32
  2841  00FC02  20                 	db	32
  2842  00FC03  20                 	db	32
  2843  00FC04  20                 	db	32
  2844  00FC05  20                 	db	32
  2845  00FC06  20                 	db	32
  2846  00FC07  20                 	db	32
  2847  00FC08  20                 	db	32
  2848  00FC09  00                 	db	0
  2849  00FC0A                     STR_12:
  2850                           
  2851                           ; BSR set to: 57
  2852  00FC0A  53                 	db	83	;'S'
  2853  00FC0B  74                 	db	116	;'t'
  2854  00FC0C  61                 	db	97	;'a'
  2855  00FC0D  74                 	db	116	;'t'
  2856  00FC0E  69                 	db	105	;'i'
  2857  00FC0F  63                 	db	99	;'c'
  2858  00FC10  20                 	db	32
  2859  00FC11  53                 	db	83	;'S'
  2860  00FC12  4F                 	db	79	;'O'
  2861  00FC13  43                 	db	67	;'C'
  2862  00FC14  20                 	db	32
  2863  00FC15  25                 	db	37
  2864  00FC16  64                 	db	100	;'d'
  2865  00FC17  20                 	db	32
  2866  00FC18  20                 	db	32
  2867  00FC19  20                 	db	32
  2868  00FC1A  20                 	db	32
  2869  00FC1B  20                 	db	32
  2870  00FC1C  20                 	db	32
  2871  00FC1D  20                 	db	32
  2872  00FC1E  20                 	db	32
  2873  00FC1F  00                 	db	0
  2874  00FC20                     STR_34:
  2875                           
  2876                           ; BSR set to: 57
  2877  00FC20  42                 	db	66	;'B'
  2878  00FC21  41                 	db	65	;'A'
  2879  00FC22  54                 	db	84	;'T'
  2880  00FC23  20                 	db	32
  2881  00FC24  49                 	db	73	;'I'
  2882  00FC25  57                 	db	87	;'W'
  2883  00FC26  48                 	db	72	;'H'
  2884  00FC27  20                 	db	32
  2885  00FC28  25                 	db	37
  2886  00FC29  34                 	db	52	;'4'
  2887  00FC2A  2E                 	db	46
  2888  00FC2B  31                 	db	49	;'1'
  2889  00FC2C  66                 	db	102	;'f'
  2890  00FC2D  20                 	db	32
  2891  00FC2E  20                 	db	32
  2892  00FC2F  20                 	db	32
  2893  00FC30  20                 	db	32
  2894  00FC31  20                 	db	32
  2895  00FC32  20                 	db	32
  2896  00FC33  20                 	db	32
  2897  00FC34  20                 	db	32
  2898  00FC35  00                 	db	0
  2899  00FC36                     STR_35:
  2900                           
  2901                           ; BSR set to: 57
  2902  00FC36  42                 	db	66	;'B'
  2903  00FC37  41                 	db	65	;'A'
  2904  00FC38  54                 	db	84	;'T'
  2905  00FC39  20                 	db	32
  2906  00FC3A  4F                 	db	79	;'O'
  2907  00FC3B  57                 	db	87	;'W'
  2908  00FC3C  48                 	db	72	;'H'
  2909  00FC3D  20                 	db	32
  2910  00FC3E  25                 	db	37
  2911  00FC3F  34                 	db	52	;'4'
  2912  00FC40  2E                 	db	46
  2913  00FC41  31                 	db	49	;'1'
  2914  00FC42  66                 	db	102	;'f'
  2915  00FC43  20                 	db	32
  2916  00FC44  20                 	db	32
  2917  00FC45  20                 	db	32
  2918  00FC46  20                 	db	32
  2919  00FC47  20                 	db	32
  2920  00FC48  20                 	db	32
  2921  00FC49  20                 	db	32
  2922  00FC4A  20                 	db	32
  2923  00FC4B  00                 	db	0
  2924  00FC4C                     STR_36:
  2925                           
  2926                           ; BSR set to: 57
  2927  00FC4C  42                 	db	66	;'B'
  2928  00FC4D  41                 	db	65	;'A'
  2929  00FC4E  54                 	db	84	;'T'
  2930  00FC4F  20                 	db	32
  2931  00FC50  54                 	db	84	;'T'
  2932  00FC51  57                 	db	87	;'W'
  2933  00FC52  48                 	db	72	;'H'
  2934  00FC53  20                 	db	32
  2935  00FC54  25                 	db	37
  2936  00FC55  34                 	db	52	;'4'
  2937  00FC56  2E                 	db	46
  2938  00FC57  31                 	db	49	;'1'
  2939  00FC58  66                 	db	102	;'f'
  2940  00FC59  20                 	db	32
  2941  00FC5A  20                 	db	32
  2942  00FC5B  20                 	db	32
  2943  00FC5C  20                 	db	32
  2944  00FC5D  20                 	db	32
  2945  00FC5E  20                 	db	32
  2946  00FC5F  20                 	db	32
  2947  00FC60  20                 	db	32
  2948  00FC61  00                 	db	0
  2949  00FC62                     STR_30:
  2950                           
  2951                           ; BSR set to: 57
  2952  00FC62  49                 	db	73	;'I'
  2953  00FC63  4E                 	db	78	;'N'
  2954  00FC64  56                 	db	86	;'V'
  2955  00FC65  20                 	db	32
  2956  00FC66  20                 	db	32
  2957  00FC67  57                 	db	87	;'W'
  2958  00FC68  48                 	db	72	;'H'
  2959  00FC69  20                 	db	32
  2960  00FC6A  25                 	db	37
  2961  00FC6B  33                 	db	51	;'3'
  2962  00FC6C  2E                 	db	46
  2963  00FC6D  32                 	db	50	;'2'
  2964  00FC6E  66                 	db	102	;'f'
  2965  00FC6F  20                 	db	32
  2966  00FC70  20                 	db	32
  2967  00FC71  20                 	db	32
  2968  00FC72  20                 	db	32
  2969  00FC73  20                 	db	32
  2970  00FC74  20                 	db	32
  2971  00FC75  20                 	db	32
  2972  00FC76  20                 	db	32
  2973  00FC77  00                 	db	0
  2974  00FC78                     STR_29:
  2975                           
  2976                           ; BSR set to: 57
  2977  00FC78  4C                 	db	76	;'L'
  2978  00FC79  4F                 	db	79	;'O'
  2979  00FC7A  41                 	db	65	;'A'
  2980  00FC7B  44                 	db	68	;'D'
  2981  00FC7C  20                 	db	32
  2982  00FC7D  57                 	db	87	;'W'
  2983  00FC7E  48                 	db	72	;'H'
  2984  00FC7F  20                 	db	32
  2985  00FC80  25                 	db	37
  2986  00FC81  33                 	db	51	;'3'
  2987  00FC82  2E                 	db	46
  2988  00FC83  32                 	db	50	;'2'
  2989  00FC84  66                 	db	102	;'f'
  2990  00FC85  20                 	db	32
  2991  00FC86  20                 	db	32
  2992  00FC87  20                 	db	32
  2993  00FC88  20                 	db	32
  2994  00FC89  20                 	db	32
  2995  00FC8A  20                 	db	32
  2996  00FC8B  20                 	db	32
  2997  00FC8C  20                 	db	32
  2998  00FC8D  00                 	db	0
  2999  00FC8E                     STR_28:
  3000                           
  3001                           ; BSR set to: 57
  3002  00FC8E  50                 	db	80	;'P'
  3003  00FC8F  56                 	db	86	;'V'
  3004  00FC90  20                 	db	32
  3005  00FC91  25                 	db	37
  3006  00FC92  63                 	db	99	;'c'
  3007  00FC93  20                 	db	32
  3008  00FC94  57                 	db	87	;'W'
  3009  00FC95  48                 	db	72	;'H'
  3010  00FC96  20                 	db	32
  3011  00FC97  25                 	db	37
  3012  00FC98  33                 	db	51	;'3'
  3013  00FC99  2E                 	db	46
  3014  00FC9A  32                 	db	50	;'2'
  3015  00FC9B  66                 	db	102	;'f'
  3016  00FC9C  20                 	db	32
  3017  00FC9D  20                 	db	32
  3018  00FC9E  20                 	db	32
  3019  00FC9F  20                 	db	32
  3020  00FCA0  20                 	db	32
  3021  00FCA1  20                 	db	32
  3022  00FCA2  20                 	db	32
  3023  00FCA3  00                 	db	0
  3024  00FCA4                     STR_27:
  3025                           
  3026                           ; BSR set to: 57
  3027  00FCA4  49                 	db	73	;'I'
  3028  00FCA5  4E                 	db	78	;'N'
  3029  00FCA6  56                 	db	86	;'V'
  3030  00FCA7  20                 	db	32
  3031  00FCA8  20                 	db	32
  3032  00FCA9  50                 	db	80	;'P'
  3033  00FCAA  57                 	db	87	;'W'
  3034  00FCAB  52                 	db	82	;'R'
  3035  00FCAC  20                 	db	32
  3036  00FCAD  25                 	db	37
  3037  00FCAE  33                 	db	51	;'3'
  3038  00FCAF  2E                 	db	46
  3039  00FCB0  32                 	db	50	;'2'
  3040  00FCB1  66                 	db	102	;'f'
  3041  00FCB2  20                 	db	32
  3042  00FCB3  20                 	db	32
  3043  00FCB4  20                 	db	32
  3044  00FCB5  20                 	db	32
  3045  00FCB6  20                 	db	32
  3046  00FCB7  20                 	db	32
  3047  00FCB8  20                 	db	32
  3048  00FCB9  00                 	db	0
  3049  00FCBA                     STR_26:
  3050                           
  3051                           ; BSR set to: 57
  3052  00FCBA  4C                 	db	76	;'L'
  3053  00FCBB  4F                 	db	79	;'O'
  3054  00FCBC  41                 	db	65	;'A'
  3055  00FCBD  44                 	db	68	;'D'
  3056  00FCBE  20                 	db	32
  3057  00FCBF  50                 	db	80	;'P'
  3058  00FCC0  57                 	db	87	;'W'
  3059  00FCC1  52                 	db	82	;'R'
  3060  00FCC2  20                 	db	32
  3061  00FCC3  25                 	db	37
  3062  00FCC4  33                 	db	51	;'3'
  3063  00FCC5  2E                 	db	46
  3064  00FCC6  32                 	db	50	;'2'
  3065  00FCC7  66                 	db	102	;'f'
  3066  00FCC8  20                 	db	32
  3067  00FCC9  20                 	db	32
  3068  00FCCA  20                 	db	32
  3069  00FCCB  20                 	db	32
  3070  00FCCC  20                 	db	32
  3071  00FCCD  20                 	db	32
  3072  00FCCE  20                 	db	32
  3073  00FCCF  00                 	db	0
  3074  00FCD0                     STR_25:
  3075                           
  3076                           ; BSR set to: 57
  3077  00FCD0  50                 	db	80	;'P'
  3078  00FCD1  56                 	db	86	;'V'
  3079  00FCD2  20                 	db	32
  3080  00FCD3  25                 	db	37
  3081  00FCD4  63                 	db	99	;'c'
  3082  00FCD5  20                 	db	32
  3083  00FCD6  50                 	db	80	;'P'
  3084  00FCD7  57                 	db	87	;'W'
  3085  00FCD8  52                 	db	82	;'R'
  3086  00FCD9  20                 	db	32
  3087  00FCDA  25                 	db	37
  3088  00FCDB  33                 	db	51	;'3'
  3089  00FCDC  2E                 	db	46
  3090  00FCDD  32                 	db	50	;'2'
  3091  00FCDE  66                 	db	102	;'f'
  3092  00FCDF  20                 	db	32
  3093  00FCE0  20                 	db	32
  3094  00FCE1  20                 	db	32
  3095  00FCE2  20                 	db	32
  3096  00FCE3  20                 	db	32
  3097  00FCE4  20                 	db	32
  3098  00FCE5  00                 	db	0
  3099  00FCE6                     STR_13:
  3100                           
  3101                           ; BSR set to: 57
  3102  00FCE6  42                 	db	66	;'B'
  3103  00FCE7  61                 	db	97	;'a'
  3104  00FCE8  74                 	db	116	;'t'
  3105  00FCE9  74                 	db	116	;'t'
  3106  00FCEA  65                 	db	101	;'e'
  3107  00FCEB  72                 	db	114	;'r'
  3108  00FCEC  79                 	db	121	;'y'
  3109  00FCED  20                 	db	32
  3110  00FCEE  41                 	db	65	;'A'
  3111  00FCEF  68                 	db	104	;'h'
  3112  00FCF0  20                 	db	32
  3113  00FCF1  25                 	db	37
  3114  00FCF2  33                 	db	51	;'3'
  3115  00FCF3  2E                 	db	46
  3116  00FCF4  32                 	db	50	;'2'
  3117  00FCF5  66                 	db	102	;'f'
  3118  00FCF6  20                 	db	32
  3119  00FCF7  20                 	db	32
  3120  00FCF8  20                 	db	32
  3121  00FCF9  20                 	db	32
  3122  00FCFA  20                 	db	32
  3123  00FCFB  00                 	db	0
  3124  00FCFC                     STR_32:
  3125                           
  3126                           ; BSR set to: 57
  3127  00FCFC  42                 	db	66	;'B'
  3128  00FCFD  56                 	db	86	;'V'
  3129  00FCFE  20                 	db	32
  3130  00FCFF  25                 	db	37
  3131  00FD00  32                 	db	50	;'2'
  3132  00FD01  2E                 	db	46
  3133  00FD02  32                 	db	50	;'2'
  3134  00FD03  66                 	db	102	;'f'
  3135  00FD04  20                 	db	32
  3136  00FD05  42                 	db	66	;'B'
  3137  00FD06  41                 	db	65	;'A'
  3138  00FD07  20                 	db	32
  3139  00FD08  25                 	db	37
  3140  00FD09  32                 	db	50	;'2'
  3141  00FD0A  2E                 	db	46
  3142  00FD0B  32                 	db	50	;'2'
  3143  00FD0C  66                 	db	102	;'f'
  3144  00FD0D  20                 	db	32
  3145  00FD0E  20                 	db	32
  3146  00FD0F  20                 	db	32
  3147  00FD10  20                 	db	32
  3148  00FD11  00                 	db	0
  3149  00FD12                     STR_33:
  3150                           
  3151                           ; BSR set to: 57
  3152  00FD12  43                 	db	67	;'C'
  3153  00FD13  56                 	db	86	;'V'
  3154  00FD14  20                 	db	32
  3155  00FD15  25                 	db	37
  3156  00FD16  32                 	db	50	;'2'
  3157  00FD17  2E                 	db	46
  3158  00FD18  32                 	db	50	;'2'
  3159  00FD19  66                 	db	102	;'f'
  3160  00FD1A  20                 	db	32
  3161  00FD1B  4C                 	db	76	;'L'
  3162  00FD1C  41                 	db	65	;'A'
  3163  00FD1D  20                 	db	32
  3164  00FD1E  25                 	db	37
  3165  00FD1F  32                 	db	50	;'2'
  3166  00FD20  2E                 	db	46
  3167  00FD21  32                 	db	50	;'2'
  3168  00FD22  66                 	db	102	;'f'
  3169  00FD23  20                 	db	32
  3170  00FD24  20                 	db	32
  3171  00FD25  20                 	db	32
  3172  00FD26  20                 	db	32
  3173  00FD27  00                 	db	0
  3174  00FD28                     STR_31:
  3175                           
  3176                           ; BSR set to: 57
  3177  00FD28  50                 	db	80	;'P'
  3178  00FD29  56                 	db	86	;'V'
  3179  00FD2A  20                 	db	32
  3180  00FD2B  25                 	db	37
  3181  00FD2C  32                 	db	50	;'2'
  3182  00FD2D  2E                 	db	46
  3183  00FD2E  32                 	db	50	;'2'
  3184  00FD2F  66                 	db	102	;'f'
  3185  00FD30  20                 	db	32
  3186  00FD31  50                 	db	80	;'P'
  3187  00FD32  41                 	db	65	;'A'
  3188  00FD33  20                 	db	32
  3189  00FD34  25                 	db	37
  3190  00FD35  32                 	db	50	;'2'
  3191  00FD36  2E                 	db	46
  3192  00FD37  32                 	db	50	;'2'
  3193  00FD38  66                 	db	102	;'f'
  3194  00FD39  20                 	db	32
  3195  00FD3A  20                 	db	32
  3196  00FD3B  20                 	db	32
  3197  00FD3C  20                 	db	32
  3198  00FD3D  00                 	db	0
  3199  00FD3E                     STR_43:
  3200                           
  3201                           ; BSR set to: 57
  3202  00FD3E  25                 	db	37
  3203  00FD3F  64                 	db	100	;'d'
  3204  00FD40  20                 	db	32
  3205  00FD41  25                 	db	37
  3206  00FD42  32                 	db	50	;'2'
  3207  00FD43  2E                 	db	46
  3208  00FD44  34                 	db	52	;'4'
  3209  00FD45  66                 	db	102	;'f'
  3210  00FD46  2C                 	db	44
  3211  00FD47  20                 	db	32
  3212  00FD48  25                 	db	37
  3213  00FD49  64                 	db	100	;'d'
  3214  00FD4A  20                 	db	32
  3215  00FD4B  20                 	db	32
  3216  00FD4C  54                 	db	84	;'T'
  3217  00FD4D  52                 	db	82	;'R'
  3218  00FD4E  49                 	db	73	;'I'
  3219  00FD4F  4D                 	db	77	;'M'
  3220  00FD50  20                 	db	32
  3221  00FD51  20                 	db	32
  3222  00FD52  20                 	db	32
  3223  00FD53  00                 	db	0
  3224  00FD54                     STR_51:
  3225                           
  3226                           ; BSR set to: 57
  3227  00FD54  20                 	db	32
  3228  00FD55  25                 	db	37
  3229  00FD56  64                 	db	100	;'d'
  3230  00FD57  20                 	db	32
  3231  00FD58  25                 	db	37
  3232  00FD59  64                 	db	100	;'d'
  3233  00FD5A  20                 	db	32
  3234  00FD5B  20                 	db	32
  3235  00FD5C  20                 	db	32
  3236  00FD5D  20                 	db	32
  3237  00FD5E  20                 	db	32
  3238  00FD5F  20                 	db	32
  3239  00FD60  20                 	db	32
  3240  00FD61  20                 	db	32
  3241  00FD62  20                 	db	32
  3242  00FD63  20                 	db	32
  3243  00FD64  20                 	db	32
  3244  00FD65  20                 	db	32
  3245  00FD66  20                 	db	32
  3246  00FD67  20                 	db	32
  3247  00FD68  00                 	db	0
  3248  00FD69                     STR_67:
  3249                           
  3250                           ; BSR set to: 57
  3251  00FD69  20                 	db	32
  3252  00FD6A  25                 	db	37
  3253  00FD6B  66                 	db	102	;'f'
  3254  00FD6C  20                 	db	32
  3255  00FD6D  25                 	db	37
  3256  00FD6E  66                 	db	102	;'f'
  3257  00FD6F  20                 	db	32
  3258  00FD70  20                 	db	32
  3259  00FD71  20                 	db	32
  3260  00FD72  20                 	db	32
  3261  00FD73  20                 	db	32
  3262  00FD74  20                 	db	32
  3263  00FD75  20                 	db	32
  3264  00FD76  20                 	db	32
  3265  00FD77  20                 	db	32
  3266  00FD78  20                 	db	32
  3267  00FD79  20                 	db	32
  3268  00FD7A  20                 	db	32
  3269  00FD7B  20                 	db	32
  3270  00FD7C  20                 	db	32
  3271  00FD7D  00                 	db	0
  3272  00FD7E                     STR_54:
  3273                           
  3274                           ; BSR set to: 57
  3275  00FD7E  20                 	db	32
  3276  00FD7F  25                 	db	37
  3277  00FD80  6C                 	db	108	;'l'
  3278  00FD81  64                 	db	100	;'d'
  3279  00FD82  20                 	db	32
  3280  00FD83  25                 	db	37
  3281  00FD84  6C                 	db	108	;'l'
  3282  00FD85  64                 	db	100	;'d'
  3283  00FD86  20                 	db	32
  3284  00FD87  20                 	db	32
  3285  00FD88  20                 	db	32
  3286  00FD89  20                 	db	32
  3287  00FD8A  20                 	db	32
  3288  00FD8B  20                 	db	32
  3289  00FD8C  20                 	db	32
  3290  00FD8D  20                 	db	32
  3291  00FD8E  20                 	db	32
  3292  00FD8F  20                 	db	32
  3293  00FD90  20                 	db	32
  3294  00FD91  20                 	db	32
  3295  00FD92  00                 	db	0
  3296  00FD93                     STR_10:
  3297                           
  3298                           ; BSR set to: 57
  3299  00FD93  42                 	db	66	;'B'
  3300  00FD94  56                 	db	86	;'V'
  3301  00FD95  20                 	db	32
  3302  00FD96  25                 	db	37
  3303  00FD97  32                 	db	50	;'2'
  3304  00FD98  2E                 	db	46
  3305  00FD99  34                 	db	52	;'4'
  3306  00FD9A  66                 	db	102	;'f'
  3307  00FD9B  20                 	db	32
  3308  00FD9C  20                 	db	32
  3309  00FD9D  20                 	db	32
  3310  00FD9E  20                 	db	32
  3311  00FD9F  20                 	db	32
  3312  00FDA0  20                 	db	32
  3313  00FDA1  20                 	db	32
  3314  00FDA2  20                 	db	32
  3315  00FDA3  20                 	db	32
  3316  00FDA4  20                 	db	32
  3317  00FDA5  20                 	db	32
  3318  00FDA6  20                 	db	32
  3319  00FDA7  00                 	db	0
  3320  00FDA8                     STR_4:
  3321                           
  3322                           ; BSR set to: 57
  3323  00FDA8  20                 	db	32
  3324  00FDA9  4E                 	db	78	;'N'
  3325  00FDAA  53                 	db	83	;'S'
  3326  00FDAB  41                 	db	65	;'A'
  3327  00FDAC  53                 	db	83	;'S'
  3328  00FDAD  50                 	db	80	;'P'
  3329  00FDAE  4F                 	db	79	;'O'
  3330  00FDAF  4F                 	db	79	;'O'
  3331  00FDB0  4B                 	db	75	;'K'
  3332  00FDB1  20                 	db	32
  3333  00FDB2  20                 	db	32
  3334  00FDB3  20                 	db	32
  3335  00FDB4  20                 	db	32
  3336  00FDB5  20                 	db	32
  3337  00FDB6  20                 	db	32
  3338  00FDB7  20                 	db	32
  3339  00FDB8  20                 	db	32
  3340  00FDB9  20                 	db	32
  3341  00FDBA  20                 	db	32
  3342  00FDBB  20                 	db	32
  3343  00FDBC  00                 	db	0
  3344  00FDBD                     STR_15:
  3345                           
  3346                           ; BSR set to: 57
  3347  00FDBD  42                 	db	66	;'B'
  3348  00FDBE  61                 	db	97	;'a'
  3349  00FDBF  74                 	db	116	;'t'
  3350  00FDC0  74                 	db	116	;'t'
  3351  00FDC1  65                 	db	101	;'e'
  3352  00FDC2  72                 	db	114	;'r'
  3353  00FDC3  79                 	db	121	;'y'
  3354  00FDC4  20                 	db	32
  3355  00FDC5  45                 	db	69	;'E'
  3356  00FDC6  53                 	db	83	;'S'
  3357  00FDC7  52                 	db	82	;'R'
  3358  00FDC8  20                 	db	32
  3359  00FDC9  20                 	db	32
  3360  00FDCA  20                 	db	32
  3361  00FDCB  20                 	db	32
  3362  00FDCC  20                 	db	32
  3363  00FDCD  20                 	db	32
  3364  00FDCE  20                 	db	32
  3365  00FDCF  20                 	db	32
  3366  00FDD0  20                 	db	32
  3367  00FDD1  00                 	db	0
  3368  00FDD2                     STR_16:
  3369                           
  3370                           ; BSR set to: 57
  3371  00FDD2  43                 	db	67	;'C'
  3372  00FDD3  61                 	db	97	;'a'
  3373  00FDD4  6C                 	db	108	;'l'
  3374  00FDD5  63                 	db	99	;'c'
  3375  00FDD6  75                 	db	117	;'u'
  3376  00FDD7  6C                 	db	108	;'l'
  3377  00FDD8  61                 	db	97	;'a'
  3378  00FDD9  74                 	db	116	;'t'
  3379  00FDDA  69                 	db	105	;'i'
  3380  00FDDB  6F                 	db	111	;'o'
  3381  00FDDC  6E                 	db	110	;'n'
  3382  00FDDD  20                 	db	32
  3383  00FDDE  20                 	db	32
  3384  00FDDF  20                 	db	32
  3385  00FDE0  20                 	db	32
  3386  00FDE1  20                 	db	32
  3387  00FDE2  20                 	db	32
  3388  00FDE3  20                 	db	32
  3389  00FDE4  20                 	db	32
  3390  00FDE5  20                 	db	32
  3391  00FDE6  00                 	db	0
  3392  00FDE7                     STR_48:
  3393                           
  3394                           ; BSR set to: 57
  3395  00FDE7  43                 	db	67	;'C'
  3396  00FDE8  61                 	db	97	;'a'
  3397  00FDE9  6C                 	db	108	;'l'
  3398  00FDEA  69                 	db	105	;'i'
  3399  00FDEB  62                 	db	98	;'b'
  3400  00FDEC  72                 	db	114	;'r'
  3401  00FDED  61                 	db	97	;'a'
  3402  00FDEE  74                 	db	116	;'t'
  3403  00FDEF  69                 	db	105	;'i'
  3404  00FDF0  6F                 	db	111	;'o'
  3405  00FDF1  6E                 	db	110	;'n'
  3406  00FDF2  20                 	db	32
  3407  00FDF3  20                 	db	32
  3408  00FDF4  20                 	db	32
  3409  00FDF5  20                 	db	32
  3410  00FDF6  20                 	db	32
  3411  00FDF7  20                 	db	32
  3412  00FDF8  20                 	db	32
  3413  00FDF9  20                 	db	32
  3414  00FDFA  20                 	db	32
  3415  00FDFB  00                 	db	0
  3416  00FDFC                     STR_47:
  3417                           
  3418                           ; BSR set to: 57
  3419  00FDFC  53                 	db	83	;'S'
  3420  00FDFD  65                 	db	101	;'e'
  3421  00FDFE  6E                 	db	110	;'n'
  3422  00FDFF  73                 	db	115	;'s'
  3423  00FE00  6F                 	db	111	;'o'
  3424  00FE01  72                 	db	114	;'r'
  3425  00FE02  20                 	db	32
  3426  00FE03  5A                 	db	90	;'Z'
  3427  00FE04  65                 	db	101	;'e'
  3428  00FE05  72                 	db	114	;'r'
  3429  00FE06  6F                 	db	111	;'o'
  3430  00FE07  20                 	db	32
  3431  00FE08  20                 	db	32
  3432  00FE09  20                 	db	32
  3433  00FE0A  20                 	db	32
  3434  00FE0B  20                 	db	32
  3435  00FE0C  20                 	db	32
  3436  00FE0D  20                 	db	32
  3437  00FE0E  20                 	db	32
  3438  00FE0F  20                 	db	32
  3439  00FE10  00                 	db	0
  3440  00FE11                     STR_2:
  3441                           
  3442                           ; BSR set to: 57
  3443  00FE11  20                 	db	32
  3444  00FE12  56                 	db	86	;'V'
  3445  00FE13  65                 	db	101	;'e'
  3446  00FE14  72                 	db	114	;'r'
  3447  00FE15  73                 	db	115	;'s'
  3448  00FE16  69                 	db	105	;'i'
  3449  00FE17  6F                 	db	111	;'o'
  3450  00FE18  6E                 	db	110	;'n'
  3451  00FE19  20                 	db	32
  3452  00FE1A  25                 	db	37
  3453  00FE1B  73                 	db	115	;'s'
  3454  00FE1C  20                 	db	32
  3455  00FE1D  20                 	db	32
  3456  00FE1E  20                 	db	32
  3457  00FE1F  20                 	db	32
  3458  00FE20  20                 	db	32
  3459  00FE21  20                 	db	32
  3460  00FE22  20                 	db	32
  3461  00FE23  20                 	db	32
  3462  00FE24  20                 	db	32
  3463  00FE25  00                 	db	0
  3464  00FE26                     STR_68:
  3465                           
  3466                           ; BSR set to: 57
  3467  00FE26  31                 	db	49	;'1'
  3468  00FE27  30                 	db	48	;'0'
  3469  00FE28  41                 	db	65	;'A'
  3470  00FE29  20                 	db	32
  3471  00FE2A  43                 	db	67	;'C'
  3472  00FE2B  61                 	db	97	;'a'
  3473  00FE2C  6C                 	db	108	;'l'
  3474  00FE2D  20                 	db	32
  3475  00FE2E  53                 	db	83	;'S'
  3476  00FE2F  65                 	db	101	;'e'
  3477  00FE30  74                 	db	116	;'t'
  3478  00FE31  20                 	db	32
  3479  00FE32  20                 	db	32
  3480  00FE33  20                 	db	32
  3481  00FE34  20                 	db	32
  3482  00FE35  20                 	db	32
  3483  00FE36  20                 	db	32
  3484  00FE37  20                 	db	32
  3485  00FE38  20                 	db	32
  3486  00FE39  20                 	db	32
  3487  00FE3A  00                 	db	0
  3488  00FE3B                     STR_55:
  3489                           
  3490                           ; BSR set to: 57
  3491  00FE3B  5A                 	db	90	;'Z'
  3492  00FE3C  65                 	db	101	;'e'
  3493  00FE3D  72                 	db	114	;'r'
  3494  00FE3E  6F                 	db	111	;'o'
  3495  00FE3F  20                 	db	32
  3496  00FE40  43                 	db	67	;'C'
  3497  00FE41  61                 	db	97	;'a'
  3498  00FE42  6C                 	db	108	;'l'
  3499  00FE43  20                 	db	32
  3500  00FE44  53                 	db	83	;'S'
  3501  00FE45  65                 	db	101	;'e'
  3502  00FE46  74                 	db	116	;'t'
  3503  00FE47  20                 	db	32
  3504  00FE48  20                 	db	32
  3505  00FE49  20                 	db	32
  3506  00FE4A  20                 	db	32
  3507  00FE4B  20                 	db	32
  3508  00FE4C  20                 	db	32
  3509  00FE4D  20                 	db	32
  3510  00FE4E  20                 	db	32
  3511  00FE4F  00                 	db	0
  3512  00FE50                     STR_60:
  3513                           
  3514                           ; BSR set to: 57
  3515  00FE50  31                 	db	49	;'1'
  3516  00FE51  30                 	db	48	;'0'
  3517  00FE52  20                 	db	32
  3518  00FE53  41                 	db	65	;'A'
  3519  00FE54  6D                 	db	109	;'m'
  3520  00FE55  70                 	db	112	;'p'
  3521  00FE56  20                 	db	32
  3522  00FE57  53                 	db	83	;'S'
  3523  00FE58  65                 	db	101	;'e'
  3524  00FE59  6E                 	db	110	;'n'
  3525  00FE5A  73                 	db	115	;'s'
  3526  00FE5B  6F                 	db	111	;'o'
  3527  00FE5C  72                 	db	114	;'r'
  3528  00FE5D  20                 	db	32
  3529  00FE5E  20                 	db	32
  3530  00FE5F  20                 	db	32
  3531  00FE60  20                 	db	32
  3532  00FE61  20                 	db	32
  3533  00FE62  20                 	db	32
  3534  00FE63  20                 	db	32
  3535  00FE64  00                 	db	0
  3536  00FE65                     STR_1:
  3537                           
  3538                           ; BSR set to: 57
  3539  00FE65  20                 	db	32
  3540  00FE66  4D                 	db	77	;'M'
  3541  00FE67  42                 	db	66	;'B'
  3542  00FE68  4D                 	db	77	;'M'
  3543  00FE69  43                 	db	67	;'C'
  3544  00FE6A  20                 	db	32
  3545  00FE6B  53                 	db	83	;'S'
  3546  00FE6C  4F                 	db	79	;'O'
  3547  00FE6D  4C                 	db	76	;'L'
  3548  00FE6E  41                 	db	65	;'A'
  3549  00FE6F  52                 	db	82	;'R'
  3550  00FE70  4D                 	db	77	;'M'
  3551  00FE71  4F                 	db	79	;'O'
  3552  00FE72  4E                 	db	78	;'N'
  3553  00FE73  20                 	db	32
  3554  00FE74  20                 	db	32
  3555  00FE75  20                 	db	32
  3556  00FE76  20                 	db	32
  3557  00FE77  20                 	db	32
  3558  00FE78  20                 	db	32
  3559  00FE79  00                 	db	0
  3560  00FE7A                     STR_46:
  3561                           
  3562                           ; BSR set to: 57
  3563  00FE7A  42                 	db	66	;'B'
  3564  00FE7B  61                 	db	97	;'a'
  3565  00FE7C  74                 	db	116	;'t'
  3566  00FE7D  74                 	db	116	;'t'
  3567  00FE7E  65                 	db	101	;'e'
  3568  00FE7F  72                 	db	114	;'r'
  3569  00FE80  79                 	db	121	;'y'
  3570  00FE81  20                 	db	32
  3571  00FE82  61                 	db	97	;'a'
  3572  00FE83  6E                 	db	110	;'n'
  3573  00FE84  64                 	db	100	;'d'
  3574  00FE85  20                 	db	32
  3575  00FE86  50                 	db	80	;'P'
  3576  00FE87  56                 	db	86	;'V'
  3577  00FE88  20                 	db	32
  3578  00FE89  20                 	db	32
  3579  00FE8A  20                 	db	32
  3580  00FE8B  20                 	db	32
  3581  00FE8C  20                 	db	32
  3582  00FE8D  20                 	db	32
  3583  00FE8E  00                 	db	0
  3584  00FE8F                     STR_18:
  3585                           
  3586                           ; BSR set to: 57
  3587  00FE8F  43                 	db	67	;'C'
  3588  00FE90  68                 	db	104	;'h'
  3589  00FE91  65                 	db	101	;'e'
  3590  00FE92  63                 	db	99	;'c'
  3591  00FE93  6B                 	db	107	;'k'
  3592  00FE94  69                 	db	105	;'i'
  3593  00FE95  6E                 	db	110	;'n'
  3594  00FE96  67                 	db	103	;'g'
  3595  00FE97  20                 	db	32
  3596  00FE98  25                 	db	37
  3597  00FE99  63                 	db	99	;'c'
  3598  00FE9A  20                 	db	32
  3599  00FE9B  25                 	db	37
  3600  00FE9C  63                 	db	99	;'c'
  3601  00FE9D  20                 	db	32
  3602  00FE9E  20                 	db	32
  3603  00FE9F  20                 	db	32
  3604  00FEA0  20                 	db	32
  3605  00FEA1  20                 	db	32
  3606  00FEA2  20                 	db	32
  3607  00FEA3  00                 	db	0
  3608  00FEA4                     STR_50:
  3609                           
  3610                           ; BSR set to: 57
  3611  00FEA4  53                 	db	83	;'S'
  3612  00FEA5  65                 	db	101	;'e'
  3613  00FEA6  6E                 	db	110	;'n'
  3614  00FEA7  73                 	db	115	;'s'
  3615  00FEA8  6F                 	db	111	;'o'
  3616  00FEA9  72                 	db	114	;'r'
  3617  00FEAA  20                 	db	32
  3618  00FEAB  52                 	db	82	;'R'
  3619  00FEAC  65                 	db	101	;'e'
  3620  00FEAD  61                 	db	97	;'a'
  3621  00FEAE  64                 	db	100	;'d'
  3622  00FEAF  69                 	db	105	;'i'
  3623  00FEB0  6E                 	db	110	;'n'
  3624  00FEB1  67                 	db	103	;'g'
  3625  00FEB2  73                 	db	115	;'s'
  3626  00FEB3  20                 	db	32
  3627  00FEB4  20                 	db	32
  3628  00FEB5  20                 	db	32
  3629  00FEB6  20                 	db	32
  3630  00FEB7  20                 	db	32
  3631  00FEB8  00                 	db	0
  3632  00FEB9                     STR_8:
  3633                           
  3634                           ; BSR set to: 57
  3635  00FEB9  52                 	db	82	;'R'
  3636  00FEBA  65                 	db	101	;'e'
  3637  00FEBB  61                 	db	97	;'a'
  3638  00FEBC  64                 	db	100	;'d'
  3639  00FEBD  20                 	db	32
  3640  00FEBE  45                 	db	69	;'E'
  3641  00FEBF  45                 	db	69	;'E'
  3642  00FEC0  50                 	db	80	;'P'
  3643  00FEC1  52                 	db	82	;'R'
  3644  00FEC2  4F                 	db	79	;'O'
  3645  00FEC3  4D                 	db	77	;'M'
  3646  00FEC4  20                 	db	32
  3647  00FEC5  44                 	db	68	;'D'
  3648  00FEC6  41                 	db	65	;'A'
  3649  00FEC7  54                 	db	84	;'T'
  3650  00FEC8  41                 	db	65	;'A'
  3651  00FEC9  20                 	db	32
  3652  00FECA  20                 	db	32
  3653  00FECB  20                 	db	32
  3654  00FECC  20                 	db	32
  3655  00FECD  00                 	db	0
  3656  00FECE                     STR_71:
  3657                           
  3658                           ; BSR set to: 57
  3659  00FECE  31                 	db	49	;'1'
  3660  00FECF  30                 	db	48	;'0'
  3661  00FED0  41                 	db	65	;'A'
  3662  00FED1  20                 	db	32
  3663  00FED2  4F                 	db	79	;'O'
  3664  00FED3  75                 	db	117	;'u'
  3665  00FED4  74                 	db	116	;'t'
  3666  00FED5  20                 	db	32
  3667  00FED6  4F                 	db	79	;'O'
  3668  00FED7  66                 	db	102	;'f'
  3669  00FED8  20                 	db	32
  3670  00FED9  52                 	db	82	;'R'
  3671  00FEDA  61                 	db	97	;'a'
  3672  00FEDB  6E                 	db	110	;'n'
  3673  00FEDC  67                 	db	103	;'g'
  3674  00FEDD  65                 	db	101	;'e'
  3675  00FEDE  20                 	db	32
  3676  00FEDF  20                 	db	32
  3677  00FEE0  20                 	db	32
  3678  00FEE1  20                 	db	32
  3679  00FEE2  00                 	db	0
  3680  00FEE3                     STR_17:
  3681                           
  3682                           ; BSR set to: 57
  3683  00FEE3  43                 	db	67	;'C'
  3684  00FEE4  68                 	db	104	;'h'
  3685  00FEE5  65                 	db	101	;'e'
  3686  00FEE6  63                 	db	99	;'c'
  3687  00FEE7  6B                 	db	107	;'k'
  3688  00FEE8  20                 	db	32
  3689  00FEE9  33                 	db	51	;'3'
  3690  00FEEA  30                 	db	48	;'0'
  3691  00FEEB  20                 	db	32
  3692  00FEEC  73                 	db	115	;'s'
  3693  00FEED  65                 	db	101	;'e'
  3694  00FEEE  63                 	db	99	;'c'
  3695  00FEEF  6F                 	db	111	;'o'
  3696  00FEF0  6E                 	db	110	;'n'
  3697  00FEF1  64                 	db	100	;'d'
  3698  00FEF2  73                 	db	115	;'s'
  3699  00FEF3  20                 	db	32
  3700  00FEF4  20                 	db	32
  3701  00FEF5  20                 	db	32
  3702  00FEF6  20                 	db	32
  3703  00FEF7  00                 	db	0
  3704  00FEF8                     STR_58:
  3705                           
  3706                           ; BSR set to: 57
  3707  00FEF8  5A                 	db	90	;'Z'
  3708  00FEF9  65                 	db	101	;'e'
  3709  00FEFA  72                 	db	114	;'r'
  3710  00FEFB  6F                 	db	111	;'o'
  3711  00FEFC  20                 	db	32
  3712  00FEFD  4F                 	db	79	;'O'
  3713  00FEFE  75                 	db	117	;'u'
  3714  00FEFF  74                 	db	116	;'t'
  3715  00FF00  20                 	db	32
  3716  00FF01  4F                 	db	79	;'O'
  3717  00FF02  66                 	db	102	;'f'
  3718  00FF03  20                 	db	32
  3719  00FF04  52                 	db	82	;'R'
  3720  00FF05  61                 	db	97	;'a'
  3721  00FF06  6E                 	db	110	;'n'
  3722  00FF07  67                 	db	103	;'g'
  3723  00FF08  65                 	db	101	;'e'
  3724  00FF09  20                 	db	32
  3725  00FF0A  20                 	db	32
  3726  00FF0B  20                 	db	32
  3727  00FF0C  00                 	db	0
  3728  00FF0D                     STR_52:
  3729                           
  3730                           ; BSR set to: 57
  3731  00FF0D  53                 	db	83	;'S'
  3732  00FF0E  74                 	db	116	;'t'
  3733  00FF0F  61                 	db	97	;'a'
  3734  00FF10  62                 	db	98	;'b'
  3735  00FF11  69                 	db	105	;'i'
  3736  00FF12  6C                 	db	108	;'l'
  3737  00FF13  69                 	db	105	;'i'
  3738  00FF14  74                 	db	116	;'t'
  3739  00FF15  79                 	db	121	;'y'
  3740  00FF16  20                 	db	32
  3741  00FF17  63                 	db	99	;'c'
  3742  00FF18  6C                 	db	108	;'l'
  3743  00FF19  6F                 	db	111	;'o'
  3744  00FF1A  63                 	db	99	;'c'
  3745  00FF1B  6B                 	db	107	;'k'
  3746  00FF1C  20                 	db	32
  3747  00FF1D  25                 	db	37
  3748  00FF1E  64                 	db	100	;'d'
  3749  00FF1F  20                 	db	32
  3750  00FF20  20                 	db	32
  3751  00FF21  00                 	db	0
  3752  00FF22                     STR_9:
  3753                           
  3754                           ; BSR set to: 57
  3755  00FF22  49                 	db	73	;'I'
  3756  00FF23  6E                 	db	110	;'n'
  3757  00FF24  76                 	db	118	;'v'
  3758  00FF25  61                 	db	97	;'a'
  3759  00FF26  6C                 	db	108	;'l'
  3760  00FF27  69                 	db	105	;'i'
  3761  00FF28  64                 	db	100	;'d'
  3762  00FF29  20                 	db	32
  3763  00FF2A  45                 	db	69	;'E'
  3764  00FF2B  45                 	db	69	;'E'
  3765  00FF2C  50                 	db	80	;'P'
  3766  00FF2D  52                 	db	82	;'R'
  3767  00FF2E  4F                 	db	79	;'O'
  3768  00FF2F  4D                 	db	77	;'M'
  3769  00FF30  20                 	db	32
  3770  00FF31  44                 	db	68	;'D'
  3771  00FF32  41                 	db	65	;'A'
  3772  00FF33  54                 	db	84	;'T'
  3773  00FF34  41                 	db	65	;'A'
  3774  00FF35  20                 	db	32
  3775  00FF36  00                 	db	0
  3776  00FF37                     STR_49:
  3777                           
  3778                           ; BSR set to: 57
  3779  00FF37  52                 	db	82	;'R'
  3780  00FF38  65                 	db	101	;'e'
  3781  00FF39  6C                 	db	108	;'l'
  3782  00FF3A  65                 	db	101	;'e'
  3783  00FF3B  61                 	db	97	;'a'
  3784  00FF3C  73                 	db	115	;'s'
  3785  00FF3D  65                 	db	101	;'e'
  3786  00FF3E  20                 	db	32
  3787  00FF3F  62                 	db	98	;'b'
  3788  00FF40  75                 	db	117	;'u'
  3789  00FF41  74                 	db	116	;'t'
  3790  00FF42  74                 	db	116	;'t'
  3791  00FF43  6F                 	db	111	;'o'
  3792  00FF44  6E                 	db	110	;'n'
  3793  00FF45  20                 	db	32
  3794  00FF46  25                 	db	37
  3795  00FF47  63                 	db	99	;'c'
  3796  00FF48  20                 	db	32
  3797  00FF49  20                 	db	32
  3798  00FF4A  00                 	db	0
  3799  00FF4B                     STR_76:
  3800                           
  3801                           ; BSR set to: 57
  3802  00FF4B  48                 	db	72	;'H'
  3803  00FF4C  45                 	db	69	;'E'
  3804  00FF4D  4C                 	db	76	;'L'
  3805  00FF4E  50                 	db	80	;'P'
  3806  00FF4F  20                 	db	32
  3807  00FF50  25                 	db	37
  3808  00FF51  73                 	db	115	;'s'
  3809  00FF52  20                 	db	32
  3810  00FF53  20                 	db	32
  3811  00FF54  20                 	db	32
  3812  00FF55  20                 	db	32
  3813  00FF56  20                 	db	32
  3814  00FF57  20                 	db	32
  3815  00FF58  20                 	db	32
  3816  00FF59  20                 	db	32
  3817  00FF5A  20                 	db	32
  3818  00FF5B  20                 	db	32
  3819  00FF5C  20                 	db	32
  3820  00FF5D  00                 	db	0
  3821  00FF5E                     
  3822                           ; BSR set to: 57
  3823  00FF5E  44                 	db	68	;'D'
  3824  00FF5F  49                 	db	73	;'I'
  3825  00FF60  53                 	db	83	;'S'
  3826  00FF61  50                 	db	80	;'P'
  3827  00FF62  4C                 	db	76	;'L'
  3828  00FF63  41                 	db	65	;'A'
  3829  00FF64  59                 	db	89	;'Y'
  3830  00FF65  20                 	db	32
  3831  00FF66  25                 	db	37
  3832  00FF67  73                 	db	115	;'s'
  3833  00FF68  20                 	db	32
  3834  00FF69  20                 	db	32
  3835  00FF6A  20                 	db	32
  3836  00FF6B  20                 	db	32
  3837  00FF6C  20                 	db	32
  3838  00FF6D  20                 	db	32
  3839  00FF6E  20                 	db	32
  3840  00FF6F  20                 	db	32
  3841  00FF70  00                 	db	0
  3842  00FF71                     STR_62:
  3843                           
  3844                           ; BSR set to: 57
  3845  00FF71  50                 	db	80	;'P'
  3846  00FF72  72                 	db	114	;'r'
  3847  00FF73  65                 	db	101	;'e'
  3848  00FF74  73                 	db	115	;'s'
  3849  00FF75  73                 	db	115	;'s'
  3850  00FF76  20                 	db	32
  3851  00FF77  62                 	db	98	;'b'
  3852  00FF78  75                 	db	117	;'u'
  3853  00FF79  74                 	db	116	;'t'
  3854  00FF7A  74                 	db	116	;'t'
  3855  00FF7B  6F                 	db	111	;'o'
  3856  00FF7C  6E                 	db	110	;'n'
  3857  00FF7D  20                 	db	32
  3858  00FF7E  25                 	db	37
  3859  00FF7F  63                 	db	99	;'c'
  3860  00FF80  20                 	db	32
  3861  00FF81  20                 	db	32
  3862  00FF82  00                 	db	0
  3863  00FF83                     
  3864                           ; BSR set to: 57
  3865  00FF83  25                 	db	37
  3866  00FF84  64                 	db	100	;'d'
  3867  00FF85  20                 	db	32
  3868  00FF86  25                 	db	37
  3869  00FF87  32                 	db	50	;'2'
  3870  00FF88  2E                 	db	46
  3871  00FF89  34                 	db	52	;'4'
  3872  00FF8A  66                 	db	102	;'f'
  3873  00FF8B  2C                 	db	44
  3874  00FF8C  20                 	db	32
  3875  00FF8D  25                 	db	37
  3876  00FF8E  64                 	db	100	;'d'
  3877  00FF8F  20                 	db	32
  3878  00FF90  20                 	db	32
  3879  00FF91  20                 	db	32
  3880  00FF92  23                 	db	35
  3881  00FF93  00                 	db	0
  3882  00FF94                     STR_22:
  3883                           
  3884                           ; BSR set to: 57
  3885  00FF94  25                 	db	37
  3886  00FF95  64                 	db	100	;'d'
  3887  00FF96  20                 	db	32
  3888  00FF97  25                 	db	37
  3889  00FF98  32                 	db	50	;'2'
  3890  00FF99  2E                 	db	46
  3891  00FF9A  34                 	db	52	;'4'
  3892  00FF9B  66                 	db	102	;'f'
  3893  00FF9C  20                 	db	32
  3894  00FF9D  20                 	db	32
  3895  00FF9E  20                 	db	32
  3896  00FF9F  25                 	db	37
  3897  00FFA0  64                 	db	100	;'d'
  3898  00FFA1  20                 	db	32
  3899  00FFA2  20                 	db	32
  3900  00FFA3  00                 	db	0
  3901  00FFA4                     STR_80:
  3902                           
  3903                           ; BSR set to: 57
  3904  00FFA4  76                 	db	118	;'v'
  3905  00FFA5  74                 	db	116	;'t'
  3906  00FFA6  65                 	db	101	;'e'
  3907  00FFA7  72                 	db	114	;'r'
  3908  00FFA8  6D                 	db	109	;'m'
  3909  00FFA9  20                 	db	32
  3910  00FFAA  25                 	db	37
  3911  00FFAB  78                 	db	120	;'x'
  3912  00FFAC  3A                 	db	58	;':'
  3913  00FFAD  25                 	db	37
  3914  00FFAE  78                 	db	120	;'x'
  3915  00FFAF  20                 	db	32
  3916  00FFB0  20                 	db	32
  3917  00FFB1  20                 	db	32
  3918  00FFB2  00                 	db	0
  3919  00FFB3                     STR_74:
  3920                           
  3921                           ; BSR set to: 57
  3922  00FFB3  46                 	db	70	;'F'
  3923  00FFB4  65                 	db	101	;'e'
  3924  00FFB5  62                 	db	98	;'b'
  3925  00FFB6  20                 	db	32
  3926  00FFB7  31                 	db	49	;'1'
  3927  00FFB8  30                 	db	48	;'0'
  3928  00FFB9  20                 	db	32
  3929  00FFBA  32                 	db	50	;'2'
  3930  00FFBB  30                 	db	48	;'0'
  3931  00FFBC  32                 	db	50	;'2'
  3932  00FFBD  30                 	db	48	;'0'
  3933  00FFBE  00                 	db	0
  3934  00FFBF                     STR_78:
  3935                           
  3936                           ; BSR set to: 57
  3937  00FFBF  25                 	db	37
  3938  00FFC0  73                 	db	115	;'s'
  3939  00FFC1  20                 	db	32
  3940  00FFC2  20                 	db	32
  3941  00FFC3  20                 	db	32
  3942  00FFC4  20                 	db	32
  3943  00FFC5  20                 	db	32
  3944  00FFC6  20                 	db	32
  3945  00FFC7  20                 	db	32
  3946  00FFC8  00                 	db	0
  3947  00FFC9                     STR_75:
  3948                           
  3949                           ; BSR set to: 57
  3950  00FFC9  31                 	db	49	;'1'
  3951  00FFCA  37                 	db	55	;'7'
  3952  00FFCB  3A                 	db	58	;':'
  3953  00FFCC  35                 	db	53	;'5'
  3954  00FFCD  38                 	db	56	;'8'
  3955  00FFCE  3A                 	db	58	;':'
  3956  00FFCF  33                 	db	51	;'3'
  3957  00FFD0  36                 	db	54	;'6'
  3958  00FFD1  00                 	db	0
  3959  00FFD2                     STR_3:
  3960                           
  3961                           ; BSR set to: 57
  3962  00FFD2  31                 	db	49	;'1'
  3963  00FFD3  2E                 	db	46
  3964  00FFD4  32                 	db	50	;'2'
  3965  00FFD5  30                 	db	48	;'0'
  3966  00FFD6  00                 	db	0
  3967  00FFD7                     STR_94:
  3968                           
  3969                           ; BSR set to: 57
  3970  00FFD7  49                 	db	73	;'I'
  3971  00FFD8  4E                 	db	78	;'N'
  3972  00FFD9  46                 	db	70	;'F'
  3973  00FFDA  00                 	db	0
  3974  00FFDB                     STR_98:
  3975                           
  3976                           ; BSR set to: 57
  3977  00FFDB  4E                 	db	78	;'N'
  3978  00FFDC  41                 	db	65	;'A'
  3979  00FFDD  4E                 	db	78	;'N'
  3980  00FFDE  00                 	db	0
  3981  00FFDF                     STR_95:
  3982                           
  3983                           ; BSR set to: 57
  3984  00FFDF  69                 	db	105	;'i'
  3985  00FFE0  6E                 	db	110	;'n'
  3986  00FFE1  66                 	db	102	;'f'
  3987  00FFE2  00                 	db	0
  3988  00FFE3                     STR_99:
  3989                           
  3990                           ; BSR set to: 57
  3991  00FFE3  6E                 	db	110	;'n'
  3992  00FFE4  61                 	db	97	;'a'
  3993  00FFE5  6E                 	db	110	;'n'
  3994  00FFE6  00                 	db	0
  3995  00FFE7                     STR_125:
  3996                           
  3997                           ; BSR set to: 57
  3998  00FFE7  6C                 	db	108	;'l'
  3999  00FFE8  58                 	db	88	;'X'
  4000  00FFE9  00                 	db	0
  4001  00FFEA                     STR_102:
  4002                           
  4003                           ; BSR set to: 57
  4004  00FFEA  6C                 	db	108	;'l'
  4005  00FFEB  64                 	db	100	;'d'
  4006  00FFEC  00                 	db	0
  4007  00FFED                     STR_111:
  4008                           
  4009                           ; BSR set to: 57
  4010  00FFED  6C                 	db	108	;'l'
  4011  00FFEE  66                 	db	102	;'f'
  4012  00FFEF  00                 	db	0
  4013  00FFF0                     STR_106:
  4014                           
  4015                           ; BSR set to: 57
  4016  00FFF0  6C                 	db	108	;'l'
  4017  00FFF1  69                 	db	105	;'i'
  4018  00FFF2  00                 	db	0
  4019  00FFF3                     STR_116:
  4020                           
  4021                           ; BSR set to: 57
  4022  00FFF3  6C                 	db	108	;'l'
  4023  00FFF4  75                 	db	117	;'u'
  4024  00FFF5  00                 	db	0
  4025  00FFF6                     STR_121:
  4026                           
  4027                           ; BSR set to: 57
  4028  00FFF6  6C                 	db	108	;'l'
  4029  00FFF7  78                 	db	120	;'x'
  4030  00FFF8  00                 	db	0
  4031  00FFF9                     STR_73:
  4032                           
  4033                           ; BSR set to: 57
  4034  00FFF9  25                 	db	37
  4035  00FFFA  63                 	db	99	;'c'
  4036  00FFFB  00                 	db	0
  4037  00FFFC                     STR_72:
  4038                           
  4039                           ; BSR set to: 57
  4040  00FFFC  25                 	db	37
  4041  00FFFD  73                 	db	115	;'s'
  4042  00FFFE  00                 	db	0
  4043  0000                     
  4044                           ; #config settings
  4045  00FFFF  00                 	db	0	; dummy byte at the end
  4046  0000                     
  4047                           	psect	cinit
  4048  01B388                     __pcinit:
  4049                           	opt callstack 0
  4050  01B388                     start_initialization:
  4051                           	opt callstack 0
  4052  01B388                     __initialization:
  4053                           	opt callstack 0
  4054                           
  4055                           ; Initialize objects allocated to BIGRAM (811 bytes)
  4056                           ; load TBLPTR registers with __pidataBIGRAM
  4057  01B388  0EDE               	movlw	low __pidataBIGRAM
  4058  01B38A  6EF6               	movwf	tblptrl,c
  4059  01B38C  0E77               	movlw	high __pidataBIGRAM
  4060  01B38E  6EF7               	movwf	tblptrh,c
  4061  01B390  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4062  01B392  6EF8               	movwf	tblptru,c
  4063  01B394  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  4064  01B398  EE20 F32B          	lfsr	2,811
  4065  01B39C                     copy_data0:
  4066  01B39C  0009               	tblrd		*+
  4067  01B39E  006F FFD7 FFEE     	movff	tablat,postinc0
  4068  01B3A4  50DD               	movf	postdec2,w,c
  4069  01B3A6  50D9               	movf	fsr2l,w,c
  4070  01B3A8  E1F9               	bnz	copy_data0
  4071  01B3AA  50DA               	movf	fsr2h,w,c
  4072  01B3AC  E1F7               	bnz	copy_data0
  4073                           
  4074                           ; Initialize objects allocated to BANK1 (208 bytes)
  4075                           ; load TBLPTR registers with __pidataBANK1
  4076  01B3AE  0E16               	movlw	low __pidataBANK1
  4077  01B3B0  6EF6               	movwf	tblptrl,c
  4078  01B3B2  0EB7               	movlw	high __pidataBANK1
  4079  01B3B4  6EF7               	movwf	tblptrh,c
  4080  01B3B6  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4081  01B3B8  6EF8               	movwf	tblptru,c
  4082  01B3BA  EE00  F100         	lfsr	0,__pdataBANK1
  4083  01B3BE  EE20 F0D0          	lfsr	2,208
  4084  01B3C2                     copy_data1:
  4085  01B3C2  0009               	tblrd		*+
  4086  01B3C4  006F FFD7 FFEE     	movff	tablat,postinc0
  4087  01B3CA  50DD               	movf	postdec2,w,c
  4088  01B3CC  50D9               	movf	fsr2l,w,c
  4089  01B3CE  E1F9               	bnz	copy_data1
  4090                           
  4091                           ; Initialize objects allocated to BANK0 (57 bytes)
  4092                           ; load TBLPTR registers with __pidataBANK0
  4093  01B3D0  0EE8               	movlw	low __pidataBANK0
  4094  01B3D2  6EF6               	movwf	tblptrl,c
  4095  01B3D4  0ED1               	movlw	high __pidataBANK0
  4096  01B3D6  6EF7               	movwf	tblptrh,c
  4097  01B3D8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  4098  01B3DA  6EF8               	movwf	tblptru,c
  4099  01B3DC  EE00  F0AE         	lfsr	0,__pdataBANK0
  4100  01B3E0  EE20 F039          	lfsr	2,57
  4101  01B3E4                     copy_data2:
  4102  01B3E4  0009               	tblrd		*+
  4103  01B3E6  006F FFD7 FFEE     	movff	tablat,postinc0
  4104  01B3EC  50DD               	movf	postdec2,w,c
  4105  01B3EE  50D9               	movf	fsr2l,w,c
  4106  01B3F0  E1F9               	bnz	copy_data2
  4107                           
  4108                           ; Clear objects allocated to BIGRAM (482 bytes)
  4109  01B3F2  EE02  F12A         	lfsr	0,__pbssBIGRAM
  4110  01B3F6  EE20 F1E2          	lfsr	2,482
  4111  01B3FA                     clear_0:
  4112  01B3FA  6AEE               	clrf	postinc0,c
  4113  01B3FC  50DD               	movf	postdec2,w,c
  4114  01B3FE  50D9               	movf	fsr2l,w,c
  4115  01B400  E1FC               	bnz	clear_0
  4116  01B402  50DA               	movf	fsr2h,w,c
  4117  01B404  E1FA               	bnz	clear_0
  4118                           
  4119                           ; Clear objects allocated to BANK5 (255 bytes)
  4120  01B406  EE01  F100         	lfsr	0,__pbssBANK5
  4121  01B40A  EE20 F0FF          	lfsr	2,255
  4122  01B40E                     clear_1:
  4123  01B40E  6AEE               	clrf	postinc0,c
  4124  01B410  50DD               	movf	postdec2,w,c
  4125  01B412  50D9               	movf	fsr2l,w,c
  4126  01B414  E1FC               	bnz	clear_1
  4127  01B416  50DA               	movf	fsr2h,w,c
  4128  01B418  E1FA               	bnz	clear_1
  4129                           
  4130                           ; Clear objects allocated to BANK4 (67 bytes)
  4131  01B41A  EE01  F000         	lfsr	0,__pbssBANK4
  4132  01B41E  0E43               	movlw	67
  4133  01B420                     clear_2:
  4134  01B420  6AEE               	clrf	postinc0,c
  4135  01B422  06E8               	decf	wreg,f,c
  4136  01B424  E1FD               	bnz	clear_2
  4137                           
  4138                           ; Clear objects allocated to BANK3 (215 bytes)
  4139  01B426  EE00  F300         	lfsr	0,__pbssBANK3
  4140  01B42A  0ED7               	movlw	215
  4141  01B42C                     clear_3:
  4142  01B42C  6AEE               	clrf	postinc0,c
  4143  01B42E  06E8               	decf	wreg,f,c
  4144  01B430  E1FD               	bnz	clear_3
  4145                           
  4146                           ; Clear objects allocated to BANK2 (212 bytes)
  4147  01B432  EE00  F200         	lfsr	0,__pbssBANK2
  4148  01B436  0ED4               	movlw	212
  4149  01B438                     clear_4:
  4150  01B438  6AEE               	clrf	postinc0,c
  4151  01B43A  06E8               	decf	wreg,f,c
  4152  01B43C  E1FD               	bnz	clear_4
  4153                           
  4154                           ; Clear objects allocated to BANK1 (42 bytes)
  4155  01B43E  EE00  F1D0         	lfsr	0,__pbssBANK1
  4156  01B442  0E2A               	movlw	42
  4157  01B444                     clear_5:
  4158  01B444  6AEE               	clrf	postinc0,c
  4159  01B446  06E8               	decf	wreg,f,c
  4160  01B448  E1FD               	bnz	clear_5
  4161                           
  4162                           ; Clear objects allocated to BANK0 (78 bytes)
  4163  01B44A  EE00  F060         	lfsr	0,__pbssBANK0
  4164  01B44E  0E4E               	movlw	78
  4165  01B450                     clear_6:
  4166  01B450  6AEE               	clrf	postinc0,c
  4167  01B452  06E8               	decf	wreg,f,c
  4168  01B454  E1FD               	bnz	clear_6
  4169                           
  4170                           ; Clear objects allocated to COMRAM (14 bytes)
  4171  01B456  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4172  01B45A  0E0E               	movlw	14
  4173  01B45C                     clear_7:
  4174  01B45C  6AEE               	clrf	postinc0,c
  4175  01B45E  06E8               	decf	wreg,f,c
  4176  01B460  E1FD               	bnz	clear_7
  4177                           
  4178                           ;
  4179                           ; Setup IVTBASE
  4180                           ;
  4181  01B462  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4182  01B464  6ED5               	movwf	213,c
  4183  01B466  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4184  01B468  6ED6               	movwf	214,c
  4185  01B46A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4186  01B46C  6ED7               	movwf	215,c
  4187  01B46E                     end_of_initialization:
  4188                           	opt callstack 0
  4189  01B46E                     __end_of__initialization:
  4190                           	opt callstack 0
  4191  01B46E  0100               	movlb	0
  4192  01B470  EF00  F080         	goto	_main	;jump to C main() function
  4193                           
  4194                           	psect	bssCOMRAM
  4195  00003A                     __pbssCOMRAM:
  4196                           	opt callstack 0
  4197  00003A                     _width:
  4198                           	opt callstack 0
  4199  00003A                     	ds	2
  4200  00003C                     _prec:
  4201                           	opt callstack 0
  4202  00003C                     	ds	2
  4203  00003E                     _flags:
  4204                           	opt callstack 0
  4205  00003E                     	ds	2
  4206  000040                     calc_bsoc@log_update_wait:
  4207                           	opt callstack 0
  4208  000040                     	ds	1
  4209  000041                     check_day_time@day_delay:
  4210                           	opt callstack 0
  4211  000041                     	ds	1
  4212  000042                     dac_spi_control@S0:
  4213                           	opt callstack 0
  4214  000042                     	ds	1
  4215  000043                     dac_spi_control@init:
  4216                           	opt callstack 0
  4217  000043                     	ds	1
  4218  000044                     _uart2RxHead:
  4219                           	opt callstack 0
  4220  000044                     	ds	1
  4221  000045                     _uart2TxBufferRemaining:
  4222                           	opt callstack 0
  4223  000045                     	ds	1
  4224  000046                     _uart2TxTail:
  4225                           	opt callstack 0
  4226  000046                     	ds	1
  4227  000047                     _uart1RxHead:
  4228                           	opt callstack 0
  4229  000047                     	ds	1
  4230                           
  4231                           	psect	bssBANK0
  4232  000060                     __pbssBANK0:
  4233                           	opt callstack 0
  4234  000060                     ___fpclassifyf@F463:
  4235                           	opt callstack 0
  4236  000060                     	ds	4
  4237  000064                     calc_ror_data@bcror:
  4238                           	opt callstack 0
  4239  000064                     	ds	4
  4240  000068                     calc_ror_data@bvror:
  4241                           	opt callstack 0
  4242  000068                     	ds	4
  4243  00006C                     calc_model_data@bcror:
  4244                           	opt callstack 0
  4245  00006C                     	ds	4
  4246  000070                     calc_model_data@bvror:
  4247                           	opt callstack 0
  4248  000070                     	ds	4
  4249  000074                     wdtdelay@dcount:
  4250                           	opt callstack 0
  4251  000074                     	ds	4
  4252  000078                     _TMR3_InterruptHandler:
  4253                           	opt callstack 0
  4254  000078                     	ds	3
  4255  00007B                     _TMR5_InterruptHandler:
  4256                           	opt callstack 0
  4257  00007B                     	ds	3
  4258  00007E                     _TMR6_InterruptHandler:
  4259                           	opt callstack 0
  4260  00007E                     	ds	3
  4261  000081                     _ADCC_ADTI_InterruptHandler:
  4262                           	opt callstack 0
  4263  000081                     	ds	3
  4264  000084                     _ADCC_ADI_InterruptHandler:
  4265                           	opt callstack 0
  4266  000084                     	ds	3
  4267  000087                     _UART1_RxInterruptHandler:
  4268                           	opt callstack 0
  4269  000087                     	ds	3
  4270  00008A                     _UART2_TxInterruptHandler:
  4271                           	opt callstack 0
  4272  00008A                     	ds	3
  4273  00008D                     _UART2_RxInterruptHandler:
  4274                           	opt callstack 0
  4275  00008D                     	ds	3
  4276  000090                     _INT1_InterruptHandler:
  4277                           	opt callstack 0
  4278  000090                     	ds	3
  4279  000093                     _INT0_InterruptHandler:
  4280                           	opt callstack 0
  4281  000093                     	ds	3
  4282  000096                     _nout:
  4283                           	opt callstack 0
  4284  000096                     	ds	2
  4285  000098                     TMR3_ISR@CountCallBack:
  4286                           	opt callstack 0
  4287  000098                     	ds	2
  4288  00009A                     _timer3ReloadVal:
  4289                           	opt callstack 0
  4290  00009A                     	ds	2
  4291  00009C                     TMR5_ISR@CountCallBack:
  4292                           	opt callstack 0
  4293  00009C                     	ds	2
  4294  00009E                     _timer5ReloadVal:
  4295                           	opt callstack 0
  4296  00009E                     	ds	2
  4297  0000A0                     esr_check@esr_state:
  4298                           	opt callstack 0
  4299  0000A0                     	ds	1
  4300  0000A1                     dac_spi_control@SB:
  4301                           	opt callstack 0
  4302  0000A1                     	ds	1
  4303  0000A2                     dac_spi_control@SC:
  4304                           	opt callstack 0
  4305  0000A2                     	ds	1
  4306  0000A3                     dac_spi_control@S2:
  4307                           	opt callstack 0
  4308  0000A3                     	ds	1
  4309  0000A4                     dac_spi_control@S1:
  4310                           	opt callstack 0
  4311  0000A4                     	ds	1
  4312  0000A5                     _mode_sw:
  4313                           	opt callstack 0
  4314  0000A5                     	ds	1
  4315  0000A6                     _uart2RxCount:
  4316                           	opt callstack 0
  4317  0000A6                     	ds	1
  4318  0000A7                     _uart2RxTail:
  4319                           	opt callstack 0
  4320  0000A7                     	ds	1
  4321  0000A8                     _uart2TxHead:
  4322                           	opt callstack 0
  4323  0000A8                     	ds	1
  4324  0000A9                     _uart1RxCount:
  4325                           	opt callstack 0
  4326  0000A9                     	ds	1
  4327  0000AA                     _uart1RxTail:
  4328                           	opt callstack 0
  4329  0000AA                     	ds	1
  4330  0000AB                     _crcObj:
  4331                           	opt callstack 0
  4332  0000AB                     	ds	3
  4333                           
  4334                           	psect	dataBANK0
  4335  0000AE                     __pdataBANK0:
  4336                           	opt callstack 0
  4337  0000AE                     _R:
  4338                           	opt callstack 0
  4339  0000AE                     	ds	57
  4340                           
  4341                           	psect	bssBANK1
  4342  0001D0                     __pbssBANK1:
  4343                           	opt callstack 0
  4344  0001D0                     _spi_link:
  4345                           	opt callstack 0
  4346  0001D0                     	ds	12
  4347  0001DC                     _uart1RxBuffer:
  4348                           	opt callstack 0
  4349  0001DC                     	ds	8
  4350  0001E4                     spinners@s:
  4351                           	opt callstack 0
  4352  0001E4                     	ds	6
  4353  0001EA                     floorf@F524:
  4354                           	opt callstack 0
  4355  0001EA                     	ds	4
  4356  0001EE                     fabsf@F463:
  4357                           	opt callstack 0
  4358  0001EE                     	ds	4
  4359  0001F2                     _utctime:
  4360                           	opt callstack 0
  4361  0001F2                     	ds	4
  4362  0001F6                     _P:
  4363                           	opt callstack 0
  4364  0001F6                     	ds	4
  4365                           
  4366                           	psect	dataBANK1
  4367  000100                     __pdataBANK1:
  4368                           	opt callstack 0
  4369  000100                     stoa@F1166:
  4370                           	opt callstack 0
  4371  000100                     	ds	7
  4372  000107                     _V:
  4373                           	opt callstack 0
  4374  000107                     	ds	192
  4375  0001C7                     _H:
  4376                           	opt callstack 0
  4377  0001C7                     	ds	9
  4378                           
  4379                           	psect	bssBANK2
  4380  000200                     __pbssBANK2:
  4381                           	opt callstack 0
  4382  000200                     _S:
  4383                           	opt callstack 0
  4384  000200                     	ds	41
  4385  000229                     _tickCount:
  4386                           	opt callstack 0
  4387  000229                     	ds	26
  4388  000243                     _dbuf:
  4389                           	opt callstack 0
  4390  000243                     	ds	80
  4391  000293                     _r_cal:
  4392                           	opt callstack 0
  4393  000293                     	ds	57
  4394  0002CC                     _seed:
  4395                           	opt callstack 0
  4396  0002CC                     	ds	8
  4397                           
  4398                           	psect	bssBANK3
  4399  000300                     __pbssBANK3:
  4400                           	opt callstack 0
  4401  000300                     lp_filter@smooth:
  4402                           	opt callstack 0
  4403  000300                     	ds	84
  4404  000354                     _uart2TxBuffer:
  4405                           	opt callstack 0
  4406  000354                     	ds	64
  4407  000394                     _ring_buf1:
  4408                           	opt callstack 0
  4409  000394                     	ds	67
  4410                           
  4411                           	psect	bssBANK4
  4412  000400                     __pbssBANK4:
  4413                           	opt callstack 0
  4414  000400                     _ring_buf2:
  4415                           	opt callstack 0
  4416  000400                     	ds	67
  4417                           
  4418                           	psect	bssBANK5
  4419  000500                     __pbssBANK5:
  4420                           	opt callstack 0
  4421  000500                     _uart2RxBuffer:
  4422                           	opt callstack 0
  4423  000500                     	ds	255
  4424                           
  4425                           	psect	bssBIGRAM
  4426  00092A                     __pbssBIGRAM:
  4427                           	opt callstack 0
  4428  00092A                     _D:
  4429                           	opt callstack 0
  4430  00092A                     	ds	482
  4431                           
  4432                           	psect	dataBIGRAM
  4433  0005FF                     __pdataBIGRAM:
  4434                           	opt callstack 0
  4435  0005FF                     _port_data:
  4436                           	opt callstack 0
  4437  0005FF                     	ds	512
  4438  0007FF                     _C:
  4439                           	opt callstack 0
  4440  0007FF                     	ds	299
  4441                           
  4442                           	psect	cstackBANK0
  4443  0000E7                     __pcstackBANK0:
  4444                           	opt callstack 0
  4445  0000E7                     ??_TMR3_ISR:
  4446                           
  4447                           ; 1 bytes @ 0x0
  4448  0000E7                     	ds	25
  4449                           
  4450                           	psect	cstackCOMRAM
  4451  000021                     __pcstackCOMRAM:
  4452                           	opt callstack 0
  4453  000021                     ??_ADCC_ThresholdISR:
  4454  000021                     
  4455                           ; 1 bytes @ 0x0
  4456  000021                     	ds	5
  4457  000026                     ??_TMR6_ISR:
  4458                           
  4459                           ; 1 bytes @ 0x5
  4460  000026                     	ds	1
  4461  000027                     ??_INT1_ISR:
  4462  000027                     
  4463                           ; 1 bytes @ 0x6
  4464  000027                     	ds	4
  4465  00002B                     ??_TMR5_ISR:
  4466                           
  4467                           ; 1 bytes @ 0xA
  4468  00002B                     	ds	15
  4469                           
  4470 ;;
  4471 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4472 ;;
  4473 ;; *************** function _main *****************
  4474 ;; Defined at:
  4475 ;;		line 189 in file "main.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  esr_temp        4  [STACK] float 
  4480 ;;  i_esr           2  [STACK] unsigned short 
  4481 ;;  shape           1  [STACK] unsigned char 
  4482 ;;  inp_index       1  [STACK] unsigned char 
  4483 ;;  k               1  [STACK] unsigned char 
  4484 ;;  j               1  [STACK] unsigned char 
  4485 ;;  i               1  [STACK] unsigned char 
  4486 ;;  mode            1  [STACK] enum E17028
  4487 ;;  i_ror           1  [STACK] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1  [STACK] void 
  4490 ;; Registers used:
  4491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4501 ;;Total ram usage:        0 bytes
  4502 ;; Hardware stack levels required when called:   29
  4503 ;; This function calls:
  4504 ;;		_SYSTEM_Initialize
  4505 ;;		_StartTimer
  4506 ;;		_TimerDone
  4507 ;;		_WaitMs
  4508 ;;		___fladd
  4509 ;;		___flge
  4510 ;;		___fltol
  4511 ;;		_calc_model_data
  4512 ;;		_calc_ror_data
  4513 ;;		_check_adc_scan
  4514 ;;		_check_enter_button
  4515 ;;		_check_help
  4516 ;;		_clear_adc_scan
  4517 ;;		_clear_hid_pflags
  4518 ;;		_conv_raw_result
  4519 ;;		_convert_adc_data
  4520 ;;		_current_sensor_cal
  4521 ;;		_eaDogM_WriteCommand
  4522 ;;		_esr_check
  4523 ;;		_fabsf
  4524 ;;		_get_raw_result
  4525 ;;		_get_switch
  4526 ;;		_get_vterm_ptr
  4527 ;;		_hid_display
  4528 ;;		_init_bsoc
  4529 ;;		_init_display
  4530 ;;		_init_port_dma
  4531 ;;		_lp_filter
  4532 ;;		_mode_lamp_dim
  4533 ;;		_read_cal_data
  4534 ;;		_set_dac
  4535 ;;		_set_dac_a
  4536 ;;		_set_dac_b
  4537 ;;		_set_display_info
  4538 ;;		_set_load_relay_one
  4539 ;;		_set_load_relay_two
  4540 ;;		_set_vterm
  4541 ;;		_spinners
  4542 ;;		_sprintf
  4543 ;;		_srand
  4544 ;;		_start_adc_scan
  4545 ;;		_start_switch_handler
  4546 ;;		_static_soc
  4547 ;;		_update_cal_data
  4548 ;;		_update_lcd
  4549 ;;		_wait_lcd_done
  4550 ;; This function is called by:
  4551 ;;		Startup code after reset
  4552 ;; This function uses a reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text0
  4556  010000                     __ptext0:
  4557                           	opt callstack 0
  4558  010000                     _main:
  4559                           	opt callstack 0
  4560                           
  4561                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4562  010000  0E11               	movlw	17
  4563  010002  26E1               	addwf	fsr1l,f,c
  4564  010004  0E00               	movlw	0
  4565  010006  22E2               	addwfc	fsr1h,f,c
  4566                           
  4567                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4568                           ;stkvar	_inp_index @ sp[(-17)+11]
  4569                           
  4570                           ;incstack = 0
  4571  010008  0EFA               	movlw	-6
  4572  01000A  6AE3               	clrf	plusw1,c
  4573                           
  4574                           ;stkvar	_i @ sp[(-17)+14]
  4575  01000C  0EFD               	movlw	-3
  4576  01000E  6AE3               	clrf	plusw1,c
  4577                           
  4578                           ;stkvar	_j @ sp[(-17)+13]
  4579  010010  0EFC               	movlw	-4
  4580  010012  6AE3               	clrf	plusw1,c
  4581  010014  2AE3               	incf	plusw1,f,c
  4582                           
  4583                           ;stkvar	_k @ sp[(-17)+12]
  4584  010016  0EFB               	movlw	-5
  4585  010018  6AE3               	clrf	plusw1,c
  4586  01001A  82E3               	bsf	plusw1,1,c
  4587                           
  4588                           ;main.c: 195:  SYSTEM_Initialize();
  4589  01001C  EC8B  F0E6         	call	_SYSTEM_Initialize	;wreg free
  4590                           
  4591                           ; BSR set to: 60
  4592                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4593  010020  8ED2               	bsf	210,7,c	;volatile
  4594                           
  4595                           ; BSR set to: 60
  4596                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4597  010022  8CD2               	bsf	210,6,c	;volatile
  4598                           
  4599                           ; BSR set to: 60
  4600                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4601  010024  0101               	movlb	1	; () banked
  4602  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4603                           
  4604                           ; BSR set to: 1
  4605                           ;main.c: 208:  WaitMs(300);
  4606  010028  0E2C               	movlw	44
  4607  01002A  6EE6               	movwf	postinc1,c
  4608  01002C  0E01               	movlw	1
  4609  01002E  6EE6               	movwf	postinc1,c
  4610  010030  EC49  F0E9         	call	_WaitMs	;wreg free
  4611                           
  4612                           ;main.c: 209:  if (PORTBbits.RB0) {
  4613  010034  A0CB               	btfss	203,0,c	;volatile
  4614  010036  D004               	goto	l14692
  4615                           
  4616                           ;main.c: 210:   mode = UI_STATE_HOST;
  4617                           ;stkvar	_mode @ sp[(-17)+15]
  4618  010038  0EFE               	movlw	-2
  4619  01003A  6AE3               	clrf	plusw1,c
  4620  01003C  2AE3               	incf	plusw1,f,c
  4621                           
  4622                           ;main.c: 211:  } else {
  4623  01003E  D004               	goto	l14694
  4624  010040                     l14692:
  4625                           
  4626                           ;main.c: 212:   mode = UI_STATE_LOG;
  4627                           ;stkvar	_mode @ sp[(-17)+15]
  4628  010040  0EFE               	movlw	-2
  4629  010042  6AE3               	clrf	plusw1,c
  4630  010044  80E3               	bsf	plusw1,0,c
  4631  010046  82E3               	bsf	plusw1,1,c	;indir
  4632  010048                     l14694:
  4633                           
  4634                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4635                           ;stkvar	_mode @ sp[(-17)+15]
  4636  010048  0EFE               	movlw	-2
  4637  01004A  04E3               	decf	plusw1,w,c
  4638  01004C  A4D8               	btfss	status,2,c
  4639  01004E  D007               	goto	l1439
  4640                           
  4641                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4642  010050  80BD               	bsf	189,0,c	;volatile
  4643                           
  4644                           ;main.c: 217:   V.mode_pwm = 70;
  4645  010052  0E00               	movlw	0
  4646  010054  0101               	movlb	1	; () banked
  4647  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4648  010058  0E46               	movlw	70
  4649  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4650                           
  4651                           ;main.c: 218:  } else {
  4652  01005C  D004               	goto	l14698
  4653  01005E                     l1439:
  4654  01005E  90BD               	bcf	189,0,c	;volatile
  4655                           
  4656                           ;main.c: 220:   V.mode_pwm = 0;
  4657  010060  0101               	movlb	1	; () banked
  4658  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4659  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4660  010066                     l14698:
  4661                           
  4662                           ; BSR set to: 1
  4663                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4664  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  4665  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  4666  010072  EC05  F0ED         	call	_mode_lamp_dim	;wreg free
  4667  010076  D39B               	goto	l14846
  4668  010078                     l14700:
  4669                           
  4670                           ; BSR set to: 1
  4671                           ;main.c: 230:    init_port_dma();
  4672  010078  ECE5  F0E9         	call	_init_port_dma	;wreg free
  4673                           
  4674                           ; BSR set to: 59
  4675                           ;main.c: 232:    init_display();
  4676  01007C  EC3A  F0DA         	call	_init_display	;wreg free
  4677                           
  4678                           ; BSR set to: 61
  4679                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4680  010080  0E0C               	movlw	12
  4681  010082  6EE6               	movwf	postinc1,c
  4682  010084  EC8D  F0ED         	call	_eaDogM_WriteCommand	;wreg free
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;main.c: 234:    set_dac();
  4686  010088  ECD2  F0DD         	call	_set_dac	;wreg free
  4687                           
  4688                           ;main.c: 238:    set_load_relay_one(1);
  4689  01008C  0E01               	movlw	1
  4690  01008E  6EE6               	movwf	postinc1,c
  4691  010090  EC6D  F0ED         	call	_set_load_relay_one	;wreg free
  4692                           
  4693                           ;main.c: 239:    set_load_relay_two(1);
  4694  010094  0E01               	movlw	1
  4695  010096  6EE6               	movwf	postinc1,c
  4696  010098  EC65  F0ED         	call	_set_load_relay_two	;wreg free
  4697                           
  4698                           ;main.c: 241:    V.ui_state = mode;
  4699                           ;stkvar	_mode @ sp[(-17)+15]
  4700  01009C  0EFE               	movlw	-2
  4701  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4702                           
  4703                           ;main.c: 242:    srand(1957);
  4704  0100A4  0EA5               	movlw	165
  4705  0100A6  6EE6               	movwf	postinc1,c
  4706  0100A8  0E07               	movlw	7
  4707  0100AA  6EE6               	movwf	postinc1,c
  4708  0100AC  EC64  F0E9         	call	_srand	;wreg free
  4709                           
  4710                           ; BSR set to: 2
  4711                           ;main.c: 243:    set_vterm(0);
  4712  0100B0  0E00               	movlw	0
  4713  0100B2  6EE6               	movwf	postinc1,c
  4714  0100B4  ECBD  F0EC         	call	_set_vterm	;wreg free
  4715                           
  4716                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4717  0100B8  0E65               	movlw	low STR_1
  4718  0100BA  6EE6               	movwf	postinc1,c
  4719  0100BC  0EFE               	movlw	high STR_1
  4720  0100BE  6EE6               	movwf	postinc1,c
  4721  0100C0  0E00               	movlw	0
  4722  0100C2  6EE6               	movwf	postinc1,c
  4723  0100C4  0E00               	movlw	0
  4724  0100C6  6EE6               	movwf	postinc1,c
  4725  0100C8  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4726  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4727  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4728  0100D8  0E04               	movlw	4
  4729  0100DA  6EE6               	movwf	postinc1,c
  4730  0100DC  ECC4  F0D8         	call	_sprintf	;wreg free
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.20");
  4734  0100E0  0ED2               	movlw	low STR_3
  4735  0100E2  6EE6               	movwf	postinc1,c
  4736  0100E4  0EFF               	movlw	high STR_3
  4737  0100E6  6EE6               	movwf	postinc1,c
  4738  0100E8  0E11               	movlw	low STR_2
  4739  0100EA  6EE6               	movwf	postinc1,c
  4740  0100EC  0EFE               	movlw	high STR_2
  4741  0100EE  6EE6               	movwf	postinc1,c
  4742  0100F0  0E00               	movlw	0
  4743  0100F2  6EE6               	movwf	postinc1,c
  4744  0100F4  0E01               	movlw	1
  4745  0100F6  6EE6               	movwf	postinc1,c
  4746  0100F8  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4747  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4748  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4749  010108  0E06               	movlw	6
  4750  01010A  6EE6               	movwf	postinc1,c
  4751  01010C  ECC4  F0D8         	call	_sprintf	;wreg free
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4755  010110  0EA8               	movlw	low STR_4
  4756  010112  6EE6               	movwf	postinc1,c
  4757  010114  0EFD               	movlw	high STR_4
  4758  010116  6EE6               	movwf	postinc1,c
  4759  010118  0E00               	movlw	0
  4760  01011A  6EE6               	movwf	postinc1,c
  4761  01011C  0E02               	movlw	2
  4762  01011E  6EE6               	movwf	postinc1,c
  4763  010120  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4764  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4765  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4766  010130  0E04               	movlw	4
  4767  010132  6EE6               	movwf	postinc1,c
  4768  010134  ECC4  F0D8         	call	_sprintf	;wreg free
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4772  010138  0EDF               	movlw	low (STR_14+1)
  4773  01013A  6EE6               	movwf	postinc1,c
  4774  01013C  0EFB               	movlw	high (STR_14+1)
  4775  01013E  6EE6               	movwf	postinc1,c
  4776  010140  0E02               	movlw	2
  4777  010142  6EE6               	movwf	postinc1,c
  4778  010144  0E00               	movlw	0
  4779  010146  6EE6               	movwf	postinc1,c
  4780  010148  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4781  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4782  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4783  010158  0E04               	movlw	4
  4784  01015A  6EE6               	movwf	postinc1,c
  4785  01015C  ECC4  F0D8         	call	_sprintf	;wreg free
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4789  010160  0EDF               	movlw	low (STR_14+1)
  4790  010162  6EE6               	movwf	postinc1,c
  4791  010164  0EFB               	movlw	high (STR_14+1)
  4792  010166  6EE6               	movwf	postinc1,c
  4793  010168  0E02               	movlw	2
  4794  01016A  6EE6               	movwf	postinc1,c
  4795  01016C  0E01               	movlw	1
  4796  01016E  6EE6               	movwf	postinc1,c
  4797  010170  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4798  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4799  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4800  010180  0E04               	movlw	4
  4801  010182  6EE6               	movwf	postinc1,c
  4802  010184  ECC4  F0D8         	call	_sprintf	;wreg free
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4806  010188  0EDF               	movlw	low (STR_14+1)
  4807  01018A  6EE6               	movwf	postinc1,c
  4808  01018C  0EFB               	movlw	high (STR_14+1)
  4809  01018E  6EE6               	movwf	postinc1,c
  4810  010190  0E02               	movlw	2
  4811  010192  6EE6               	movwf	postinc1,c
  4812  010194  0E02               	movlw	2
  4813  010196  6EE6               	movwf	postinc1,c
  4814  010198  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4815  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4816  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4817  0101A8  0E04               	movlw	4
  4818  0101AA  6EE6               	movwf	postinc1,c
  4819  0101AC  ECC4  F0D8         	call	_sprintf	;wreg free
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;main.c: 250:    update_lcd(0);
  4823  0101B0  0E00               	movlw	0
  4824  0101B2  6EE6               	movwf	postinc1,c
  4825  0101B4  EC3C  F0D8         	call	_update_lcd	;wreg free
  4826                           
  4827                           ;main.c: 251:    WaitMs(1000);
  4828  0101B8  0EE8               	movlw	232
  4829  0101BA  6EE6               	movwf	postinc1,c
  4830  0101BC  0E03               	movlw	3
  4831  0101BE  6EE6               	movwf	postinc1,c
  4832  0101C0  EC49  F0E9         	call	_WaitMs	;wreg free
  4833                           
  4834                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4835  0101C4  0EFA               	movlw	250
  4836  0101C6  6EE6               	movwf	postinc1,c
  4837  0101C8  0E00               	movlw	0
  4838  0101CA  6EE6               	movwf	postinc1,c
  4839  0101CC  0E0A               	movlw	10
  4840  0101CE  6EE6               	movwf	postinc1,c
  4841  0101D0  EC57  F0E8         	call	_StartTimer	;wreg free
  4842                           
  4843                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4844  0101D4  0EC8               	movlw	200
  4845  0101D6  6EE6               	movwf	postinc1,c
  4846  0101D8  0E00               	movlw	0
  4847  0101DA  6EE6               	movwf	postinc1,c
  4848  0101DC  0E01               	movlw	1
  4849  0101DE  6EE6               	movwf	postinc1,c
  4850  0101E0  EC57  F0E8         	call	_StartTimer	;wreg free
  4851                           
  4852                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4853  0101E4  0EB8               	movlw	184
  4854  0101E6  6EE6               	movwf	postinc1,c
  4855  0101E8  0E0B               	movlw	11
  4856  0101EA  6EE6               	movwf	postinc1,c
  4857  0101EC  0E07               	movlw	7
  4858  0101EE  6EE6               	movwf	postinc1,c
  4859  0101F0  EC57  F0E8         	call	_StartTimer	;wreg free
  4860                           
  4861                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4862  0101F4  0EDC               	movlw	220
  4863  0101F6  6EE6               	movwf	postinc1,c
  4864  0101F8  0E05               	movlw	5
  4865  0101FA  6EE6               	movwf	postinc1,c
  4866  0101FC  0E0B               	movlw	11
  4867  0101FE  6EE6               	movwf	postinc1,c
  4868  010200  EC57  F0E8         	call	_StartTimer	;wreg free
  4869                           
  4870                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4871  010204  0EB8               	movlw	184
  4872  010206  6EE6               	movwf	postinc1,c
  4873  010208  0E0B               	movlw	11
  4874  01020A  6EE6               	movwf	postinc1,c
  4875  01020C  0E09               	movlw	9
  4876  01020E  6EE6               	movwf	postinc1,c
  4877  010210  EC57  F0E8         	call	_StartTimer	;wreg free
  4878                           
  4879                           ;main.c: 258:    start_adc_scan();
  4880  010214  ECC7  F0E4         	call	_start_adc_scan	;wreg free
  4881                           
  4882                           ;main.c: 259:    start_switch_handler();
  4883  010218  EC7F  F0EC         	call	_start_switch_handler	;wreg free
  4884                           
  4885                           ; BSR set to: 57
  4886                           ;main.c: 260:    WaitMs(1000);
  4887  01021C  0EE8               	movlw	232
  4888  01021E  6EE6               	movwf	postinc1,c
  4889  010220  0E03               	movlw	3
  4890  010222  6EE6               	movwf	postinc1,c
  4891  010224  EC49  F0E9         	call	_WaitMs	;wreg free
  4892                           
  4893                           ;main.c: 265:    if (read_cal_data()) {
  4894  010228  ECAC  F0CA         	call	_read_cal_data	;wreg free
  4895  01022C  5001               	movf	btemp^0,w,c
  4896  01022E  B4D8               	btfsc	status,2,c
  4897  010230  D017               	goto	l14756
  4898                           
  4899                           ;main.c: 266:     update_cal_data();
  4900  010232  EC1D  F0ED         	call	_update_cal_data	;wreg free
  4901                           
  4902                           ;main.c: 267:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4903  010236  0EB9               	movlw	low STR_8
  4904  010238  6EE6               	movwf	postinc1,c
  4905  01023A  0EFE               	movlw	high STR_8
  4906  01023C  6EE6               	movwf	postinc1,c
  4907  01023E  0E00               	movlw	0
  4908  010240  6EE6               	movwf	postinc1,c
  4909  010242  0E02               	movlw	2
  4910  010244  6EE6               	movwf	postinc1,c
  4911  010246  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4912  01024A  0060  F007  FFE6   	movff	btemp,postinc1
  4913  010250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4914  010256  0E04               	movlw	4
  4915  010258  6EE6               	movwf	postinc1,c
  4916  01025A  ECC4  F0D8         	call	_sprintf	;wreg free
  4917                           
  4918                           ;main.c: 268:    } else {
  4919  01025E  D014               	goto	l1445
  4920  010260                     l14756:
  4921                           
  4922                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  4923  010260  0E22               	movlw	low STR_9
  4924  010262  6EE6               	movwf	postinc1,c
  4925  010264  0EFF               	movlw	high STR_9
  4926  010266  6EE6               	movwf	postinc1,c
  4927  010268  0E00               	movlw	0
  4928  01026A  6EE6               	movwf	postinc1,c
  4929  01026C  0E02               	movlw	2
  4930  01026E  6EE6               	movwf	postinc1,c
  4931  010270  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4932  010274  0060  F007  FFE6   	movff	btemp,postinc1
  4933  01027A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4934  010280  0E04               	movlw	4
  4935  010282  6EE6               	movwf	postinc1,c
  4936  010284  ECC4  F0D8         	call	_sprintf	;wreg free
  4937  010288                     l1445:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;main.c: 271:    update_lcd(0);
  4941  010288  0E00               	movlw	0
  4942  01028A  6EE6               	movwf	postinc1,c
  4943  01028C  EC3C  F0D8         	call	_update_lcd	;wreg free
  4944                           
  4945                           ;main.c: 272:    WaitMs(2000);
  4946  010290  0ED0               	movlw	208
  4947  010292  6EE6               	movwf	postinc1,c
  4948  010294  0E07               	movlw	7
  4949  010296  6EE6               	movwf	postinc1,c
  4950  010298  EC49  F0E9         	call	_WaitMs	;wreg free
  4951                           
  4952                           ;main.c: 274:    i_ror = 1;
  4953                           ;stkvar	_i_ror @ sp[(-17)+16]
  4954  01029C  0EFF               	movlw	-1
  4955  01029E  6AE3               	clrf	plusw1,c
  4956  0102A0  2AE3               	incf	plusw1,f,c
  4957  0102A2                     l14762:
  4958                           
  4959                           ;main.c: 276:     calc_ror_data();
  4960  0102A2  EC0A  F0CE         	call	_calc_ror_data	;wreg free
  4961                           
  4962                           ;main.c: 277:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4963  0102A6  0E00               	movlw	0
  4964  0102A8  6EE6               	movwf	postinc1,c
  4965  0102AA  0E04               	movlw	4
  4966  0102AC  6EE6               	movwf	postinc1,c
  4967  0102AE  ECF8  F0AF         	call	_conv_raw_result	;wreg free
  4968  0102B2  0060  F007  FFE6   	movff	btemp,postinc1
  4969  0102B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4970  0102BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4971  0102C4  0060  F013  FFE6   	movff	btemp+3,postinc1
  4972  0102CA  0E93               	movlw	low STR_10
  4973  0102CC  6EE6               	movwf	postinc1,c
  4974  0102CE  0EFD               	movlw	high STR_10
  4975  0102D0  6EE6               	movwf	postinc1,c
  4976  0102D2  0E00               	movlw	0
  4977  0102D4  6EE6               	movwf	postinc1,c
  4978  0102D6  0E01               	movlw	1
  4979  0102D8  6EE6               	movwf	postinc1,c
  4980  0102DA  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  4981  0102DE  0060  F007  FFE6   	movff	btemp,postinc1
  4982  0102E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4983  0102EA  0E08               	movlw	8
  4984  0102EC  6EE6               	movwf	postinc1,c
  4985  0102EE  ECC4  F0D8         	call	_sprintf	;wreg free
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;main.c: 278:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4989  0102F2  EE22  F06B         	lfsr	2,_C+108	;volatile
  4990  0102F6  006F FF7B FFE6     	movff	postinc2,postinc1
  4991  0102FC  006F FF7B FFE6     	movff	postinc2,postinc1
  4992  010302  006F FF7B FFE6     	movff	postinc2,postinc1
  4993  010308  006F FF7B FFE6     	movff	postinc2,postinc1
  4994                           
  4995                           ;stkvar	_i_ror @ sp[(-21)+16]
  4996  01030E  0EFB               	movlw	-5
  4997  010310  50E3               	movf	plusw1,w,c
  4998  010312  6EE6               	movwf	postinc1,c
  4999  010314  0E00               	movlw	0
  5000  010316  6EE6               	movwf	postinc1,c
  5001  010318  0E00               	movlw	0
  5002  01031A  6EE6               	movwf	postinc1,c
  5003  01031C  0E05               	movlw	5
  5004  01031E  6EE6               	movwf	postinc1,c
  5005  010320  EC49  F0D9         	call	_spinners	;wreg free
  5006  010324  5001               	movf	btemp^0,w,c
  5007  010326  6EE6               	movwf	postinc1,c
  5008  010328  0E00               	movlw	0
  5009  01032A  6EE6               	movwf	postinc1,c
  5010  01032C  0E39               	movlw	low STR_11
  5011  01032E  6EE6               	movwf	postinc1,c
  5012  010330  0EFB               	movlw	high STR_11
  5013  010332  6EE6               	movwf	postinc1,c
  5014  010334  0E00               	movlw	0
  5015  010336  6EE6               	movwf	postinc1,c
  5016  010338  0E02               	movlw	2
  5017  01033A  6EE6               	movwf	postinc1,c
  5018  01033C  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5019  010340  0060  F007  FFE6   	movff	btemp,postinc1
  5020  010346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5021  01034C  0E0C               	movlw	12
  5022  01034E  6EE6               	movwf	postinc1,c
  5023  010350  ECC4  F0D8         	call	_sprintf	;wreg free
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;main.c: 279:     update_lcd(0);
  5027  010354  0E00               	movlw	0
  5028  010356  6EE6               	movwf	postinc1,c
  5029  010358  EC3C  F0D8         	call	_update_lcd	;wreg free
  5030                           
  5031                           ;main.c: 280:     clear_adc_scan();
  5032  01035C  ECE4  F0ED         	call	_clear_adc_scan	;wreg free
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;main.c: 281:     start_adc_scan();
  5036  010360  ECC7  F0E4         	call	_start_adc_scan	;wreg free
  5037                           
  5038                           ;main.c: 282:     WaitMs(2000);
  5039  010364  0ED0               	movlw	208
  5040  010366  6EE6               	movwf	postinc1,c
  5041  010368  0E07               	movlw	7
  5042  01036A  6EE6               	movwf	postinc1,c
  5043  01036C  EC49  F0E9         	call	_WaitMs	;wreg free
  5044                           
  5045                           ;main.c: 285:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5046                           ;stkvar	_i_ror @ sp[(-17)+16]
  5047  010370  0EFF               	movlw	-1
  5048  010372  006F FF8C  F00C    	movff	plusw1,btemp+11
  5049  010378  2A0C               	incf	(btemp+11)^0,f,c
  5050  01037A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5051  010380  060C               	decf	(btemp+11)^0,f,c
  5052  010382  0E1E               	movlw	30
  5053  010384  600C               	cpfslt	(btemp+11)^0,c
  5054  010386  D01A               	goto	u14020
  5055  010388  EE22  F06B         	lfsr	2,_C+108	;volatile
  5056  01038C  006F FF7B FFE6     	movff	postinc2,postinc1
  5057  010392  006F FF7B FFE6     	movff	postinc2,postinc1
  5058  010398  006F FF7B FFE6     	movff	postinc2,postinc1
  5059  01039E  006F FF7B FFE6     	movff	postinc2,postinc1
  5060  0103A4  0E42               	movlw	66
  5061  0103A6  6EE6               	movwf	postinc1,c
  5062  0103A8  0E60               	movlw	96
  5063  0103AA  6EE6               	movwf	postinc1,c
  5064  0103AC  0E65               	movlw	101
  5065  0103AE  6EE6               	movwf	postinc1,c
  5066  0103B0  0E3C               	movlw	60
  5067  0103B2  6EE6               	movwf	postinc1,c
  5068  0103B4  ECFF  F0D0         	call	___flge	;wreg free
  5069  0103B8  A001               	btfss	btemp& (0+255),0,c
  5070  0103BA  D773               	goto	l14762
  5071  0103BC                     u14020:
  5072                           
  5073                           ;main.c: 287:    static_soc();
  5074  0103BC  EC8B  F0E5         	call	_static_soc	;wreg free
  5075                           
  5076                           ;main.c: 288:    init_bsoc();
  5077  0103C0  EC40  F0C4         	call	_init_bsoc	;wreg free
  5078                           
  5079                           ;main.c: 289:    set_load_relay_one(0);
  5080  0103C4  0E00               	movlw	0
  5081  0103C6  6EE6               	movwf	postinc1,c
  5082  0103C8  EC6D  F0ED         	call	_set_load_relay_one	;wreg free
  5083                           
  5084                           ;main.c: 290:    set_load_relay_two(0);
  5085  0103CC  0E00               	movlw	0
  5086  0103CE  6EE6               	movwf	postinc1,c
  5087  0103D0  EC65  F0ED         	call	_set_load_relay_two	;wreg free
  5088                           
  5089                           ;main.c: 291:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5090  0103D4  EE22  F0B5         	lfsr	2,_C+182	;volatile
  5091  0103D8  006F FF78  F00B    	movff	postinc2,btemp+10
  5092  0103DE  006F FF74  F00C    	movff	postdec2,btemp+11
  5093  0103E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5094  0103EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5095  0103F0  0E0A               	movlw	low STR_12
  5096  0103F2  6EE6               	movwf	postinc1,c
  5097  0103F4  0EFC               	movlw	high STR_12
  5098  0103F6  6EE6               	movwf	postinc1,c
  5099  0103F8  0E00               	movlw	0
  5100  0103FA  6EE6               	movwf	postinc1,c
  5101  0103FC  0E00               	movlw	0
  5102  0103FE  6EE6               	movwf	postinc1,c
  5103  010400  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5104  010404  0060  F007  FFE6   	movff	btemp,postinc1
  5105  01040A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5106  010410  0E06               	movlw	6
  5107  010412  6EE6               	movwf	postinc1,c
  5108  010414  ECC4  F0D8         	call	_sprintf	;wreg free
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;main.c: 292:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5112  010418  EE22  F08F         	lfsr	2,_C+144	;volatile
  5113  01041C  006F FF7B FFE6     	movff	postinc2,postinc1
  5114  010422  006F FF7B FFE6     	movff	postinc2,postinc1
  5115  010428  006F FF7B FFE6     	movff	postinc2,postinc1
  5116  01042E  006F FF7B FFE6     	movff	postinc2,postinc1
  5117  010434  0EE6               	movlw	low STR_13
  5118  010436  6EE6               	movwf	postinc1,c
  5119  010438  0EFC               	movlw	high STR_13
  5120  01043A  6EE6               	movwf	postinc1,c
  5121  01043C  0E00               	movlw	0
  5122  01043E  6EE6               	movwf	postinc1,c
  5123  010440  0E01               	movlw	1
  5124  010442  6EE6               	movwf	postinc1,c
  5125  010444  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5126  010448  0060  F007  FFE6   	movff	btemp,postinc1
  5127  01044E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5128  010454  0E08               	movlw	8
  5129  010456  6EE6               	movwf	postinc1,c
  5130  010458  ECC4  F0D8         	call	_sprintf	;wreg free
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;main.c: 293:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5134  01045C  0EDE               	movlw	low STR_14
  5135  01045E  6EE6               	movwf	postinc1,c
  5136  010460  0EFB               	movlw	high STR_14
  5137  010462  6EE6               	movwf	postinc1,c
  5138  010464  0E00               	movlw	0
  5139  010466  6EE6               	movwf	postinc1,c
  5140  010468  0E02               	movlw	2
  5141  01046A  6EE6               	movwf	postinc1,c
  5142  01046C  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5143  010470  0060  F007  FFE6   	movff	btemp,postinc1
  5144  010476  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5145  01047C  0E04               	movlw	4
  5146  01047E  6EE6               	movwf	postinc1,c
  5147  010480  ECC4  F0D8         	call	_sprintf	;wreg free
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;main.c: 294:    update_lcd(0);
  5151  010484  0E00               	movlw	0
  5152  010486  6EE6               	movwf	postinc1,c
  5153  010488  EC3C  F0D8         	call	_update_lcd	;wreg free
  5154                           
  5155                           ;main.c: 295:    WaitMs(2000);
  5156  01048C  0ED0               	movlw	208
  5157  01048E  6EE6               	movwf	postinc1,c
  5158  010490  0E07               	movlw	7
  5159  010492  6EE6               	movwf	postinc1,c
  5160  010494  EC49  F0E9         	call	_WaitMs	;wreg free
  5161                           
  5162                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5163  010498  0EBD               	movlw	low STR_15
  5164  01049A  6EE6               	movwf	postinc1,c
  5165  01049C  0EFD               	movlw	high STR_15
  5166  01049E  6EE6               	movwf	postinc1,c
  5167  0104A0  0E00               	movlw	0
  5168  0104A2  6EE6               	movwf	postinc1,c
  5169  0104A4  0E00               	movlw	0
  5170  0104A6  6EE6               	movwf	postinc1,c
  5171  0104A8  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5172  0104AC  0060  F007  FFE6   	movff	btemp,postinc1
  5173  0104B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5174  0104B8  0E04               	movlw	4
  5175  0104BA  6EE6               	movwf	postinc1,c
  5176  0104BC  ECC4  F0D8         	call	_sprintf	;wreg free
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5180  0104C0  0ED2               	movlw	low STR_16
  5181  0104C2  6EE6               	movwf	postinc1,c
  5182  0104C4  0EFD               	movlw	high STR_16
  5183  0104C6  6EE6               	movwf	postinc1,c
  5184  0104C8  0E00               	movlw	0
  5185  0104CA  6EE6               	movwf	postinc1,c
  5186  0104CC  0E01               	movlw	1
  5187  0104CE  6EE6               	movwf	postinc1,c
  5188  0104D0  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5189  0104D4  0060  F007  FFE6   	movff	btemp,postinc1
  5190  0104DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5191  0104E0  0E04               	movlw	4
  5192  0104E2  6EE6               	movwf	postinc1,c
  5193  0104E4  ECC4  F0D8         	call	_sprintf	;wreg free
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5197  0104E8  0EE3               	movlw	low STR_17
  5198  0104EA  6EE6               	movwf	postinc1,c
  5199  0104EC  0EFE               	movlw	high STR_17
  5200  0104EE  6EE6               	movwf	postinc1,c
  5201  0104F0  0E00               	movlw	0
  5202  0104F2  6EE6               	movwf	postinc1,c
  5203  0104F4  0E02               	movlw	2
  5204  0104F6  6EE6               	movwf	postinc1,c
  5205  0104F8  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5206  0104FC  0060  F007  FFE6   	movff	btemp,postinc1
  5207  010502  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5208  010508  0E04               	movlw	4
  5209  01050A  6EE6               	movwf	postinc1,c
  5210  01050C  ECC4  F0D8         	call	_sprintf	;wreg free
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;main.c: 299:    update_lcd(0);
  5214  010510  0E00               	movlw	0
  5215  010512  6EE6               	movwf	postinc1,c
  5216  010514  EC3C  F0D8         	call	_update_lcd	;wreg free
  5217                           
  5218                           ;main.c: 300:    uint16_t i_esr = 1;
  5219  010518  0E01               	movlw	1
  5220  01051A  6E0B               	movwf	(btemp+10)^0,c
  5221  01051C  0E00               	movlw	0
  5222  01051E  6E0C               	movwf	(btemp+11)^0,c
  5223                           
  5224                           ;stkvar	_i_esr @ sp[(-17)+8]
  5225  010520  0EF7               	movlw	-9
  5226  010522  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5227  010528  0EF8               	movlw	-8
  5228  01052A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5229                           
  5230                           ;main.c: 302:    float esr_temp;;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5231  010530  D06D               	goto	l14822
  5232  010532                     l14810:
  5233                           
  5234                           ;main.c: 304:     WaitMs(110);
  5235  010532  0E6E               	movlw	110
  5236  010534  6EE6               	movwf	postinc1,c
  5237  010536  0E00               	movlw	0
  5238  010538  6EE6               	movwf	postinc1,c
  5239  01053A  EC49  F0E9         	call	_WaitMs	;wreg free
  5240                           
  5241                           ;main.c: 305:     shape = (uint8_t) fabsf(esr_temp);
  5242                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5243  01053E  0EF3               	movlw	-13
  5244  010540  006F FF8F FFE6     	movff	plusw1,postinc1
  5245  010546  006F FF8F FFE6     	movff	plusw1,postinc1
  5246  01054C  006F FF8F FFE6     	movff	plusw1,postinc1
  5247  010552  006F FF8F FFE6     	movff	plusw1,postinc1
  5248  010558  EC2D  F0DE         	call	_fabsf	;wreg free
  5249  01055C  0060  F007  FFE6   	movff	btemp,postinc1
  5250  010562  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5251  010568  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5252  01056E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5253  010574  EC46  F0D0         	call	___fltol	;wreg free
  5254  010578  0060  F004  F00C   	movff	btemp,btemp+11
  5255                           
  5256                           ;stkvar	_shape @ sp[(-17)+10]
  5257  01057E  0EF9               	movlw	-7
  5258  010580  0060  F033  FFE3   	movff	btemp+11,plusw1
  5259                           
  5260                           ;main.c: 306:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5261  010586  0E00               	movlw	0
  5262  010588  6EE6               	movwf	postinc1,c
  5263                           
  5264                           ;stkvar	_shape @ sp[(-18)+10]
  5265  01058A  0EF8               	movlw	-8
  5266  01058C  50E3               	movf	plusw1,w,c
  5267  01058E  6EE6               	movwf	postinc1,c
  5268  010590  EC49  F0D9         	call	_spinners	;wreg free
  5269  010594  5001               	movf	btemp^0,w,c
  5270  010596  6EE6               	movwf	postinc1,c
  5271  010598  0E00               	movlw	0
  5272  01059A  6EE6               	movwf	postinc1,c
  5273  01059C  0E00               	movlw	0
  5274  01059E  6EE6               	movwf	postinc1,c
  5275  0105A0  0E00               	movlw	0
  5276  0105A2  6EE6               	movwf	postinc1,c
  5277  0105A4  EC49  F0D9         	call	_spinners	;wreg free
  5278  0105A8  5001               	movf	btemp^0,w,c
  5279  0105AA  6EE6               	movwf	postinc1,c
  5280  0105AC  0E00               	movlw	0
  5281  0105AE  6EE6               	movwf	postinc1,c
  5282  0105B0  0E8F               	movlw	low STR_18
  5283  0105B2  6EE6               	movwf	postinc1,c
  5284  0105B4  0EFE               	movlw	high STR_18
  5285  0105B6  6EE6               	movwf	postinc1,c
  5286  0105B8  0E00               	movlw	0
  5287  0105BA  6EE6               	movwf	postinc1,c
  5288  0105BC  0E02               	movlw	2
  5289  0105BE  6EE6               	movwf	postinc1,c
  5290  0105C0  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5291  0105C4  0060  F007  FFE6   	movff	btemp,postinc1
  5292  0105CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5293  0105D0  0E08               	movlw	8
  5294  0105D2  6EE6               	movwf	postinc1,c
  5295  0105D4  ECC4  F0D8         	call	_sprintf	;wreg free
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;main.c: 307:     update_lcd(0);
  5299  0105D8  0E00               	movlw	0
  5300  0105DA  6EE6               	movwf	postinc1,c
  5301  0105DC  EC3C  F0D8         	call	_update_lcd	;wreg free
  5302                           
  5303                           ;main.c: 309:     if (i_esr++ > 512)
  5304                           ;stkvar	_i_esr @ sp[(-17)+8]
  5305  0105E0  50E1               	movf	fsr1l,w,c
  5306  0105E2  0FF7               	addlw	-9
  5307  0105E4  6ED9               	movwf	fsr2l,c
  5308  0105E6  50E2               	movf	fsr1h,w,c
  5309  0105E8  6EDA               	movwf	fsr2h,c
  5310  0105EA  0EFF               	movlw	255
  5311  0105EC  22DA               	addwfc	fsr2h,f,c
  5312  0105EE  006F FF7C  F00B    	movff	indf2,btemp+10
  5313  0105F4  0E01               	movlw	1
  5314  0105F6  26DE               	addwf	postinc2,f,c
  5315  0105F8  006F FF7C  F00C    	movff	indf2,btemp+11
  5316  0105FE  0E00               	movlw	0
  5317  010600  22DD               	addwfc	postdec2,f,c
  5318  010602  040B               	decf	(btemp+10)^0,w,c
  5319  010604  0E02               	movlw	2
  5320  010606  580C               	subwfb	(btemp+11)^0,w,c
  5321  010608  B0D8               	btfsc	status,0,c
  5322  01060A  D017               	goto	u14040
  5323  01060C                     l14822:
  5324                           
  5325                           ;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0) {
  5326  01060C  0E00               	movlw	0
  5327  01060E  6EE6               	movwf	postinc1,c
  5328  010610  ECFB  F0BE         	call	_esr_check	;wreg free
  5329                           
  5330                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5331  010614  0EF3               	movlw	-13
  5332  010616  0060  F007  FFE3   	movff	btemp,plusw1
  5333  01061C  0EF4               	movlw	-12
  5334  01061E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5335  010624  0EF5               	movlw	-11
  5336  010626  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5337  01062C  0EF6               	movlw	-10
  5338  01062E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5339  010634  0EF6               	movlw	-10
  5340  010636  BEE3               	btfsc	plusw1,7,c
  5341  010638  D77C               	goto	l14810
  5342  01063A                     u14040:
  5343                           
  5344                           ;main.c: 312:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5345  01063A  EE22  F087         	lfsr	2,_C+136	;volatile
  5346  01063E  006F FF7B FFE6     	movff	postinc2,postinc1
  5347  010644  006F FF7B FFE6     	movff	postinc2,postinc1
  5348  01064A  006F FF7B FFE6     	movff	postinc2,postinc1
  5349  010650  006F FF7B FFE6     	movff	postinc2,postinc1
  5350  010656  0EF4               	movlw	low STR_19
  5351  010658  6EE6               	movwf	postinc1,c
  5352  01065A  0EFB               	movlw	high STR_19
  5353  01065C  6EE6               	movwf	postinc1,c
  5354  01065E  0E00               	movlw	0
  5355  010660  6EE6               	movwf	postinc1,c
  5356  010662  0E00               	movlw	0
  5357  010664  6EE6               	movwf	postinc1,c
  5358  010666  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5359  01066A  0060  F007  FFE6   	movff	btemp,postinc1
  5360  010670  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5361  010676  0E08               	movlw	8
  5362  010678  6EE6               	movwf	postinc1,c
  5363  01067A  ECC4  F0D8         	call	_sprintf	;wreg free
  5364                           
  5365                           ;main.c: 313:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5366  01067E  EE22  F10D         	lfsr	2,_C+270	;volatile
  5367  010682  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  010688  006F FF7B FFE6     	movff	postinc2,postinc1
  5369  01068E  006F FF7B FFE6     	movff	postinc2,postinc1
  5370  010694  006F FF7B FFE6     	movff	postinc2,postinc1
  5371  01069A  EE22  F119         	lfsr	2,_C+282	;volatile
  5372  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5373  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5374  0106AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5375  0106B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5376  0106B6  0E05               	movlw	low STR_20
  5377  0106B8  6EE6               	movwf	postinc1,c
  5378  0106BA  0EFB               	movlw	high STR_20
  5379  0106BC  6EE6               	movwf	postinc1,c
  5380  0106BE  0E00               	movlw	0
  5381  0106C0  6EE6               	movwf	postinc1,c
  5382  0106C2  0E01               	movlw	1
  5383  0106C4  6EE6               	movwf	postinc1,c
  5384  0106C6  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5385  0106CA  0060  F007  FFE6   	movff	btemp,postinc1
  5386  0106D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5387  0106D6  0E0C               	movlw	12
  5388  0106D8  6EE6               	movwf	postinc1,c
  5389  0106DA  ECC4  F0D8         	call	_sprintf	;wreg free
  5390                           
  5391                           ;main.c: 314:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5392  0106DE  EE22  F111         	lfsr	2,_C+274	;volatile
  5393  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5394  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5395  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5396  0106F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5397  0106FA  EE22  F11D         	lfsr	2,_C+286	;volatile
  5398  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5399  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5400  01070A  006F FF7B FFE6     	movff	postinc2,postinc1
  5401  010710  006F FF7B FFE6     	movff	postinc2,postinc1
  5402  010716  0E1F               	movlw	low STR_21
  5403  010718  6EE6               	movwf	postinc1,c
  5404  01071A  0EFB               	movlw	high STR_21
  5405  01071C  6EE6               	movwf	postinc1,c
  5406  01071E  0E00               	movlw	0
  5407  010720  6EE6               	movwf	postinc1,c
  5408  010722  0E02               	movlw	2
  5409  010724  6EE6               	movwf	postinc1,c
  5410  010726  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5411  01072A  0060  F007  FFE6   	movff	btemp,postinc1
  5412  010730  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5413  010736  0E0C               	movlw	12
  5414  010738  6EE6               	movwf	postinc1,c
  5415  01073A  ECC4  F0D8         	call	_sprintf	;wreg free
  5416                           
  5417                           ;main.c: 315:    update_lcd(0);
  5418  01073E  0E00               	movlw	0
  5419  010740  6EE6               	movwf	postinc1,c
  5420  010742  EC3C  F0D8         	call	_update_lcd	;wreg free
  5421                           
  5422                           ;main.c: 316:    WaitMs(4000);
  5423  010746  0EA0               	movlw	160
  5424  010748  6EE6               	movwf	postinc1,c
  5425  01074A  0E0F               	movlw	15
  5426  01074C  6EE6               	movwf	postinc1,c
  5427  01074E  EC49  F0E9         	call	_WaitMs	;wreg free
  5428                           
  5429                           ;main.c: 317:    V.sensor_set = get_switch(SCALIB);
  5430  010752  0E04               	movlw	4
  5431  010754  6EE6               	movwf	postinc1,c
  5432  010756  EC5C  F0EA         	call	_get_switch	;wreg free
  5433  01075A  5001               	movf	btemp^0,w,c
  5434  01075C  B4D8               	btfsc	status,2,c
  5435  01075E  D002               	goto	u14050
  5436  010760  0E01               	movlw	1
  5437  010762  D001               	goto	u14060
  5438  010764                     u14050:
  5439  010764  0E00               	movlw	0
  5440  010766                     u14060:
  5441  010766  0101               	movlb	1	; () banked
  5442  010768  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5443                           
  5444                           ; BSR set to: 1
  5445                           ;main.c: 318:    WaitMs(1000);
  5446  01076A  0EE8               	movlw	232
  5447  01076C  6EE6               	movwf	postinc1,c
  5448  01076E  0E03               	movlw	3
  5449  010770  6EE6               	movwf	postinc1,c
  5450  010772  EC49  F0E9         	call	_WaitMs	;wreg free
  5451                           
  5452                           ;main.c: 319:    if (V.sensor_set && get_switch(SCALIB)) {
  5453  010776  0101               	movlb	1	; () banked
  5454  010778  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5455  01077A  B4D8               	btfsc	status,2,c
  5456  01077C  D00F               	goto	l14840
  5457                           
  5458                           ; BSR set to: 1
  5459  01077E  0E04               	movlw	4
  5460  010780  6EE6               	movwf	postinc1,c
  5461  010782  EC5C  F0EA         	call	_get_switch	;wreg free
  5462  010786  5001               	movf	btemp^0,w,c
  5463  010788  B4D8               	btfsc	status,2,c
  5464  01078A  D008               	goto	l14840
  5465                           
  5466                           ;main.c: 320:     current_sensor_cal();
  5467  01078C  EC37  F09A         	call	_current_sensor_cal	;wreg free
  5468                           
  5469                           ;main.c: 321:     WaitMs(4000);
  5470  010790  0EA0               	movlw	160
  5471  010792  6EE6               	movwf	postinc1,c
  5472  010794  0E0F               	movlw	15
  5473  010796  6EE6               	movwf	postinc1,c
  5474  010798  EC49  F0E9         	call	_WaitMs	;wreg free
  5475  01079C                     l14840:
  5476                           
  5477                           ;main.c: 323:    V.sensor_set = 0;
  5478  01079C  0101               	movlb	1	; () banked
  5479  01079E  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5480                           
  5481                           ; BSR set to: 1
  5482                           ;main.c: 324:    V.system_stable = 1;
  5483  0107A0  0E01               	movlw	1
  5484  0107A2  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5485                           
  5486                           ;main.c: 325:    break;
  5487  0107A4  D01B               	goto	l14848
  5488  0107A6                     l1458:
  5489                           
  5490                           ; BSR set to: 1
  5491                           ;main.c: 331:    P.SYSTEM_STABLE = 1;
  5492  0107A6  81F7               	bsf	(_P+1)& (0+255),0,b	;volatile
  5493                           
  5494                           ;main.c: 332:    break;
  5495  0107A8  D019               	goto	l14848
  5496  0107AA                     l1460:
  5497                           
  5498                           ; BSR set to: 1
  5499                           ;main.c: 335:    V.ui_state = UI_STATE_INIT;
  5500  0107AA  6B07               	clrf	_V& (0+255),b	;volatile
  5501                           
  5502                           ;main.c: 336:    break;
  5503  0107AC  D017               	goto	l14848
  5504  0107AE                     l14846:
  5505  0107AE  0101               	movlb	1	; () banked
  5506  0107B0  5107               	movf	_V& (0+255),w,b	;volatile
  5507  0107B2  6E0B               	movwf	(btemp+10)^0,c
  5508  0107B4  6A0C               	clrf	(btemp+11)^0,c
  5509                           
  5510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5511                           ; Switch size 1, requested type "simple"
  5512                           ; Number of cases is 1, Range of values is 0 to 0
  5513                           ; switch strategies available:
  5514                           ; Name         Instructions Cycles
  5515                           ; simple_byte            4     3 (average)
  5516                           ;	Chosen strategy is simple_byte
  5517  0107B6  500C               	movf	(btemp+11)^0,w,c
  5518  0107B8  0A00               	xorlw	0	; case 0
  5519  0107BA  A4D8               	btfss	status,2,c
  5520  0107BC  D7F6               	goto	l1460
  5521                           
  5522                           ; BSR set to: 1
  5523                           ; Switch size 1, requested type "simple"
  5524                           ; Number of cases is 5, Range of values is 0 to 5
  5525                           ; switch strategies available:
  5526                           ; Name         Instructions Cycles
  5527                           ; simple_byte           16     9 (average)
  5528                           ;	Chosen strategy is simple_byte
  5529  0107BE  500B               	movf	(btemp+10)^0,w,c
  5530  0107C0  0A00               	xorlw	0	; case 0
  5531  0107C2  B4D8               	btfsc	status,2,c
  5532  0107C4  D459               	goto	l14700
  5533  0107C6  0A01               	xorlw	1	; case 1
  5534  0107C8  B4D8               	btfsc	status,2,c
  5535  0107CA  D008               	goto	l14848
  5536  0107CC  0A02               	xorlw	2	; case 3
  5537  0107CE  B4D8               	btfsc	status,2,c
  5538  0107D0  D005               	goto	l14848
  5539  0107D2  0A07               	xorlw	7	; case 4
  5540  0107D4  B4D8               	btfsc	status,2,c
  5541  0107D6  D7E7               	goto	l1458
  5542  0107D8  0A01               	xorlw	1	; case 5
  5543  0107DA  D7E7               	goto	l1460
  5544  0107DC                     l14848:
  5545                           
  5546                           ; BSR set to: 1
  5547                           ;main.c: 339:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5548  0107DC  0E01               	movlw	1
  5549  0107DE  6EE6               	movwf	postinc1,c
  5550  0107E0  ECC7  F0EA         	call	_TimerDone	;wreg free
  5551  0107E4  5001               	movf	btemp^0,w,c
  5552  0107E6  B4D8               	btfsc	status,2,c
  5553  0107E8  D013               	goto	l14860
  5554  0107EA  ECCD  F0ED         	call	_check_adc_scan	;wreg free
  5555  0107EE  5001               	movf	btemp^0,w,c
  5556  0107F0  B4D8               	btfsc	status,2,c
  5557  0107F2  D00E               	goto	l14860
  5558                           
  5559                           ;main.c: 343:    convert_adc_data();
  5560  0107F4  EC76  F0DD         	call	_convert_adc_data	;wreg free
  5561                           
  5562                           ;main.c: 347:    clear_adc_scan();
  5563  0107F8  ECE4  F0ED         	call	_clear_adc_scan	;wreg free
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;main.c: 348:    start_adc_scan();
  5567  0107FC  ECC7  F0E4         	call	_start_adc_scan	;wreg free
  5568                           
  5569                           ;main.c: 349:    StartTimer(TMR_ADC, 200);
  5570  010800  0EC8               	movlw	200
  5571  010802  6EE6               	movwf	postinc1,c
  5572  010804  0E00               	movlw	0
  5573  010806  6EE6               	movwf	postinc1,c
  5574  010808  0E01               	movlw	1
  5575  01080A  6EE6               	movwf	postinc1,c
  5576  01080C  EC57  F0E8         	call	_StartTimer	;wreg free
  5577  010810                     l14860:
  5578                           
  5579                           ;main.c: 356:   if (TimerDone(TMR_DISPLAY)) {
  5580                           
  5581                           ;main.c: 352:   if (V.ticks) {
  5582  010810  0E0A               	movlw	10
  5583  010812  6EE6               	movwf	postinc1,c
  5584  010814  ECC7  F0EA         	call	_TimerDone	;wreg free
  5585  010818  5001               	movf	btemp^0,w,c
  5586  01081A  B4D8               	btfsc	status,2,c
  5587  01081C  EFB4  F088         	goto	l14944
  5588                           
  5589                           ;main.c: 357:    if (TimerDone(TMR_HELPDIS)) {
  5590  010820  0E09               	movlw	9
  5591  010822  6EE6               	movwf	postinc1,c
  5592  010824  ECC7  F0EA         	call	_TimerDone	;wreg free
  5593  010828  5001               	movf	btemp^0,w,c
  5594  01082A  B4D8               	btfsc	status,2,c
  5595  01082C  D004               	goto	l14868
  5596                           
  5597                           ;main.c: 358:     set_display_info(DIS_STR);
  5598  01082E  0E00               	movlw	0
  5599  010830  6EE6               	movwf	postinc1,c
  5600  010832  ECCC  F0EC         	call	_set_display_info	;wreg free
  5601  010836                     l14868:
  5602                           
  5603                           ;main.c: 360:    calc_model_data();
  5604  010836  EC96  F0B4         	call	_calc_model_data	;wreg free
  5605                           
  5606                           ; BSR set to: 57
  5607                           ;main.c: 367:     hid_display(&H);
  5608                           
  5609                           ;main.c: 362:    if (0) {
  5610  01083A  0EC7               	movlw	low _H
  5611  01083C  6EE6               	movwf	postinc1,c
  5612  01083E  0E01               	movlw	high _H
  5613  010840  6EE6               	movwf	postinc1,c
  5614  010842  EC93  F0C7         	call	_hid_display	;wreg free
  5615                           
  5616                           ;main.c: 368:     switch (H.hid_display) {
  5617  010846  EF4A  F088         	goto	l14916
  5618  01084A                     l1468:
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;main.c: 370:      V.calib = 0;
  5622  01084A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5623                           
  5624                           ; BSR set to: 1
  5625                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5626  01084C  EE22  F121         	lfsr	2,_C+290	;volatile
  5627  010850  50DF               	movf	indf2,w,c
  5628  010852  A4D8               	btfss	status,2,c
  5629  010854  D002               	goto	l14878
  5630                           
  5631                           ; BSR set to: 1
  5632  010856  0E20               	movlw	32
  5633  010858  D001               	goto	L1
  5634  01085A                     l14878:
  5635                           
  5636                           ; BSR set to: 1
  5637  01085A  0E44               	movlw	68
  5638  01085C                     L1:
  5639  01085C  6E0B               	movwf	(btemp+10)^0,c
  5640  01085E  0E00               	movlw	0
  5641  010860  6E0C               	movwf	(btemp+11)^0,c
  5642                           
  5643                           ;stkvar	_main$3972 @ sp[(-17)+2]
  5644  010862  0EF1               	movlw	-15
  5645  010864  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5646  01086A  0EF2               	movlw	-14
  5647  01086C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5648                           
  5649                           ; BSR set to: 1
  5650  010872  EE22  F07B         	lfsr	2,_C+124	;volatile
  5651  010876  006F FF7B FFE6     	movff	postinc2,postinc1
  5652  01087C  006F FF7B FFE6     	movff	postinc2,postinc1
  5653  010882  006F FF7B FFE6     	movff	postinc2,postinc1
  5654  010888  006F FF7B FFE6     	movff	postinc2,postinc1
  5655                           
  5656                           ;stkvar	_main$3972 @ sp[(-21)+2]
  5657  01088E  0EED               	movlw	-19
  5658  010890  006F FF8F FFE6     	movff	plusw1,postinc1
  5659  010896  006F FF8F FFE6     	movff	plusw1,postinc1
  5660  01089C  0ED0               	movlw	low STR_25
  5661  01089E  6EE6               	movwf	postinc1,c
  5662  0108A0  0EFC               	movlw	high STR_25
  5663  0108A2  6EE6               	movwf	postinc1,c
  5664  0108A4  0E00               	movlw	0
  5665  0108A6  6EE6               	movwf	postinc1,c
  5666  0108A8  0E00               	movlw	0
  5667  0108AA  6EE6               	movwf	postinc1,c
  5668  0108AC  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5669  0108B0  0060  F007  FFE6   	movff	btemp,postinc1
  5670  0108B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5671  0108BC  0E0A               	movlw	10
  5672  0108BE  6EE6               	movwf	postinc1,c
  5673  0108C0  ECC4  F0D8         	call	_sprintf	;wreg free
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5677  0108C4  EE22  F073         	lfsr	2,_C+116	;volatile
  5678  0108C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5679  0108CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5680  0108D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5681  0108DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5682  0108E0  0EBA               	movlw	low STR_26
  5683  0108E2  6EE6               	movwf	postinc1,c
  5684  0108E4  0EFC               	movlw	high STR_26
  5685  0108E6  6EE6               	movwf	postinc1,c
  5686  0108E8  0E00               	movlw	0
  5687  0108EA  6EE6               	movwf	postinc1,c
  5688  0108EC  0E01               	movlw	1
  5689  0108EE  6EE6               	movwf	postinc1,c
  5690  0108F0  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5691  0108F4  0060  F007  FFE6   	movff	btemp,postinc1
  5692  0108FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5693  010900  0E08               	movlw	8
  5694  010902  6EE6               	movwf	postinc1,c
  5695  010904  ECC4  F0D8         	call	_sprintf	;wreg free
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5699  010908  EE22  F077         	lfsr	2,_C+120	;volatile
  5700  01090C  006F FF7B FFE6     	movff	postinc2,postinc1
  5701  010912  006F FF7B FFE6     	movff	postinc2,postinc1
  5702  010918  006F FF7B FFE6     	movff	postinc2,postinc1
  5703  01091E  006F FF7B FFE6     	movff	postinc2,postinc1
  5704  010924  0EA4               	movlw	low STR_27
  5705  010926  6EE6               	movwf	postinc1,c
  5706  010928  0EFC               	movlw	high STR_27
  5707  01092A  6EE6               	movwf	postinc1,c
  5708  01092C  0E00               	movlw	0
  5709  01092E  6EE6               	movwf	postinc1,c
  5710  010930  0E02               	movlw	2
  5711  010932  6EE6               	movwf	postinc1,c
  5712  010934  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5713  010938  0060  F007  FFE6   	movff	btemp,postinc1
  5714  01093E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5715  010944  0E08               	movlw	8
  5716  010946  6EE6               	movwf	postinc1,c
  5717  010948  ECC4  F0D8         	call	_sprintf	;wreg free
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5721  01094C  EE22  F121         	lfsr	2,_C+290	;volatile
  5722  010950  50DF               	movf	indf2,w,c
  5723  010952  A4D8               	btfss	status,2,c
  5724  010954  D002               	goto	l14890
  5725                           
  5726                           ; BSR set to: 0
  5727  010956  0E20               	movlw	32
  5728  010958  D001               	goto	L2
  5729  01095A                     l14890:
  5730                           
  5731                           ; BSR set to: 0
  5732  01095A  0E44               	movlw	68
  5733  01095C                     L2:
  5734  01095C  6E0B               	movwf	(btemp+10)^0,c
  5735  01095E  0E00               	movlw	0
  5736  010960  6E0C               	movwf	(btemp+11)^0,c
  5737                           
  5738                           ;stkvar	_main$3976 @ sp[(-17)+0]
  5739  010962  0EEF               	movlw	-17
  5740  010964  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5741  01096A  0EF0               	movlw	-16
  5742  01096C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5743                           
  5744                           ; BSR set to: 0
  5745  010972  EE22  F0A7         	lfsr	2,_C+168	;volatile
  5746  010976  006F FF7B FFE6     	movff	postinc2,postinc1
  5747  01097C  006F FF7B FFE6     	movff	postinc2,postinc1
  5748  010982  006F FF7B FFE6     	movff	postinc2,postinc1
  5749  010988  006F FF7B FFE6     	movff	postinc2,postinc1
  5750                           
  5751                           ;stkvar	_main$3976 @ sp[(-21)+0]
  5752  01098E  0EEB               	movlw	-21
  5753  010990  006F FF8F FFE6     	movff	plusw1,postinc1
  5754  010996  006F FF8F FFE6     	movff	plusw1,postinc1
  5755  01099C  0E8E               	movlw	low STR_28
  5756  01099E  6EE6               	movwf	postinc1,c
  5757  0109A0  0EFC               	movlw	high STR_28
  5758  0109A2  6EE6               	movwf	postinc1,c
  5759  0109A4  0E01               	movlw	1
  5760  0109A6  6EE6               	movwf	postinc1,c
  5761  0109A8  0E00               	movlw	0
  5762  0109AA  6EE6               	movwf	postinc1,c
  5763  0109AC  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5764  0109B0  0060  F007  FFE6   	movff	btemp,postinc1
  5765  0109B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5766  0109BC  0E0A               	movlw	10
  5767  0109BE  6EE6               	movwf	postinc1,c
  5768  0109C0  ECC4  F0D8         	call	_sprintf	;wreg free
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5772  0109C4  EE22  F0AF         	lfsr	2,_C+176	;volatile
  5773  0109C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5774  0109CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5775  0109D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5776  0109DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5777  0109E0  0E78               	movlw	low STR_29
  5778  0109E2  6EE6               	movwf	postinc1,c
  5779  0109E4  0EFC               	movlw	high STR_29
  5780  0109E6  6EE6               	movwf	postinc1,c
  5781  0109E8  0E01               	movlw	1
  5782  0109EA  6EE6               	movwf	postinc1,c
  5783  0109EC  0E01               	movlw	1
  5784  0109EE  6EE6               	movwf	postinc1,c
  5785  0109F0  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5786  0109F4  0060  F007  FFE6   	movff	btemp,postinc1
  5787  0109FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5788  010A00  0E08               	movlw	8
  5789  010A02  6EE6               	movwf	postinc1,c
  5790  010A04  ECC4  F0D8         	call	_sprintf	;wreg free
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5794  010A08  EE22  F0AB         	lfsr	2,_C+172	;volatile
  5795  010A0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5796  010A12  006F FF7B FFE6     	movff	postinc2,postinc1
  5797  010A18  006F FF7B FFE6     	movff	postinc2,postinc1
  5798  010A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5799  010A24  0E62               	movlw	low STR_30
  5800  010A26  6EE6               	movwf	postinc1,c
  5801  010A28  0EFC               	movlw	high STR_30
  5802  010A2A  6EE6               	movwf	postinc1,c
  5803  010A2C  0E01               	movlw	1
  5804  010A2E  6EE6               	movwf	postinc1,c
  5805  010A30  0E02               	movlw	2
  5806  010A32  6EE6               	movwf	postinc1,c
  5807  010A34  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5808  010A38  0060  F007  FFE6   	movff	btemp,postinc1
  5809  010A3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5810  010A44  0E08               	movlw	8
  5811  010A46  6EE6               	movwf	postinc1,c
  5812  010A48  ECC4  F0D8         	call	_sprintf	;wreg free
  5813                           
  5814                           ;main.c: 378:      break;
  5815  010A4C  D339               	goto	l14918
  5816  010A4E                     l1478:
  5817                           
  5818                           ; BSR set to: 1
  5819                           ;main.c: 380:      V.calib = 0;
  5820  010A4E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5821                           
  5822                           ; BSR set to: 1
  5823                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5824  010A50  EE22  F003         	lfsr	2,_C+4	;volatile
  5825  010A54  006F FF7B FFE6     	movff	postinc2,postinc1
  5826  010A5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5827  010A60  006F FF7B FFE6     	movff	postinc2,postinc1
  5828  010A66  006F FF7B FFE6     	movff	postinc2,postinc1
  5829  010A6C  EE22  F013         	lfsr	2,_C+20	;volatile
  5830  010A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5831  010A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5832  010A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5833  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5834  010A88  0E28               	movlw	low STR_31
  5835  010A8A  6EE6               	movwf	postinc1,c
  5836  010A8C  0EFD               	movlw	high STR_31
  5837  010A8E  6EE6               	movwf	postinc1,c
  5838  010A90  0E00               	movlw	0
  5839  010A92  6EE6               	movwf	postinc1,c
  5840  010A94  0E00               	movlw	0
  5841  010A96  6EE6               	movwf	postinc1,c
  5842  010A98  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5843  010A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5844  010AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5845  010AA8  0E0C               	movlw	12
  5846  010AAA  6EE6               	movwf	postinc1,c
  5847  010AAC  ECC4  F0D8         	call	_sprintf	;wreg free
  5848                           
  5849                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5850  010AB0  EE21  F3FF         	lfsr	2,_C
  5851  010AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5852  010ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5853  010AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5854  010AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5855  010ACC  EE22  F00F         	lfsr	2,_C+16	;volatile
  5856  010AD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5857  010AD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5858  010ADC  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  010AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5860  010AE8  0EFC               	movlw	low STR_32
  5861  010AEA  6EE6               	movwf	postinc1,c
  5862  010AEC  0EFC               	movlw	high STR_32
  5863  010AEE  6EE6               	movwf	postinc1,c
  5864  010AF0  0E00               	movlw	0
  5865  010AF2  6EE6               	movwf	postinc1,c
  5866  010AF4  0E01               	movlw	1
  5867  010AF6  6EE6               	movwf	postinc1,c
  5868  010AF8  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5869  010AFC  0060  F007  FFE6   	movff	btemp,postinc1
  5870  010B02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5871  010B08  0E0C               	movlw	12
  5872  010B0A  6EE6               	movwf	postinc1,c
  5873  010B0C  ECC4  F0D8         	call	_sprintf	;wreg free
  5874                           
  5875                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5876  010B10  EE22  F03F         	lfsr	2,_C+64	;volatile
  5877  010B14  006F FF7B FFE6     	movff	postinc2,postinc1
  5878  010B1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5879  010B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5880  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5881  010B2C  EE22  F007         	lfsr	2,_C+8	;volatile
  5882  010B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5883  010B36  006F FF7B FFE6     	movff	postinc2,postinc1
  5884  010B3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5885  010B42  006F FF7B FFE6     	movff	postinc2,postinc1
  5886  010B48  0E12               	movlw	low STR_33
  5887  010B4A  6EE6               	movwf	postinc1,c
  5888  010B4C  0EFD               	movlw	high STR_33
  5889  010B4E  6EE6               	movwf	postinc1,c
  5890  010B50  0E00               	movlw	0
  5891  010B52  6EE6               	movwf	postinc1,c
  5892  010B54  0E02               	movlw	2
  5893  010B56  6EE6               	movwf	postinc1,c
  5894  010B58  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5895  010B5C  0060  F007  FFE6   	movff	btemp,postinc1
  5896  010B62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5897  010B68  0E0C               	movlw	12
  5898  010B6A  6EE6               	movwf	postinc1,c
  5899  010B6C  ECC4  F0D8         	call	_sprintf	;wreg free
  5900                           
  5901                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5902  010B70  EE22  F09F         	lfsr	2,_C+160	;volatile
  5903  010B74  006F FF7B FFE6     	movff	postinc2,postinc1
  5904  010B7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5905  010B80  006F FF7B FFE6     	movff	postinc2,postinc1
  5906  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  5907  010B8C  0E20               	movlw	low STR_34
  5908  010B8E  6EE6               	movwf	postinc1,c
  5909  010B90  0EFC               	movlw	high STR_34
  5910  010B92  6EE6               	movwf	postinc1,c
  5911  010B94  0E01               	movlw	1
  5912  010B96  6EE6               	movwf	postinc1,c
  5913  010B98  0E00               	movlw	0
  5914  010B9A  6EE6               	movwf	postinc1,c
  5915  010B9C  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5916  010BA0  0060  F007  FFE6   	movff	btemp,postinc1
  5917  010BA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5918  010BAC  0E08               	movlw	8
  5919  010BAE  6EE6               	movwf	postinc1,c
  5920  010BB0  ECC4  F0D8         	call	_sprintf	;wreg free
  5921                           
  5922                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5923  010BB4  EE22  F0A3         	lfsr	2,_C+164	;volatile
  5924  010BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5925  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5926  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5927  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5928  010BD0  0E36               	movlw	low STR_35
  5929  010BD2  6EE6               	movwf	postinc1,c
  5930  010BD4  0EFC               	movlw	high STR_35
  5931  010BD6  6EE6               	movwf	postinc1,c
  5932  010BD8  0E01               	movlw	1
  5933  010BDA  6EE6               	movwf	postinc1,c
  5934  010BDC  0E01               	movlw	1
  5935  010BDE  6EE6               	movwf	postinc1,c
  5936  010BE0  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5937  010BE4  0060  F007  FFE6   	movff	btemp,postinc1
  5938  010BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5939  010BF0  0E08               	movlw	8
  5940  010BF2  6EE6               	movwf	postinc1,c
  5941  010BF4  ECC4  F0D8         	call	_sprintf	;wreg free
  5942                           
  5943                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5944  010BF8  EE22  F0A3         	lfsr	2,_C+164	;volatile
  5945  010BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5947  010C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5949  010C14  EE22  F09F         	lfsr	2,_C+160	;volatile
  5950  010C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5951  010C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5952  010C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5953  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5954  010C30  EC5D  F0A9         	call	___fladd	;wreg free
  5955  010C34  0060  F007  FFE6   	movff	btemp,postinc1
  5956  010C3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5957  010C40  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5958  010C46  0060  F013  FFE6   	movff	btemp+3,postinc1
  5959  010C4C  0E4C               	movlw	low STR_36
  5960  010C4E  6EE6               	movwf	postinc1,c
  5961  010C50  0EFC               	movlw	high STR_36
  5962  010C52  6EE6               	movwf	postinc1,c
  5963  010C54  0E01               	movlw	1
  5964  010C56  6EE6               	movwf	postinc1,c
  5965  010C58  0E02               	movlw	2
  5966  010C5A  6EE6               	movwf	postinc1,c
  5967  010C5C  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5968  010C60  0060  F007  FFE6   	movff	btemp,postinc1
  5969  010C66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5970  010C6C  0E08               	movlw	8
  5971  010C6E  6EE6               	movwf	postinc1,c
  5972  010C70  ECC4  F0D8         	call	_sprintf	;wreg free
  5973                           
  5974                           ;main.c: 388:      break;
  5975  010C74  D225               	goto	l14918
  5976  010C76                     l1479:
  5977                           
  5978                           ; BSR set to: 1
  5979                           ;main.c: 390:      V.calib = 0;
  5980  010C76  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;main.c: 391:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5984  010C78  EE22  F07F         	lfsr	2,_C+128	;volatile
  5985  010C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5986  010C82  006F FF7B FFE6     	movff	postinc2,postinc1
  5987  010C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5988  010C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5989  010C94  0E82               	movlw	low STR_37
  5990  010C96  6EE6               	movwf	postinc1,c
  5991  010C98  0EFB               	movlw	high STR_37
  5992  010C9A  6EE6               	movwf	postinc1,c
  5993  010C9C  0E00               	movlw	0
  5994  010C9E  6EE6               	movwf	postinc1,c
  5995  010CA0  0E00               	movlw	0
  5996  010CA2  6EE6               	movwf	postinc1,c
  5997  010CA4  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  5998  010CA8  0060  F007  FFE6   	movff	btemp,postinc1
  5999  010CAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6000  010CB4  0E08               	movlw	8
  6001  010CB6  6EE6               	movwf	postinc1,c
  6002  010CB8  ECC4  F0D8         	call	_sprintf	;wreg free
  6003                           
  6004                           ;main.c: 392:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6005  010CBC  EE22  F093         	lfsr	2,_C+148	;volatile
  6006  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6007  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6008  010CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6009  010CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  6010  010CD8  EE22  F08F         	lfsr	2,_C+144	;volatile
  6011  010CDC  006F FF7B FFE6     	movff	postinc2,postinc1
  6012  010CE2  006F FF7B FFE6     	movff	postinc2,postinc1
  6013  010CE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6014  010CEE  006F FF7B FFE6     	movff	postinc2,postinc1
  6015  010CF4  0EC7               	movlw	low STR_38
  6016  010CF6  6EE6               	movwf	postinc1,c
  6017  010CF8  0EFB               	movlw	high STR_38
  6018  010CFA  6EE6               	movwf	postinc1,c
  6019  010CFC  0E00               	movlw	0
  6020  010CFE  6EE6               	movwf	postinc1,c
  6021  010D00  0E01               	movlw	1
  6022  010D02  6EE6               	movwf	postinc1,c
  6023  010D04  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  6024  010D08  0060  F007  FFE6   	movff	btemp,postinc1
  6025  010D0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6026  010D14  0E0C               	movlw	12
  6027  010D16  6EE6               	movwf	postinc1,c
  6028  010D18  ECC4  F0D8         	call	_sprintf	;wreg free
  6029                           
  6030                           ;main.c: 393:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6031  010D1C  EE22  F00F         	lfsr	2,_C+16	;volatile
  6032  010D20  006F FF7B FFE6     	movff	postinc2,postinc1
  6033  010D26  006F FF7B FFE6     	movff	postinc2,postinc1
  6034  010D2C  006F FF7B FFE6     	movff	postinc2,postinc1
  6035  010D32  006F FF7B FFE6     	movff	postinc2,postinc1
  6036  010D38  EE22  F0B3         	lfsr	2,_C+180	;volatile
  6037  010D3C  006F FF78  F00B    	movff	postinc2,btemp+10
  6038  010D42  006F FF74  F00C    	movff	postdec2,btemp+11
  6039  010D48  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6040  010D4E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6041  010D54  EE22  F0B5         	lfsr	2,_C+182	;volatile
  6042  010D58  006F FF78  F00B    	movff	postinc2,btemp+10
  6043  010D5E  006F FF74  F00C    	movff	postdec2,btemp+11
  6044  010D64  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6045  010D6A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6046  010D70  0E00               	movlw	0
  6047  010D72  6EE6               	movwf	postinc1,c
  6048  010D74  0E05               	movlw	5
  6049  010D76  6EE6               	movwf	postinc1,c
  6050  010D78  EC49  F0D9         	call	_spinners	;wreg free
  6051  010D7C  5001               	movf	btemp^0,w,c
  6052  010D7E  6EE6               	movwf	postinc1,c
  6053  010D80  0E00               	movlw	0
  6054  010D82  6EE6               	movwf	postinc1,c
  6055  010D84  0EE8               	movlw	low STR_39
  6056  010D86  6EE6               	movwf	postinc1,c
  6057  010D88  0EFA               	movlw	high STR_39
  6058  010D8A  6EE6               	movwf	postinc1,c
  6059  010D8C  0E00               	movlw	0
  6060  010D8E  6EE6               	movwf	postinc1,c
  6061  010D90  0E02               	movlw	2
  6062  010D92  6EE6               	movwf	postinc1,c
  6063  010D94  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  6064  010D98  0060  F007  FFE6   	movff	btemp,postinc1
  6065  010D9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6066  010DA4  0E0E               	movlw	14
  6067  010DA6  6EE6               	movwf	postinc1,c
  6068  010DA8  ECC4  F0D8         	call	_sprintf	;wreg free
  6069                           
  6070                           ;main.c: 395:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6071  010DAC  EE22  F087         	lfsr	2,_C+136	;volatile
  6072  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6073  010DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6074  010DBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6075  010DC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6076  010DC8  0E6B               	movlw	low STR_40
  6077  010DCA  6EE6               	movwf	postinc1,c
  6078  010DCC  0EFB               	movlw	high STR_40
  6079  010DCE  6EE6               	movwf	postinc1,c
  6080  010DD0  0E01               	movlw	1
  6081  010DD2  6EE6               	movwf	postinc1,c
  6082  010DD4  0E00               	movlw	0
  6083  010DD6  6EE6               	movwf	postinc1,c
  6084  010DD8  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  6085  010DDC  0060  F007  FFE6   	movff	btemp,postinc1
  6086  010DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6087  010DE8  0E08               	movlw	8
  6088  010DEA  6EE6               	movwf	postinc1,c
  6089  010DEC  ECC4  F0D8         	call	_sprintf	;wreg free
  6090                           
  6091                           ;main.c: 396:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6092  010DF0  EE22  F10D         	lfsr	2,_C+270	;volatile
  6093  010DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6094  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6095  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  6096  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  6097  010E0C  EE22  F119         	lfsr	2,_C+282	;volatile
  6098  010E10  006F FF7B FFE6     	movff	postinc2,postinc1
  6099  010E16  006F FF7B FFE6     	movff	postinc2,postinc1
  6100  010E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6101  010E22  006F FF7B FFE6     	movff	postinc2,postinc1
  6102  010E28  0E99               	movlw	low STR_41
  6103  010E2A  6EE6               	movwf	postinc1,c
  6104  010E2C  0EFB               	movlw	high STR_41
  6105  010E2E  6EE6               	movwf	postinc1,c
  6106  010E30  0E01               	movlw	1
  6107  010E32  6EE6               	movwf	postinc1,c
  6108  010E34  0E01               	movlw	1
  6109  010E36  6EE6               	movwf	postinc1,c
  6110  010E38  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  6111  010E3C  0060  F007  FFE6   	movff	btemp,postinc1
  6112  010E42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6113  010E48  0E0C               	movlw	12
  6114  010E4A  6EE6               	movwf	postinc1,c
  6115  010E4C  ECC4  F0D8         	call	_sprintf	;wreg free
  6116                           
  6117                           ;main.c: 397:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6118  010E50  EE22  F111         	lfsr	2,_C+274	;volatile
  6119  010E54  006F FF7B FFE6     	movff	postinc2,postinc1
  6120  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6121  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  6122  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  6123  010E6C  EE22  F11D         	lfsr	2,_C+286	;volatile
  6124  010E70  006F FF7B FFE6     	movff	postinc2,postinc1
  6125  010E76  006F FF7B FFE6     	movff	postinc2,postinc1
  6126  010E7C  006F FF7B FFE6     	movff	postinc2,postinc1
  6127  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6128  010E88  0EB0               	movlw	low STR_42
  6129  010E8A  6EE6               	movwf	postinc1,c
  6130  010E8C  0EFB               	movlw	high STR_42
  6131  010E8E  6EE6               	movwf	postinc1,c
  6132  010E90  0E01               	movlw	1
  6133  010E92  6EE6               	movwf	postinc1,c
  6134  010E94  0E02               	movlw	2
  6135  010E96  6EE6               	movwf	postinc1,c
  6136  010E98  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  6137  010E9C  0060  F007  FFE6   	movff	btemp,postinc1
  6138  010EA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6139  010EA8  0E0C               	movlw	12
  6140  010EAA  6EE6               	movwf	postinc1,c
  6141  010EAC  ECC4  F0D8         	call	_sprintf	;wreg free
  6142                           
  6143                           ;main.c: 398:      break;
  6144  010EB0  D107               	goto	l14918
  6145  010EB2                     l14902:
  6146                           
  6147                           ; BSR set to: 1
  6148                           ;main.c: 400:      if (!V.calib) {
  6149  010EB2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  6150  010EB4  A4D8               	btfss	status,2,c
  6151  010EB6  D02D               	goto	l14906
  6152                           
  6153                           ; BSR set to: 1
  6154                           ;main.c: 401:       lp_filter(0.0, i, -1);
  6155  010EB8  0EFF               	movlw	255
  6156  010EBA  6EE6               	movwf	postinc1,c
  6157                           
  6158                           ;stkvar	_i @ sp[(-18)+14]
  6159  010EBC  0EFC               	movlw	-4
  6160  010EBE  50E3               	movf	plusw1,w,c
  6161  010EC0  6EE6               	movwf	postinc1,c
  6162  010EC2  0E00               	movlw	0
  6163  010EC4  6EE6               	movwf	postinc1,c
  6164  010EC6  0E00               	movlw	0
  6165  010EC8  6EE6               	movwf	postinc1,c
  6166  010ECA  0E00               	movlw	0
  6167  010ECC  6EE6               	movwf	postinc1,c
  6168  010ECE  0E00               	movlw	0
  6169  010ED0  6EE6               	movwf	postinc1,c
  6170  010ED2  EC91  F0CB         	call	_lp_filter	;wreg free
  6171                           
  6172                           ;main.c: 402:       lp_filter(0.0, j, -1);
  6173  010ED6  0EFF               	movlw	255
  6174  010ED8  6EE6               	movwf	postinc1,c
  6175                           
  6176                           ;stkvar	_j @ sp[(-18)+13]
  6177  010EDA  0EFB               	movlw	-5
  6178  010EDC  50E3               	movf	plusw1,w,c
  6179  010EDE  6EE6               	movwf	postinc1,c
  6180  010EE0  0E00               	movlw	0
  6181  010EE2  6EE6               	movwf	postinc1,c
  6182  010EE4  0E00               	movlw	0
  6183  010EE6  6EE6               	movwf	postinc1,c
  6184  010EE8  0E00               	movlw	0
  6185  010EEA  6EE6               	movwf	postinc1,c
  6186  010EEC  0E00               	movlw	0
  6187  010EEE  6EE6               	movwf	postinc1,c
  6188  010EF0  EC91  F0CB         	call	_lp_filter	;wreg free
  6189                           
  6190                           ;main.c: 403:       lp_filter(0.0, k, -1);
  6191  010EF4  0EFF               	movlw	255
  6192  010EF6  6EE6               	movwf	postinc1,c
  6193                           
  6194                           ;stkvar	_k @ sp[(-18)+12]
  6195  010EF8  0EFA               	movlw	-6
  6196  010EFA  50E3               	movf	plusw1,w,c
  6197  010EFC  6EE6               	movwf	postinc1,c
  6198  010EFE  0E00               	movlw	0
  6199  010F00  6EE6               	movwf	postinc1,c
  6200  010F02  0E00               	movlw	0
  6201  010F04  6EE6               	movwf	postinc1,c
  6202  010F06  0E00               	movlw	0
  6203  010F08  6EE6               	movwf	postinc1,c
  6204  010F0A  0E00               	movlw	0
  6205  010F0C  6EE6               	movwf	postinc1,c
  6206  010F0E  EC91  F0CB         	call	_lp_filter	;wreg free
  6207  010F12                     l14906:
  6208                           
  6209                           ;main.c: 405:      V.calib = 1;
  6210  010F12  0E01               	movlw	1
  6211  010F14  0101               	movlb	1	; () banked
  6212  010F16  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6213                           
  6214                           ; BSR set to: 1
  6215                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6216                           ;stkvar	_inp_index @ sp[(-17)+11]
  6217  010F18  0EFA               	movlw	-6
  6218  010F1A  50E3               	movf	plusw1,w,c
  6219  010F1C  6EE6               	movwf	postinc1,c
  6220  010F1E  0E00               	movlw	0
  6221  010F20  6EE6               	movwf	postinc1,c
  6222                           
  6223                           ;stkvar	_i @ sp[(-19)+14]
  6224  010F22  0EFB               	movlw	-5
  6225  010F24  50E3               	movf	plusw1,w,c
  6226  010F26  0D04               	mullw	4
  6227  010F28  0EFF               	movlw	low _C
  6228  010F2A  24F3               	addwf	243,w,c
  6229  010F2C  6ED9               	movwf	fsr2l,c
  6230  010F2E  0E07               	movlw	high _C
  6231  010F30  20F4               	addwfc	prodh,w,c
  6232  010F32  6EDA               	movwf	fsr2h,c
  6233  010F34  006F FF7B FFE6     	movff	postinc2,postinc1
  6234  010F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6235  010F40  006F FF7B FFE6     	movff	postinc2,postinc1
  6236  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6237                           
  6238                           ;stkvar	_i @ sp[(-23)+14]
  6239  010F4C  0EF7               	movlw	-9
  6240  010F4E  50E3               	movf	plusw1,w,c
  6241  010F50  6EE6               	movwf	postinc1,c
  6242  010F52  ECDB  F0EC         	call	_get_raw_result	;wreg free
  6243  010F56  0060  F007  FFE6   	movff	btemp,postinc1
  6244  010F5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6245  010F62  0E3E               	movlw	low STR_43
  6246  010F64  6EE6               	movwf	postinc1,c
  6247  010F66  0EFD               	movlw	high STR_43
  6248  010F68  6EE6               	movwf	postinc1,c
  6249  010F6A  0E00               	movlw	0
  6250  010F6C  6EE6               	movwf	postinc1,c
  6251  010F6E  0E00               	movlw	0
  6252  010F70  6EE6               	movwf	postinc1,c
  6253  010F72  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  6254  010F76  0060  F007  FFE6   	movff	btemp,postinc1
  6255  010F7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6256  010F82  0E0C               	movlw	12
  6257  010F84  6EE6               	movwf	postinc1,c
  6258  010F86  ECC4  F0D8         	call	_sprintf	;wreg free
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6262                           ;stkvar	_inp_index @ sp[(-17)+11]
  6263  010F8A  0EFA               	movlw	-6
  6264  010F8C  50E3               	movf	plusw1,w,c
  6265  010F8E  6E0B               	movwf	(btemp+10)^0,c
  6266  010F90  6A0C               	clrf	(btemp+11)^0,c
  6267  010F92  0E01               	movlw	1
  6268  010F94  260B               	addwf	(btemp+10)^0,f,c
  6269  010F96  0E00               	movlw	0
  6270  010F98  220C               	addwfc	(btemp+11)^0,f,c
  6271  010F9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6272  010FA0  0060  F033  FFE6   	movff	btemp+11,postinc1
  6273                           
  6274                           ;stkvar	_j @ sp[(-19)+13]
  6275  010FA6  0EFA               	movlw	-6
  6276  010FA8  50E3               	movf	plusw1,w,c
  6277  010FAA  0D04               	mullw	4
  6278  010FAC  0EFF               	movlw	low _C
  6279  010FAE  24F3               	addwf	243,w,c
  6280  010FB0  6ED9               	movwf	fsr2l,c
  6281  010FB2  0E07               	movlw	high _C
  6282  010FB4  20F4               	addwfc	prodh,w,c
  6283  010FB6  6EDA               	movwf	fsr2h,c
  6284  010FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  6285  010FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6286  010FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6287  010FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6288                           
  6289                           ;stkvar	_j @ sp[(-23)+13]
  6290  010FD0  0EF6               	movlw	-10
  6291  010FD2  50E3               	movf	plusw1,w,c
  6292  010FD4  6EE6               	movwf	postinc1,c
  6293  010FD6  ECDB  F0EC         	call	_get_raw_result	;wreg free
  6294  010FDA  0060  F007  FFE6   	movff	btemp,postinc1
  6295  010FE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6296  010FE6  0E3E               	movlw	low STR_43
  6297  010FE8  6EE6               	movwf	postinc1,c
  6298  010FEA  0EFD               	movlw	high STR_43
  6299  010FEC  6EE6               	movwf	postinc1,c
  6300  010FEE  0E00               	movlw	0
  6301  010FF0  6EE6               	movwf	postinc1,c
  6302  010FF2  0E01               	movlw	1
  6303  010FF4  6EE6               	movwf	postinc1,c
  6304  010FF6  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  6305  010FFA  0060  F007  FFE6   	movff	btemp,postinc1
  6306  011000  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6307  011006  0E0C               	movlw	12
  6308  011008  6EE6               	movwf	postinc1,c
  6309  01100A  ECC4  F0D8         	call	_sprintf	;wreg free
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6313                           ;stkvar	_inp_index @ sp[(-17)+11]
  6314  01100E  0EFA               	movlw	-6
  6315  011010  50E3               	movf	plusw1,w,c
  6316  011012  6E0B               	movwf	(btemp+10)^0,c
  6317  011014  6A0C               	clrf	(btemp+11)^0,c
  6318  011016  0E02               	movlw	2
  6319  011018  260B               	addwf	(btemp+10)^0,f,c
  6320  01101A  0E00               	movlw	0
  6321  01101C  220C               	addwfc	(btemp+11)^0,f,c
  6322  01101E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6323  011024  0060  F033  FFE6   	movff	btemp+11,postinc1
  6324                           
  6325                           ;stkvar	_k @ sp[(-19)+12]
  6326  01102A  0EF9               	movlw	-7
  6327  01102C  50E3               	movf	plusw1,w,c
  6328  01102E  0D04               	mullw	4
  6329  011030  0EFF               	movlw	low _C
  6330  011032  24F3               	addwf	243,w,c
  6331  011034  6ED9               	movwf	fsr2l,c
  6332  011036  0E07               	movlw	high _C
  6333  011038  20F4               	addwfc	prodh,w,c
  6334  01103A  6EDA               	movwf	fsr2h,c
  6335  01103C  006F FF7B FFE6     	movff	postinc2,postinc1
  6336  011042  006F FF7B FFE6     	movff	postinc2,postinc1
  6337  011048  006F FF7B FFE6     	movff	postinc2,postinc1
  6338  01104E  006F FF7B FFE6     	movff	postinc2,postinc1
  6339                           
  6340                           ;stkvar	_k @ sp[(-23)+12]
  6341  011054  0EF5               	movlw	-11
  6342  011056  50E3               	movf	plusw1,w,c
  6343  011058  6EE6               	movwf	postinc1,c
  6344  01105A  ECDB  F0EC         	call	_get_raw_result	;wreg free
  6345  01105E  0060  F007  FFE6   	movff	btemp,postinc1
  6346  011064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6347  01106A  0E3E               	movlw	low STR_43
  6348  01106C  6EE6               	movwf	postinc1,c
  6349  01106E  0EFD               	movlw	high STR_43
  6350  011070  6EE6               	movwf	postinc1,c
  6351  011072  0E00               	movlw	0
  6352  011074  6EE6               	movwf	postinc1,c
  6353  011076  0E02               	movlw	2
  6354  011078  6EE6               	movwf	postinc1,c
  6355  01107A  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
  6356  01107E  0060  F007  FFE6   	movff	btemp,postinc1
  6357  011084  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6358  01108A  0E0C               	movlw	12
  6359  01108C  6EE6               	movwf	postinc1,c
  6360  01108E  ECC4  F0D8         	call	_sprintf	;wreg free
  6361                           
  6362                           ;main.c: 409:      break;
  6363  011092  D016               	goto	l14918
  6364  011094                     l14916:
  6365  011094  0101               	movlb	1	; () banked
  6366  011096  51C7               	movf	_H& (0+255),w,b
  6367  011098  6E0B               	movwf	(btemp+10)^0,c
  6368  01109A  6A0C               	clrf	(btemp+11)^0,c
  6369                           
  6370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6371                           ; Switch size 1, requested type "simple"
  6372                           ; Number of cases is 1, Range of values is 0 to 0
  6373                           ; switch strategies available:
  6374                           ; Name         Instructions Cycles
  6375                           ; simple_byte            4     3 (average)
  6376                           ;	Chosen strategy is simple_byte
  6377  01109C  500C               	movf	(btemp+11)^0,w,c
  6378  01109E  0A00               	xorlw	0	; case 0
  6379  0110A0  A4D8               	btfss	status,2,c
  6380  0110A2  D00E               	goto	l14918
  6381                           
  6382                           ; BSR set to: 1
  6383                           ; Switch size 1, requested type "simple"
  6384                           ; Number of cases is 4, Range of values is 0 to 3
  6385                           ; switch strategies available:
  6386                           ; Name         Instructions Cycles
  6387                           ; simple_byte           13     7 (average)
  6388                           ;	Chosen strategy is simple_byte
  6389  0110A4  500B               	movf	(btemp+10)^0,w,c
  6390  0110A6  0A00               	xorlw	0	; case 0
  6391  0110A8  B4D8               	btfsc	status,2,c
  6392  0110AA  D4D1               	goto	l1478
  6393  0110AC  0A01               	xorlw	1	; case 1
  6394  0110AE  B4D8               	btfsc	status,2,c
  6395  0110B0  EF25  F084         	goto	l1468
  6396  0110B4  0A03               	xorlw	3	; case 2
  6397  0110B6  B4D8               	btfsc	status,2,c
  6398  0110B8  D5DE               	goto	l1479
  6399  0110BA  0A01               	xorlw	1	; case 3
  6400  0110BC  B4D8               	btfsc	status,2,c
  6401  0110BE  D6F9               	goto	l14902
  6402  0110C0                     l14918:
  6403                           
  6404                           ;main.c: 413:     clear_hid_pflags(&H);
  6405  0110C0  0EC7               	movlw	low _H
  6406  0110C2  6EE6               	movwf	postinc1,c
  6407  0110C4  0E01               	movlw	high _H
  6408  0110C6  6EE6               	movwf	postinc1,c
  6409  0110C8  EC61  F0E4         	call	_clear_hid_pflags	;wreg free
  6410                           
  6411                           ;main.c: 415:    StartTimer(TMR_DISPLAY, 250);
  6412  0110CC  0EFA               	movlw	250
  6413  0110CE  6EE6               	movwf	postinc1,c
  6414  0110D0  0E00               	movlw	0
  6415  0110D2  6EE6               	movwf	postinc1,c
  6416  0110D4  0E0A               	movlw	10
  6417  0110D6  6EE6               	movwf	postinc1,c
  6418  0110D8  EC57  F0E8         	call	_StartTimer	;wreg free
  6419                           
  6420                           ;main.c: 416:    V.enter = check_enter_button(&H);
  6421  0110DC  0EC7               	movlw	low _H
  6422  0110DE  6EE6               	movwf	postinc1,c
  6423  0110E0  0E01               	movlw	high _H
  6424  0110E2  6EE6               	movwf	postinc1,c
  6425  0110E4  EC55  F0E3         	call	_check_enter_button	;wreg free
  6426  0110E8  5001               	movf	btemp^0,w,c
  6427  0110EA  0101               	movlb	1	; () banked
  6428  0110EC  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6429                           
  6430                           ; BSR set to: 1
  6431                           ;main.c: 417:    if (V.enter && (H.hid_display != HID_AUX)) {
  6432  0110EE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6433  0110F0  B4D8               	btfsc	status,2,c
  6434  0110F2  D011               	goto	l14932
  6435                           
  6436                           ; BSR set to: 1
  6437  0110F4  0E03               	movlw	3
  6438  0110F6  19C7               	xorwf	_H& (0+255),w,b
  6439  0110F8  B4D8               	btfsc	status,2,c
  6440  0110FA  D00D               	goto	l14932
  6441                           
  6442                           ; BSR set to: 1
  6443                           ;main.c: 418:     V.enter = 0;
  6444  0110FC  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;main.c: 419:     V.screen = ~V.screen;
  6448  0110FE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6449  011100  D002               	goto	u14180
  6450  011102  0E01               	movlw	1
  6451  011104  D001               	goto	u14186
  6452  011106                     u14180:
  6453  011106  0E00               	movlw	0
  6454  011108                     u14186:
  6455  011108  0AFF               	xorlw	255
  6456  01110A  6E0C               	movwf	(btemp+11)^0,c
  6457  01110C  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6458  01110E  180C               	xorwf	(btemp+11)^0,w,c
  6459  011110  0BFE               	andlw	-2
  6460  011112  180C               	xorwf	(btemp+11)^0,w,c
  6461  011114  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6462  011116                     l14932:
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;main.c: 421:    set_vterm(V.screen);
  6466  011116  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6467  011118  D002               	goto	u14190
  6468  01111A  0E01               	movlw	1
  6469  01111C  D001               	goto	u14196
  6470  01111E                     u14190:
  6471  01111E  0E00               	movlw	0
  6472  011120                     u14196:
  6473  011120  6EE6               	movwf	postinc1,c
  6474  011122  ECBD  F0EC         	call	_set_vterm	;wreg free
  6475                           
  6476                           ;main.c: 422:    update_lcd(V.screen);
  6477  011126  0101               	movlb	1	; () banked
  6478  011128  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6479  01112A  D002               	goto	u14200
  6480  01112C  0E01               	movlw	1
  6481  01112E  D001               	goto	u14206
  6482  011130                     u14200:
  6483  011130  0E00               	movlw	0
  6484  011132                     u14206:
  6485  011132  6EE6               	movwf	postinc1,c
  6486  011134  EC3C  F0D8         	call	_update_lcd	;wreg free
  6487                           
  6488                           ;main.c: 424:    wait_lcd_done();
  6489  011138  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;main.c: 425:    set_dac_a(3.333);
  6493  01113C  0EDF               	movlw	223
  6494  01113E  6EE6               	movwf	postinc1,c
  6495  011140  0E4F               	movlw	79
  6496  011142  6EE6               	movwf	postinc1,c
  6497  011144  0E55               	movlw	85
  6498  011146  6EE6               	movwf	postinc1,c
  6499  011148  0E40               	movlw	64
  6500  01114A  6EE6               	movwf	postinc1,c
  6501  01114C  EC98  F0E9         	call	_set_dac_a	;wreg free
  6502                           
  6503                           ;main.c: 426:    set_dac_b(6.666);
  6504  011150  0EDF               	movlw	223
  6505  011152  6EE6               	movwf	postinc1,c
  6506  011154  0E4F               	movlw	79
  6507  011156  6EE6               	movwf	postinc1,c
  6508  011158  0ED5               	movlw	213
  6509  01115A  6EE6               	movwf	postinc1,c
  6510  01115C  0E40               	movlw	64
  6511  01115E  6EE6               	movwf	postinc1,c
  6512  011160  EC7E  F0E9         	call	_set_dac_b	;wreg free
  6513                           
  6514                           ;main.c: 427:    set_dac();
  6515  011164  ECD2  F0DD         	call	_set_dac	;wreg free
  6516  011168                     l14944:
  6517                           
  6518                           ;main.c: 433:   check_help(V.flipper);
  6519  011168  0101               	movlb	1	; () banked
  6520  01116A  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6521  01116C  6EE6               	movwf	postinc1,c
  6522  01116E  ECA1  F0C8         	call	_check_help	;wreg free
  6523                           
  6524                           ;main.c: 435:   if (V.enter) {
  6525  011172  0101               	movlb	1	; () banked
  6526  011174  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6527  011176  B4D8               	btfsc	status,2,c
  6528  011178  D062               	goto	l1484
  6529                           
  6530                           ; BSR set to: 1
  6531                           ;main.c: 436:    V.enter = 0;
  6532  01117A  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6533                           
  6534                           ;main.c: 437:    V.calib = 0;
  6535  01117C  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6536                           
  6537                           ; BSR set to: 1
  6538                           ;main.c: 438:    inp_index += 3;
  6539                           ;stkvar	_inp_index @ sp[(-17)+11]
  6540  01117E  0EFA               	movlw	-6
  6541  011180  006F FF8C  F001    	movff	plusw1,btemp
  6542  011186  0E03               	movlw	3
  6543  011188  2601               	addwf	btemp^0,f,c
  6544  01118A  0EFA               	movlw	-6
  6545  01118C  0060  F007  FFE3   	movff	btemp,plusw1
  6546                           
  6547                           ;main.c: 439:    if (inp_index > 9)
  6548                           ;stkvar	_inp_index @ sp[(-17)+11]
  6549  011192  0EFA               	movlw	-6
  6550  011194  006F FF8C  F001    	movff	plusw1,btemp
  6551  01119A  0E09               	movlw	9
  6552  01119C  6401               	cpfsgt	btemp^0,c
  6553  01119E  D03A               	goto	l14972
  6554                           
  6555                           ; BSR set to: 1
  6556                           ;main.c: 440:     inp_index = 0;
  6557                           ;stkvar	_inp_index @ sp[(-17)+11]
  6558  0111A0  0EFA               	movlw	-6
  6559  0111A2  6AE3               	clrf	plusw1,c
  6560  0111A4  D037               	goto	l14972
  6561  0111A6                     l14954:
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;main.c: 443:     i = C_BATT;
  6565                           ;stkvar	_i @ sp[(-17)+14]
  6566  0111A6  0EFD               	movlw	-3
  6567  0111A8  6AE3               	clrf	plusw1,c
  6568                           
  6569                           ; BSR set to: 1
  6570                           ;main.c: 444:     j = C_PV;
  6571                           ;stkvar	_j @ sp[(-17)+13]
  6572  0111AA  0EFC               	movlw	-4
  6573  0111AC  6AE3               	clrf	plusw1,c
  6574  0111AE  2AE3               	incf	plusw1,f,c
  6575                           
  6576                           ; BSR set to: 1
  6577                           ;main.c: 445:     k = V_CC;
  6578                           ;stkvar	_k @ sp[(-17)+12]
  6579  0111B0  0EFB               	movlw	-5
  6580  0111B2  6AE3               	clrf	plusw1,c
  6581  0111B4  82E3               	bsf	plusw1,1,c
  6582                           
  6583                           ;main.c: 446:     break;
  6584  0111B6  D043               	goto	l1484
  6585  0111B8                     l14960:
  6586                           
  6587                           ; BSR set to: 1
  6588                           ;main.c: 448:     i = V_BAT;
  6589                           ;stkvar	_i @ sp[(-17)+14]
  6590  0111B8  0EFD               	movlw	-3
  6591  0111BA  6AE3               	clrf	plusw1,c
  6592  0111BC  84E3               	bsf	plusw1,2,c
  6593                           
  6594                           ;main.c: 449:     j = V_PV;
  6595                           ;stkvar	_j @ sp[(-17)+13]
  6596  0111BE  0EFC               	movlw	-4
  6597  0111C0  6AE3               	clrf	plusw1,c
  6598  0111C2  80E3               	bsf	plusw1,0,c
  6599  0111C4  84E3               	bsf	plusw1,2,c	;indir
  6600                           
  6601                           ;main.c: 450:     k = V_CBUS;
  6602                           ;stkvar	_k @ sp[(-17)+12]
  6603  0111C6  0EFB               	movlw	-5
  6604  0111C8  6AE3               	clrf	plusw1,c
  6605  0111CA  82E3               	bsf	plusw1,1,c
  6606  0111CC  84E3               	bsf	plusw1,2,c	;indir
  6607                           
  6608                           ;main.c: 451:     break;
  6609  0111CE  D037               	goto	l1484
  6610  0111D0                     l14962:
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;main.c: 453:     i = V_BBAT;
  6614                           ;stkvar	_i @ sp[(-17)+14]
  6615  0111D0  0EFD               	movlw	-3
  6616  0111D2  6AE3               	clrf	plusw1,c
  6617  0111D4  82E3               	bsf	plusw1,1,c
  6618  0111D6  86E3               	bsf	plusw1,3,c	;indir
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;main.c: 454:     j = V_TEMP;
  6622  0111D8  0E0B               	movlw	11
  6623  0111DA  6E0C               	movwf	(btemp+11)^0,c
  6624                           
  6625                           ;stkvar	_j @ sp[(-17)+13]
  6626  0111DC  0EFC               	movlw	-4
  6627  0111DE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6628                           
  6629                           ; BSR set to: 1
  6630                           ;main.c: 455:     k = V_INVERTER;
  6631                           ;stkvar	_k @ sp[(-17)+12]
  6632  0111E4  0EFB               	movlw	-5
  6633  0111E6  6AE3               	clrf	plusw1,c
  6634  0111E8  84E3               	bsf	plusw1,2,c
  6635  0111EA  86E3               	bsf	plusw1,3,c	;indir
  6636                           
  6637                           ;main.c: 456:     break;
  6638  0111EC  D028               	goto	l1484
  6639  0111EE                     l14968:
  6640                           
  6641                           ; BSR set to: 1
  6642                           ;main.c: 458:     i = V_LIGHT_SENSOR;
  6643  0111EE  0E0D               	movlw	13
  6644  0111F0  6E0C               	movwf	(btemp+11)^0,c
  6645                           
  6646                           ;stkvar	_i @ sp[(-17)+14]
  6647  0111F2  0EFD               	movlw	-3
  6648  0111F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6649                           
  6650                           ;main.c: 459:     j = V_LIGHT_SENSOR;
  6651  0111FA  0E0D               	movlw	13
  6652  0111FC  6E0C               	movwf	(btemp+11)^0,c
  6653                           
  6654                           ;stkvar	_j @ sp[(-17)+13]
  6655  0111FE  0EFC               	movlw	-4
  6656  011200  0060  F033  FFE3   	movff	btemp+11,plusw1
  6657                           
  6658                           ;main.c: 460:     k = V_LIGHT_SENSOR;
  6659  011206  0E0D               	movlw	13
  6660  011208  6E0C               	movwf	(btemp+11)^0,c
  6661                           
  6662                           ;stkvar	_k @ sp[(-17)+12]
  6663  01120A  0EFB               	movlw	-5
  6664  01120C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6665                           
  6666                           ;main.c: 461:     break;
  6667  011212  D015               	goto	l1484
  6668  011214                     l14972:
  6669                           
  6670                           ; BSR set to: 1
  6671                           ;stkvar	_inp_index @ sp[(-17)+11]
  6672  011214  0EFA               	movlw	-6
  6673  011216  50E3               	movf	plusw1,w,c
  6674  011218  6E0B               	movwf	(btemp+10)^0,c
  6675  01121A  6A0C               	clrf	(btemp+11)^0,c
  6676                           
  6677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6678                           ; Switch size 1, requested type "simple"
  6679                           ; Number of cases is 1, Range of values is 0 to 0
  6680                           ; switch strategies available:
  6681                           ; Name         Instructions Cycles
  6682                           ; simple_byte            4     3 (average)
  6683                           ;	Chosen strategy is simple_byte
  6684  01121C  500C               	movf	(btemp+11)^0,w,c
  6685  01121E  0A00               	xorlw	0	; case 0
  6686  011220  A4D8               	btfss	status,2,c
  6687  011222  D00D               	goto	l1484
  6688                           
  6689                           ; BSR set to: 1
  6690                           ; Switch size 1, requested type "simple"
  6691                           ; Number of cases is 4, Range of values is 0 to 9
  6692                           ; switch strategies available:
  6693                           ; Name         Instructions Cycles
  6694                           ; simple_byte           13     7 (average)
  6695                           ;	Chosen strategy is simple_byte
  6696  011224  500B               	movf	(btemp+10)^0,w,c
  6697  011226  0A00               	xorlw	0	; case 0
  6698  011228  B4D8               	btfsc	status,2,c
  6699  01122A  D7BD               	goto	l14954
  6700  01122C  0A03               	xorlw	3	; case 3
  6701  01122E  B4D8               	btfsc	status,2,c
  6702  011230  D7C3               	goto	l14960
  6703  011232  0A05               	xorlw	5	; case 6
  6704  011234  B4D8               	btfsc	status,2,c
  6705  011236  D7CC               	goto	l14962
  6706  011238  0A0F               	xorlw	15	; case 9
  6707  01123A  B4D8               	btfsc	status,2,c
  6708  01123C  D7D8               	goto	l14968
  6709  01123E                     l1484:
  6710                           
  6711                           ; BSR set to: 1
  6712                           ;main.c: 470:   if (V.set_sequ) {
  6713  01123E  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6714  011240  EFD7  F083         	goto	l14846
  6715                           
  6716                           ; BSR set to: 1
  6717                           ;main.c: 471:    if (TimerDone(TMR_INFO)) {
  6718  011244  0E07               	movlw	7
  6719  011246  6EE6               	movwf	postinc1,c
  6720  011248  ECC7  F0EA         	call	_TimerDone	;wreg free
  6721  01124C  5001               	movf	btemp^0,w,c
  6722  01124E  B4D8               	btfsc	status,2,c
  6723  011250  D00C               	goto	l14982
  6724                           
  6725                           ;main.c: 472:     V.set_sequ = 0;
  6726  011252  0101               	movlb	1	; () banked
  6727  011254  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;main.c: 473:     set_vterm(0);
  6731  011256  0E00               	movlw	0
  6732  011258  6EE6               	movwf	postinc1,c
  6733  01125A  ECBD  F0EC         	call	_set_vterm	;wreg free
  6734                           
  6735                           ;main.c: 474:     update_lcd(0);
  6736  01125E  0E00               	movlw	0
  6737  011260  6EE6               	movwf	postinc1,c
  6738  011262  EC3C  F0D8         	call	_update_lcd	;wreg free
  6739                           
  6740                           ;main.c: 475:    } else {
  6741  011266  EFD7  F083         	goto	l14846
  6742  01126A                     l14982:
  6743                           
  6744                           ;main.c: 476:     set_vterm(2);
  6745  01126A  0E02               	movlw	2
  6746  01126C  6EE6               	movwf	postinc1,c
  6747  01126E  ECBD  F0EC         	call	_set_vterm	;wreg free
  6748                           
  6749                           ;main.c: 477:     update_lcd(2);
  6750  011272  0E02               	movlw	2
  6751  011274  6EE6               	movwf	postinc1,c
  6752  011276  EC3C  F0D8         	call	_update_lcd	;wreg free
  6753  01127A  EFD7  F083         	goto	l14846
  6754  01127E                     __end_of_main:
  6755                           	opt callstack 0
  6756                           
  6757 ;; *************** function _update_cal_data *****************
  6758 ;; Defined at:
  6759 ;;		line 429 in file "daq.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;		None
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1  [STACK] void 
  6766 ;; Registers used:
  6767 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/39
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6777 ;;Total ram usage:        0 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:   15
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_main
  6784 ;; This function uses a reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text1
  6788  01DA3A                     __ptext1:
  6789                           	opt callstack 0
  6790  01DA3A                     _update_cal_data:
  6791                           	opt callstack 15
  6792                           
  6793                           ;daq.c: 431:  R = r_cal;
  6794                           
  6795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6796                           ;incstack = 0
  6797  01DA3A  EE20  F293         	lfsr	2,_r_cal
  6798  01DA3E  EE00  F0AE         	lfsr	0,_R	;volatile
  6799  01DA42  0E38               	movlw	56
  6800  01DA44                     u11131:
  6801  01DA44  006F FF6F FFEB     	movff	plusw2,plusw0
  6802  01DA4A  06E8               	decf	wreg,f,c
  6803  01DA4C  E2FB               	bc	u11131
  6804                           
  6805                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  6806  01DA4E  0012               	return		;funcret
  6807  01DA50                     __end_of_update_cal_data:
  6808                           	opt callstack 0
  6809                           
  6810 ;; *************** function _static_soc *****************
  6811 ;; Defined at:
  6812 ;;		line 117 in file "mbmc.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1  [STACK] void 
  6819 ;; Registers used:
  6820 ;;		wreg, fsr2l, fsr2h
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6830 ;;Total ram usage:        0 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:   15
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_main
  6837 ;; This function uses a reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text2
  6841  01CB16                     __ptext2:
  6842                           	opt callstack 0
  6843  01CB16                     _static_soc:
  6844                           	opt callstack 15
  6845                           
  6846                           ;mbmc.c: 119:  C.runtime = 120;
  6847                           
  6848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6849                           ;incstack = 0
  6850  01CB16  0E78               	movlw	120
  6851  01CB18  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
  6852  01CB1E  0E00               	movlw	0
  6853  01CB20  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
  6854                           
  6855                           ;mbmc.c: 120:  C.soc = 100;
  6856  01CB26  0E64               	movlw	100
  6857  01CB28  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
  6858  01CB2E  0E00               	movlw	0
  6859  01CB30  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
  6860                           
  6861                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6862  01CB36  EE22  F08B         	lfsr	2,_C+140	;volatile
  6863  01CB3A  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
  6864  01CB40  006F FF78  F890    	movff	postinc2,_C+145	;volatile
  6865  01CB46  006F FF78  F891    	movff	postinc2,_C+146	;volatile
  6866  01CB4C  006F FF74  F892    	movff	postdec2,_C+147	;volatile
  6867                           
  6868                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6869  01CB52  EE22  F08F         	lfsr	2,_C+144	;volatile
  6870  01CB56  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  6871  01CB5C  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  6872  01CB62  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  6873  01CB68  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  6874                           
  6875                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6876  01CB6E  0012               	return		;funcret
  6877  01CB70                     __end_of_static_soc:
  6878                           	opt callstack 0
  6879                           
  6880 ;; *************** function _start_switch_handler *****************
  6881 ;; Defined at:
  6882 ;;		line 125 in file "dio.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;		None
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1  [STACK] void 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6891 ;; Tracked objects:
  6892 ;;		On entry : 1/0
  6893 ;;		On exit  : 3F/39
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;Total ram usage:        0 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:   16
  6903 ;; This function calls:
  6904 ;;		_INT1_SetInterruptHandler
  6905 ;; This function is called by:
  6906 ;;		_main
  6907 ;; This function uses a reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text3
  6911  01D8FE                     __ptext3:
  6912                           	opt callstack 0
  6913  01D8FE                     _start_switch_handler:
  6914                           	opt callstack 14
  6915                           
  6916                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6917                           
  6918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6919                           ;incstack = 0
  6920  01D8FE  0139               	movlb	57	; () banked
  6921  01D900  9195               	bcf	149,0,b	;volatile
  6922                           
  6923                           ; BSR set to: 57
  6924                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6925  01D902  0E10               	movlw	low _switch_handler
  6926  01D904  6EE6               	movwf	postinc1,c
  6927  01D906  0EA6               	movlw	high _switch_handler
  6928  01D908  6EE6               	movwf	postinc1,c
  6929  01D90A  0E01               	movlw	low (_switch_handler shr (0+16))
  6930  01D90C  6EE6               	movwf	postinc1,c
  6931  01D90E  EC53  F0EB         	call	_INT1_SetInterruptHandler	;wreg free
  6932                           
  6933                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6934  01D912  0E02               	movlw	2
  6935  01D914  0102               	movlb	2	; () banked
  6936  01D916  6F23               	movwf	(_S+35)& (0+255),b	;volatile
  6937                           
  6938                           ; BSR set to: 2
  6939                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6940  01D918  0139               	movlb	57	; () banked
  6941  01D91A  8195               	bsf	149,0,b	;volatile
  6942                           
  6943                           ; BSR set to: 57
  6944                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6945  01D91C  0012               	return		;funcret
  6946  01D91E                     __end_of_start_switch_handler:
  6947                           	opt callstack 0
  6948                           
  6949 ;; *************** function _srand *****************
  6950 ;; Defined at:
  6951 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  s               2  [STACK] unsigned int 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1  [STACK] void 
  6958 ;; Registers used:
  6959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 3F/2
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;Total ram usage:        0 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:   15
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_main
  6976 ;; This function uses a reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text4
  6980  01D2C8                     __ptext4:
  6981                           	opt callstack 0
  6982  01D2C8                     _srand:
  6983                           	opt callstack 15
  6984                           
  6985                           ;stkvar	_s @ sp[(0)+-2]
  6986                           
  6987                           ; BSR set to: 57
  6988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6989                           ;incstack = 0
  6990  01D2C8  0EFE               	movlw	-2
  6991  01D2CA  50E3               	movf	plusw1,w,c
  6992  01D2CC  0FFF               	addlw	255
  6993  01D2CE  6E0B               	movwf	(btemp+10)^0,c
  6994  01D2D0  0EFF               	movlw	-1
  6995  01D2D2  006F FF8C  F00C    	movff	plusw1,btemp+11
  6996  01D2D8  0EFF               	movlw	255
  6997  01D2DA  220C               	addwfc	(btemp+11)^0,f,c
  6998  01D2DC  0060  F02C  F2CC   	movff	btemp+10,_seed
  6999  01D2E2  0060  F030  F2CD   	movff	btemp+11,_seed+1
  7000  01D2E8  0102               	movlb	2	; () banked
  7001  01D2EA  6BCE               	clrf	(_seed+2)& (0+255),b
  7002  01D2EC  6BCF               	clrf	(_seed+3)& (0+255),b
  7003  01D2EE  6BD0               	clrf	(_seed+4)& (0+255),b
  7004  01D2F0  6BD1               	clrf	(_seed+5)& (0+255),b
  7005  01D2F2  6BD2               	clrf	(_seed+6)& (0+255),b
  7006  01D2F4  6BD3               	clrf	(_seed+7)& (0+255),b
  7007                           
  7008                           ; BSR set to: 2
  7009                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7010  01D2F6  52E5               	movf	postdec1,f,c
  7011  01D2F8  52E5               	movf	postdec1,f,c
  7012  01D2FA  0012               	return		;funcret
  7013  01D2FC                     __end_of_srand:
  7014                           	opt callstack 0
  7015                           
  7016 ;; *************** function _set_dac_b *****************
  7017 ;; Defined at:
  7018 ;;		line 301 in file "daq.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  voltage         4  [STACK] const float 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  2  [STACK] unsigned short 
  7025 ;; Registers used:
  7026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7036 ;;Total ram usage:        0 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:   17
  7039 ;; This function calls:
  7040 ;;		_convert_dac_raw
  7041 ;; This function is called by:
  7042 ;;		_main
  7043 ;; This function uses a reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text5
  7047  01D2FC                     __ptext5:
  7048                           	opt callstack 0
  7049  01D2FC                     _set_dac_b:
  7050                           	opt callstack 13
  7051                           
  7052                           ;daq.c: 301: uint16_t set_dac_b(const float voltage);daq.c: 302: {;daq.c: 303:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7053                           ;stkvar	_voltage @ sp[(0)+-4]
  7054                           
  7055                           ; BSR set to: 2
  7056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7057                           ;incstack = 0
  7058  01D2FC  0EFC               	movlw	-4
  7059  01D2FE  006F FF8F FFE6     	movff	plusw1,postinc1
  7060  01D304  006F FF8F FFE6     	movff	plusw1,postinc1
  7061  01D30A  006F FF8F FFE6     	movff	plusw1,postinc1
  7062  01D310  006F FF8F FFE6     	movff	plusw1,postinc1
  7063  01D316  EC0E  F0D6         	call	_convert_dac_raw	;wreg free
  7064  01D31A  0060  F004  F0D0   	movff	btemp,_R+34	;volatile
  7065  01D320  0060  F008  F0D1   	movff	btemp+1,_R+35	;volatile
  7066                           
  7067                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7068                           
  7069                           ;daq.c: 304:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7070  01D326  52E5               	movf	postdec1,f,c
  7071  01D328  52E5               	movf	postdec1,f,c
  7072  01D32A  52E5               	movf	postdec1,f,c
  7073  01D32C  52E5               	movf	postdec1,f,c
  7074  01D32E  0012               	return		;funcret
  7075  01D330                     __end_of_set_dac_b:
  7076                           	opt callstack 0
  7077                           
  7078 ;; *************** function _set_dac_a *****************
  7079 ;; Defined at:
  7080 ;;		line 292 in file "daq.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  voltage         4  [STACK] const float 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  2  [STACK] unsigned short 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7089 ;; Tracked objects:
  7090 ;;		On entry : 3F/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7098 ;;Total ram usage:        0 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:   17
  7101 ;; This function calls:
  7102 ;;		_convert_dac_raw
  7103 ;; This function is called by:
  7104 ;;		_main
  7105 ;; This function uses a reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text6
  7109  01D330                     __ptext6:
  7110                           	opt callstack 0
  7111  01D330                     _set_dac_a:
  7112                           	opt callstack 13
  7113                           
  7114                           ;daq.c: 292: uint16_t set_dac_a(const float voltage);daq.c: 293: {;daq.c: 294:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  7115                           ;stkvar	_voltage @ sp[(0)+-4]
  7116                           
  7117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7118                           ;incstack = 0
  7119  01D330  0EFC               	movlw	-4
  7120  01D332  006F FF8F FFE6     	movff	plusw1,postinc1
  7121  01D338  006F FF8F FFE6     	movff	plusw1,postinc1
  7122  01D33E  006F FF8F FFE6     	movff	plusw1,postinc1
  7123  01D344  006F FF8F FFE6     	movff	plusw1,postinc1
  7124  01D34A  EC0E  F0D6         	call	_convert_dac_raw	;wreg free
  7125  01D34E  0060  F004  F0CE   	movff	btemp,_R+32	;volatile
  7126  01D354  0060  F008  F0CF   	movff	btemp+1,_R+33	;volatile
  7127                           
  7128                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7129                           
  7130                           ;daq.c: 295:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7131  01D35A  52E5               	movf	postdec1,f,c
  7132  01D35C  52E5               	movf	postdec1,f,c
  7133  01D35E  52E5               	movf	postdec1,f,c
  7134  01D360  52E5               	movf	postdec1,f,c
  7135  01D362  0012               	return		;funcret
  7136  01D364                     __end_of_set_dac_a:
  7137                           	opt callstack 0
  7138                           
  7139 ;; *************** function _convert_dac_raw *****************
  7140 ;; Defined at:
  7141 ;;		line 274 in file "daq.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  voltage         4  [STACK] float 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  2  [STACK] unsigned short 
  7148 ;; Registers used:
  7149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7159 ;;Total ram usage:        0 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:   16
  7162 ;; This function calls:
  7163 ;;		___fldiv
  7164 ;;		___flge
  7165 ;;		___fltol
  7166 ;; This function is called by:
  7167 ;;		_set_dac_a
  7168 ;;		_set_dac_b
  7169 ;; This function uses a reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text7
  7173  01AC1C                     __ptext7:
  7174                           	opt callstack 0
  7175  01AC1C                     _convert_dac_raw:
  7176                           	opt callstack 13
  7177                           
  7178                           ;daq.c: 274: static uint16_t convert_dac_raw(float voltage);daq.c: 275: {;daq.c: 279:  i
      +                          f (voltage < 0.001)
  7179                           
  7180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7181                           ;incstack = 0
  7182  01AC1C  0E6F               	movlw	111
  7183  01AC1E  6EE6               	movwf	postinc1,c
  7184  01AC20  0E12               	movlw	18
  7185  01AC22  6EE6               	movwf	postinc1,c
  7186  01AC24  0E83               	movlw	131
  7187  01AC26  6EE6               	movwf	postinc1,c
  7188  01AC28  0E3A               	movlw	58
  7189  01AC2A  6EE6               	movwf	postinc1,c
  7190                           
  7191                           ;stkvar	_voltage @ sp[(-4)+-4]
  7192  01AC2C  0EF8               	movlw	-8
  7193  01AC2E  006F FF8F FFE6     	movff	plusw1,postinc1
  7194  01AC34  006F FF8F FFE6     	movff	plusw1,postinc1
  7195  01AC3A  006F FF8F FFE6     	movff	plusw1,postinc1
  7196  01AC40  006F FF8F FFE6     	movff	plusw1,postinc1
  7197  01AC46  ECFF  F0D0         	call	___flge	;wreg free
  7198  01AC4A  B001               	btfsc	btemp& (0+255),0,c
  7199  01AC4C  D018               	goto	l11654
  7200                           
  7201                           ;daq.c: 280:   voltage = 0.001;
  7202  01AC4E  0E6F               	movlw	111
  7203  01AC50  6E09               	movwf	(btemp+8)^0,c
  7204  01AC52  0E12               	movlw	18
  7205  01AC54  6E0A               	movwf	(btemp+9)^0,c
  7206  01AC56  0E83               	movlw	131
  7207  01AC58  6E0B               	movwf	(btemp+10)^0,c
  7208  01AC5A  0E3A               	movlw	58
  7209  01AC5C  6E0C               	movwf	(btemp+11)^0,c
  7210                           
  7211                           ;stkvar	_voltage @ sp[(0)+-4]
  7212  01AC5E  0EFC               	movlw	-4
  7213  01AC60  0060  F027  FFE3   	movff	btemp+8,plusw1
  7214  01AC66  0EFD               	movlw	-3
  7215  01AC68  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7216  01AC6E  0EFE               	movlw	-2
  7217  01AC70  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7218  01AC76  0EFF               	movlw	-1
  7219  01AC78  0060  F033  FFE3   	movff	btemp+11,plusw1
  7220  01AC7E                     l11654:
  7221                           
  7222                           ;daq.c: 281:  if (voltage > 10.0)
  7223                           ;stkvar	_voltage @ sp[(0)+-4]
  7224  01AC7E  0EFC               	movlw	-4
  7225  01AC80  006F FF8F FFE6     	movff	plusw1,postinc1
  7226  01AC86  006F FF8F FFE6     	movff	plusw1,postinc1
  7227  01AC8C  006F FF8F FFE6     	movff	plusw1,postinc1
  7228  01AC92  006F FF8F FFE6     	movff	plusw1,postinc1
  7229  01AC98  0E00               	movlw	0
  7230  01AC9A  6EE6               	movwf	postinc1,c
  7231  01AC9C  0E00               	movlw	0
  7232  01AC9E  6EE6               	movwf	postinc1,c
  7233  01ACA0  0E20               	movlw	32
  7234  01ACA2  6EE6               	movwf	postinc1,c
  7235  01ACA4  0E41               	movlw	65
  7236  01ACA6  6EE6               	movwf	postinc1,c
  7237  01ACA8  ECFF  F0D0         	call	___flge	;wreg free
  7238  01ACAC  B001               	btfsc	btemp& (0+255),0,c
  7239  01ACAE  D018               	goto	l11658
  7240                           
  7241                           ;daq.c: 282:   voltage = 10.0;
  7242  01ACB0  0E00               	movlw	0
  7243  01ACB2  6E09               	movwf	(btemp+8)^0,c
  7244  01ACB4  0E00               	movlw	0
  7245  01ACB6  6E0A               	movwf	(btemp+9)^0,c
  7246  01ACB8  0E20               	movlw	32
  7247  01ACBA  6E0B               	movwf	(btemp+10)^0,c
  7248  01ACBC  0E41               	movlw	65
  7249  01ACBE  6E0C               	movwf	(btemp+11)^0,c
  7250                           
  7251                           ;stkvar	_voltage @ sp[(0)+-4]
  7252  01ACC0  0EFC               	movlw	-4
  7253  01ACC2  0060  F027  FFE3   	movff	btemp+8,plusw1
  7254  01ACC8  0EFD               	movlw	-3
  7255  01ACCA  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7256  01ACD0  0EFE               	movlw	-2
  7257  01ACD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7258  01ACD8  0EFF               	movlw	-1
  7259  01ACDA  0060  F033  FFE3   	movff	btemp+11,plusw1
  7260  01ACE0                     l11658:
  7261                           
  7262                           ;daq.c: 286:  return(uint16_t) (voltage / 0.002442);
  7263  01ACE0  0EF6               	movlw	246
  7264  01ACE2  6EE6               	movwf	postinc1,c
  7265  01ACE4  0E09               	movlw	9
  7266  01ACE6  6EE6               	movwf	postinc1,c
  7267  01ACE8  0E20               	movlw	32
  7268  01ACEA  6EE6               	movwf	postinc1,c
  7269  01ACEC  0E3B               	movlw	59
  7270  01ACEE  6EE6               	movwf	postinc1,c
  7271                           
  7272                           ;stkvar	_voltage @ sp[(-4)+-4]
  7273  01ACF0  0EF8               	movlw	-8
  7274  01ACF2  006F FF8F FFE6     	movff	plusw1,postinc1
  7275  01ACF8  006F FF8F FFE6     	movff	plusw1,postinc1
  7276  01ACFE  006F FF8F FFE6     	movff	plusw1,postinc1
  7277  01AD04  006F FF8F FFE6     	movff	plusw1,postinc1
  7278  01AD0A  EC3B  F0AD         	call	___fldiv	;wreg free
  7279  01AD0E  0060  F007  FFE6   	movff	btemp,postinc1
  7280  01AD14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7281  01AD1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7282  01AD20  0060  F013  FFE6   	movff	btemp+3,postinc1
  7283  01AD26  EC46  F0D0         	call	___fltol	;wreg free
  7284                           
  7285                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7286  01AD2A  52E5               	movf	postdec1,f,c
  7287  01AD2C  52E5               	movf	postdec1,f,c
  7288  01AD2E  52E5               	movf	postdec1,f,c
  7289  01AD30  52E5               	movf	postdec1,f,c
  7290  01AD32  0012               	return		;funcret
  7291  01AD34                     __end_of_convert_dac_raw:
  7292                           	opt callstack 0
  7293                           
  7294 ;; *************** function _set_dac *****************
  7295 ;; Defined at:
  7296 ;;		line 250 in file "daq.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1  [STACK] void 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7314 ;;Total ram usage:        0 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:   16
  7317 ;; This function calls:
  7318 ;;		_SPI1_Exchange8bit
  7319 ;;		_dac_spi_control
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;; This function uses a reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text8
  7326  01BBA4                     __ptext8:
  7327                           	opt callstack 0
  7328  01BBA4                     _set_dac:
  7329                           	opt callstack 14
  7330                           
  7331                           ;daq.c: 252:  while (!SPI1STATUSbits.TXBE);
  7332                           
  7333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7334                           ;incstack = 0
  7335  01BBA4  013D               	movlb	61	; () banked
  7336  01BBA6  AB17               	btfss	23,5,b	;volatile
  7337  01BBA8  D7FD               	goto	_set_dac
  7338                           
  7339                           ; BSR set to: 61
  7340                           
  7341                           ;daq.c: 253:  do { LATCbits.LATC2 = 1; } while(0);
  7342  01BBAA  84BC               	bsf	188,2,c	;volatile
  7343                           
  7344                           ; BSR set to: 61
  7345                           
  7346                           ;daq.c: 254:  do { LATCbits.LATC0 = 1; } while(0);
  7347  01BBAC  80BC               	bsf	188,0,c	;volatile
  7348                           
  7349                           ; BSR set to: 61
  7350                           ;daq.c: 255:  dac_spi_control(1);
  7351  01BBAE  0E01               	movlw	1
  7352  01BBB0  6EE6               	movwf	postinc1,c
  7353  01BBB2  ECDC  F0E2         	call	_dac_spi_control	;wreg free
  7354                           
  7355                           ;daq.c: 256:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7356  01BBB6  C0CE  F0D2         	movff	_R+32,_R+36	;volatile
  7357                           
  7358                           ;daq.c: 257:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7359  01BBBA  EE20  F0CE         	lfsr	2,_R+32	;volatile
  7360  01BBBE  006F FF78  F00B    	movff	postinc2,btemp+10
  7361  01BBC4  006F FF74  F00C    	movff	postdec2,btemp+11
  7362  01BBCA  0060  F030  F00B   	movff	btemp+11,btemp+10
  7363  01BBD0  6A0C               	clrf	(btemp+11)^0,c
  7364  01BBD2  0E0F               	movlw	15
  7365  01BBD4  160B               	andwf	(btemp+10)^0,f,c
  7366  01BBD6  0100               	movlb	0	; () banked
  7367  01BBD8  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7368  01BBDA  180B               	xorwf	(btemp+10)^0,w,c
  7369  01BBDC  0BF0               	andlw	-16
  7370  01BBDE  180B               	xorwf	(btemp+10)^0,w,c
  7371  01BBE0  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;daq.c: 258:  R.max5322_cmd.map.cont = 0b0100;
  7375  01BBE2  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7376  01BBE4  0B0F               	andlw	-241
  7377  01BBE6  0940               	iorlw	64
  7378  01BBE8  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7379                           
  7380                           ; BSR set to: 0
  7381  01BBEA  90BF               	bcf	191,0,c	;volatile
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;daq.c: 260:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7385  01BBEC  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7386  01BBEE  6EE6               	movwf	postinc1,c
  7387  01BBF0  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7388                           
  7389                           ; BSR set to: 57
  7390                           ;daq.c: 261:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7391  01BBF4  0100               	movlb	0	; () banked
  7392  01BBF6  51D2               	movf	(_R+36)& (0+255),w,b	;volatile
  7393  01BBF8  6EE6               	movwf	postinc1,c
  7394  01BBFA  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7395                           
  7396                           ; BSR set to: 57
  7397  01BBFE  80BF               	bsf	191,0,c	;volatile
  7398                           
  7399                           ; BSR set to: 57
  7400                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7401  01BC00  C0D0  F0D2         	movff	_R+34,_R+36	;volatile
  7402                           
  7403                           ; BSR set to: 57
  7404                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7405  01BC04  EE20  F0D0         	lfsr	2,_R+34	;volatile
  7406  01BC08  006F FF78  F00B    	movff	postinc2,btemp+10
  7407  01BC0E  006F FF74  F00C    	movff	postdec2,btemp+11
  7408  01BC14  0060  F030  F00B   	movff	btemp+11,btemp+10
  7409  01BC1A  6A0C               	clrf	(btemp+11)^0,c
  7410  01BC1C  0E0F               	movlw	15
  7411  01BC1E  160B               	andwf	(btemp+10)^0,f,c
  7412  01BC20  0100               	movlb	0	; () banked
  7413  01BC22  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7414  01BC24  180B               	xorwf	(btemp+10)^0,w,c
  7415  01BC26  0BF0               	andlw	-16
  7416  01BC28  180B               	xorwf	(btemp+10)^0,w,c
  7417  01BC2A  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0101;
  7421  01BC2C  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7422  01BC2E  0B0F               	andlw	-241
  7423  01BC30  0950               	iorlw	80
  7424  01BC32  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7425                           
  7426                           ; BSR set to: 0
  7427  01BC34  90BF               	bcf	191,0,c	;volatile
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7431  01BC36  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7432  01BC38  6EE6               	movwf	postinc1,c
  7433  01BC3A  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7434                           
  7435                           ; BSR set to: 57
  7436                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7437  01BC3E  0100               	movlb	0	; () banked
  7438  01BC40  51D2               	movf	(_R+36)& (0+255),w,b	;volatile
  7439  01BC42  6EE6               	movwf	postinc1,c
  7440  01BC44  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  7441  01BC48                     l2015:
  7442  01BC48  013D               	movlb	61	; () banked
  7443  01BC4A  AB17               	btfss	23,5,b	;volatile
  7444  01BC4C  D7FD               	goto	l2015
  7445                           
  7446                           ; BSR set to: 61
  7447                           
  7448                           ;daq.c: 270:  do { LATFbits.LATF0 = 1; } while(0);
  7449  01BC4E  80BF               	bsf	191,0,c	;volatile
  7450                           
  7451                           ; BSR set to: 61
  7452                           ;daq.c: 271:  dac_spi_control(0);
  7453  01BC50  0E00               	movlw	0
  7454  01BC52  6EE6               	movwf	postinc1,c
  7455  01BC54  ECDC  F0E2         	call	_dac_spi_control	;wreg free
  7456                           
  7457                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7458  01BC58  0012               	return		;funcret
  7459  01BC5A                     __end_of_set_dac:
  7460                           	opt callstack 0
  7461                           
  7462 ;; *************** function _dac_spi_control *****************
  7463 ;; Defined at:
  7464 ;;		line 202 in file "daq.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  set             1  [STACK] _Bool 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1  [STACK] void 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr1l, fsr1h, status,2
  7473 ;; Tracked objects:
  7474 ;;		On entry : 3F/3D
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7482 ;;Total ram usage:        0 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; Hardware stack levels required when called:   15
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_set_dac
  7489 ;; This function uses a reentrant model
  7490 ;;
  7491                           
  7492                           	psect	text9
  7493  01C5B8                     __ptext9:
  7494                           	opt callstack 0
  7495  01C5B8                     _dac_spi_control:
  7496                           	opt callstack 14
  7497                           
  7498                           ;daq.c: 202: void dac_spi_control(_Bool set);daq.c: 203: {;daq.c: 204:  static _Bool ini
      +                          t = 0;;daq.c: 205:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 207:  if (set) {
  7499                           ;stkvar	_set @ sp[(0)+-1]
  7500                           
  7501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7502                           ;incstack = 0
  7503  01C5B8  0EFF               	movlw	-1
  7504  01C5BA  50E3               	movf	plusw1,w,c
  7505  01C5BC  B4D8               	btfsc	status,2,c
  7506  01C5BE  D022               	goto	l11646
  7507                           
  7508                           ;daq.c: 208:   SPI1CON0bits.EN = 0;
  7509  01C5C0  013D               	movlb	61	; () banked
  7510  01C5C2  9F14               	bcf	20,7,b	;volatile
  7511                           
  7512                           ; BSR set to: 61
  7513                           ;daq.c: 209:   if (!init) {
  7514  01C5C4  5043               	movf	dac_spi_control@init^0,w,c
  7515  01C5C6  A4D8               	btfss	status,2,c
  7516  01C5C8  D011               	goto	l11634
  7517                           
  7518                           ; BSR set to: 61
  7519                           ;daq.c: 210:    init = 1;
  7520  01C5CA  0E01               	movlw	1
  7521  01C5CC  6E43               	movwf	dac_spi_control@init^0,c
  7522                           
  7523                           ; BSR set to: 61
  7524                           ;daq.c: 211:    S0 = SPI1CON0;
  7525  01C5CE  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7526                           
  7527                           ; BSR set to: 61
  7528                           ;daq.c: 212:    S1 = SPI1CON1;
  7529  01C5D4  006F F454  F0A4    	movff	15637,dac_spi_control@S1	;volatile
  7530                           
  7531                           ; BSR set to: 61
  7532                           ;daq.c: 213:    S2 = SPI1CON2;
  7533  01C5DA  006F F458  F0A3    	movff	15638,dac_spi_control@S2	;volatile
  7534                           
  7535                           ; BSR set to: 61
  7536                           ;daq.c: 214:    SC = SPI1CLK;
  7537  01C5E0  006F F470  F0A2    	movff	15644,dac_spi_control@SC	;volatile
  7538                           
  7539                           ; BSR set to: 61
  7540                           ;daq.c: 215:    SB = SPI1BAUD;
  7541  01C5E6  006F F464  F0A1    	movff	15641,dac_spi_control@SB	;volatile
  7542  01C5EC                     l11634:
  7543                           
  7544                           ; BSR set to: 61
  7545                           ;daq.c: 221:   SPI1CON1 = 0x00;
  7546  01C5EC  6B15               	clrf	21,b	;volatile
  7547                           
  7548                           ; BSR set to: 61
  7549                           ;daq.c: 222:   SPI1CON1bits.CKE = 1;
  7550  01C5EE  8D15               	bsf	21,6,b	;volatile
  7551                           
  7552                           ; BSR set to: 61
  7553                           ;daq.c: 223:   SPI1CON1bits.CKP = 0;
  7554  01C5F0  9B15               	bcf	21,5,b	;volatile
  7555                           
  7556                           ; BSR set to: 61
  7557                           ;daq.c: 224:   SPI1CON1bits.SMP = 0;
  7558  01C5F2  9F15               	bcf	21,7,b	;volatile
  7559                           
  7560                           ;daq.c: 226:   SPI1CON2 = 0x03;
  7561  01C5F4  0E03               	movlw	3
  7562  01C5F6  6F16               	movwf	22,b	;volatile
  7563                           
  7564                           ;daq.c: 228:   SPI1BAUD = 0x0f;
  7565  01C5F8  0E0F               	movlw	15
  7566  01C5FA  6F19               	movwf	25,b	;volatile
  7567                           
  7568                           ; BSR set to: 61
  7569                           ;daq.c: 230:   SPI1CLK = 0x00;
  7570  01C5FC  6B1C               	clrf	28,b	;volatile
  7571                           
  7572                           ;daq.c: 232:   SPI1CON0 = 0x83;
  7573  01C5FE  0E83               	movlw	131
  7574  01C600  6F14               	movwf	20,b	;volatile
  7575  01C602  D014               	goto	L3
  7576  01C604                     l11646:
  7577                           
  7578                           ;daq.c: 235:   if (init) {
  7579  01C604  5043               	movf	dac_spi_control@init^0,w,c
  7580  01C606  B4D8               	btfsc	status,2,c
  7581  01C608  D012               	goto	l1999
  7582                           
  7583                           ;daq.c: 239:    SPI1CON0bits.EN = 0;
  7584  01C60A  013D               	movlb	61	; () banked
  7585  01C60C  9F14               	bcf	20,7,b	;volatile
  7586                           
  7587                           ;daq.c: 240:    SPI1CON1 = S1;
  7588  01C60E  0060  F293  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7589                           
  7590                           ;daq.c: 241:    SPI1CON2 = S2;
  7591  01C614  0060  F28F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7592                           
  7593                           ;daq.c: 242:    SPI1CLK = SC;
  7594  01C61A  0060  F28B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7595                           
  7596                           ;daq.c: 243:    SPI1BAUD = SB;
  7597  01C620  0060  F287  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7598                           
  7599                           ;daq.c: 244:    SPI1CON0 = S0;
  7600  01C626  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7601  01C62C                     L3:
  7602                           
  7603                           ;daq.c: 245:    SPI1CON0bits.EN = 1;
  7604  01C62C  8F14               	bsf	20,7,b	;volatile
  7605  01C62E                     l1999:
  7606                           
  7607                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7608  01C62E  52E5               	movf	postdec1,f,c
  7609  01C630  0012               	return		;funcret
  7610  01C632                     __end_of_dac_spi_control:
  7611                           	opt callstack 0
  7612                           
  7613 ;; *************** function _read_cal_data *****************
  7614 ;; Defined at:
  7615 ;;		line 362 in file "daq.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  x               2  [STACK] unsigned short 
  7620 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7621 ;;		 -> r_cal(57), 
  7622 ;;  y               2  [STACK] unsigned short 
  7623 ;;  crcVal_save     1  [STACK] unsigned char 
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  1  [STACK] _Bool 
  7626 ;; Registers used:
  7627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/39
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7637 ;;Total ram usage:        0 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:   17
  7640 ;; This function calls:
  7641 ;;		_CRC_8BitDataWrite
  7642 ;;		_CRC_CalculatedResultGet
  7643 ;;		_CRC_Initialize
  7644 ;;		_CRC_IsBusy
  7645 ;;		_CRC_Start
  7646 ;;		_DATAEE_ReadByte
  7647 ;; This function is called by:
  7648 ;;		_main
  7649 ;; This function uses a reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text10
  7653  019558                     __ptext10:
  7654                           	opt callstack 0
  7655  019558                     _read_cal_data:
  7656                           	opt callstack 0
  7657                           
  7658                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7659  019558  0E07               	movlw	7
  7660  01955A  26E1               	addwf	fsr1l,f,c
  7661  01955C  0E00               	movlw	0
  7662  01955E  22E2               	addwfc	fsr1h,f,c
  7663                           
  7664                           ;daq.c: 364:  uint16_t x = 0, y;
  7665                           ;stkvar	_x @ sp[(-7)+0]
  7666                           
  7667                           ;incstack = 0
  7668  019560  0EF9               	movlw	-7
  7669  019562  6AE3               	clrf	plusw1,c
  7670  019564  0EFA               	movlw	-6
  7671  019566  6AE3               	clrf	plusw1,c
  7672                           
  7673                           ;daq.c: 365:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 367:  y = sizeof(r_cal);
  7674  019568  0E39               	movlw	57
  7675  01956A  6E0B               	movwf	(btemp+10)^0,c
  7676  01956C  0E00               	movlw	0
  7677  01956E  6E0C               	movwf	(btemp+11)^0,c
  7678                           
  7679                           ;stkvar	_y @ sp[(-7)+4]
  7680  019570  0EFD               	movlw	-3
  7681  019572  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7682  019578  0EFE               	movlw	-2
  7683  01957A  0060  F033  FFE3   	movff	btemp+11,plusw1
  7684                           
  7685                           ;daq.c: 368:  r_cal_ptr = (uint8_t*) & r_cal;
  7686                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7687  019580  0E02               	movlw	high _r_cal
  7688  019582  6E01               	movwf	btemp^0,c
  7689  019584  0EFC               	movlw	-4
  7690  019586  0060  F007  FFE3   	movff	btemp,plusw1
  7691  01958C  0E93               	movlw	low _r_cal
  7692  01958E  6E01               	movwf	btemp^0,c
  7693  019590  0EFB               	movlw	-5
  7694  019592  0060  F007  FFE3   	movff	btemp,plusw1
  7695                           
  7696                           ;daq.c: 370:  CRC_Initialize();
  7697  019598  EC05  F0E1         	call	_CRC_Initialize	;wreg free
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;daq.c: 373:  CRC_Start();
  7701  01959C  ECE1  F0ED         	call	_CRC_Start	;wreg free
  7702  0195A0                     l12080:
  7703                           
  7704                           ;daq.c: 376:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7705                           ;stkvar	_x @ sp[(-7)+0]
  7706  0195A0  0EF9               	movlw	-7
  7707  0195A2  006F FF8F FFE6     	movff	plusw1,postinc1
  7708  0195A8  006F FF8F FFE6     	movff	plusw1,postinc1
  7709  0195AE  ECCC  F0E9         	call	_DATAEE_ReadByte	;wreg free
  7710                           
  7711                           ;stkvar	_x @ sp[(-7)+0]
  7712  0195B2  0EF9               	movlw	-7
  7713  0195B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  7714  0195BA  0EFA               	movlw	-6
  7715  0195BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  7716                           
  7717                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7718  0195C2  0EFB               	movlw	-5
  7719  0195C4  006F FF8C  F009    	movff	plusw1,btemp+8
  7720  0195CA  0EFC               	movlw	-4
  7721  0195CC  006F FF8C  F00A    	movff	plusw1,btemp+9
  7722  0195D2  500B               	movf	(btemp+10)^0,w,c
  7723  0195D4  2409               	addwf	(btemp+8)^0,w,c
  7724  0195D6  6ED9               	movwf	fsr2l,c
  7725  0195D8  500C               	movf	(btemp+11)^0,w,c
  7726  0195DA  200A               	addwfc	(btemp+9)^0,w,c
  7727  0195DC  6EDA               	movwf	fsr2h,c
  7728  0195DE  0060  F007  FFDF   	movff	btemp,indf2
  7729                           
  7730                           ;daq.c: 377:  } while (++x < y);
  7731                           ;stkvar	_y @ sp[(-7)+4]
  7732  0195E4  0EFD               	movlw	-3
  7733  0195E6  006F FF8C  F00B    	movff	plusw1,btemp+10
  7734  0195EC  0EFE               	movlw	-2
  7735  0195EE  006F FF8C  F00C    	movff	plusw1,btemp+11
  7736                           
  7737                           ;stkvar	_x @ sp[(-7)+0]
  7738  0195F4  0EF9               	movlw	-7
  7739  0195F6  50E3               	movf	plusw1,w,c
  7740  0195F8  0F01               	addlw	1
  7741  0195FA  6E01               	movwf	btemp^0,c
  7742  0195FC  0EF9               	movlw	-7
  7743  0195FE  0060  F007  FFE3   	movff	btemp,plusw1
  7744  019604  6A01               	clrf	btemp^0,c
  7745  019606  0EFA               	movlw	-6
  7746  019608  50E3               	movf	plusw1,w,c
  7747  01960A  2001               	addwfc	btemp^0,w,c
  7748  01960C  6E01               	movwf	btemp^0,c
  7749  01960E  0EFA               	movlw	-6
  7750  019610  0060  F007  FFE3   	movff	btemp,plusw1
  7751  019616  0EF9               	movlw	-7
  7752  019618  006F FF8C  F009    	movff	plusw1,btemp+8
  7753  01961E  0EFA               	movlw	-6
  7754  019620  006F FF8C  F00A    	movff	plusw1,btemp+9
  7755  019626  500B               	movf	(btemp+10)^0,w,c
  7756  019628  5C09               	subwf	(btemp+8)^0,w,c
  7757  01962A  500C               	movf	(btemp+11)^0,w,c
  7758  01962C  580A               	subwfb	(btemp+9)^0,w,c
  7759  01962E  A0D8               	btfss	status,0,c
  7760  019630  D7B7               	goto	l12080
  7761                           
  7762                           ;daq.c: 378:  crcVal_save = r_cal.crc;
  7763                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7764  019632  0EFF               	movlw	-1
  7765  019634  0060  FB2F  FFE3   	movff	_r_cal+56,plusw1
  7766                           
  7767                           ;daq.c: 380:  if (r_cal.checkmark == 0x1957) {
  7768  01963A  0E57               	movlw	87
  7769  01963C  0102               	movlb	2	; () banked
  7770  01963E  19C9               	xorwf	(_r_cal+54)& (0+255),w,b
  7771  019640  E163               	bnz	l12100
  7772  019642  0E19               	movlw	25
  7773  019644  19CA               	xorwf	(_r_cal+55)& (0+255),w,b
  7774  019646  A4D8               	btfss	status,2,c
  7775  019648  D05F               	goto	u11120
  7776                           
  7777                           ; BSR set to: 2
  7778                           ;daq.c: 381:   r_cal.crc = 0x42;
  7779  01964A  0E42               	movlw	66
  7780  01964C  6FCB               	movwf	(_r_cal+56)& (0+255),b
  7781                           
  7782                           ; BSR set to: 2
  7783                           ;daq.c: 382:   x = 0;
  7784                           ;stkvar	_x @ sp[(-7)+0]
  7785  01964E  0EF9               	movlw	-7
  7786  019650  6AE3               	clrf	plusw1,c
  7787  019652  0EFA               	movlw	-6
  7788  019654  6AE3               	clrf	plusw1,c
  7789  019656                     l12092:
  7790                           
  7791                           ;daq.c: 385:    CRC_8BitDataWrite(r_cal_ptr[x]);
  7792                           ;stkvar	_x @ sp[(-7)+0]
  7793  019656  0EF9               	movlw	-7
  7794  019658  006F FF8C  F00B    	movff	plusw1,btemp+10
  7795  01965E  0EFA               	movlw	-6
  7796  019660  006F FF8C  F00C    	movff	plusw1,btemp+11
  7797                           
  7798                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7799  019666  0EFB               	movlw	-5
  7800  019668  006F FF8C  F009    	movff	plusw1,btemp+8
  7801  01966E  0EFC               	movlw	-4
  7802  019670  006F FF8C  F00A    	movff	plusw1,btemp+9
  7803  019676  500B               	movf	(btemp+10)^0,w,c
  7804  019678  2409               	addwf	(btemp+8)^0,w,c
  7805  01967A  6ED9               	movwf	fsr2l,c
  7806  01967C  500C               	movf	(btemp+11)^0,w,c
  7807  01967E  200A               	addwfc	(btemp+9)^0,w,c
  7808  019680  6EDA               	movwf	fsr2h,c
  7809  019682  50DF               	movf	indf2,w,c
  7810  019684  6EE6               	movwf	postinc1,c
  7811  019686  EC53  F0ED         	call	_CRC_8BitDataWrite	;wreg free
  7812  01968A                     l12094:
  7813  01968A  EC75  F0ED         	call	_CRC_IsBusy	;wreg free
  7814  01968E  5001               	movf	btemp^0,w,c
  7815  019690  A4D8               	btfss	status,2,c
  7816  019692  D7FB               	goto	l12094
  7817                           
  7818                           ;daq.c: 387:   } while (++x < y);
  7819                           ;stkvar	_y @ sp[(-7)+4]
  7820  019694  0EFD               	movlw	-3
  7821  019696  006F FF8C  F00B    	movff	plusw1,btemp+10
  7822  01969C  0EFE               	movlw	-2
  7823  01969E  006F FF8C  F00C    	movff	plusw1,btemp+11
  7824                           
  7825                           ;stkvar	_x @ sp[(-7)+0]
  7826  0196A4  0EF9               	movlw	-7
  7827  0196A6  50E3               	movf	plusw1,w,c
  7828  0196A8  0F01               	addlw	1
  7829  0196AA  6E01               	movwf	btemp^0,c
  7830  0196AC  0EF9               	movlw	-7
  7831  0196AE  0060  F007  FFE3   	movff	btemp,plusw1
  7832  0196B4  6A01               	clrf	btemp^0,c
  7833  0196B6  0EFA               	movlw	-6
  7834  0196B8  50E3               	movf	plusw1,w,c
  7835  0196BA  2001               	addwfc	btemp^0,w,c
  7836  0196BC  6E01               	movwf	btemp^0,c
  7837  0196BE  0EFA               	movlw	-6
  7838  0196C0  0060  F007  FFE3   	movff	btemp,plusw1
  7839  0196C6  0EF9               	movlw	-7
  7840  0196C8  006F FF8C  F009    	movff	plusw1,btemp+8
  7841  0196CE  0EFA               	movlw	-6
  7842  0196D0  006F FF8C  F00A    	movff	plusw1,btemp+9
  7843  0196D6  500B               	movf	(btemp+10)^0,w,c
  7844  0196D8  5C09               	subwf	(btemp+8)^0,w,c
  7845  0196DA  500C               	movf	(btemp+11)^0,w,c
  7846  0196DC  580A               	subwfb	(btemp+9)^0,w,c
  7847  0196DE  A0D8               	btfss	status,0,c
  7848  0196E0  D7BA               	goto	l12092
  7849                           
  7850                           ;daq.c: 388:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  7851  0196E2  0E00               	movlw	0
  7852  0196E4  6EE6               	movwf	postinc1,c
  7853  0196E6  0E00               	movlw	0
  7854  0196E8  6EE6               	movwf	postinc1,c
  7855  0196EA  0E00               	movlw	0
  7856  0196EC  6EE6               	movwf	postinc1,c
  7857  0196EE  EC8D  F0CF         	call	_CRC_CalculatedResultGet	;wreg free
  7858                           
  7859                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7860  0196F2  0EFF               	movlw	-1
  7861  0196F4  50E3               	movf	plusw1,w,c
  7862  0196F6  6E0B               	movwf	(btemp+10)^0,c
  7863  0196F8  6A0C               	clrf	(btemp+11)^0,c
  7864  0196FA  500B               	movf	(btemp+10)^0,w,c
  7865  0196FC  1801               	xorwf	btemp^0,w,c
  7866  0196FE  E104               	bnz	u11120
  7867  019700  500C               	movf	(btemp+11)^0,w,c
  7868  019702  1802               	xorwf	(btemp+1)^0,w,c
  7869  019704  B4D8               	btfsc	status,2,c
  7870  019706  D002               	goto	l12108
  7871  019708                     u11120:
  7872  019708                     l12100:
  7873                           
  7874                           ;daq.c: 389:    return 0;
  7875  019708  0E00               	movlw	0
  7876  01970A  D005               	goto	L4
  7877  01970C                     l12108:
  7878                           
  7879                           ;daq.c: 393:  r_cal.crc = crcVal_save;
  7880                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7881  01970C  0EFF               	movlw	-1
  7882  01970E  006F FF8C  F2CB    	movff	plusw1,_r_cal+56
  7883                           
  7884                           ;daq.c: 394:  return 1;
  7885  019714  0E01               	movlw	1
  7886  019716                     L4:
  7887  019716  6E01               	movwf	btemp^0,c
  7888                           
  7889                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7890  019718  0EF9               	movlw	249
  7891  01971A  26E1               	addwf	fsr1l,f,c
  7892  01971C  0EFF               	movlw	255
  7893  01971E  22E2               	addwfc	fsr1h,f,c
  7894  019720  0012               	return		;funcret
  7895  019722                     __end_of_read_cal_data:
  7896                           	opt callstack 0
  7897                           
  7898 ;; *************** function _DATAEE_ReadByte *****************
  7899 ;; Defined at:
  7900 ;;		line 194 in file "mcc_generated_files/memory.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  bAdd            2  [STACK] unsigned short 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;		None
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1  [STACK] unsigned char 
  7907 ;; Registers used:
  7908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/39
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7918 ;;Total ram usage:        0 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:   15
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_read_cal_data
  7925 ;; This function uses a reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text11
  7929  01D398                     __ptext11:
  7930                           	opt callstack 0
  7931  01D398                     _DATAEE_ReadByte:
  7932                           	opt callstack 14
  7933                           
  7934                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  7935                           ;stkvar	_bAdd @ sp[(0)+-2]
  7936                           
  7937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7938                           ;incstack = 0
  7939  01D398  0EFF               	movlw	255
  7940  01D39A  24E1               	addwf	fsr1l,w,c
  7941  01D39C  6ED9               	movwf	fsr2l,c
  7942  01D39E  0EFF               	movlw	255
  7943  01D3A0  20E2               	addwfc	fsr1h,w,c
  7944  01D3A2  6EDA               	movwf	fsr2h,c
  7945  01D3A4  50DF               	movf	indf2,w,c
  7946  01D3A6  0B03               	andlw	3
  7947  01D3A8  0139               	movlb	57	; () banked
  7948  01D3AA  6FE1               	movwf	225,b	;volatile
  7949                           
  7950                           ; BSR set to: 57
  7951                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  7952                           ;stkvar	_bAdd @ sp[(0)+-2]
  7953  01D3AC  0EFE               	movlw	-2
  7954  01D3AE  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  7955                           
  7956                           ; BSR set to: 57
  7957                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  7958  01D3B4  0E3F               	movlw	-193
  7959  01D3B6  17E5               	andwf	229,f,b	;volsfr
  7960                           
  7961                           ; BSR set to: 57
  7962                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  7963  01D3B8  81E5               	bsf	229,0,b	;volsfr
  7964                           
  7965                           ; BSR set to: 57
  7966                           ;mcc_generated_files/memory.c: 200:     __nop();
  7967  01D3BA  F000               	nop	
  7968                           
  7969                           ;mcc_generated_files/memory.c: 201:     __nop();
  7970  01D3BC  F000               	nop	
  7971                           
  7972                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  7973  01D3BE  006E F78C  F001    	movff	14819,btemp	;volatile
  7974                           
  7975                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  7976  01D3C4  52E5               	movf	postdec1,f,c
  7977  01D3C6  52E5               	movf	postdec1,f,c
  7978  01D3C8  0012               	return		;funcret
  7979  01D3CA                     __end_of_DATAEE_ReadByte:
  7980                           	opt callstack 0
  7981                           
  7982 ;; *************** function _init_port_dma *****************
  7983 ;; Defined at:
  7984 ;;		line 104 in file "eadog.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;		None
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1  [STACK] void 
  7991 ;; Registers used:
  7992 ;;		wreg, status,2
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/1
  7995 ;;		On exit  : 3F/3B
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8002 ;;Total ram usage:        0 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:   15
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_main
  8009 ;; This function uses a reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text12
  8013  01D3CA                     __ptext12:
  8014                           	opt callstack 0
  8015  01D3CA                     _init_port_dma:
  8016                           	opt callstack 15
  8017                           
  8018                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  8019                           
  8020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8021                           ;incstack = 0
  8022  01D3CA  0E3F               	movlw	-193
  8023  01D3CC  013B               	movlb	59	; () banked
  8024  01D3CE  17DD               	andwf	221,f,b	;volatile
  8025                           
  8026                           ; BSR set to: 59
  8027                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  8028  01D3D0  9BDD               	bcf	221,5,b	;volatile
  8029                           
  8030                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  8031  01D3D2  51DD               	movf	221,w,b	;volatile
  8032  01D3D4  0BF9               	andlw	-7
  8033  01D3D6  0902               	iorlw	2
  8034  01D3D8  6FDD               	movwf	221,b	;volatile
  8035                           
  8036                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  8037  01D3DA  0EE7               	movlw	-25
  8038  01D3DC  17DD               	andwf	221,f,b	;volatile
  8039                           
  8040                           ; BSR set to: 59
  8041                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  8042  01D3DE  81DD               	bsf	221,0,b	;volatile
  8043                           
  8044                           ; BSR set to: 59
  8045                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  8046  01D3E0  9DDC               	bcf	220,6,b	;volatile
  8047                           
  8048                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  8049  01D3E2  0E3D               	movlw	61
  8050  01D3E4  6FD1               	movwf	209,b	;volatile
  8051  01D3E6  0EEA               	movlw	234
  8052  01D3E8  6FD0               	movwf	208,b	;volatile
  8053                           
  8054                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  8055  01D3EA  0EFF               	movlw	low _port_data
  8056  01D3EC  6FD9               	movwf	217,b	;volatile
  8057  01D3EE  0E05               	movlw	high _port_data
  8058  01D3F0  6FDA               	movwf	218,b	;volatile
  8059  01D3F2  0E00               	movlw	low (_port_data shr (0+16))
  8060  01D3F4  6FDB               	movwf	219,b	;volatile
  8061                           
  8062                           ; BSR set to: 59
  8063                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  8064  01D3F6  9BDC               	bcf	220,5,b	;volatile
  8065                           
  8066                           ; BSR set to: 59
  8067                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8068  01D3F8  0012               	return		;funcret
  8069  01D3FA                     __end_of_init_port_dma:
  8070                           	opt callstack 0
  8071                           
  8072 ;; *************** function _init_display *****************
  8073 ;; Defined at:
  8074 ;;		line 38 in file "eadog.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1  [STACK] void 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8083 ;; Tracked objects:
  8084 ;;		On entry : 3F/3B
  8085 ;;		On exit  : 3F/3D
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:   17
  8095 ;; This function calls:
  8096 ;;		_ringBufS_init
  8097 ;;		_send_lcd_cmd
  8098 ;;		_send_lcd_cmd_long
  8099 ;;		_send_lcd_data
  8100 ;;		_wdtdelay
  8101 ;; This function is called by:
  8102 ;;		_main
  8103 ;; This function uses a reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text13
  8107  01B474                     __ptext13:
  8108                           	opt callstack 0
  8109  01B474                     _init_display:
  8110                           	opt callstack 13
  8111                           
  8112                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  8113                           
  8114                           ; BSR set to: 59
  8115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8116                           ;incstack = 0
  8117  01B474  0E94               	movlw	low _ring_buf1
  8118  01B476  0101               	movlb	1	; () banked
  8119  01B478  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8120  01B47A  0E03               	movlw	high _ring_buf1
  8121  01B47C  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8122                           
  8123                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  8124  01B47E  0E00               	movlw	low _ring_buf2
  8125  01B480  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8126  01B482  0E04               	movlw	high _ring_buf2
  8127  01B484  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8128                           
  8129                           ; BSR set to: 1
  8130                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8131  01B486  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  8132  01B48C  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  8133  01B492  ECB3  F0EA         	call	_ringBufS_init	;wreg free
  8134                           
  8135                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8136  01B496  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  8137  01B49C  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  8138  01B4A2  ECB3  F0EA         	call	_ringBufS_init	;wreg free
  8139                           
  8140                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8141  01B4A6  84BE               	bsf	190,2,c	;volatile
  8142                           
  8143                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8144  01B4A8  013D               	movlb	61	; () banked
  8145  01B4AA  9F14               	bcf	20,7,b	;volatile
  8146                           
  8147                           ; BSR set to: 61
  8148                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8149  01B4AC  0E20               	movlw	32
  8150  01B4AE  6F15               	movwf	21,b	;volatile
  8151                           
  8152                           ; BSR set to: 61
  8153                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8154  01B4B0  0E03               	movlw	3
  8155  01B4B2  6F16               	movwf	22,b	;volatile
  8156                           
  8157                           ; BSR set to: 61
  8158                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8159  01B4B4  0E04               	movlw	4
  8160  01B4B6  6F19               	movwf	25,b	;volatile
  8161                           
  8162                           ; BSR set to: 61
  8163                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8164  01B4B8  0E02               	movlw	2
  8165  01B4BA  6F1C               	movwf	28,b	;volatile
  8166                           
  8167                           ; BSR set to: 61
  8168                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8169  01B4BC  0E83               	movlw	131
  8170  01B4BE  6F14               	movwf	20,b	;volatile
  8171                           
  8172                           ; BSR set to: 61
  8173                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8174  01B4C0  8F14               	bsf	20,7,b	;volatile
  8175                           
  8176                           ; BSR set to: 61
  8177                           ;eadog.c: 60:  wdtdelay(350000);
  8178  01B4C2  0E30               	movlw	48
  8179  01B4C4  6EE6               	movwf	postinc1,c
  8180  01B4C6  0E57               	movlw	87
  8181  01B4C8  6EE6               	movwf	postinc1,c
  8182  01B4CA  0E05               	movlw	5
  8183  01B4CC  6EE6               	movwf	postinc1,c
  8184  01B4CE  0E00               	movlw	0
  8185  01B4D0  6EE6               	movwf	postinc1,c
  8186  01B4D2  ECB8  F0E5         	call	_wdtdelay	;wreg free
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8190  01B4D6  0E46               	movlw	70
  8191  01B4D8  6EE6               	movwf	postinc1,c
  8192  01B4DA  EC17  F0E8         	call	_send_lcd_cmd_long	;wreg free
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8196  01B4DE  0E41               	movlw	65
  8197  01B4E0  6EE6               	movwf	postinc1,c
  8198  01B4E2  EC37  F0E8         	call	_send_lcd_cmd	;wreg free
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;eadog.c: 63:  wdtdelay(80);
  8202  01B4E6  0E50               	movlw	80
  8203  01B4E8  6EE6               	movwf	postinc1,c
  8204  01B4EA  0E00               	movlw	0
  8205  01B4EC  6EE6               	movwf	postinc1,c
  8206  01B4EE  0E00               	movlw	0
  8207  01B4F0  6EE6               	movwf	postinc1,c
  8208  01B4F2  0E00               	movlw	0
  8209  01B4F4  6EE6               	movwf	postinc1,c
  8210  01B4F6  ECB8  F0E5         	call	_wdtdelay	;wreg free
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8214  01B4FA  0E53               	movlw	83
  8215  01B4FC  6EE6               	movwf	postinc1,c
  8216  01B4FE  EC37  F0E8         	call	_send_lcd_cmd	;wreg free
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;eadog.c: 65:  send_lcd_data(2);
  8220  01B502  0E02               	movlw	2
  8221  01B504  6EE6               	movwf	postinc1,c
  8222  01B506  ECE0  F0EB         	call	_send_lcd_data	;wreg free
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;eadog.c: 66:  wdtdelay(80);
  8226  01B50A  0E50               	movlw	80
  8227  01B50C  6EE6               	movwf	postinc1,c
  8228  01B50E  0E00               	movlw	0
  8229  01B510  6EE6               	movwf	postinc1,c
  8230  01B512  0E00               	movlw	0
  8231  01B514  6EE6               	movwf	postinc1,c
  8232  01B516  0E00               	movlw	0
  8233  01B518  6EE6               	movwf	postinc1,c
  8234  01B51A  ECB8  F0E5         	call	_wdtdelay	;wreg free
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8238  01B51E  0E51               	movlw	81
  8239  01B520  6EE6               	movwf	postinc1,c
  8240  01B522  EC17  F0E8         	call	_send_lcd_cmd_long	;wreg free
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8244  01B526  013D               	movlb	61	; () banked
  8245  01B528  9F14               	bcf	20,7,b	;volatile
  8246                           
  8247                           ; BSR set to: 61
  8248                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8249  01B52A  0E02               	movlw	2
  8250  01B52C  6F16               	movwf	22,b	;volatile
  8251                           
  8252                           ; BSR set to: 61
  8253                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8254  01B52E  8F14               	bsf	20,7,b	;volatile
  8255                           
  8256                           ; BSR set to: 61
  8257                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8258  01B530  931A               	bcf	26,1,b	;volatile
  8259                           
  8260                           ; BSR set to: 61
  8261                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8262  01B532  0E3F               	movlw	-193
  8263  01B534  013B               	movlb	59	; () banked
  8264  01B536  17FD               	andwf	253,f,b	;volatile
  8265                           
  8266                           ; BSR set to: 59
  8267                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8268  01B538  9BFD               	bcf	253,5,b	;volatile
  8269                           
  8270                           ; BSR set to: 59
  8271                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8272  01B53A  51FD               	movf	253,w,b	;volatile
  8273  01B53C  0BF9               	andlw	-7
  8274  01B53E  0902               	iorlw	2
  8275  01B540  6FFD               	movwf	253,b	;volatile
  8276                           
  8277                           ; BSR set to: 59
  8278                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8279  01B542  0EE7               	movlw	-25
  8280  01B544  17FD               	andwf	253,f,b	;volatile
  8281                           
  8282                           ; BSR set to: 59
  8283                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8284  01B546  81FD               	bsf	253,0,b	;volatile
  8285                           
  8286                           ; BSR set to: 59
  8287                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8288  01B548  0E94               	movlw	low _ring_buf1
  8289  01B54A  6FF9               	movwf	249,b	;volatile
  8290  01B54C  0E03               	movlw	high _ring_buf1
  8291  01B54E  6FFA               	movwf	250,b	;volatile
  8292  01B550  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8293  01B552  6FFB               	movwf	251,b	;volatile
  8294                           
  8295                           ; BSR set to: 59
  8296                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8297  01B554  9BFC               	bcf	252,5,b	;volatile
  8298                           
  8299                           ; BSR set to: 59
  8300                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8301  01B556  013D               	movlb	61	; () banked
  8302  01B558  831A               	bsf	26,1,b	;volatile
  8303                           
  8304                           ; BSR set to: 61
  8305                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8306  01B55A  94BE               	bcf	190,2,c	;volatile
  8307                           
  8308                           ; BSR set to: 61
  8309                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8310  01B55C  0012               	return		;funcret
  8311  01B55E                     __end_of_init_display:
  8312                           	opt callstack 0
  8313                           
  8314 ;; *************** function _send_lcd_data *****************
  8315 ;; Defined at:
  8316 ;;		line 123 in file "eadog.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  data            1  [STACK] const unsigned char 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;		None
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1  [STACK] void 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8325 ;; Tracked objects:
  8326 ;;		On entry : 3F/0
  8327 ;;		On exit  : 3F/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8334 ;;Total ram usage:        0 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:   16
  8337 ;; This function calls:
  8338 ;;		_SPI1_Exchange8bit
  8339 ;;		_wdtdelay
  8340 ;; This function is called by:
  8341 ;;		_init_display
  8342 ;; This function uses a reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text14
  8346  01D7C0                     __ptext14:
  8347                           	opt callstack 0
  8348  01D7C0                     _send_lcd_data:
  8349                           	opt callstack 13
  8350                           
  8351                           ; BSR set to: 61
  8352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8353                           ;incstack = 0
  8354                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8355  01D7C0  94BC               	bcf	188,2,c	;volatile
  8356                           
  8357                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8358                           ;stkvar	_data @ sp[(0)+-1]
  8359  01D7C2  0EFF               	movlw	-1
  8360  01D7C4  50E3               	movf	plusw1,w,c
  8361  01D7C6  6EE6               	movwf	postinc1,c
  8362  01D7C8  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8363                           
  8364                           ; BSR set to: 57
  8365                           ;eadog.c: 127:  wdtdelay(8);
  8366  01D7CC  0E08               	movlw	8
  8367  01D7CE  6EE6               	movwf	postinc1,c
  8368  01D7D0  0E00               	movlw	0
  8369  01D7D2  6EE6               	movwf	postinc1,c
  8370  01D7D4  0E00               	movlw	0
  8371  01D7D6  6EE6               	movwf	postinc1,c
  8372  01D7D8  0E00               	movlw	0
  8373  01D7DA  6EE6               	movwf	postinc1,c
  8374  01D7DC  ECB8  F0E5         	call	_wdtdelay	;wreg free
  8375                           
  8376                           ; BSR set to: 0
  8377                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8378  01D7E0  52E5               	movf	postdec1,f,c
  8379  01D7E2  0012               	return		;funcret
  8380  01D7E4                     __end_of_send_lcd_data:
  8381                           	opt callstack 0
  8382                           
  8383 ;; *************** function _send_lcd_cmd_long *****************
  8384 ;; Defined at:
  8385 ;;		line 139 in file "eadog.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  cmd             1  [STACK] const unsigned char 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1  [STACK] void 
  8392 ;; Registers used:
  8393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8394 ;; Tracked objects:
  8395 ;;		On entry : 3F/0
  8396 ;;		On exit  : 3F/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:   16
  8406 ;; This function calls:
  8407 ;;		_SPI1_Exchange8bit
  8408 ;;		_wdtdelay
  8409 ;; This function is called by:
  8410 ;;		_init_display
  8411 ;; This function uses a reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text15
  8415  01D02E                     __ptext15:
  8416                           	opt callstack 0
  8417  01D02E                     _send_lcd_cmd_long:
  8418                           	opt callstack 13
  8419                           
  8420                           ; BSR set to: 0
  8421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8422                           ;incstack = 0
  8423                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8424  01D02E  94BC               	bcf	188,2,c	;volatile
  8425                           
  8426                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8427  01D030  0EFE               	movlw	254
  8428  01D032  6EE6               	movwf	postinc1,c
  8429  01D034  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8430                           
  8431                           ; BSR set to: 57
  8432                           ;eadog.c: 143:  wdtdelay(8);
  8433  01D038  0E08               	movlw	8
  8434  01D03A  6EE6               	movwf	postinc1,c
  8435  01D03C  0E00               	movlw	0
  8436  01D03E  6EE6               	movwf	postinc1,c
  8437  01D040  0E00               	movlw	0
  8438  01D042  6EE6               	movwf	postinc1,c
  8439  01D044  0E00               	movlw	0
  8440  01D046  6EE6               	movwf	postinc1,c
  8441  01D048  ECB8  F0E5         	call	_wdtdelay	;wreg free
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8445                           ;stkvar	_cmd @ sp[(0)+-1]
  8446  01D04C  0EFF               	movlw	-1
  8447  01D04E  50E3               	movf	plusw1,w,c
  8448  01D050  6EE6               	movwf	postinc1,c
  8449  01D052  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8450                           
  8451                           ;eadog.c: 145:  wdtdelay(800);
  8452  01D056  0E20               	movlw	32
  8453  01D058  6EE6               	movwf	postinc1,c
  8454  01D05A  0E03               	movlw	3
  8455  01D05C  6EE6               	movwf	postinc1,c
  8456  01D05E  0E00               	movlw	0
  8457  01D060  6EE6               	movwf	postinc1,c
  8458  01D062  0E00               	movlw	0
  8459  01D064  6EE6               	movwf	postinc1,c
  8460  01D066  ECB8  F0E5         	call	_wdtdelay	;wreg free
  8461                           
  8462                           ; BSR set to: 0
  8463                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8464  01D06A  52E5               	movf	postdec1,f,c
  8465  01D06C  0012               	return		;funcret
  8466  01D06E                     __end_of_send_lcd_cmd_long:
  8467                           	opt callstack 0
  8468                           
  8469 ;; *************** function _send_lcd_cmd *****************
  8470 ;; Defined at:
  8471 ;;		line 130 in file "eadog.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  cmd             1  [STACK] const unsigned char 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1  [STACK] void 
  8478 ;; Registers used:
  8479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8480 ;; Tracked objects:
  8481 ;;		On entry : 3F/0
  8482 ;;		On exit  : 3F/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8489 ;;Total ram usage:        0 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:   16
  8492 ;; This function calls:
  8493 ;;		_SPI1_Exchange8bit
  8494 ;;		_wdtdelay
  8495 ;; This function is called by:
  8496 ;;		_init_display
  8497 ;; This function uses a reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text16
  8501  01D06E                     __ptext16:
  8502                           	opt callstack 0
  8503  01D06E                     _send_lcd_cmd:
  8504                           	opt callstack 13
  8505                           
  8506                           ; BSR set to: 0
  8507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8508                           ;incstack = 0
  8509                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8510  01D06E  94BC               	bcf	188,2,c	;volatile
  8511                           
  8512                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8513  01D070  0EFE               	movlw	254
  8514  01D072  6EE6               	movwf	postinc1,c
  8515  01D074  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8516                           
  8517                           ; BSR set to: 57
  8518                           ;eadog.c: 134:  wdtdelay(8);
  8519  01D078  0E08               	movlw	8
  8520  01D07A  6EE6               	movwf	postinc1,c
  8521  01D07C  0E00               	movlw	0
  8522  01D07E  6EE6               	movwf	postinc1,c
  8523  01D080  0E00               	movlw	0
  8524  01D082  6EE6               	movwf	postinc1,c
  8525  01D084  0E00               	movlw	0
  8526  01D086  6EE6               	movwf	postinc1,c
  8527  01D088  ECB8  F0E5         	call	_wdtdelay	;wreg free
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8531                           ;stkvar	_cmd @ sp[(0)+-1]
  8532  01D08C  0EFF               	movlw	-1
  8533  01D08E  50E3               	movf	plusw1,w,c
  8534  01D090  6EE6               	movwf	postinc1,c
  8535  01D092  EC9F  F0EC         	call	_SPI1_Exchange8bit	;wreg free
  8536                           
  8537                           ;eadog.c: 136:  wdtdelay(8);
  8538  01D096  0E08               	movlw	8
  8539  01D098  6EE6               	movwf	postinc1,c
  8540  01D09A  0E00               	movlw	0
  8541  01D09C  6EE6               	movwf	postinc1,c
  8542  01D09E  0E00               	movlw	0
  8543  01D0A0  6EE6               	movwf	postinc1,c
  8544  01D0A2  0E00               	movlw	0
  8545  01D0A4  6EE6               	movwf	postinc1,c
  8546  01D0A6  ECB8  F0E5         	call	_wdtdelay	;wreg free
  8547                           
  8548                           ; BSR set to: 0
  8549                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8550  01D0AA  52E5               	movf	postdec1,f,c
  8551  01D0AC  0012               	return		;funcret
  8552  01D0AE                     __end_of_send_lcd_cmd:
  8553                           	opt callstack 0
  8554                           
  8555 ;; *************** function _SPI1_Exchange8bit *****************
  8556 ;; Defined at:
  8557 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  data            1  [STACK] unsigned char 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;		None
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1  [STACK] unsigned char 
  8564 ;; Registers used:
  8565 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 3F/39
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8575 ;;Total ram usage:        0 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:   15
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_send_lcd_data
  8582 ;;		_send_lcd_cmd
  8583 ;;		_send_lcd_cmd_long
  8584 ;;		_set_dac
  8585 ;; This function uses a reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text17
  8589  01D93E                     __ptext17:
  8590                           	opt callstack 0
  8591  01D93E                     _SPI1_Exchange8bit:
  8592                           	opt callstack 14
  8593                           
  8594                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8595                           
  8596                           ; BSR set to: 0
  8597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8598                           ;incstack = 0
  8599  01D93E  0E01               	movlw	1
  8600  01D940  013D               	movlb	61	; () banked
  8601  01D942  6F12               	movwf	18,b	;volatile
  8602                           
  8603                           ; BSR set to: 61
  8604                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8605                           ;stkvar	_data @ sp[(0)+-1]
  8606  01D944  0EFF               	movlw	-1
  8607  01D946  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8608  01D94C                     l809:
  8609                           
  8610                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8611  01D94C  0139               	movlb	57	; () banked
  8612  01D94E  A9A2               	btfss	162,4,b	;volatile
  8613  01D950  D7FD               	goto	l809
  8614                           
  8615                           ; BSR set to: 57
  8616                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8617  01D952  006F F440  F001    	movff	15632,btemp	;volatile
  8618                           
  8619                           ; BSR set to: 57
  8620                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8621  01D958  52E5               	movf	postdec1,f,c
  8622  01D95A  0012               	return		;funcret
  8623  01D95C                     __end_of_SPI1_Exchange8bit:
  8624                           	opt callstack 0
  8625                           
  8626 ;; *************** function _ringBufS_init *****************
  8627 ;; Defined at:
  8628 ;;		line 22 in file "ringbufs.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  _this           2  [STACK] PTR volatile struct ring
  8631 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1  [STACK] void 
  8636 ;; Registers used:
  8637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/1
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8647 ;;Total ram usage:        0 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:   16
  8650 ;; This function calls:
  8651 ;;		_memset
  8652 ;; This function is called by:
  8653 ;;		_init_display
  8654 ;; This function uses a reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text18
  8658  01D566                     __ptext18:
  8659                           	opt callstack 0
  8660  01D566                     _ringBufS_init:
  8661                           	opt callstack 13
  8662                           
  8663                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8664                           
  8665                           ; BSR set to: 57
  8666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8667                           ;incstack = 0
  8668  01D566  0E43               	movlw	67
  8669  01D568  6EE6               	movwf	postinc1,c
  8670  01D56A  0E00               	movlw	0
  8671  01D56C  6EE6               	movwf	postinc1,c
  8672  01D56E  0E00               	movlw	0
  8673  01D570  6EE6               	movwf	postinc1,c
  8674  01D572  0E00               	movlw	0
  8675  01D574  6EE6               	movwf	postinc1,c
  8676                           
  8677                           ;stkvar	__this @ sp[(-4)+-2]
  8678  01D576  0EFA               	movlw	-6
  8679  01D578  006F FF8F FFE6     	movff	plusw1,postinc1
  8680  01D57E  006F FF8F FFE6     	movff	plusw1,postinc1
  8681  01D584  EC85  F0BD         	call	_memset	;wreg free
  8682                           
  8683                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8684  01D588  52E5               	movf	postdec1,f,c
  8685  01D58A  52E5               	movf	postdec1,f,c
  8686  01D58C  0012               	return		;funcret
  8687  01D58E                     __end_of_ringBufS_init:
  8688                           	opt callstack 0
  8689                           
  8690 ;; *************** function _init_bsoc *****************
  8691 ;; Defined at:
  8692 ;;		line 110 in file "bsoc.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;		None
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;		None
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  1  [STACK] void 
  8699 ;; Registers used:
  8700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8710 ;;Total ram usage:        0 bytes
  8711 ;; Hardware stack levels used:    1
  8712 ;; Hardware stack levels required when called:   18
  8713 ;; This function calls:
  8714 ;;		_TMR3_SetInterruptHandler
  8715 ;;		_Volts_to_SOC
  8716 ;;		___fldiv
  8717 ;;		___flmul
  8718 ;;		___fltol
  8719 ;;		___xxtofl
  8720 ;;		_conv_raw_result
  8721 ;; This function is called by:
  8722 ;;		_main
  8723 ;; This function uses a reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text19
  8727  018880                     __ptext19:
  8728                           	opt callstack 0
  8729  018880                     _init_bsoc:
  8730                           	opt callstack 12
  8731                           
  8732                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  8733                           
  8734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8735                           ;incstack = 0
  8736  018880  0E00               	movlw	0
  8737  018882  6EE6               	movwf	postinc1,c
  8738  018884  0E00               	movlw	0
  8739  018886  6EE6               	movwf	postinc1,c
  8740  018888  0E7A               	movlw	122
  8741  01888A  6EE6               	movwf	postinc1,c
  8742  01888C  0E44               	movlw	68
  8743  01888E  6EE6               	movwf	postinc1,c
  8744  018890  0E00               	movlw	0
  8745  018892  6EE6               	movwf	postinc1,c
  8746  018894  0E04               	movlw	4
  8747  018896  6EE6               	movwf	postinc1,c
  8748  018898  ECF8  F0AF         	call	_conv_raw_result	;wreg free
  8749  01889C  0060  F007  FFE6   	movff	btemp,postinc1
  8750  0188A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8751  0188A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8752  0188AE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8753  0188B4  EC46  F0D0         	call	___fltol	;wreg free
  8754  0188B8  0060  F007  FFE6   	movff	btemp,postinc1
  8755  0188BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8756  0188C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8757  0188CA  0060  F013  FFE6   	movff	btemp+3,postinc1
  8758  0188D0  0E00               	movlw	0
  8759  0188D2  6EE6               	movwf	postinc1,c
  8760  0188D4  ECAA  F0C9         	call	___xxtofl	;wreg free
  8761  0188D8  0060  F007  FFE6   	movff	btemp,postinc1
  8762  0188DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8763  0188E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8764  0188EA  0060  F013  FFE6   	movff	btemp+3,postinc1
  8765  0188F0  EC48  F0A5         	call	___flmul	;wreg free
  8766  0188F4  0060  F007  FFE6   	movff	btemp,postinc1
  8767  0188FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8768  018900  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8769  018906  0060  F013  FFE6   	movff	btemp+3,postinc1
  8770  01890C  EC46  F0D0         	call	___fltol	;wreg free
  8771  018910  0060  F007  FFE6   	movff	btemp,postinc1
  8772  018916  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8773  01891C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8774  018922  0060  F013  FFE6   	movff	btemp+3,postinc1
  8775  018928  ECBC  F0DC         	call	_Volts_to_SOC	;wreg free
  8776  01892C  0060  F004  F8B5   	movff	btemp,_C+182	;volatile
  8777  018932  0060  F008  F8B6   	movff	btemp+1,_C+183	;volatile
  8778                           
  8779                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8780  018938  EE22  F08B         	lfsr	2,_C+140	;volatile
  8781  01893C  006F FF7B FFE6     	movff	postinc2,postinc1
  8782  018942  006F FF7B FFE6     	movff	postinc2,postinc1
  8783  018948  006F FF7B FFE6     	movff	postinc2,postinc1
  8784  01894E  006F FF7B FFE6     	movff	postinc2,postinc1
  8785  018954  0E00               	movlw	0
  8786  018956  6EE6               	movwf	postinc1,c
  8787  018958  0E00               	movlw	0
  8788  01895A  6EE6               	movwf	postinc1,c
  8789  01895C  0EC8               	movlw	200
  8790  01895E  6EE6               	movwf	postinc1,c
  8791  018960  0E42               	movlw	66
  8792  018962  6EE6               	movwf	postinc1,c
  8793  018964  0E00               	movlw	0
  8794  018966  6EE6               	movwf	postinc1,c
  8795  018968  0E00               	movlw	0
  8796  01896A  6EE6               	movwf	postinc1,c
  8797  01896C  0E7A               	movlw	122
  8798  01896E  6EE6               	movwf	postinc1,c
  8799  018970  0E44               	movlw	68
  8800  018972  6EE6               	movwf	postinc1,c
  8801  018974  0E00               	movlw	0
  8802  018976  6EE6               	movwf	postinc1,c
  8803  018978  0E04               	movlw	4
  8804  01897A  6EE6               	movwf	postinc1,c
  8805  01897C  ECF8  F0AF         	call	_conv_raw_result	;wreg free
  8806  018980  0060  F007  FFE6   	movff	btemp,postinc1
  8807  018986  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8808  01898C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8809  018992  0060  F013  FFE6   	movff	btemp+3,postinc1
  8810  018998  EC46  F0D0         	call	___fltol	;wreg free
  8811  01899C  0060  F007  FFE6   	movff	btemp,postinc1
  8812  0189A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8813  0189A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8814  0189AE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8815  0189B4  0E00               	movlw	0
  8816  0189B6  6EE6               	movwf	postinc1,c
  8817  0189B8  ECAA  F0C9         	call	___xxtofl	;wreg free
  8818  0189BC  0060  F007  FFE6   	movff	btemp,postinc1
  8819  0189C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8820  0189C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8821  0189CE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8822  0189D4  EC48  F0A5         	call	___flmul	;wreg free
  8823  0189D8  0060  F007  FFE6   	movff	btemp,postinc1
  8824  0189DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8825  0189E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8826  0189EA  0060  F013  FFE6   	movff	btemp+3,postinc1
  8827  0189F0  EC46  F0D0         	call	___fltol	;wreg free
  8828  0189F4  0060  F007  FFE6   	movff	btemp,postinc1
  8829  0189FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8830  018A00  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8831  018A06  0060  F013  FFE6   	movff	btemp+3,postinc1
  8832  018A0C  ECBC  F0DC         	call	_Volts_to_SOC	;wreg free
  8833  018A10  0060  F004  F00B   	movff	btemp,btemp+10
  8834  018A16  0060  F008  F00C   	movff	btemp+1,btemp+11
  8835  018A1C  500B               	movf	(btemp+10)^0,w,c
  8836  018A1E  6E05               	movwf	(btemp+4)^0,c
  8837  018A20  500C               	movf	(btemp+11)^0,w,c
  8838  018A22  6E06               	movwf	(btemp+5)^0,c
  8839  018A24  6A07               	clrf	(btemp+6)^0,c
  8840  018A26  6A08               	clrf	(btemp+7)^0,c
  8841  018A28  0060  F017  FFE6   	movff	btemp+4,postinc1
  8842  018A2E  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8843  018A34  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8844  018A3A  0060  F023  FFE6   	movff	btemp+7,postinc1
  8845  018A40  0E00               	movlw	0
  8846  018A42  6EE6               	movwf	postinc1,c
  8847  018A44  ECAA  F0C9         	call	___xxtofl	;wreg free
  8848  018A48  0060  F007  FFE6   	movff	btemp,postinc1
  8849  018A4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8850  018A54  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8851  018A5A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8852  018A60  EC3B  F0AD         	call	___fldiv	;wreg free
  8853  018A64  0060  F007  FFE6   	movff	btemp,postinc1
  8854  018A6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8855  018A70  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8856  018A76  0060  F013  FFE6   	movff	btemp+3,postinc1
  8857  018A7C  EC48  F0A5         	call	___flmul	;wreg free
  8858  018A80  0060  F004  F88F   	movff	btemp,_C+144	;volatile
  8859  018A86  0060  F008  F890   	movff	btemp+1,_C+145	;volatile
  8860  018A8C  0060  F00C  F891   	movff	btemp+2,_C+146	;volatile
  8861  018A92  0060  F010  F892   	movff	btemp+3,_C+147	;volatile
  8862                           
  8863                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8864  018A98  EE22  F08F         	lfsr	2,_C+144	;volatile
  8865  018A9C  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  8866  018AA2  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  8867  018AA8  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  8868  018AAE  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  8869                           
  8870                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8871  018AB4  0E22               	movlw	low _calc_bsoc
  8872  018AB6  6EE6               	movwf	postinc1,c
  8873  018AB8  0E40               	movlw	high _calc_bsoc
  8874  018ABA  6EE6               	movwf	postinc1,c
  8875  018ABC  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8876  018ABE  6EE6               	movwf	postinc1,c
  8877  018AC0  EC3F  F0EB         	call	_TMR3_SetInterruptHandler	;wreg free
  8878                           
  8879                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8880  018AC4  0012               	return		;funcret
  8881  018AC6                     __end_of_init_bsoc:
  8882                           	opt callstack 0
  8883                           
  8884 ;; *************** function _Volts_to_SOC *****************
  8885 ;; Defined at:
  8886 ;;		line 175 in file "bsoc.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  cvoltage        4  [STACK] const unsigned long 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  soc             2  [STACK] unsigned short 
  8891 ;;  slot            1  [STACK] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  2  [STACK] unsigned short 
  8894 ;; Registers used:
  8895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8905 ;;Total ram usage:        0 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:   15
  8908 ;; This function calls:
  8909 ;;		Nothing
  8910 ;; This function is called by:
  8911 ;;		_init_bsoc
  8912 ;; This function uses a reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text20
  8916  01B978                     __ptext20:
  8917                           	opt callstack 0
  8918  01B978                     _Volts_to_SOC:
  8919                           	opt callstack 0
  8920                           
  8921                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8922  01B978  52E6               	movf	postinc1,f,c
  8923  01B97A  52E6               	movf	postinc1,f,c
  8924  01B97C  52E6               	movf	postinc1,f,c
  8925                           
  8926                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8927                           ;stkvar	_soc @ sp[(-3)+0]
  8928                           
  8929                           ;incstack = 0
  8930  01B97E  0EFD               	movlw	-3
  8931  01B980  6AE3               	clrf	plusw1,c
  8932  01B982  0EFE               	movlw	-2
  8933  01B984  6AE3               	clrf	plusw1,c
  8934                           
  8935                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8936                           ;stkvar	_slot @ sp[(-3)+2]
  8937  01B986  0EFF               	movlw	-1
  8938  01B988  6AE3               	clrf	plusw1,c
  8939  01B98A                     l11822:
  8940                           
  8941                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8942                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8943                           ;stkvar	_slot @ sp[(-3)+2]
  8944  01B98A  0EFF               	movlw	-1
  8945  01B98C  50E3               	movf	plusw1,w,c
  8946  01B98E  0D08               	mullw	8
  8947  01B990  0E7D               	movlw	low _BVSOC_TABLE
  8948  01B992  24F3               	addwf	243,w,c
  8949  01B994  6EF6               	movwf	tblptrl,c
  8950  01B996  0EF8               	movlw	high _BVSOC_TABLE
  8951  01B998  20F4               	addwfc	244,w,c
  8952  01B99A  6EF7               	movwf	tblptrh,c
  8953  01B99C                     	if	1	;There are 3 active tblptr bytes
  8954  01B99C  6AF8               	clrf	tblptru,c
  8955  01B99E  0E00               	movlw	low (__mediumconst shr (0+16))
  8956  01B9A0  22F8               	addwfc	tblptru,f,c
  8957  01B9A2                     	endif
  8958  01B9A2  0EF9               	movlw	-7
  8959  01B9A4  50E3               	movf	plusw1,w,c
  8960  01B9A6  0009               	tblrd		*+
  8961  01B9A8  5CF5               	subwf	tablat,w,c
  8962  01B9AA  0EFA               	movlw	-6
  8963  01B9AC  50E3               	movf	plusw1,w,c
  8964  01B9AE  0009               	tblrd		*+
  8965  01B9B0  58F5               	subwfb	tablat,w,c
  8966  01B9B2  0EFB               	movlw	-5
  8967  01B9B4  50E3               	movf	plusw1,w,c
  8968  01B9B6  0009               	tblrd		*+
  8969  01B9B8  58F5               	subwfb	tablat,w,c
  8970  01B9BA  0EFC               	movlw	-4
  8971  01B9BC  50E3               	movf	plusw1,w,c
  8972  01B9BE  0009               	tblrd		*+
  8973  01B9C0  58F5               	subwfb	tablat,w,c
  8974  01B9C2  B0D8               	btfsc	status,0,c
  8975  01B9C4  D020               	goto	l11826
  8976                           
  8977                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8978                           ;stkvar	_slot @ sp[(-3)+2]
  8979  01B9C6  0EFF               	movlw	-1
  8980  01B9C8  50E3               	movf	plusw1,w,c
  8981  01B9CA  0D08               	mullw	8
  8982  01B9CC  0E04               	movlw	4
  8983  01B9CE  26F3               	addwf	243,f,c
  8984  01B9D0  0E00               	movlw	0
  8985  01B9D2  22F4               	addwfc	244,f,c
  8986  01B9D4  0E7D               	movlw	low _BVSOC_TABLE
  8987  01B9D6  24F3               	addwf	243,w,c
  8988  01B9D8  6EF6               	movwf	tblptrl,c
  8989  01B9DA  0EF8               	movlw	high _BVSOC_TABLE
  8990  01B9DC  20F4               	addwfc	244,w,c
  8991  01B9DE  6EF7               	movwf	tblptrh,c
  8992  01B9E0                     	if	1	;There are 3 active tblptr bytes
  8993  01B9E0  6AF8               	clrf	tblptru,c
  8994  01B9E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8995  01B9E4  22F8               	addwfc	tblptru,f,c
  8996  01B9E6                     	endif
  8997  01B9E6  0009               	tblrd		*+
  8998  01B9E8  006F FFD4  F00B    	movff	tablat,btemp+10
  8999  01B9EE  0009               	tblrd		*+
  9000  01B9F0  006F FFD4  F00C    	movff	tablat,btemp+11
  9001                           
  9002                           ;stkvar	_soc @ sp[(-3)+0]
  9003  01B9F6  0EFD               	movlw	-3
  9004  01B9F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9005  01B9FE  0EFE               	movlw	-2
  9006  01BA00  0060  F033  FFE3   	movff	btemp+11,plusw1
  9007  01BA06                     l11826:
  9008                           
  9009                           ;bsoc.c: 187:  }
  9010                           ;stkvar	_slot @ sp[(-3)+2]
  9011  01BA06  0EFF               	movlw	-1
  9012  01BA08  2AE3               	incf	plusw1,f,c
  9013                           
  9014                           ;stkvar	_slot @ sp[(-3)+2]
  9015  01BA0A  0EFF               	movlw	-1
  9016  01BA0C  006F FF8C  F001    	movff	plusw1,btemp
  9017  01BA12  0E19               	movlw	25
  9018  01BA14  6401               	cpfsgt	btemp^0,c
  9019  01BA16  D7B9               	goto	l11822
  9020                           
  9021                           ;bsoc.c: 188:  return soc;
  9022                           ;stkvar	_soc @ sp[(-3)+0]
  9023  01BA18  0EFD               	movlw	-3
  9024  01BA1A  006F FF8C  F001    	movff	plusw1,btemp
  9025  01BA20  0EFE               	movlw	-2
  9026  01BA22  006F FF8C  F002    	movff	plusw1,btemp+1
  9027                           
  9028                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  9029  01BA28  0EF9               	movlw	249
  9030  01BA2A  26E1               	addwf	fsr1l,f,c
  9031  01BA2C  0EFF               	movlw	255
  9032  01BA2E  22E2               	addwfc	fsr1h,f,c
  9033  01BA30  0012               	return		;funcret
  9034  01BA32                     __end_of_Volts_to_SOC:
  9035                           	opt callstack 0
  9036                           
  9037 ;; *************** function _hid_display *****************
  9038 ;; Defined at:
  9039 ;;		line 22 in file "hid.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  h               2  [STACK] PTR struct H_data
  9042 ;;		 -> H(9), 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  2  [STACK] PTR struct H_data
  9047 ;; Registers used:
  9048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  9049 ;; Tracked objects:
  9050 ;;		On entry : 3F/39
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9058 ;;Total ram usage:        0 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:   17
  9061 ;; This function calls:
  9062 ;;		_hid_input
  9063 ;; This function is called by:
  9064 ;;		_main
  9065 ;; This function uses a reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text21
  9069  018F26                     __ptext21:
  9070                           	opt callstack 0
  9071  018F26                     _hid_display:
  9072                           	opt callstack 13
  9073                           
  9074                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  9075                           ;stkvar	_h @ sp[(0)+-2]
  9076                           
  9077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9078                           ;incstack = 0
  9079  018F26  0EFE               	movlw	-2
  9080  018F28  006F FF8F FFE6     	movff	plusw1,postinc1
  9081  018F2E  006F FF8F FFE6     	movff	plusw1,postinc1
  9082  018F34  EC49  F0D4         	call	_hid_input	;wreg free
  9083                           
  9084                           ;hid.c: 26:  switch (h->h_state) {
  9085  018F38  D0E6               	goto	l14586
  9086  018F3A                     l14560:
  9087                           
  9088                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  9089                           ;stkvar	_h @ sp[(0)+-2]
  9090  018F3A  0EFE               	movlw	-2
  9091  018F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9092  018F42  0EFF               	movlw	-1
  9093  018F44  006F FF8C  F00C    	movff	plusw1,btemp+11
  9094  018F4A  0E01               	movlw	1
  9095  018F4C  240B               	addwf	(btemp+10)^0,w,c
  9096  018F4E  6ED9               	movwf	fsr2l,c
  9097  018F50  0E00               	movlw	0
  9098  018F52  200C               	addwfc	(btemp+11)^0,w,c
  9099  018F54  6EDA               	movwf	fsr2h,c
  9100  018F56  0E01               	movlw	1
  9101  018F58  6EDF               	movwf	indf2,c
  9102                           
  9103                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  9104                           ;stkvar	_h @ sp[(0)+-2]
  9105  018F5A  0EFE               	movlw	-2
  9106  018F5C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9107  018F62  0EFF               	movlw	-1
  9108  018F64  006F FF8F FFDA     	movff	plusw1,fsr2h
  9109  018F6A  0E00               	movlw	0
  9110  018F6C  6EDF               	movwf	indf2,c
  9111                           
  9112                           ;hid.c: 30:   h->wait_enter = 1;
  9113                           ;stkvar	_h @ sp[(0)+-2]
  9114  018F6E  0EFE               	movlw	-2
  9115  018F70  006F FF8C  F00B    	movff	plusw1,btemp+10
  9116  018F76  0EFF               	movlw	-1
  9117  018F78  006F FF8C  F00C    	movff	plusw1,btemp+11
  9118  018F7E  0E04               	movlw	4
  9119  018F80  240B               	addwf	(btemp+10)^0,w,c
  9120  018F82  6ED9               	movwf	fsr2l,c
  9121  018F84  0E00               	movlw	0
  9122  018F86  200C               	addwfc	(btemp+11)^0,w,c
  9123  018F88  6EDA               	movwf	fsr2h,c
  9124  018F8A  0E01               	movlw	1
  9125  018F8C  6EDF               	movwf	indf2,c
  9126                           
  9127                           ;hid.c: 31:   h->wait_select = 1;
  9128                           ;stkvar	_h @ sp[(0)+-2]
  9129  018F8E  0EFE               	movlw	-2
  9130  018F90  006F FF8C  F00B    	movff	plusw1,btemp+10
  9131  018F96  0EFF               	movlw	-1
  9132  018F98  006F FF8C  F00C    	movff	plusw1,btemp+11
  9133  018F9E  0E02               	movlw	2
  9134  018FA0  240B               	addwf	(btemp+10)^0,w,c
  9135  018FA2  6ED9               	movwf	fsr2l,c
  9136  018FA4  0E00               	movlw	0
  9137  018FA6  200C               	addwfc	(btemp+11)^0,w,c
  9138  018FA8  6EDA               	movwf	fsr2h,c
  9139  018FAA  0E01               	movlw	1
  9140  018FAC  6EDF               	movwf	indf2,c
  9141                           
  9142                           ;hid.c: 32:   h->wait_calib = 1;
  9143                           ;stkvar	_h @ sp[(0)+-2]
  9144  018FAE  0EFE               	movlw	-2
  9145  018FB0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9146  018FB6  0EFF               	movlw	-1
  9147  018FB8  006F FF8C  F00C    	movff	plusw1,btemp+11
  9148  018FBE  0E06               	movlw	6
  9149  018FC0  240B               	addwf	(btemp+10)^0,w,c
  9150  018FC2  6ED9               	movwf	fsr2l,c
  9151  018FC4  0E00               	movlw	0
  9152  018FC6  200C               	addwfc	(btemp+11)^0,w,c
  9153  018FC8  6EDA               	movwf	fsr2h,c
  9154  018FCA  0E01               	movlw	1
  9155  018FCC  6EDF               	movwf	indf2,c
  9156                           
  9157                           ;hid.c: 33:   h->select_p = SW_OFF;
  9158                           ;stkvar	_h @ sp[(0)+-2]
  9159  018FCE  0EFE               	movlw	-2
  9160  018FD0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9161  018FD6  0EFF               	movlw	-1
  9162  018FD8  006F FF8C  F00C    	movff	plusw1,btemp+11
  9163  018FDE  0E03               	movlw	3
  9164  018FE0  240B               	addwf	(btemp+10)^0,w,c
  9165  018FE2  6ED9               	movwf	fsr2l,c
  9166  018FE4  0E00               	movlw	0
  9167  018FE6  200C               	addwfc	(btemp+11)^0,w,c
  9168  018FE8  6EDA               	movwf	fsr2h,c
  9169  018FEA  0E00               	movlw	0
  9170  018FEC  6EDF               	movwf	indf2,c
  9171                           
  9172                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9173                           ;stkvar	_h @ sp[(0)+-2]
  9174  018FEE  0EFE               	movlw	-2
  9175  018FF0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9176  018FF6  0EFF               	movlw	-1
  9177  018FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
  9178  018FFE  0E05               	movlw	5
  9179  019000  240B               	addwf	(btemp+10)^0,w,c
  9180  019002  6ED9               	movwf	fsr2l,c
  9181  019004  0E00               	movlw	0
  9182  019006  200C               	addwfc	(btemp+11)^0,w,c
  9183  019008  6EDA               	movwf	fsr2h,c
  9184  01900A  0E00               	movlw	0
  9185  01900C  6EDF               	movwf	indf2,c
  9186                           
  9187                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9188                           ;stkvar	_h @ sp[(0)+-2]
  9189  01900E  0EFE               	movlw	-2
  9190  019010  006F FF8C  F00B    	movff	plusw1,btemp+10
  9191  019016  0EFF               	movlw	-1
  9192  019018  006F FF8C  F00C    	movff	plusw1,btemp+11
  9193  01901E  0E07               	movlw	7
  9194  019020  240B               	addwf	(btemp+10)^0,w,c
  9195  019022  6ED9               	movwf	fsr2l,c
  9196  019024  0E00               	movlw	0
  9197  019026  200C               	addwfc	(btemp+11)^0,w,c
  9198  019028  6EDA               	movwf	fsr2h,c
  9199  01902A  0E00               	movlw	0
  9200  01902C  D06A               	goto	L5
  9201  01902E                     l14576:
  9202                           
  9203                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9204                           ;stkvar	_h @ sp[(0)+-2]
  9205  01902E  0EFE               	movlw	-2
  9206  019030  006F FF8C  F00B    	movff	plusw1,btemp+10
  9207  019036  0EFF               	movlw	-1
  9208  019038  006F FF8C  F00C    	movff	plusw1,btemp+11
  9209  01903E  0E02               	movlw	2
  9210  019040  240B               	addwf	(btemp+10)^0,w,c
  9211  019042  6ED9               	movwf	fsr2l,c
  9212  019044  0E00               	movlw	0
  9213  019046  200C               	addwfc	(btemp+11)^0,w,c
  9214  019048  6EDA               	movwf	fsr2h,c
  9215  01904A  50DF               	movf	indf2,w,c
  9216  01904C  A4D8               	btfss	status,2,c
  9217  01904E  D076               	goto	l2241
  9218                           
  9219                           ;stkvar	_h @ sp[(0)+-2]
  9220  019050  0EFE               	movlw	-2
  9221  019052  006F FF8C  F00B    	movff	plusw1,btemp+10
  9222  019058  0EFF               	movlw	-1
  9223  01905A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9224  019060  0E03               	movlw	3
  9225  019062  240B               	addwf	(btemp+10)^0,w,c
  9226  019064  6ED9               	movwf	fsr2l,c
  9227  019066  0E00               	movlw	0
  9228  019068  200C               	addwfc	(btemp+11)^0,w,c
  9229  01906A  6EDA               	movwf	fsr2h,c
  9230  01906C  50DF               	movf	indf2,w,c
  9231  01906E  A4D8               	btfss	status,2,c
  9232  019070  D065               	goto	l2241
  9233                           
  9234                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9235                           ;stkvar	_h @ sp[(0)+-2]
  9236  019072  0EFE               	movlw	-2
  9237  019074  006F FF8C  F00B    	movff	plusw1,btemp+10
  9238  01907A  0EFF               	movlw	-1
  9239  01907C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9240  019082  0E08               	movlw	8
  9241  019084  240B               	addwf	(btemp+10)^0,w,c
  9242  019086  6ED9               	movwf	fsr2l,c
  9243  019088  0E00               	movlw	0
  9244  01908A  200C               	addwfc	(btemp+11)^0,w,c
  9245  01908C  6EDA               	movwf	fsr2h,c
  9246                           
  9247                           ;stkvar	_h @ sp[(0)+-2]
  9248  01908E  0EFE               	movlw	-2
  9249  019090  006F FF8C  F00B    	movff	plusw1,btemp+10
  9250  019096  0EFF               	movlw	-1
  9251  019098  006F FF8C  F00C    	movff	plusw1,btemp+11
  9252  01909E  0E08               	movlw	8
  9253  0190A0  240B               	addwf	(btemp+10)^0,w,c
  9254  0190A2  6EE9               	movwf	fsr0l,c
  9255  0190A4  0E00               	movlw	0
  9256  0190A6  200C               	addwfc	(btemp+11)^0,w,c
  9257  0190A8  6EEA               	movwf	fsr0h,c
  9258  0190AA  2AEF               	incf	indf0,f,c
  9259  0190AC  50EF               	movf	indf0,w,c
  9260  0190AE  0B03               	andlw	3
  9261  0190B0  6EDF               	movwf	indf2,c
  9262                           
  9263                           ;hid.c: 41:    h->hid_display = h->sequence;
  9264                           ;stkvar	_h @ sp[(0)+-2]
  9265  0190B2  0EFE               	movlw	-2
  9266  0190B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9267  0190BA  0EFF               	movlw	-1
  9268  0190BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9269  0190C2  0E08               	movlw	8
  9270  0190C4  240B               	addwf	(btemp+10)^0,w,c
  9271  0190C6  6ED9               	movwf	fsr2l,c
  9272  0190C8  0E00               	movlw	0
  9273  0190CA  200C               	addwfc	(btemp+11)^0,w,c
  9274  0190CC  6EDA               	movwf	fsr2h,c
  9275                           
  9276                           ;stkvar	_h @ sp[(0)+-2]
  9277  0190CE  0EFE               	movlw	-2
  9278  0190D0  006F FF8F FFE9     	movff	plusw1,fsr0l
  9279  0190D6  0EFF               	movlw	-1
  9280  0190D8  006F FF8F FFEA     	movff	plusw1,fsr0h
  9281  0190DE  006F FF7F FFEF     	movff	indf2,indf0
  9282                           
  9283                           ;hid.c: 42:    h->wait_select = 1;
  9284                           ;stkvar	_h @ sp[(0)+-2]
  9285  0190E4  0EFE               	movlw	-2
  9286  0190E6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9287  0190EC  0EFF               	movlw	-1
  9288  0190EE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9289  0190F4  0E02               	movlw	2
  9290  0190F6  240B               	addwf	(btemp+10)^0,w,c
  9291  0190F8  6ED9               	movwf	fsr2l,c
  9292  0190FA  0E00               	movlw	0
  9293  0190FC  200C               	addwfc	(btemp+11)^0,w,c
  9294  0190FE  6EDA               	movwf	fsr2h,c
  9295  019100  0E01               	movlw	1
  9296  019102                     L5:
  9297  019102  6EDF               	movwf	indf2,c
  9298  019104  D01B               	goto	l2241
  9299  019106                     l14586:
  9300                           
  9301                           ;stkvar	_h @ sp[(0)+-2]
  9302  019106  0EFE               	movlw	-2
  9303  019108  006F FF8C  F00B    	movff	plusw1,btemp+10
  9304  01910E  0EFF               	movlw	-1
  9305  019110  006F FF8C  F00C    	movff	plusw1,btemp+11
  9306  019116  0E01               	movlw	1
  9307  019118  240B               	addwf	(btemp+10)^0,w,c
  9308  01911A  6ED9               	movwf	fsr2l,c
  9309  01911C  0E00               	movlw	0
  9310  01911E  200C               	addwfc	(btemp+11)^0,w,c
  9311  019120  6EDA               	movwf	fsr2h,c
  9312  019122  50DF               	movf	indf2,w,c
  9313  019124  6E0B               	movwf	(btemp+10)^0,c
  9314  019126  6A0C               	clrf	(btemp+11)^0,c
  9315                           
  9316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9317                           ; Switch size 1, requested type "simple"
  9318                           ; Number of cases is 1, Range of values is 0 to 0
  9319                           ; switch strategies available:
  9320                           ; Name         Instructions Cycles
  9321                           ; simple_byte            4     3 (average)
  9322                           ;	Chosen strategy is simple_byte
  9323  019128  500C               	movf	(btemp+11)^0,w,c
  9324  01912A  0A00               	xorlw	0	; case 0
  9325  01912C  A4D8               	btfss	status,2,c
  9326  01912E  D77F               	goto	l14576
  9327                           
  9328                           ; Switch size 1, requested type "simple"
  9329                           ; Number of cases is 2, Range of values is 0 to 1
  9330                           ; switch strategies available:
  9331                           ; Name         Instructions Cycles
  9332                           ; simple_byte            7     4 (average)
  9333                           ;	Chosen strategy is simple_byte
  9334  019130  500B               	movf	(btemp+10)^0,w,c
  9335  019132  0A00               	xorlw	0	; case 0
  9336  019134  B4D8               	btfsc	status,2,c
  9337  019136  D701               	goto	l14560
  9338  019138  0A01               	xorlw	1	; case 1
  9339  01913A  D779               	goto	l14576
  9340  01913C                     l2241:
  9341                           
  9342                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  9343  01913C  52E5               	movf	postdec1,f,c
  9344  01913E  52E5               	movf	postdec1,f,c
  9345  019140  0012               	return		;funcret
  9346  019142                     __end_of_hid_display:
  9347                           	opt callstack 0
  9348                           
  9349 ;; *************** function _hid_input *****************
  9350 ;; Defined at:
  9351 ;;		line 3 in file "hid.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;  h               2  [STACK] PTR struct H_data
  9354 ;;		 -> H(9), 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;		None
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  2  [STACK] PTR struct H_data
  9359 ;; Registers used:
  9360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/39
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9370 ;;Total ram usage:        0 bytes
  9371 ;; Hardware stack levels used:    1
  9372 ;; Hardware stack levels required when called:   16
  9373 ;; This function calls:
  9374 ;;		_get_switch
  9375 ;; This function is called by:
  9376 ;;		_hid_display
  9377 ;; This function uses a reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text22
  9381  01A892                     __ptext22:
  9382                           	opt callstack 0
  9383  01A892                     _hid_input:
  9384                           	opt callstack 13
  9385                           
  9386                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9387                           
  9388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9389                           ;incstack = 0
  9390  01A892  0E02               	movlw	2
  9391  01A894  6EE6               	movwf	postinc1,c
  9392  01A896  EC5C  F0EA         	call	_get_switch	;wreg free
  9393  01A89A  5001               	movf	btemp^0,w,c
  9394  01A89C  B4D8               	btfsc	status,2,c
  9395  01A89E  D02C               	goto	l14242
  9396                           
  9397                           ;hid.c: 6:   h->wait_select = 0;
  9398                           ;stkvar	_h @ sp[(0)+-2]
  9399  01A8A0  0EFE               	movlw	-2
  9400  01A8A2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9401  01A8A8  0EFF               	movlw	-1
  9402  01A8AA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9403  01A8B0  0E02               	movlw	2
  9404  01A8B2  240B               	addwf	(btemp+10)^0,w,c
  9405  01A8B4  6ED9               	movwf	fsr2l,c
  9406  01A8B6  0E00               	movlw	0
  9407  01A8B8  200C               	addwfc	(btemp+11)^0,w,c
  9408  01A8BA  6EDA               	movwf	fsr2h,c
  9409  01A8BC  0E00               	movlw	0
  9410  01A8BE  6EDF               	movwf	indf2,c
  9411                           
  9412                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9413  01A8C0  0E02               	movlw	2
  9414  01A8C2  6EE6               	movwf	postinc1,c
  9415  01A8C4  EC5C  F0EA         	call	_get_switch	;wreg free
  9416  01A8C8  5001               	movf	btemp^0,w,c
  9417  01A8CA  B4D8               	btfsc	status,2,c
  9418  01A8CC  D003               	goto	u13490
  9419  01A8CE  6A0C               	clrf	(btemp+11)^0,c
  9420  01A8D0  2A0C               	incf	(btemp+11)^0,f,c
  9421  01A8D2  D001               	goto	u13508
  9422  01A8D4                     u13490:
  9423  01A8D4  6A0C               	clrf	(btemp+11)^0,c
  9424  01A8D6                     u13508:
  9425                           
  9426                           ;stkvar	_h @ sp[(0)+-2]
  9427  01A8D6  0EFE               	movlw	-2
  9428  01A8D8  006F FF8C  F009    	movff	plusw1,btemp+8
  9429  01A8DE  0EFF               	movlw	-1
  9430  01A8E0  006F FF8C  F00A    	movff	plusw1,btemp+9
  9431  01A8E6  0E03               	movlw	3
  9432  01A8E8  2409               	addwf	(btemp+8)^0,w,c
  9433  01A8EA  6ED9               	movwf	fsr2l,c
  9434  01A8EC  0E00               	movlw	0
  9435  01A8EE  200A               	addwfc	(btemp+9)^0,w,c
  9436  01A8F0  6EDA               	movwf	fsr2h,c
  9437  01A8F2  0060  F033  FFDF   	movff	btemp+11,indf2
  9438  01A8F8                     l14242:
  9439                           
  9440                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9441  01A8F8  0E03               	movlw	3
  9442  01A8FA  6EE6               	movwf	postinc1,c
  9443  01A8FC  EC5C  F0EA         	call	_get_switch	;wreg free
  9444  01A900  5001               	movf	btemp^0,w,c
  9445  01A902  B4D8               	btfsc	status,2,c
  9446  01A904  D02C               	goto	l14248
  9447                           
  9448                           ;hid.c: 11:   h->wait_enter = 0;
  9449                           ;stkvar	_h @ sp[(0)+-2]
  9450  01A906  0EFE               	movlw	-2
  9451  01A908  006F FF8C  F00B    	movff	plusw1,btemp+10
  9452  01A90E  0EFF               	movlw	-1
  9453  01A910  006F FF8C  F00C    	movff	plusw1,btemp+11
  9454  01A916  0E04               	movlw	4
  9455  01A918  240B               	addwf	(btemp+10)^0,w,c
  9456  01A91A  6ED9               	movwf	fsr2l,c
  9457  01A91C  0E00               	movlw	0
  9458  01A91E  200C               	addwfc	(btemp+11)^0,w,c
  9459  01A920  6EDA               	movwf	fsr2h,c
  9460  01A922  0E00               	movlw	0
  9461  01A924  6EDF               	movwf	indf2,c
  9462                           
  9463                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9464  01A926  0E03               	movlw	3
  9465  01A928  6EE6               	movwf	postinc1,c
  9466  01A92A  EC5C  F0EA         	call	_get_switch	;wreg free
  9467  01A92E  5001               	movf	btemp^0,w,c
  9468  01A930  B4D8               	btfsc	status,2,c
  9469  01A932  D003               	goto	u13520
  9470  01A934  6A0C               	clrf	(btemp+11)^0,c
  9471  01A936  2A0C               	incf	(btemp+11)^0,f,c
  9472  01A938  D001               	goto	u13538
  9473  01A93A                     u13520:
  9474  01A93A  6A0C               	clrf	(btemp+11)^0,c
  9475  01A93C                     u13538:
  9476                           
  9477                           ;stkvar	_h @ sp[(0)+-2]
  9478  01A93C  0EFE               	movlw	-2
  9479  01A93E  006F FF8C  F009    	movff	plusw1,btemp+8
  9480  01A944  0EFF               	movlw	-1
  9481  01A946  006F FF8C  F00A    	movff	plusw1,btemp+9
  9482  01A94C  0E05               	movlw	5
  9483  01A94E  2409               	addwf	(btemp+8)^0,w,c
  9484  01A950  6ED9               	movwf	fsr2l,c
  9485  01A952  0E00               	movlw	0
  9486  01A954  200A               	addwfc	(btemp+9)^0,w,c
  9487  01A956  6EDA               	movwf	fsr2h,c
  9488  01A958  0060  F033  FFDF   	movff	btemp+11,indf2
  9489  01A95E                     l14248:
  9490                           
  9491                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9492  01A95E  0E04               	movlw	4
  9493  01A960  6EE6               	movwf	postinc1,c
  9494  01A962  EC5C  F0EA         	call	_get_switch	;wreg free
  9495  01A966  5001               	movf	btemp^0,w,c
  9496  01A968  B4D8               	btfsc	status,2,c
  9497  01A96A  D02C               	goto	l2232
  9498                           
  9499                           ;hid.c: 16:   h->wait_calib = 0;
  9500                           ;stkvar	_h @ sp[(0)+-2]
  9501  01A96C  0EFE               	movlw	-2
  9502  01A96E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9503  01A974  0EFF               	movlw	-1
  9504  01A976  006F FF8C  F00C    	movff	plusw1,btemp+11
  9505  01A97C  0E06               	movlw	6
  9506  01A97E  240B               	addwf	(btemp+10)^0,w,c
  9507  01A980  6ED9               	movwf	fsr2l,c
  9508  01A982  0E00               	movlw	0
  9509  01A984  200C               	addwfc	(btemp+11)^0,w,c
  9510  01A986  6EDA               	movwf	fsr2h,c
  9511  01A988  0E00               	movlw	0
  9512  01A98A  6EDF               	movwf	indf2,c
  9513                           
  9514                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9515  01A98C  0E04               	movlw	4
  9516  01A98E  6EE6               	movwf	postinc1,c
  9517  01A990  EC5C  F0EA         	call	_get_switch	;wreg free
  9518  01A994  5001               	movf	btemp^0,w,c
  9519  01A996  B4D8               	btfsc	status,2,c
  9520  01A998  D003               	goto	u13550
  9521  01A99A  6A0C               	clrf	(btemp+11)^0,c
  9522  01A99C  2A0C               	incf	(btemp+11)^0,f,c
  9523  01A99E  D001               	goto	u13568
  9524  01A9A0                     u13550:
  9525  01A9A0  6A0C               	clrf	(btemp+11)^0,c
  9526  01A9A2                     u13568:
  9527                           
  9528                           ;stkvar	_h @ sp[(0)+-2]
  9529  01A9A2  0EFE               	movlw	-2
  9530  01A9A4  006F FF8C  F009    	movff	plusw1,btemp+8
  9531  01A9AA  0EFF               	movlw	-1
  9532  01A9AC  006F FF8C  F00A    	movff	plusw1,btemp+9
  9533  01A9B2  0E07               	movlw	7
  9534  01A9B4  2409               	addwf	(btemp+8)^0,w,c
  9535  01A9B6  6ED9               	movwf	fsr2l,c
  9536  01A9B8  0E00               	movlw	0
  9537  01A9BA  200A               	addwfc	(btemp+9)^0,w,c
  9538  01A9BC  6EDA               	movwf	fsr2h,c
  9539  01A9BE  0060  F033  FFDF   	movff	btemp+11,indf2
  9540  01A9C4                     l2232:
  9541                           
  9542                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  9543  01A9C4  52E5               	movf	postdec1,f,c
  9544  01A9C6  52E5               	movf	postdec1,f,c
  9545  01A9C8  0012               	return		;funcret
  9546  01A9CA                     __end_of_hid_input:
  9547                           	opt callstack 0
  9548                           
  9549 ;; *************** function _esr_check *****************
  9550 ;; Defined at:
  9551 ;;		line 197 in file "bsoc.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;  fsm             1  [STACK] const unsigned char 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  4  [STACK] float 
  9558 ;; Registers used:
  9559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9569 ;;Total ram usage:        0 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:   18
  9572 ;; This function calls:
  9573 ;;		_StartTimer
  9574 ;;		_TimerDone
  9575 ;;		___fldiv
  9576 ;;		___flsub
  9577 ;;		_conv_raw_result
  9578 ;;		_fabsf
  9579 ;;		_set_load_relay_one
  9580 ;;		_set_load_relay_two
  9581 ;;		_update_adc_result
  9582 ;; This function is called by:
  9583 ;;		_main
  9584 ;; This function uses a reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text23
  9588  017DF6                     __ptext23:
  9589                           	opt callstack 0
  9590  017DF6                     _esr_check:
  9591                           	opt callstack 12
  9592                           
  9593                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9594                           ;stkvar	_fsm @ sp[(0)+-1]
  9595                           
  9596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9597                           ;incstack = 0
  9598  017DF6  0EFF               	movlw	-1
  9599  017DF8  50E3               	movf	plusw1,w,c
  9600  017DFA  B4D8               	btfsc	status,2,c
  9601  017DFC  D149               	goto	l12210
  9602                           
  9603                           ;bsoc.c: 202:   esr_state = 0;
  9604  017DFE  0100               	movlb	0	; () banked
  9605  017E00  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;bsoc.c: 203:   return -10.0;
  9609  017E02  0E00               	movlw	0
  9610  017E04  6E01               	movwf	btemp^0,c
  9611  017E06  0E00               	movlw	0
  9612  017E08  6E02               	movwf	(btemp+1)^0,c
  9613  017E0A  0E20               	movlw	32
  9614  017E0C  6E03               	movwf	(btemp+2)^0,c
  9615  017E0E  0EC1               	movlw	193
  9616  017E10  D15B               	goto	L6
  9617  017E12                     l12142:
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9621  017E12  0E10               	movlw	16
  9622  017E14  6EE6               	movwf	postinc1,c
  9623  017E16  0E27               	movlw	39
  9624  017E18  6EE6               	movwf	postinc1,c
  9625  017E1A  0E0C               	movlw	12
  9626  017E1C  6EE6               	movwf	postinc1,c
  9627  017E1E  EC57  F0E8         	call	_StartTimer	;wreg free
  9628  017E22                     l12144:
  9629                           
  9630                           ;bsoc.c: 209:   esr_state++;
  9631  017E22  0100               	movlb	0	; () banked
  9632  017E24  2BA0               	incf	esr_check@esr_state& (0+255),f,b
  9633                           
  9634                           ;bsoc.c: 210:   break;
  9635  017E26  D149               	goto	l12212
  9636  017E28                     l12146:
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;bsoc.c: 215:   set_load_relay_one(0);
  9640  017E28  0E00               	movlw	0
  9641  017E2A  6EE6               	movwf	postinc1,c
  9642  017E2C  EC6D  F0ED         	call	_set_load_relay_one	;wreg free
  9643                           
  9644                           ;bsoc.c: 216:   set_load_relay_two(0);
  9645  017E30  0E00               	movlw	0
  9646  017E32  6EE6               	movwf	postinc1,c
  9647  017E34  EC65  F0ED         	call	_set_load_relay_two	;wreg free
  9648                           
  9649                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9650  017E38  0E0C               	movlw	12
  9651  017E3A  6EE6               	movwf	postinc1,c
  9652  017E3C  ECC7  F0EA         	call	_TimerDone	;wreg free
  9653  017E40  5001               	movf	btemp^0,w,c
  9654  017E42  B4D8               	btfsc	status,2,c
  9655  017E44  D009               	goto	l12152
  9656                           
  9657                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9658  017E46  0E10               	movlw	16
  9659  017E48  6EE6               	movwf	postinc1,c
  9660  017E4A  0E27               	movlw	39
  9661  017E4C  6EE6               	movwf	postinc1,c
  9662  017E4E  0E0C               	movlw	12
  9663  017E50  6EE6               	movwf	postinc1,c
  9664  017E52  EC57  F0E8         	call	_StartTimer	;wreg free
  9665                           
  9666                           ;bsoc.c: 219:   } else {
  9667  017E56  D006               	goto	l12156
  9668  017E58                     l12152:
  9669                           
  9670                           ;bsoc.c: 220:    return -2.0;
  9671  017E58  0E00               	movlw	0
  9672  017E5A  6E01               	movwf	btemp^0,c
  9673  017E5C  0E00               	movlw	0
  9674  017E5E  6E02               	movwf	(btemp+1)^0,c
  9675  017E60  0E00               	movlw	0
  9676  017E62  D066               	goto	L8
  9677  017E64                     l12156:
  9678                           
  9679                           ;bsoc.c: 225:   update_adc_result();
  9680  017E64  ECD7  F0E8         	call	_update_adc_result	;wreg free
  9681                           
  9682                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9683  017E68  0E00               	movlw	0
  9684  017E6A  6EE6               	movwf	postinc1,c
  9685  017E6C  0E04               	movlw	4
  9686  017E6E  6EE6               	movwf	postinc1,c
  9687  017E70  ECF8  F0AF         	call	_conv_raw_result	;wreg free
  9688  017E74  0060  F004  F915   	movff	btemp,_C+278	;volatile
  9689  017E7A  0060  F008  F916   	movff	btemp+1,_C+279	;volatile
  9690  017E80  0060  F00C  F917   	movff	btemp+2,_C+280	;volatile
  9691  017E86  0060  F010  F918   	movff	btemp+3,_C+281	;volatile
  9692  017E8C  D7CA               	goto	l12144
  9693  017E8E                     l12162:
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;bsoc.c: 230:   set_load_relay_one(1);
  9697  017E8E  0E01               	movlw	1
  9698  017E90  6EE6               	movwf	postinc1,c
  9699  017E92  EC6D  F0ED         	call	_set_load_relay_one	;wreg free
  9700                           
  9701                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9702  017E96  0E0C               	movlw	12
  9703  017E98  6EE6               	movwf	postinc1,c
  9704  017E9A  ECC7  F0EA         	call	_TimerDone	;wreg free
  9705  017E9E  5001               	movf	btemp^0,w,c
  9706  017EA0  B4D8               	btfsc	status,2,c
  9707  017EA2  D009               	goto	l12168
  9708                           
  9709                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9710  017EA4  0E10               	movlw	16
  9711  017EA6  6EE6               	movwf	postinc1,c
  9712  017EA8  0E27               	movlw	39
  9713  017EAA  6EE6               	movwf	postinc1,c
  9714  017EAC  0E0C               	movlw	12
  9715  017EAE  6EE6               	movwf	postinc1,c
  9716  017EB0  EC57  F0E8         	call	_StartTimer	;wreg free
  9717                           
  9718                           ;bsoc.c: 233:   } else {
  9719  017EB4  D006               	goto	l12172
  9720  017EB6                     l12168:
  9721                           
  9722                           ;bsoc.c: 234:    return -3.0;
  9723  017EB6  0E00               	movlw	0
  9724  017EB8  6E01               	movwf	btemp^0,c
  9725  017EBA  0E00               	movlw	0
  9726  017EBC  6E02               	movwf	(btemp+1)^0,c
  9727  017EBE  0E40               	movlw	64
  9728  017EC0  D037               	goto	L8
  9729  017EC2                     l12172:
  9730                           
  9731                           ;bsoc.c: 237:   update_adc_result();
  9732  017EC2  ECD7  F0E8         	call	_update_adc_result	;wreg free
  9733                           
  9734                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9735  017EC6  0E00               	movlw	0
  9736  017EC8  6EE6               	movwf	postinc1,c
  9737  017ECA  0E04               	movlw	4
  9738  017ECC  6EE6               	movwf	postinc1,c
  9739  017ECE  ECF8  F0AF         	call	_conv_raw_result	;wreg free
  9740  017ED2  0060  F004  F919   	movff	btemp,_C+282	;volatile
  9741  017ED8  0060  F008  F91A   	movff	btemp+1,_C+283	;volatile
  9742  017EDE  0060  F00C  F91B   	movff	btemp+2,_C+284	;volatile
  9743  017EE4  0060  F010  F91C   	movff	btemp+3,_C+285	;volatile
  9744                           
  9745                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9746  017EEA  0E00               	movlw	0
  9747  017EEC  6EE6               	movwf	postinc1,c
  9748  017EEE  0E00               	movlw	0
  9749  017EF0  6EE6               	movwf	postinc1,c
  9750  017EF2  ECF8  F0AF         	call	_conv_raw_result	;wreg free
  9751  017EF6  0060  F004  F90D   	movff	btemp,_C+270	;volatile
  9752  017EFC  0060  F008  F90E   	movff	btemp+1,_C+271	;volatile
  9753  017F02  0060  F00C  F90F   	movff	btemp+2,_C+272	;volatile
  9754  017F08  0060  F010  F910   	movff	btemp+3,_C+273	;volatile
  9755  017F0E  D789               	goto	l12144
  9756  017F10                     l12180:
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;bsoc.c: 243:   set_load_relay_two(1);
  9760  017F10  0E01               	movlw	1
  9761  017F12  6EE6               	movwf	postinc1,c
  9762  017F14  EC65  F0ED         	call	_set_load_relay_two	;wreg free
  9763                           
  9764                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9765  017F18  0E0C               	movlw	12
  9766  017F1A  6EE6               	movwf	postinc1,c
  9767  017F1C  ECC7  F0EA         	call	_TimerDone	;wreg free
  9768  017F20  5001               	movf	btemp^0,w,c
  9769  017F22  A4D8               	btfss	status,2,c
  9770  017F24  D008               	goto	l12188
  9771                           
  9772                           ;bsoc.c: 245:    return -4.0;
  9773  017F26  0E00               	movlw	0
  9774  017F28  6E01               	movwf	btemp^0,c
  9775  017F2A  0E00               	movlw	0
  9776  017F2C  6E02               	movwf	(btemp+1)^0,c
  9777  017F2E  0E80               	movlw	128
  9778  017F30                     L8:
  9779  017F30  6E03               	movwf	(btemp+2)^0,c
  9780  017F32  0EC0               	movlw	192
  9781  017F34  D0C9               	goto	L6
  9782  017F36                     l12188:
  9783                           
  9784                           ;bsoc.c: 247:   update_adc_result();
  9785  017F36  ECD7  F0E8         	call	_update_adc_result	;wreg free
  9786                           
  9787                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9788  017F3A  0E00               	movlw	0
  9789  017F3C  6EE6               	movwf	postinc1,c
  9790  017F3E  0E04               	movlw	4
  9791  017F40  6EE6               	movwf	postinc1,c
  9792  017F42  ECF8  F0AF         	call	_conv_raw_result	;wreg free
  9793  017F46  0060  F004  F91D   	movff	btemp,_C+286	;volatile
  9794  017F4C  0060  F008  F91E   	movff	btemp+1,_C+287	;volatile
  9795  017F52  0060  F00C  F91F   	movff	btemp+2,_C+288	;volatile
  9796  017F58  0060  F010  F920   	movff	btemp+3,_C+289	;volatile
  9797                           
  9798                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9799  017F5E  0E00               	movlw	0
  9800  017F60  6EE6               	movwf	postinc1,c
  9801  017F62  0E00               	movlw	0
  9802  017F64  6EE6               	movwf	postinc1,c
  9803  017F66  ECF8  F0AF         	call	_conv_raw_result	;wreg free
  9804  017F6A  0060  F004  F911   	movff	btemp,_C+274	;volatile
  9805  017F70  0060  F008  F912   	movff	btemp+1,_C+275	;volatile
  9806  017F76  0060  F00C  F913   	movff	btemp+2,_C+276	;volatile
  9807  017F7C  0060  F010  F914   	movff	btemp+3,_C+277	;volatile
  9808                           
  9809                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9810  017F82  EE22  F111         	lfsr	2,_C+274	;volatile
  9811  017F86  006F FF7B FFE6     	movff	postinc2,postinc1
  9812  017F8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9813  017F92  006F FF7B FFE6     	movff	postinc2,postinc1
  9814  017F98  006F FF7B FFE6     	movff	postinc2,postinc1
  9815  017F9E  EE22  F10D         	lfsr	2,_C+270	;volatile
  9816  017FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  9817  017FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  9818  017FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  9819  017FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  9820  017FBA  ECB1  F0E7         	call	___flsub	;wreg free
  9821  017FBE  0060  F007  FFE6   	movff	btemp,postinc1
  9822  017FC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9823  017FCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9824  017FD0  0060  F013  FFE6   	movff	btemp+3,postinc1
  9825  017FD6  EE22  F11D         	lfsr	2,_C+286	;volatile
  9826  017FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  9827  017FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  9828  017FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  9829  017FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  9830  017FF2  EE22  F119         	lfsr	2,_C+282	;volatile
  9831  017FF6  006F FF7B FFE6     	movff	postinc2,postinc1
  9832  017FFC  006F FF7B FFE6     	movff	postinc2,postinc1
  9833  018002  006F FF7B FFE6     	movff	postinc2,postinc1
  9834  018008  006F FF7B FFE6     	movff	postinc2,postinc1
  9835  01800E  ECB1  F0E7         	call	___flsub	;wreg free
  9836  018012  0060  F007  FFE6   	movff	btemp,postinc1
  9837  018018  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9838  01801E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9839  018024  0060  F013  FFE6   	movff	btemp+3,postinc1
  9840  01802A  EC3B  F0AD         	call	___fldiv	;wreg free
  9841  01802E  0060  F007  FFE6   	movff	btemp,postinc1
  9842  018034  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9843  01803A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9844  018040  0060  F013  FFE6   	movff	btemp+3,postinc1
  9845  018046  EC2D  F0DE         	call	_fabsf	;wreg free
  9846  01804A  0060  F004  F887   	movff	btemp,_C+136	;volatile
  9847  018050  0060  F008  F888   	movff	btemp+1,_C+137	;volatile
  9848  018056  0060  F00C  F889   	movff	btemp+2,_C+138	;volatile
  9849  01805C  0060  F010  F88A   	movff	btemp+3,_C+139	;volatile
  9850                           
  9851                           ;bsoc.c: 252:   set_load_relay_one(0);
  9852  018062  0E00               	movlw	0
  9853  018064  6EE6               	movwf	postinc1,c
  9854  018066  EC6D  F0ED         	call	_set_load_relay_one	;wreg free
  9855                           
  9856                           ;bsoc.c: 253:   set_load_relay_two(0);
  9857  01806A  0E00               	movlw	0
  9858  01806C  6EE6               	movwf	postinc1,c
  9859  01806E  EC65  F0ED         	call	_set_load_relay_two	;wreg free
  9860                           
  9861                           ;bsoc.c: 254:   esr_state = 0;
  9862  018072  0100               	movlb	0	; () banked
  9863  018074  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;bsoc.c: 255:   return C.esr;
  9867  018076  0062  F21C  F001   	movff	_C+136,btemp	;volatile
  9868  01807C  0062  F220  F002   	movff	_C+137,btemp+1	;volatile
  9869  018082  0062  F224  F003   	movff	_C+138,btemp+2	;volatile
  9870  018088  0062  F228  F004   	movff	_C+139,btemp+3	;volatile
  9871  01808E  D01D               	goto	l2357
  9872  018090                     l12210:
  9873  018090  0100               	movlb	0	; () banked
  9874  018092  51A0               	movf	esr_check@esr_state& (0+255),w,b
  9875  018094  6E0B               	movwf	(btemp+10)^0,c
  9876  018096  6A0C               	clrf	(btemp+11)^0,c
  9877                           
  9878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9879                           ; Switch size 1, requested type "simple"
  9880                           ; Number of cases is 1, Range of values is 0 to 0
  9881                           ; switch strategies available:
  9882                           ; Name         Instructions Cycles
  9883                           ; simple_byte            4     3 (average)
  9884                           ;	Chosen strategy is simple_byte
  9885  018098  500C               	movf	(btemp+11)^0,w,c
  9886  01809A  0A00               	xorlw	0	; case 0
  9887  01809C  A4D8               	btfss	status,2,c
  9888  01809E  D00D               	goto	l12212
  9889                           
  9890                           ; BSR set to: 0
  9891                           ; Switch size 1, requested type "simple"
  9892                           ; Number of cases is 4, Range of values is 0 to 3
  9893                           ; switch strategies available:
  9894                           ; Name         Instructions Cycles
  9895                           ; simple_byte           13     7 (average)
  9896                           ;	Chosen strategy is simple_byte
  9897  0180A0  500B               	movf	(btemp+10)^0,w,c
  9898  0180A2  0A00               	xorlw	0	; case 0
  9899  0180A4  B4D8               	btfsc	status,2,c
  9900  0180A6  D6B5               	goto	l12142
  9901  0180A8  0A01               	xorlw	1	; case 1
  9902  0180AA  B4D8               	btfsc	status,2,c
  9903  0180AC  D6BD               	goto	l12146
  9904  0180AE  0A03               	xorlw	3	; case 2
  9905  0180B0  B4D8               	btfsc	status,2,c
  9906  0180B2  D6ED               	goto	l12162
  9907  0180B4  0A01               	xorlw	1	; case 3
  9908  0180B6  B4D8               	btfsc	status,2,c
  9909  0180B8  D72B               	goto	l12180
  9910  0180BA                     l12212:
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;bsoc.c: 260:  return -1.0;
  9914  0180BA  0E00               	movlw	0
  9915  0180BC  6E01               	movwf	btemp^0,c
  9916  0180BE  0E00               	movlw	0
  9917  0180C0  6E02               	movwf	(btemp+1)^0,c
  9918  0180C2  0E80               	movlw	128
  9919  0180C4  6E03               	movwf	(btemp+2)^0,c
  9920  0180C6  0EBF               	movlw	191
  9921  0180C8                     L6:
  9922  0180C8  6E04               	movwf	(btemp+3)^0,c
  9923  0180CA                     l2357:
  9924                           
  9925                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9926  0180CA  52E5               	movf	postdec1,f,c
  9927  0180CC  0012               	return		;funcret
  9928  0180CE                     __end_of_esr_check:
  9929                           	opt callstack 0
  9930                           
  9931 ;; *************** function _update_adc_result *****************
  9932 ;; Defined at:
  9933 ;;		line 104 in file "daq.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;		None
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1  [STACK] _Bool 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9951 ;;Total ram usage:        0 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:   17
  9954 ;; This function calls:
  9955 ;;		_StartTimer
  9956 ;;		_TimerDone
  9957 ;;		_check_adc_scan
  9958 ;;		_clear_adc_scan
  9959 ;;		_start_adc_scan
  9960 ;; This function is called by:
  9961 ;;		_esr_check
  9962 ;; This function uses a reentrant model
  9963 ;;
  9964                           
  9965                           	psect	text24
  9966  01D1AE                     __ptext24:
  9967                           	opt callstack 0
  9968  01D1AE                     _update_adc_result:
  9969                           	opt callstack 12
  9970                           
  9971                           ;daq.c: 106:  if (R.done) {
  9972                           
  9973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9974                           ;incstack = 0
  9975  01D1AE  0100               	movlb	0	; () banked
  9976  01D1B0  51E3               	movf	(_R+53)& (0+255),w,b	;volatile
  9977  01D1B2  B4D8               	btfsc	status,2,c
  9978  01D1B4  0012               	return	
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;daq.c: 107:   clear_adc_scan();
  9982  01D1B6  ECE4  F0ED         	call	_clear_adc_scan	;wreg free
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;daq.c: 108:   start_adc_scan();
  9986  01D1BA  ECC7  F0E4         	call	_start_adc_scan	;wreg free
  9987                           
  9988                           ;daq.c: 109:   StartTimer(TMR_ADC, 200);
  9989  01D1BE  0EC8               	movlw	200
  9990  01D1C0  6EE6               	movwf	postinc1,c
  9991  01D1C2  0E00               	movlw	0
  9992  01D1C4  6EE6               	movwf	postinc1,c
  9993  01D1C6  0E01               	movlw	1
  9994  01D1C8  6EE6               	movwf	postinc1,c
  9995  01D1CA  EC57  F0E8         	call	_StartTimer	;wreg free
  9996  01D1CE                     l11610:
  9997  01D1CE  0E01               	movlw	1
  9998  01D1D0  6EE6               	movwf	postinc1,c
  9999  01D1D2  ECC7  F0EA         	call	_TimerDone	;wreg free
 10000  01D1D6  5001               	movf	btemp^0,w,c
 10001  01D1D8  A4D8               	btfss	status,2,c
 10002  01D1DA  0012               	return	
 10003  01D1DC  ECCD  F0ED         	call	_check_adc_scan	;wreg free
 10004  01D1E0  5001               	movf	btemp^0,w,c
 10005  01D1E2  A4D8               	btfss	status,2,c
 10006  01D1E4  0012               	return	
 10007  01D1E6  D7F3               	goto	l11610
 10008  01D1E8                     __end_of_update_adc_result:
 10009                           	opt callstack 0
 10010                           
 10011 ;; *************** function _check_adc_scan *****************
 10012 ;; Defined at:
 10013 ;;		line 88 in file "daq.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;		None
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1  [STACK] _Bool 
 10020 ;; Registers used:
 10021 ;;		btemp
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/1
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10031 ;;Total ram usage:        0 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:   15
 10034 ;; This function calls:
 10035 ;;		Nothing
 10036 ;; This function is called by:
 10037 ;;		_main
 10038 ;;		_update_adc_result
 10039 ;; This function uses a reentrant model
 10040 ;;
 10041                           
 10042                           	psect	text25
 10043  01DB9A                     __ptext25:
 10044                           	opt callstack 0
 10045  01DB9A                     _check_adc_scan:
 10046                           	opt callstack 13
 10047                           
 10048                           ;daq.c: 90:  return R.done;
 10049                           
 10050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10051                           ;incstack = 0
 10052  01DB9A  0060  F38C  F001   	movff	_R+53,btemp	;volatile
 10053                           
 10054                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10055  01DBA0  0012               	return		;funcret
 10056  01DBA2                     __end_of_check_adc_scan:
 10057                           	opt callstack 0
 10058                           
 10059 ;; *************** function _set_load_relay_two *****************
 10060 ;; Defined at:
 10061 ;;		line 130 in file "mbmc.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;  mode            1  [STACK] const _Bool 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  1  [STACK] void 
 10068 ;; Registers used:
 10069 ;;		wreg, fsr1l, fsr1h
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10079 ;;Total ram usage:        0 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; Hardware stack levels required when called:   15
 10082 ;; This function calls:
 10083 ;;		Nothing
 10084 ;; This function is called by:
 10085 ;;		_main
 10086 ;;		_esr_check
 10087 ;; This function uses a reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text26
 10091  01DACA                     __ptext26:
 10092                           	opt callstack 0
 10093  01DACA                     _set_load_relay_two:
 10094                           	opt callstack 15
 10095                           
 10096                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
 10097                           ;stkvar	_mode @ sp[(0)+-1]
 10098                           
 10099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10100                           ;incstack = 0
 10101  01DACA  0EFF               	movlw	-1
 10102  01DACC  B0E3               	btfsc	plusw1,0,c
 10103  01DACE  D002               	bra	u10255
 10104  01DAD0  9ABD               	bcf	189,5,c	;volatile
 10105  01DAD2  D001               	bra	u10256
 10106  01DAD4                     u10255:
 10107  01DAD4  8ABD               	bsf	189,5,c	;volatile
 10108  01DAD6                     u10256:
 10109                           
 10110                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10111  01DAD6  52E5               	movf	postdec1,f,c
 10112  01DAD8  0012               	return		;funcret
 10113  01DADA                     __end_of_set_load_relay_two:
 10114                           	opt callstack 0
 10115                           
 10116 ;; *************** function _set_load_relay_one *****************
 10117 ;; Defined at:
 10118 ;;		line 125 in file "mbmc.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;  mode            1  [STACK] const _Bool 
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;		None
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1  [STACK] void 
 10125 ;; Registers used:
 10126 ;;		wreg, fsr1l, fsr1h
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10136 ;;Total ram usage:        0 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:   15
 10139 ;; This function calls:
 10140 ;;		Nothing
 10141 ;; This function is called by:
 10142 ;;		_main
 10143 ;;		_esr_check
 10144 ;; This function uses a reentrant model
 10145 ;;
 10146                           
 10147                           	psect	text27
 10148  01DADA                     __ptext27:
 10149                           	opt callstack 0
 10150  01DADA                     _set_load_relay_one:
 10151                           	opt callstack 15
 10152                           
 10153                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
 10154                           ;stkvar	_mode @ sp[(0)+-1]
 10155                           
 10156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10157                           ;incstack = 0
 10158  01DADA  0EFF               	movlw	-1
 10159  01DADC  B0E3               	btfsc	plusw1,0,c
 10160  01DADE  D002               	bra	u10245
 10161  01DAE0  98BD               	bcf	189,4,c	;volatile
 10162  01DAE2  D001               	bra	u10246
 10163  01DAE4                     u10245:
 10164  01DAE4  88BD               	bsf	189,4,c	;volatile
 10165  01DAE6                     u10246:
 10166                           
 10167                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10168  01DAE6  52E5               	movf	postdec1,f,c
 10169  01DAE8  0012               	return		;funcret
 10170  01DAEA                     __end_of_set_load_relay_one:
 10171                           	opt callstack 0
 10172                           
 10173 ;; *************** function _eaDogM_WriteCommand *****************
 10174 ;; Defined at:
 10175 ;;		line 385 in file "eadog.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  cmd             1  [STACK] const unsigned char 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1  [STACK] void 
 10182 ;; Registers used:
 10183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10184 ;; Tracked objects:
 10185 ;;		On entry : 3F/3D
 10186 ;;		On exit  : 3F/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10193 ;;Total ram usage:        0 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:   26
 10196 ;; This function calls:
 10197 ;;		_send_lcd_cmd_dma
 10198 ;; This function is called by:
 10199 ;;		_main
 10200 ;; This function uses a reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text28
 10204  01DB1A                     __ptext28:
 10205                           	opt callstack 0
 10206  01DB1A                     _eaDogM_WriteCommand:
 10207                           	opt callstack 4
 10208                           
 10209                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10210                           ;stkvar	_cmd @ sp[(0)+-1]
 10211                           
 10212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10213                           ;incstack = 0
 10214  01DB1A  0EFF               	movlw	-1
 10215  01DB1C  50E3               	movf	plusw1,w,c
 10216  01DB1E  6EE6               	movwf	postinc1,c
 10217  01DB20  ECAE  F0EC         	call	_send_lcd_cmd_dma	;wreg free
 10218                           
 10219                           ; BSR set to: 0
 10220                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10221  01DB24  52E5               	movf	postdec1,f,c
 10222  01DB26  0012               	return		;funcret
 10223  01DB28                     __end_of_eaDogM_WriteCommand:
 10224                           	opt callstack 0
 10225                           
 10226 ;; *************** function _current_sensor_cal *****************
 10227 ;; Defined at:
 10228 ;;		line 483 in file "main.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;		None
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;  cp              4  [STACK] unsigned long 
 10233 ;;  cb              4  [STACK] unsigned long 
 10234 ;;  cpz             4  [STACK] unsigned long 
 10235 ;;  cbz             4  [STACK] unsigned long 
 10236 ;;  x               1  [STACK] unsigned char 
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  1  [STACK] _Bool 
 10239 ;; Registers used:
 10240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/1
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;Total ram usage:        0 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:   28
 10253 ;; This function calls:
 10254 ;;		_WaitMs
 10255 ;;		___fldiv
 10256 ;;		___xxtofl
 10257 ;;		_cal_current_10A
 10258 ;;		_cal_current_zero
 10259 ;;		_clear_adc_scan
 10260 ;;		_clear_switch
 10261 ;;		_get_raw_result
 10262 ;;		_get_switch
 10263 ;;		_get_vterm_ptr
 10264 ;;		_spinners
 10265 ;;		_sprintf
 10266 ;;		_start_adc_scan
 10267 ;;		_update_lcd
 10268 ;;		_write_cal_data
 10269 ;; This function is called by:
 10270 ;;		_main
 10271 ;; This function uses a reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text29
 10275  01346E                     __ptext29:
 10276                           	opt callstack 0
 10277  01346E                     _current_sensor_cal:
 10278                           	opt callstack 0
 10279                           
 10280                           ; BSR set to: 0
 10281                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10282  01346E  0E11               	movlw	17
 10283  013470  26E1               	addwf	fsr1l,f,c
 10284  013472  0E00               	movlw	0
 10285  013474  22E2               	addwfc	fsr1h,f,c
 10286                           
 10287                           ;main.c: 485:  uint8_t x = 0;
 10288                           ;stkvar	_x @ sp[(-17)+16]
 10289                           
 10290                           ;incstack = 0
 10291  013476  0EFF               	movlw	-1
 10292  013478  6AE3               	clrf	plusw1,c
 10293                           
 10294                           ;main.c: 486:  uint32_t cb = 0, cp = 0;
 10295                           ;stkvar	_cb @ sp[(-17)+4]
 10296  01347A  0EF3               	movlw	-13
 10297  01347C  6AE3               	clrf	plusw1,c
 10298  01347E  0EF4               	movlw	-12
 10299  013480  6AE3               	clrf	plusw1,c
 10300  013482  0EF5               	movlw	-11
 10301  013484  6AE3               	clrf	plusw1,c
 10302  013486  0EF6               	movlw	-10
 10303  013488  6AE3               	clrf	plusw1,c
 10304                           
 10305                           ;stkvar	_cp @ sp[(-17)+0]
 10306  01348A  0EEF               	movlw	-17
 10307  01348C  6AE3               	clrf	plusw1,c
 10308  01348E  0EF0               	movlw	-16
 10309  013490  6AE3               	clrf	plusw1,c
 10310  013492  0EF1               	movlw	-15
 10311  013494  6AE3               	clrf	plusw1,c
 10312  013496  0EF2               	movlw	-14
 10313  013498  6AE3               	clrf	plusw1,c
 10314                           
 10315                           ;main.c: 488:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10316  01349A  0E7A               	movlw	low STR_46
 10317  01349C  6EE6               	movwf	postinc1,c
 10318  01349E  0EFE               	movlw	high STR_46
 10319  0134A0  6EE6               	movwf	postinc1,c
 10320  0134A2  0E00               	movlw	0
 10321  0134A4  6EE6               	movwf	postinc1,c
 10322  0134A6  0E00               	movlw	0
 10323  0134A8  6EE6               	movwf	postinc1,c
 10324  0134AA  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10325  0134AE  0060  F007  FFE6   	movff	btemp,postinc1
 10326  0134B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10327  0134BA  0E04               	movlw	4
 10328  0134BC  6EE6               	movwf	postinc1,c
 10329  0134BE  ECC4  F0D8         	call	_sprintf	;wreg free
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;main.c: 489:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 10333  0134C2  0EFC               	movlw	low STR_47
 10334  0134C4  6EE6               	movwf	postinc1,c
 10335  0134C6  0EFD               	movlw	high STR_47
 10336  0134C8  6EE6               	movwf	postinc1,c
 10337  0134CA  0E00               	movlw	0
 10338  0134CC  6EE6               	movwf	postinc1,c
 10339  0134CE  0E01               	movlw	1
 10340  0134D0  6EE6               	movwf	postinc1,c
 10341  0134D2  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10342  0134D6  0060  F007  FFE6   	movff	btemp,postinc1
 10343  0134DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10344  0134E2  0E04               	movlw	4
 10345  0134E4  6EE6               	movwf	postinc1,c
 10346  0134E6  ECC4  F0D8         	call	_sprintf	;wreg free
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;main.c: 490:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10350  0134EA  0EE7               	movlw	low STR_48
 10351  0134EC  6EE6               	movwf	postinc1,c
 10352  0134EE  0EFD               	movlw	high STR_48
 10353  0134F0  6EE6               	movwf	postinc1,c
 10354  0134F2  0E00               	movlw	0
 10355  0134F4  6EE6               	movwf	postinc1,c
 10356  0134F6  0E02               	movlw	2
 10357  0134F8  6EE6               	movwf	postinc1,c
 10358  0134FA  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10359  0134FE  0060  F007  FFE6   	movff	btemp,postinc1
 10360  013504  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10361  01350A  0E04               	movlw	4
 10362  01350C  6EE6               	movwf	postinc1,c
 10363  01350E  ECC4  F0D8         	call	_sprintf	;wreg free
 10364                           
 10365                           ; BSR set to: 0
 10366                           ;main.c: 491:  update_lcd(0);
 10367  013512  0E00               	movlw	0
 10368  013514  6EE6               	movwf	postinc1,c
 10369  013516  EC3C  F0D8         	call	_update_lcd	;wreg free
 10370                           
 10371                           ;main.c: 492:  WaitMs(2000);
 10372  01351A  0ED0               	movlw	208
 10373  01351C  6EE6               	movwf	postinc1,c
 10374  01351E  0E07               	movlw	7
 10375  013520  6EE6               	movwf	postinc1,c
 10376  013522  EC49  F0E9         	call	_WaitMs	;wreg free
 10377  013526                     l14424:
 10378                           
 10379                           ;main.c: 494:   if (++x > 64)
 10380                           ;stkvar	_x @ sp[(-17)+16]
 10381  013526  0EFF               	movlw	-1
 10382  013528  2AE3               	incf	plusw1,f,c
 10383  01352A  0EFF               	movlw	-1
 10384  01352C  006F FF8C  F001    	movff	plusw1,btemp
 10385  013532  0E40               	movlw	64
 10386  013534  6401               	cpfsgt	btemp^0,c
 10387  013536  D002               	goto	l14428
 10388  013538  EF0C  F0A0         	goto	l1503
 10389  01353C                     l14428:
 10390                           
 10391                           ;main.c: 496:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10392  01353C  0E00               	movlw	0
 10393  01353E  6EE6               	movwf	postinc1,c
 10394  013540  0E04               	movlw	4
 10395  013542  6EE6               	movwf	postinc1,c
 10396  013544  EC49  F0D9         	call	_spinners	;wreg free
 10397  013548  5001               	movf	btemp^0,w,c
 10398  01354A  6EE6               	movwf	postinc1,c
 10399  01354C  0E00               	movlw	0
 10400  01354E  6EE6               	movwf	postinc1,c
 10401  013550  0E37               	movlw	low STR_49
 10402  013552  6EE6               	movwf	postinc1,c
 10403  013554  0EFF               	movlw	high STR_49
 10404  013556  6EE6               	movwf	postinc1,c
 10405  013558  0E00               	movlw	0
 10406  01355A  6EE6               	movwf	postinc1,c
 10407  01355C  0E02               	movlw	2
 10408  01355E  6EE6               	movwf	postinc1,c
 10409  013560  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10410  013564  0060  F007  FFE6   	movff	btemp,postinc1
 10411  01356A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10412  013570  0E06               	movlw	6
 10413  013572  6EE6               	movwf	postinc1,c
 10414  013574  ECC4  F0D8         	call	_sprintf	;wreg free
 10415                           
 10416                           ;main.c: 497:   update_lcd(0);
 10417  013578  0E00               	movlw	0
 10418  01357A  6EE6               	movwf	postinc1,c
 10419  01357C  EC3C  F0D8         	call	_update_lcd	;wreg free
 10420                           
 10421                           ;main.c: 498:   WaitMs(100);
 10422  013580  0E64               	movlw	100
 10423  013582  6EE6               	movwf	postinc1,c
 10424  013584  0E00               	movlw	0
 10425  013586  6EE6               	movwf	postinc1,c
 10426  013588  EC49  F0E9         	call	_WaitMs	;wreg free
 10427                           
 10428                           ;main.c: 499:  } while (get_switch(SCALIB));
 10429  01358C  0E04               	movlw	4
 10430  01358E  6EE6               	movwf	postinc1,c
 10431  013590  EC5C  F0EA         	call	_get_switch	;wreg free
 10432  013594  5001               	movf	btemp^0,w,c
 10433  013596  A4D8               	btfss	status,2,c
 10434  013598  D7C6               	goto	l14424
 10435                           
 10436                           ;main.c: 501:  x = 0;
 10437                           ;stkvar	_x @ sp[(-17)+16]
 10438  01359A  0EFF               	movlw	-1
 10439  01359C  6AE3               	clrf	plusw1,c
 10440  01359E                     l14436:
 10441                           
 10442                           ;main.c: 503:   cb += get_raw_result(C_BATT);
 10443  01359E  0E00               	movlw	0
 10444  0135A0  6EE6               	movwf	postinc1,c
 10445  0135A2  ECDB  F0EC         	call	_get_raw_result	;wreg free
 10446                           
 10447                           ;stkvar	_cb @ sp[(-17)+4]
 10448  0135A6  50E1               	movf	fsr1l,w,c
 10449  0135A8  0FF3               	addlw	-13
 10450  0135AA  6ED9               	movwf	fsr2l,c
 10451  0135AC  50E2               	movf	fsr1h,w,c
 10452  0135AE  6EDA               	movwf	fsr2h,c
 10453  0135B0  0EFF               	movlw	255
 10454  0135B2  22DA               	addwfc	fsr2h,f,c
 10455  0135B4  5001               	movf	btemp^0,w,c
 10456  0135B6  26DE               	addwf	postinc2,f,c
 10457  0135B8  5002               	movf	(btemp+1)^0,w,c
 10458  0135BA  22DE               	addwfc	postinc2,f,c
 10459  0135BC  0E00               	movlw	0
 10460  0135BE  22DE               	addwfc	postinc2,f,c
 10461  0135C0  22DE               	addwfc	postinc2,f,c
 10462                           
 10463                           ;main.c: 504:   cp += get_raw_result(C_PV);
 10464  0135C2  0E01               	movlw	1
 10465  0135C4  6EE6               	movwf	postinc1,c
 10466  0135C6  ECDB  F0EC         	call	_get_raw_result	;wreg free
 10467                           
 10468                           ;stkvar	_cp @ sp[(-17)+0]
 10469  0135CA  50E1               	movf	fsr1l,w,c
 10470  0135CC  0FEF               	addlw	-17
 10471  0135CE  6ED9               	movwf	fsr2l,c
 10472  0135D0  50E2               	movf	fsr1h,w,c
 10473  0135D2  6EDA               	movwf	fsr2h,c
 10474  0135D4  0EFF               	movlw	255
 10475  0135D6  22DA               	addwfc	fsr2h,f,c
 10476  0135D8  5001               	movf	btemp^0,w,c
 10477  0135DA  26DE               	addwf	postinc2,f,c
 10478  0135DC  5002               	movf	(btemp+1)^0,w,c
 10479  0135DE  22DE               	addwfc	postinc2,f,c
 10480  0135E0  0E00               	movlw	0
 10481  0135E2  22DE               	addwfc	postinc2,f,c
 10482  0135E4  22DE               	addwfc	postinc2,f,c
 10483                           
 10484                           ;main.c: 505:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10485  0135E6  0EA4               	movlw	low STR_50
 10486  0135E8  6EE6               	movwf	postinc1,c
 10487  0135EA  0EFE               	movlw	high STR_50
 10488  0135EC  6EE6               	movwf	postinc1,c
 10489  0135EE  0E00               	movlw	0
 10490  0135F0  6EE6               	movwf	postinc1,c
 10491  0135F2  0E00               	movlw	0
 10492  0135F4  6EE6               	movwf	postinc1,c
 10493  0135F6  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10494  0135FA  0060  F007  FFE6   	movff	btemp,postinc1
 10495  013600  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10496  013606  0E04               	movlw	4
 10497  013608  6EE6               	movwf	postinc1,c
 10498  01360A  ECC4  F0D8         	call	_sprintf	;wreg free
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;main.c: 506:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10502  01360E  0E01               	movlw	1
 10503  013610  6EE6               	movwf	postinc1,c
 10504  013612  ECDB  F0EC         	call	_get_raw_result	;wreg free
 10505  013616  0060  F007  FFE6   	movff	btemp,postinc1
 10506  01361C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10507  013622  0E00               	movlw	0
 10508  013624  6EE6               	movwf	postinc1,c
 10509  013626  ECDB  F0EC         	call	_get_raw_result	;wreg free
 10510  01362A  0060  F007  FFE6   	movff	btemp,postinc1
 10511  013630  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10512  013636  0E54               	movlw	low STR_51
 10513  013638  6EE6               	movwf	postinc1,c
 10514  01363A  0EFD               	movlw	high STR_51
 10515  01363C  6EE6               	movwf	postinc1,c
 10516  01363E  0E00               	movlw	0
 10517  013640  6EE6               	movwf	postinc1,c
 10518  013642  0E01               	movlw	1
 10519  013644  6EE6               	movwf	postinc1,c
 10520  013646  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10521  01364A  0060  F007  FFE6   	movff	btemp,postinc1
 10522  013650  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10523  013656  0E08               	movlw	8
 10524  013658  6EE6               	movwf	postinc1,c
 10525  01365A  ECC4  F0D8         	call	_sprintf	;wreg free
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;main.c: 507:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10529                           ;stkvar	_x @ sp[(-17)+16]
 10530  01365E  0EFF               	movlw	-1
 10531  013660  50E3               	movf	plusw1,w,c
 10532  013662  6EE6               	movwf	postinc1,c
 10533  013664  0E00               	movlw	0
 10534  013666  6EE6               	movwf	postinc1,c
 10535  013668  0E0D               	movlw	low STR_52
 10536  01366A  6EE6               	movwf	postinc1,c
 10537  01366C  0EFF               	movlw	high STR_52
 10538  01366E  6EE6               	movwf	postinc1,c
 10539  013670  0E00               	movlw	0
 10540  013672  6EE6               	movwf	postinc1,c
 10541  013674  0E02               	movlw	2
 10542  013676  6EE6               	movwf	postinc1,c
 10543  013678  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10544  01367C  0060  F007  FFE6   	movff	btemp,postinc1
 10545  013682  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10546  013688  0E06               	movlw	6
 10547  01368A  6EE6               	movwf	postinc1,c
 10548  01368C  ECC4  F0D8         	call	_sprintf	;wreg free
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;main.c: 508:   update_lcd(0);
 10552  013690  0E00               	movlw	0
 10553  013692  6EE6               	movwf	postinc1,c
 10554  013694  EC3C  F0D8         	call	_update_lcd	;wreg free
 10555                           
 10556                           ;main.c: 509:   clear_adc_scan();
 10557  013698  ECE4  F0ED         	call	_clear_adc_scan	;wreg free
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;main.c: 510:   start_adc_scan();
 10561  01369C  ECC7  F0E4         	call	_start_adc_scan	;wreg free
 10562                           
 10563                           ;main.c: 511:   WaitMs(100);
 10564  0136A0  0E64               	movlw	100
 10565  0136A2  6EE6               	movwf	postinc1,c
 10566  0136A4  0E00               	movlw	0
 10567  0136A6  6EE6               	movwf	postinc1,c
 10568  0136A8  EC49  F0E9         	call	_WaitMs	;wreg free
 10569                           
 10570                           ;main.c: 512:  } while (++x < 64);
 10571                           ;stkvar	_x @ sp[(-17)+16]
 10572  0136AC  0EFF               	movlw	-1
 10573  0136AE  2AE3               	incf	plusw1,f,c
 10574  0136B0  0EFF               	movlw	-1
 10575  0136B2  006F FF8C  F001    	movff	plusw1,btemp
 10576  0136B8  0E3F               	movlw	63
 10577  0136BA  6401               	cpfsgt	btemp^0,c
 10578  0136BC  D770               	goto	l14436
 10579                           
 10580                           ;main.c: 513:  cb = cb >> 6;
 10581  0136BE  0E06               	movlw	6
 10582  0136C0  6E0C               	movwf	(btemp+11)^0,c
 10583                           
 10584                           ;stkvar	_cb @ sp[(-17)+4]
 10585  0136C2  50E1               	movf	fsr1l,w,c
 10586  0136C4  0FF3               	addlw	-13
 10587  0136C6  6ED9               	movwf	fsr2l,c
 10588  0136C8  50E2               	movf	fsr1h,w,c
 10589  0136CA  6EDA               	movwf	fsr2h,c
 10590  0136CC  0EFF               	movlw	255
 10591  0136CE  22DA               	addwfc	fsr2h,f,c
 10592  0136D0  280C               	incf	(btemp+11)^0,w,c
 10593  0136D2  52DE               	movf	postinc2,f,c
 10594  0136D4  D007               	goto	u13760
 10595  0136D6                     u13765:
 10596  0136D6  52DE               	movf	postinc2,f,c
 10597  0136D8  52DE               	movf	postinc2,f,c
 10598  0136DA  90D8               	bcf	status,0,c
 10599  0136DC  32DD               	rrcf	postdec2,f,c
 10600  0136DE  32DD               	rrcf	postdec2,f,c
 10601  0136E0  32DD               	rrcf	postdec2,f,c
 10602  0136E2  32DE               	rrcf	postinc2,f,c
 10603  0136E4                     u13760:
 10604  0136E4  2EE8               	decfsz	wreg,f,c
 10605  0136E6  D7F7               	goto	u13765
 10606                           
 10607                           ;main.c: 514:  cp = cp >> 6;
 10608  0136E8  0E06               	movlw	6
 10609  0136EA  6E0C               	movwf	(btemp+11)^0,c
 10610                           
 10611                           ;stkvar	_cp @ sp[(-17)+0]
 10612  0136EC  50E1               	movf	fsr1l,w,c
 10613  0136EE  0FEF               	addlw	-17
 10614  0136F0  6ED9               	movwf	fsr2l,c
 10615  0136F2  50E2               	movf	fsr1h,w,c
 10616  0136F4  6EDA               	movwf	fsr2h,c
 10617  0136F6  0EFF               	movlw	255
 10618  0136F8  22DA               	addwfc	fsr2h,f,c
 10619  0136FA  280C               	incf	(btemp+11)^0,w,c
 10620  0136FC  52DE               	movf	postinc2,f,c
 10621  0136FE  D007               	goto	u13770
 10622  013700                     u13775:
 10623  013700  52DE               	movf	postinc2,f,c
 10624  013702  52DE               	movf	postinc2,f,c
 10625  013704  90D8               	bcf	status,0,c
 10626  013706  32DD               	rrcf	postdec2,f,c
 10627  013708  32DD               	rrcf	postdec2,f,c
 10628  01370A  32DD               	rrcf	postdec2,f,c
 10629  01370C  32DE               	rrcf	postinc2,f,c
 10630  01370E                     u13770:
 10631  01370E  2EE8               	decfsz	wreg,f,c
 10632  013710  D7F7               	goto	u13775
 10633                           
 10634                           ;main.c: 516:  if (cal_current_zero(0, cb, cp)) {
 10635                           ;stkvar	_cp @ sp[(-17)+0]
 10636  013712  0EEF               	movlw	-17
 10637  013714  006F FF8F FFE6     	movff	plusw1,postinc1
 10638  01371A  006F FF8F FFE6     	movff	plusw1,postinc1
 10639                           
 10640                           ;stkvar	_cb @ sp[(-19)+4]
 10641  013720  0EF1               	movlw	-15
 10642  013722  006F FF8F FFE6     	movff	plusw1,postinc1
 10643  013728  006F FF8F FFE6     	movff	plusw1,postinc1
 10644  01372E  0E00               	movlw	0
 10645  013730  6EE6               	movwf	postinc1,c
 10646  013732  EC4E  F0E1         	call	_cal_current_zero	;wreg free
 10647  013736  5001               	movf	btemp^0,w,c
 10648  013738  B4D8               	btfsc	status,2,c
 10649  01373A  D075               	goto	l14474
 10650                           
 10651                           ;main.c: 517:   cal_current_zero(1, cb, cp);
 10652                           ;stkvar	_cp @ sp[(-17)+0]
 10653  01373C  0EEF               	movlw	-17
 10654  01373E  006F FF8F FFE6     	movff	plusw1,postinc1
 10655  013744  006F FF8F FFE6     	movff	plusw1,postinc1
 10656                           
 10657                           ;stkvar	_cb @ sp[(-19)+4]
 10658  01374A  0EF1               	movlw	-15
 10659  01374C  006F FF8F FFE6     	movff	plusw1,postinc1
 10660  013752  006F FF8F FFE6     	movff	plusw1,postinc1
 10661  013758  0E01               	movlw	1
 10662  01375A  6EE6               	movwf	postinc1,c
 10663  01375C  EC4E  F0E1         	call	_cal_current_zero	;wreg free
 10664                           
 10665                           ;main.c: 518:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10666  013760  0E7A               	movlw	low STR_46
 10667  013762  6EE6               	movwf	postinc1,c
 10668  013764  0EFE               	movlw	high STR_46
 10669  013766  6EE6               	movwf	postinc1,c
 10670  013768  0E00               	movlw	0
 10671  01376A  6EE6               	movwf	postinc1,c
 10672  01376C  0E00               	movlw	0
 10673  01376E  6EE6               	movwf	postinc1,c
 10674  013770  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10675  013774  0060  F007  FFE6   	movff	btemp,postinc1
 10676  01377A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10677  013780  0E04               	movlw	4
 10678  013782  6EE6               	movwf	postinc1,c
 10679  013784  ECC4  F0D8         	call	_sprintf	;wreg free
 10680                           
 10681                           ; BSR set to: 0
 10682                           ;main.c: 519:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10683                           ;stkvar	_cp @ sp[(-17)+0]
 10684  013788  0EEF               	movlw	-17
 10685  01378A  006F FF8F FFE6     	movff	plusw1,postinc1
 10686  013790  006F FF8F FFE6     	movff	plusw1,postinc1
 10687  013796  006F FF8F FFE6     	movff	plusw1,postinc1
 10688  01379C  006F FF8F FFE6     	movff	plusw1,postinc1
 10689                           
 10690                           ;stkvar	_cb @ sp[(-21)+4]
 10691  0137A2  0EEF               	movlw	-17
 10692  0137A4  006F FF8F FFE6     	movff	plusw1,postinc1
 10693  0137AA  006F FF8F FFE6     	movff	plusw1,postinc1
 10694  0137B0  006F FF8F FFE6     	movff	plusw1,postinc1
 10695  0137B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10696  0137BC  0E7E               	movlw	low STR_54
 10697  0137BE  6EE6               	movwf	postinc1,c
 10698  0137C0  0EFD               	movlw	high STR_54
 10699  0137C2  6EE6               	movwf	postinc1,c
 10700  0137C4  0E00               	movlw	0
 10701  0137C6  6EE6               	movwf	postinc1,c
 10702  0137C8  0E01               	movlw	1
 10703  0137CA  6EE6               	movwf	postinc1,c
 10704  0137CC  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10705  0137D0  0060  F007  FFE6   	movff	btemp,postinc1
 10706  0137D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10707  0137DC  0E0C               	movlw	12
 10708  0137DE  6EE6               	movwf	postinc1,c
 10709  0137E0  ECC4  F0D8         	call	_sprintf	;wreg free
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;main.c: 520:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10713  0137E4  0E3B               	movlw	low STR_55
 10714  0137E6  6EE6               	movwf	postinc1,c
 10715  0137E8  0EFE               	movlw	high STR_55
 10716  0137EA  6EE6               	movwf	postinc1,c
 10717  0137EC  0E00               	movlw	0
 10718  0137EE  6EE6               	movwf	postinc1,c
 10719  0137F0  0E02               	movlw	2
 10720  0137F2  6EE6               	movwf	postinc1,c
 10721  0137F4  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10722  0137F8  0060  F007  FFE6   	movff	btemp,postinc1
 10723  0137FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10724  013804  0E04               	movlw	4
 10725  013806  6EE6               	movwf	postinc1,c
 10726  013808  ECC4  F0D8         	call	_sprintf	;wreg free
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;main.c: 521:   update_lcd(0);
 10730  01380C  0E00               	movlw	0
 10731  01380E  6EE6               	movwf	postinc1,c
 10732  013810  EC3C  F0D8         	call	_update_lcd	;wreg free
 10733                           
 10734                           ;main.c: 522:   WaitMs(2000);
 10735  013814  0ED0               	movlw	208
 10736  013816  6EE6               	movwf	postinc1,c
 10737  013818  0E07               	movlw	7
 10738  01381A  6EE6               	movwf	postinc1,c
 10739  01381C  EC49  F0E9         	call	_WaitMs	;wreg free
 10740                           
 10741                           ;main.c: 523:   write_cal_data();
 10742  013820  EC9A  F0D6         	call	_write_cal_data	;wreg free
 10743                           
 10744                           ;main.c: 524:  } else {
 10745  013824  D05B               	goto	l14480
 10746  013826                     l14474:
 10747                           
 10748                           ;main.c: 525:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10749  013826  0E7A               	movlw	low STR_46
 10750  013828  6EE6               	movwf	postinc1,c
 10751  01382A  0EFE               	movlw	high STR_46
 10752  01382C  6EE6               	movwf	postinc1,c
 10753  01382E  0E00               	movlw	0
 10754  013830  6EE6               	movwf	postinc1,c
 10755  013832  0E00               	movlw	0
 10756  013834  6EE6               	movwf	postinc1,c
 10757  013836  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10758  01383A  0060  F007  FFE6   	movff	btemp,postinc1
 10759  013840  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10760  013846  0E04               	movlw	4
 10761  013848  6EE6               	movwf	postinc1,c
 10762  01384A  ECC4  F0D8         	call	_sprintf	;wreg free
 10763                           
 10764                           ;main.c: 526:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10765  01384E  0E01               	movlw	1
 10766  013850  6EE6               	movwf	postinc1,c
 10767  013852  ECDB  F0EC         	call	_get_raw_result	;wreg free
 10768  013856  0060  F007  FFE6   	movff	btemp,postinc1
 10769  01385C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10770  013862  0E00               	movlw	0
 10771  013864  6EE6               	movwf	postinc1,c
 10772  013866  ECDB  F0EC         	call	_get_raw_result	;wreg free
 10773  01386A  0060  F007  FFE6   	movff	btemp,postinc1
 10774  013870  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10775  013876  0E7E               	movlw	low STR_54
 10776  013878  6EE6               	movwf	postinc1,c
 10777  01387A  0EFD               	movlw	high STR_54
 10778  01387C  6EE6               	movwf	postinc1,c
 10779  01387E  0E00               	movlw	0
 10780  013880  6EE6               	movwf	postinc1,c
 10781  013882  0E01               	movlw	1
 10782  013884  6EE6               	movwf	postinc1,c
 10783  013886  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10784  01388A  0060  F007  FFE6   	movff	btemp,postinc1
 10785  013890  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10786  013896  0E08               	movlw	8
 10787  013898  6EE6               	movwf	postinc1,c
 10788  01389A  ECC4  F0D8         	call	_sprintf	;wreg free
 10789                           
 10790                           ;main.c: 527:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 10791  01389E  0EF8               	movlw	low STR_58
 10792  0138A0  6EE6               	movwf	postinc1,c
 10793  0138A2  0EFE               	movlw	high STR_58
 10794  0138A4  6EE6               	movwf	postinc1,c
 10795  0138A6  0E00               	movlw	0
 10796  0138A8  6EE6               	movwf	postinc1,c
 10797  0138AA  0E02               	movlw	2
 10798  0138AC  6EE6               	movwf	postinc1,c
 10799  0138AE  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10800  0138B2  0060  F007  FFE6   	movff	btemp,postinc1
 10801  0138B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10802  0138BE  0E04               	movlw	4
 10803  0138C0  6EE6               	movwf	postinc1,c
 10804  0138C2  ECC4  F0D8         	call	_sprintf	;wreg free
 10805                           
 10806                           ;main.c: 528:   update_lcd(0);
 10807  0138C6  0E00               	movlw	0
 10808  0138C8  6EE6               	movwf	postinc1,c
 10809  0138CA  EC3C  F0D8         	call	_update_lcd	;wreg free
 10810  0138CE                     l14476:
 10811                           
 10812                           ;main.c: 529:   WaitMs(2000);
 10813  0138CE  0ED0               	movlw	208
 10814  0138D0  6EE6               	movwf	postinc1,c
 10815  0138D2  0E07               	movlw	7
 10816  0138D4  6EE6               	movwf	postinc1,c
 10817  0138D6  EC49  F0E9         	call	_WaitMs	;wreg free
 10818  0138DA  D39E               	goto	l1503
 10819  0138DC                     l14480:
 10820                           
 10821                           ;main.c: 534:  uint32_t cbz, cpz;;main.c: 536:  clear_switch(SCALIB);
 10822  0138DC  0E04               	movlw	4
 10823  0138DE  6EE6               	movwf	postinc1,c
 10824  0138E0  EC64  F0E6         	call	_clear_switch	;wreg free
 10825                           
 10826                           ;main.c: 537:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10827  0138E4  0E7A               	movlw	low STR_46
 10828  0138E6  6EE6               	movwf	postinc1,c
 10829  0138E8  0EFE               	movlw	high STR_46
 10830  0138EA  6EE6               	movwf	postinc1,c
 10831  0138EC  0E00               	movlw	0
 10832  0138EE  6EE6               	movwf	postinc1,c
 10833  0138F0  0E00               	movlw	0
 10834  0138F2  6EE6               	movwf	postinc1,c
 10835  0138F4  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10836  0138F8  0060  F007  FFE6   	movff	btemp,postinc1
 10837  0138FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10838  013904  0E04               	movlw	4
 10839  013906  6EE6               	movwf	postinc1,c
 10840  013908  ECC4  F0D8         	call	_sprintf	;wreg free
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;main.c: 538:  sprintf(get_vterm_ptr(1, 0), "10 Amp Sensor       ");
 10844  01390C  0E50               	movlw	low STR_60
 10845  01390E  6EE6               	movwf	postinc1,c
 10846  013910  0EFE               	movlw	high STR_60
 10847  013912  6EE6               	movwf	postinc1,c
 10848  013914  0E00               	movlw	0
 10849  013916  6EE6               	movwf	postinc1,c
 10850  013918  0E01               	movlw	1
 10851  01391A  6EE6               	movwf	postinc1,c
 10852  01391C  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10853  013920  0060  F007  FFE6   	movff	btemp,postinc1
 10854  013926  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10855  01392C  0E04               	movlw	4
 10856  01392E  6EE6               	movwf	postinc1,c
 10857  013930  ECC4  F0D8         	call	_sprintf	;wreg free
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;main.c: 539:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10861  013934  0EE7               	movlw	low STR_48
 10862  013936  6EE6               	movwf	postinc1,c
 10863  013938  0EFD               	movlw	high STR_48
 10864  01393A  6EE6               	movwf	postinc1,c
 10865  01393C  0E00               	movlw	0
 10866  01393E  6EE6               	movwf	postinc1,c
 10867  013940  0E02               	movlw	2
 10868  013942  6EE6               	movwf	postinc1,c
 10869  013944  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10870  013948  0060  F007  FFE6   	movff	btemp,postinc1
 10871  01394E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10872  013954  0E04               	movlw	4
 10873  013956  6EE6               	movwf	postinc1,c
 10874  013958  ECC4  F0D8         	call	_sprintf	;wreg free
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;main.c: 540:  update_lcd(0);
 10878  01395C  0E00               	movlw	0
 10879  01395E  6EE6               	movwf	postinc1,c
 10880  013960  EC3C  F0D8         	call	_update_lcd	;wreg free
 10881                           
 10882                           ;main.c: 541:  WaitMs(2000);
 10883  013964  0ED0               	movlw	208
 10884  013966  6EE6               	movwf	postinc1,c
 10885  013968  0E07               	movlw	7
 10886  01396A  6EE6               	movwf	postinc1,c
 10887  01396C  EC49  F0E9         	call	_WaitMs	;wreg free
 10888                           
 10889                           ;main.c: 542:  x = 0;
 10890                           ;stkvar	_x @ sp[(-17)+16]
 10891  013970  0EFF               	movlw	-1
 10892  013972  6AE3               	clrf	plusw1,c
 10893  013974                     l14494:
 10894                           
 10895                           ;main.c: 544:   if (++x > 64)
 10896                           ;stkvar	_x @ sp[(-17)+16]
 10897  013974  0EFF               	movlw	-1
 10898  013976  2AE3               	incf	plusw1,f,c
 10899  013978  0EFF               	movlw	-1
 10900  01397A  006F FF8C  F001    	movff	plusw1,btemp
 10901  013980  0E40               	movlw	64
 10902  013982  6401               	cpfsgt	btemp^0,c
 10903  013984  D001               	goto	l14498
 10904  013986  D348               	goto	l1503
 10905  013988                     l14498:
 10906                           
 10907                           ;main.c: 546:   sprintf(get_vterm_ptr(2, 0), "Press button %c  ", spinners(4, 0));
 10908  013988  0E00               	movlw	0
 10909  01398A  6EE6               	movwf	postinc1,c
 10910  01398C  0E04               	movlw	4
 10911  01398E  6EE6               	movwf	postinc1,c
 10912  013990  EC49  F0D9         	call	_spinners	;wreg free
 10913  013994  5001               	movf	btemp^0,w,c
 10914  013996  6EE6               	movwf	postinc1,c
 10915  013998  0E00               	movlw	0
 10916  01399A  6EE6               	movwf	postinc1,c
 10917  01399C  0E71               	movlw	low STR_62
 10918  01399E  6EE6               	movwf	postinc1,c
 10919  0139A0  0EFF               	movlw	high STR_62
 10920  0139A2  6EE6               	movwf	postinc1,c
 10921  0139A4  0E00               	movlw	0
 10922  0139A6  6EE6               	movwf	postinc1,c
 10923  0139A8  0E02               	movlw	2
 10924  0139AA  6EE6               	movwf	postinc1,c
 10925  0139AC  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 10926  0139B0  0060  F007  FFE6   	movff	btemp,postinc1
 10927  0139B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10928  0139BC  0E06               	movlw	6
 10929  0139BE  6EE6               	movwf	postinc1,c
 10930  0139C0  ECC4  F0D8         	call	_sprintf	;wreg free
 10931                           
 10932                           ;main.c: 547:   update_lcd(0);
 10933  0139C4  0E00               	movlw	0
 10934  0139C6  6EE6               	movwf	postinc1,c
 10935  0139C8  EC3C  F0D8         	call	_update_lcd	;wreg free
 10936                           
 10937                           ;main.c: 548:   WaitMs(100);
 10938  0139CC  0E64               	movlw	100
 10939  0139CE  6EE6               	movwf	postinc1,c
 10940  0139D0  0E00               	movlw	0
 10941  0139D2  6EE6               	movwf	postinc1,c
 10942  0139D4  EC49  F0E9         	call	_WaitMs	;wreg free
 10943                           
 10944                           ;main.c: 549:  } while (!get_switch(SCALIB));
 10945  0139D8  0E04               	movlw	4
 10946  0139DA  6EE6               	movwf	postinc1,c
 10947  0139DC  EC5C  F0EA         	call	_get_switch	;wreg free
 10948  0139E0  5001               	movf	btemp^0,w,c
 10949  0139E2  B4D8               	btfsc	status,2,c
 10950  0139E4  D7C7               	goto	l14494
 10951                           
 10952                           ;main.c: 551:  x = 0;
 10953                           ;stkvar	_x @ sp[(-17)+16]
 10954  0139E6  0EFF               	movlw	-1
 10955  0139E8  6AE3               	clrf	plusw1,c
 10956                           
 10957                           ;main.c: 552:  cbz = cb;
 10958                           ;stkvar	_cb @ sp[(-17)+4]
 10959  0139EA  0EF3               	movlw	-13
 10960  0139EC  006F FF8C  F009    	movff	plusw1,btemp+8
 10961  0139F2  0EF4               	movlw	-12
 10962  0139F4  006F FF8C  F00A    	movff	plusw1,btemp+9
 10963  0139FA  0EF5               	movlw	-11
 10964  0139FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 10965  013A02  0EF6               	movlw	-10
 10966  013A04  006F FF8C  F00C    	movff	plusw1,btemp+11
 10967                           
 10968                           ;stkvar	_cbz @ sp[(-17)+12]
 10969  013A0A  0EFB               	movlw	-5
 10970  013A0C  0060  F027  FFE3   	movff	btemp+8,plusw1
 10971  013A12  0EFC               	movlw	-4
 10972  013A14  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10973  013A1A  0EFD               	movlw	-3
 10974  013A1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10975  013A22  0EFE               	movlw	-2
 10976  013A24  0060  F033  FFE3   	movff	btemp+11,plusw1
 10977                           
 10978                           ;main.c: 553:  cpz = cp;
 10979                           ;stkvar	_cp @ sp[(-17)+0]
 10980  013A2A  0EEF               	movlw	-17
 10981  013A2C  006F FF8C  F009    	movff	plusw1,btemp+8
 10982  013A32  0EF0               	movlw	-16
 10983  013A34  006F FF8C  F00A    	movff	plusw1,btemp+9
 10984  013A3A  0EF1               	movlw	-15
 10985  013A3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10986  013A42  0EF2               	movlw	-14
 10987  013A44  006F FF8C  F00C    	movff	plusw1,btemp+11
 10988                           
 10989                           ;stkvar	_cpz @ sp[(-17)+8]
 10990  013A4A  0EF7               	movlw	-9
 10991  013A4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 10992  013A52  0EF8               	movlw	-8
 10993  013A54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10994  013A5A  0EF9               	movlw	-7
 10995  013A5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10996  013A62  0EFA               	movlw	-6
 10997  013A64  0060  F033  FFE3   	movff	btemp+11,plusw1
 10998                           
 10999                           ;main.c: 554:  cb = 0;
 11000                           ;stkvar	_cb @ sp[(-17)+4]
 11001  013A6A  0EF3               	movlw	-13
 11002  013A6C  6AE3               	clrf	plusw1,c
 11003  013A6E  0EF4               	movlw	-12
 11004  013A70  6AE3               	clrf	plusw1,c
 11005  013A72  0EF5               	movlw	-11
 11006  013A74  6AE3               	clrf	plusw1,c
 11007  013A76  0EF6               	movlw	-10
 11008  013A78  6AE3               	clrf	plusw1,c
 11009                           
 11010                           ;main.c: 555:  cp = 0;
 11011                           ;stkvar	_cp @ sp[(-17)+0]
 11012  013A7A  0EEF               	movlw	-17
 11013  013A7C  6AE3               	clrf	plusw1,c
 11014  013A7E  0EF0               	movlw	-16
 11015  013A80  6AE3               	clrf	plusw1,c
 11016  013A82  0EF1               	movlw	-15
 11017  013A84  6AE3               	clrf	plusw1,c
 11018  013A86  0EF2               	movlw	-14
 11019  013A88  6AE3               	clrf	plusw1,c
 11020  013A8A                     l14514:
 11021                           
 11022                           ;main.c: 557:   cb += get_raw_result(C_BATT);
 11023  013A8A  0E00               	movlw	0
 11024  013A8C  6EE6               	movwf	postinc1,c
 11025  013A8E  ECDB  F0EC         	call	_get_raw_result	;wreg free
 11026                           
 11027                           ;stkvar	_cb @ sp[(-17)+4]
 11028  013A92  50E1               	movf	fsr1l,w,c
 11029  013A94  0FF3               	addlw	-13
 11030  013A96  6ED9               	movwf	fsr2l,c
 11031  013A98  50E2               	movf	fsr1h,w,c
 11032  013A9A  6EDA               	movwf	fsr2h,c
 11033  013A9C  0EFF               	movlw	255
 11034  013A9E  22DA               	addwfc	fsr2h,f,c
 11035  013AA0  5001               	movf	btemp^0,w,c
 11036  013AA2  26DE               	addwf	postinc2,f,c
 11037  013AA4  5002               	movf	(btemp+1)^0,w,c
 11038  013AA6  22DE               	addwfc	postinc2,f,c
 11039  013AA8  0E00               	movlw	0
 11040  013AAA  22DE               	addwfc	postinc2,f,c
 11041  013AAC  22DE               	addwfc	postinc2,f,c
 11042                           
 11043                           ;main.c: 558:   cp += get_raw_result(C_PV);
 11044  013AAE  0E01               	movlw	1
 11045  013AB0  6EE6               	movwf	postinc1,c
 11046  013AB2  ECDB  F0EC         	call	_get_raw_result	;wreg free
 11047                           
 11048                           ;stkvar	_cp @ sp[(-17)+0]
 11049  013AB6  50E1               	movf	fsr1l,w,c
 11050  013AB8  0FEF               	addlw	-17
 11051  013ABA  6ED9               	movwf	fsr2l,c
 11052  013ABC  50E2               	movf	fsr1h,w,c
 11053  013ABE  6EDA               	movwf	fsr2h,c
 11054  013AC0  0EFF               	movlw	255
 11055  013AC2  22DA               	addwfc	fsr2h,f,c
 11056  013AC4  5001               	movf	btemp^0,w,c
 11057  013AC6  26DE               	addwf	postinc2,f,c
 11058  013AC8  5002               	movf	(btemp+1)^0,w,c
 11059  013ACA  22DE               	addwfc	postinc2,f,c
 11060  013ACC  0E00               	movlw	0
 11061  013ACE  22DE               	addwfc	postinc2,f,c
 11062  013AD0  22DE               	addwfc	postinc2,f,c
 11063                           
 11064                           ;main.c: 559:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 11065  013AD2  0EA4               	movlw	low STR_50
 11066  013AD4  6EE6               	movwf	postinc1,c
 11067  013AD6  0EFE               	movlw	high STR_50
 11068  013AD8  6EE6               	movwf	postinc1,c
 11069  013ADA  0E00               	movlw	0
 11070  013ADC  6EE6               	movwf	postinc1,c
 11071  013ADE  0E00               	movlw	0
 11072  013AE0  6EE6               	movwf	postinc1,c
 11073  013AE2  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11074  013AE6  0060  F007  FFE6   	movff	btemp,postinc1
 11075  013AEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11076  013AF2  0E04               	movlw	4
 11077  013AF4  6EE6               	movwf	postinc1,c
 11078  013AF6  ECC4  F0D8         	call	_sprintf	;wreg free
 11079                           
 11080                           ; BSR set to: 0
 11081                           ;main.c: 560:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 11082  013AFA  0E01               	movlw	1
 11083  013AFC  6EE6               	movwf	postinc1,c
 11084  013AFE  ECDB  F0EC         	call	_get_raw_result	;wreg free
 11085  013B02  0060  F007  FFE6   	movff	btemp,postinc1
 11086  013B08  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11087  013B0E  0E00               	movlw	0
 11088  013B10  6EE6               	movwf	postinc1,c
 11089  013B12  ECDB  F0EC         	call	_get_raw_result	;wreg free
 11090  013B16  0060  F007  FFE6   	movff	btemp,postinc1
 11091  013B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11092  013B22  0E54               	movlw	low STR_51
 11093  013B24  6EE6               	movwf	postinc1,c
 11094  013B26  0EFD               	movlw	high STR_51
 11095  013B28  6EE6               	movwf	postinc1,c
 11096  013B2A  0E00               	movlw	0
 11097  013B2C  6EE6               	movwf	postinc1,c
 11098  013B2E  0E01               	movlw	1
 11099  013B30  6EE6               	movwf	postinc1,c
 11100  013B32  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11101  013B36  0060  F007  FFE6   	movff	btemp,postinc1
 11102  013B3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11103  013B42  0E08               	movlw	8
 11104  013B44  6EE6               	movwf	postinc1,c
 11105  013B46  ECC4  F0D8         	call	_sprintf	;wreg free
 11106                           
 11107                           ; BSR set to: 0
 11108                           ;main.c: 561:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 11109                           ;stkvar	_x @ sp[(-17)+16]
 11110  013B4A  0EFF               	movlw	-1
 11111  013B4C  50E3               	movf	plusw1,w,c
 11112  013B4E  6EE6               	movwf	postinc1,c
 11113  013B50  0E00               	movlw	0
 11114  013B52  6EE6               	movwf	postinc1,c
 11115  013B54  0E0D               	movlw	low STR_52
 11116  013B56  6EE6               	movwf	postinc1,c
 11117  013B58  0EFF               	movlw	high STR_52
 11118  013B5A  6EE6               	movwf	postinc1,c
 11119  013B5C  0E00               	movlw	0
 11120  013B5E  6EE6               	movwf	postinc1,c
 11121  013B60  0E02               	movlw	2
 11122  013B62  6EE6               	movwf	postinc1,c
 11123  013B64  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11124  013B68  0060  F007  FFE6   	movff	btemp,postinc1
 11125  013B6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11126  013B74  0E06               	movlw	6
 11127  013B76  6EE6               	movwf	postinc1,c
 11128  013B78  ECC4  F0D8         	call	_sprintf	;wreg free
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;main.c: 562:   update_lcd(0);
 11132  013B7C  0E00               	movlw	0
 11133  013B7E  6EE6               	movwf	postinc1,c
 11134  013B80  EC3C  F0D8         	call	_update_lcd	;wreg free
 11135                           
 11136                           ;main.c: 563:   clear_adc_scan();
 11137  013B84  ECE4  F0ED         	call	_clear_adc_scan	;wreg free
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;main.c: 564:   start_adc_scan();
 11141  013B88  ECC7  F0E4         	call	_start_adc_scan	;wreg free
 11142                           
 11143                           ;main.c: 565:   WaitMs(100);
 11144  013B8C  0E64               	movlw	100
 11145  013B8E  6EE6               	movwf	postinc1,c
 11146  013B90  0E00               	movlw	0
 11147  013B92  6EE6               	movwf	postinc1,c
 11148  013B94  EC49  F0E9         	call	_WaitMs	;wreg free
 11149                           
 11150                           ;main.c: 566:  } while (++x < 64);
 11151                           ;stkvar	_x @ sp[(-17)+16]
 11152  013B98  0EFF               	movlw	-1
 11153  013B9A  2AE3               	incf	plusw1,f,c
 11154  013B9C  0EFF               	movlw	-1
 11155  013B9E  006F FF8C  F001    	movff	plusw1,btemp
 11156  013BA4  0E3F               	movlw	63
 11157  013BA6  6401               	cpfsgt	btemp^0,c
 11158  013BA8  D770               	goto	l14514
 11159                           
 11160                           ;main.c: 567:  cb = cb >> 6;
 11161  013BAA  0E06               	movlw	6
 11162  013BAC  6E0C               	movwf	(btemp+11)^0,c
 11163                           
 11164                           ;stkvar	_cb @ sp[(-17)+4]
 11165  013BAE  50E1               	movf	fsr1l,w,c
 11166  013BB0  0FF3               	addlw	-13
 11167  013BB2  6ED9               	movwf	fsr2l,c
 11168  013BB4  50E2               	movf	fsr1h,w,c
 11169  013BB6  6EDA               	movwf	fsr2h,c
 11170  013BB8  0EFF               	movlw	255
 11171  013BBA  22DA               	addwfc	fsr2h,f,c
 11172  013BBC  280C               	incf	(btemp+11)^0,w,c
 11173  013BBE  52DE               	movf	postinc2,f,c
 11174  013BC0  D007               	goto	u13820
 11175  013BC2                     u13825:
 11176  013BC2  52DE               	movf	postinc2,f,c
 11177  013BC4  52DE               	movf	postinc2,f,c
 11178  013BC6  90D8               	bcf	status,0,c
 11179  013BC8  32DD               	rrcf	postdec2,f,c
 11180  013BCA  32DD               	rrcf	postdec2,f,c
 11181  013BCC  32DD               	rrcf	postdec2,f,c
 11182  013BCE  32DE               	rrcf	postinc2,f,c
 11183  013BD0                     u13820:
 11184  013BD0  2EE8               	decfsz	wreg,f,c
 11185  013BD2  D7F7               	goto	u13825
 11186                           
 11187                           ;main.c: 568:  cp = cp >> 6;
 11188  013BD4  0E06               	movlw	6
 11189  013BD6  6E0C               	movwf	(btemp+11)^0,c
 11190                           
 11191                           ;stkvar	_cp @ sp[(-17)+0]
 11192  013BD8  50E1               	movf	fsr1l,w,c
 11193  013BDA  0FEF               	addlw	-17
 11194  013BDC  6ED9               	movwf	fsr2l,c
 11195  013BDE  50E2               	movf	fsr1h,w,c
 11196  013BE0  6EDA               	movwf	fsr2h,c
 11197  013BE2  0EFF               	movlw	255
 11198  013BE4  22DA               	addwfc	fsr2h,f,c
 11199  013BE6  280C               	incf	(btemp+11)^0,w,c
 11200  013BE8  52DE               	movf	postinc2,f,c
 11201  013BEA  D007               	goto	u13830
 11202  013BEC                     u13835:
 11203  013BEC  52DE               	movf	postinc2,f,c
 11204  013BEE  52DE               	movf	postinc2,f,c
 11205  013BF0  90D8               	bcf	status,0,c
 11206  013BF2  32DD               	rrcf	postdec2,f,c
 11207  013BF4  32DD               	rrcf	postdec2,f,c
 11208  013BF6  32DD               	rrcf	postdec2,f,c
 11209  013BF8  32DE               	rrcf	postinc2,f,c
 11210  013BFA                     u13830:
 11211  013BFA  2EE8               	decfsz	wreg,f,c
 11212  013BFC  D7F7               	goto	u13835
 11213                           
 11214                           ;main.c: 570:  if (cal_current_10A(0, cb, cp, 0.0, 0.0)) {
 11215  013BFE  0E00               	movlw	0
 11216  013C00  6EE6               	movwf	postinc1,c
 11217  013C02  0E00               	movlw	0
 11218  013C04  6EE6               	movwf	postinc1,c
 11219  013C06  0E00               	movlw	0
 11220  013C08  6EE6               	movwf	postinc1,c
 11221  013C0A  0E00               	movlw	0
 11222  013C0C  6EE6               	movwf	postinc1,c
 11223  013C0E  0E00               	movlw	0
 11224  013C10  6EE6               	movwf	postinc1,c
 11225  013C12  0E00               	movlw	0
 11226  013C14  6EE6               	movwf	postinc1,c
 11227  013C16  0E00               	movlw	0
 11228  013C18  6EE6               	movwf	postinc1,c
 11229  013C1A  0E00               	movlw	0
 11230  013C1C  6EE6               	movwf	postinc1,c
 11231                           
 11232                           ;stkvar	_cp @ sp[(-25)+0]
 11233  013C1E  0EE7               	movlw	-25
 11234  013C20  006F FF8F FFE6     	movff	plusw1,postinc1
 11235  013C26  006F FF8F FFE6     	movff	plusw1,postinc1
 11236                           
 11237                           ;stkvar	_cb @ sp[(-27)+4]
 11238  013C2C  0EE9               	movlw	-23
 11239  013C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 11240  013C34  006F FF8F FFE6     	movff	plusw1,postinc1
 11241  013C3A  0E00               	movlw	0
 11242  013C3C  6EE6               	movwf	postinc1,c
 11243  013C3E  EC19  F0DD         	call	_cal_current_10A	;wreg free
 11244  013C42  5001               	movf	btemp^0,w,c
 11245  013C44  B4D8               	btfsc	status,2,c
 11246  013C46  D193               	goto	l14552
 11247                           
 11248                           ;main.c: 571:   cal_current_10A(1, cb, cp, 10.0 / (float) (cb - cbz), 10.0 / (float) (cp
      +                           - cpz));
 11249                           ;stkvar	_cpz @ sp[(-17)+8]
 11250                           ;stkvar	_cp @ sp[(-17)+0]
 11251  013C48  0EEF               	movlw	-17
 11252  013C4A  006F FF8C  F009    	movff	plusw1,btemp+8
 11253  013C50  0EF0               	movlw	-16
 11254  013C52  006F FF8C  F00A    	movff	plusw1,btemp+9
 11255  013C58  0EF1               	movlw	-15
 11256  013C5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11257  013C60  0EF2               	movlw	-14
 11258  013C62  006F FF8C  F00C    	movff	plusw1,btemp+11
 11259  013C68  0EF7               	movlw	-9
 11260  013C6A  50E3               	movf	plusw1,w,c
 11261  013C6C  5E09               	subwf	(btemp+8)^0,f,c
 11262  013C6E  0EF8               	movlw	-8
 11263  013C70  50E3               	movf	plusw1,w,c
 11264  013C72  5A0A               	subwfb	(btemp+9)^0,f,c
 11265  013C74  0EF9               	movlw	-7
 11266  013C76  50E3               	movf	plusw1,w,c
 11267  013C78  5A0B               	subwfb	(btemp+10)^0,f,c
 11268  013C7A  0EFA               	movlw	-6
 11269  013C7C  50E3               	movf	plusw1,w,c
 11270  013C7E  5A0C               	subwfb	(btemp+11)^0,f,c
 11271  013C80  0060  F027  FFE6   	movff	btemp+8,postinc1
 11272  013C86  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11273  013C8C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11274  013C92  0060  F033  FFE6   	movff	btemp+11,postinc1
 11275  013C98  0E00               	movlw	0
 11276  013C9A  6EE6               	movwf	postinc1,c
 11277  013C9C  ECAA  F0C9         	call	___xxtofl	;wreg free
 11278  013CA0  0060  F007  FFE6   	movff	btemp,postinc1
 11279  013CA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11280  013CAC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11281  013CB2  0060  F013  FFE6   	movff	btemp+3,postinc1
 11282  013CB8  0E00               	movlw	0
 11283  013CBA  6EE6               	movwf	postinc1,c
 11284  013CBC  0E00               	movlw	0
 11285  013CBE  6EE6               	movwf	postinc1,c
 11286  013CC0  0E20               	movlw	32
 11287  013CC2  6EE6               	movwf	postinc1,c
 11288  013CC4  0E41               	movlw	65
 11289  013CC6  6EE6               	movwf	postinc1,c
 11290  013CC8  EC3B  F0AD         	call	___fldiv	;wreg free
 11291  013CCC  0060  F007  FFE6   	movff	btemp,postinc1
 11292  013CD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11293  013CD8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11294  013CDE  0060  F013  FFE6   	movff	btemp+3,postinc1
 11295                           
 11296                           ;stkvar	_cbz @ sp[(-21)+12]
 11297                           ;stkvar	_cb @ sp[(-21)+4]
 11298  013CE4  0EEF               	movlw	-17
 11299  013CE6  006F FF8C  F009    	movff	plusw1,btemp+8
 11300  013CEC  0EF0               	movlw	-16
 11301  013CEE  006F FF8C  F00A    	movff	plusw1,btemp+9
 11302  013CF4  0EF1               	movlw	-15
 11303  013CF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11304  013CFC  0EF2               	movlw	-14
 11305  013CFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11306  013D04  0EF7               	movlw	-9
 11307  013D06  50E3               	movf	plusw1,w,c
 11308  013D08  5E09               	subwf	(btemp+8)^0,f,c
 11309  013D0A  0EF8               	movlw	-8
 11310  013D0C  50E3               	movf	plusw1,w,c
 11311  013D0E  5A0A               	subwfb	(btemp+9)^0,f,c
 11312  013D10  0EF9               	movlw	-7
 11313  013D12  50E3               	movf	plusw1,w,c
 11314  013D14  5A0B               	subwfb	(btemp+10)^0,f,c
 11315  013D16  0EFA               	movlw	-6
 11316  013D18  50E3               	movf	plusw1,w,c
 11317  013D1A  5A0C               	subwfb	(btemp+11)^0,f,c
 11318  013D1C  0060  F027  FFE6   	movff	btemp+8,postinc1
 11319  013D22  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11320  013D28  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11321  013D2E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11322  013D34  0E00               	movlw	0
 11323  013D36  6EE6               	movwf	postinc1,c
 11324  013D38  ECAA  F0C9         	call	___xxtofl	;wreg free
 11325  013D3C  0060  F007  FFE6   	movff	btemp,postinc1
 11326  013D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11327  013D48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11328  013D4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 11329  013D54  0E00               	movlw	0
 11330  013D56  6EE6               	movwf	postinc1,c
 11331  013D58  0E00               	movlw	0
 11332  013D5A  6EE6               	movwf	postinc1,c
 11333  013D5C  0E20               	movlw	32
 11334  013D5E  6EE6               	movwf	postinc1,c
 11335  013D60  0E41               	movlw	65
 11336  013D62  6EE6               	movwf	postinc1,c
 11337  013D64  EC3B  F0AD         	call	___fldiv	;wreg free
 11338  013D68  0060  F007  FFE6   	movff	btemp,postinc1
 11339  013D6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11340  013D74  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11341  013D7A  0060  F013  FFE6   	movff	btemp+3,postinc1
 11342                           
 11343                           ;stkvar	_cp @ sp[(-25)+0]
 11344  013D80  0EE7               	movlw	-25
 11345  013D82  006F FF8F FFE6     	movff	plusw1,postinc1
 11346  013D88  006F FF8F FFE6     	movff	plusw1,postinc1
 11347                           
 11348                           ;stkvar	_cb @ sp[(-27)+4]
 11349  013D8E  0EE9               	movlw	-23
 11350  013D90  006F FF8F FFE6     	movff	plusw1,postinc1
 11351  013D96  006F FF8F FFE6     	movff	plusw1,postinc1
 11352  013D9C  0E01               	movlw	1
 11353  013D9E  6EE6               	movwf	postinc1,c
 11354  013DA0  EC19  F0DD         	call	_cal_current_10A	;wreg free
 11355                           
 11356                           ;main.c: 572:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 11357  013DA4  0E7A               	movlw	low STR_46
 11358  013DA6  6EE6               	movwf	postinc1,c
 11359  013DA8  0EFE               	movlw	high STR_46
 11360  013DAA  6EE6               	movwf	postinc1,c
 11361  013DAC  0E00               	movlw	0
 11362  013DAE  6EE6               	movwf	postinc1,c
 11363  013DB0  0E00               	movlw	0
 11364  013DB2  6EE6               	movwf	postinc1,c
 11365  013DB4  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11366  013DB8  0060  F007  FFE6   	movff	btemp,postinc1
 11367  013DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11368  013DC4  0E04               	movlw	4
 11369  013DC6  6EE6               	movwf	postinc1,c
 11370  013DC8  ECC4  F0D8         	call	_sprintf	;wreg free
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;main.c: 573:   sprintf(get_vterm_ptr(1, 0), " %f %f              ", 10.0 / (float) (cb 
      +                          - cbz), 10.0 / (float) (cp - cpz));
 11374                           ;stkvar	_cpz @ sp[(-17)+8]
 11375                           ;stkvar	_cp @ sp[(-17)+0]
 11376  013DCC  0EEF               	movlw	-17
 11377  013DCE  006F FF8C  F009    	movff	plusw1,btemp+8
 11378  013DD4  0EF0               	movlw	-16
 11379  013DD6  006F FF8C  F00A    	movff	plusw1,btemp+9
 11380  013DDC  0EF1               	movlw	-15
 11381  013DDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11382  013DE4  0EF2               	movlw	-14
 11383  013DE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11384  013DEC  0EF7               	movlw	-9
 11385  013DEE  50E3               	movf	plusw1,w,c
 11386  013DF0  5E09               	subwf	(btemp+8)^0,f,c
 11387  013DF2  0EF8               	movlw	-8
 11388  013DF4  50E3               	movf	plusw1,w,c
 11389  013DF6  5A0A               	subwfb	(btemp+9)^0,f,c
 11390  013DF8  0EF9               	movlw	-7
 11391  013DFA  50E3               	movf	plusw1,w,c
 11392  013DFC  5A0B               	subwfb	(btemp+10)^0,f,c
 11393  013DFE  0EFA               	movlw	-6
 11394  013E00  50E3               	movf	plusw1,w,c
 11395  013E02  5A0C               	subwfb	(btemp+11)^0,f,c
 11396  013E04  0060  F027  FFE6   	movff	btemp+8,postinc1
 11397  013E0A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11398  013E10  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11399  013E16  0060  F033  FFE6   	movff	btemp+11,postinc1
 11400  013E1C  0E00               	movlw	0
 11401  013E1E  6EE6               	movwf	postinc1,c
 11402  013E20  ECAA  F0C9         	call	___xxtofl	;wreg free
 11403  013E24  0060  F007  FFE6   	movff	btemp,postinc1
 11404  013E2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11405  013E30  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11406  013E36  0060  F013  FFE6   	movff	btemp+3,postinc1
 11407  013E3C  0E00               	movlw	0
 11408  013E3E  6EE6               	movwf	postinc1,c
 11409  013E40  0E00               	movlw	0
 11410  013E42  6EE6               	movwf	postinc1,c
 11411  013E44  0E20               	movlw	32
 11412  013E46  6EE6               	movwf	postinc1,c
 11413  013E48  0E41               	movlw	65
 11414  013E4A  6EE6               	movwf	postinc1,c
 11415  013E4C  EC3B  F0AD         	call	___fldiv	;wreg free
 11416  013E50  0060  F007  FFE6   	movff	btemp,postinc1
 11417  013E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11418  013E5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11419  013E62  0060  F013  FFE6   	movff	btemp+3,postinc1
 11420                           
 11421                           ;stkvar	_cbz @ sp[(-21)+12]
 11422                           ;stkvar	_cb @ sp[(-21)+4]
 11423  013E68  0EEF               	movlw	-17
 11424  013E6A  006F FF8C  F009    	movff	plusw1,btemp+8
 11425  013E70  0EF0               	movlw	-16
 11426  013E72  006F FF8C  F00A    	movff	plusw1,btemp+9
 11427  013E78  0EF1               	movlw	-15
 11428  013E7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11429  013E80  0EF2               	movlw	-14
 11430  013E82  006F FF8C  F00C    	movff	plusw1,btemp+11
 11431  013E88  0EF7               	movlw	-9
 11432  013E8A  50E3               	movf	plusw1,w,c
 11433  013E8C  5E09               	subwf	(btemp+8)^0,f,c
 11434  013E8E  0EF8               	movlw	-8
 11435  013E90  50E3               	movf	plusw1,w,c
 11436  013E92  5A0A               	subwfb	(btemp+9)^0,f,c
 11437  013E94  0EF9               	movlw	-7
 11438  013E96  50E3               	movf	plusw1,w,c
 11439  013E98  5A0B               	subwfb	(btemp+10)^0,f,c
 11440  013E9A  0EFA               	movlw	-6
 11441  013E9C  50E3               	movf	plusw1,w,c
 11442  013E9E  5A0C               	subwfb	(btemp+11)^0,f,c
 11443  013EA0  0060  F027  FFE6   	movff	btemp+8,postinc1
 11444  013EA6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11445  013EAC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11446  013EB2  0060  F033  FFE6   	movff	btemp+11,postinc1
 11447  013EB8  0E00               	movlw	0
 11448  013EBA  6EE6               	movwf	postinc1,c
 11449  013EBC  ECAA  F0C9         	call	___xxtofl	;wreg free
 11450  013EC0  0060  F007  FFE6   	movff	btemp,postinc1
 11451  013EC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11452  013ECC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11453  013ED2  0060  F013  FFE6   	movff	btemp+3,postinc1
 11454  013ED8  0E00               	movlw	0
 11455  013EDA  6EE6               	movwf	postinc1,c
 11456  013EDC  0E00               	movlw	0
 11457  013EDE  6EE6               	movwf	postinc1,c
 11458  013EE0  0E20               	movlw	32
 11459  013EE2  6EE6               	movwf	postinc1,c
 11460  013EE4  0E41               	movlw	65
 11461  013EE6  6EE6               	movwf	postinc1,c
 11462  013EE8  EC3B  F0AD         	call	___fldiv	;wreg free
 11463  013EEC  0060  F007  FFE6   	movff	btemp,postinc1
 11464  013EF2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11465  013EF8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11466  013EFE  0060  F013  FFE6   	movff	btemp+3,postinc1
 11467  013F04  0E69               	movlw	low STR_67
 11468  013F06  6EE6               	movwf	postinc1,c
 11469  013F08  0EFD               	movlw	high STR_67
 11470  013F0A  6EE6               	movwf	postinc1,c
 11471  013F0C  0E00               	movlw	0
 11472  013F0E  6EE6               	movwf	postinc1,c
 11473  013F10  0E01               	movlw	1
 11474  013F12  6EE6               	movwf	postinc1,c
 11475  013F14  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11476  013F18  0060  F007  FFE6   	movff	btemp,postinc1
 11477  013F1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11478  013F24  0E0C               	movlw	12
 11479  013F26  6EE6               	movwf	postinc1,c
 11480  013F28  ECC4  F0D8         	call	_sprintf	;wreg free
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;main.c: 574:   sprintf(get_vterm_ptr(2, 0), "10A Cal Set         ");
 11484  013F2C  0E26               	movlw	low STR_68
 11485  013F2E  6EE6               	movwf	postinc1,c
 11486  013F30  0EFE               	movlw	high STR_68
 11487  013F32  6EE6               	movwf	postinc1,c
 11488  013F34  0E00               	movlw	0
 11489  013F36  6EE6               	movwf	postinc1,c
 11490  013F38  0E02               	movlw	2
 11491  013F3A  6EE6               	movwf	postinc1,c
 11492  013F3C  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11493  013F40  0060  F007  FFE6   	movff	btemp,postinc1
 11494  013F46  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11495  013F4C  0E04               	movlw	4
 11496  013F4E  6EE6               	movwf	postinc1,c
 11497  013F50  ECC4  F0D8         	call	_sprintf	;wreg free
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;main.c: 575:   update_lcd(0);
 11501  013F54  0E00               	movlw	0
 11502  013F56  6EE6               	movwf	postinc1,c
 11503  013F58  EC3C  F0D8         	call	_update_lcd	;wreg free
 11504                           
 11505                           ;main.c: 576:   WaitMs(5000);
 11506  013F5C  0E88               	movlw	136
 11507  013F5E  6EE6               	movwf	postinc1,c
 11508  013F60  0E13               	movlw	19
 11509  013F62  6EE6               	movwf	postinc1,c
 11510  013F64  EC49  F0E9         	call	_WaitMs	;wreg free
 11511                           
 11512                           ;main.c: 577:   write_cal_data();
 11513  013F68  EC9A  F0D6         	call	_write_cal_data	;wreg free
 11514                           
 11515                           ;main.c: 578:  } else {
 11516  013F6C  D055               	goto	l1503
 11517  013F6E                     l14552:
 11518                           
 11519                           ;main.c: 579:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 11520  013F6E  0E7A               	movlw	low STR_46
 11521  013F70  6EE6               	movwf	postinc1,c
 11522  013F72  0EFE               	movlw	high STR_46
 11523  013F74  6EE6               	movwf	postinc1,c
 11524  013F76  0E00               	movlw	0
 11525  013F78  6EE6               	movwf	postinc1,c
 11526  013F7A  0E00               	movlw	0
 11527  013F7C  6EE6               	movwf	postinc1,c
 11528  013F7E  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11529  013F82  0060  F007  FFE6   	movff	btemp,postinc1
 11530  013F88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11531  013F8E  0E04               	movlw	4
 11532  013F90  6EE6               	movwf	postinc1,c
 11533  013F92  ECC4  F0D8         	call	_sprintf	;wreg free
 11534                           
 11535                           ;main.c: 580:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 11536  013F96  0E01               	movlw	1
 11537  013F98  6EE6               	movwf	postinc1,c
 11538  013F9A  ECDB  F0EC         	call	_get_raw_result	;wreg free
 11539  013F9E  0060  F007  FFE6   	movff	btemp,postinc1
 11540  013FA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11541  013FAA  0E00               	movlw	0
 11542  013FAC  6EE6               	movwf	postinc1,c
 11543  013FAE  ECDB  F0EC         	call	_get_raw_result	;wreg free
 11544  013FB2  0060  F007  FFE6   	movff	btemp,postinc1
 11545  013FB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11546  013FBE  0E7E               	movlw	low STR_54
 11547  013FC0  6EE6               	movwf	postinc1,c
 11548  013FC2  0EFD               	movlw	high STR_54
 11549  013FC4  6EE6               	movwf	postinc1,c
 11550  013FC6  0E00               	movlw	0
 11551  013FC8  6EE6               	movwf	postinc1,c
 11552  013FCA  0E01               	movlw	1
 11553  013FCC  6EE6               	movwf	postinc1,c
 11554  013FCE  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11555  013FD2  0060  F007  FFE6   	movff	btemp,postinc1
 11556  013FD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11557  013FDE  0E08               	movlw	8
 11558  013FE0  6EE6               	movwf	postinc1,c
 11559  013FE2  ECC4  F0D8         	call	_sprintf	;wreg free
 11560                           
 11561                           ;main.c: 581:   sprintf(get_vterm_ptr(2, 0), "10A Out Of Range    ");
 11562  013FE6  0ECE               	movlw	low STR_71
 11563  013FE8  6EE6               	movwf	postinc1,c
 11564  013FEA  0EFE               	movlw	high STR_71
 11565  013FEC  6EE6               	movwf	postinc1,c
 11566  013FEE  0E00               	movlw	0
 11567  013FF0  6EE6               	movwf	postinc1,c
 11568  013FF2  0E02               	movlw	2
 11569  013FF4  6EE6               	movwf	postinc1,c
 11570  013FF6  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 11571  013FFA  0060  F007  FFE6   	movff	btemp,postinc1
 11572  014000  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11573  014006  0E04               	movlw	4
 11574  014008  6EE6               	movwf	postinc1,c
 11575  01400A  ECC4  F0D8         	call	_sprintf	;wreg free
 11576                           
 11577                           ;main.c: 582:   update_lcd(0);
 11578  01400E  0E00               	movlw	0
 11579  014010  6EE6               	movwf	postinc1,c
 11580  014012  EC3C  F0D8         	call	_update_lcd	;wreg free
 11581  014016  D45B               	goto	l14476
 11582  014018                     l1503:
 11583                           
 11584                           ; _current_sensor_cal: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 11585  014018  0EEF               	movlw	239
 11586  01401A  26E1               	addwf	fsr1l,f,c
 11587  01401C  0EFF               	movlw	255
 11588  01401E  22E2               	addwfc	fsr1h,f,c
 11589  014020  0012               	return		;funcret
 11590  014022                     __end_of_current_sensor_cal:
 11591                           	opt callstack 0
 11592                           
 11593 ;; *************** function _write_cal_data *****************
 11594 ;; Defined at:
 11595 ;;		line 400 in file "daq.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;		None
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  x               2  [STACK] unsigned short 
 11600 ;;  y               2  [STACK] unsigned short 
 11601 ;;  r_cal_ptr       1  [STACK] PTR unsigned char 
 11602 ;;		 -> R(57), 
 11603 ;;  crcVal          1  [STACK] unsigned char 
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1  [STACK] void 
 11606 ;; Registers used:
 11607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11617 ;;Total ram usage:        0 bytes
 11618 ;; Hardware stack levels used:    1
 11619 ;; Hardware stack levels required when called:   17
 11620 ;; This function calls:
 11621 ;;		_CRC_8BitDataWrite
 11622 ;;		_CRC_CalculatedResultGet
 11623 ;;		_CRC_Initialize
 11624 ;;		_CRC_IsBusy
 11625 ;;		_CRC_Start
 11626 ;;		_DATAEE_WriteByte
 11627 ;; This function is called by:
 11628 ;;		_current_sensor_cal
 11629 ;; This function uses a reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text30
 11633  01AD34                     __ptext30:
 11634                           	opt callstack 0
 11635  01AD34                     _write_cal_data:
 11636                           	opt callstack 0
 11637                           
 11638                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11639  01AD34  0E06               	movlw	6
 11640  01AD36  26E1               	addwf	fsr1l,f,c
 11641  01AD38  0E00               	movlw	0
 11642  01AD3A  22E2               	addwfc	fsr1h,f,c
 11643                           
 11644                           ;daq.c: 402:  uint16_t x = 0, y;
 11645                           ;stkvar	_x @ sp[(-6)+0]
 11646                           
 11647                           ;incstack = 0
 11648  01AD3C  0EFA               	movlw	-6
 11649  01AD3E  6AE3               	clrf	plusw1,c
 11650  01AD40  0EFB               	movlw	-5
 11651  01AD42  6AE3               	clrf	plusw1,c
 11652                           
 11653                           ;daq.c: 403:  uint8_t *r_cal_ptr, crcVal;;daq.c: 405:  y = sizeof(R);
 11654  01AD44  0E39               	movlw	57
 11655  01AD46  6E0B               	movwf	(btemp+10)^0,c
 11656  01AD48  0E00               	movlw	0
 11657  01AD4A  6E0C               	movwf	(btemp+11)^0,c
 11658                           
 11659                           ;stkvar	_y @ sp[(-6)+2]
 11660  01AD4C  0EFC               	movlw	-4
 11661  01AD4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11662  01AD54  0EFD               	movlw	-3
 11663  01AD56  0060  F033  FFE3   	movff	btemp+11,plusw1
 11664                           
 11665                           ;daq.c: 406:  R.crc = 0x42;
 11666  01AD5C  0E42               	movlw	66
 11667  01AD5E  0100               	movlb	0	; () banked
 11668  01AD60  6FE6               	movwf	(_R+56)& (0+255),b	;volatile
 11669                           
 11670                           ; BSR set to: 0
 11671                           ;daq.c: 407:  r_cal_ptr = (uint8_t*) & R;
 11672                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 11673  01AD62  0EAE               	movlw	low _R
 11674  01AD64  6E01               	movwf	btemp^0,c
 11675  01AD66  0EFE               	movlw	-2
 11676  01AD68  0060  F007  FFE3   	movff	btemp,plusw1
 11677                           
 11678                           ; BSR set to: 0
 11679                           ;daq.c: 408:  R.checkmark = 0x1957;
 11680  01AD6E  0E19               	movlw	25
 11681  01AD70  6FE5               	movwf	(_R+55)& (0+255),b	;volatile
 11682  01AD72  0E57               	movlw	87
 11683  01AD74  6FE4               	movwf	(_R+54)& (0+255),b	;volatile
 11684                           
 11685                           ; BSR set to: 0
 11686                           ;daq.c: 410:  CRC_Initialize();
 11687  01AD76  EC05  F0E1         	call	_CRC_Initialize	;wreg free
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;daq.c: 413:  CRC_Start();
 11691  01AD7A  ECE1  F0ED         	call	_CRC_Start	;wreg free
 11692  01AD7E                     l11492:
 11693                           
 11694                           ;daq.c: 416:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 11695                           ;stkvar	_x @ sp[(-6)+0]
 11696  01AD7E  0EFA               	movlw	-6
 11697  01AD80  006F FF8C  F00C    	movff	plusw1,btemp+11
 11698                           
 11699                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 11700  01AD86  0EFE               	movlw	-2
 11701  01AD88  50E3               	movf	plusw1,w,c
 11702  01AD8A  240C               	addwf	(btemp+11)^0,w,c
 11703  01AD8C  6ED9               	movwf	fsr2l,c
 11704  01AD8E  6ADA               	clrf	fsr2h,c
 11705  01AD90  50DF               	movf	indf2,w,c
 11706  01AD92  6EE6               	movwf	postinc1,c
 11707                           
 11708                           ;stkvar	_x @ sp[(-7)+0]
 11709  01AD94  0EF9               	movlw	-7
 11710  01AD96  006F FF8F FFE6     	movff	plusw1,postinc1
 11711  01AD9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11712  01ADA2  EC2D  F0E4         	call	_DATAEE_WriteByte	;wreg free
 11713                           
 11714                           ;daq.c: 417:   CRC_8BitDataWrite(r_cal_ptr[x]);
 11715                           ;stkvar	_x @ sp[(-6)+0]
 11716  01ADA6  0EFA               	movlw	-6
 11717  01ADA8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11718                           
 11719                           ;stkvar	_r_cal_ptr @ sp[(-6)+4]
 11720  01ADAE  0EFE               	movlw	-2
 11721  01ADB0  50E3               	movf	plusw1,w,c
 11722  01ADB2  240C               	addwf	(btemp+11)^0,w,c
 11723  01ADB4  6ED9               	movwf	fsr2l,c
 11724  01ADB6  6ADA               	clrf	fsr2h,c
 11725  01ADB8  50DF               	movf	indf2,w,c
 11726  01ADBA  6EE6               	movwf	postinc1,c
 11727  01ADBC  EC53  F0ED         	call	_CRC_8BitDataWrite	;wreg free
 11728  01ADC0                     l11496:
 11729  01ADC0  EC75  F0ED         	call	_CRC_IsBusy	;wreg free
 11730  01ADC4  5001               	movf	btemp^0,w,c
 11731  01ADC6  A4D8               	btfss	status,2,c
 11732  01ADC8  D7FB               	goto	l11496
 11733                           
 11734                           ;daq.c: 419:  } while (++x < y);
 11735                           ;stkvar	_y @ sp[(-6)+2]
 11736  01ADCA  0EFC               	movlw	-4
 11737  01ADCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 11738  01ADD2  0EFD               	movlw	-3
 11739  01ADD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11740                           
 11741                           ;stkvar	_x @ sp[(-6)+0]
 11742  01ADDA  0EFA               	movlw	-6
 11743  01ADDC  50E3               	movf	plusw1,w,c
 11744  01ADDE  0F01               	addlw	1
 11745  01ADE0  6E01               	movwf	btemp^0,c
 11746  01ADE2  0EFA               	movlw	-6
 11747  01ADE4  0060  F007  FFE3   	movff	btemp,plusw1
 11748  01ADEA  6A01               	clrf	btemp^0,c
 11749  01ADEC  0EFB               	movlw	-5
 11750  01ADEE  50E3               	movf	plusw1,w,c
 11751  01ADF0  2001               	addwfc	btemp^0,w,c
 11752  01ADF2  6E01               	movwf	btemp^0,c
 11753  01ADF4  0EFB               	movlw	-5
 11754  01ADF6  0060  F007  FFE3   	movff	btemp,plusw1
 11755  01ADFC  0EFA               	movlw	-6
 11756  01ADFE  006F FF8C  F009    	movff	plusw1,btemp+8
 11757  01AE04  0EFB               	movlw	-5
 11758  01AE06  006F FF8C  F00A    	movff	plusw1,btemp+9
 11759  01AE0C  500B               	movf	(btemp+10)^0,w,c
 11760  01AE0E  5C09               	subwf	(btemp+8)^0,w,c
 11761  01AE10  500C               	movf	(btemp+11)^0,w,c
 11762  01AE12  580A               	subwfb	(btemp+9)^0,w,c
 11763  01AE14  A0D8               	btfss	status,0,c
 11764  01AE16  D7B3               	goto	l11492
 11765                           
 11766                           ;daq.c: 421:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 11767  01AE18  0E00               	movlw	0
 11768  01AE1A  6EE6               	movwf	postinc1,c
 11769  01AE1C  0E00               	movlw	0
 11770  01AE1E  6EE6               	movwf	postinc1,c
 11771  01AE20  0E00               	movlw	0
 11772  01AE22  6EE6               	movwf	postinc1,c
 11773  01AE24  EC8D  F0CF         	call	_CRC_CalculatedResultGet	;wreg free
 11774                           
 11775                           ;stkvar	_crcVal @ sp[(-6)+5]
 11776  01AE28  0EFF               	movlw	-1
 11777  01AE2A  0060  F007  FFE3   	movff	btemp,plusw1
 11778                           
 11779                           ;daq.c: 423:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 11780                           ;stkvar	_crcVal @ sp[(-6)+5]
 11781  01AE30  0EFF               	movlw	-1
 11782  01AE32  50E3               	movf	plusw1,w,c
 11783  01AE34  6EE6               	movwf	postinc1,c
 11784  01AE36  0E38               	movlw	56
 11785  01AE38  6EE6               	movwf	postinc1,c
 11786  01AE3A  0E00               	movlw	0
 11787  01AE3C  6EE6               	movwf	postinc1,c
 11788  01AE3E  EC2D  F0E4         	call	_DATAEE_WriteByte	;wreg free
 11789                           
 11790                           ; _write_cal_data: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11791  01AE42  0EFA               	movlw	250
 11792  01AE44  26E1               	addwf	fsr1l,f,c
 11793  01AE46  0EFF               	movlw	255
 11794  01AE48  22E2               	addwfc	fsr1h,f,c
 11795  01AE4A  0012               	return		;funcret
 11796  01AE4C                     __end_of_write_cal_data:
 11797                           	opt callstack 0
 11798                           
 11799 ;; *************** function _DATAEE_WriteByte *****************
 11800 ;; Defined at:
 11801 ;;		line 172 in file "mcc_generated_files/memory.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  bAdd            2  [STACK] unsigned short 
 11804 ;;  bData           1  [STACK] unsigned char 
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;  GIEBitValue     1  [STACK] unsigned char 
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  1  [STACK] void 
 11809 ;; Registers used:
 11810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 11811 ;; Tracked objects:
 11812 ;;		On entry : 0/39
 11813 ;;		On exit  : 0/0
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11820 ;;Total ram usage:        0 bytes
 11821 ;; Hardware stack levels used:    1
 11822 ;; Hardware stack levels required when called:   15
 11823 ;; This function calls:
 11824 ;;		Nothing
 11825 ;; This function is called by:
 11826 ;;		_write_cal_data
 11827 ;; This function uses a reentrant model
 11828 ;;
 11829                           
 11830                           	psect	text31
 11831  01C85A                     __ptext31:
 11832                           	opt callstack 0
 11833  01C85A                     _DATAEE_WriteByte:
 11834                           	opt callstack 0
 11835                           
 11836                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11837  01C85A  52E6               	movf	postinc1,f,c
 11838                           
 11839                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 11840                           
 11841                           ;incstack = 0
 11842  01C85C  AED2               	btfss	210,7,c	;volatile
 11843  01C85E  D003               	goto	u9880
 11844  01C860  6A0C               	clrf	(btemp+11)^0,c
 11845  01C862  2A0C               	incf	(btemp+11)^0,f,c
 11846  01C864  D001               	goto	u9888
 11847  01C866                     u9880:
 11848  01C866  6A0C               	clrf	(btemp+11)^0,c
 11849  01C868                     u9888:
 11850                           
 11851                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11852  01C868  0EFF               	movlw	-1
 11853  01C86A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11854                           
 11855                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 11856                           ;stkvar	_bAdd @ sp[(-1)+-2]
 11857  01C870  0EFE               	movlw	254
 11858  01C872  24E1               	addwf	fsr1l,w,c
 11859  01C874  6ED9               	movwf	fsr2l,c
 11860  01C876  0EFF               	movlw	255
 11861  01C878  20E2               	addwfc	fsr1h,w,c
 11862  01C87A  6EDA               	movwf	fsr2h,c
 11863  01C87C  50DF               	movf	indf2,w,c
 11864  01C87E  0B03               	andlw	3
 11865  01C880  0139               	movlb	57	; () banked
 11866  01C882  6FE1               	movwf	225,b	;volatile
 11867                           
 11868                           ; BSR set to: 57
 11869                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 11870                           ;stkvar	_bAdd @ sp[(-1)+-2]
 11871  01C884  0EFD               	movlw	-3
 11872  01C886  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 11873                           
 11874                           ; BSR set to: 57
 11875                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 11876                           ;stkvar	_bData @ sp[(-1)+-3]
 11877  01C88C  0EFC               	movlw	-4
 11878  01C88E  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 11879                           
 11880                           ; BSR set to: 57
 11881                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 11882  01C894  0E3F               	movlw	-193
 11883  01C896  17E5               	andwf	229,f,b	;volsfr
 11884                           
 11885                           ; BSR set to: 57
 11886                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 11887  01C898  85E5               	bsf	229,2,b	;volsfr
 11888                           
 11889                           ; BSR set to: 57
 11890                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 11891  01C89A  9ED2               	bcf	210,7,c	;volatile
 11892                           
 11893                           ; BSR set to: 57
 11894                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 11895  01C89C  0E55               	movlw	85
 11896  01C89E  6FE6               	movwf	230,b	;volsfr
 11897                           
 11898                           ; BSR set to: 57
 11899                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 11900  01C8A0  0EAA               	movlw	170
 11901  01C8A2  6FE6               	movwf	230,b	;volsfr
 11902                           
 11903                           ; BSR set to: 57
 11904                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 11905  01C8A4  83E5               	bsf	229,1,b	;volsfr
 11906  01C8A6                     l942:
 11907                           
 11908                           ; BSR set to: 57
 11909                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 11910  01C8A6  B3E5               	btfsc	229,1,b	;volsfr
 11911  01C8A8  D7FE               	goto	l942
 11912                           
 11913                           ; BSR set to: 57
 11914                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 11915  01C8AA  95E5               	bcf	229,2,b	;volsfr
 11916                           
 11917                           ; BSR set to: 57
 11918                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 11919                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11920  01C8AC  0EFF               	movlw	-1
 11921  01C8AE  B0E3               	btfsc	plusw1,0,c
 11922  01C8B0  D002               	bra	u9905
 11923  01C8B2  9ED2               	bcf	210,7,c	;volatile
 11924  01C8B4  D001               	bra	u9906
 11925  01C8B6                     u9905:
 11926  01C8B6  8ED2               	bsf	210,7,c	;volatile
 11927  01C8B8                     u9906:
 11928                           
 11929                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 11930  01C8B8  52E5               	movf	postdec1,f,c
 11931  01C8BA  52E5               	movf	postdec1,f,c
 11932  01C8BC  52E5               	movf	postdec1,f,c
 11933  01C8BE  52E5               	movf	postdec1,f,c
 11934  01C8C0  0012               	return		;funcret
 11935  01C8C2                     __end_of_DATAEE_WriteByte:
 11936                           	opt callstack 0
 11937                           
 11938 ;; *************** function _CRC_Start *****************
 11939 ;; Defined at:
 11940 ;;		line 119 in file "mcc_generated_files/crc.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1  [STACK] void 
 11947 ;; Registers used:
 11948 ;;		None
 11949 ;; Tracked objects:
 11950 ;;		On entry : 3F/0
 11951 ;;		On exit  : 3F/39
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:   15
 11961 ;; This function calls:
 11962 ;;		Nothing
 11963 ;; This function is called by:
 11964 ;;		_read_cal_data
 11965 ;;		_write_cal_data
 11966 ;; This function uses a reentrant model
 11967 ;;
 11968                           
 11969                           	psect	text32
 11970  01DBC2                     __ptext32:
 11971                           	opt callstack 0
 11972  01DBC2                     _CRC_Start:
 11973                           	opt callstack 14
 11974                           
 11975                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 11976                           
 11977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11978                           ;incstack = 0
 11979  01DBC2  0139               	movlb	57	; () banked
 11980  01DBC4  8D68               	bsf	104,6,b	;volatile
 11981                           
 11982                           ; BSR set to: 57
 11983                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11984  01DBC6  0012               	return		;funcret
 11985  01DBC8                     __end_of_CRC_Start:
 11986                           	opt callstack 0
 11987                           
 11988 ;; *************** function _CRC_IsBusy *****************
 11989 ;; Defined at:
 11990 ;;		line 201 in file "mcc_generated_files/crc.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;		None
 11993 ;; Auto vars:     Size  Location     Type
 11994 ;;		None
 11995 ;; Return value:  Size  Location     Type
 11996 ;;                  1  [STACK] _Bool 
 11997 ;; Registers used:
 11998 ;;		btemp
 11999 ;; Tracked objects:
 12000 ;;		On entry : 0/39
 12001 ;;		On exit  : 0/0
 12002 ;;		Unchanged: 0/0
 12003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12008 ;;Total ram usage:        0 bytes
 12009 ;; Hardware stack levels used:    1
 12010 ;; Hardware stack levels required when called:   15
 12011 ;; This function calls:
 12012 ;;		Nothing
 12013 ;; This function is called by:
 12014 ;;		_read_cal_data
 12015 ;;		_write_cal_data
 12016 ;; This function uses a reentrant model
 12017 ;;
 12018                           
 12019                           	psect	text33
 12020  01DAEA                     __ptext33:
 12021                           	opt callstack 0
 12022  01DAEA                     _CRC_IsBusy:
 12023                           	opt callstack 14
 12024                           
 12025                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 12026                           
 12027                           ; BSR set to: 57
 12028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12029                           ;incstack = 0
 12030  01DAEA  0139               	movlb	57	; () banked
 12031  01DAEC  AB68               	btfss	104,5,b	;volatile
 12032  01DAEE  D003               	goto	u10090
 12033  01DAF0  6A01               	clrf	btemp^0,c
 12034  01DAF2  2A01               	incf	btemp^0,f,c
 12035  01DAF4  0012               	return	
 12036  01DAF6                     u10090:
 12037  01DAF6  6A01               	clrf	btemp^0,c
 12038                           
 12039                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12040  01DAF8  0012               	return		;funcret
 12041  01DAFA                     __end_of_CRC_IsBusy:
 12042                           	opt callstack 0
 12043                           
 12044 ;; *************** function _CRC_CalculatedResultGet *****************
 12045 ;; Defined at:
 12046 ;;		line 159 in file "mcc_generated_files/crc.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;  reverse         1  [STACK] _Bool 
 12049 ;;  xorValue        2  [STACK] unsigned short 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  result          2  [STACK] unsigned short 
 12052 ;;  mask            2  [STACK] unsigned short 
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  2  [STACK] unsigned short 
 12055 ;; Registers used:
 12056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/39
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12066 ;;Total ram usage:        0 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; Hardware stack levels required when called:   16
 12069 ;; This function calls:
 12070 ;;		_CRC_ReverseValue
 12071 ;; This function is called by:
 12072 ;;		_read_cal_data
 12073 ;;		_write_cal_data
 12074 ;; This function uses a reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text34
 12078  019F1A                     __ptext34:
 12079                           	opt callstack 0
 12080  019F1A                     _CRC_CalculatedResultGet:
 12081                           	opt callstack 0
 12082                           
 12083                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12084  019F1A  52E6               	movf	postinc1,f,c
 12085  019F1C  52E6               	movf	postinc1,f,c
 12086  019F1E  52E6               	movf	postinc1,f,c
 12087  019F20  52E6               	movf	postinc1,f,c
 12088                           
 12089                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 12090                           
 12091                           ;incstack = 0
 12092  019F22  0139               	movlb	57	; () banked
 12093  019F24  9D68               	bcf	104,6,b	;volatile
 12094                           
 12095                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 12096  019F26  9DA0               	bcf	160,6,b	;volatile
 12097                           
 12098                           ; BSR set to: 57
 12099                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 12100  019F28  5169               	movf	105,w,b	;volatile
 12101  019F2A  0B0F               	andlw	15
 12102  019F2C  6E0C               	movwf	(btemp+11)^0,c
 12103  019F2E  3A0C               	swapf	(btemp+11)^0,f,c
 12104  019F30  5169               	movf	105,w,b	;volatile
 12105  019F32  180C               	xorwf	(btemp+11)^0,w,c
 12106  019F34  0B0F               	andlw	-241
 12107  019F36  180C               	xorwf	(btemp+11)^0,w,c
 12108  019F38  6F69               	movwf	105,b	;volatile
 12109                           
 12110                           ; BSR set to: 57
 12111                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 12112  019F3A  0E08               	movlw	8
 12113  019F3C  0100               	movlb	0	; () banked
 12114  019F3E  65AC               	cpfsgt	(_crcObj+1)& (0+255),b
 12115  019F40  D003               	goto	l1282
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 12119  019F42  0139               	movlb	57	; () banked
 12120  019F44  6B61               	clrf	97,b	;volatile
 12121  019F46  D001               	goto	L9
 12122  019F48                     l1282:
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 12126  019F48  0139               	movlb	57	; () banked
 12127  019F4A                     L9:
 12128  019F4A  6B60               	clrf	96,b	;volatile
 12129                           
 12130                           ; BSR set to: 57
 12131                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 12132                           
 12133                           ;mcc_generated_files/crc.c: 176:      }
 12134  019F4C  8D68               	bsf	104,6,b	;volatile
 12135  019F4E                     l1284:
 12136                           
 12137                           ; BSR set to: 57
 12138  019F4E  ADA0               	btfss	160,6,b	;volatile
 12139  019F50  D7FE               	goto	l1284
 12140                           
 12141                           ; BSR set to: 57
 12142                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 12143  019F52  9DA0               	bcf	160,6,b	;volatile
 12144                           
 12145                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 12146  019F54  9D68               	bcf	104,6,b	;volatile
 12147                           
 12148                           ; BSR set to: 57
 12149                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 12150  019F56  0060  F2AC  F00C   	movff	_crcObj,btemp+11
 12151  019F5C  0EFF               	movlw	255
 12152  019F5E  260C               	addwf	(btemp+11)^0,f,c
 12153  019F60  3A0C               	swapf	(btemp+11)^0,f,c
 12154  019F62  5169               	movf	105,w,b	;volatile
 12155  019F64  180C               	xorwf	(btemp+11)^0,w,c
 12156  019F66  0B0F               	andlw	-241
 12157  019F68  180C               	xorwf	(btemp+11)^0,w,c
 12158  019F6A  6F69               	movwf	105,b	;volatile
 12159                           
 12160                           ; BSR set to: 57
 12161                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 12162  019F6C  5162               	movf	98,w,b	;volatile
 12163  019F6E  006E F58C  F001    	movff	14691,btemp	;volatile
 12164  019F74  6A02               	clrf	(btemp+1)^0,c
 12165  019F76  0060  F004  F002   	movff	btemp,btemp+1
 12166  019F7C  6A01               	clrf	btemp^0,c
 12167  019F7E  1201               	iorwf	btemp^0,f,c
 12168  019F80  0E00               	movlw	0
 12169  019F82  1202               	iorwf	(btemp+1)^0,f,c
 12170                           
 12171                           ;stkvar	_result @ sp[(-4)+0]
 12172  019F84  0EFC               	movlw	-4
 12173  019F86  0060  F007  FFE3   	movff	btemp,plusw1
 12174  019F8C  0EFD               	movlw	-3
 12175  019F8E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12176                           
 12177                           ; BSR set to: 57
 12178                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 12179  019F94  0E10               	movlw	16
 12180  019F96  0100               	movlb	0	; () banked
 12181  019F98  61AC               	cpfslt	(_crcObj+1)& (0+255),b
 12182  019F9A  D03A               	goto	l10826
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 12186  019F9C  0EFF               	movlw	255
 12187  019F9E  6E0B               	movwf	(btemp+10)^0,c
 12188  019FA0  0EFF               	movlw	255
 12189  019FA2  6E0C               	movwf	(btemp+11)^0,c
 12190  019FA4  0060  F2B0  F00A   	movff	_crcObj+1,btemp+9
 12191  019FAA  0E01               	movlw	1
 12192  019FAC  6E07               	movwf	(btemp+6)^0,c
 12193  019FAE  0E00               	movlw	0
 12194  019FB0  6E08               	movwf	(btemp+7)^0,c
 12195  019FB2  2A0A               	incf	(btemp+9)^0,f,c
 12196  019FB4  D003               	goto	u10074
 12197  019FB6                     u10075:
 12198  019FB6  90D8               	bcf	status,0,c
 12199  019FB8  3607               	rlcf	(btemp+6)^0,f,c
 12200  019FBA  3608               	rlcf	(btemp+7)^0,f,c
 12201  019FBC                     u10074:
 12202  019FBC  2E0A               	decfsz	(btemp+9)^0,f,c
 12203  019FBE  D7FB               	goto	u10075
 12204  019FC0  500B               	movf	(btemp+10)^0,w,c
 12205  019FC2  2607               	addwf	(btemp+6)^0,f,c
 12206  019FC4  500C               	movf	(btemp+11)^0,w,c
 12207  019FC6  2208               	addwfc	(btemp+7)^0,f,c
 12208                           
 12209                           ;stkvar	_mask @ sp[(-4)+2]
 12210  019FC8  0EFE               	movlw	-2
 12211  019FCA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 12212  019FD0  0EFF               	movlw	-1
 12213  019FD2  0060  F023  FFE3   	movff	btemp+7,plusw1
 12214                           
 12215                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 12216                           ;stkvar	_mask @ sp[(-4)+2]
 12217  019FD8  0EFE               	movlw	-2
 12218  019FDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 12219  019FE0  0EFF               	movlw	-1
 12220  019FE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 12221                           
 12222                           ;stkvar	_result @ sp[(-4)+0]
 12223  019FE8  0EFC               	movlw	-4
 12224  019FEA  006F FF8C  F001    	movff	plusw1,btemp
 12225  019FF0  500B               	movf	(btemp+10)^0,w,c
 12226  019FF2  1601               	andwf	btemp^0,f,c
 12227  019FF4  0EFC               	movlw	-4
 12228  019FF6  0060  F007  FFE3   	movff	btemp,plusw1
 12229  019FFC  0EFD               	movlw	-3
 12230  019FFE  006F FF8C  F001    	movff	plusw1,btemp
 12231  01A004  500C               	movf	(btemp+11)^0,w,c
 12232  01A006  1601               	andwf	btemp^0,f,c
 12233  01A008  0EFD               	movlw	-3
 12234  01A00A  0060  F007  FFE3   	movff	btemp,plusw1
 12235  01A010                     l10826:
 12236                           
 12237                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 12238                           ;stkvar	_reverse @ sp[(-4)+-1]
 12239  01A010  0EFB               	movlw	-5
 12240  01A012  50E3               	movf	plusw1,w,c
 12241  01A014  B4D8               	btfsc	status,2,c
 12242  01A016  D011               	goto	l10830
 12243                           
 12244                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 12245                           ;stkvar	_result @ sp[(-4)+0]
 12246  01A018  0EFC               	movlw	-4
 12247  01A01A  006F FF8F FFE6     	movff	plusw1,postinc1
 12248  01A020  006F FF8F FFE6     	movff	plusw1,postinc1
 12249  01A026  ECF3  F0DB         	call	_CRC_ReverseValue	;wreg free
 12250                           
 12251                           ;stkvar	_result @ sp[(-4)+0]
 12252  01A02A  0EFC               	movlw	-4
 12253  01A02C  0060  F007  FFE3   	movff	btemp,plusw1
 12254  01A032  0EFD               	movlw	-3
 12255  01A034  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12256  01A03A                     l10830:
 12257                           
 12258                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 12259                           ;stkvar	_xorValue @ sp[(-4)+-3]
 12260  01A03A  0EF9               	movlw	-7
 12261  01A03C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12262  01A042  0EFA               	movlw	-6
 12263  01A044  006F FF8C  F00C    	movff	plusw1,btemp+11
 12264                           
 12265                           ;stkvar	_result @ sp[(-4)+0]
 12266  01A04A  0EFC               	movlw	-4
 12267  01A04C  006F FF8C  F001    	movff	plusw1,btemp
 12268  01A052  500B               	movf	(btemp+10)^0,w,c
 12269  01A054  1A01               	xorwf	btemp^0,f,c
 12270  01A056  0EFC               	movlw	-4
 12271  01A058  0060  F007  FFE3   	movff	btemp,plusw1
 12272  01A05E  0EFD               	movlw	-3
 12273  01A060  006F FF8C  F001    	movff	plusw1,btemp
 12274  01A066  500C               	movf	(btemp+11)^0,w,c
 12275  01A068  1A01               	xorwf	btemp^0,f,c
 12276  01A06A  0EFD               	movlw	-3
 12277  01A06C  0060  F007  FFE3   	movff	btemp,plusw1
 12278                           
 12279                           ;mcc_generated_files/crc.c: 198:     return result;
 12280                           ;stkvar	_result @ sp[(-4)+0]
 12281  01A072  0EFC               	movlw	-4
 12282  01A074  006F FF8C  F001    	movff	plusw1,btemp
 12283  01A07A  0EFD               	movlw	-3
 12284  01A07C  006F FF8C  F002    	movff	plusw1,btemp+1
 12285                           
 12286                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 12287  01A082  0EF9               	movlw	249
 12288  01A084  26E1               	addwf	fsr1l,f,c
 12289  01A086  0EFF               	movlw	255
 12290  01A088  22E2               	addwfc	fsr1h,f,c
 12291  01A08A  0012               	return		;funcret
 12292  01A08C                     __end_of_CRC_CalculatedResultGet:
 12293                           	opt callstack 0
 12294                           
 12295 ;; *************** function _CRC_ReverseValue *****************
 12296 ;; Defined at:
 12297 ;;		line 138 in file "mcc_generated_files/crc.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;  crc             2  [STACK] unsigned short 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;  mask            2  [STACK] unsigned short 
 12302 ;;  reverse         2  [STACK] unsigned short 
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  2  [STACK] unsigned short 
 12305 ;; Registers used:
 12306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12316 ;;Total ram usage:        0 bytes
 12317 ;; Hardware stack levels used:    1
 12318 ;; Hardware stack levels required when called:   15
 12319 ;; This function calls:
 12320 ;;		Nothing
 12321 ;; This function is called by:
 12322 ;;		_CRC_CalculatedResultGet
 12323 ;; This function uses a reentrant model
 12324 ;;
 12325                           
 12326                           	psect	text35
 12327  01B7E6                     __ptext35:
 12328                           	opt callstack 0
 12329  01B7E6                     _CRC_ReverseValue:
 12330                           	opt callstack 0
 12331                           
 12332                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12333  01B7E6  52E6               	movf	postinc1,f,c
 12334  01B7E8  52E6               	movf	postinc1,f,c
 12335  01B7EA  52E6               	movf	postinc1,f,c
 12336  01B7EC  52E6               	movf	postinc1,f,c
 12337                           
 12338                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 12339                           
 12340                           ;incstack = 0
 12341  01B7EE  0E01               	movlw	1
 12342  01B7F0  6E0B               	movwf	(btemp+10)^0,c
 12343  01B7F2  0E00               	movlw	0
 12344  01B7F4  6E0C               	movwf	(btemp+11)^0,c
 12345                           
 12346                           ;stkvar	_mask @ sp[(-4)+0]
 12347  01B7F6  0EFC               	movlw	-4
 12348  01B7F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12349  01B7FE  0EFD               	movlw	-3
 12350  01B800  0060  F033  FFE3   	movff	btemp+11,plusw1
 12351                           
 12352                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 12353  01B806  0060  F2B0  F00C   	movff	_crcObj+1,btemp+11
 12354  01B80C  0EFF               	movlw	255
 12355  01B80E  260C               	addwf	(btemp+11)^0,f,c
 12356                           
 12357                           ;stkvar	_mask @ sp[(-4)+0]
 12358  01B810  50E1               	movf	fsr1l,w,c
 12359  01B812  0FFC               	addlw	-4
 12360  01B814  6ED9               	movwf	fsr2l,c
 12361  01B816  50E2               	movf	fsr1h,w,c
 12362  01B818  6EDA               	movwf	fsr2h,c
 12363  01B81A  0EFF               	movlw	255
 12364  01B81C  22DA               	addwfc	fsr2h,f,c
 12365  01B81E  280C               	incf	(btemp+11)^0,w,c
 12366  01B820  D003               	goto	u9680
 12367  01B822                     u9685:
 12368  01B822  90D8               	bcf	status,0,c
 12369  01B824  36DE               	rlcf	postinc2,f,c
 12370  01B826  36DD               	rlcf	postdec2,f,c
 12371  01B828                     u9680:
 12372  01B828  2EE8               	decfsz	wreg,f,c
 12373  01B82A  D7FB               	goto	u9685
 12374                           
 12375                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 12376                           ;stkvar	_reverse @ sp[(-4)+2]
 12377  01B82C  0EFE               	movlw	-2
 12378  01B82E  6AE3               	clrf	plusw1,c
 12379  01B830  0EFF               	movlw	-1
 12380  01B832  6AE3               	clrf	plusw1,c
 12381                           
 12382                           ;mcc_generated_files/crc.c: 147:     while(crc)
 12383  01B834  D029               	goto	l10544
 12384  01B836                     l10536:
 12385                           
 12386                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 12387                           ;stkvar	_crc @ sp[(-4)+-2]
 12388  01B836  0EFA               	movlw	-6
 12389  01B838  A0E3               	btfss	plusw1,0,c
 12390  01B83A  D01C               	goto	l10540
 12391                           
 12392                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 12393                           ;stkvar	_mask @ sp[(-4)+0]
 12394  01B83C  0EFC               	movlw	-4
 12395  01B83E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12396  01B844  0EFD               	movlw	-3
 12397  01B846  006F FF8C  F00C    	movff	plusw1,btemp+11
 12398                           
 12399                           ;stkvar	_reverse @ sp[(-4)+2]
 12400  01B84C  0EFE               	movlw	-2
 12401  01B84E  006F FF8C  F001    	movff	plusw1,btemp
 12402  01B854  500B               	movf	(btemp+10)^0,w,c
 12403  01B856  1201               	iorwf	btemp^0,f,c
 12404  01B858  0EFE               	movlw	-2
 12405  01B85A  0060  F007  FFE3   	movff	btemp,plusw1
 12406  01B860  0EFF               	movlw	-1
 12407  01B862  006F FF8C  F001    	movff	plusw1,btemp
 12408  01B868  500C               	movf	(btemp+11)^0,w,c
 12409  01B86A  1201               	iorwf	btemp^0,f,c
 12410  01B86C  0EFF               	movlw	-1
 12411  01B86E  0060  F007  FFE3   	movff	btemp,plusw1
 12412  01B874                     l10540:
 12413                           
 12414                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 12415                           ;stkvar	_mask @ sp[(-4)+0]
 12416  01B874  90D8               	bcf	status,0,c
 12417  01B876  0EFD               	movlw	-3
 12418  01B878  32E3               	rrcf	plusw1,f,c
 12419  01B87A  0EFC               	movlw	-4
 12420  01B87C  32E3               	rrcf	plusw1,f,c
 12421                           
 12422                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 12423                           ;stkvar	_crc @ sp[(-4)+-2]
 12424  01B87E  90D8               	bcf	status,0,c
 12425  01B880  0EFB               	movlw	-5
 12426  01B882  32E3               	rrcf	plusw1,f,c
 12427  01B884  0EFA               	movlw	-6
 12428  01B886  32E3               	rrcf	plusw1,f,c
 12429  01B888                     l10544:
 12430                           
 12431                           ;mcc_generated_files/crc.c: 147:     while(crc)
 12432                           ;stkvar	_crc @ sp[(-4)+-2]
 12433  01B888  0EFA               	movlw	-6
 12434  01B88A  006F FF8C  F001    	movff	plusw1,btemp
 12435  01B890  0EFB               	movlw	-5
 12436  01B892  50E3               	movf	plusw1,w,c
 12437  01B894  1001               	iorwf	btemp^0,w,c
 12438  01B896  A4D8               	btfss	status,2,c
 12439  01B898  D7CE               	goto	l10536
 12440                           
 12441                           ;mcc_generated_files/crc.c: 156:     return reverse;
 12442                           ;stkvar	_reverse @ sp[(-4)+2]
 12443  01B89A  0EFE               	movlw	-2
 12444  01B89C  006F FF8C  F001    	movff	plusw1,btemp
 12445  01B8A2  0EFF               	movlw	-1
 12446  01B8A4  006F FF8C  F002    	movff	plusw1,btemp+1
 12447                           
 12448                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 12449  01B8AA  0EFA               	movlw	250
 12450  01B8AC  26E1               	addwf	fsr1l,f,c
 12451  01B8AE  0EFF               	movlw	255
 12452  01B8B0  22E2               	addwfc	fsr1h,f,c
 12453  01B8B2  0012               	return		;funcret
 12454  01B8B4                     __end_of_CRC_ReverseValue:
 12455                           	opt callstack 0
 12456                           
 12457 ;; *************** function _CRC_8BitDataWrite *****************
 12458 ;; Defined at:
 12459 ;;		line 125 in file "mcc_generated_files/crc.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;  data            1  [STACK] unsigned char 
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1  [STACK] _Bool 
 12466 ;; Registers used:
 12467 ;;		fsr1l, fsr1h
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/2
 12470 ;;		On exit  : 3F/39
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12477 ;;Total ram usage:        0 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; Hardware stack levels required when called:   15
 12480 ;; This function calls:
 12481 ;;		Nothing
 12482 ;; This function is called by:
 12483 ;;		_read_cal_data
 12484 ;;		_write_cal_data
 12485 ;; This function uses a reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text36
 12489  01DAA6                     __ptext36:
 12490                           	opt callstack 0
 12491  01DAA6                     _CRC_8BitDataWrite:
 12492                           	opt callstack 14
 12493                           
 12494                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 12495                           
 12496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12497                           ;incstack = 0
 12498  01DAA6  0139               	movlb	57	; () banked
 12499  01DAA8  B168               	btfsc	104,0,b	;volatile
 12500  01DAAA  D004               	goto	l1271
 12501                           
 12502                           ; BSR set to: 57
 12503                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 12504                           ;stkvar	_data @ sp[(0)+-1]
 12505  01DAAC  0EFF               	movlw	-1
 12506  01DAAE  006F FF8F F960     	movff	plusw1,14688	;volatile
 12507  01DAB4                     l1271:
 12508                           
 12509                           ; BSR set to: 57
 12510                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 12511  01DAB4  52E5               	movf	postdec1,f,c
 12512  01DAB6  0012               	return		;funcret
 12513  01DAB8                     __end_of_CRC_8BitDataWrite:
 12514                           	opt callstack 0
 12515                           
 12516 ;; *************** function _start_adc_scan *****************
 12517 ;; Defined at:
 12518 ;;		line 65 in file "daq.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;		None
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;		None
 12523 ;; Return value:  Size  Location     Type
 12524 ;;                  1  [STACK] _Bool 
 12525 ;; Registers used:
 12526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12527 ;; Tracked objects:
 12528 ;;		On entry : 0/0
 12529 ;;		On exit  : 1/0
 12530 ;;		Unchanged: 0/0
 12531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12536 ;;Total ram usage:        0 bytes
 12537 ;; Hardware stack levels used:    1
 12538 ;; Hardware stack levels required when called:   16
 12539 ;; This function calls:
 12540 ;;		_ADCC_DischargeSampleCapacitor
 12541 ;;		_ADCC_SetADIInterruptHandler
 12542 ;;		_ADCC_SetADTIInterruptHandler
 12543 ;;		_ADCC_StartConversion
 12544 ;; This function is called by:
 12545 ;;		_main
 12546 ;;		_current_sensor_cal
 12547 ;;		_update_adc_result
 12548 ;; This function uses a reentrant model
 12549 ;;
 12550                           
 12551                           	psect	text37
 12552  01C98E                     __ptext37:
 12553                           	opt callstack 0
 12554  01C98E                     _start_adc_scan:
 12555                           	opt callstack 14
 12556                           
 12557                           ;daq.c: 67:  if (R.done)
 12558                           
 12559                           ; BSR set to: 57
 12560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12561                           ;incstack = 0
 12562  01C98E  0100               	movlb	0	; () banked
 12563  01C990  51E3               	movf	(_R+53)& (0+255),w,b	;volatile
 12564  01C992  A4D8               	btfss	status,2,c
 12565  01C994  0012               	return	
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;daq.c: 70:  R.scan_index = 0;
 12569  01C996  6BE0               	clrf	(_R+50)& (0+255),b	;volatile
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;daq.c: 71:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 12573  01C998  013A               	movlb	58	; () banked
 12574  01C99A  5140               	movf	64,w,b	;volatile
 12575  01C99C  006E F940  F001    	movff	14928,btemp	;volatile
 12576  01C9A2  6A02               	clrf	(btemp+1)^0,c
 12577  01C9A4  0060  F004  F002   	movff	btemp,btemp+1
 12578  01C9AA  6A01               	clrf	btemp^0,c
 12579  01C9AC  2601               	addwf	btemp^0,f,c
 12580  01C9AE  0E00               	movlw	0
 12581  01C9B0  2202               	addwfc	(btemp+1)^0,f,c
 12582  01C9B2  0E77               	movlw	119
 12583  01C9B4  1401               	andwf	btemp^0,w,c
 12584  01C9B6  0100               	movlb	0	; () banked
 12585  01C9B8  6FE1               	movwf	(_R+51)& (0+255),b	;volatile
 12586  01C9BA  0E3C               	movlw	60
 12587  01C9BC  1402               	andwf	(btemp+1)^0,w,c
 12588  01C9BE  6FE2               	movwf	(_R+52)& (0+255),b	;volatile
 12589                           
 12590                           ; BSR set to: 0
 12591                           ;daq.c: 72:  ADCC_SetADIInterruptHandler(adc_int_handler);
 12592  01C9C0  0EEE               	movlw	low _adc_int_handler
 12593  01C9C2  6EE6               	movwf	postinc1,c
 12594  01C9C4  0EDB               	movlw	high _adc_int_handler
 12595  01C9C6  6EE6               	movwf	postinc1,c
 12596  01C9C8  0E01               	movlw	low (_adc_int_handler shr (0+16))
 12597  01C9CA  6EE6               	movwf	postinc1,c
 12598  01C9CC  EC8F  F0EB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12599                           
 12600                           ;daq.c: 73:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 12601  01C9D0  0E3A               	movlw	low _adc_int_t_handler
 12602  01C9D2  6EE6               	movwf	postinc1,c
 12603  01C9D4  0EC5               	movlw	high _adc_int_t_handler
 12604  01C9D6  6EE6               	movwf	postinc1,c
 12605  01C9D8  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 12606  01C9DA  6EE6               	movwf	postinc1,c
 12607  01C9DC  EC7B  F0EB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12608                           
 12609                           ;daq.c: 74:  ADCC_DischargeSampleCapacitor();
 12610  01C9E0  ECD1  F0ED         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 12611                           
 12612                           ; BSR set to: 62
 12613                           ;daq.c: 75:  ADCC_StartConversion(R.scan_index & 0xf);
 12614  01C9E4  0100               	movlb	0	; () banked
 12615  01C9E6  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 12616  01C9E8  0B0F               	andlw	15
 12617  01C9EA  6EE6               	movwf	postinc1,c
 12618  01C9EC  EC5C  F0ED         	call	_ADCC_StartConversion	;wreg free
 12619                           
 12620                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12621  01C9F0  0012               	return		;funcret
 12622  01C9F2                     __end_of_start_adc_scan:
 12623                           	opt callstack 0
 12624                           
 12625 ;; *************** function _ADCC_StartConversion *****************
 12626 ;; Defined at:
 12627 ;;		line 128 in file "mcc_generated_files/adcc.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;  channel         1  [STACK] enum E16136
 12630 ;; Auto vars:     Size  Location     Type
 12631 ;;		None
 12632 ;; Return value:  Size  Location     Type
 12633 ;;                  1  [STACK] void 
 12634 ;; Registers used:
 12635 ;;		fsr1l, fsr1h
 12636 ;; Tracked objects:
 12637 ;;		On entry : 3F/0
 12638 ;;		On exit  : 3F/3E
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12645 ;;Total ram usage:        0 bytes
 12646 ;; Hardware stack levels used:    1
 12647 ;; Hardware stack levels required when called:   15
 12648 ;; This function calls:
 12649 ;;		Nothing
 12650 ;; This function is called by:
 12651 ;;		_start_adc_scan
 12652 ;;		_adc_int_t_handler
 12653 ;; This function uses a reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text38
 12657  01DAB8                     __ptext38:
 12658                           	opt callstack 0
 12659  01DAB8                     _ADCC_StartConversion:
 12660                           	opt callstack 0
 12661                           
 12662                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 12663                           ;stkvar	_channel @ sp[(0)+-1]
 12664                           
 12665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12666                           ;incstack = 0
 12667 ;; hardware stack exceeded
 12668  01DAB8  0EFF               	movlw	-1
 12669  01DABA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 12670                           
 12671                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 12672  01DAC0  013E               	movlb	62	; () banked
 12673  01DAC2  8FF8               	bsf	248,7,b	;volatile
 12674                           
 12675                           ; BSR set to: 62
 12676                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 12677  01DAC4  81F8               	bsf	248,0,b	;volatile
 12678                           
 12679                           ; BSR set to: 62
 12680                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 12681  01DAC6  52E5               	movf	postdec1,f,c
 12682  01DAC8  0012               	return		;funcret
 12683  01DACA                     __end_of_ADCC_StartConversion:
 12684                           	opt callstack 0
 12685                           
 12686 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 12687 ;; Defined at:
 12688 ;;		line 189 in file "mcc_generated_files/adcc.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;		None
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  1  [STACK] void 
 12695 ;; Registers used:
 12696 ;;		wreg, status,2
 12697 ;; Tracked objects:
 12698 ;;		On entry : 0/0
 12699 ;;		On exit  : 3F/3E
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12706 ;;Total ram usage:        0 bytes
 12707 ;; Hardware stack levels used:    1
 12708 ;; Hardware stack levels required when called:   15
 12709 ;; This function calls:
 12710 ;;		Nothing
 12711 ;; This function is called by:
 12712 ;;		_start_adc_scan
 12713 ;;		_adc_int_t_handler
 12714 ;; This function uses a reentrant model
 12715 ;;
 12716                           
 12717                           	psect	text39
 12718  01DBA2                     __ptext39:
 12719                           	opt callstack 0
 12720  01DBA2                     _ADCC_DischargeSampleCapacitor:
 12721                           	opt callstack 0
 12722                           
 12723                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 12724                           
 12725                           ; BSR set to: 62
 12726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12727                           ;incstack = 0
 12728 ;; hardware stack exceeded
 12729  01DBA2  0E3B               	movlw	59
 12730  01DBA4  013E               	movlb	62	; () banked
 12731  01DBA6  6FF1               	movwf	241,b	;volatile
 12732                           
 12733                           ; BSR set to: 62
 12734                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 12735  01DBA8  0012               	return		;funcret
 12736  01DBAA                     __end_of_ADCC_DischargeSampleCapacitor:
 12737                           	opt callstack 0
 12738                           
 12739 ;; *************** function _spinners *****************
 12740 ;; Defined at:
 12741 ;;		line 146 in file "mbmc.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;  shape           1  [STACK] unsigned char 
 12744 ;;  reset           1  [STACK] const unsigned char 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;  c               1  [STACK] unsigned char 
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  1  [STACK] unsigned char 
 12749 ;; Registers used:
 12750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12760 ;;Total ram usage:        0 bytes
 12761 ;; Hardware stack levels used:    1
 12762 ;; Hardware stack levels required when called:   16
 12763 ;; This function calls:
 12764 ;;		_strlen
 12765 ;; This function is called by:
 12766 ;;		_main
 12767 ;;		_current_sensor_cal
 12768 ;; This function uses a reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text40
 12772  01B292                     __ptext40:
 12773                           	opt callstack 0
 12774  01B292                     _spinners:
 12775                           	opt callstack 0
 12776                           
 12777                           ; BSR set to: 62
 12778                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12779  01B292  52E6               	movf	postinc1,f,c
 12780                           
 12781                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 12782                           ;stkvar	_shape @ sp[(-1)+-1]
 12783                           
 12784                           ;incstack = 0
 12785  01B294  0EFE               	movlw	-2
 12786  01B296  006F FF8C  F001    	movff	plusw1,btemp
 12787  01B29C  0E05               	movlw	5
 12788  01B29E  6401               	cpfsgt	btemp^0,c
 12789  01B2A0  D002               	goto	l2149
 12790                           
 12791                           ;mbmc.c: 152:   shape = 0;
 12792                           ;stkvar	_shape @ sp[(-1)+-1]
 12793  01B2A2  0EFE               	movlw	-2
 12794  01B2A4  6AE3               	clrf	plusw1,c
 12795  01B2A6                     l2149:
 12796                           
 12797                           ;mbmc.c: 153:  if (reset)
 12798                           ;stkvar	_reset @ sp[(-1)+-2]
 12799  01B2A6  0EFD               	movlw	-3
 12800  01B2A8  50E3               	movf	plusw1,w,c
 12801  01B2AA  B4D8               	btfsc	status,2,c
 12802  01B2AC  D00C               	goto	l11412
 12803                           
 12804                           ;mbmc.c: 154:   s[shape] = 0;
 12805                           ;stkvar	_shape @ sp[(-1)+-1]
 12806  01B2AE  0EFE               	movlw	-2
 12807  01B2B0  50E3               	movf	plusw1,w,c
 12808  01B2B2  6E0B               	movwf	(btemp+10)^0,c
 12809  01B2B4  6A0C               	clrf	(btemp+11)^0,c
 12810  01B2B6  0EE4               	movlw	low spinners@s
 12811  01B2B8  240B               	addwf	(btemp+10)^0,w,c
 12812  01B2BA  6ED9               	movwf	fsr2l,c
 12813  01B2BC  0E01               	movlw	high spinners@s
 12814  01B2BE  200C               	addwfc	(btemp+11)^0,w,c
 12815  01B2C0  6EDA               	movwf	fsr2h,c
 12816  01B2C2  0E00               	movlw	0
 12817  01B2C4  6EDF               	movwf	indf2,c
 12818  01B2C6                     l11412:
 12819                           
 12820                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 12821                           ;stkvar	_shape @ sp[(-1)+-1]
 12822  01B2C6  0EFE               	movlw	-2
 12823  01B2C8  50E3               	movf	plusw1,w,c
 12824  01B2CA  0D14               	mullw	20
 12825  01B2CC  0EDD               	movlw	low _spin
 12826  01B2CE  6E0B               	movwf	(btemp+10)^0,c
 12827  01B2D0  0EF9               	movlw	high _spin
 12828  01B2D2  6E0C               	movwf	(btemp+11)^0,c
 12829  01B2D4  50F3               	movf	243,w,c
 12830  01B2D6  260B               	addwf	(btemp+10)^0,f,c
 12831  01B2D8  50F4               	movf	244,w,c
 12832  01B2DA  220C               	addwfc	(btemp+11)^0,f,c
 12833                           
 12834                           ;stkvar	_shape @ sp[(-1)+-1]
 12835  01B2DC  0EFE               	movlw	-2
 12836  01B2DE  50E3               	movf	plusw1,w,c
 12837  01B2E0  6E09               	movwf	(btemp+8)^0,c
 12838  01B2E2  6A0A               	clrf	(btemp+9)^0,c
 12839  01B2E4  0EE4               	movlw	low spinners@s
 12840  01B2E6  2409               	addwf	(btemp+8)^0,w,c
 12841  01B2E8  6ED9               	movwf	fsr2l,c
 12842  01B2EA  0E01               	movlw	high spinners@s
 12843  01B2EC  200A               	addwfc	(btemp+9)^0,w,c
 12844  01B2EE  6EDA               	movwf	fsr2h,c
 12845  01B2F0  50DF               	movf	indf2,w,c
 12846  01B2F2  260B               	addwf	(btemp+10)^0,f,c
 12847  01B2F4  0E00               	movlw	0
 12848  01B2F6  220C               	addwfc	(btemp+11)^0,f,c
 12849  01B2F8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12850  01B2FE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12851  01B304                     	if	0	;tblptru may be non-zero
 12852  01B304                     	endif
 12853  01B304                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12854  01B304  0E00               	movlw	low (__mediumconst shr (0+16))
 12855  01B306  6EF8               	movwf	tblptru,c
 12856  01B308                     	endif
 12857                           
 12858                           ;stkvar	_c @ sp[(-1)+0]
 12859  01B308  0008               	tblrd		*
 12860  01B30A  0EFF               	movlw	-1
 12861  01B30C  006F FFD7 FFE3     	movff	tablat,plusw1
 12862                           
 12863                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 12864                           ;stkvar	_shape @ sp[(-1)+-1]
 12865  01B312  0EFE               	movlw	-2
 12866  01B314  50E3               	movf	plusw1,w,c
 12867  01B316  0D14               	mullw	20
 12868  01B318  0EDD               	movlw	low _spin
 12869  01B31A  6E0B               	movwf	(btemp+10)^0,c
 12870  01B31C  0EF9               	movlw	high _spin
 12871  01B31E  6E0C               	movwf	(btemp+11)^0,c
 12872  01B320  50F3               	movf	243,w,c
 12873  01B322  260B               	addwf	(btemp+10)^0,f,c
 12874  01B324  50F4               	movf	244,w,c
 12875  01B326  220C               	addwfc	(btemp+11)^0,f,c
 12876  01B328  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12877  01B32E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12878  01B334  ECD6  F0DF         	call	_strlen	;wreg free
 12879                           
 12880                           ;stkvar	_shape @ sp[(-1)+-1]
 12881  01B338  0EFE               	movlw	-2
 12882  01B33A  50E3               	movf	plusw1,w,c
 12883  01B33C  6E0B               	movwf	(btemp+10)^0,c
 12884  01B33E  6A0C               	clrf	(btemp+11)^0,c
 12885  01B340  0EE4               	movlw	low spinners@s
 12886  01B342  240B               	addwf	(btemp+10)^0,w,c
 12887  01B344  6ED9               	movwf	fsr2l,c
 12888  01B346  0E01               	movlw	high spinners@s
 12889  01B348  200C               	addwfc	(btemp+11)^0,w,c
 12890  01B34A  6EDA               	movwf	fsr2h,c
 12891  01B34C  2ADF               	incf	indf2,f,c
 12892  01B34E  50DF               	movf	indf2,w,c
 12893  01B350  6E0B               	movwf	(btemp+10)^0,c
 12894  01B352  6A0C               	clrf	(btemp+11)^0,c
 12895  01B354  5001               	movf	btemp^0,w,c
 12896  01B356  5C0B               	subwf	(btemp+10)^0,w,c
 12897  01B358  5002               	movf	(btemp+1)^0,w,c
 12898  01B35A  580C               	subwfb	(btemp+11)^0,w,c
 12899  01B35C  A0D8               	btfss	status,0,c
 12900  01B35E  D00C               	goto	l11418
 12901                           
 12902                           ;mbmc.c: 157:   s[shape] = 0;
 12903                           ;stkvar	_shape @ sp[(-1)+-1]
 12904  01B360  0EFE               	movlw	-2
 12905  01B362  50E3               	movf	plusw1,w,c
 12906  01B364  6E0B               	movwf	(btemp+10)^0,c
 12907  01B366  6A0C               	clrf	(btemp+11)^0,c
 12908  01B368  0EE4               	movlw	low spinners@s
 12909  01B36A  240B               	addwf	(btemp+10)^0,w,c
 12910  01B36C  6ED9               	movwf	fsr2l,c
 12911  01B36E  0E01               	movlw	high spinners@s
 12912  01B370  200C               	addwfc	(btemp+11)^0,w,c
 12913  01B372  6EDA               	movwf	fsr2h,c
 12914  01B374  0E00               	movlw	0
 12915  01B376  6EDF               	movwf	indf2,c
 12916  01B378                     l11418:
 12917                           
 12918                           ;mbmc.c: 158:  return c;
 12919                           ;stkvar	_c @ sp[(-1)+0]
 12920  01B378  0EFF               	movlw	-1
 12921  01B37A  006F FF8C  F001    	movff	plusw1,btemp
 12922                           
 12923                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 12924  01B380  52E5               	movf	postdec1,f,c
 12925  01B382  52E5               	movf	postdec1,f,c
 12926  01B384  52E5               	movf	postdec1,f,c
 12927  01B386  0012               	return		;funcret
 12928  01B388                     __end_of_spinners:
 12929                           	opt callstack 0
 12930                           
 12931 ;; *************** function _get_switch *****************
 12932 ;; Defined at:
 12933 ;;		line 18 in file "dio.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;  i               1  [STACK] const unsigned char 
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  1  [STACK] enum E17036
 12940 ;; Registers used:
 12941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12951 ;;Total ram usage:        0 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:   15
 12954 ;; This function calls:
 12955 ;;		Nothing
 12956 ;; This function is called by:
 12957 ;;		_main
 12958 ;;		_current_sensor_cal
 12959 ;;		_hid_input
 12960 ;; This function uses a reentrant model
 12961 ;;
 12962                           
 12963                           	psect	text41
 12964  01D4B8                     __ptext41:
 12965                           	opt callstack 0
 12966  01D4B8                     _get_switch:
 12967                           	opt callstack 13
 12968                           
 12969                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 12970                           ;stkvar	_i @ sp[(0)+-1]
 12971                           
 12972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12973                           ;incstack = 0
 12974  01D4B8  0EFF               	movlw	-1
 12975  01D4BA  006F FF8C  F001    	movff	plusw1,btemp
 12976  01D4C0  0E05               	movlw	5
 12977  01D4C2  6401               	cpfsgt	btemp^0,c
 12978  01D4C4  D002               	goto	l10896
 12979                           
 12980                           ;dio.c: 21:   return SW_OFF;
 12981  01D4C6  0E00               	movlw	0
 12982  01D4C8  D00A               	goto	L10
 12983  01D4CA                     l10896:
 12984                           
 12985                           ;dio.c: 23:  return S.button[i].sw;
 12986                           ;stkvar	_i @ sp[(0)+-1]
 12987  01D4CA  0EFF               	movlw	-1
 12988  01D4CC  50E3               	movf	plusw1,w,c
 12989  01D4CE  0D05               	mullw	5
 12990  01D4D0  0E00               	movlw	low _S
 12991  01D4D2  24F3               	addwf	243,w,c
 12992  01D4D4  6ED9               	movwf	fsr2l,c
 12993  01D4D6  0E02               	movlw	high _S
 12994  01D4D8  20F4               	addwfc	prodh,w,c
 12995  01D4DA  6EDA               	movwf	fsr2h,c
 12996  01D4DC  50DF               	movf	indf2,w,c
 12997  01D4DE                     L10:
 12998  01D4DE  6E01               	movwf	btemp^0,c
 12999                           
 13000                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13001  01D4E0  52E5               	movf	postdec1,f,c
 13002  01D4E2  0012               	return		;funcret
 13003  01D4E4                     __end_of_get_switch:
 13004                           	opt callstack 0
 13005                           
 13006 ;; *************** function _clear_switch *****************
 13007 ;; Defined at:
 13008 ;;		line 49 in file "dio.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;  i               1  [STACK] const unsigned char 
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;		None
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  1  [STACK] void 
 13015 ;; Registers used:
 13016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13026 ;;Total ram usage:        0 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; Hardware stack levels required when called:   15
 13029 ;; This function calls:
 13030 ;;		Nothing
 13031 ;; This function is called by:
 13032 ;;		_current_sensor_cal
 13033 ;; This function uses a reentrant model
 13034 ;;
 13035                           
 13036                           	psect	text42
 13037  01CCC8                     __ptext42:
 13038                           	opt callstack 0
 13039  01CCC8                     _clear_switch:
 13040                           	opt callstack 14
 13041                           
 13042                           ;dio.c: 49: void clear_switch(const uint8_t i);dio.c: 50: {;dio.c: 51:  if (i >= 6)
 13043                           ;stkvar	_i @ sp[(0)+-1]
 13044                           
 13045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13046                           ;incstack = 0
 13047  01CCC8  0EFF               	movlw	-1
 13048  01CCCA  006F FF8C  F001    	movff	plusw1,btemp
 13049  01CCD0  0E05               	movlw	5
 13050  01CCD2  6401               	cpfsgt	btemp^0,c
 13051  01CCD4  D001               	goto	l11508
 13052  01CCD6  D01D               	goto	l2200
 13053  01CCD8                     l11508:
 13054                           
 13055                           ;dio.c: 54:  S.button[i].count = 0;
 13056                           ;stkvar	_i @ sp[(0)+-1]
 13057  01CCD8  0EFF               	movlw	-1
 13058  01CCDA  50E3               	movf	plusw1,w,c
 13059  01CCDC  0D05               	mullw	5
 13060  01CCDE  0E01               	movlw	low (_S+1)
 13061  01CCE0  24F3               	addwf	243,w,c
 13062  01CCE2  6ED9               	movwf	fsr2l,c
 13063  01CCE4  0E02               	movlw	high (_S+1)
 13064  01CCE6  20F4               	addwfc	prodh,w,c
 13065  01CCE8  6EDA               	movwf	fsr2h,c
 13066  01CCEA  6ADE               	clrf	postinc2,c
 13067  01CCEC  6ADE               	clrf	postinc2,c
 13068  01CCEE  6ADE               	clrf	postinc2,c
 13069  01CCF0  6ADD               	clrf	postdec2,c
 13070                           
 13071                           ;dio.c: 55:  S.sw_bitmap &= ~(1 << i);
 13072                           ;stkvar	_i @ sp[(0)+-1]
 13073  01CCF2  0EFF               	movlw	-1
 13074  01CCF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13075  01CCFA  0E01               	movlw	1
 13076  01CCFC  6E0B               	movwf	(btemp+10)^0,c
 13077  01CCFE  2A0C               	incf	(btemp+11)^0,f,c
 13078  01CD00  D002               	goto	u10414
 13079  01CD02                     u10415:
 13080  01CD02  90D8               	bcf	status,0,c
 13081  01CD04  360B               	rlcf	(btemp+10)^0,f,c
 13082  01CD06                     u10414:
 13083  01CD06  2E0C               	decfsz	(btemp+11)^0,f,c
 13084  01CD08  D7FC               	goto	u10415
 13085  01CD0A  500B               	movf	(btemp+10)^0,w,c
 13086  01CD0C  0AFF               	xorlw	255
 13087  01CD0E  0102               	movlb	2	; () banked
 13088  01CD10  1728               	andwf	(_S+40)& (0+255),f,b	;volatile
 13089  01CD12                     l2200:
 13090                           
 13091                           ; _clear_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 13092  01CD12  52E5               	movf	postdec1,f,c
 13093  01CD14  0012               	return		;funcret
 13094  01CD16                     __end_of_clear_switch:
 13095                           	opt callstack 0
 13096                           
 13097 ;; *************** function _clear_adc_scan *****************
 13098 ;; Defined at:
 13099 ;;		line 96 in file "daq.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;		None
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;		None
 13104 ;; Return value:  Size  Location     Type
 13105 ;;                  1  [STACK] void 
 13106 ;; Registers used:
 13107 ;;		None
 13108 ;; Tracked objects:
 13109 ;;		On entry : 0/0
 13110 ;;		On exit  : 3F/0
 13111 ;;		Unchanged: 0/0
 13112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13117 ;;Total ram usage:        0 bytes
 13118 ;; Hardware stack levels used:    1
 13119 ;; Hardware stack levels required when called:   15
 13120 ;; This function calls:
 13121 ;;		Nothing
 13122 ;; This function is called by:
 13123 ;;		_main
 13124 ;;		_current_sensor_cal
 13125 ;;		_update_adc_result
 13126 ;; This function uses a reentrant model
 13127 ;;
 13128                           
 13129                           	psect	text43
 13130  01DBC8                     __ptext43:
 13131                           	opt callstack 0
 13132  01DBC8                     _clear_adc_scan:
 13133                           	opt callstack 13
 13134                           
 13135                           ;daq.c: 98:  R.done = 0;
 13136                           
 13137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13138                           ;incstack = 0
 13139  01DBC8  0100               	movlb	0	; () banked
 13140  01DBCA  6BE3               	clrf	(_R+53)& (0+255),b	;volatile
 13141                           
 13142                           ; BSR set to: 0
 13143                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13144  01DBCC  0012               	return		;funcret
 13145  01DBCE                     __end_of_clear_adc_scan:
 13146                           	opt callstack 0
 13147                           
 13148 ;; *************** function _cal_current_zero *****************
 13149 ;; Defined at:
 13150 ;;		line 322 in file "daq.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;  mode            1  [STACK] _Bool 
 13153 ;;  cb              2  [STACK] short 
 13154 ;;  cp              2  [STACK] short 
 13155 ;; Auto vars:     Size  Location     Type
 13156 ;;		None
 13157 ;; Return value:  Size  Location     Type
 13158 ;;                  1  [STACK] _Bool 
 13159 ;; Registers used:
 13160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 13161 ;; Tracked objects:
 13162 ;;		On entry : 0/0
 13163 ;;		On exit  : 0/0
 13164 ;;		Unchanged: 0/0
 13165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13170 ;;Total ram usage:        0 bytes
 13171 ;; Hardware stack levels used:    1
 13172 ;; Hardware stack levels required when called:   16
 13173 ;; This function calls:
 13174 ;;		_check_range
 13175 ;; This function is called by:
 13176 ;;		_current_sensor_cal
 13177 ;; This function uses a reentrant model
 13178 ;;
 13179                           
 13180                           	psect	text44
 13181  01C29C                     __ptext44:
 13182                           	opt callstack 0
 13183  01C29C                     _cal_current_zero:
 13184                           	opt callstack 13
 13185                           
 13186                           ;daq.c: 322: _Bool cal_current_zero(_Bool mode, int16_t cb, int16_t cp);daq.c: 323: {;da
      +                          q.c: 325:  if (!check_range(cb, 100, 4000))
 13187                           
 13188                           ; BSR set to: 0
 13189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13190                           ;incstack = 0
 13191  01C29C  0EA0               	movlw	160
 13192  01C29E  6EE6               	movwf	postinc1,c
 13193  01C2A0  0E0F               	movlw	15
 13194  01C2A2  6EE6               	movwf	postinc1,c
 13195  01C2A4  0E64               	movlw	100
 13196  01C2A6  6EE6               	movwf	postinc1,c
 13197  01C2A8  0E00               	movlw	0
 13198  01C2AA  6EE6               	movwf	postinc1,c
 13199                           
 13200                           ;stkvar	_cb @ sp[(-4)+-3]
 13201  01C2AC  0EF9               	movlw	-7
 13202  01C2AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13203  01C2B4  006F FF8F FFE6     	movff	plusw1,postinc1
 13204  01C2BA  EC5D  F0E2         	call	_check_range	;wreg free
 13205  01C2BE  5001               	movf	btemp^0,w,c
 13206  01C2C0  A4D8               	btfss	status,2,c
 13207  01C2C2  D002               	goto	l11460
 13208  01C2C4                     u10350:
 13209                           
 13210                           ;daq.c: 326:   return 0;
 13211  01C2C4  0E00               	movlw	0
 13212  01C2C6  D019               	goto	L11
 13213  01C2C8                     l11460:
 13214                           
 13215                           ;daq.c: 328:  if (!check_range(cp, 100, 4000))
 13216  01C2C8  0EA0               	movlw	160
 13217  01C2CA  6EE6               	movwf	postinc1,c
 13218  01C2CC  0E0F               	movlw	15
 13219  01C2CE  6EE6               	movwf	postinc1,c
 13220  01C2D0  0E64               	movlw	100
 13221  01C2D2  6EE6               	movwf	postinc1,c
 13222  01C2D4  0E00               	movlw	0
 13223  01C2D6  6EE6               	movwf	postinc1,c
 13224                           
 13225                           ;stkvar	_cp @ sp[(-4)+-5]
 13226  01C2D8  0EF7               	movlw	-9
 13227  01C2DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13228  01C2E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13229  01C2E6  EC5D  F0E2         	call	_check_range	;wreg free
 13230  01C2EA  5001               	movf	btemp^0,w,c
 13231  01C2EC  B4D8               	btfsc	status,2,c
 13232  01C2EE  D7EA               	goto	u10350
 13233                           
 13234                           ;daq.c: 331:  if (!mode)
 13235                           ;stkvar	_mode @ sp[(0)+-1]
 13236  01C2F0  0EFF               	movlw	-1
 13237  01C2F2  50E3               	movf	plusw1,w,c
 13238  01C2F4  A4D8               	btfss	status,2,c
 13239  01C2F6  D003               	goto	l11472
 13240  01C2F8                     u10370:
 13241                           
 13242                           ;daq.c: 332:   return 1;
 13243  01C2F8  0E01               	movlw	1
 13244  01C2FA                     L11:
 13245  01C2FA  6E01               	movwf	btemp^0,c
 13246  01C2FC  D011               	goto	l2040
 13247  01C2FE                     l11472:
 13248                           
 13249                           ;daq.c: 334:  R.n_offset[0] = cb;
 13250                           ;stkvar	_cb @ sp[(0)+-3]
 13251  01C2FE  0EFD               	movlw	-3
 13252  01C300  006F FF8C  F0D4    	movff	plusw1,_R+38	;volatile
 13253  01C306  0EFE               	movlw	-2
 13254  01C308  006F FF8C  F0D5    	movff	plusw1,_R+39	;volatile
 13255                           
 13256                           ;daq.c: 335:  R.n_offset[1] = cp;
 13257                           ;stkvar	_cp @ sp[(0)+-5]
 13258  01C30E  0EFB               	movlw	-5
 13259  01C310  006F FF8C  F0D6    	movff	plusw1,_R+40	;volatile
 13260  01C316  0EFC               	movlw	-4
 13261  01C318  006F FF8C  F0D7    	movff	plusw1,_R+41	;volatile
 13262  01C31E  D7EC               	goto	u10370
 13263  01C320                     l2040:
 13264                           
 13265                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 13266  01C320  0EFB               	movlw	251
 13267  01C322  26E1               	addwf	fsr1l,f,c
 13268  01C324  0EFF               	movlw	255
 13269  01C326  22E2               	addwfc	fsr1h,f,c
 13270  01C328  0012               	return		;funcret
 13271  01C32A                     __end_of_cal_current_zero:
 13272                           	opt callstack 0
 13273                           
 13274 ;; *************** function _cal_current_10A *****************
 13275 ;; Defined at:
 13276 ;;		line 343 in file "daq.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;  mode            1  [STACK] _Bool 
 13279 ;;  cb              2  [STACK] short 
 13280 ;;  cp              2  [STACK] short 
 13281 ;;  scaleb          4  [STACK] float 
 13282 ;;  scalep          4  [STACK] float 
 13283 ;; Auto vars:     Size  Location     Type
 13284 ;;		None
 13285 ;; Return value:  Size  Location     Type
 13286 ;;                  1  [STACK] _Bool 
 13287 ;; Registers used:
 13288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 13289 ;; Tracked objects:
 13290 ;;		On entry : 0/0
 13291 ;;		On exit  : 0/0
 13292 ;;		Unchanged: 0/0
 13293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13298 ;;Total ram usage:        0 bytes
 13299 ;; Hardware stack levels used:    1
 13300 ;; Hardware stack levels required when called:   16
 13301 ;; This function calls:
 13302 ;;		_check_range
 13303 ;; This function is called by:
 13304 ;;		_current_sensor_cal
 13305 ;; This function uses a reentrant model
 13306 ;;
 13307                           
 13308                           	psect	text45
 13309  01BA32                     __ptext45:
 13310                           	opt callstack 0
 13311  01BA32                     _cal_current_10A:
 13312                           	opt callstack 13
 13313                           
 13314                           ;daq.c: 343: _Bool cal_current_10A(_Bool mode, int16_t cb, int16_t cp, float scaleb, flo
      +                          at scalep);daq.c: 344: {;daq.c: 345:  if (!check_range(cb, 100, 4050))
 13315                           
 13316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 13, argsize = 13 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13317                           ;incstack = 0
 13318  01BA32  0ED2               	movlw	210
 13319  01BA34  6EE6               	movwf	postinc1,c
 13320  01BA36  0E0F               	movlw	15
 13321  01BA38  6EE6               	movwf	postinc1,c
 13322  01BA3A  0E64               	movlw	100
 13323  01BA3C  6EE6               	movwf	postinc1,c
 13324  01BA3E  0E00               	movlw	0
 13325  01BA40  6EE6               	movwf	postinc1,c
 13326                           
 13327                           ;stkvar	_cb @ sp[(-4)+-3]
 13328  01BA42  0EF9               	movlw	-7
 13329  01BA44  006F FF8F FFE6     	movff	plusw1,postinc1
 13330  01BA4A  006F FF8F FFE6     	movff	plusw1,postinc1
 13331  01BA50  EC5D  F0E2         	call	_check_range	;wreg free
 13332  01BA54  5001               	movf	btemp^0,w,c
 13333  01BA56  A4D8               	btfss	status,2,c
 13334  01BA58  D002               	goto	l11518
 13335  01BA5A                     u10420:
 13336                           
 13337                           ;daq.c: 346:   return 0;
 13338  01BA5A  0E00               	movlw	0
 13339  01BA5C  D019               	goto	L12
 13340  01BA5E                     l11518:
 13341                           
 13342                           ;daq.c: 348:  if (!check_range(cp, 100, 4278))
 13343  01BA5E  0EB6               	movlw	182
 13344  01BA60  6EE6               	movwf	postinc1,c
 13345  01BA62  0E10               	movlw	16
 13346  01BA64  6EE6               	movwf	postinc1,c
 13347  01BA66  0E64               	movlw	100
 13348  01BA68  6EE6               	movwf	postinc1,c
 13349  01BA6A  0E00               	movlw	0
 13350  01BA6C  6EE6               	movwf	postinc1,c
 13351                           
 13352                           ;stkvar	_cp @ sp[(-4)+-5]
 13353  01BA6E  0EF7               	movlw	-9
 13354  01BA70  006F FF8F FFE6     	movff	plusw1,postinc1
 13355  01BA76  006F FF8F FFE6     	movff	plusw1,postinc1
 13356  01BA7C  EC5D  F0E2         	call	_check_range	;wreg free
 13357  01BA80  5001               	movf	btemp^0,w,c
 13358  01BA82  B4D8               	btfsc	status,2,c
 13359  01BA84  D7EA               	goto	u10420
 13360                           
 13361                           ;daq.c: 351:  if (!mode)
 13362                           ;stkvar	_mode @ sp[(0)+-1]
 13363  01BA86  0EFF               	movlw	-1
 13364  01BA88  50E3               	movf	plusw1,w,c
 13365  01BA8A  A4D8               	btfss	status,2,c
 13366  01BA8C  D003               	goto	l11530
 13367  01BA8E                     u10440:
 13368                           
 13369                           ;daq.c: 352:   return 1;
 13370  01BA8E  0E01               	movlw	1
 13371  01BA90                     L12:
 13372  01BA90  6E01               	movwf	btemp^0,c
 13373  01BA92  D027               	goto	l2046
 13374  01BA94                     l11530:
 13375                           
 13376                           ;daq.c: 354:  R.n_scalar[0] = scaleb;
 13377                           ;stkvar	_scaleb @ sp[(0)+-9]
 13378  01BA94  50E1               	movf	fsr1l,w,c
 13379  01BA96  0FF7               	addlw	-9
 13380  01BA98  6ED9               	movwf	fsr2l,c
 13381  01BA9A  50E2               	movf	fsr1h,w,c
 13382  01BA9C  6EDA               	movwf	fsr2h,c
 13383  01BA9E  0EFF               	movlw	255
 13384  01BAA0  22DA               	addwfc	fsr2h,f,c
 13385  01BAA2  006F FF78  F0D8    	movff	postinc2,_R+42	;volatile
 13386  01BAA8  006F FF78  F0D9    	movff	postinc2,_R+43	;volatile
 13387  01BAAE  006F FF78  F0DA    	movff	postinc2,_R+44	;volatile
 13388  01BAB4  006F FF78  F0DB    	movff	postinc2,_R+45	;volatile
 13389                           
 13390                           ;daq.c: 355:  R.n_scalar[1] = scalep;
 13391                           ;stkvar	_scalep @ sp[(0)+-13]
 13392  01BABA  50E1               	movf	fsr1l,w,c
 13393  01BABC  0FF3               	addlw	-13
 13394  01BABE  6ED9               	movwf	fsr2l,c
 13395  01BAC0  50E2               	movf	fsr1h,w,c
 13396  01BAC2  6EDA               	movwf	fsr2h,c
 13397  01BAC4  0EFF               	movlw	255
 13398  01BAC6  22DA               	addwfc	fsr2h,f,c
 13399  01BAC8  006F FF78  F0DC    	movff	postinc2,_R+46	;volatile
 13400  01BACE  006F FF78  F0DD    	movff	postinc2,_R+47	;volatile
 13401  01BAD4  006F FF78  F0DE    	movff	postinc2,_R+48	;volatile
 13402  01BADA  006F FF78  F0DF    	movff	postinc2,_R+49	;volatile
 13403  01BAE0  D7D6               	goto	u10440
 13404  01BAE2                     l2046:
 13405                           
 13406                           ; _cal_current_10A: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          13, argsize = 13, vargsize = 0
 13407  01BAE2  0EF3               	movlw	243
 13408  01BAE4  26E1               	addwf	fsr1l,f,c
 13409  01BAE6  0EFF               	movlw	255
 13410  01BAE8  22E2               	addwfc	fsr1h,f,c
 13411  01BAEA  0012               	return		;funcret
 13412  01BAEC                     __end_of_cal_current_10A:
 13413                           	opt callstack 0
 13414                           
 13415 ;; *************** function _check_range *****************
 13416 ;; Defined at:
 13417 ;;		line 310 in file "daq.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;  value           2  [STACK] short 
 13420 ;;  window          2  [STACK] short 
 13421 ;;  standard        2  [STACK] short 
 13422 ;; Auto vars:     Size  Location     Type
 13423 ;;		None
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  1  [STACK] _Bool 
 13426 ;; Registers used:
 13427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/0
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13437 ;;Total ram usage:        0 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:   15
 13440 ;; This function calls:
 13441 ;;		Nothing
 13442 ;; This function is called by:
 13443 ;;		_cal_current_zero
 13444 ;;		_cal_current_10A
 13445 ;; This function uses a reentrant model
 13446 ;;
 13447                           
 13448                           	psect	text46
 13449  01C4BA                     __ptext46:
 13450                           	opt callstack 0
 13451  01C4BA                     _check_range:
 13452                           	opt callstack 13
 13453                           
 13454                           ;daq.c: 310: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 311: {;daq.c: 312:  if (value > (standard + window))
 13455                           ;stkvar	_value @ sp[(0)+-2]
 13456                           ;stkvar	_window @ sp[(0)+-4]
 13457                           ;stkvar	_standard @ sp[(0)+-6]
 13458                           
 13459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13460                           ;incstack = 0
 13461  01C4BA  0EFA               	movlw	-6
 13462  01C4BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13463  01C4C2  0EFB               	movlw	-5
 13464  01C4C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13465  01C4CA  0EFC               	movlw	-4
 13466  01C4CC  50E3               	movf	plusw1,w,c
 13467  01C4CE  260B               	addwf	(btemp+10)^0,f,c
 13468  01C4D0  0EFD               	movlw	-3
 13469  01C4D2  50E3               	movf	plusw1,w,c
 13470  01C4D4  220C               	addwfc	(btemp+11)^0,f,c
 13471  01C4D6  0EFE               	movlw	-2
 13472  01C4D8  50E3               	movf	plusw1,w,c
 13473  01C4DA  5C0B               	subwf	(btemp+10)^0,w,c
 13474  01C4DC  500C               	movf	(btemp+11)^0,w,c
 13475  01C4DE  0A80               	xorlw	128
 13476  01C4E0  6E01               	movwf	btemp^0,c
 13477  01C4E2  0EFF               	movlw	-1
 13478  01C4E4  50E3               	movf	plusw1,w,c
 13479  01C4E6  0A80               	xorlw	128
 13480  01C4E8  5801               	subwfb	btemp^0,w,c
 13481  01C4EA  B0D8               	btfsc	status,0,c
 13482  01C4EC  D002               	goto	l10954
 13483  01C4EE                     u10140:
 13484                           
 13485                           ;daq.c: 313:   return 0;
 13486  01C4EE  0E00               	movlw	0
 13487  01C4F0  D01E               	goto	L13
 13488  01C4F2                     l10954:
 13489                           
 13490                           ;daq.c: 314:  if (value < (standard - window))
 13491                           ;stkvar	_window @ sp[(0)+-4]
 13492                           ;stkvar	_standard @ sp[(0)+-6]
 13493  01C4F2  0EFA               	movlw	-6
 13494  01C4F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13495  01C4FA  0EFB               	movlw	-5
 13496  01C4FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13497  01C502  0EFC               	movlw	-4
 13498  01C504  50E3               	movf	plusw1,w,c
 13499  01C506  5E0B               	subwf	(btemp+10)^0,f,c
 13500  01C508  0EFD               	movlw	-3
 13501  01C50A  50E3               	movf	plusw1,w,c
 13502  01C50C  5A0C               	subwfb	(btemp+11)^0,f,c
 13503                           
 13504                           ;stkvar	_value @ sp[(0)+-2]
 13505  01C50E  0EFE               	movlw	-2
 13506  01C510  006F FF8C  F001    	movff	plusw1,btemp
 13507  01C516  500B               	movf	(btemp+10)^0,w,c
 13508  01C518  5C01               	subwf	btemp^0,w,c
 13509  01C51A  0EFF               	movlw	-1
 13510  01C51C  50E3               	movf	plusw1,w,c
 13511  01C51E  0A80               	xorlw	128
 13512  01C520  6E01               	movwf	btemp^0,c
 13513  01C522  500C               	movf	(btemp+11)^0,w,c
 13514  01C524  0A80               	xorlw	128
 13515  01C526  5801               	subwfb	btemp^0,w,c
 13516  01C528  A0D8               	btfss	status,0,c
 13517  01C52A  D7E1               	goto	u10140
 13518                           
 13519                           ;daq.c: 316:  return 1;
 13520  01C52C  0E01               	movlw	1
 13521  01C52E                     L13:
 13522  01C52E  6E01               	movwf	btemp^0,c
 13523                           
 13524                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 13525  01C530  0EFA               	movlw	250
 13526  01C532  26E1               	addwf	fsr1l,f,c
 13527  01C534  0EFF               	movlw	255
 13528  01C536  22E2               	addwfc	fsr1h,f,c
 13529  01C538  0012               	return		;funcret
 13530  01C53A                     __end_of_check_range:
 13531                           	opt callstack 0
 13532                           
 13533 ;; *************** function _convert_adc_data *****************
 13534 ;; Defined at:
 13535 ;;		line 51 in file "mbmc.c"
 13536 ;; Parameters:    Size  Location     Type
 13537 ;;		None
 13538 ;; Auto vars:     Size  Location     Type
 13539 ;;  i               1  [STACK] unsigned char 
 13540 ;; Return value:  Size  Location     Type
 13541 ;;                  1  [STACK] void 
 13542 ;; Registers used:
 13543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13544 ;; Tracked objects:
 13545 ;;		On entry : 0/1
 13546 ;;		On exit  : 0/0
 13547 ;;		Unchanged: 0/0
 13548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13553 ;;Total ram usage:        0 bytes
 13554 ;; Hardware stack levels used:    1
 13555 ;; Hardware stack levels required when called:   18
 13556 ;; This function calls:
 13557 ;;		_conv_raw_result
 13558 ;;		_lp_filter
 13559 ;; This function is called by:
 13560 ;;		_main
 13561 ;; This function uses a reentrant model
 13562 ;;
 13563                           
 13564                           	psect	text47
 13565  01BAEC                     __ptext47:
 13566                           	opt callstack 0
 13567  01BAEC                     _convert_adc_data:
 13568                           	opt callstack 0
 13569                           
 13570                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13571  01BAEC  52E6               	movf	postinc1,f,c
 13572                           
 13573                           ;mbmc.c: 53:  uint8_t i = 0;
 13574                           ;stkvar	_i @ sp[(-1)+0]
 13575                           
 13576                           ;incstack = 0
 13577  01BAEE  0EFF               	movlw	-1
 13578  01BAF0  6AE3               	clrf	plusw1,c
 13579  01BAF2                     l12374:
 13580                           
 13581                           ;mbmc.c: 56:   if (V.calib) {
 13582  01BAF2  0101               	movlb	1	; () banked
 13583  01BAF4  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 13584  01BAF6  B4D8               	btfsc	status,2,c
 13585  01BAF8  D01B               	goto	l12378
 13586                           
 13587                           ; BSR set to: 1
 13588                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 13589  01BAFA  0E01               	movlw	1
 13590  01BAFC  6EE6               	movwf	postinc1,c
 13591                           
 13592                           ;stkvar	_i @ sp[(-2)+0]
 13593  01BAFE  0EFE               	movlw	-2
 13594  01BB00  50E3               	movf	plusw1,w,c
 13595  01BB02  6EE6               	movwf	postinc1,c
 13596  01BB04  0E01               	movlw	1
 13597  01BB06  6EE6               	movwf	postinc1,c
 13598                           
 13599                           ;stkvar	_i @ sp[(-4)+0]
 13600  01BB08  0EFC               	movlw	-4
 13601  01BB0A  50E3               	movf	plusw1,w,c
 13602  01BB0C  6EE6               	movwf	postinc1,c
 13603  01BB0E  ECF8  F0AF         	call	_conv_raw_result	;wreg free
 13604  01BB12  0060  F007  FFE6   	movff	btemp,postinc1
 13605  01BB18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13606  01BB1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13607  01BB24  0060  F013  FFE6   	movff	btemp+3,postinc1
 13608  01BB2A  EC91  F0CB         	call	_lp_filter	;wreg free
 13609  01BB2E  D01A               	goto	L14
 13610  01BB30                     l12378:
 13611                           
 13612                           ; BSR set to: 1
 13613                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 13614  01BB30  0E00               	movlw	0
 13615  01BB32  6EE6               	movwf	postinc1,c
 13616                           
 13617                           ;stkvar	_i @ sp[(-2)+0]
 13618  01BB34  0EFE               	movlw	-2
 13619  01BB36  50E3               	movf	plusw1,w,c
 13620  01BB38  6EE6               	movwf	postinc1,c
 13621  01BB3A  0E00               	movlw	0
 13622  01BB3C  6EE6               	movwf	postinc1,c
 13623                           
 13624                           ;stkvar	_i @ sp[(-4)+0]
 13625  01BB3E  0EFC               	movlw	-4
 13626  01BB40  50E3               	movf	plusw1,w,c
 13627  01BB42  6EE6               	movwf	postinc1,c
 13628  01BB44  ECF8  F0AF         	call	_conv_raw_result	;wreg free
 13629  01BB48  0060  F007  FFE6   	movff	btemp,postinc1
 13630  01BB4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13631  01BB54  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13632  01BB5A  0060  F013  FFE6   	movff	btemp+3,postinc1
 13633  01BB60  EC91  F0CB         	call	_lp_filter	;wreg free
 13634  01BB64                     L14:
 13635                           
 13636                           ;stkvar	_i @ sp[(-1)+0]
 13637  01BB64  0EFF               	movlw	-1
 13638  01BB66  50E3               	movf	plusw1,w,c
 13639  01BB68  0D04               	mullw	4
 13640  01BB6A  0EFF               	movlw	low _C
 13641  01BB6C  24F3               	addwf	243,w,c
 13642  01BB6E  6ED9               	movwf	fsr2l,c
 13643  01BB70  0E07               	movlw	high _C
 13644  01BB72  20F4               	addwfc	prodh,w,c
 13645  01BB74  6EDA               	movwf	fsr2h,c
 13646  01BB76  0060  F007  FFDE   	movff	btemp,postinc2
 13647  01BB7C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 13648  01BB82  0060  F00F  FFDE   	movff	btemp+2,postinc2
 13649  01BB88  0060  F013  FFDE   	movff	btemp+3,postinc2
 13650                           
 13651                           ;mbmc.c: 61:  } while (++i < 16);
 13652                           ;stkvar	_i @ sp[(-1)+0]
 13653  01BB8E  0EFF               	movlw	-1
 13654  01BB90  2AE3               	incf	plusw1,f,c
 13655  01BB92  0EFF               	movlw	-1
 13656  01BB94  006F FF8C  F001    	movff	plusw1,btemp
 13657  01BB9A  0E0F               	movlw	15
 13658  01BB9C  6401               	cpfsgt	btemp^0,c
 13659  01BB9E  D7A9               	goto	l12374
 13660                           
 13661                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13662  01BBA0  52E5               	movf	postdec1,f,c
 13663  01BBA2  0012               	return		;funcret
 13664  01BBA4                     __end_of_convert_adc_data:
 13665                           	opt callstack 0
 13666                           
 13667 ;; *************** function _clear_hid_pflags *****************
 13668 ;; Defined at:
 13669 ;;		line 67 in file "hid.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;  h               2  [STACK] PTR struct H_data
 13672 ;;		 -> H(9), 
 13673 ;; Auto vars:     Size  Location     Type
 13674 ;;		None
 13675 ;; Return value:  Size  Location     Type
 13676 ;;                  1  [STACK] void 
 13677 ;; Registers used:
 13678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 13679 ;; Tracked objects:
 13680 ;;		On entry : 3E/0
 13681 ;;		On exit  : 0/0
 13682 ;;		Unchanged: 0/0
 13683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13688 ;;Total ram usage:        0 bytes
 13689 ;; Hardware stack levels used:    1
 13690 ;; Hardware stack levels required when called:   15
 13691 ;; This function calls:
 13692 ;;		Nothing
 13693 ;; This function is called by:
 13694 ;;		_main
 13695 ;; This function uses a reentrant model
 13696 ;;
 13697                           
 13698                           	psect	text48
 13699  01C8C2                     __ptext48:
 13700                           	opt callstack 0
 13701  01C8C2                     _clear_hid_pflags:
 13702                           	opt callstack 15
 13703                           
 13704                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 13705                           ;stkvar	_h @ sp[(0)+-2]
 13706                           
 13707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13708                           ;incstack = 0
 13709  01C8C2  0EFE               	movlw	-2
 13710  01C8C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13711  01C8CA  0EFF               	movlw	-1
 13712  01C8CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13713  01C8D2  0E03               	movlw	3
 13714  01C8D4  240B               	addwf	(btemp+10)^0,w,c
 13715  01C8D6  6ED9               	movwf	fsr2l,c
 13716  01C8D8  0E00               	movlw	0
 13717  01C8DA  200C               	addwfc	(btemp+11)^0,w,c
 13718  01C8DC  6EDA               	movwf	fsr2h,c
 13719  01C8DE  0E00               	movlw	0
 13720  01C8E0  6EDF               	movwf	indf2,c
 13721                           
 13722                           ;hid.c: 70:  h->enter_p = SW_OFF;
 13723                           ;stkvar	_h @ sp[(0)+-2]
 13724  01C8E2  0EFE               	movlw	-2
 13725  01C8E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13726  01C8EA  0EFF               	movlw	-1
 13727  01C8EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13728  01C8F2  0E05               	movlw	5
 13729  01C8F4  240B               	addwf	(btemp+10)^0,w,c
 13730  01C8F6  6ED9               	movwf	fsr2l,c
 13731  01C8F8  0E00               	movlw	0
 13732  01C8FA  200C               	addwfc	(btemp+11)^0,w,c
 13733  01C8FC  6EDA               	movwf	fsr2h,c
 13734  01C8FE  0E00               	movlw	0
 13735  01C900  6EDF               	movwf	indf2,c
 13736                           
 13737                           ;hid.c: 71:  h->calib_p = SW_OFF;
 13738                           ;stkvar	_h @ sp[(0)+-2]
 13739  01C902  0EFE               	movlw	-2
 13740  01C904  006F FF8C  F00B    	movff	plusw1,btemp+10
 13741  01C90A  0EFF               	movlw	-1
 13742  01C90C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13743  01C912  0E07               	movlw	7
 13744  01C914  240B               	addwf	(btemp+10)^0,w,c
 13745  01C916  6ED9               	movwf	fsr2l,c
 13746  01C918  0E00               	movlw	0
 13747  01C91A  200C               	addwfc	(btemp+11)^0,w,c
 13748  01C91C  6EDA               	movwf	fsr2h,c
 13749  01C91E  0E00               	movlw	0
 13750  01C920  6EDF               	movwf	indf2,c
 13751                           
 13752                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 13753  01C922  52E5               	movf	postdec1,f,c
 13754  01C924  52E5               	movf	postdec1,f,c
 13755  01C926  0012               	return		;funcret
 13756  01C928                     __end_of_clear_hid_pflags:
 13757                           	opt callstack 0
 13758                           
 13759 ;; *************** function _check_help *****************
 13760 ;; Defined at:
 13761 ;;		line 40 in file "mconfig.c"
 13762 ;; Parameters:    Size  Location     Type
 13763 ;;  flipper         1  [STACK] const _Bool 
 13764 ;; Auto vars:     Size  Location     Type
 13765 ;;  estatus         1    0        _Bool 
 13766 ;; Return value:  Size  Location     Type
 13767 ;;                  1  [STACK] _Bool 
 13768 ;; Registers used:
 13769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13770 ;; Tracked objects:
 13771 ;;		On entry : 3F/1
 13772 ;;		On exit  : 0/0
 13773 ;;		Unchanged: 0/0
 13774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13779 ;;Total ram usage:        0 bytes
 13780 ;; Hardware stack levels used:    1
 13781 ;; Hardware stack levels required when called:   28
 13782 ;; This function calls:
 13783 ;;		_StartTimer
 13784 ;;		_TimerDone
 13785 ;;		_display_help
 13786 ;;		_display_info
 13787 ;;		_get_vterm_ptr
 13788 ;;		_help_button
 13789 ;;		_mode_lamp_bright
 13790 ;;		_mode_lamp_dim
 13791 ;;		_set_display_info
 13792 ;;		_set_temp_display_help
 13793 ;;		_set_vterm
 13794 ;;		_sprintf
 13795 ;;		_update_lcd
 13796 ;;		_vterm_dump
 13797 ;; This function is called by:
 13798 ;;		_main
 13799 ;; This function uses a reentrant model
 13800 ;;
 13801                           
 13802                           	psect	text49
 13803  019142                     __ptext49:
 13804                           	opt callstack 0
 13805  019142                     _check_help:
 13806                           	opt callstack 2
 13807                           
 13808                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 13809                           
 13810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13811                           ;incstack = 0
 13812  019142  EC11  F0E9         	call	_help_button	;wreg free
 13813  019146  5001               	movf	btemp^0,w,c
 13814  019148  B4D8               	btfsc	status,2,c
 13815  01914A  D0D0               	goto	l14644
 13816  01914C  ECD5  F0ED         	call	_display_info	;wreg free
 13817  019150  0401               	decf	btemp^0,w,c
 13818  019152  B4D8               	btfsc	status,2,c
 13819  019154  D0CB               	goto	l14644
 13820                           
 13821                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 13822  019156  0EDC               	movlw	220
 13823  019158  6EE6               	movwf	postinc1,c
 13824  01915A  0E05               	movlw	5
 13825  01915C  6EE6               	movwf	postinc1,c
 13826  01915E  0E0B               	movlw	11
 13827  019160  6EE6               	movwf	postinc1,c
 13828  019162  EC57  F0E8         	call	_StartTimer	;wreg free
 13829                           
 13830                           ;mconfig.c: 48:   if (V.debug)
 13831  019166  0101               	movlb	1	; () banked
 13832  019168  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 13833                           
 13834                           ; BSR set to: 1
 13835                           ;mconfig.c: 49:    vterm_dump();
 13836  01916A  ECE5  F0D4         	call	_vterm_dump	;wreg free
 13837                           
 13838                           ;mconfig.c: 51:   set_vterm(1);
 13839  01916E  0E01               	movlw	1
 13840  019170  6EE6               	movwf	postinc1,c
 13841  019172  ECBD  F0EC         	call	_set_vterm	;wreg free
 13842                           
 13843                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 13844  019176  ECD5  F0ED         	call	_display_info	;wreg free
 13845  01917A  5001               	movf	btemp^0,w,c
 13846  01917C  6EE6               	movwf	postinc1,c
 13847  01917E  EC7D  F0ED         	call	_set_temp_display_help	;wreg free
 13848                           
 13849                           ; BSR set to: 1
 13850                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 13851  019182  0E01               	movlw	1
 13852  019184  6EE6               	movwf	postinc1,c
 13853  019186  ECCC  F0EC         	call	_set_display_info	;wreg free
 13854                           
 13855                           ;mconfig.c: 54:   if (flipper) {
 13856                           ;stkvar	_flipper @ sp[(0)+-1]
 13857  01918A  0EFF               	movlw	-1
 13858  01918C  50E3               	movf	plusw1,w,c
 13859  01918E  B4D8               	btfsc	status,2,c
 13860  019190  D019               	goto	l14630
 13861                           
 13862                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 13863  019192  0EB3               	movlw	low STR_74
 13864  019194  6EE6               	movwf	postinc1,c
 13865  019196  0EFF               	movlw	high STR_74
 13866  019198  6EE6               	movwf	postinc1,c
 13867  01919A  0E4B               	movlw	low STR_76
 13868  01919C  6EE6               	movwf	postinc1,c
 13869  01919E  0EFF               	movlw	high STR_76
 13870  0191A0  6EE6               	movwf	postinc1,c
 13871  0191A2  0E01               	movlw	1
 13872  0191A4  6EE6               	movwf	postinc1,c
 13873  0191A6  0E00               	movlw	0
 13874  0191A8  6EE6               	movwf	postinc1,c
 13875  0191AA  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 13876  0191AE  0060  F007  FFE6   	movff	btemp,postinc1
 13877  0191B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13878  0191BA  0E06               	movlw	6
 13879  0191BC  6EE6               	movwf	postinc1,c
 13880  0191BE  ECC4  F0D8         	call	_sprintf	;wreg free
 13881                           
 13882                           ;mconfig.c: 56:   } else {
 13883  0191C2  D018               	goto	l1811
 13884  0191C4                     l14630:
 13885                           
 13886                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 13887  0191C4  0EC9               	movlw	low STR_75
 13888  0191C6  6EE6               	movwf	postinc1,c
 13889  0191C8  0EFF               	movlw	high STR_75
 13890  0191CA  6EE6               	movwf	postinc1,c
 13891  0191CC  0E4B               	movlw	low STR_76
 13892  0191CE  6EE6               	movwf	postinc1,c
 13893  0191D0  0EFF               	movlw	high STR_76
 13894  0191D2  6EE6               	movwf	postinc1,c
 13895  0191D4  0E01               	movlw	1
 13896  0191D6  6EE6               	movwf	postinc1,c
 13897  0191D8  0E00               	movlw	0
 13898  0191DA  6EE6               	movwf	postinc1,c
 13899  0191DC  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 13900  0191E0  0060  F007  FFE6   	movff	btemp,postinc1
 13901  0191E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13902  0191EC  0E06               	movlw	6
 13903  0191EE  6EE6               	movwf	postinc1,c
 13904  0191F0  ECC4  F0D8         	call	_sprintf	;wreg free
 13905  0191F4                     l1811:
 13906                           
 13907                           ; BSR set to: 0
 13908                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 13909  0191F4  0101               	movlb	1	; () banked
 13910  0191F6  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 13911  0191F8  32E8               	rrcf	wreg,f,c
 13912  0191FA  32E8               	rrcf	wreg,f,c
 13913  0191FC  0B03               	andlw	3
 13914  0191FE  0D24               	mullw	36
 13915  019200  0E12               	movlw	18
 13916  019202  26F3               	addwf	243,f,c
 13917  019204  0E00               	movlw	0
 13918  019206  22F4               	addwfc	244,f,c
 13919  019208  0E4D               	movlw	low _T
 13920  01920A  6E0B               	movwf	(btemp+10)^0,c
 13921  01920C  0EF9               	movlw	high _T
 13922  01920E  6E0C               	movwf	(btemp+11)^0,c
 13923  019210  50F3               	movf	243,w,c
 13924  019212  260B               	addwf	(btemp+10)^0,f,c
 13925  019214  50F4               	movf	244,w,c
 13926  019216  220C               	addwfc	(btemp+11)^0,f,c
 13927  019218  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13928  01921E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13929  019224  0EBF               	movlw	low STR_78
 13930  019226  6EE6               	movwf	postinc1,c
 13931  019228  0EFF               	movlw	high STR_78
 13932  01922A  6EE6               	movwf	postinc1,c
 13933  01922C  0E01               	movlw	1
 13934  01922E  6EE6               	movwf	postinc1,c
 13935  019230  0E01               	movlw	1
 13936  019232  6EE6               	movwf	postinc1,c
 13937  019234  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 13938  019238  0060  F007  FFE6   	movff	btemp,postinc1
 13939  01923E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13940  019244  0E06               	movlw	6
 13941  019246  6EE6               	movwf	postinc1,c
 13942  019248  ECC4  F0D8         	call	_sprintf	;wreg free
 13943                           
 13944                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 13945  01924C  0101               	movlb	1	; () banked
 13946  01924E  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 13947  019250  32E8               	rrcf	wreg,f,c
 13948  019252  32E8               	rrcf	wreg,f,c
 13949  019254  0B03               	andlw	3
 13950  019256  0D24               	mullw	36
 13951  019258  0E4D               	movlw	low _T
 13952  01925A  6E0B               	movwf	(btemp+10)^0,c
 13953  01925C  0EF9               	movlw	high _T
 13954  01925E  6E0C               	movwf	(btemp+11)^0,c
 13955  019260  50F3               	movf	243,w,c
 13956  019262  260B               	addwf	(btemp+10)^0,f,c
 13957  019264  50F4               	movf	244,w,c
 13958  019266  220C               	addwfc	(btemp+11)^0,f,c
 13959  019268  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13960  01926E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13961  019274  0EBF               	movlw	low STR_78
 13962  019276  6EE6               	movwf	postinc1,c
 13963  019278  0EFF               	movlw	high STR_78
 13964  01927A  6EE6               	movwf	postinc1,c
 13965  01927C  0E01               	movlw	1
 13966  01927E  6EE6               	movwf	postinc1,c
 13967  019280  0E02               	movlw	2
 13968  019282  6EE6               	movwf	postinc1,c
 13969  019284  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 13970  019288  0060  F007  FFE6   	movff	btemp,postinc1
 13971  01928E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13972  019294  0E06               	movlw	6
 13973  019296  6EE6               	movwf	postinc1,c
 13974  019298  ECC4  F0D8         	call	_sprintf	;wreg free
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;mconfig.c: 61:   V.help_id++;
 13978  01929C  EE20  F1A2         	lfsr	2,_V+155	;volatile
 13979  0192A0  38DF               	swapf	223,w,c
 13980  0192A2  6E0C               	movwf	(btemp+11)^0,c
 13981  0192A4  320C               	rrcf	(btemp+11)^0,f,c
 13982  0192A6  300C               	rrcf	(btemp+11)^0,w,c
 13983  0192A8  0B03               	andlw	3
 13984  0192AA  6E0C               	movwf	(btemp+11)^0,c
 13985  0192AC  2A0C               	incf	(btemp+11)^0,f,c
 13986  0192AE  3A0C               	swapf	(btemp+11)^0,f,c
 13987  0192B0  360C               	rlcf	(btemp+11)^0,f,c
 13988  0192B2  360C               	rlcf	(btemp+11)^0,f,c
 13989  0192B4  50DF               	movf	223,w,c
 13990  0192B6  180C               	xorwf	(btemp+11)^0,w,c
 13991  0192B8  0B3F               	andlw	-193
 13992  0192BA  180C               	xorwf	(btemp+11)^0,w,c
 13993  0192BC  6EDF               	movwf	223,c
 13994                           
 13995                           ; BSR set to: 0
 13996                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 13997  0192BE  0EB8               	movlw	184
 13998  0192C0  6EE6               	movwf	postinc1,c
 13999  0192C2  0E0B               	movlw	11
 14000  0192C4  6EE6               	movwf	postinc1,c
 14001  0192C6  0E09               	movlw	9
 14002  0192C8  6EE6               	movwf	postinc1,c
 14003  0192CA  EC57  F0E8         	call	_StartTimer	;wreg free
 14004                           
 14005                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 14006  0192CE  0EB8               	movlw	184
 14007  0192D0  6EE6               	movwf	postinc1,c
 14008  0192D2  0E0B               	movlw	11
 14009  0192D4  6EE6               	movwf	postinc1,c
 14010  0192D6  0E07               	movlw	7
 14011  0192D8  6EE6               	movwf	postinc1,c
 14012  0192DA  EC57  F0E8         	call	_StartTimer	;wreg free
 14013                           
 14014                           ;mconfig.c: 64:   mode_lamp_bright();
 14015  0192DE  EC94  F0ED         	call	_mode_lamp_bright	;wreg free
 14016                           
 14017                           ;mconfig.c: 65:   update_lcd(1);
 14018  0192E2  0E01               	movlw	1
 14019  0192E4  6EE6               	movwf	postinc1,c
 14020  0192E6  EC3C  F0D8         	call	_update_lcd	;wreg free
 14021                           
 14022                           ;mconfig.c: 67:  } else {
 14023  0192EA  D032               	goto	l1812
 14024  0192EC                     l14644:
 14025                           
 14026                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 14027  0192EC  0E09               	movlw	9
 14028  0192EE  6EE6               	movwf	postinc1,c
 14029  0192F0  ECC7  F0EA         	call	_TimerDone	;wreg free
 14030  0192F4  5001               	movf	btemp^0,w,c
 14031  0192F6  B4D8               	btfsc	status,2,c
 14032  0192F8  D02B               	goto	l1812
 14033                           
 14034                           ;mconfig.c: 69:    set_vterm(0);
 14035  0192FA  0E00               	movlw	0
 14036  0192FC  6EE6               	movwf	postinc1,c
 14037  0192FE  ECBD  F0EC         	call	_set_vterm	;wreg free
 14038                           
 14039                           ;mconfig.c: 70:    V.help = 0;
 14040  019302  0101               	movlb	1	; () banked
 14041  019304  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 14042                           
 14043                           ; BSR set to: 1
 14044                           ;mconfig.c: 71:    set_display_info(display_help());
 14045  019306  ECD9  F0ED         	call	_display_help	;wreg free
 14046  01930A  5001               	movf	btemp^0,w,c
 14047  01930C  6EE6               	movwf	postinc1,c
 14048  01930E  ECCC  F0EC         	call	_set_display_info	;wreg free
 14049                           
 14050                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 14051  019312  0060  F673  FFE6   	movff	_V+149,postinc1
 14052  019318  0060  F677  FFE6   	movff	_V+150,postinc1
 14053  01931E  EC05  F0ED         	call	_mode_lamp_dim	;wreg free
 14054                           
 14055                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 14056  019322  0E0B               	movlw	11
 14057  019324  6EE6               	movwf	postinc1,c
 14058  019326  ECC7  F0EA         	call	_TimerDone	;wreg free
 14059  01932A  5001               	movf	btemp^0,w,c
 14060  01932C  B4D8               	btfsc	status,2,c
 14061  01932E  D010               	goto	l1812
 14062                           
 14063                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 14064  019330  0101               	movlb	1	; () banked
 14065  019332  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 14066  019334  A4D8               	btfss	status,2,c
 14067  019336  D002               	goto	u13950
 14068  019338  0E01               	movlw	1
 14069  01933A  D001               	goto	u13960
 14070  01933C                     u13950:
 14071  01933C  0E00               	movlw	0
 14072  01933E                     u13960:
 14073  01933E  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 14074                           
 14075                           ; BSR set to: 1
 14076                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 14077  019340  0EDC               	movlw	220
 14078  019342  6EE6               	movwf	postinc1,c
 14079  019344  0E05               	movlw	5
 14080  019346  6EE6               	movwf	postinc1,c
 14081  019348  0E0B               	movlw	11
 14082  01934A  6EE6               	movwf	postinc1,c
 14083  01934C  EC57  F0E8         	call	_StartTimer	;wreg free
 14084  019350                     l1812:
 14085                           
 14086                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 14087  019350  52E5               	movf	postdec1,f,c
 14088  019352  0012               	return		;funcret
 14089  019354                     __end_of_check_help:
 14090                           	opt callstack 0
 14091                           
 14092 ;; *************** function _vterm_dump *****************
 14093 ;; Defined at:
 14094 ;;		line 121 in file "mconfig.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;		None
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;		None
 14099 ;; Return value:  Size  Location     Type
 14100 ;;                  1  [STACK] void 
 14101 ;; Registers used:
 14102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14103 ;; Tracked objects:
 14104 ;;		On entry : 3F/1
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14112 ;;Total ram usage:        0 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; Hardware stack levels required when called:   27
 14115 ;; This function calls:
 14116 ;;		_WaitMs
 14117 ;;		_eaDogM_WriteStringAtPos
 14118 ;;		_get_vterm_ptr
 14119 ;;		_sprintf
 14120 ;;		_wait_lcd_done
 14121 ;; This function is called by:
 14122 ;;		_check_help
 14123 ;; This function uses a reentrant model
 14124 ;;
 14125                           
 14126                           	psect	text50
 14127  01A9CA                     __ptext50:
 14128                           	opt callstack 0
 14129  01A9CA                     _vterm_dump:
 14130                           	opt callstack 2
 14131                           
 14132                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 14133                           
 14134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14135                           ;incstack = 0
 14136  01A9CA  0E01               	movlw	1
 14137  01A9CC  6EE6               	movwf	postinc1,c
 14138  01A9CE  0E00               	movlw	0
 14139  01A9D0  6EE6               	movwf	postinc1,c
 14140  01A9D2  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 14141  01A9D6  0060  F007  FFE6   	movff	btemp,postinc1
 14142  01A9DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14143  01A9E2  0E00               	movlw	0
 14144  01A9E4  6EE6               	movwf	postinc1,c
 14145  01A9E6  0E00               	movlw	0
 14146  01A9E8  6EE6               	movwf	postinc1,c
 14147  01A9EA  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 14148  01A9EE  0060  F007  FFE6   	movff	btemp,postinc1
 14149  01A9F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14150  01A9FA  0EA4               	movlw	low STR_80
 14151  01A9FC  6EE6               	movwf	postinc1,c
 14152  01A9FE  0EFF               	movlw	high STR_80
 14153  01AA00  6EE6               	movwf	postinc1,c
 14154  01AA02  0E08               	movlw	low (_V+1)
 14155  01AA04  6EE6               	movwf	postinc1,c
 14156  01AA06  0E01               	movlw	high (_V+1)
 14157  01AA08  6EE6               	movwf	postinc1,c
 14158  01AA0A  0E08               	movlw	8
 14159  01AA0C  6EE6               	movwf	postinc1,c
 14160  01AA0E  ECC4  F0D8         	call	_sprintf	;wreg free
 14161                           
 14162                           ; BSR set to: 0
 14163                           ;mconfig.c: 124:  wait_lcd_done();
 14164  01AA12  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 14165                           
 14166                           ; BSR set to: 0
 14167                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 14168  01AA16  0E08               	movlw	low (_V+1)
 14169  01AA18  6EE6               	movwf	postinc1,c
 14170  01AA1A  0E01               	movlw	high (_V+1)
 14171  01AA1C  6EE6               	movwf	postinc1,c
 14172  01AA1E  0E00               	movlw	0
 14173  01AA20  6EE6               	movwf	postinc1,c
 14174  01AA22  0E00               	movlw	0
 14175  01AA24  6EE6               	movwf	postinc1,c
 14176  01AA26  EC2F  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14177                           
 14178                           ; BSR set to: 59
 14179                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 14180  01AA2A  0E01               	movlw	1
 14181  01AA2C  6EE6               	movwf	postinc1,c
 14182  01AA2E  0E01               	movlw	1
 14183  01AA30  6EE6               	movwf	postinc1,c
 14184  01AA32  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 14185  01AA36  0060  F007  FFE6   	movff	btemp,postinc1
 14186  01AA3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14187  01AA42  0E00               	movlw	0
 14188  01AA44  6EE6               	movwf	postinc1,c
 14189  01AA46  0E01               	movlw	1
 14190  01AA48  6EE6               	movwf	postinc1,c
 14191  01AA4A  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 14192  01AA4E  0060  F007  FFE6   	movff	btemp,postinc1
 14193  01AA54  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14194  01AA5A  0EA4               	movlw	low STR_80
 14195  01AA5C  6EE6               	movwf	postinc1,c
 14196  01AA5E  0EFF               	movlw	high STR_80
 14197  01AA60  6EE6               	movwf	postinc1,c
 14198  01AA62  0E08               	movlw	low (_V+1)
 14199  01AA64  6EE6               	movwf	postinc1,c
 14200  01AA66  0E01               	movlw	high (_V+1)
 14201  01AA68  6EE6               	movwf	postinc1,c
 14202  01AA6A  0E08               	movlw	8
 14203  01AA6C  6EE6               	movwf	postinc1,c
 14204  01AA6E  ECC4  F0D8         	call	_sprintf	;wreg free
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;mconfig.c: 127:  wait_lcd_done();
 14208  01AA72  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 14209                           
 14210                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 14211  01AA76  0E08               	movlw	low (_V+1)
 14212  01AA78  6EE6               	movwf	postinc1,c
 14213  01AA7A  0E01               	movlw	high (_V+1)
 14214  01AA7C  6EE6               	movwf	postinc1,c
 14215  01AA7E  0E00               	movlw	0
 14216  01AA80  6EE6               	movwf	postinc1,c
 14217  01AA82  0E01               	movlw	1
 14218  01AA84  6EE6               	movwf	postinc1,c
 14219  01AA86  EC2F  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14220                           
 14221                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 14222  01AA8A  0E01               	movlw	1
 14223  01AA8C  6EE6               	movwf	postinc1,c
 14224  01AA8E  0E02               	movlw	2
 14225  01AA90  6EE6               	movwf	postinc1,c
 14226  01AA92  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 14227  01AA96  0060  F007  FFE6   	movff	btemp,postinc1
 14228  01AA9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14229  01AAA2  0E00               	movlw	0
 14230  01AAA4  6EE6               	movwf	postinc1,c
 14231  01AAA6  0E02               	movlw	2
 14232  01AAA8  6EE6               	movwf	postinc1,c
 14233  01AAAA  EC45  F0EA         	call	_get_vterm_ptr	;wreg free
 14234  01AAAE  0060  F007  FFE6   	movff	btemp,postinc1
 14235  01AAB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14236  01AABA  0EA4               	movlw	low STR_80
 14237  01AABC  6EE6               	movwf	postinc1,c
 14238  01AABE  0EFF               	movlw	high STR_80
 14239  01AAC0  6EE6               	movwf	postinc1,c
 14240  01AAC2  0E08               	movlw	low (_V+1)
 14241  01AAC4  6EE6               	movwf	postinc1,c
 14242  01AAC6  0E01               	movlw	high (_V+1)
 14243  01AAC8  6EE6               	movwf	postinc1,c
 14244  01AACA  0E08               	movlw	8
 14245  01AACC  6EE6               	movwf	postinc1,c
 14246  01AACE  ECC4  F0D8         	call	_sprintf	;wreg free
 14247                           
 14248                           ; BSR set to: 0
 14249                           ;mconfig.c: 130:  wait_lcd_done();
 14250  01AAD2  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 14254  01AAD6  0E08               	movlw	low (_V+1)
 14255  01AAD8  6EE6               	movwf	postinc1,c
 14256  01AADA  0E01               	movlw	high (_V+1)
 14257  01AADC  6EE6               	movwf	postinc1,c
 14258  01AADE  0E00               	movlw	0
 14259  01AAE0  6EE6               	movwf	postinc1,c
 14260  01AAE2  0E02               	movlw	2
 14261  01AAE4  6EE6               	movwf	postinc1,c
 14262  01AAE6  EC2F  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14263                           
 14264                           ; BSR set to: 59
 14265                           ;mconfig.c: 132:  WaitMs(3000);
 14266  01AAEA  0EB8               	movlw	184
 14267  01AAEC  6EE6               	movwf	postinc1,c
 14268  01AAEE  0E0B               	movlw	11
 14269  01AAF0  6EE6               	movwf	postinc1,c
 14270  01AAF2  EC49  F0E9         	call	_WaitMs	;wreg free
 14271                           
 14272                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 14273  01AAF6  0012               	return		;funcret
 14274  01AAF8                     __end_of_vterm_dump:
 14275                           	opt callstack 0
 14276                           
 14277 ;; *************** function _sprintf *****************
 14278 ;; Defined at:
 14279 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;  s               2  [STACK] PTR unsigned char 
 14282 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 14283 ;;  fmt             2  [STACK] PTR const unsigned char 
 14284 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 14285 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 14286 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 14287 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 14288 ;;		 -> STR_76(19), STR_71(21), STR_70(21), STR_69(21), 
 14289 ;;		 -> STR_68(21), STR_67(21), STR_66(21), STR_65(21), 
 14290 ;;		 -> STR_64(21), STR_63(21), STR_62(18), STR_61(21), 
 14291 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 14292 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 14293 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(20), 
 14294 ;;		 -> STR_48(21), STR_47(21), STR_46(21), STR_45(22), 
 14295 ;;		 -> STR_44(22), STR_43(22), STR_42(23), STR_41(23), 
 14296 ;;		 -> STR_40(23), STR_39(29), STR_38(23), STR_37(23), 
 14297 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 14298 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 14299 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 14300 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(26), 
 14301 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 14302 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 14303 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 14304 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 14305 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;  f               6  [STACK] struct _IO_FILE
 14308 ;;  ap              2  [STACK] PTR void [1]
 14309 ;;		 -> ?_printf(2), ?_sprintf(2), 
 14310 ;;  ret             2    0        int 
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  2  [STACK] int 
 14313 ;; Registers used:
 14314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/2
 14317 ;;		On exit  : 3F/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14324 ;;Total ram usage:        0 bytes
 14325 ;; Hardware stack levels used:    1
 14326 ;; Hardware stack levels required when called:   23
 14327 ;; This function calls:
 14328 ;;		_vfprintf
 14329 ;; This function is called by:
 14330 ;;		_main
 14331 ;;		_current_sensor_cal
 14332 ;;		_check_help
 14333 ;;		_vterm_dump
 14334 ;;		_calc_bsoc
 14335 ;; This function uses a reentrant model
 14336 ;;
 14337                           
 14338                           	psect	text51
 14339  01B188                     __ptext51:
 14340                           	opt callstack 0
 14341  01B188                     _sprintf:
 14342                           	opt callstack 0
 14343                           
 14344                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14345  01B188  0E08               	movlw	8
 14346  01B18A  26E1               	addwf	fsr1l,f,c
 14347  01B18C  0E00               	movlw	0
 14348  01B18E  22E2               	addwfc	fsr1h,f,c
 14349                           
 14350                           ;incstack = 0
 14351 ;; hardware stack exceeded
 14352  01B190  0EFE               	movlw	254
 14353  01B192  6E0B               	movwf	(btemp+10)^0,c
 14354  01B194  0EFF               	movlw	255
 14355  01B196  6E0C               	movwf	(btemp+11)^0,c
 14356                           
 14357                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 14358  01B198  0EF5               	movlw	245
 14359  01B19A  24E1               	addwf	fsr1l,w,c
 14360  01B19C  6E09               	movwf	(btemp+8)^0,c
 14361  01B19E  0EFF               	movlw	255
 14362  01B1A0  20E2               	addwfc	fsr1h,w,c
 14363  01B1A2  6E0A               	movwf	(btemp+9)^0,c
 14364  01B1A4  500B               	movf	(btemp+10)^0,w,c
 14365  01B1A6  2609               	addwf	(btemp+8)^0,f,c
 14366  01B1A8  500C               	movf	(btemp+11)^0,w,c
 14367  01B1AA  220A               	addwfc	(btemp+9)^0,f,c
 14368                           
 14369                           ;stkvar	_ap @ sp[(-8)+6]
 14370  01B1AC  0EFF               	movlw	-1
 14371  01B1AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14372  01B1B4  0EFE               	movlw	-2
 14373  01B1B6  0060  F027  FFE3   	movff	btemp+8,plusw1
 14374                           
 14375                           ;stkvar	_s @ sp[(-8)+-3]
 14376  01B1BC  0EF5               	movlw	-11
 14377  01B1BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 14378  01B1C4  0EF6               	movlw	-10
 14379  01B1C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 14380                           
 14381                           ;stkvar	_f @ sp[(-8)+0]
 14382  01B1CC  0EF9               	movlw	-7
 14383  01B1CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14384  01B1D4  0EF8               	movlw	-8
 14385  01B1D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14386                           
 14387                           ;stkvar	_f @ sp[(-8)+0]
 14388  01B1DC  0EFA               	movlw	250
 14389  01B1DE  24E1               	addwf	fsr1l,w,c
 14390  01B1E0  6ED9               	movwf	fsr2l,c
 14391  01B1E2  0EFF               	movlw	255
 14392  01B1E4  20E2               	addwfc	fsr1h,w,c
 14393  01B1E6  6EDA               	movwf	fsr2h,c
 14394  01B1E8  0E00               	movlw	0
 14395  01B1EA  6EDE               	movwf	postinc2,c
 14396  01B1EC  0E00               	movlw	0
 14397  01B1EE  6EDD               	movwf	postdec2,c
 14398                           
 14399                           ;stkvar	_f @ sp[(-8)+0]
 14400  01B1F0  0EFC               	movlw	252
 14401  01B1F2  24E1               	addwf	fsr1l,w,c
 14402  01B1F4  6ED9               	movwf	fsr2l,c
 14403  01B1F6  0EFF               	movlw	255
 14404  01B1F8  20E2               	addwfc	fsr1h,w,c
 14405  01B1FA  6EDA               	movwf	fsr2h,c
 14406  01B1FC  0E00               	movlw	0
 14407  01B1FE  6EDE               	movwf	postinc2,c
 14408  01B200  0E00               	movlw	0
 14409  01B202  6EDD               	movwf	postdec2,c
 14410                           
 14411                           ;stkvar	_ap @ sp[(-8)+6]
 14412  01B204  0EFE               	movlw	254
 14413  01B206  24E1               	addwf	fsr1l,w,c
 14414  01B208  6E01               	movwf	btemp^0,c
 14415  01B20A  0EFF               	movlw	255
 14416  01B20C  20E2               	addwfc	fsr1h,w,c
 14417  01B20E  6E02               	movwf	(btemp+1)^0,c
 14418  01B210  0060  F007  FFE6   	movff	btemp,postinc1
 14419  01B216  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14420                           
 14421                           ;stkvar	_fmt @ sp[(-10)+-5]
 14422  01B21C  0EF1               	movlw	-15
 14423  01B21E  006F FF8F FFE6     	movff	plusw1,postinc1
 14424  01B224  006F FF8F FFE6     	movff	plusw1,postinc1
 14425                           
 14426                           ;stkvar	_f @ sp[(-12)+0]
 14427  01B22A  0EF4               	movlw	244
 14428  01B22C  24E1               	addwf	fsr1l,w,c
 14429  01B22E  6E01               	movwf	btemp^0,c
 14430  01B230  0EFF               	movlw	255
 14431  01B232  20E2               	addwfc	fsr1h,w,c
 14432  01B234  6E02               	movwf	(btemp+1)^0,c
 14433  01B236  0060  F007  FFE6   	movff	btemp,postinc1
 14434  01B23C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14435  01B242  EC84  F0DE         	call	_vfprintf	;wreg free
 14436                           
 14437                           ; BSR set to: 0
 14438                           ;stkvar	_f @ sp[(-8)+0]
 14439  01B246  0EFA               	movlw	250
 14440  01B248  24E1               	addwf	fsr1l,w,c
 14441  01B24A  6ED9               	movwf	fsr2l,c
 14442  01B24C  0EFF               	movlw	255
 14443  01B24E  20E2               	addwfc	fsr1h,w,c
 14444  01B250  6EDA               	movwf	fsr2h,c
 14445  01B252  006F FF78  F00B    	movff	postinc2,btemp+10
 14446  01B258  006F FF74  F00C    	movff	postdec2,btemp+11
 14447                           
 14448                           ;stkvar	_s @ sp[(-8)+-3]
 14449  01B25E  0EF5               	movlw	-11
 14450  01B260  006F FF8C  F009    	movff	plusw1,btemp+8
 14451  01B266  0EF6               	movlw	-10
 14452  01B268  006F FF8C  F00A    	movff	plusw1,btemp+9
 14453  01B26E  500B               	movf	(btemp+10)^0,w,c
 14454  01B270  2409               	addwf	(btemp+8)^0,w,c
 14455  01B272  6ED9               	movwf	fsr2l,c
 14456  01B274  500C               	movf	(btemp+11)^0,w,c
 14457  01B276  200A               	addwfc	(btemp+9)^0,w,c
 14458  01B278  6EDA               	movwf	fsr2h,c
 14459  01B27A  0E00               	movlw	0
 14460  01B27C  6EDF               	movwf	indf2,c
 14461                           
 14462                           ; BSR set to: 0
 14463                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 14464  01B27E  0EF8               	movlw	248
 14465  01B280  26E1               	addwf	fsr1l,f,c
 14466  01B282  0EFF               	movlw	255
 14467  01B284  22E2               	addwfc	fsr1h,f,c
 14468  01B286  52E5               	movf	postdec1,f,c
 14469  01B288  50E7               	movf	indf1,w,c
 14470  01B28A  5EE1               	subwf	fsr1l,f,c
 14471  01B28C  0E00               	movlw	0
 14472  01B28E  5AE2               	subwfb	fsr1h,f,c
 14473  01B290  0012               	return		;funcret
 14474  01B292                     __end_of_sprintf:
 14475                           	opt callstack 0
 14476                           
 14477 ;; *************** function _get_vterm_ptr *****************
 14478 ;; Defined at:
 14479 ;;		line 116 in file "mconfig.c"
 14480 ;; Parameters:    Size  Location     Type
 14481 ;;  line            1  [STACK] const unsigned char 
 14482 ;;  vterm           1  [STACK] const unsigned char 
 14483 ;; Auto vars:     Size  Location     Type
 14484 ;;		None
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  2  [STACK] PTR unsigned char 
 14487 ;; Registers used:
 14488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 14489 ;; Tracked objects:
 14490 ;;		On entry : 0/2
 14491 ;;		On exit  : 0/0
 14492 ;;		Unchanged: 0/0
 14493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14498 ;;Total ram usage:        0 bytes
 14499 ;; Hardware stack levels used:    1
 14500 ;; Hardware stack levels required when called:   15
 14501 ;; This function calls:
 14502 ;;		Nothing
 14503 ;; This function is called by:
 14504 ;;		_main
 14505 ;;		_current_sensor_cal
 14506 ;;		_check_help
 14507 ;;		_vterm_dump
 14508 ;; This function uses a reentrant model
 14509 ;;
 14510                           
 14511                           	psect	text52
 14512  01D48A                     __ptext52:
 14513                           	opt callstack 0
 14514  01D48A                     _get_vterm_ptr:
 14515                           	opt callstack 15
 14516                           
 14517                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 14518                           ;stkvar	_vterm @ sp[(0)+-2]
 14519                           
 14520                           ; BSR set to: 0
 14521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14522                           ;incstack = 0
 14523  01D48A  0EFE               	movlw	-2
 14524  01D48C  50E3               	movf	plusw1,w,c
 14525  01D48E  0B03               	andlw	3
 14526  01D490  0D78               	mullw	120
 14527  01D492  0E2A               	movlw	low _D
 14528  01D494  6E01               	movwf	btemp^0,c
 14529  01D496  0E09               	movlw	high _D
 14530  01D498  6E02               	movwf	(btemp+1)^0,c
 14531  01D49A  50F3               	movf	243,w,c
 14532  01D49C  2601               	addwf	btemp^0,f,c
 14533  01D49E  50F4               	movf	244,w,c
 14534  01D4A0  2202               	addwfc	(btemp+1)^0,f,c
 14535                           
 14536                           ;stkvar	_line @ sp[(0)+-1]
 14537  01D4A2  0EFF               	movlw	-1
 14538  01D4A4  50E3               	movf	plusw1,w,c
 14539  01D4A6  0B03               	andlw	3
 14540  01D4A8  0D28               	mullw	40
 14541  01D4AA  50F3               	movf	243,w,c
 14542  01D4AC  2601               	addwf	btemp^0,f,c
 14543  01D4AE  50F4               	movf	244,w,c
 14544  01D4B0  2202               	addwfc	(btemp+1)^0,f,c
 14545                           
 14546                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 14547  01D4B2  52E5               	movf	postdec1,f,c
 14548  01D4B4  52E5               	movf	postdec1,f,c
 14549  01D4B6  0012               	return		;funcret
 14550  01D4B8                     __end_of_get_vterm_ptr:
 14551                           	opt callstack 0
 14552                           
 14553 ;; *************** function _WaitMs *****************
 14554 ;; Defined at:
 14555 ;;		line 32 in file "timers.c"
 14556 ;; Parameters:    Size  Location     Type
 14557 ;;  numMilliseco    2  [STACK] const unsigned short 
 14558 ;; Auto vars:     Size  Location     Type
 14559 ;;		None
 14560 ;; Return value:  Size  Location     Type
 14561 ;;                  1  [STACK] void 
 14562 ;; Registers used:
 14563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14564 ;; Tracked objects:
 14565 ;;		On entry : 0/1
 14566 ;;		On exit  : 0/0
 14567 ;;		Unchanged: 0/0
 14568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14573 ;;Total ram usage:        0 bytes
 14574 ;; Hardware stack levels used:    1
 14575 ;; Hardware stack levels required when called:   16
 14576 ;; This function calls:
 14577 ;;		_StartTimer
 14578 ;;		_TimerDone
 14579 ;; This function is called by:
 14580 ;;		_main
 14581 ;;		_current_sensor_cal
 14582 ;;		_vterm_dump
 14583 ;; This function uses a reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text53
 14587  01D292                     __ptext53:
 14588                           	opt callstack 0
 14589  01D292                     _WaitMs:
 14590                           	opt callstack 13
 14591                           
 14592                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 14593                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 14594                           
 14595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14596                           ;incstack = 0
 14597  01D292  0EFE               	movlw	-2
 14598  01D294  006F FF8F FFE6     	movff	plusw1,postinc1
 14599  01D29A  006F FF8F FFE6     	movff	plusw1,postinc1
 14600  01D2A0  0E00               	movlw	0
 14601  01D2A2  6EE6               	movwf	postinc1,c
 14602  01D2A4  EC57  F0E8         	call	_StartTimer	;wreg free
 14603                           
 14604                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 14605  01D2A8  D005               	goto	l10842
 14606  01D2AA                     l1743:
 14607                           
 14608                           ;timers.c: 36:   __nop();
 14609  01D2AA  F000               	nop	
 14610                           
 14611                           ;timers.c: 37:   __nop();
 14612  01D2AC  F000               	nop	
 14613                           
 14614                           ;timers.c: 38:   __nop();
 14615  01D2AE  F000               	nop	
 14616                           
 14617                           ;timers.c: 39:   __nop();
 14618  01D2B0  F000               	nop	
 14619  01D2B2  0004               	clrwdt		;# 
 14620  01D2B4                     l10842:
 14621                           
 14622                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 14623  01D2B4  0E00               	movlw	0
 14624  01D2B6  6EE6               	movwf	postinc1,c
 14625  01D2B8  ECC7  F0EA         	call	_TimerDone	;wreg free
 14626  01D2BC  5001               	movf	btemp^0,w,c
 14627  01D2BE  B4D8               	btfsc	status,2,c
 14628  01D2C0  D7F4               	goto	l1743
 14629                           
 14630                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 14631  01D2C2  52E5               	movf	postdec1,f,c
 14632  01D2C4  52E5               	movf	postdec1,f,c
 14633  01D2C6  0012               	return		;funcret
 14634  01D2C8                     __end_of_WaitMs:
 14635                           	opt callstack 0
 14636                           
 14637 ;; *************** function _update_lcd *****************
 14638 ;; Defined at:
 14639 ;;		line 85 in file "mconfig.c"
 14640 ;; Parameters:    Size  Location     Type
 14641 ;;  vterm           1  [STACK] unsigned char 
 14642 ;; Auto vars:     Size  Location     Type
 14643 ;;		None
 14644 ;; Return value:  Size  Location     Type
 14645 ;;                  1  [STACK] unsigned char 
 14646 ;; Registers used:
 14647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14648 ;; Tracked objects:
 14649 ;;		On entry : 0/0
 14650 ;;		On exit  : 0/0
 14651 ;;		Unchanged: 0/0
 14652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14657 ;;Total ram usage:        0 bytes
 14658 ;; Hardware stack levels used:    1
 14659 ;; Hardware stack levels required when called:   27
 14660 ;; This function calls:
 14661 ;;		_eaDogM_WriteStringAtPos
 14662 ;;		_wait_lcd_done
 14663 ;; This function is called by:
 14664 ;;		_main
 14665 ;;		_current_sensor_cal
 14666 ;;		_check_help
 14667 ;; This function uses a reentrant model
 14668 ;;
 14669                           
 14670                           	psect	text54
 14671  01B078                     __ptext54:
 14672                           	opt callstack 0
 14673  01B078                     _update_lcd:
 14674                           	opt callstack 3
 14675                           
 14676                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 14677                           ;stkvar	_vterm @ sp[(0)+-1]
 14678                           
 14679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14680                           ;incstack = 0
 14681  01B078  0EFF               	movlw	-1
 14682  01B07A  006F FF8C  F001    	movff	plusw1,btemp
 14683  01B080  0E03               	movlw	3
 14684  01B082  1601               	andwf	btemp^0,f,c
 14685  01B084  0EFF               	movlw	-1
 14686  01B086  0060  F007  FFE3   	movff	btemp,plusw1
 14687                           
 14688                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 14689  01B08C  EE22  F30A         	lfsr	2,_D+480
 14690  01B090  A0DF               	btfss	indf2,0,c
 14691  01B092  D004               	goto	l14202
 14692                           
 14693                           ;stkvar	_vterm @ sp[(0)+-1]
 14694  01B094  0EFF               	movlw	-1
 14695  01B096  50E3               	movf	plusw1,w,c
 14696  01B098  B4D8               	btfsc	status,2,c
 14697  01B09A  D074               	goto	l1819
 14698  01B09C                     l14202:
 14699                           
 14700                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 14701                           ;stkvar	_vterm @ sp[(0)+-1]
 14702  01B09C  0EFF               	movlw	-1
 14703  01B09E  50E3               	movf	plusw1,w,c
 14704  01B0A0  0D78               	mullw	120
 14705  01B0A2  0E3E               	movlw	low (_D+20)
 14706  01B0A4  24F3               	addwf	243,w,c
 14707  01B0A6  6ED9               	movwf	fsr2l,c
 14708  01B0A8  0E09               	movlw	high (_D+20)
 14709  01B0AA  20F4               	addwfc	prodh,w,c
 14710  01B0AC  6EDA               	movwf	fsr2h,c
 14711  01B0AE  0E00               	movlw	0
 14712  01B0B0  6EDF               	movwf	indf2,c
 14713                           
 14714                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 14715                           ;stkvar	_vterm @ sp[(0)+-1]
 14716  01B0B2  0EFF               	movlw	-1
 14717  01B0B4  50E3               	movf	plusw1,w,c
 14718  01B0B6  0D78               	mullw	120
 14719  01B0B8  0E66               	movlw	low (_D+60)
 14720  01B0BA  24F3               	addwf	243,w,c
 14721  01B0BC  6ED9               	movwf	fsr2l,c
 14722  01B0BE  0E09               	movlw	high (_D+60)
 14723  01B0C0  20F4               	addwfc	prodh,w,c
 14724  01B0C2  6EDA               	movwf	fsr2h,c
 14725  01B0C4  0E00               	movlw	0
 14726  01B0C6  6EDF               	movwf	indf2,c
 14727                           
 14728                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 14729                           ;stkvar	_vterm @ sp[(0)+-1]
 14730  01B0C8  0EFF               	movlw	-1
 14731  01B0CA  50E3               	movf	plusw1,w,c
 14732  01B0CC  0D78               	mullw	120
 14733  01B0CE  0E8E               	movlw	low (_D+100)
 14734  01B0D0  24F3               	addwf	243,w,c
 14735  01B0D2  6ED9               	movwf	fsr2l,c
 14736  01B0D4  0E09               	movlw	high (_D+100)
 14737  01B0D6  20F4               	addwfc	prodh,w,c
 14738  01B0D8  6EDA               	movwf	fsr2h,c
 14739  01B0DA  0E00               	movlw	0
 14740  01B0DC  6EDF               	movwf	indf2,c
 14741                           
 14742                           ;mconfig.c: 95:  wait_lcd_done();
 14743  01B0DE  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 14747                           ;stkvar	_vterm @ sp[(0)+-1]
 14748  01B0E2  0EFF               	movlw	-1
 14749  01B0E4  50E3               	movf	plusw1,w,c
 14750  01B0E6  0D78               	mullw	120
 14751  01B0E8  0E2A               	movlw	low _D
 14752  01B0EA  6E0B               	movwf	(btemp+10)^0,c
 14753  01B0EC  0E09               	movlw	high _D
 14754  01B0EE  6E0C               	movwf	(btemp+11)^0,c
 14755  01B0F0  50F3               	movf	243,w,c
 14756  01B0F2  260B               	addwf	(btemp+10)^0,f,c
 14757  01B0F4  50F4               	movf	244,w,c
 14758  01B0F6  220C               	addwfc	(btemp+11)^0,f,c
 14759  01B0F8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14760  01B0FE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14761  01B104  0E00               	movlw	0
 14762  01B106  6EE6               	movwf	postinc1,c
 14763  01B108  0E00               	movlw	0
 14764  01B10A  6EE6               	movwf	postinc1,c
 14765  01B10C  EC2F  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14766                           
 14767                           ; BSR set to: 59
 14768                           ;mconfig.c: 97:  wait_lcd_done();
 14769  01B110  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 14770                           
 14771                           ; BSR set to: 0
 14772                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 14773                           ;stkvar	_vterm @ sp[(0)+-1]
 14774  01B114  0EFF               	movlw	-1
 14775  01B116  50E3               	movf	plusw1,w,c
 14776  01B118  0D78               	mullw	120
 14777  01B11A  0E2A               	movlw	low _D
 14778  01B11C  6E0B               	movwf	(btemp+10)^0,c
 14779  01B11E  0E09               	movlw	high _D
 14780  01B120  6E0C               	movwf	(btemp+11)^0,c
 14781  01B122  0E28               	movlw	40
 14782  01B124  260B               	addwf	(btemp+10)^0,f,c
 14783  01B126  0E00               	movlw	0
 14784  01B128  220C               	addwfc	(btemp+11)^0,f,c
 14785  01B12A  50F3               	movf	243,w,c
 14786  01B12C  260B               	addwf	(btemp+10)^0,f,c
 14787  01B12E  50F4               	movf	244,w,c
 14788  01B130  220C               	addwfc	(btemp+11)^0,f,c
 14789  01B132  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14790  01B138  0060  F033  FFE6   	movff	btemp+11,postinc1
 14791  01B13E  0E00               	movlw	0
 14792  01B140  6EE6               	movwf	postinc1,c
 14793  01B142  0E01               	movlw	1
 14794  01B144  6EE6               	movwf	postinc1,c
 14795  01B146  EC2F  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14796                           
 14797                           ; BSR set to: 59
 14798                           ;mconfig.c: 99:  wait_lcd_done();
 14799  01B14A  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 14803                           ;stkvar	_vterm @ sp[(0)+-1]
 14804  01B14E  0EFF               	movlw	-1
 14805  01B150  50E3               	movf	plusw1,w,c
 14806  01B152  0D78               	mullw	120
 14807  01B154  0E2A               	movlw	low _D
 14808  01B156  6E0B               	movwf	(btemp+10)^0,c
 14809  01B158  0E09               	movlw	high _D
 14810  01B15A  6E0C               	movwf	(btemp+11)^0,c
 14811  01B15C  0E50               	movlw	80
 14812  01B15E  260B               	addwf	(btemp+10)^0,f,c
 14813  01B160  0E00               	movlw	0
 14814  01B162  220C               	addwfc	(btemp+11)^0,f,c
 14815  01B164  50F3               	movf	243,w,c
 14816  01B166  260B               	addwf	(btemp+10)^0,f,c
 14817  01B168  50F4               	movf	244,w,c
 14818  01B16A  220C               	addwfc	(btemp+11)^0,f,c
 14819  01B16C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14820  01B172  0060  F033  FFE6   	movff	btemp+11,postinc1
 14821  01B178  0E00               	movlw	0
 14822  01B17A  6EE6               	movwf	postinc1,c
 14823  01B17C  0E02               	movlw	2
 14824  01B17E  6EE6               	movwf	postinc1,c
 14825  01B180  EC2F  F0DF         	call	_eaDogM_WriteStringAtPos	;wreg free
 14826  01B184                     l1819:
 14827                           
 14828                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 14829  01B184  52E5               	movf	postdec1,f,c
 14830  01B186  0012               	return		;funcret
 14831  01B188                     __end_of_update_lcd:
 14832                           	opt callstack 0
 14833                           
 14834 ;; *************** function _eaDogM_WriteStringAtPos *****************
 14835 ;; Defined at:
 14836 ;;		line 195 in file "eadog.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;  r               1  [STACK] const unsigned char 
 14839 ;;  c               1  [STACK] const unsigned char 
 14840 ;;  strPtr          2  [STACK] PTR unsigned char 
 14841 ;;		 -> D.lcd(480), D(482), V(192), 
 14842 ;; Auto vars:     Size  Location     Type
 14843 ;;  row             1  [STACK] unsigned char 
 14844 ;; Return value:  Size  Location     Type
 14845 ;;                  1  [STACK] void 
 14846 ;; Registers used:
 14847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14848 ;; Tracked objects:
 14849 ;;		On entry : 3F/0
 14850 ;;		On exit  : 3F/3B
 14851 ;;		Unchanged: 0/0
 14852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14857 ;;Total ram usage:        0 bytes
 14858 ;; Hardware stack levels used:    1
 14859 ;; Hardware stack levels required when called:   26
 14860 ;; This function calls:
 14861 ;;		_eaDogM_WriteString
 14862 ;;		_send_lcd_cmd_dma
 14863 ;;		_send_lcd_data_dma
 14864 ;;		_wait_lcd_done
 14865 ;;		_wdtdelay
 14866 ;; This function is called by:
 14867 ;;		_update_lcd
 14868 ;;		_vterm_dump
 14869 ;; This function uses a reentrant model
 14870 ;;
 14871                           
 14872                           	psect	text55
 14873  01BE5E                     __ptext55:
 14874                           	opt callstack 0
 14875  01BE5E                     _eaDogM_WriteStringAtPos:
 14876                           	opt callstack 0
 14877                           
 14878                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14879  01BE5E  52E6               	movf	postinc1,f,c
 14880                           
 14881                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 14882                           
 14883                           ;incstack = 0
 14884  01BE60  D014               	goto	l14178
 14885  01BE62                     l14166:
 14886                           
 14887                           ;eadog.c: 201:   row = 0x40;
 14888                           ;stkvar	_row @ sp[(-1)+0]
 14889  01BE62  0EFF               	movlw	-1
 14890  01BE64  6AE3               	clrf	plusw1,c
 14891  01BE66  8CE3               	bsf	plusw1,6,c
 14892                           
 14893                           ;eadog.c: 202:   break;
 14894  01BE68  D026               	goto	l14180
 14895  01BE6A                     l14168:
 14896                           
 14897                           ;eadog.c: 204:   row = 0x14;
 14898                           ;stkvar	_row @ sp[(-1)+0]
 14899  01BE6A  0EFF               	movlw	-1
 14900  01BE6C  6AE3               	clrf	plusw1,c
 14901  01BE6E  84E3               	bsf	plusw1,2,c
 14902  01BE70  88E3               	bsf	plusw1,4,c	;indir
 14903                           
 14904                           ;eadog.c: 205:   break;
 14905  01BE72  D021               	goto	l14180
 14906  01BE74                     l14170:
 14907                           
 14908                           ;eadog.c: 207:   row = 0x54;
 14909  01BE74  0E54               	movlw	84
 14910  01BE76  6E0C               	movwf	(btemp+11)^0,c
 14911                           
 14912                           ;stkvar	_row @ sp[(-1)+0]
 14913  01BE78  0EFF               	movlw	-1
 14914  01BE7A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14915                           
 14916                           ;eadog.c: 208:   break;
 14917  01BE80  D01A               	goto	l14180
 14918  01BE82                     l14172:
 14919                           
 14920                           ;eadog.c: 210:   row = 0x1;
 14921                           ;stkvar	_row @ sp[(-1)+0]
 14922  01BE82  0EFF               	movlw	-1
 14923  01BE84  6AE3               	clrf	plusw1,c
 14924  01BE86  2AE3               	incf	plusw1,f,c
 14925                           
 14926                           ;eadog.c: 211:   break;
 14927  01BE88  D016               	goto	l14180
 14928  01BE8A                     l14178:
 14929                           
 14930                           ;stkvar	_r @ sp[(-1)+-1]
 14931  01BE8A  0EFE               	movlw	-2
 14932  01BE8C  50E3               	movf	plusw1,w,c
 14933  01BE8E  6E0B               	movwf	(btemp+10)^0,c
 14934  01BE90  6A0C               	clrf	(btemp+11)^0,c
 14935                           
 14936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14937                           ; Switch size 1, requested type "simple"
 14938                           ; Number of cases is 1, Range of values is 0 to 0
 14939                           ; switch strategies available:
 14940                           ; Name         Instructions Cycles
 14941                           ; simple_byte            4     3 (average)
 14942                           ;	Chosen strategy is simple_byte
 14943  01BE92  500C               	movf	(btemp+11)^0,w,c
 14944  01BE94  0A00               	xorlw	0	; case 0
 14945  01BE96  A4D8               	btfss	status,2,c
 14946  01BE98  D7E4               	goto	l14166
 14947                           
 14948                           ; Switch size 1, requested type "simple"
 14949                           ; Number of cases is 4, Range of values is 0 to 3
 14950                           ; switch strategies available:
 14951                           ; Name         Instructions Cycles
 14952                           ; simple_byte           13     7 (average)
 14953                           ;	Chosen strategy is simple_byte
 14954  01BE9A  500B               	movf	(btemp+10)^0,w,c
 14955  01BE9C  0A00               	xorlw	0	; case 0
 14956  01BE9E  B4D8               	btfsc	status,2,c
 14957  01BEA0  D7E0               	goto	l14166
 14958  01BEA2  0A01               	xorlw	1	; case 1
 14959  01BEA4  B4D8               	btfsc	status,2,c
 14960  01BEA6  D7E1               	goto	l14168
 14961  01BEA8  0A03               	xorlw	3	; case 2
 14962  01BEAA  B4D8               	btfsc	status,2,c
 14963  01BEAC  D7E3               	goto	l14170
 14964  01BEAE  0A01               	xorlw	1	; case 3
 14965  01BEB0  B4D8               	btfsc	status,2,c
 14966  01BEB2  D7E7               	goto	l14172
 14967  01BEB4  D7D6               	goto	l14166
 14968  01BEB6                     l14180:
 14969                           
 14970                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 14971  01BEB6  0E45               	movlw	69
 14972  01BEB8  6EE6               	movwf	postinc1,c
 14973  01BEBA  ECAE  F0EC         	call	_send_lcd_cmd_dma	;wreg free
 14974                           
 14975                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 14976                           ;stkvar	_c @ sp[(-1)+-2]
 14977  01BEBE  0EFD               	movlw	-3
 14978  01BEC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14979                           
 14980                           ;stkvar	_row @ sp[(-1)+0]
 14981  01BEC6  0EFF               	movlw	-1
 14982  01BEC8  50E3               	movf	plusw1,w,c
 14983  01BECA  240C               	addwf	(btemp+11)^0,w,c
 14984  01BECC  6EE6               	movwf	postinc1,c
 14985  01BECE  ECD9  F0E6         	call	_send_lcd_data_dma	;wreg free
 14986                           
 14987                           ; BSR set to: 59
 14988                           ;eadog.c: 218:  wait_lcd_done();
 14989  01BED2  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;eadog.c: 219:  wdtdelay(8);
 14993  01BED6  0E08               	movlw	8
 14994  01BED8  6EE6               	movwf	postinc1,c
 14995  01BEDA  0E00               	movlw	0
 14996  01BEDC  6EE6               	movwf	postinc1,c
 14997  01BEDE  0E00               	movlw	0
 14998  01BEE0  6EE6               	movwf	postinc1,c
 14999  01BEE2  0E00               	movlw	0
 15000  01BEE4  6EE6               	movwf	postinc1,c
 15001  01BEE6  ECB8  F0E5         	call	_wdtdelay	;wreg free
 15002                           
 15003                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 15004                           ;stkvar	_strPtr @ sp[(-1)+-4]
 15005  01BEEA  0EFB               	movlw	-5
 15006  01BEEC  006F FF8F FFE6     	movff	plusw1,postinc1
 15007  01BEF2  006F FF8F FFE6     	movff	plusw1,postinc1
 15008  01BEF8  EC83  F0DF         	call	_eaDogM_WriteString	;wreg free
 15009                           
 15010                           ; BSR set to: 59
 15011                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 15012  01BEFC  0EFB               	movlw	251
 15013  01BEFE  26E1               	addwf	fsr1l,f,c
 15014  01BF00  0EFF               	movlw	255
 15015  01BF02  22E2               	addwfc	fsr1h,f,c
 15016  01BF04  0012               	return		;funcret
 15017  01BF06                     __end_of_eaDogM_WriteStringAtPos:
 15018                           	opt callstack 0
 15019                           
 15020 ;; *************** function _send_lcd_cmd_dma *****************
 15021 ;; Defined at:
 15022 ;;		line 171 in file "eadog.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;  strPtr          1  [STACK] const unsigned char 
 15025 ;; Auto vars:     Size  Location     Type
 15026 ;;		None
 15027 ;; Return value:  Size  Location     Type
 15028 ;;                  1  [STACK] void 
 15029 ;; Registers used:
 15030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15031 ;; Tracked objects:
 15032 ;;		On entry : 0/3D
 15033 ;;		On exit  : 3F/0
 15034 ;;		Unchanged: 0/0
 15035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15040 ;;Total ram usage:        0 bytes
 15041 ;; Hardware stack levels used:    1
 15042 ;; Hardware stack levels required when called:   25
 15043 ;; This function calls:
 15044 ;;		_send_lcd_data_dma
 15045 ;;		_wait_lcd_done
 15046 ;; This function is called by:
 15047 ;;		_eaDogM_WriteStringAtPos
 15048 ;;		_eaDogM_WriteCommand
 15049 ;; This function uses a reentrant model
 15050 ;;
 15051                           
 15052                           	psect	text56
 15053  01D95C                     __ptext56:
 15054                           	opt callstack 0
 15055  01D95C                     _send_lcd_cmd_dma:
 15056                           	opt callstack 3
 15057                           
 15058                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 15059                           
 15060                           ; BSR set to: 59
 15061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15062                           ;incstack = 0
 15063  01D95C  0EFE               	movlw	254
 15064  01D95E  6EE6               	movwf	postinc1,c
 15065  01D960  ECD9  F0E6         	call	_send_lcd_data_dma	;wreg free
 15066                           
 15067                           ; BSR set to: 59
 15068                           ;eadog.c: 174:  wait_lcd_done();
 15069  01D964  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 15070                           
 15071                           ; BSR set to: 0
 15072                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 15073                           ;stkvar	_strPtr @ sp[(0)+-1]
 15074  01D968  0EFF               	movlw	-1
 15075  01D96A  50E3               	movf	plusw1,w,c
 15076  01D96C  6EE6               	movwf	postinc1,c
 15077  01D96E  ECD9  F0E6         	call	_send_lcd_data_dma	;wreg free
 15078                           
 15079                           ;eadog.c: 176:  wait_lcd_done();
 15080  01D972  EC4C  F0EC         	call	_wait_lcd_done	;wreg free
 15081                           
 15082                           ; BSR set to: 0
 15083                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 15084  01D976  52E5               	movf	postdec1,f,c
 15085  01D978  0012               	return		;funcret
 15086  01D97A                     __end_of_send_lcd_cmd_dma:
 15087                           	opt callstack 0
 15088                           
 15089 ;; *************** function _wait_lcd_done *****************
 15090 ;; Defined at:
 15091 ;;		line 444 in file "eadog.c"
 15092 ;; Parameters:    Size  Location     Type
 15093 ;;		None
 15094 ;; Auto vars:     Size  Location     Type
 15095 ;;		None
 15096 ;; Return value:  Size  Location     Type
 15097 ;;                  1  [STACK] void 
 15098 ;; Registers used:
 15099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 15100 ;; Tracked objects:
 15101 ;;		On entry : 0/1
 15102 ;;		On exit  : 3F/0
 15103 ;;		Unchanged: 0/0
 15104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15109 ;;Total ram usage:        0 bytes
 15110 ;; Hardware stack levels used:    1
 15111 ;; Hardware stack levels required when called:   16
 15112 ;; This function calls:
 15113 ;;		_wdtdelay
 15114 ;; This function is called by:
 15115 ;;		_main
 15116 ;;		_send_lcd_cmd_dma
 15117 ;;		_eaDogM_WriteStringAtPos
 15118 ;;		_update_lcd
 15119 ;;		_vterm_dump
 15120 ;; This function uses a reentrant model
 15121 ;;
 15122                           
 15123                           	psect	text57
 15124  01D898                     __ptext57:
 15125                           	opt callstack 0
 15126  01D898                     _wait_lcd_done:
 15127                           	opt callstack 14
 15128                           
 15129                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 15130                           
 15131                           ; BSR set to: 0
 15132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15133                           ;incstack = 0
 15134  01D898  0101               	movlb	1	; () banked
 15135  01D89A  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 15136  01D89C  D7FD               	goto	_wait_lcd_done
 15137  01D89E                     u9250:
 15138  01D89E  013D               	movlb	61	; () banked
 15139  01D8A0  AB17               	btfss	23,5,b	;volatile
 15140  01D8A2  D7FD               	goto	u9250
 15141                           
 15142                           ; BSR set to: 61
 15143                           ;eadog.c: 448:  wdtdelay(50);
 15144  01D8A4  0E32               	movlw	50
 15145  01D8A6  6EE6               	movwf	postinc1,c
 15146  01D8A8  0E00               	movlw	0
 15147  01D8AA  6EE6               	movwf	postinc1,c
 15148  01D8AC  0E00               	movlw	0
 15149  01D8AE  6EE6               	movwf	postinc1,c
 15150  01D8B0  0E00               	movlw	0
 15151  01D8B2  6EE6               	movwf	postinc1,c
 15152  01D8B4  ECB8  F0E5         	call	_wdtdelay	;wreg free
 15153                           
 15154                           ; BSR set to: 0
 15155                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 15156  01D8B8  0012               	return		;funcret
 15157  01D8BA                     __end_of_wait_lcd_done:
 15158                           	opt callstack 0
 15159                           
 15160 ;; *************** function _wdtdelay *****************
 15161 ;; Defined at:
 15162 ;;		line 23 in file "eadog.c"
 15163 ;; Parameters:    Size  Location     Type
 15164 ;;  delay           4  [STACK] const unsigned long 
 15165 ;; Auto vars:     Size  Location     Type
 15166 ;;		None
 15167 ;; Return value:  Size  Location     Type
 15168 ;;                  1  [STACK] void 
 15169 ;; Registers used:
 15170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 15171 ;; Tracked objects:
 15172 ;;		On entry : 2/3D
 15173 ;;		On exit  : 3F/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15180 ;;Total ram usage:        0 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:   15
 15183 ;; This function calls:
 15184 ;;		Nothing
 15185 ;; This function is called by:
 15186 ;;		_init_display
 15187 ;;		_send_lcd_data
 15188 ;;		_send_lcd_cmd
 15189 ;;		_send_lcd_cmd_long
 15190 ;;		_eaDogM_WriteStringAtPos
 15191 ;;		_wait_lcd_done
 15192 ;; This function uses a reentrant model
 15193 ;;
 15194                           
 15195                           	psect	text58
 15196  01CB70                     __ptext58:
 15197                           	opt callstack 0
 15198  01CB70                     _wdtdelay:
 15199                           	opt callstack 14
 15200                           
 15201                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 15202                           
 15203                           ; BSR set to: 0
 15204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15205                           ;incstack = 0
 15206  01CB70  0100               	movlb	0	; () banked
 15207  01CB72  6B74               	clrf	wdtdelay@dcount& (0+255),b
 15208  01CB74  6B75               	clrf	(wdtdelay@dcount+1)& (0+255),b
 15209  01CB76  6B76               	clrf	(wdtdelay@dcount+2)& (0+255),b
 15210  01CB78  6B77               	clrf	(wdtdelay@dcount+3)& (0+255),b
 15211  01CB7A                     l1596:
 15212                           
 15213                           ; BSR set to: 0
 15214                           ;eadog.c: 28:   __nop();
 15215  01CB7A  F000               	nop	
 15216  01CB7C  0004               	clrwdt		;# 
 15217                           
 15218                           ;eadog.c: 30:  };
 15219  01CB7E  0E01               	movlw	1
 15220  01CB80  0100               	movlb	0	; () banked
 15221  01CB82  2774               	addwf	wdtdelay@dcount& (0+255),f,b
 15222  01CB84  0E00               	movlw	0
 15223  01CB86  2375               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 15224  01CB88  2376               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 15225  01CB8A  2377               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 15226                           
 15227                           ; BSR set to: 0
 15228                           ;stkvar	_delay @ sp[(0)+-4]
 15229  01CB8C  0EFC               	movlw	-4
 15230  01CB8E  006F FF8C  F001    	movff	plusw1,btemp
 15231  01CB94  5174               	movf	wdtdelay@dcount& (0+255),w,b
 15232  01CB96  5C01               	subwf	btemp^0,w,c
 15233  01CB98  0EFD               	movlw	-3
 15234  01CB9A  006F FF8C  F001    	movff	plusw1,btemp
 15235  01CBA0  5175               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 15236  01CBA2  5801               	subwfb	btemp^0,w,c
 15237  01CBA4  0EFE               	movlw	-2
 15238  01CBA6  006F FF8C  F001    	movff	plusw1,btemp
 15239  01CBAC  5176               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 15240  01CBAE  5801               	subwfb	btemp^0,w,c
 15241  01CBB0  0EFF               	movlw	-1
 15242  01CBB2  006F FF8C  F001    	movff	plusw1,btemp
 15243  01CBB8  5177               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 15244  01CBBA  5801               	subwfb	btemp^0,w,c
 15245  01CBBC  B0D8               	btfsc	status,0,c
 15246  01CBBE  D7DD               	goto	l1596
 15247                           
 15248                           ; BSR set to: 0
 15249                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 15250  01CBC0  52E5               	movf	postdec1,f,c
 15251  01CBC2  52E5               	movf	postdec1,f,c
 15252  01CBC4  52E5               	movf	postdec1,f,c
 15253  01CBC6  52E5               	movf	postdec1,f,c
 15254  01CBC8  0012               	return		;funcret
 15255  01CBCA                     __end_of_wdtdelay:
 15256                           	opt callstack 0
 15257                           
 15258 ;; *************** function _send_lcd_data_dma *****************
 15259 ;; Defined at:
 15260 ;;		line 182 in file "eadog.c"
 15261 ;; Parameters:    Size  Location     Type
 15262 ;;  strPtr          1  [STACK] const unsigned char 
 15263 ;; Auto vars:     Size  Location     Type
 15264 ;;		None
 15265 ;; Return value:  Size  Location     Type
 15266 ;;                  1  [STACK] void 
 15267 ;; Registers used:
 15268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15269 ;; Tracked objects:
 15270 ;;		On entry : 0/0
 15271 ;;		On exit  : 3F/3B
 15272 ;;		Unchanged: 0/0
 15273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15278 ;;Total ram usage:        0 bytes
 15279 ;; Hardware stack levels used:    1
 15280 ;; Hardware stack levels required when called:   24
 15281 ;; This function calls:
 15282 ;;		_printf
 15283 ;;		_ringBufS_flush
 15284 ;;		_start_lcd
 15285 ;;		_wait_lcd_set
 15286 ;; This function is called by:
 15287 ;;		_send_lcd_cmd_dma
 15288 ;;		_eaDogM_WriteStringAtPos
 15289 ;; This function uses a reentrant model
 15290 ;;
 15291                           
 15292                           	psect	text59
 15293  01CDB2                     __ptext59:
 15294                           	opt callstack 0
 15295  01CDB2                     _send_lcd_data_dma:
 15296                           	opt callstack 4
 15297                           
 15298                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 15299                           
 15300                           ; BSR set to: 0
 15301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15302                           ;incstack = 0
 15303  01CDB2  ECE7  F0ED         	call	_wait_lcd_set	;wreg free
 15304                           
 15305                           ; BSR set to: 1
 15306                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 15307  01CDB6  0E00               	movlw	0
 15308  01CDB8  6EE6               	movwf	postinc1,c
 15309  01CDBA  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 15310  01CDC0  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 15311  01CDC6  EC73  F0E0         	call	_ringBufS_flush	;wreg free
 15312  01CDCA  94BC               	bcf	188,2,c	;volatile
 15313                           
 15314                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 15315  01CDCC  013B               	movlb	59	; () banked
 15316  01CDCE  9FFC               	bcf	252,7,b	;volatile
 15317                           
 15318                           ; BSR set to: 59
 15319                           ;eadog.c: 189:  DMA1SSZ = 1;
 15320  01CDD0  0E00               	movlw	0
 15321  01CDD2  6FF8               	movwf	248,b	;volatile
 15322  01CDD4  0E01               	movlw	1
 15323  01CDD6  6FF7               	movwf	247,b	;volatile
 15324                           
 15325                           ; BSR set to: 59
 15326                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 15327  01CDD8  8FFC               	bsf	252,7,b	;volatile
 15328                           
 15329                           ; BSR set to: 59
 15330                           ;eadog.c: 191:  printf("%c", strPtr);
 15331                           ;stkvar	_strPtr @ sp[(0)+-1]
 15332  01CDDA  0EFF               	movlw	-1
 15333  01CDDC  50E3               	movf	plusw1,w,c
 15334  01CDDE  6EE6               	movwf	postinc1,c
 15335  01CDE0  0E00               	movlw	0
 15336  01CDE2  6EE6               	movwf	postinc1,c
 15337  01CDE4  0EF9               	movlw	low STR_73
 15338  01CDE6  6EE6               	movwf	postinc1,c
 15339  01CDE8  0EFF               	movlw	high STR_73
 15340  01CDEA  6EE6               	movwf	postinc1,c
 15341  01CDEC  0E04               	movlw	4
 15342  01CDEE  6EE6               	movwf	postinc1,c
 15343  01CDF0  ECF9  F0E4         	call	_printf	;wreg free
 15344                           
 15345                           ; BSR set to: 0
 15346                           ;eadog.c: 192:  start_lcd();
 15347  01CDF4  ECEA  F0ED         	call	_start_lcd	;wreg free
 15348                           
 15349                           ; BSR set to: 59
 15350                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 15351  01CDF8  52E5               	movf	postdec1,f,c
 15352  01CDFA  0012               	return		;funcret
 15353  01CDFC                     __end_of_send_lcd_data_dma:
 15354                           	opt callstack 0
 15355                           
 15356 ;; *************** function _eaDogM_WriteString *****************
 15357 ;; Defined at:
 15358 ;;		line 151 in file "eadog.c"
 15359 ;; Parameters:    Size  Location     Type
 15360 ;;  strPtr          2  [STACK] PTR unsigned char 
 15361 ;;		 -> D.lcd(480), D(482), V(192), 
 15362 ;; Auto vars:     Size  Location     Type
 15363 ;;		None
 15364 ;; Return value:  Size  Location     Type
 15365 ;;                  1  [STACK] void 
 15366 ;; Registers used:
 15367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15368 ;; Tracked objects:
 15369 ;;		On entry : 3F/0
 15370 ;;		On exit  : 3F/3B
 15371 ;;		Unchanged: 0/0
 15372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15377 ;;Total ram usage:        0 bytes
 15378 ;; Hardware stack levels used:    1
 15379 ;; Hardware stack levels required when called:   24
 15380 ;; This function calls:
 15381 ;;		_printf
 15382 ;;		_ringBufS_flush
 15383 ;;		_start_lcd
 15384 ;;		_strlen
 15385 ;;		_wait_lcd_set
 15386 ;; This function is called by:
 15387 ;;		_eaDogM_WriteStringAtPos
 15388 ;; This function uses a reentrant model
 15389 ;;
 15390                           
 15391                           	psect	text60
 15392  01BF06                     __ptext60:
 15393                           	opt callstack 0
 15394  01BF06                     _eaDogM_WriteString:
 15395                           	opt callstack 4
 15396                           
 15397                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 15398                           
 15399                           ; BSR set to: 59
 15400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15401                           ;incstack = 0
 15402  01BF06  ECE7  F0ED         	call	_wait_lcd_set	;wreg free
 15403                           
 15404                           ; BSR set to: 1
 15405                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 15406  01BF0A  0E00               	movlw	0
 15407  01BF0C  6EE6               	movwf	postinc1,c
 15408  01BF0E  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 15409  01BF14  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 15410  01BF1A  EC73  F0E0         	call	_ringBufS_flush	;wreg free
 15411  01BF1E  94BC               	bcf	188,2,c	;volatile
 15412                           
 15413                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 15414                           ;stkvar	_strPtr @ sp[(0)+-2]
 15415  01BF20  0EFE               	movlw	-2
 15416  01BF22  006F FF8F FFE6     	movff	plusw1,postinc1
 15417  01BF28  006F FF8F FFE6     	movff	plusw1,postinc1
 15418  01BF2E  ECD6  F0DF         	call	_strlen	;wreg free
 15419  01BF32  5002               	movf	(btemp+1)^0,w,c
 15420  01BF34  E104               	bnz	u13440
 15421  01BF36  0E41               	movlw	65
 15422  01BF38  5C01               	subwf	btemp^0,w,c
 15423  01BF3A  A0D8               	btfss	status,0,c
 15424  01BF3C  D010               	goto	l14122
 15425  01BF3E                     u13440:
 15426                           
 15427                           ;stkvar	_strPtr @ sp[(0)+-2]
 15428  01BF3E  0EFE               	movlw	-2
 15429  01BF40  006F FF8C  F00B    	movff	plusw1,btemp+10
 15430  01BF46  0EFF               	movlw	-1
 15431  01BF48  006F FF8C  F00C    	movff	plusw1,btemp+11
 15432  01BF4E  0E40               	movlw	64
 15433  01BF50  240B               	addwf	(btemp+10)^0,w,c
 15434  01BF52  6ED9               	movwf	fsr2l,c
 15435  01BF54  0E00               	movlw	0
 15436  01BF56  200C               	addwfc	(btemp+11)^0,w,c
 15437  01BF58  6EDA               	movwf	fsr2h,c
 15438  01BF5A  0E00               	movlw	0
 15439  01BF5C  6EDF               	movwf	indf2,c
 15440  01BF5E                     l14122:
 15441                           
 15442                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 15443  01BF5E  013B               	movlb	59	; () banked
 15444  01BF60  9FFC               	bcf	252,7,b	;volatile
 15445                           
 15446                           ; BSR set to: 59
 15447                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 15448                           ;stkvar	_strPtr @ sp[(0)+-2]
 15449  01BF62  0EFE               	movlw	-2
 15450  01BF64  006F FF8F FFE6     	movff	plusw1,postinc1
 15451  01BF6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15452  01BF70  ECD6  F0DF         	call	_strlen	;wreg free
 15453  01BF74  0060  F007  FBF7   	movff	btemp,15351	;volatile
 15454  01BF7A  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 15455                           
 15456                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 15457  01BF80  013B               	movlb	59	; () banked
 15458  01BF82  8FFC               	bsf	252,7,b	;volatile
 15459                           
 15460                           ; BSR set to: 59
 15461                           ;eadog.c: 161:  printf("%s", strPtr);
 15462                           ;stkvar	_strPtr @ sp[(0)+-2]
 15463  01BF84  0EFE               	movlw	-2
 15464  01BF86  006F FF8F FFE6     	movff	plusw1,postinc1
 15465  01BF8C  006F FF8F FFE6     	movff	plusw1,postinc1
 15466  01BF92  0EFC               	movlw	low STR_72
 15467  01BF94  6EE6               	movwf	postinc1,c
 15468  01BF96  0EFF               	movlw	high STR_72
 15469  01BF98  6EE6               	movwf	postinc1,c
 15470  01BF9A  0E04               	movlw	4
 15471  01BF9C  6EE6               	movwf	postinc1,c
 15472  01BF9E  ECF9  F0E4         	call	_printf	;wreg free
 15473                           
 15474                           ; BSR set to: 0
 15475                           ;eadog.c: 162:  start_lcd();
 15476  01BFA2  ECEA  F0ED         	call	_start_lcd	;wreg free
 15477                           
 15478                           ; BSR set to: 59
 15479                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 15480  01BFA6  52E5               	movf	postdec1,f,c
 15481  01BFA8  52E5               	movf	postdec1,f,c
 15482  01BFAA  0012               	return		;funcret
 15483  01BFAC                     __end_of_eaDogM_WriteString:
 15484                           	opt callstack 0
 15485                           
 15486 ;; *************** function _wait_lcd_set *****************
 15487 ;; Defined at:
 15488 ;;		line 434 in file "eadog.c"
 15489 ;; Parameters:    Size  Location     Type
 15490 ;;		None
 15491 ;; Auto vars:     Size  Location     Type
 15492 ;;		None
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  1  [STACK] void 
 15495 ;; Registers used:
 15496 ;;		None
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 3F/1
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15506 ;;Total ram usage:        0 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:   15
 15509 ;; This function calls:
 15510 ;;		Nothing
 15511 ;; This function is called by:
 15512 ;;		_eaDogM_WriteString
 15513 ;;		_send_lcd_data_dma
 15514 ;; This function uses a reentrant model
 15515 ;;
 15516                           
 15517                           	psect	text61
 15518  01DBCE                     __ptext61:
 15519                           	opt callstack 0
 15520  01DBCE                     _wait_lcd_set:
 15521                           	opt callstack 12
 15522                           
 15523                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 15524                           
 15525                           ; BSR set to: 59
 15526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15527                           ;incstack = 0
 15528  01DBCE  0101               	movlb	1	; () banked
 15529  01DBD0  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 15530                           
 15531                           ; BSR set to: 1
 15532                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 15533  01DBD2  0012               	return		;funcret
 15534  01DBD4                     __end_of_wait_lcd_set:
 15535                           	opt callstack 0
 15536                           
 15537 ;; *************** function _start_lcd *****************
 15538 ;; Defined at:
 15539 ;;		line 429 in file "eadog.c"
 15540 ;; Parameters:    Size  Location     Type
 15541 ;;		None
 15542 ;; Auto vars:     Size  Location     Type
 15543 ;;		None
 15544 ;; Return value:  Size  Location     Type
 15545 ;;                  1  [STACK] void 
 15546 ;; Registers used:
 15547 ;;		None
 15548 ;; Tracked objects:
 15549 ;;		On entry : 3F/0
 15550 ;;		On exit  : 3F/3B
 15551 ;;		Unchanged: 0/0
 15552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15557 ;;Total ram usage:        0 bytes
 15558 ;; Hardware stack levels used:    1
 15559 ;; Hardware stack levels required when called:   15
 15560 ;; This function calls:
 15561 ;;		Nothing
 15562 ;; This function is called by:
 15563 ;;		_eaDogM_WriteString
 15564 ;;		_send_lcd_data_dma
 15565 ;; This function uses a reentrant model
 15566 ;;
 15567                           
 15568                           	psect	text62
 15569  01DBD4                     __ptext62:
 15570                           	opt callstack 0
 15571  01DBD4                     _start_lcd:
 15572                           	opt callstack 12
 15573                           
 15574                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 15575                           
 15576                           ; BSR set to: 1
 15577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15578                           ;incstack = 0
 15579  01DBD4  013B               	movlb	59	; () banked
 15580  01DBD6  8DFC               	bsf	252,6,b	;volatile
 15581                           
 15582                           ; BSR set to: 59
 15583                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 15584  01DBD8  0012               	return		;funcret
 15585  01DBDA                     __end_of_start_lcd:
 15586                           	opt callstack 0
 15587                           
 15588 ;; *************** function _ringBufS_flush *****************
 15589 ;; Defined at:
 15590 ;;		line 76 in file "ringbufs.c"
 15591 ;; Parameters:    Size  Location     Type
 15592 ;;  _this           2  [STACK] PTR struct ringBufS_t
 15593 ;;		 -> ring_buf1(67), 
 15594 ;;  clearBuffer     1  [STACK] const char 
 15595 ;; Auto vars:     Size  Location     Type
 15596 ;;		None
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  1  [STACK] void 
 15599 ;; Registers used:
 15600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15601 ;; Tracked objects:
 15602 ;;		On entry : 3F/1
 15603 ;;		On exit  : 0/0
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15610 ;;Total ram usage:        0 bytes
 15611 ;; Hardware stack levels used:    1
 15612 ;; Hardware stack levels required when called:   16
 15613 ;; This function calls:
 15614 ;;		_memset
 15615 ;; This function is called by:
 15616 ;;		_eaDogM_WriteString
 15617 ;;		_send_lcd_data_dma
 15618 ;; This function uses a reentrant model
 15619 ;;
 15620                           
 15621                           	psect	text63
 15622  01C0E6                     __ptext63:
 15623                           	opt callstack 0
 15624  01C0E6                     _ringBufS_flush:
 15625                           	opt callstack 11
 15626                           
 15627                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 15628                           ;stkvar	__this @ sp[(0)+-2]
 15629                           
 15630                           ; BSR set to: 59
 15631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15632                           ;incstack = 0
 15633  01C0E6  0EFE               	movlw	-2
 15634  01C0E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15635  01C0EE  0EFF               	movlw	-1
 15636  01C0F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15637  01C0F6  0E42               	movlw	66
 15638  01C0F8  240B               	addwf	(btemp+10)^0,w,c
 15639  01C0FA  6ED9               	movwf	fsr2l,c
 15640  01C0FC  0E00               	movlw	0
 15641  01C0FE  200C               	addwfc	(btemp+11)^0,w,c
 15642  01C100  6EDA               	movwf	fsr2h,c
 15643  01C102  0E00               	movlw	0
 15644  01C104  6EDF               	movwf	indf2,c
 15645                           
 15646                           ;ringbufs.c: 79:  _this->head = 0;
 15647                           ;stkvar	__this @ sp[(0)+-2]
 15648  01C106  0EFE               	movlw	-2
 15649  01C108  006F FF8C  F00B    	movff	plusw1,btemp+10
 15650  01C10E  0EFF               	movlw	-1
 15651  01C110  006F FF8C  F00C    	movff	plusw1,btemp+11
 15652  01C116  0E40               	movlw	64
 15653  01C118  240B               	addwf	(btemp+10)^0,w,c
 15654  01C11A  6ED9               	movwf	fsr2l,c
 15655  01C11C  0E00               	movlw	0
 15656  01C11E  200C               	addwfc	(btemp+11)^0,w,c
 15657  01C120  6EDA               	movwf	fsr2h,c
 15658  01C122  0E00               	movlw	0
 15659  01C124  6EDF               	movwf	indf2,c
 15660                           
 15661                           ;ringbufs.c: 80:  _this->tail = 0;
 15662                           ;stkvar	__this @ sp[(0)+-2]
 15663  01C126  0EFE               	movlw	-2
 15664  01C128  006F FF8C  F00B    	movff	plusw1,btemp+10
 15665  01C12E  0EFF               	movlw	-1
 15666  01C130  006F FF8C  F00C    	movff	plusw1,btemp+11
 15667  01C136  0E41               	movlw	65
 15668  01C138  240B               	addwf	(btemp+10)^0,w,c
 15669  01C13A  6ED9               	movwf	fsr2l,c
 15670  01C13C  0E00               	movlw	0
 15671  01C13E  200C               	addwfc	(btemp+11)^0,w,c
 15672  01C140  6EDA               	movwf	fsr2h,c
 15673  01C142  0E00               	movlw	0
 15674  01C144  6EDF               	movwf	indf2,c
 15675                           
 15676                           ;ringbufs.c: 81:  if (clearBuffer) {
 15677                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 15678  01C146  0EFD               	movlw	-3
 15679  01C148  50E3               	movf	plusw1,w,c
 15680  01C14A  B4D8               	btfsc	status,2,c
 15681  01C14C  D011               	goto	l1728
 15682                           
 15683                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 15684  01C14E  0E40               	movlw	64
 15685  01C150  6EE6               	movwf	postinc1,c
 15686  01C152  0E00               	movlw	0
 15687  01C154  6EE6               	movwf	postinc1,c
 15688  01C156  0E00               	movlw	0
 15689  01C158  6EE6               	movwf	postinc1,c
 15690  01C15A  0E00               	movlw	0
 15691  01C15C  6EE6               	movwf	postinc1,c
 15692                           
 15693                           ;stkvar	__this @ sp[(-4)+-2]
 15694  01C15E  0EFA               	movlw	-6
 15695  01C160  006F FF8F FFE6     	movff	plusw1,postinc1
 15696  01C166  006F FF8F FFE6     	movff	plusw1,postinc1
 15697  01C16C  EC85  F0BD         	call	_memset	;wreg free
 15698  01C170                     l1728:
 15699                           
 15700                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 15701  01C170  52E5               	movf	postdec1,f,c
 15702  01C172  52E5               	movf	postdec1,f,c
 15703  01C174  52E5               	movf	postdec1,f,c
 15704  01C176  0012               	return		;funcret
 15705  01C178                     __end_of_ringBufS_flush:
 15706                           	opt callstack 0
 15707                           
 15708 ;; *************** function _memset *****************
 15709 ;; Defined at:
 15710 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;  dest            2  [STACK] PTR void 
 15713 ;;		 -> ring_buf2(67), ring_buf1(67), 
 15714 ;;  c               2  [STACK] int 
 15715 ;;  n               2  [STACK] unsigned int 
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;  s               2  [STACK] PTR unsigned char 
 15718 ;;		 -> ring_buf2(67), ring_buf1(67), 
 15719 ;;  k               2  [STACK] unsigned int 
 15720 ;; Return value:  Size  Location     Type
 15721 ;;                  2  [STACK] PTR void 
 15722 ;; Registers used:
 15723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15724 ;; Tracked objects:
 15725 ;;		On entry : 0/1
 15726 ;;		On exit  : 0/0
 15727 ;;		Unchanged: 0/0
 15728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15733 ;;Total ram usage:        0 bytes
 15734 ;; Hardware stack levels used:    1
 15735 ;; Hardware stack levels required when called:   15
 15736 ;; This function calls:
 15737 ;;		Nothing
 15738 ;; This function is called by:
 15739 ;;		_ringBufS_init
 15740 ;;		_ringBufS_flush
 15741 ;; This function uses a reentrant model
 15742 ;;
 15743                           
 15744                           	psect	text64
 15745  017B0A                     __ptext64:
 15746                           	opt callstack 0
 15747  017B0A                     _memset:
 15748                           	opt callstack 0
 15749                           
 15750                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15751  017B0A  52E6               	movf	postinc1,f,c
 15752  017B0C  52E6               	movf	postinc1,f,c
 15753  017B0E  52E6               	movf	postinc1,f,c
 15754  017B10  52E6               	movf	postinc1,f,c
 15755                           
 15756                           ;stkvar	_dest @ sp[(-4)+-2]
 15757                           
 15758                           ;incstack = 0
 15759  017B12  0EFA               	movlw	-6
 15760  017B14  006F FF8C  F00B    	movff	plusw1,btemp+10
 15761  017B1A  0EFB               	movlw	-5
 15762  017B1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15763                           
 15764                           ;stkvar	_s @ sp[(-4)+0]
 15765  017B22  0EFD               	movlw	-3
 15766  017B24  0060  F033  FFE3   	movff	btemp+11,plusw1
 15767  017B2A  0EFC               	movlw	-4
 15768  017B2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15769                           
 15770                           ;stkvar	_n @ sp[(-4)+-6]
 15771  017B32  0EF6               	movlw	-10
 15772  017B34  006F FF8C  F001    	movff	plusw1,btemp
 15773  017B3A  0EF7               	movlw	-9
 15774  017B3C  50E3               	movf	plusw1,w,c
 15775  017B3E  1001               	iorwf	btemp^0,w,c
 15776  017B40  B4D8               	btfsc	status,2,c
 15777  017B42  D154               	goto	u11990
 15778                           
 15779                           ;stkvar	_c @ sp[(-4)+-4]
 15780                           ;stkvar	_s @ sp[(-4)+0]
 15781  017B44  0EFC               	movlw	-4
 15782  017B46  006F FF8F FFD9     	movff	plusw1,fsr2l
 15783  017B4C  0EFD               	movlw	-3
 15784  017B4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15785  017B54  0EF8               	movlw	-8
 15786  017B56  006F FF8F FFDF     	movff	plusw1,indf2
 15787                           
 15788                           ;stkvar	_c @ sp[(-4)+-4]
 15789                           ;stkvar	_n @ sp[(-4)+-6]
 15790                           ;stkvar	_s @ sp[(-4)+0]
 15791  017B5C  0EFC               	movlw	-4
 15792  017B5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15793  017B64  0EFD               	movlw	-3
 15794  017B66  006F FF8C  F00C    	movff	plusw1,btemp+11
 15795  017B6C  0EF6               	movlw	-10
 15796  017B6E  50E3               	movf	plusw1,w,c
 15797  017B70  260B               	addwf	(btemp+10)^0,f,c
 15798  017B72  0EF7               	movlw	-9
 15799  017B74  50E3               	movf	plusw1,w,c
 15800  017B76  220C               	addwfc	(btemp+11)^0,f,c
 15801  017B78  0EFF               	movlw	255
 15802  017B7A  240B               	addwf	(btemp+10)^0,w,c
 15803  017B7C  6ED9               	movwf	fsr2l,c
 15804  017B7E  0EFF               	movlw	255
 15805  017B80  200C               	addwfc	(btemp+11)^0,w,c
 15806  017B82  6EDA               	movwf	fsr2h,c
 15807  017B84  0EF8               	movlw	-8
 15808  017B86  006F FF8F FFDF     	movff	plusw1,indf2
 15809                           
 15810                           ;stkvar	_n @ sp[(-4)+-6]
 15811  017B8C  0EF7               	movlw	-9
 15812  017B8E  50E3               	movf	plusw1,w,c
 15813  017B90  E108               	bnz	l13274
 15814  017B92  0EF6               	movlw	-10
 15815  017B94  006F FF8C  F001    	movff	plusw1,btemp
 15816  017B9A  0E03               	movlw	3
 15817  017B9C  5E01               	subwf	btemp^0,f,c
 15818  017B9E  A0D8               	btfss	status,0,c
 15819  017BA0  D125               	goto	u11990
 15820  017BA2                     l13274:
 15821                           
 15822                           ;stkvar	_c @ sp[(-4)+-4]
 15823                           ;stkvar	_s @ sp[(-4)+0]
 15824  017BA2  0EFC               	movlw	-4
 15825  017BA4  006F FF8C  F00B    	movff	plusw1,btemp+10
 15826  017BAA  0EFD               	movlw	-3
 15827  017BAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 15828  017BB2  0E01               	movlw	1
 15829  017BB4  240B               	addwf	(btemp+10)^0,w,c
 15830  017BB6  6ED9               	movwf	fsr2l,c
 15831  017BB8  0E00               	movlw	0
 15832  017BBA  200C               	addwfc	(btemp+11)^0,w,c
 15833  017BBC  6EDA               	movwf	fsr2h,c
 15834  017BBE  0EF8               	movlw	-8
 15835  017BC0  006F FF8F FFDF     	movff	plusw1,indf2
 15836                           
 15837                           ;stkvar	_c @ sp[(-4)+-4]
 15838                           ;stkvar	_s @ sp[(-4)+0]
 15839  017BC6  0EFC               	movlw	-4
 15840  017BC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15841  017BCE  0EFD               	movlw	-3
 15842  017BD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15843  017BD6  0E02               	movlw	2
 15844  017BD8  240B               	addwf	(btemp+10)^0,w,c
 15845  017BDA  6ED9               	movwf	fsr2l,c
 15846  017BDC  0E00               	movlw	0
 15847  017BDE  200C               	addwfc	(btemp+11)^0,w,c
 15848  017BE0  6EDA               	movwf	fsr2h,c
 15849  017BE2  0EF8               	movlw	-8
 15850  017BE4  006F FF8F FFDF     	movff	plusw1,indf2
 15851                           
 15852                           ;stkvar	_c @ sp[(-4)+-4]
 15853                           ;stkvar	_n @ sp[(-4)+-6]
 15854                           ;stkvar	_s @ sp[(-4)+0]
 15855  017BEA  0EFC               	movlw	-4
 15856  017BEC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15857  017BF2  0EFD               	movlw	-3
 15858  017BF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15859  017BFA  0EF6               	movlw	-10
 15860  017BFC  50E3               	movf	plusw1,w,c
 15861  017BFE  260B               	addwf	(btemp+10)^0,f,c
 15862  017C00  0EF7               	movlw	-9
 15863  017C02  50E3               	movf	plusw1,w,c
 15864  017C04  220C               	addwfc	(btemp+11)^0,f,c
 15865  017C06  0EFE               	movlw	254
 15866  017C08  240B               	addwf	(btemp+10)^0,w,c
 15867  017C0A  6ED9               	movwf	fsr2l,c
 15868  017C0C  0EFF               	movlw	255
 15869  017C0E  200C               	addwfc	(btemp+11)^0,w,c
 15870  017C10  6EDA               	movwf	fsr2h,c
 15871  017C12  0EF8               	movlw	-8
 15872  017C14  006F FF8F FFDF     	movff	plusw1,indf2
 15873                           
 15874                           ;stkvar	_c @ sp[(-4)+-4]
 15875                           ;stkvar	_n @ sp[(-4)+-6]
 15876                           ;stkvar	_s @ sp[(-4)+0]
 15877  017C1A  0EFC               	movlw	-4
 15878  017C1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15879  017C22  0EFD               	movlw	-3
 15880  017C24  006F FF8C  F00C    	movff	plusw1,btemp+11
 15881  017C2A  0EF6               	movlw	-10
 15882  017C2C  50E3               	movf	plusw1,w,c
 15883  017C2E  260B               	addwf	(btemp+10)^0,f,c
 15884  017C30  0EF7               	movlw	-9
 15885  017C32  50E3               	movf	plusw1,w,c
 15886  017C34  220C               	addwfc	(btemp+11)^0,f,c
 15887  017C36  0EFD               	movlw	253
 15888  017C38  240B               	addwf	(btemp+10)^0,w,c
 15889  017C3A  6ED9               	movwf	fsr2l,c
 15890  017C3C  0EFF               	movlw	255
 15891  017C3E  200C               	addwfc	(btemp+11)^0,w,c
 15892  017C40  6EDA               	movwf	fsr2h,c
 15893  017C42  0EF8               	movlw	-8
 15894  017C44  006F FF8F FFDF     	movff	plusw1,indf2
 15895                           
 15896                           ;stkvar	_n @ sp[(-4)+-6]
 15897  017C4A  0EF7               	movlw	-9
 15898  017C4C  50E3               	movf	plusw1,w,c
 15899  017C4E  E108               	bnz	l13280
 15900  017C50  0EF6               	movlw	-10
 15901  017C52  006F FF8C  F001    	movff	plusw1,btemp
 15902  017C58  0E07               	movlw	7
 15903  017C5A  5E01               	subwf	btemp^0,f,c
 15904  017C5C  A0D8               	btfss	status,0,c
 15905  017C5E  D0C6               	goto	u11990
 15906  017C60                     l13280:
 15907                           
 15908                           ;stkvar	_c @ sp[(-4)+-4]
 15909                           ;stkvar	_s @ sp[(-4)+0]
 15910  017C60  0EFC               	movlw	-4
 15911  017C62  006F FF8C  F00B    	movff	plusw1,btemp+10
 15912  017C68  0EFD               	movlw	-3
 15913  017C6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15914  017C70  0E03               	movlw	3
 15915  017C72  240B               	addwf	(btemp+10)^0,w,c
 15916  017C74  6ED9               	movwf	fsr2l,c
 15917  017C76  0E00               	movlw	0
 15918  017C78  200C               	addwfc	(btemp+11)^0,w,c
 15919  017C7A  6EDA               	movwf	fsr2h,c
 15920  017C7C  0EF8               	movlw	-8
 15921  017C7E  006F FF8F FFDF     	movff	plusw1,indf2
 15922                           
 15923                           ;stkvar	_c @ sp[(-4)+-4]
 15924                           ;stkvar	_n @ sp[(-4)+-6]
 15925                           ;stkvar	_s @ sp[(-4)+0]
 15926  017C84  0EFC               	movlw	-4
 15927  017C86  006F FF8C  F00B    	movff	plusw1,btemp+10
 15928  017C8C  0EFD               	movlw	-3
 15929  017C8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15930  017C94  0EF6               	movlw	-10
 15931  017C96  50E3               	movf	plusw1,w,c
 15932  017C98  260B               	addwf	(btemp+10)^0,f,c
 15933  017C9A  0EF7               	movlw	-9
 15934  017C9C  50E3               	movf	plusw1,w,c
 15935  017C9E  220C               	addwfc	(btemp+11)^0,f,c
 15936  017CA0  0EFC               	movlw	252
 15937  017CA2  240B               	addwf	(btemp+10)^0,w,c
 15938  017CA4  6ED9               	movwf	fsr2l,c
 15939  017CA6  0EFF               	movlw	255
 15940  017CA8  200C               	addwfc	(btemp+11)^0,w,c
 15941  017CAA  6EDA               	movwf	fsr2h,c
 15942  017CAC  0EF8               	movlw	-8
 15943  017CAE  006F FF8F FFDF     	movff	plusw1,indf2
 15944                           
 15945                           ;stkvar	_n @ sp[(-4)+-6]
 15946  017CB4  0EF7               	movlw	-9
 15947  017CB6  50E3               	movf	plusw1,w,c
 15948  017CB8  E108               	bnz	l13286
 15949  017CBA  0EF6               	movlw	-10
 15950  017CBC  006F FF8C  F001    	movff	plusw1,btemp
 15951  017CC2  0E09               	movlw	9
 15952  017CC4  5E01               	subwf	btemp^0,f,c
 15953  017CC6  A0D8               	btfss	status,0,c
 15954  017CC8  D091               	goto	u11990
 15955  017CCA                     l13286:
 15956                           
 15957                           ;stkvar	_s @ sp[(-4)+0]
 15958  017CCA  0EFC               	movlw	-4
 15959  017CCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15960  017CD2  1E0B               	comf	(btemp+10)^0,f,c
 15961  017CD4  0EFD               	movlw	-3
 15962  017CD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15963  017CDC  1E0C               	comf	(btemp+11)^0,f,c
 15964  017CDE  2A0B               	incf	(btemp+10)^0,f,c
 15965  017CE0  B4D8               	btfsc	status,2,c
 15966  017CE2  2A0C               	incf	(btemp+11)^0,f,c
 15967  017CE4  0E03               	movlw	3
 15968  017CE6  160B               	andwf	(btemp+10)^0,f,c
 15969  017CE8  0E00               	movlw	0
 15970  017CEA  160C               	andwf	(btemp+11)^0,f,c
 15971                           
 15972                           ;stkvar	_k @ sp[(-4)+2]
 15973  017CEC  0EFE               	movlw	-2
 15974  017CEE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15975  017CF4  0EFF               	movlw	-1
 15976  017CF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15977                           
 15978                           ;stkvar	_k @ sp[(-4)+2]
 15979                           ;stkvar	_s @ sp[(-4)+0]
 15980  017CFC  0EFC               	movlw	-4
 15981  017CFE  50E3               	movf	plusw1,w,c
 15982  017D00  6E01               	movwf	btemp^0,c
 15983  017D02  0EFE               	movlw	-2
 15984  017D04  50E3               	movf	plusw1,w,c
 15985  017D06  2601               	addwf	btemp^0,f,c
 15986  017D08  0EFC               	movlw	-4
 15987  017D0A  0060  F007  FFE3   	movff	btemp,plusw1
 15988  017D10  0EFD               	movlw	-3
 15989  017D12  50E3               	movf	plusw1,w,c
 15990  017D14  6E01               	movwf	btemp^0,c
 15991  017D16  0EFF               	movlw	-1
 15992  017D18  50E3               	movf	plusw1,w,c
 15993  017D1A  2201               	addwfc	btemp^0,f,c
 15994  017D1C  0EFD               	movlw	-3
 15995  017D1E  0060  F007  FFE3   	movff	btemp,plusw1
 15996                           
 15997                           ;stkvar	_k @ sp[(-4)+2]
 15998                           ;stkvar	_n @ sp[(-4)+-6]
 15999  017D24  0EF6               	movlw	-10
 16000  017D26  50E3               	movf	plusw1,w,c
 16001  017D28  6E01               	movwf	btemp^0,c
 16002  017D2A  0EFE               	movlw	-2
 16003  017D2C  50E3               	movf	plusw1,w,c
 16004  017D2E  5E01               	subwf	btemp^0,f,c
 16005  017D30  0EF6               	movlw	-10
 16006  017D32  0060  F007  FFE3   	movff	btemp,plusw1
 16007  017D38  0EF7               	movlw	-9
 16008  017D3A  50E3               	movf	plusw1,w,c
 16009  017D3C  6E01               	movwf	btemp^0,c
 16010  017D3E  0EFF               	movlw	-1
 16011  017D40  50E3               	movf	plusw1,w,c
 16012  017D42  5A01               	subwfb	btemp^0,f,c
 16013  017D44  0EF7               	movlw	-9
 16014  017D46  0060  F007  FFE3   	movff	btemp,plusw1
 16015  017D4C  0EFC               	movlw	252
 16016  017D4E  6E0B               	movwf	(btemp+10)^0,c
 16017  017D50  0EFF               	movlw	255
 16018  017D52  6E0C               	movwf	(btemp+11)^0,c
 16019                           
 16020                           ;stkvar	_n @ sp[(-4)+-6]
 16021  017D54  0EF6               	movlw	-10
 16022  017D56  006F FF8C  F001    	movff	plusw1,btemp
 16023  017D5C  500B               	movf	(btemp+10)^0,w,c
 16024  017D5E  1601               	andwf	btemp^0,f,c
 16025  017D60  0EF6               	movlw	-10
 16026  017D62  0060  F007  FFE3   	movff	btemp,plusw1
 16027  017D68  0EF7               	movlw	-9
 16028  017D6A  006F FF8C  F001    	movff	plusw1,btemp
 16029  017D70  500C               	movf	(btemp+11)^0,w,c
 16030  017D72  1601               	andwf	btemp^0,f,c
 16031  017D74  0EF7               	movlw	-9
 16032  017D76  D02E               	goto	L15
 16033  017D78                     l13294:
 16034                           
 16035                           ;stkvar	_c @ sp[(-4)+-4]
 16036                           ;stkvar	_s @ sp[(-4)+0]
 16037  017D78  0EFC               	movlw	-4
 16038  017D7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16039  017D80  0EFD               	movlw	-3
 16040  017D82  006F FF8F FFDA     	movff	plusw1,fsr2h
 16041  017D88  0EF8               	movlw	-8
 16042  017D8A  006F FF8F FFDF     	movff	plusw1,indf2
 16043                           
 16044                           ;stkvar	_n @ sp[(-4)+-6]
 16045  017D90  0EF6               	movlw	-10
 16046  017D92  006F FF8C  F001    	movff	plusw1,btemp
 16047  017D98  0E01               	movlw	1
 16048  017D9A  5E01               	subwf	btemp^0,f,c
 16049  017D9C  0EF6               	movlw	-10
 16050  017D9E  0060  F007  FFE3   	movff	btemp,plusw1
 16051  017DA4  0EF7               	movlw	-9
 16052  017DA6  006F FF8C  F001    	movff	plusw1,btemp
 16053  017DAC  0E00               	movlw	0
 16054  017DAE  5A01               	subwfb	btemp^0,f,c
 16055  017DB0  0EF7               	movlw	-9
 16056  017DB2  0060  F007  FFE3   	movff	btemp,plusw1
 16057                           
 16058                           ;stkvar	_s @ sp[(-4)+0]
 16059  017DB8  0EFC               	movlw	-4
 16060  017DBA  50E3               	movf	plusw1,w,c
 16061  017DBC  0F01               	addlw	1
 16062  017DBE  6E01               	movwf	btemp^0,c
 16063  017DC0  0EFC               	movlw	-4
 16064  017DC2  0060  F007  FFE3   	movff	btemp,plusw1
 16065  017DC8  6A01               	clrf	btemp^0,c
 16066  017DCA  0EFD               	movlw	-3
 16067  017DCC  50E3               	movf	plusw1,w,c
 16068  017DCE  2001               	addwfc	btemp^0,w,c
 16069  017DD0  6E01               	movwf	btemp^0,c
 16070  017DD2  0EFD               	movlw	-3
 16071  017DD4                     L15:
 16072  017DD4  0060  F007  FFE3   	movff	btemp,plusw1
 16073                           
 16074                           ;stkvar	_n @ sp[(-4)+-6]
 16075  017DDA  0EF6               	movlw	-10
 16076  017DDC  006F FF8C  F001    	movff	plusw1,btemp
 16077  017DE2  0EF7               	movlw	-9
 16078  017DE4  50E3               	movf	plusw1,w,c
 16079  017DE6  1001               	iorwf	btemp^0,w,c
 16080  017DE8  A4D8               	btfss	status,2,c
 16081  017DEA  D7C6               	goto	l13294
 16082  017DEC                     u11990:
 16083                           
 16084                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 16085  017DEC  0EF6               	movlw	246
 16086  017DEE  26E1               	addwf	fsr1l,f,c
 16087  017DF0  0EFF               	movlw	255
 16088  017DF2  22E2               	addwfc	fsr1h,f,c
 16089  017DF4  0012               	return		;funcret
 16090  017DF6                     __end_of_memset:
 16091                           	opt callstack 0
 16092                           
 16093 ;; *************** function _printf *****************
 16094 ;; Defined at:
 16095 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 16096 ;; Parameters:    Size  Location     Type
 16097 ;;  fmt             2  [STACK] PTR const unsigned char 
 16098 ;;		 -> STR_73(3), STR_72(3), 
 16099 ;; Auto vars:     Size  Location     Type
 16100 ;;  ap              2  [STACK] PTR void [1]
 16101 ;;		 -> ?_printf(2), ?_sprintf(2), 
 16102 ;;  ret             2    0        int 
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  2  [STACK] int 
 16105 ;; Registers used:
 16106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16107 ;; Tracked objects:
 16108 ;;		On entry : 3F/3B
 16109 ;;		On exit  : 3F/0
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16116 ;;Total ram usage:        0 bytes
 16117 ;; Hardware stack levels used:    1
 16118 ;; Hardware stack levels required when called:   23
 16119 ;; This function calls:
 16120 ;;		_vfprintf
 16121 ;; This function is called by:
 16122 ;;		_eaDogM_WriteString
 16123 ;;		_send_lcd_data_dma
 16124 ;; This function uses a reentrant model
 16125 ;;
 16126                           
 16127                           	psect	text65
 16128  01C9F2                     __ptext65:
 16129                           	opt callstack 0
 16130  01C9F2                     _printf:
 16131                           	opt callstack 0
 16132                           
 16133                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16134  01C9F2  52E6               	movf	postinc1,f,c
 16135  01C9F4  52E6               	movf	postinc1,f,c
 16136                           
 16137                           ;stkvar	?_printf @ sp[(-2)+-3]
 16138                           
 16139                           ;incstack = 0
 16140  01C9F6  0EFB               	movlw	251
 16141  01C9F8  24E1               	addwf	fsr1l,w,c
 16142  01C9FA  6E0B               	movwf	(btemp+10)^0,c
 16143  01C9FC  0EFF               	movlw	255
 16144  01C9FE  20E2               	addwfc	fsr1h,w,c
 16145  01CA00  6E0C               	movwf	(btemp+11)^0,c
 16146                           
 16147                           ;stkvar	_ap @ sp[(-2)+0]
 16148  01CA02  0EFF               	movlw	-1
 16149  01CA04  0060  F033  FFE3   	movff	btemp+11,plusw1
 16150  01CA0A  0EFE               	movlw	-2
 16151  01CA0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16152                           
 16153                           ;stkvar	_ap @ sp[(-2)+0]
 16154  01CA12  0EFE               	movlw	254
 16155  01CA14  24E1               	addwf	fsr1l,w,c
 16156  01CA16  6E01               	movwf	btemp^0,c
 16157  01CA18  0EFF               	movlw	255
 16158  01CA1A  20E2               	addwfc	fsr1h,w,c
 16159  01CA1C  6E02               	movwf	(btemp+1)^0,c
 16160  01CA1E  0060  F007  FFE6   	movff	btemp,postinc1
 16161  01CA24  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16162                           
 16163                           ;stkvar	_fmt @ sp[(-4)+-3]
 16164  01CA2A  0EF9               	movlw	-7
 16165  01CA2C  006F FF8F FFE6     	movff	plusw1,postinc1
 16166  01CA32  006F FF8F FFE6     	movff	plusw1,postinc1
 16167  01CA38  0E00               	movlw	0
 16168  01CA3A  6EE6               	movwf	postinc1,c
 16169  01CA3C  0E00               	movlw	0
 16170  01CA3E  6EE6               	movwf	postinc1,c
 16171  01CA40  EC84  F0DE         	call	_vfprintf	;wreg free
 16172                           
 16173                           ; BSR set to: 0
 16174                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 16175  01CA44  52E5               	movf	postdec1,f,c
 16176  01CA46  52E5               	movf	postdec1,f,c
 16177  01CA48  52E5               	movf	postdec1,f,c
 16178  01CA4A  50E7               	movf	indf1,w,c
 16179  01CA4C  5EE1               	subwf	fsr1l,f,c
 16180  01CA4E  0E00               	movlw	0
 16181  01CA50  5AE2               	subwfb	fsr1h,f,c
 16182  01CA52  0012               	return		;funcret
 16183  01CA54                     __end_of_printf:
 16184                           	opt callstack 0
 16185                           
 16186 ;; *************** function _vfprintf *****************
 16187 ;; Defined at:
 16188 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16189 ;; Parameters:    Size  Location     Type
 16190 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16191 ;;		 -> f(6), NULL(0), 
 16192 ;;  fmt             2  [STACK] PTR const unsigned char 
 16193 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 16194 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 16195 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 16196 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 16197 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 16198 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 16199 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 16200 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 16201 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 16202 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 16203 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 16204 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 16205 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 16206 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 16207 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 16208 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 16209 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 16210 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 16211 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 16212 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 16213 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 16214 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 16215 ;;		 -> STR_1(21), 
 16216 ;;  ap              2  [STACK] PTR PTR void 
 16217 ;;		 -> ap(2), ap(2), 
 16218 ;; Auto vars:     Size  Location     Type
 16219 ;;  cfmt            2  [STACK] PTR unsigned char 
 16220 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 16221 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 16222 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 16223 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 16224 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 16225 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 16226 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 16227 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 16228 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 16229 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 16230 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 16231 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 16232 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 16233 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 16234 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 16235 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 16236 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 16237 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 16238 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 16239 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 16240 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 16241 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 16242 ;;		 -> STR_1(21), 
 16243 ;; Return value:  Size  Location     Type
 16244 ;;                  2  [STACK] int 
 16245 ;; Registers used:
 16246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16247 ;; Tracked objects:
 16248 ;;		On entry : 0/2
 16249 ;;		On exit  : 3F/0
 16250 ;;		Unchanged: 0/0
 16251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16256 ;;Total ram usage:        0 bytes
 16257 ;; Hardware stack levels used:    1
 16258 ;; Hardware stack levels required when called:   22
 16259 ;; This function calls:
 16260 ;;		_vfpfcnvrt
 16261 ;; This function is called by:
 16262 ;;		_sprintf
 16263 ;;		_printf
 16264 ;; This function uses a reentrant model
 16265 ;;
 16266                           
 16267                           	psect	text66
 16268  01BD08                     __ptext66:
 16269                           	opt callstack 0
 16270  01BD08                     _vfprintf:
 16271                           	opt callstack 0
 16272                           
 16273                           ; BSR set to: 0
 16274                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16275  01BD08  52E6               	movf	postinc1,f,c
 16276  01BD0A  52E6               	movf	postinc1,f,c
 16277                           
 16278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 16279                           ;stkvar	_fmt @ sp[(-2)+-4]
 16280                           
 16281                           ;incstack = 0
 16282 ;; hardware stack exceeded
 16283  01BD0C  0EFA               	movlw	-6
 16284  01BD0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16285  01BD14  0EFB               	movlw	-5
 16286  01BD16  006F FF8C  F00C    	movff	plusw1,btemp+11
 16287                           
 16288                           ;stkvar	_cfmt @ sp[(-2)+0]
 16289  01BD1C  0EFF               	movlw	-1
 16290  01BD1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16291  01BD24  0EFE               	movlw	-2
 16292  01BD26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16293                           
 16294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 16295  01BD2C  0100               	movlb	0	; () banked
 16296  01BD2E  6B96               	clrf	_nout& (0+255),b
 16297  01BD30  6B97               	clrf	(_nout+1)& (0+255),b
 16298                           
 16299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 16300  01BD32  D021               	goto	l14144
 16301  01BD34                     l14142:
 16302                           
 16303                           ; BSR set to: 0
 16304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 16305                           ;stkvar	_ap @ sp[(-2)+-6]
 16306  01BD34  0EF8               	movlw	-8
 16307  01BD36  006F FF8F FFE6     	movff	plusw1,postinc1
 16308  01BD3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16309                           
 16310                           ;stkvar	_cfmt @ sp[(-4)+0]
 16311  01BD42  0EFC               	movlw	252
 16312  01BD44  24E1               	addwf	fsr1l,w,c
 16313  01BD46  6E01               	movwf	btemp^0,c
 16314  01BD48  0EFF               	movlw	255
 16315  01BD4A  20E2               	addwfc	fsr1h,w,c
 16316  01BD4C  6E02               	movwf	(btemp+1)^0,c
 16317  01BD4E  0060  F007  FFE6   	movff	btemp,postinc1
 16318  01BD54  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16319                           
 16320                           ;stkvar	_fp @ sp[(-6)+-2]
 16321  01BD5A  0EF8               	movlw	-8
 16322  01BD5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16323  01BD62  006F FF8F FFE6     	movff	plusw1,postinc1
 16324  01BD68  EC61  F092         	call	_vfpfcnvrt	;wreg free
 16325  01BD6C  5001               	movf	btemp^0,w,c
 16326  01BD6E  0100               	movlb	0	; () banked
 16327  01BD70  2796               	addwf	_nout& (0+255),f,b
 16328  01BD72  5002               	movf	(btemp+1)^0,w,c
 16329  01BD74  2397               	addwfc	(_nout+1)& (0+255),f,b
 16330  01BD76                     l14144:
 16331                           
 16332                           ; BSR set to: 0
 16333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 16334                           ;stkvar	_cfmt @ sp[(-2)+0]
 16335  01BD76  50E1               	movf	fsr1l,w,c
 16336  01BD78  0FFE               	addlw	-2
 16337  01BD7A  6ED9               	movwf	fsr2l,c
 16338  01BD7C  50E2               	movf	fsr1h,w,c
 16339  01BD7E  6EDA               	movwf	fsr2h,c
 16340  01BD80  0EFF               	movlw	255
 16341  01BD82  22DA               	addwfc	fsr2h,f,c
 16342  01BD84  006F FF7B FFF6     	movff	postinc2,tblptrl
 16343  01BD8A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16344  01BD90                     	if	0	;tblptru may be non-zero
 16345  01BD90                     	endif
 16346  01BD90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16347  01BD90  0E00               	movlw	low (__mediumconst shr (0+16))
 16348  01BD92  6EF8               	movwf	tblptru,c
 16349  01BD94                     	endif
 16350  01BD94  0008               	tblrd		*
 16351  01BD96  50F5               	movf	tablat,w,c
 16352  01BD98  0900               	iorlw	0
 16353  01BD9A  A4D8               	btfss	status,2,c
 16354  01BD9C  D7CB               	goto	l14142
 16355                           
 16356                           ; BSR set to: 0
 16357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 16358  01BD9E  0060  F258  F001   	movff	_nout,btemp
 16359  01BDA4  0060  F25C  F002   	movff	_nout+1,btemp+1
 16360                           
 16361                           ; BSR set to: 0
 16362                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 16363  01BDAA  0EF8               	movlw	248
 16364  01BDAC  26E1               	addwf	fsr1l,f,c
 16365  01BDAE  0EFF               	movlw	255
 16366  01BDB0  22E2               	addwfc	fsr1h,f,c
 16367  01BDB2  0012               	return		;funcret
 16368  01BDB4                     __end_of_vfprintf:
 16369                           	opt callstack 0
 16370                           
 16371 ;; *************** function _vfpfcnvrt *****************
 16372 ;; Defined at:
 16373 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16374 ;; Parameters:    Size  Location     Type
 16375 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16376 ;;		 -> f(6), NULL(0), 
 16377 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 16378 ;;		 -> cfmt(2), 
 16379 ;;  ap              2  [STACK] PTR PTR void 
 16380 ;;		 -> ap(2), ap(2), 
 16381 ;; Auto vars:     Size  Location     Type
 16382 ;;  llu             8  [STACK] unsigned long long 
 16383 ;;  ll              8  [STACK] long long 
 16384 ;;  f               4  [STACK] long long 
 16385 ;;  ct              3  [STACK] unsigned char [3]
 16386 ;;  vp              3    0        PTR void 
 16387 ;;  cp              2  [STACK] PTR unsigned char 
 16388 ;;		 -> ?_printf(2), ?_sprintf(2), STR_75(9), STR_74(12), 
 16389 ;;		 -> D.lcd(480), D(482), T(144), cp(4), 
 16390 ;;		 -> cb(4), STR_3(5), V(192), 
 16391 ;;  i               2    0        int 
 16392 ;;  done            2    0        int 
 16393 ;;  c               1  [STACK] unsigned char 
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  2  [STACK] int 
 16396 ;; Registers used:
 16397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16407 ;;Total ram usage:        0 bytes
 16408 ;; Hardware stack levels used:    1
 16409 ;; Hardware stack levels required when called:   21
 16410 ;; This function calls:
 16411 ;;		_atoi
 16412 ;;		_ctoa
 16413 ;;		_dtoa
 16414 ;;		_efgtoa
 16415 ;;		_fputc
 16416 ;;		_isdigit
 16417 ;;		_isupper
 16418 ;;		_stoa
 16419 ;;		_strncmp
 16420 ;;		_tolower
 16421 ;;		_utoa
 16422 ;;		_xtoa
 16423 ;; This function is called by:
 16424 ;;		_vfprintf
 16425 ;; This function uses a reentrant model
 16426 ;;
 16427                           
 16428                           	psect	text67
 16429  0124C2                     __ptext67:
 16430                           	opt callstack 0
 16431  0124C2                     _vfpfcnvrt:
 16432                           	opt callstack 0
 16433                           
 16434                           ; BSR set to: 0
 16435                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16436  0124C2  0E20               	movlw	32
 16437  0124C4  26E1               	addwf	fsr1l,f,c
 16438  0124C6  0E00               	movlw	0
 16439  0124C8  22E2               	addwfc	fsr1h,f,c
 16440                           
 16441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 16442                           ;stkvar	_fmt @ sp[(-32)+-4]
 16443                           
 16444                           ;incstack = 0
 16445 ;; hardware stack exceeded
 16446  0124CA  0EDC               	movlw	-36
 16447  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16448  0124D2  0EDD               	movlw	-35
 16449  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16450  0124DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 16451  0124E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 16452  0124E6                     	if	0	;tblptru may be non-zero
 16453  0124E6                     	endif
 16454  0124E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16455  0124E6  0E00               	movlw	low (__mediumconst shr (0+16))
 16456  0124E8  6EF8               	movwf	tblptru,c
 16457  0124EA                     	endif
 16458  0124EA  0008               	tblrd		*
 16459  0124EC  50F5               	movf	tablat,w,c
 16460  0124EE  0A25               	xorlw	37
 16461  0124F0  A4D8               	btfss	status,2,c
 16462  0124F2  EF08  F09A         	goto	l14104
 16463                           
 16464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 16465                           ;stkvar	_fmt @ sp[(-32)+-4]
 16466  0124F6  0EDC               	movlw	-36
 16467  0124F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16468  0124FE  0EDD               	movlw	-35
 16469  012500  006F FF8F FFDA     	movff	plusw1,fsr2h
 16470  012506  2ADE               	incf	postinc2,f,c
 16471  012508  0E00               	movlw	0
 16472  01250A  22DD               	addwfc	postdec2,f,c
 16473                           
 16474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 16475  01250C  6A3A               	clrf	_width^0,c
 16476  01250E  6A3B               	clrf	(_width+1)^0,c
 16477  012510  6A3E               	clrf	_flags^0,c
 16478  012512  6A3F               	clrf	(_flags+1)^0,c
 16479                           
 16480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 16481  012514  683C               	setf	_prec^0,c
 16482  012516  683D               	setf	(_prec+1)^0,c
 16483                           
 16484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 16485                           ;stkvar	_fmt @ sp[(-32)+-4]
 16486  012518  0EDC               	movlw	-36
 16487  01251A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16488  012520  0EDD               	movlw	-35
 16489  012522  006F FF8F FFDA     	movff	plusw1,fsr2h
 16490  012528  006F FF7B FFF6     	movff	postinc2,tblptrl
 16491  01252E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16492  012534                     	if	0	;tblptru may be non-zero
 16493  012534                     	endif
 16494  012534                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16495  012534  0E00               	movlw	low (__mediumconst shr (0+16))
 16496  012536  6EF8               	movwf	tblptru,c
 16497  012538                     	endif
 16498  012538  0008               	tblrd		*
 16499  01253A  50F5               	movf	tablat,w,c
 16500  01253C  0A2A               	xorlw	42
 16501  01253E  A4D8               	btfss	status,2,c
 16502  012540  D031               	goto	l13922
 16503                           
 16504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 16505                           ;stkvar	_fmt @ sp[(-32)+-4]
 16506  012542  0EDC               	movlw	-36
 16507  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 16508  01254A  0EDD               	movlw	-35
 16509  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16510  012552  2ADE               	incf	postinc2,f,c
 16511  012554  0E00               	movlw	0
 16512  012556  22DD               	addwfc	postdec2,f,c
 16513                           
 16514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 16515                           ;stkvar	_ap @ sp[(-32)+-6]
 16516  012558  0EDA               	movlw	-38
 16517  01255A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16518  012560  0EDB               	movlw	-37
 16519  012562  006F FF8F FFDA     	movff	plusw1,fsr2h
 16520  012568  0E02               	movlw	2
 16521  01256A  5EDE               	subwf	postinc2,f,c
 16522  01256C  0E00               	movlw	0
 16523  01256E  5ADD               	subwfb	postdec2,f,c
 16524  012570  006F FF78  F00B    	movff	postinc2,btemp+10
 16525  012576  006F FF74  F00C    	movff	postdec2,btemp+11
 16526  01257C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16527  012582  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16528  012588  006F FF78  F03A    	movff	postinc2,_width
 16529  01258E  006F FF74  F03B    	movff	postdec2,_width+1
 16530                           
 16531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 16532  012594  AE3B               	btfss	(_width+1)^0,7,c
 16533  012596  D066               	goto	u13180
 16534                           
 16535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 16536  012598  803E               	bsf	_flags^0,0,c
 16537                           
 16538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 16539  01259A  6C3A               	negf	_width^0,c
 16540  01259C  1E3B               	comf	(_width+1)^0,f,c
 16541  01259E  B0D8               	btfsc	status,0,c
 16542  0125A0  2A3B               	incf	(_width+1)^0,f,c
 16543  0125A2  D060               	goto	u13180
 16544  0125A4                     l13922:
 16545                           
 16546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 16547                           ;stkvar	_fmt @ sp[(-32)+-4]
 16548  0125A4  0EDC               	movlw	-36
 16549  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16550  0125AC  0EDD               	movlw	-35
 16551  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16552  0125B4  006F FF78  F00B    	movff	postinc2,btemp+10
 16553  0125BA  006F FF74  F00C    	movff	postdec2,btemp+11
 16554  0125C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16555  0125C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 16556  0125CC  EC06  F0C3         	call	_atoi	;wreg free
 16557  0125D0  0060  F004  F03A   	movff	btemp,_width
 16558  0125D6  0060  F008  F03B   	movff	btemp+1,_width+1
 16559                           
 16560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 16561  0125DC  D00B               	goto	l13926
 16562  0125DE                     l13924:
 16563                           
 16564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 16565                           ;stkvar	_fmt @ sp[(-32)+-4]
 16566  0125DE  0EDC               	movlw	-36
 16567  0125E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16568  0125E6  0EDD               	movlw	-35
 16569  0125E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16570  0125EE  2ADE               	incf	postinc2,f,c
 16571  0125F0  0E00               	movlw	0
 16572  0125F2  22DD               	addwfc	postdec2,f,c
 16573  0125F4                     l13926:
 16574  0125F4  0ED0               	movlw	208
 16575  0125F6  6E0B               	movwf	(btemp+10)^0,c
 16576  0125F8  0EFF               	movlw	255
 16577  0125FA  6E0C               	movwf	(btemp+11)^0,c
 16578                           
 16579                           ;stkvar	_fmt @ sp[(-32)+-4]
 16580  0125FC  0EDC               	movlw	-36
 16581  0125FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16582  012604  0EDD               	movlw	-35
 16583  012606  006F FF8F FFDA     	movff	plusw1,fsr2h
 16584  01260C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16585  012612  006F FF77 FFF7     	movff	postdec2,tblptrh
 16586  012618                     	if	0	;tblptru may be non-zero
 16587  012618                     	endif
 16588  012618                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16589  012618  0E00               	movlw	low (__mediumconst shr (0+16))
 16590  01261A  6EF8               	movwf	tblptru,c
 16591  01261C                     	endif
 16592  01261C  0008               	tblrd		*
 16593  01261E  50F5               	movf	tablat,w,c
 16594  012620  6E09               	movwf	(btemp+8)^0,c
 16595  012622  6A0A               	clrf	(btemp+9)^0,c
 16596  012624  500B               	movf	(btemp+10)^0,w,c
 16597  012626  2609               	addwf	(btemp+8)^0,f,c
 16598  012628  500C               	movf	(btemp+11)^0,w,c
 16599  01262A  220A               	addwfc	(btemp+9)^0,f,c
 16600  01262C  500A               	movf	(btemp+9)^0,w,c
 16601  01262E  E106               	bnz	u13160
 16602  012630  0E0A               	movlw	10
 16603  012632  5C09               	subwf	(btemp+8)^0,w,c
 16604  012634  B0D8               	btfsc	status,0,c
 16605  012636  D002               	goto	u13160
 16606  012638  0E01               	movlw	1
 16607  01263A  D001               	goto	u13170
 16608  01263C                     u13160:
 16609  01263C  0E00               	movlw	0
 16610  01263E                     u13170:
 16611  01263E  6E0B               	movwf	(btemp+10)^0,c
 16612  012640  6A0C               	clrf	(btemp+11)^0,c
 16613                           
 16614                           ;stkvar	_vfpfcnvrt$6240 @ sp[(-32)+4]
 16615  012642  0EE4               	movlw	-28
 16616  012644  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16617  01264A  0EE5               	movlw	-27
 16618  01264C  0060  F033  FFE3   	movff	btemp+11,plusw1
 16619                           
 16620                           ;stkvar	_vfpfcnvrt$6240 @ sp[(-32)+4]
 16621  012652  0EE4               	movlw	-28
 16622  012654  006F FF8C  F001    	movff	plusw1,btemp
 16623  01265A  0EE5               	movlw	-27
 16624  01265C  50E3               	movf	plusw1,w,c
 16625  01265E  1001               	iorwf	btemp^0,w,c
 16626  012660  A4D8               	btfss	status,2,c
 16627  012662  D7BD               	goto	l13924
 16628  012664                     u13180:
 16629                           
 16630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 16631                           ;stkvar	_fmt @ sp[(-32)+-4]
 16632  012664  0EDC               	movlw	-36
 16633  012666  006F FF8F FFD9     	movff	plusw1,fsr2l
 16634  01266C  0EDD               	movlw	-35
 16635  01266E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16636  012674  006F FF7B FFF6     	movff	postinc2,tblptrl
 16637  01267A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16638  012680                     	if	0	;tblptru may be non-zero
 16639  012680                     	endif
 16640  012680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16641  012680  0E00               	movlw	low (__mediumconst shr (0+16))
 16642  012682  6EF8               	movwf	tblptru,c
 16643  012684                     	endif
 16644  012684  0008               	tblrd		*
 16645  012686  50F5               	movf	tablat,w,c
 16646  012688  0A2E               	xorlw	46
 16647  01268A  A4D8               	btfss	status,2,c
 16648  01268C  D0AC               	goto	u13230
 16649                           
 16650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 16651  01268E  6A3C               	clrf	_prec^0,c
 16652  012690  6A3D               	clrf	(_prec+1)^0,c
 16653                           
 16654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 16655                           ;stkvar	_fmt @ sp[(-32)+-4]
 16656  012692  0EDC               	movlw	-36
 16657  012694  006F FF8F FFD9     	movff	plusw1,fsr2l
 16658  01269A  0EDD               	movlw	-35
 16659  01269C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16660  0126A2  2ADE               	incf	postinc2,f,c
 16661  0126A4  0E00               	movlw	0
 16662  0126A6  22DD               	addwfc	postdec2,f,c
 16663                           
 16664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 16665                           ;stkvar	_fmt @ sp[(-32)+-4]
 16666  0126A8  0EDC               	movlw	-36
 16667  0126AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16668  0126B0  0EDD               	movlw	-35
 16669  0126B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16670  0126B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 16671  0126BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 16672  0126C4                     	if	0	;tblptru may be non-zero
 16673  0126C4                     	endif
 16674  0126C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16675  0126C4  0E00               	movlw	low (__mediumconst shr (0+16))
 16676  0126C6  6EF8               	movwf	tblptru,c
 16677  0126C8                     	endif
 16678  0126C8  0008               	tblrd		*
 16679  0126CA  50F5               	movf	tablat,w,c
 16680  0126CC  0A2A               	xorlw	42
 16681  0126CE  A4D8               	btfss	status,2,c
 16682  0126D0  D02A               	goto	l13944
 16683                           
 16684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 16685                           ;stkvar	_fmt @ sp[(-32)+-4]
 16686  0126D2  0EDC               	movlw	-36
 16687  0126D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16688  0126DA  0EDD               	movlw	-35
 16689  0126DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16690  0126E2  2ADE               	incf	postinc2,f,c
 16691  0126E4  0E00               	movlw	0
 16692  0126E6  22DD               	addwfc	postdec2,f,c
 16693                           
 16694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 16695                           ;stkvar	_ap @ sp[(-32)+-6]
 16696  0126E8  0EDA               	movlw	-38
 16697  0126EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16698  0126F0  0EDB               	movlw	-37
 16699  0126F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16700  0126F8  0E02               	movlw	2
 16701  0126FA  5EDE               	subwf	postinc2,f,c
 16702  0126FC  0E00               	movlw	0
 16703  0126FE  5ADD               	subwfb	postdec2,f,c
 16704  012700  006F FF78  F00B    	movff	postinc2,btemp+10
 16705  012706  006F FF74  F00C    	movff	postdec2,btemp+11
 16706  01270C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16707  012712  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16708  012718  006F FF78  F03C    	movff	postinc2,_prec
 16709  01271E  006F FF74  F03D    	movff	postdec2,_prec+1
 16710                           
 16711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 16712  012724  D060               	goto	u13230
 16713  012726                     l13944:
 16714                           
 16715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 16716                           ;stkvar	_fmt @ sp[(-32)+-4]
 16717  012726  0EDC               	movlw	-36
 16718  012728  006F FF8F FFD9     	movff	plusw1,fsr2l
 16719  01272E  0EDD               	movlw	-35
 16720  012730  006F FF8F FFDA     	movff	plusw1,fsr2h
 16721  012736  006F FF78  F00B    	movff	postinc2,btemp+10
 16722  01273C  006F FF74  F00C    	movff	postdec2,btemp+11
 16723  012742  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16724  012748  0060  F033  FFE6   	movff	btemp+11,postinc1
 16725  01274E  EC06  F0C3         	call	_atoi	;wreg free
 16726  012752  0060  F004  F03C   	movff	btemp,_prec
 16727  012758  0060  F008  F03D   	movff	btemp+1,_prec+1
 16728                           
 16729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 16730  01275E  D00B               	goto	l13948
 16731  012760                     l13946:
 16732                           
 16733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 16734                           ;stkvar	_fmt @ sp[(-32)+-4]
 16735  012760  0EDC               	movlw	-36
 16736  012762  006F FF8F FFD9     	movff	plusw1,fsr2l
 16737  012768  0EDD               	movlw	-35
 16738  01276A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16739  012770  2ADE               	incf	postinc2,f,c
 16740  012772  0E00               	movlw	0
 16741  012774  22DD               	addwfc	postdec2,f,c
 16742  012776                     l13948:
 16743  012776  0ED0               	movlw	208
 16744  012778  6E0B               	movwf	(btemp+10)^0,c
 16745  01277A  0EFF               	movlw	255
 16746  01277C  6E0C               	movwf	(btemp+11)^0,c
 16747                           
 16748                           ;stkvar	_fmt @ sp[(-32)+-4]
 16749  01277E  0EDC               	movlw	-36
 16750  012780  006F FF8F FFD9     	movff	plusw1,fsr2l
 16751  012786  0EDD               	movlw	-35
 16752  012788  006F FF8F FFDA     	movff	plusw1,fsr2h
 16753  01278E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16754  012794  006F FF77 FFF7     	movff	postdec2,tblptrh
 16755  01279A                     	if	0	;tblptru may be non-zero
 16756  01279A                     	endif
 16757  01279A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16758  01279A  0E00               	movlw	low (__mediumconst shr (0+16))
 16759  01279C  6EF8               	movwf	tblptru,c
 16760  01279E                     	endif
 16761  01279E  0008               	tblrd		*
 16762  0127A0  50F5               	movf	tablat,w,c
 16763  0127A2  6E09               	movwf	(btemp+8)^0,c
 16764  0127A4  6A0A               	clrf	(btemp+9)^0,c
 16765  0127A6  500B               	movf	(btemp+10)^0,w,c
 16766  0127A8  2609               	addwf	(btemp+8)^0,f,c
 16767  0127AA  500C               	movf	(btemp+11)^0,w,c
 16768  0127AC  220A               	addwfc	(btemp+9)^0,f,c
 16769  0127AE  500A               	movf	(btemp+9)^0,w,c
 16770  0127B0  E106               	bnz	u13210
 16771  0127B2  0E0A               	movlw	10
 16772  0127B4  5C09               	subwf	(btemp+8)^0,w,c
 16773  0127B6  B0D8               	btfsc	status,0,c
 16774  0127B8  D002               	goto	u13210
 16775  0127BA  0E01               	movlw	1
 16776  0127BC  D001               	goto	u13220
 16777  0127BE                     u13210:
 16778  0127BE  0E00               	movlw	0
 16779  0127C0                     u13220:
 16780  0127C0  6E0B               	movwf	(btemp+10)^0,c
 16781  0127C2  6A0C               	clrf	(btemp+11)^0,c
 16782                           
 16783                           ;stkvar	_vfpfcnvrt$6241 @ sp[(-32)+0]
 16784  0127C4  0EE0               	movlw	-32
 16785  0127C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16786  0127CC  0EE1               	movlw	-31
 16787  0127CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16788                           
 16789                           ;stkvar	_vfpfcnvrt$6241 @ sp[(-32)+0]
 16790  0127D4  0EE0               	movlw	-32
 16791  0127D6  006F FF8C  F001    	movff	plusw1,btemp
 16792  0127DC  0EE1               	movlw	-31
 16793  0127DE  50E3               	movf	plusw1,w,c
 16794  0127E0  1001               	iorwf	btemp^0,w,c
 16795  0127E2  A4D8               	btfss	status,2,c
 16796  0127E4  D7BD               	goto	l13946
 16797  0127E6                     u13230:
 16798                           
 16799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 16800                           ;stkvar	_fmt @ sp[(-32)+-4]
 16801  0127E6  0EDC               	movlw	-36
 16802  0127E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16803  0127EE  0EDD               	movlw	-35
 16804  0127F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16805  0127F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16806  0127FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16807  012802                     	if	0	;tblptru may be non-zero
 16808  012802                     	endif
 16809  012802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16810  012802  0E00               	movlw	low (__mediumconst shr (0+16))
 16811  012804  6EF8               	movwf	tblptru,c
 16812  012806                     	endif
 16813  012806  0008               	tblrd		*
 16814  012808  50F5               	movf	tablat,w,c
 16815  01280A  6EE6               	movwf	postinc1,c
 16816  01280C  0E00               	movlw	0
 16817  01280E  6EE6               	movwf	postinc1,c
 16818  012810  EC1B  F0E2         	call	_tolower	;wreg free
 16819                           
 16820                           ;stkvar	_ct @ sp[(-32)+26]
 16821  012814  0EFA               	movlw	-6
 16822  012816  0060  F007  FFE3   	movff	btemp,plusw1
 16823                           
 16824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 16825                           ;stkvar	_ct @ sp[(-32)+26]
 16826  01281C  0EFA               	movlw	-6
 16827  01281E  50E3               	movf	plusw1,w,c
 16828  012820  B4D8               	btfsc	status,2,c
 16829  012822  D05B               	goto	l13964
 16830                           
 16831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 16832                           ;stkvar	_ct @ sp[(-32)+26]
 16833  012824  0EFB               	movlw	251
 16834  012826  24E1               	addwf	fsr1l,w,c
 16835  012828  6ED9               	movwf	fsr2l,c
 16836  01282A  0EFF               	movlw	255
 16837  01282C  20E2               	addwfc	fsr1h,w,c
 16838  01282E  6EDA               	movwf	fsr2h,c
 16839                           
 16840                           ;stkvar	_fmt @ sp[(-32)+-4]
 16841  012830  0EDC               	movlw	-36
 16842  012832  006F FF8F FFE9     	movff	plusw1,fsr0l
 16843  012838  0EDD               	movlw	-35
 16844  01283A  006F FF8F FFEA     	movff	plusw1,fsr0h
 16845  012840  006F FFB8  F00B    	movff	postinc0,btemp+10
 16846  012846  006F FFB4  F00C    	movff	postdec0,btemp+11
 16847  01284C  0E01               	movlw	1
 16848  01284E  260B               	addwf	(btemp+10)^0,f,c
 16849  012850  0E00               	movlw	0
 16850  012852  220C               	addwfc	(btemp+11)^0,f,c
 16851  012854  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16852  01285A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16853  012860                     	if	0	;tblptru may be non-zero
 16854  012860                     	endif
 16855  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16856  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 16857  012862  6EF8               	movwf	tblptru,c
 16858  012864                     	endif
 16859  012864  0008               	tblrd		*
 16860  012866  50F5               	movf	tablat,w,c
 16861  012868  6EE6               	movwf	postinc1,c
 16862  01286A  0E00               	movlw	0
 16863  01286C  6EE6               	movwf	postinc1,c
 16864  01286E  EC1B  F0E2         	call	_tolower	;wreg free
 16865  012872  5001               	movf	btemp^0,w,c
 16866  012874  6EDF               	movwf	indf2,c
 16867                           
 16868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 16869                           ;stkvar	_ct @ sp[(-32)+26]
 16870  012876  0EFB               	movlw	251
 16871  012878  24E1               	addwf	fsr1l,w,c
 16872  01287A  6ED9               	movwf	fsr2l,c
 16873  01287C  0EFF               	movlw	255
 16874  01287E  20E2               	addwfc	fsr1h,w,c
 16875  012880  6EDA               	movwf	fsr2h,c
 16876  012882  50DF               	movf	indf2,w,c
 16877  012884  B4D8               	btfsc	status,2,c
 16878  012886  D029               	goto	l13964
 16879                           
 16880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 16881                           ;stkvar	_ct @ sp[(-32)+26]
 16882  012888  0EFC               	movlw	252
 16883  01288A  24E1               	addwf	fsr1l,w,c
 16884  01288C  6ED9               	movwf	fsr2l,c
 16885  01288E  0EFF               	movlw	255
 16886  012890  20E2               	addwfc	fsr1h,w,c
 16887  012892  6EDA               	movwf	fsr2h,c
 16888                           
 16889                           ;stkvar	_fmt @ sp[(-32)+-4]
 16890  012894  0EDC               	movlw	-36
 16891  012896  006F FF8F FFE9     	movff	plusw1,fsr0l
 16892  01289C  0EDD               	movlw	-35
 16893  01289E  006F FF8F FFEA     	movff	plusw1,fsr0h
 16894  0128A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 16895  0128AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 16896  0128B0  0E02               	movlw	2
 16897  0128B2  260B               	addwf	(btemp+10)^0,f,c
 16898  0128B4  0E00               	movlw	0
 16899  0128B6  220C               	addwfc	(btemp+11)^0,f,c
 16900  0128B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16901  0128BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16902  0128C4                     	if	0	;tblptru may be non-zero
 16903  0128C4                     	endif
 16904  0128C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16905  0128C4  0E00               	movlw	low (__mediumconst shr (0+16))
 16906  0128C6  6EF8               	movwf	tblptru,c
 16907  0128C8                     	endif
 16908  0128C8  0008               	tblrd		*
 16909  0128CA  50F5               	movf	tablat,w,c
 16910  0128CC  6EE6               	movwf	postinc1,c
 16911  0128CE  0E00               	movlw	0
 16912  0128D0  6EE6               	movwf	postinc1,c
 16913  0128D2  EC1B  F0E2         	call	_tolower	;wreg free
 16914  0128D6  5001               	movf	btemp^0,w,c
 16915  0128D8  6EDF               	movwf	indf2,c
 16916  0128DA                     l13964:
 16917                           
 16918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 16919                           ;stkvar	_fmt @ sp[(-32)+-4]
 16920  0128DA  0EDC               	movlw	-36
 16921  0128DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16922  0128E2  0EDD               	movlw	-35
 16923  0128E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16924  0128EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 16925  0128F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 16926  0128F6                     	if	0	;tblptru may be non-zero
 16927  0128F6                     	endif
 16928  0128F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16929  0128F6  0E00               	movlw	low (__mediumconst shr (0+16))
 16930  0128F8  6EF8               	movwf	tblptru,c
 16931  0128FA                     	endif
 16932  0128FA  0008               	tblrd		*
 16933  0128FC  50F5               	movf	tablat,w,c
 16934  0128FE  0A63               	xorlw	99
 16935  012900  A4D8               	btfss	status,2,c
 16936  012902  D037               	goto	l13974
 16937                           
 16938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 16939                           ;stkvar	_fmt @ sp[(-32)+-4]
 16940  012904  0EDC               	movlw	-36
 16941  012906  006F FF8F FFD9     	movff	plusw1,fsr2l
 16942  01290C  0EDD               	movlw	-35
 16943  01290E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16944  012914  2ADE               	incf	postinc2,f,c
 16945  012916  0E00               	movlw	0
 16946  012918  22DD               	addwfc	postdec2,f,c
 16947                           
 16948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16949                           ;stkvar	_ap @ sp[(-32)+-6]
 16950  01291A  0EDA               	movlw	-38
 16951  01291C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16952  012922  0EDB               	movlw	-37
 16953  012924  006F FF8F FFDA     	movff	plusw1,fsr2h
 16954  01292A  0E02               	movlw	2
 16955  01292C  5EDE               	subwf	postinc2,f,c
 16956  01292E  0E00               	movlw	0
 16957  012930  5ADD               	subwfb	postdec2,f,c
 16958  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 16959  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 16960  01293E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16961  012944  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16962  01294A  50DF               	movf	indf2,w,c
 16963  01294C  6E0C               	movwf	(btemp+11)^0,c
 16964                           
 16965                           ;stkvar	_c @ sp[(-32)+31]
 16966  01294E  0EFF               	movlw	-1
 16967  012950  0060  F033  FFE3   	movff	btemp+11,plusw1
 16968                           
 16969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 16970                           ;stkvar	_c @ sp[(-32)+31]
 16971  012956  0EFF               	movlw	-1
 16972  012958  50E3               	movf	plusw1,w,c
 16973  01295A  6EE6               	movwf	postinc1,c
 16974                           
 16975                           ;stkvar	_fp @ sp[(-33)+-2]
 16976  01295C  0EDD               	movlw	-35
 16977  01295E  006F FF8F FFE6     	movff	plusw1,postinc1
 16978  012964  006F FF8F FFE6     	movff	plusw1,postinc1
 16979  01296A  EC95  F0E1         	call	_ctoa	;wreg free
 16980  01296E  EF32  F09A         	goto	l2640
 16981  012972                     l13974:
 16982                           
 16983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 16984                           ;stkvar	_fmt @ sp[(-32)+-4]
 16985  012972  0EDC               	movlw	-36
 16986  012974  006F FF8F FFD9     	movff	plusw1,fsr2l
 16987  01297A  0EDD               	movlw	-35
 16988  01297C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16989  012982  006F FF7B FFF6     	movff	postinc2,tblptrl
 16990  012988  006F FF77 FFF7     	movff	postdec2,tblptrh
 16991  01298E                     	if	0	;tblptru may be non-zero
 16992  01298E                     	endif
 16993  01298E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16994  01298E  0E00               	movlw	low (__mediumconst shr (0+16))
 16995  012990  6EF8               	movwf	tblptru,c
 16996  012992                     	endif
 16997  012992  0008               	tblrd		*
 16998  012994  50F5               	movf	tablat,w,c
 16999  012996  0A64               	xorlw	100
 17000  012998  B4D8               	btfsc	status,2,c
 17001  01299A  D015               	goto	u13280
 17002                           
 17003                           ;stkvar	_fmt @ sp[(-32)+-4]
 17004  01299C  0EDC               	movlw	-36
 17005  01299E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17006  0129A4  0EDD               	movlw	-35
 17007  0129A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 17008  0129AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 17009  0129B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 17010  0129B8                     	if	0	;tblptru may be non-zero
 17011  0129B8                     	endif
 17012  0129B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17013  0129B8  0E00               	movlw	low (__mediumconst shr (0+16))
 17014  0129BA  6EF8               	movwf	tblptru,c
 17015  0129BC                     	endif
 17016  0129BC  0008               	tblrd		*
 17017  0129BE  50F5               	movf	tablat,w,c
 17018  0129C0  0A69               	xorlw	105
 17019  0129C2  A4D8               	btfss	status,2,c
 17020  0129C4  D076               	goto	l13986
 17021  0129C6                     u13280:
 17022                           
 17023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 17024                           ;stkvar	_fmt @ sp[(-32)+-4]
 17025  0129C6  0EDC               	movlw	-36
 17026  0129C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 17027  0129CE  0EDD               	movlw	-35
 17028  0129D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17029  0129D6  2ADE               	incf	postinc2,f,c
 17030  0129D8  0E00               	movlw	0
 17031  0129DA  22DD               	addwfc	postdec2,f,c
 17032                           
 17033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 17034                           ;stkvar	_ap @ sp[(-32)+-6]
 17035  0129DC  0EDA               	movlw	-38
 17036  0129DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 17037  0129E4  0EDB               	movlw	-37
 17038  0129E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 17039  0129EC  0E02               	movlw	2
 17040  0129EE  5EDE               	subwf	postinc2,f,c
 17041  0129F0  0E00               	movlw	0
 17042  0129F2  5ADD               	subwfb	postdec2,f,c
 17043  0129F4  006F FF78  F00B    	movff	postinc2,btemp+10
 17044  0129FA  006F FF74  F00C    	movff	postdec2,btemp+11
 17045  012A00  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17046  012A06  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17047  012A0C  006F FF78  F00B    	movff	postinc2,btemp+10
 17048  012A12  006F FF74  F00C    	movff	postdec2,btemp+11
 17049                           
 17050                           ;stkvar	_ll @ sp[(-32)+14]
 17051  012A18  0EEE               	movlw	-18
 17052  012A1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17053  012A20  0EEF               	movlw	-17
 17054  012A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 17055  012A28  6A01               	clrf	btemp^0,c
 17056  012A2A  BEE3               	btfsc	plusw1,7,c
 17057  012A2C  6801               	setf	btemp^0,c
 17058  012A2E  0EF0               	movlw	-16
 17059  012A30  0060  F007  FFE3   	movff	btemp,plusw1
 17060  012A36  0EF1               	movlw	-15
 17061  012A38  0060  F007  FFE3   	movff	btemp,plusw1
 17062  012A3E  0EF2               	movlw	-14
 17063  012A40  0060  F007  FFE3   	movff	btemp,plusw1
 17064  012A46  0EF3               	movlw	-13
 17065  012A48  0060  F007  FFE3   	movff	btemp,plusw1
 17066  012A4E  0EF4               	movlw	-12
 17067  012A50  0060  F007  FFE3   	movff	btemp,plusw1
 17068  012A56  0EF5               	movlw	-11
 17069  012A58  0060  F007  FFE3   	movff	btemp,plusw1
 17070  012A5E                     l13982:
 17071                           
 17072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 17073                           ;stkvar	_ll @ sp[(-32)+14]
 17074  012A5E  50E1               	movf	fsr1l,w,c
 17075  012A60  0FEE               	addlw	-18
 17076  012A62  6ED9               	movwf	fsr2l,c
 17077  012A64  50E2               	movf	fsr1h,w,c
 17078  012A66  6EDA               	movwf	fsr2h,c
 17079  012A68  0EFF               	movlw	255
 17080  012A6A  22DA               	addwfc	fsr2h,f,c
 17081  012A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 17082  012A72  006F FF7B FFE6     	movff	postinc2,postinc1
 17083  012A78  006F FF7B FFE6     	movff	postinc2,postinc1
 17084  012A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 17085  012A84  006F FF7B FFE6     	movff	postinc2,postinc1
 17086  012A8A  006F FF7B FFE6     	movff	postinc2,postinc1
 17087  012A90  006F FF7B FFE6     	movff	postinc2,postinc1
 17088  012A96  006F FF7B FFE6     	movff	postinc2,postinc1
 17089                           
 17090                           ;stkvar	_fp @ sp[(-40)+-2]
 17091  012A9C  0ED6               	movlw	-42
 17092  012A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17093  012AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17094  012AAA  EC56  F0B2         	call	_dtoa	;wreg free
 17095  012AAE  EF32  F09A         	goto	l2640
 17096  012AB2                     l13986:
 17097                           
 17098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 17099  012AB2  0E02               	movlw	2
 17100  012AB4  6EE6               	movwf	postinc1,c
 17101  012AB6  0E00               	movlw	0
 17102  012AB8  6EE6               	movwf	postinc1,c
 17103  012ABA  0EEA               	movlw	low STR_102
 17104  012ABC  6EE6               	movwf	postinc1,c
 17105  012ABE  0EFF               	movlw	high STR_102
 17106  012AC0  6EE6               	movwf	postinc1,c
 17107                           
 17108                           ;stkvar	_fmt @ sp[(-36)+-4]
 17109  012AC2  0ED8               	movlw	-40
 17110  012AC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 17111  012ACA  0ED9               	movlw	-39
 17112  012ACC  006F FF8F FFDA     	movff	plusw1,fsr2h
 17113  012AD2  006F FF78  F00B    	movff	postinc2,btemp+10
 17114  012AD8  006F FF74  F00C    	movff	postdec2,btemp+11
 17115  012ADE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17116  012AE4  0060  F033  FFE6   	movff	btemp+11,postinc1
 17117  012AEA  EC83  F0C6         	call	_strncmp	;wreg free
 17118  012AEE  5001               	movf	btemp^0,w,c
 17119  012AF0  1002               	iorwf	(btemp+1)^0,w,c
 17120  012AF2  B4D8               	btfsc	status,2,c
 17121  012AF4  D022               	goto	u13300
 17122  012AF6  0E02               	movlw	2
 17123  012AF8  6EE6               	movwf	postinc1,c
 17124  012AFA  0E00               	movlw	0
 17125  012AFC  6EE6               	movwf	postinc1,c
 17126  012AFE  0EF0               	movlw	low STR_106
 17127  012B00  6EE6               	movwf	postinc1,c
 17128  012B02  0EFF               	movlw	high STR_106
 17129  012B04  6EE6               	movwf	postinc1,c
 17130                           
 17131                           ;stkvar	_fmt @ sp[(-36)+-4]
 17132  012B06  0ED8               	movlw	-40
 17133  012B08  006F FF8F FFD9     	movff	plusw1,fsr2l
 17134  012B0E  0ED9               	movlw	-39
 17135  012B10  006F FF8F FFDA     	movff	plusw1,fsr2h
 17136  012B16  006F FF78  F00B    	movff	postinc2,btemp+10
 17137  012B1C  006F FF74  F00C    	movff	postdec2,btemp+11
 17138  012B22  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17139  012B28  0060  F033  FFE6   	movff	btemp+11,postinc1
 17140  012B2E  EC83  F0C6         	call	_strncmp	;wreg free
 17141  012B32  5001               	movf	btemp^0,w,c
 17142  012B34  1002               	iorwf	(btemp+1)^0,w,c
 17143  012B36  A4D8               	btfss	status,2,c
 17144  012B38  D069               	goto	l13998
 17145  012B3A                     u13300:
 17146                           
 17147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 17148                           ;stkvar	_fmt @ sp[(-32)+-4]
 17149  012B3A  0EDC               	movlw	-36
 17150  012B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17151  012B42  0EDD               	movlw	-35
 17152  012B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 17153  012B4A  0E02               	movlw	2
 17154  012B4C  26DE               	addwf	postinc2,f,c
 17155  012B4E  0E00               	movlw	0
 17156  012B50  22DD               	addwfc	postdec2,f,c
 17157                           
 17158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 17159                           ;stkvar	_ap @ sp[(-32)+-6]
 17160  012B52  0EDA               	movlw	-38
 17161  012B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 17162  012B5A  0EDB               	movlw	-37
 17163  012B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17164  012B62  0E04               	movlw	4
 17165  012B64  5EDE               	subwf	postinc2,f,c
 17166  012B66  0E00               	movlw	0
 17167  012B68  5ADD               	subwfb	postdec2,f,c
 17168  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 17169  012B70  006F FF74  F00C    	movff	postdec2,btemp+11
 17170  012B76  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17171  012B7C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17172  012B82  006F FF78  F009    	movff	postinc2,btemp+8
 17173  012B88  006F FF78  F00A    	movff	postinc2,btemp+9
 17174  012B8E  006F FF78  F00B    	movff	postinc2,btemp+10
 17175  012B94  006F FF78  F00C    	movff	postinc2,btemp+11
 17176  012B9A  0060  F024  F011   	movff	btemp+8,btemp+16
 17177  012BA0  0060  F028  F012   	movff	btemp+9,btemp+17
 17178  012BA6  0060  F02C  F013   	movff	btemp+10,btemp+18
 17179  012BAC  0060  F030  F014   	movff	btemp+11,btemp+19
 17180  012BB2  6A15               	clrf	(btemp+20)^0,c
 17181  012BB4  BE14               	btfsc	(btemp+19)^0,7,c
 17182  012BB6  6815               	setf	(btemp+20)^0,c
 17183  012BB8  0060  F054  F016   	movff	btemp+20,btemp+21
 17184  012BBE  0060  F054  F017   	movff	btemp+20,btemp+22
 17185  012BC4  0060  F054  F018   	movff	btemp+20,btemp+23
 17186                           
 17187                           ;stkvar	_ll @ sp[(-32)+14]
 17188  012BCA  0EEE               	movlw	-18
 17189  012BCC  0060  F047  FFE3   	movff	btemp+16,plusw1
 17190  012BD2  0EEF               	movlw	-17
 17191  012BD4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17192  012BDA  0EF0               	movlw	-16
 17193  012BDC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17194  012BE2  0EF1               	movlw	-15
 17195  012BE4  0060  F053  FFE3   	movff	btemp+19,plusw1
 17196  012BEA  0EF2               	movlw	-14
 17197  012BEC  0060  F057  FFE3   	movff	btemp+20,plusw1
 17198  012BF2  0EF3               	movlw	-13
 17199  012BF4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17200  012BFA  0EF4               	movlw	-12
 17201  012BFC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17202  012C02  0EF5               	movlw	-11
 17203  012C04  0060  F063  FFE3   	movff	btemp+23,plusw1
 17204  012C0A  D729               	goto	l13982
 17205  012C0C                     l13998:
 17206                           
 17207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 17208                           ;stkvar	_ct @ sp[(-32)+26]
 17209  012C0C  0EFA               	movlw	-6
 17210  012C0E  006F FF8C  F001    	movff	plusw1,btemp
 17211  012C14  0E66               	movlw	102
 17212  012C16  1801               	xorwf	btemp^0,w,c
 17213  012C18  A4D8               	btfss	status,2,c
 17214  012C1A  D06E               	goto	l14010
 17215                           
 17216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 17217                           ;stkvar	_fmt @ sp[(-32)+-4]
 17218  012C1C  0EDC               	movlw	-36
 17219  012C1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17220  012C24  0EDD               	movlw	-35
 17221  012C26  006F FF8F FFDA     	movff	plusw1,fsr2h
 17222  012C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17223  012C32  006F FF77 FFF7     	movff	postdec2,tblptrh
 17224  012C38                     	if	0	;tblptru may be non-zero
 17225  012C38                     	endif
 17226  012C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17227  012C38  0E00               	movlw	low (__mediumconst shr (0+16))
 17228  012C3A  6EF8               	movwf	tblptru,c
 17229  012C3C                     	endif
 17230                           
 17231                           ;stkvar	_c @ sp[(-32)+31]
 17232  012C3C  0008               	tblrd		*
 17233  012C3E  0EFF               	movlw	-1
 17234  012C40  006F FFD7 FFE3     	movff	tablat,plusw1
 17235                           
 17236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 17237                           ;stkvar	_fmt @ sp[(-32)+-4]
 17238  012C46  0EDC               	movlw	-36
 17239  012C48  006F FF8F FFD9     	movff	plusw1,fsr2l
 17240  012C4E  0EDD               	movlw	-35
 17241  012C50  006F FF8F FFDA     	movff	plusw1,fsr2h
 17242  012C56  2ADE               	incf	postinc2,f,c
 17243  012C58  0E00               	movlw	0
 17244  012C5A  22DD               	addwfc	postdec2,f,c
 17245                           
 17246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 17247                           ;stkvar	_ap @ sp[(-32)+-6]
 17248  012C5C  0EDA               	movlw	-38
 17249  012C5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17250  012C64  0EDB               	movlw	-37
 17251  012C66  006F FF8F FFDA     	movff	plusw1,fsr2h
 17252  012C6C  0E04               	movlw	4
 17253  012C6E  5EDE               	subwf	postinc2,f,c
 17254  012C70  0E00               	movlw	0
 17255  012C72  5ADD               	subwfb	postdec2,f,c
 17256  012C74  006F FF78  F00B    	movff	postinc2,btemp+10
 17257  012C7A  006F FF74  F00C    	movff	postdec2,btemp+11
 17258  012C80  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17259  012C86  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17260  012C8C  006F FF78  F009    	movff	postinc2,btemp+8
 17261  012C92  006F FF78  F00A    	movff	postinc2,btemp+9
 17262  012C98  006F FF78  F00B    	movff	postinc2,btemp+10
 17263  012C9E  006F FF78  F00C    	movff	postinc2,btemp+11
 17264                           
 17265                           ;stkvar	_f @ sp[(-32)+22]
 17266  012CA4  0EF6               	movlw	-10
 17267  012CA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 17268  012CAC  0EF7               	movlw	-9
 17269  012CAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17270  012CB4  0EF8               	movlw	-8
 17271  012CB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17272  012CBC  0EF9               	movlw	-7
 17273  012CBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 17274  012CC4                     l14006:
 17275                           
 17276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 17277                           ;stkvar	_c @ sp[(-32)+31]
 17278  012CC4  0EFF               	movlw	-1
 17279  012CC6  50E3               	movf	plusw1,w,c
 17280  012CC8  6EE6               	movwf	postinc1,c
 17281                           
 17282                           ;stkvar	_f @ sp[(-33)+22]
 17283  012CCA  0EF5               	movlw	-11
 17284  012CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 17285  012CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 17286  012CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 17287  012CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 17288                           
 17289                           ;stkvar	_fp @ sp[(-37)+-2]
 17290  012CE4  0ED9               	movlw	-39
 17291  012CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 17292  012CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 17293  012CF2  EC3F  F089         	call	_efgtoa	;wreg free
 17294  012CF6  D3B6               	goto	l2640
 17295  012CF8                     l14010:
 17296                           
 17297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 17298  012CF8  0E02               	movlw	2
 17299  012CFA  6EE6               	movwf	postinc1,c
 17300  012CFC  0E00               	movlw	0
 17301  012CFE  6EE6               	movwf	postinc1,c
 17302  012D00  0EED               	movlw	low STR_111
 17303  012D02  6EE6               	movwf	postinc1,c
 17304  012D04  0EFF               	movlw	high STR_111
 17305  012D06  6EE6               	movwf	postinc1,c
 17306                           
 17307                           ;stkvar	_ct @ sp[(-36)+26]
 17308  012D08  0EF6               	movlw	246
 17309  012D0A  24E1               	addwf	fsr1l,w,c
 17310  012D0C  6E01               	movwf	btemp^0,c
 17311  012D0E  0EFF               	movlw	255
 17312  012D10  20E2               	addwfc	fsr1h,w,c
 17313  012D12  6E02               	movwf	(btemp+1)^0,c
 17314  012D14  0060  F007  FFE6   	movff	btemp,postinc1
 17315  012D1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17316  012D20  EC83  F0C6         	call	_strncmp	;wreg free
 17317  012D24  5001               	movf	btemp^0,w,c
 17318  012D26  1002               	iorwf	(btemp+1)^0,w,c
 17319  012D28  A4D8               	btfss	status,2,c
 17320  012D2A  D096               	goto	l14030
 17321                           
 17322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 17323                           ;stkvar	_fmt @ sp[(-32)+-4]
 17324  012D2C  0EDC               	movlw	-36
 17325  012D2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17326  012D34  0EDD               	movlw	-35
 17327  012D36  006F FF8F FFDA     	movff	plusw1,fsr2h
 17328  012D3C  006F FF78  F00B    	movff	postinc2,btemp+10
 17329  012D42  006F FF74  F00C    	movff	postdec2,btemp+11
 17330  012D48  0E01               	movlw	1
 17331  012D4A  260B               	addwf	(btemp+10)^0,f,c
 17332  012D4C  0E00               	movlw	0
 17333  012D4E  220C               	addwfc	(btemp+11)^0,f,c
 17334  012D50  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17335  012D56  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17336  012D5C                     	if	0	;tblptru may be non-zero
 17337  012D5C                     	endif
 17338  012D5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17339  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 17340  012D5E  6EF8               	movwf	tblptru,c
 17341  012D60                     	endif
 17342                           
 17343                           ;stkvar	_c @ sp[(-32)+31]
 17344  012D60  0008               	tblrd		*
 17345  012D62  0EFF               	movlw	-1
 17346  012D64  006F FFD7 FFE3     	movff	tablat,plusw1
 17347  012D6A  0EBF               	movlw	191
 17348  012D6C  6E0B               	movwf	(btemp+10)^0,c
 17349  012D6E  0EFF               	movlw	255
 17350  012D70  6E0C               	movwf	(btemp+11)^0,c
 17351                           
 17352                           ;stkvar	_fmt @ sp[(-32)+-4]
 17353  012D72  0EDC               	movlw	-36
 17354  012D74  006F FF8F FFD9     	movff	plusw1,fsr2l
 17355  012D7A  0EDD               	movlw	-35
 17356  012D7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17357  012D82  006F FF7B FFF6     	movff	postinc2,tblptrl
 17358  012D88  006F FF77 FFF7     	movff	postdec2,tblptrh
 17359  012D8E                     	if	0	;tblptru may be non-zero
 17360  012D8E                     	endif
 17361  012D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17362  012D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 17363  012D90  6EF8               	movwf	tblptru,c
 17364  012D92                     	endif
 17365  012D92  0008               	tblrd		*
 17366  012D94  50F5               	movf	tablat,w,c
 17367  012D96  6E09               	movwf	(btemp+8)^0,c
 17368  012D98  6A0A               	clrf	(btemp+9)^0,c
 17369  012D9A  500B               	movf	(btemp+10)^0,w,c
 17370  012D9C  2609               	addwf	(btemp+8)^0,f,c
 17371  012D9E  500C               	movf	(btemp+11)^0,w,c
 17372  012DA0  220A               	addwfc	(btemp+9)^0,f,c
 17373  012DA2  500A               	movf	(btemp+9)^0,w,c
 17374  012DA4  E106               	bnz	u13330
 17375  012DA6  0E1A               	movlw	26
 17376  012DA8  5C09               	subwf	(btemp+8)^0,w,c
 17377  012DAA  B0D8               	btfsc	status,0,c
 17378  012DAC  D002               	goto	u13330
 17379  012DAE  0E01               	movlw	1
 17380  012DB0  D001               	goto	u13340
 17381  012DB2                     u13330:
 17382  012DB2  0E00               	movlw	0
 17383  012DB4                     u13340:
 17384  012DB4  6E0B               	movwf	(btemp+10)^0,c
 17385  012DB6  6A0C               	clrf	(btemp+11)^0,c
 17386                           
 17387                           ;stkvar	_vfpfcnvrt$6252 @ sp[(-32)+2]
 17388  012DB8  0EE2               	movlw	-30
 17389  012DBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17390  012DC0  0EE3               	movlw	-29
 17391  012DC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17392                           
 17393                           ;stkvar	_vfpfcnvrt$6252 @ sp[(-32)+2]
 17394  012DC8  0EE2               	movlw	-30
 17395  012DCA  006F FF8C  F001    	movff	plusw1,btemp
 17396  012DD0  0EE3               	movlw	-29
 17397  012DD2  50E3               	movf	plusw1,w,c
 17398  012DD4  1001               	iorwf	btemp^0,w,c
 17399                           
 17400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 17401                           ;stkvar	_ap @ sp[(-32)+-6]
 17402                           
 17403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 17404                           
 17405                           ;stkvar	_f @ sp[(-32)+22]
 17406                           
 17407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 17408                           ;stkvar	_ap @ sp[(-32)+-6]
 17409  012DD6  0EDA               	movlw	-38
 17410  012DD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 17411  012DDE  0EDB               	movlw	-37
 17412  012DE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17413  012DE6  0E04               	movlw	4
 17414  012DE8  5EDE               	subwf	postinc2,f,c
 17415  012DEA  0E00               	movlw	0
 17416  012DEC  5ADD               	subwfb	postdec2,f,c
 17417  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 17418  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 17419  012DFA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17420  012E00  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17421  012E06  006F FF78  F009    	movff	postinc2,btemp+8
 17422  012E0C  006F FF78  F00A    	movff	postinc2,btemp+9
 17423  012E12  006F FF78  F00B    	movff	postinc2,btemp+10
 17424  012E18  006F FF78  F00C    	movff	postinc2,btemp+11
 17425                           
 17426                           ;stkvar	_f @ sp[(-32)+22]
 17427  012E1E  0EF6               	movlw	-10
 17428  012E20  0060  F027  FFE3   	movff	btemp+8,plusw1
 17429  012E26  0EF7               	movlw	-9
 17430  012E28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17431  012E2E  0EF8               	movlw	-8
 17432  012E30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17433  012E36  0EF9               	movlw	-7
 17434  012E38  0060  F033  FFE3   	movff	btemp+11,plusw1
 17435                           
 17436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 17437                           ;stkvar	_fmt @ sp[(-32)+-4]
 17438  012E3E  0EDC               	movlw	-36
 17439  012E40  006F FF8F FFD9     	movff	plusw1,fsr2l
 17440  012E46  0EDD               	movlw	-35
 17441  012E48  006F FF8F FFDA     	movff	plusw1,fsr2h
 17442  012E4E  0E02               	movlw	2
 17443  012E50  26DE               	addwf	postinc2,f,c
 17444  012E52  0E00               	movlw	0
 17445  012E54  22DD               	addwfc	postdec2,f,c
 17446  012E56  D736               	goto	l14006
 17447  012E58                     l14030:
 17448                           
 17449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 17450                           ;stkvar	_fmt @ sp[(-32)+-4]
 17451  012E58  0EDC               	movlw	-36
 17452  012E5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17453  012E60  0EDD               	movlw	-35
 17454  012E62  006F FF8F FFDA     	movff	plusw1,fsr2h
 17455  012E68  006F FF7B FFF6     	movff	postinc2,tblptrl
 17456  012E6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17457  012E74                     	if	0	;tblptru may be non-zero
 17458  012E74                     	endif
 17459  012E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17460  012E74  0E00               	movlw	low (__mediumconst shr (0+16))
 17461  012E76  6EF8               	movwf	tblptru,c
 17462  012E78                     	endif
 17463  012E78  0008               	tblrd		*
 17464  012E7A  50F5               	movf	tablat,w,c
 17465  012E7C  0A73               	xorlw	115
 17466  012E7E  A4D8               	btfss	status,2,c
 17467  012E80  D042               	goto	l14040
 17468                           
 17469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 17470                           ;stkvar	_fmt @ sp[(-32)+-4]
 17471  012E82  0EDC               	movlw	-36
 17472  012E84  006F FF8F FFD9     	movff	plusw1,fsr2l
 17473  012E8A  0EDD               	movlw	-35
 17474  012E8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17475  012E92  2ADE               	incf	postinc2,f,c
 17476  012E94  0E00               	movlw	0
 17477  012E96  22DD               	addwfc	postdec2,f,c
 17478                           
 17479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 17480                           ;stkvar	_ap @ sp[(-32)+-6]
 17481  012E98  0EDA               	movlw	-38
 17482  012E9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17483  012EA0  0EDB               	movlw	-37
 17484  012EA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17485  012EA8  0E02               	movlw	2
 17486  012EAA  5EDE               	subwf	postinc2,f,c
 17487  012EAC  0E00               	movlw	0
 17488  012EAE  5ADD               	subwfb	postdec2,f,c
 17489  012EB0  006F FF78  F00B    	movff	postinc2,btemp+10
 17490  012EB6  006F FF74  F00C    	movff	postdec2,btemp+11
 17491  012EBC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17492  012EC2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17493  012EC8  006F FF78  F00B    	movff	postinc2,btemp+10
 17494  012ECE  006F FF74  F00C    	movff	postdec2,btemp+11
 17495                           
 17496                           ;stkvar	_cp @ sp[(-32)+29]
 17497  012ED4  0EFE               	movlw	-2
 17498  012ED6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17499  012EDC  0EFD               	movlw	-3
 17500  012EDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17501                           
 17502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 17503                           ;stkvar	_cp @ sp[(-32)+29]
 17504  012EE4  0EFD               	movlw	-3
 17505  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 17506  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 17507                           
 17508                           ;stkvar	_fp @ sp[(-34)+-2]
 17509  012EF2  0EDC               	movlw	-36
 17510  012EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17511  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17512  012F00  EC67  F0C0         	call	_stoa	;wreg free
 17513  012F04  D2AF               	goto	l2640
 17514  012F06                     l14040:
 17515                           
 17516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 17517                           ;stkvar	_fmt @ sp[(-32)+-4]
 17518  012F06  0EDC               	movlw	-36
 17519  012F08  006F FF8F FFD9     	movff	plusw1,fsr2l
 17520  012F0E  0EDD               	movlw	-35
 17521  012F10  006F FF8F FFDA     	movff	plusw1,fsr2h
 17522  012F16  006F FF7B FFF6     	movff	postinc2,tblptrl
 17523  012F1C  006F FF77 FFF7     	movff	postdec2,tblptrh
 17524  012F22                     	if	0	;tblptru may be non-zero
 17525  012F22                     	endif
 17526  012F22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17527  012F22  0E00               	movlw	low (__mediumconst shr (0+16))
 17528  012F24  6EF8               	movwf	tblptru,c
 17529  012F26                     	endif
 17530  012F26  0008               	tblrd		*
 17531  012F28  50F5               	movf	tablat,w,c
 17532  012F2A  0A75               	xorlw	117
 17533  012F2C  A4D8               	btfss	status,2,c
 17534  012F2E  D07C               	goto	l14050
 17535                           
 17536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 17537                           ;stkvar	_fmt @ sp[(-32)+-4]
 17538  012F30  0EDC               	movlw	-36
 17539  012F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 17540  012F38  0EDD               	movlw	-35
 17541  012F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17542  012F40  2ADE               	incf	postinc2,f,c
 17543  012F42  0E00               	movlw	0
 17544  012F44  22DD               	addwfc	postdec2,f,c
 17545                           
 17546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 17547                           ;stkvar	_ap @ sp[(-32)+-6]
 17548  012F46  0EDA               	movlw	-38
 17549  012F48  006F FF8F FFD9     	movff	plusw1,fsr2l
 17550  012F4E  0EDB               	movlw	-37
 17551  012F50  006F FF8F FFDA     	movff	plusw1,fsr2h
 17552  012F56  0E02               	movlw	2
 17553  012F58  5EDE               	subwf	postinc2,f,c
 17554  012F5A  0E00               	movlw	0
 17555  012F5C  5ADD               	subwfb	postdec2,f,c
 17556  012F5E  006F FF78  F00B    	movff	postinc2,btemp+10
 17557  012F64  006F FF74  F00C    	movff	postdec2,btemp+11
 17558  012F6A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17559  012F70  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17560  012F76  006F FF78  F00B    	movff	postinc2,btemp+10
 17561  012F7C  006F FF74  F00C    	movff	postdec2,btemp+11
 17562  012F82  500B               	movf	(btemp+10)^0,w,c
 17563  012F84  6E11               	movwf	(btemp+16)^0,c
 17564  012F86  500C               	movf	(btemp+11)^0,w,c
 17565  012F88  6E12               	movwf	(btemp+17)^0,c
 17566  012F8A  6A13               	clrf	(btemp+18)^0,c
 17567  012F8C  6A14               	clrf	(btemp+19)^0,c
 17568  012F8E  6A15               	clrf	(btemp+20)^0,c
 17569  012F90  6A16               	clrf	(btemp+21)^0,c
 17570  012F92  6A17               	clrf	(btemp+22)^0,c
 17571  012F94  6A18               	clrf	(btemp+23)^0,c
 17572                           
 17573                           ;stkvar	_llu @ sp[(-32)+6]
 17574  012F96  0EE6               	movlw	-26
 17575  012F98  0060  F047  FFE3   	movff	btemp+16,plusw1
 17576  012F9E  0EE7               	movlw	-25
 17577  012FA0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17578  012FA6  0EE8               	movlw	-24
 17579  012FA8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17580  012FAE  0EE9               	movlw	-23
 17581  012FB0  0060  F053  FFE3   	movff	btemp+19,plusw1
 17582  012FB6  0EEA               	movlw	-22
 17583  012FB8  0060  F057  FFE3   	movff	btemp+20,plusw1
 17584  012FBE  0EEB               	movlw	-21
 17585  012FC0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17586  012FC6  0EEC               	movlw	-20
 17587  012FC8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17588  012FCE  0EED               	movlw	-19
 17589  012FD0  0060  F063  FFE3   	movff	btemp+23,plusw1
 17590                           
 17591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 17592                           ;stkvar	_llu @ sp[(-32)+6]
 17593  012FD6  50E1               	movf	fsr1l,w,c
 17594  012FD8  0FE6               	addlw	-26
 17595  012FDA  6ED9               	movwf	fsr2l,c
 17596  012FDC  50E2               	movf	fsr1h,w,c
 17597  012FDE  6EDA               	movwf	fsr2h,c
 17598  012FE0  0EFF               	movlw	255
 17599  012FE2  22DA               	addwfc	fsr2h,f,c
 17600  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 17601  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 17602  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 17603  012FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 17604  012FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 17605  013002  006F FF7B FFE6     	movff	postinc2,postinc1
 17606  013008  006F FF7B FFE6     	movff	postinc2,postinc1
 17607  01300E  006F FF7B FFE6     	movff	postinc2,postinc1
 17608                           
 17609                           ;stkvar	_fp @ sp[(-40)+-2]
 17610  013014  0ED6               	movlw	-42
 17611  013016  006F FF8F FFE6     	movff	plusw1,postinc1
 17612  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 17613  013022  EC4F  F0BA         	call	_utoa	;wreg free
 17614  013026  D21E               	goto	l2640
 17615  013028                     l14050:
 17616                           
 17617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 17618  013028  0E02               	movlw	2
 17619  01302A  6EE6               	movwf	postinc1,c
 17620  01302C  0E00               	movlw	0
 17621  01302E  6EE6               	movwf	postinc1,c
 17622  013030  0EF3               	movlw	low STR_116
 17623  013032  6EE6               	movwf	postinc1,c
 17624  013034  0EFF               	movlw	high STR_116
 17625  013036  6EE6               	movwf	postinc1,c
 17626                           
 17627                           ;stkvar	_fmt @ sp[(-36)+-4]
 17628  013038  0ED8               	movlw	-40
 17629  01303A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17630  013040  0ED9               	movlw	-39
 17631  013042  006F FF8F FFDA     	movff	plusw1,fsr2h
 17632  013048  006F FF78  F00B    	movff	postinc2,btemp+10
 17633  01304E  006F FF74  F00C    	movff	postdec2,btemp+11
 17634  013054  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17635  01305A  0060  F033  FFE6   	movff	btemp+11,postinc1
 17636  013060  EC83  F0C6         	call	_strncmp	;wreg free
 17637  013064  5001               	movf	btemp^0,w,c
 17638  013066  1002               	iorwf	(btemp+1)^0,w,c
 17639  013068  A4D8               	btfss	status,2,c
 17640  01306A  D039               	goto	l14060
 17641                           
 17642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 17643                           ;stkvar	_fmt @ sp[(-32)+-4]
 17644  01306C  0EDC               	movlw	-36
 17645  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17646  013074  0EDD               	movlw	-35
 17647  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 17648  01307C  0E02               	movlw	2
 17649  01307E  26DE               	addwf	postinc2,f,c
 17650  013080  0E00               	movlw	0
 17651  013082  22DD               	addwfc	postdec2,f,c
 17652                           
 17653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 17654                           ;stkvar	_ap @ sp[(-32)+-6]
 17655  013084  0EDA               	movlw	-38
 17656  013086  006F FF8F FFD9     	movff	plusw1,fsr2l
 17657  01308C  0EDB               	movlw	-37
 17658  01308E  006F FF8F FFDA     	movff	plusw1,fsr2h
 17659  013094  0E04               	movlw	4
 17660  013096  5EDE               	subwf	postinc2,f,c
 17661  013098  0E00               	movlw	0
 17662  01309A  5ADD               	subwfb	postdec2,f,c
 17663  01309C  006F FF78  F00B    	movff	postinc2,btemp+10
 17664  0130A2  006F FF74  F00C    	movff	postdec2,btemp+11
 17665  0130A8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17666  0130AE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17667  0130B4  006F FF78  F009    	movff	postinc2,btemp+8
 17668  0130BA  006F FF78  F00A    	movff	postinc2,btemp+9
 17669  0130C0  006F FF78  F00B    	movff	postinc2,btemp+10
 17670  0130C6  006F FF78  F00C    	movff	postinc2,btemp+11
 17671  0130CC  5009               	movf	(btemp+8)^0,w,c
 17672  0130CE  6E11               	movwf	(btemp+16)^0,c
 17673  0130D0  500A               	movf	(btemp+9)^0,w,c
 17674  0130D2  6E12               	movwf	(btemp+17)^0,c
 17675  0130D4  500B               	movf	(btemp+10)^0,w,c
 17676  0130D6  6E13               	movwf	(btemp+18)^0,c
 17677  0130D8  500C               	movf	(btemp+11)^0,w,c
 17678  0130DA  6E14               	movwf	(btemp+19)^0,c
 17679  0130DC  D758               	goto	L16
 17680  0130DE                     l14060:
 17681                           
 17682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 17683                           ;stkvar	_fmt @ sp[(-32)+-4]
 17684  0130DE  0EDC               	movlw	-36
 17685  0130E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 17686  0130E6  0EDD               	movlw	-35
 17687  0130E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 17688  0130EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 17689  0130F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 17690  0130FA                     	if	0	;tblptru may be non-zero
 17691  0130FA                     	endif
 17692  0130FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17693  0130FA  0E00               	movlw	low (__mediumconst shr (0+16))
 17694  0130FC  6EF8               	movwf	tblptru,c
 17695  0130FE                     	endif
 17696  0130FE  0008               	tblrd		*
 17697  013100  50F5               	movf	tablat,w,c
 17698  013102  0A78               	xorlw	120
 17699  013104  B4D8               	btfsc	status,2,c
 17700  013106  D015               	goto	u13400
 17701                           
 17702                           ;stkvar	_fmt @ sp[(-32)+-4]
 17703  013108  0EDC               	movlw	-36
 17704  01310A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17705  013110  0EDD               	movlw	-35
 17706  013112  006F FF8F FFDA     	movff	plusw1,fsr2h
 17707  013118  006F FF7B FFF6     	movff	postinc2,tblptrl
 17708  01311E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17709  013124                     	if	0	;tblptru may be non-zero
 17710  013124                     	endif
 17711  013124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17712  013124  0E00               	movlw	low (__mediumconst shr (0+16))
 17713  013126  6EF8               	movwf	tblptru,c
 17714  013128                     	endif
 17715  013128  0008               	tblrd		*
 17716  01312A  50F5               	movf	tablat,w,c
 17717  01312C  0A58               	xorlw	88
 17718  01312E  A4D8               	btfss	status,2,c
 17719  013130  D094               	goto	l14074
 17720  013132                     u13400:
 17721                           
 17722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 17723                           ;stkvar	_fmt @ sp[(-32)+-4]
 17724  013132  0EDC               	movlw	-36
 17725  013134  006F FF8F FFD9     	movff	plusw1,fsr2l
 17726  01313A  0EDD               	movlw	-35
 17727  01313C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17728  013142  006F FF7B FFF6     	movff	postinc2,tblptrl
 17729  013148  006F FF77 FFF7     	movff	postdec2,tblptrh
 17730  01314E                     	if	0	;tblptru may be non-zero
 17731  01314E                     	endif
 17732  01314E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17733  01314E  0E00               	movlw	low (__mediumconst shr (0+16))
 17734  013150  6EF8               	movwf	tblptru,c
 17735  013152                     	endif
 17736                           
 17737                           ;stkvar	_c @ sp[(-32)+31]
 17738  013152  0008               	tblrd		*
 17739  013154  0EFF               	movlw	-1
 17740  013156  006F FFD7 FFE3     	movff	tablat,plusw1
 17741                           
 17742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 17743                           ;stkvar	_fmt @ sp[(-32)+-4]
 17744  01315C  0EDC               	movlw	-36
 17745  01315E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17746  013164  0EDD               	movlw	-35
 17747  013166  006F FF8F FFDA     	movff	plusw1,fsr2h
 17748  01316C  2ADE               	incf	postinc2,f,c
 17749  01316E  0E00               	movlw	0
 17750  013170  22DD               	addwfc	postdec2,f,c
 17751                           
 17752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 17753                           ;stkvar	_ap @ sp[(-32)+-6]
 17754  013172  0EDA               	movlw	-38
 17755  013174  006F FF8F FFD9     	movff	plusw1,fsr2l
 17756  01317A  0EDB               	movlw	-37
 17757  01317C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17758  013182  0E02               	movlw	2
 17759  013184  5EDE               	subwf	postinc2,f,c
 17760  013186  0E00               	movlw	0
 17761  013188  5ADD               	subwfb	postdec2,f,c
 17762  01318A  006F FF78  F00B    	movff	postinc2,btemp+10
 17763  013190  006F FF74  F00C    	movff	postdec2,btemp+11
 17764  013196  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17765  01319C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17766  0131A2  006F FF78  F00B    	movff	postinc2,btemp+10
 17767  0131A8  006F FF74  F00C    	movff	postdec2,btemp+11
 17768  0131AE  500B               	movf	(btemp+10)^0,w,c
 17769  0131B0  6E11               	movwf	(btemp+16)^0,c
 17770  0131B2  500C               	movf	(btemp+11)^0,w,c
 17771  0131B4  6E12               	movwf	(btemp+17)^0,c
 17772  0131B6  6A13               	clrf	(btemp+18)^0,c
 17773  0131B8  6A14               	clrf	(btemp+19)^0,c
 17774  0131BA  6A15               	clrf	(btemp+20)^0,c
 17775  0131BC  6A16               	clrf	(btemp+21)^0,c
 17776  0131BE  6A17               	clrf	(btemp+22)^0,c
 17777  0131C0  6A18               	clrf	(btemp+23)^0,c
 17778                           
 17779                           ;stkvar	_llu @ sp[(-32)+6]
 17780  0131C2  0EE6               	movlw	-26
 17781  0131C4  0060  F047  FFE3   	movff	btemp+16,plusw1
 17782  0131CA  0EE7               	movlw	-25
 17783  0131CC  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17784  0131D2  0EE8               	movlw	-24
 17785  0131D4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17786  0131DA  0EE9               	movlw	-23
 17787  0131DC  0060  F053  FFE3   	movff	btemp+19,plusw1
 17788  0131E2  0EEA               	movlw	-22
 17789  0131E4  0060  F057  FFE3   	movff	btemp+20,plusw1
 17790  0131EA  0EEB               	movlw	-21
 17791  0131EC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17792  0131F2  0EEC               	movlw	-20
 17793  0131F4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17794  0131FA  0EED               	movlw	-19
 17795  0131FC  0060  F063  FFE3   	movff	btemp+23,plusw1
 17796                           
 17797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 17798                           ;stkvar	_c @ sp[(-32)+31]
 17799  013202  0EFF               	movlw	-1
 17800  013204  50E3               	movf	plusw1,w,c
 17801  013206  6EE6               	movwf	postinc1,c
 17802                           
 17803                           ;stkvar	_llu @ sp[(-33)+6]
 17804  013208  50E1               	movf	fsr1l,w,c
 17805  01320A  0FE5               	addlw	-27
 17806  01320C  6ED9               	movwf	fsr2l,c
 17807  01320E  50E2               	movf	fsr1h,w,c
 17808  013210  6EDA               	movwf	fsr2h,c
 17809  013212  0EFF               	movlw	255
 17810  013214  22DA               	addwfc	fsr2h,f,c
 17811  013216  006F FF7B FFE6     	movff	postinc2,postinc1
 17812  01321C  006F FF7B FFE6     	movff	postinc2,postinc1
 17813  013222  006F FF7B FFE6     	movff	postinc2,postinc1
 17814  013228  006F FF7B FFE6     	movff	postinc2,postinc1
 17815  01322E  006F FF7B FFE6     	movff	postinc2,postinc1
 17816  013234  006F FF7B FFE6     	movff	postinc2,postinc1
 17817  01323A  006F FF7B FFE6     	movff	postinc2,postinc1
 17818  013240  006F FF7B FFE6     	movff	postinc2,postinc1
 17819                           
 17820                           ;stkvar	_fp @ sp[(-41)+-2]
 17821  013246  0ED5               	movlw	-43
 17822  013248  006F FF8F FFE6     	movff	plusw1,postinc1
 17823  01324E  006F FF8F FFE6     	movff	plusw1,postinc1
 17824  013254  ECBC  F0B6         	call	_xtoa	;wreg free
 17825  013258  D105               	goto	l2640
 17826  01325A                     l14074:
 17827                           
 17828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 17829  01325A  0E02               	movlw	2
 17830  01325C  6EE6               	movwf	postinc1,c
 17831  01325E  0E00               	movlw	0
 17832  013260  6EE6               	movwf	postinc1,c
 17833  013262  0EF6               	movlw	low STR_121
 17834  013264  6EE6               	movwf	postinc1,c
 17835  013266  0EFF               	movlw	high STR_121
 17836  013268  6EE6               	movwf	postinc1,c
 17837                           
 17838                           ;stkvar	_fmt @ sp[(-36)+-4]
 17839  01326A  0ED8               	movlw	-40
 17840  01326C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17841  013272  0ED9               	movlw	-39
 17842  013274  006F FF8F FFDA     	movff	plusw1,fsr2h
 17843  01327A  006F FF78  F00B    	movff	postinc2,btemp+10
 17844  013280  006F FF74  F00C    	movff	postdec2,btemp+11
 17845  013286  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17846  01328C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17847  013292  EC83  F0C6         	call	_strncmp	;wreg free
 17848  013296  5001               	movf	btemp^0,w,c
 17849  013298  1002               	iorwf	(btemp+1)^0,w,c
 17850  01329A  B4D8               	btfsc	status,2,c
 17851  01329C  D022               	goto	u13420
 17852  01329E  0E02               	movlw	2
 17853  0132A0  6EE6               	movwf	postinc1,c
 17854  0132A2  0E00               	movlw	0
 17855  0132A4  6EE6               	movwf	postinc1,c
 17856  0132A6  0EE7               	movlw	low STR_125
 17857  0132A8  6EE6               	movwf	postinc1,c
 17858  0132AA  0EFF               	movlw	high STR_125
 17859  0132AC  6EE6               	movwf	postinc1,c
 17860                           
 17861                           ;stkvar	_fmt @ sp[(-36)+-4]
 17862  0132AE  0ED8               	movlw	-40
 17863  0132B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 17864  0132B6  0ED9               	movlw	-39
 17865  0132B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 17866  0132BE  006F FF78  F00B    	movff	postinc2,btemp+10
 17867  0132C4  006F FF74  F00C    	movff	postdec2,btemp+11
 17868  0132CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17869  0132D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17870  0132D6  EC83  F0C6         	call	_strncmp	;wreg free
 17871  0132DA  5001               	movf	btemp^0,w,c
 17872  0132DC  1002               	iorwf	(btemp+1)^0,w,c
 17873  0132DE  A4D8               	btfss	status,2,c
 17874  0132E0  D058               	goto	l14088
 17875  0132E2                     u13420:
 17876                           
 17877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 17878                           ;stkvar	_fmt @ sp[(-32)+-4]
 17879  0132E2  0EDC               	movlw	-36
 17880  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 17881  0132EA  0EDD               	movlw	-35
 17882  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 17883  0132F2  006F FF78  F00B    	movff	postinc2,btemp+10
 17884  0132F8  006F FF74  F00C    	movff	postdec2,btemp+11
 17885  0132FE  0E01               	movlw	1
 17886  013300  260B               	addwf	(btemp+10)^0,f,c
 17887  013302  0E00               	movlw	0
 17888  013304  220C               	addwfc	(btemp+11)^0,f,c
 17889  013306  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17890  01330C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17891  013312                     	if	0	;tblptru may be non-zero
 17892  013312                     	endif
 17893  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17894  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 17895  013314  6EF8               	movwf	tblptru,c
 17896  013316                     	endif
 17897                           
 17898                           ;stkvar	_c @ sp[(-32)+31]
 17899  013316  0008               	tblrd		*
 17900  013318  0EFF               	movlw	-1
 17901  01331A  006F FFD7 FFE3     	movff	tablat,plusw1
 17902                           
 17903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 17904                           ;stkvar	_fmt @ sp[(-32)+-4]
 17905  013320  0EDC               	movlw	-36
 17906  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 17907  013328  0EDD               	movlw	-35
 17908  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17909  013330  0E02               	movlw	2
 17910  013332  26DE               	addwf	postinc2,f,c
 17911  013334  0E00               	movlw	0
 17912  013336  22DD               	addwfc	postdec2,f,c
 17913                           
 17914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 17915                           ;stkvar	_ap @ sp[(-32)+-6]
 17916  013338  0EDA               	movlw	-38
 17917  01333A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17918  013340  0EDB               	movlw	-37
 17919  013342  006F FF8F FFDA     	movff	plusw1,fsr2h
 17920  013348  0E04               	movlw	4
 17921  01334A  5EDE               	subwf	postinc2,f,c
 17922  01334C  0E00               	movlw	0
 17923  01334E  5ADD               	subwfb	postdec2,f,c
 17924  013350  006F FF78  F00B    	movff	postinc2,btemp+10
 17925  013356  006F FF74  F00C    	movff	postdec2,btemp+11
 17926  01335C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17927  013362  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17928  013368  006F FF78  F009    	movff	postinc2,btemp+8
 17929  01336E  006F FF78  F00A    	movff	postinc2,btemp+9
 17930  013374  006F FF78  F00B    	movff	postinc2,btemp+10
 17931  01337A  006F FF78  F00C    	movff	postinc2,btemp+11
 17932  013380  5009               	movf	(btemp+8)^0,w,c
 17933  013382  6E11               	movwf	(btemp+16)^0,c
 17934  013384  500A               	movf	(btemp+9)^0,w,c
 17935  013386  6E12               	movwf	(btemp+17)^0,c
 17936  013388  500B               	movf	(btemp+10)^0,w,c
 17937  01338A  6E13               	movwf	(btemp+18)^0,c
 17938  01338C  500C               	movf	(btemp+11)^0,w,c
 17939  01338E  6E14               	movwf	(btemp+19)^0,c
 17940  013390  D714               	goto	L17
 17941  013392                     l14088:
 17942                           
 17943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 17944                           ;stkvar	_fmt @ sp[(-32)+-4]
 17945  013392  0EDC               	movlw	-36
 17946  013394  006F FF8F FFD9     	movff	plusw1,fsr2l
 17947  01339A  0EDD               	movlw	-35
 17948  01339C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17949  0133A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 17950  0133A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 17951  0133AE                     	if	0	;tblptru may be non-zero
 17952  0133AE                     	endif
 17953  0133AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17954  0133AE  0E00               	movlw	low (__mediumconst shr (0+16))
 17955  0133B0  6EF8               	movwf	tblptru,c
 17956  0133B2                     	endif
 17957  0133B2  0008               	tblrd		*
 17958  0133B4  50F5               	movf	tablat,w,c
 17959  0133B6  0A25               	xorlw	37
 17960  0133B8  A4D8               	btfss	status,2,c
 17961  0133BA  D01A               	goto	l14098
 17962                           
 17963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 17964                           ;stkvar	_fmt @ sp[(-32)+-4]
 17965  0133BC  0EDC               	movlw	-36
 17966  0133BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 17967  0133C4  0EDD               	movlw	-35
 17968  0133C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 17969  0133CC  2ADE               	incf	postinc2,f,c
 17970  0133CE  0E00               	movlw	0
 17971  0133D0  22DD               	addwfc	postdec2,f,c
 17972                           
 17973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 17974                           ;stkvar	_fp @ sp[(-32)+-2]
 17975  0133D2  0EDE               	movlw	-34
 17976  0133D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17977  0133DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17978  0133E0  0E25               	movlw	37
 17979  0133E2  6EE6               	movwf	postinc1,c
 17980  0133E4  0E00               	movlw	0
 17981  0133E6  6EE6               	movwf	postinc1,c
 17982  0133E8  EC7C  F0D5         	call	_fputc	;wreg free
 17983  0133EC                     l14094:
 17984                           
 17985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 17986  0133EC  0E01               	movlw	1
 17987  0133EE  D00C               	goto	L18
 17988  0133F0                     l14098:
 17989                           
 17990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 17991                           ;stkvar	_fmt @ sp[(-32)+-4]
 17992  0133F0  0EDC               	movlw	-36
 17993  0133F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17994  0133F8  0EDD               	movlw	-35
 17995  0133FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17996  013400  2ADE               	incf	postinc2,f,c
 17997  013402  0E00               	movlw	0
 17998  013404  22DD               	addwfc	postdec2,f,c
 17999                           
 18000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 18001  013406  0E00               	movlw	0
 18002  013408                     L18:
 18003  013408  6E01               	movwf	btemp^0,c
 18004  01340A  0E00               	movlw	0
 18005  01340C  6E02               	movwf	(btemp+1)^0,c
 18006  01340E  D02A               	goto	l2640
 18007  013410                     l14104:
 18008                           
 18009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 18010                           ;stkvar	_fp @ sp[(-32)+-2]
 18011  013410  0EDE               	movlw	-34
 18012  013412  006F FF8F FFE6     	movff	plusw1,postinc1
 18013  013418  006F FF8F FFE6     	movff	plusw1,postinc1
 18014                           
 18015                           ;stkvar	_fmt @ sp[(-34)+-4]
 18016  01341E  0EDA               	movlw	-38
 18017  013420  006F FF8F FFD9     	movff	plusw1,fsr2l
 18018  013426  0EDB               	movlw	-37
 18019  013428  006F FF8F FFDA     	movff	plusw1,fsr2h
 18020  01342E  006F FF7B FFF6     	movff	postinc2,tblptrl
 18021  013434  006F FF77 FFF7     	movff	postdec2,tblptrh
 18022  01343A                     	if	0	;tblptru may be non-zero
 18023  01343A                     	endif
 18024  01343A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18025  01343A  0E00               	movlw	low (__mediumconst shr (0+16))
 18026  01343C  6EF8               	movwf	tblptru,c
 18027  01343E                     	endif
 18028  01343E  0008               	tblrd		*
 18029  013440  50F5               	movf	tablat,w,c
 18030  013442  6EE6               	movwf	postinc1,c
 18031  013444  0E00               	movlw	0
 18032  013446  6EE6               	movwf	postinc1,c
 18033  013448  EC7C  F0D5         	call	_fputc	;wreg free
 18034                           
 18035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 18036                           ;stkvar	_fmt @ sp[(-32)+-4]
 18037  01344C  0EDC               	movlw	-36
 18038  01344E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18039  013454  0EDD               	movlw	-35
 18040  013456  006F FF8F FFDA     	movff	plusw1,fsr2h
 18041  01345C  2ADE               	incf	postinc2,f,c
 18042  01345E  0E00               	movlw	0
 18043  013460  22DD               	addwfc	postdec2,f,c
 18044  013462  D7C4               	goto	l14094
 18045  013464                     l2640:
 18046                           
 18047                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 18048  013464  0EDA               	movlw	218
 18049  013466  26E1               	addwf	fsr1l,f,c
 18050  013468  0EFF               	movlw	255
 18051  01346A  22E2               	addwfc	fsr1h,f,c
 18052  01346C  0012               	return		;funcret
 18053  01346E                     __end_of_vfpfcnvrt:
 18054                           	opt callstack 0
 18055                           
 18056 ;; *************** function _xtoa *****************
 18057 ;; Defined at:
 18058 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18059 ;; Parameters:    Size  Location     Type
 18060 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18061 ;;		 -> f(6), NULL(0), 
 18062 ;;  d               8  [STACK] unsigned long long 
 18063 ;;  x               1  [STACK] unsigned char 
 18064 ;; Auto vars:     Size  Location     Type
 18065 ;;  n               8  [STACK] unsigned long long 
 18066 ;;  c               2  [STACK] int 
 18067 ;;  i               2  [STACK] int 
 18068 ;;  w               2  [STACK] int 
 18069 ;;  p               2  [STACK] int 
 18070 ;; Return value:  Size  Location     Type
 18071 ;;                  2  [STACK] int 
 18072 ;; Registers used:
 18073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18074 ;; Tracked objects:
 18075 ;;		On entry : 0/0
 18076 ;;		On exit  : 0/0
 18077 ;;		Unchanged: 0/0
 18078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18083 ;;Total ram usage:        0 bytes
 18084 ;; Hardware stack levels used:    1
 18085 ;; Hardware stack levels required when called:   20
 18086 ;; This function calls:
 18087 ;;		_isalpha
 18088 ;;		_isupper
 18089 ;;		_pad
 18090 ;;		_toupper
 18091 ;; This function is called by:
 18092 ;;		_vfpfcnvrt
 18093 ;; This function uses a reentrant model
 18094 ;;
 18095                           
 18096                           	psect	text68
 18097  016D78                     __ptext68:
 18098                           	opt callstack 0
 18099  016D78                     _xtoa:
 18100                           	opt callstack 0
 18101                           
 18102                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18103  016D78  0E14               	movlw	20
 18104  016D7A  26E1               	addwf	fsr1l,f,c
 18105  016D7C  0E00               	movlw	0
 18106  016D7E  22E2               	addwfc	fsr1h,f,c
 18107                           
 18108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 18109                           
 18110                           ;incstack = 0
 18111 ;; hardware stack exceeded
 18112  016D80  AE3D               	btfss	(_prec+1)^0,7,c
 18113                           
 18114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 18115  016D82  923E               	bcf	_flags^0,1,c
 18116                           
 18117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 18118  016D84  BE3D               	btfsc	(_prec+1)^0,7,c
 18119  016D86  D005               	goto	u12960
 18120  016D88  503D               	movf	(_prec+1)^0,w,c
 18121  016D8A  E110               	bnz	l13824
 18122  016D8C  043C               	decf	_prec^0,w,c
 18123  016D8E  B0D8               	btfsc	status,0,c
 18124  016D90  D00D               	goto	l13824
 18125  016D92                     u12960:
 18126  016D92  0E01               	movlw	1
 18127  016D94  6E0B               	movwf	(btemp+10)^0,c
 18128  016D96  0E00               	movlw	0
 18129  016D98  6E0C               	movwf	(btemp+11)^0,c
 18130                           
 18131                           ;stkvar	_p @ sp[(-20)+18]
 18132  016D9A  0EFE               	movlw	-2
 18133  016D9C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18134  016DA2  0EFF               	movlw	-1
 18135  016DA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18136  016DAA  D008               	goto	l2590
 18137  016DAC                     l13824:
 18138                           
 18139                           ;stkvar	_p @ sp[(-20)+18]
 18140  016DAC  0EFE               	movlw	-2
 18141  016DAE  0060  F0F3  FFE3   	movff	_prec,plusw1
 18142  016DB4  0EFF               	movlw	-1
 18143  016DB6  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18144  016DBC                     l2590:
 18145                           
 18146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 18147                           ;stkvar	_w @ sp[(-20)+16]
 18148  016DBC  0EFC               	movlw	-4
 18149  016DBE  0060  F0EB  FFE3   	movff	_width,plusw1
 18150  016DC4  0EFD               	movlw	-3
 18151  016DC6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18152                           
 18153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 18154  016DCC  A83E               	btfss	_flags^0,4,c
 18155  016DCE  D00B               	goto	l13830
 18156                           
 18157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 18158                           ;stkvar	_w @ sp[(-20)+16]
 18159  016DD0  50E1               	movf	fsr1l,w,c
 18160  016DD2  0FFC               	addlw	-4
 18161  016DD4  6ED9               	movwf	fsr2l,c
 18162  016DD6  50E2               	movf	fsr1h,w,c
 18163  016DD8  6EDA               	movwf	fsr2h,c
 18164  016DDA  0EFF               	movlw	255
 18165  016DDC  22DA               	addwfc	fsr2h,f,c
 18166  016DDE  0EFE               	movlw	254
 18167  016DE0  26DE               	addwf	postinc2,f,c
 18168  016DE2  0EFF               	movlw	255
 18169  016DE4  22DD               	addwfc	postdec2,f,c
 18170  016DE6                     l13830:
 18171                           
 18172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 18173                           ;stkvar	_d @ sp[(-20)+-10]
 18174  016DE6  0EE2               	movlw	226
 18175  016DE8  24E1               	addwf	fsr1l,w,c
 18176  016DEA  6ED9               	movwf	fsr2l,c
 18177  016DEC  0EFF               	movlw	255
 18178  016DEE  20E2               	addwfc	fsr1h,w,c
 18179  016DF0  6EDA               	movwf	fsr2h,c
 18180                           
 18181                           ;stkvar	_n @ sp[(-20)+4]
 18182  016DF2  0E08               	movlw	8
 18183  016DF4  6E01               	movwf	btemp^0,c
 18184  016DF6  0EF0               	movlw	-16
 18185  016DF8                     us1298999:
 18186  016DF8  006F FF7B FFE3     	movff	postinc2,plusw1
 18187  016DFE  28E8               	incf	wreg,w,c
 18188  016E00  2E01               	decfsz	btemp^0,f,c
 18189  016E02  D7FA               	bra	us1298999
 18190                           
 18191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 18192  016E04  0E4F               	movlw	79
 18193  016E06  6E0B               	movwf	(btemp+10)^0,c
 18194  016E08  0E00               	movlw	0
 18195  016E0A  6E0C               	movwf	(btemp+11)^0,c
 18196                           
 18197                           ;stkvar	_i @ sp[(-20)+14]
 18198  016E0C  0EFA               	movlw	-6
 18199  016E0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18200  016E14  0EFB               	movlw	-5
 18201  016E16  0060  F033  FFE3   	movff	btemp+11,plusw1
 18202                           
 18203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 18204  016E1C  0102               	movlb	2	; () banked
 18205  016E1E  6B92               	clrf	(_dbuf+79)& (0+255),b
 18206                           
 18207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18208  016E20  D0EE               	goto	l13868
 18209  016E22                     l13836:
 18210                           
 18211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 18212                           ;stkvar	_i @ sp[(-20)+14]
 18213  016E22  50E1               	movf	fsr1l,w,c
 18214  016E24  0FFA               	addlw	-6
 18215  016E26  6ED9               	movwf	fsr2l,c
 18216  016E28  50E2               	movf	fsr1h,w,c
 18217  016E2A  6EDA               	movwf	fsr2h,c
 18218  016E2C  0EFF               	movlw	255
 18219  016E2E  22DA               	addwfc	fsr2h,f,c
 18220  016E30  06DE               	decf	postinc2,f,c
 18221  016E32  0E00               	movlw	0
 18222  016E34  5ADD               	subwfb	postdec2,f,c
 18223                           
 18224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 18225                           ;stkvar	_n @ sp[(-20)+4]
 18226  016E36  0EF0               	movlw	-16
 18227  016E38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18228  016E3E  0EF1               	movlw	-15
 18229  016E40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18230  016E46  0E0F               	movlw	15
 18231  016E48  160B               	andwf	(btemp+10)^0,f,c
 18232  016E4A  0E00               	movlw	0
 18233  016E4C  160C               	andwf	(btemp+11)^0,f,c
 18234                           
 18235                           ;stkvar	_c @ sp[(-20)+12]
 18236  016E4E  0EF8               	movlw	-8
 18237  016E50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18238  016E56  0EF9               	movlw	-7
 18239  016E58  0060  F033  FFE3   	movff	btemp+11,plusw1
 18240                           
 18241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 18242                           ;stkvar	_c @ sp[(-20)+12]
 18243  016E5E  0EF9               	movlw	-7
 18244  016E60  BEE3               	btfsc	plusw1,7,c
 18245  016E62  D00F               	goto	l13844
 18246  016E64  0EF9               	movlw	-7
 18247  016E66  50E3               	movf	plusw1,w,c
 18248  016E68  E108               	bnz	u12990
 18249  016E6A  0EF8               	movlw	-8
 18250  016E6C  006F FF8C  F001    	movff	plusw1,btemp
 18251  016E72  0E0A               	movlw	10
 18252  016E74  5E01               	subwf	btemp^0,f,c
 18253  016E76  A0D8               	btfss	status,0,c
 18254  016E78  D004               	goto	l13844
 18255  016E7A                     u12990:
 18256                           
 18257                           ;stkvar	_c @ sp[(-20)+12]
 18258  016E7A  0EF8               	movlw	-8
 18259  016E7C  50E3               	movf	plusw1,w,c
 18260  016E7E  0F57               	addlw	87
 18261  016E80  D003               	goto	L19
 18262  016E82                     l13844:
 18263                           
 18264                           ;stkvar	_c @ sp[(-20)+12]
 18265  016E82  0EF8               	movlw	-8
 18266  016E84  50E3               	movf	plusw1,w,c
 18267  016E86  0F30               	addlw	48
 18268  016E88                     L19:
 18269  016E88  6E0B               	movwf	(btemp+10)^0,c
 18270  016E8A  0EF9               	movlw	-7
 18271  016E8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18272  016E92  0E00               	movlw	0
 18273  016E94  220C               	addwfc	(btemp+11)^0,f,c
 18274                           
 18275                           ;stkvar	_c @ sp[(-20)+12]
 18276  016E96  0EF8               	movlw	-8
 18277  016E98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18278  016E9E  0EF9               	movlw	-7
 18279  016EA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18280  016EA6  0EBF               	movlw	191
 18281  016EA8  6E0B               	movwf	(btemp+10)^0,c
 18282  016EAA  0EFF               	movlw	255
 18283  016EAC  6E0C               	movwf	(btemp+11)^0,c
 18284                           
 18285                           ;stkvar	_x @ sp[(-20)+-11]
 18286  016EAE  0EE1               	movlw	-31
 18287  016EB0  50E3               	movf	plusw1,w,c
 18288  016EB2  6E09               	movwf	(btemp+8)^0,c
 18289  016EB4  6A0A               	clrf	(btemp+9)^0,c
 18290  016EB6  500B               	movf	(btemp+10)^0,w,c
 18291  016EB8  2609               	addwf	(btemp+8)^0,f,c
 18292  016EBA  500C               	movf	(btemp+11)^0,w,c
 18293  016EBC  220A               	addwfc	(btemp+9)^0,f,c
 18294  016EBE  500A               	movf	(btemp+9)^0,w,c
 18295  016EC0  E106               	bnz	u13000
 18296  016EC2  0E1A               	movlw	26
 18297  016EC4  5C09               	subwf	(btemp+8)^0,w,c
 18298  016EC6  B0D8               	btfsc	status,0,c
 18299  016EC8  D002               	goto	u13000
 18300  016ECA  0E01               	movlw	1
 18301  016ECC  D001               	goto	u13010
 18302  016ECE                     u13000:
 18303  016ECE  0E00               	movlw	0
 18304  016ED0                     u13010:
 18305  016ED0  6E0B               	movwf	(btemp+10)^0,c
 18306  016ED2  6A0C               	clrf	(btemp+11)^0,c
 18307                           
 18308                           ;stkvar	_xtoa$6225 @ sp[(-20)+2]
 18309  016ED4  0EEE               	movlw	-18
 18310  016ED6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18311  016EDC  0EEF               	movlw	-17
 18312  016EDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18313                           
 18314                           ;stkvar	_xtoa$6225 @ sp[(-20)+2]
 18315  016EE4  0EEE               	movlw	-18
 18316  016EE6  006F FF8C  F001    	movff	plusw1,btemp
 18317  016EEC  0EEF               	movlw	-17
 18318  016EEE  50E3               	movf	plusw1,w,c
 18319  016EF0  1001               	iorwf	btemp^0,w,c
 18320  016EF2  B4D8               	btfsc	status,2,c
 18321  016EF4  D041               	goto	l13860
 18322  016EF6  0E9F               	movlw	159
 18323  016EF8  6E0B               	movwf	(btemp+10)^0,c
 18324  016EFA  0EFF               	movlw	255
 18325  016EFC  6E0C               	movwf	(btemp+11)^0,c
 18326                           
 18327                           ;stkvar	_c @ sp[(-20)+12]
 18328  016EFE  0EF8               	movlw	-8
 18329  016F00  006F FF8C  F009    	movff	plusw1,btemp+8
 18330  016F06  0EF9               	movlw	-7
 18331  016F08  006F FF8C  F00A    	movff	plusw1,btemp+9
 18332  016F0E  0E20               	movlw	32
 18333  016F10  1209               	iorwf	(btemp+8)^0,f,c
 18334  016F12  0E00               	movlw	0
 18335  016F14  120A               	iorwf	(btemp+9)^0,f,c
 18336  016F16  500B               	movf	(btemp+10)^0,w,c
 18337  016F18  2609               	addwf	(btemp+8)^0,f,c
 18338  016F1A  500C               	movf	(btemp+11)^0,w,c
 18339  016F1C  220A               	addwfc	(btemp+9)^0,f,c
 18340  016F1E  500A               	movf	(btemp+9)^0,w,c
 18341  016F20  E106               	bnz	u13030
 18342  016F22  0E1A               	movlw	26
 18343  016F24  5C09               	subwf	(btemp+8)^0,w,c
 18344  016F26  B0D8               	btfsc	status,0,c
 18345  016F28  D002               	goto	u13030
 18346  016F2A  0E01               	movlw	1
 18347  016F2C  D001               	goto	u13040
 18348  016F2E                     u13030:
 18349  016F2E  0E00               	movlw	0
 18350  016F30                     u13040:
 18351  016F30  6E0B               	movwf	(btemp+10)^0,c
 18352  016F32  6A0C               	clrf	(btemp+11)^0,c
 18353                           
 18354                           ;stkvar	_xtoa$6226 @ sp[(-20)+0]
 18355  016F34  0EEC               	movlw	-20
 18356  016F36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18357  016F3C  0EED               	movlw	-19
 18358  016F3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18359                           
 18360                           ;stkvar	_xtoa$6226 @ sp[(-20)+0]
 18361  016F44  0EEC               	movlw	-20
 18362  016F46  006F FF8C  F001    	movff	plusw1,btemp
 18363  016F4C  0EED               	movlw	-19
 18364  016F4E  50E3               	movf	plusw1,w,c
 18365  016F50  1001               	iorwf	btemp^0,w,c
 18366  016F52  B4D8               	btfsc	status,2,c
 18367  016F54  D011               	goto	l13860
 18368                           
 18369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 18370                           ;stkvar	_c @ sp[(-20)+12]
 18371  016F56  0EF8               	movlw	-8
 18372  016F58  006F FF8F FFE6     	movff	plusw1,postinc1
 18373  016F5E  006F FF8F FFE6     	movff	plusw1,postinc1
 18374  016F64  ECD9  F0E1         	call	_toupper	;wreg free
 18375                           
 18376                           ;stkvar	_c @ sp[(-20)+12]
 18377  016F68  0EF8               	movlw	-8
 18378  016F6A  0060  F007  FFE3   	movff	btemp,plusw1
 18379  016F70  0EF9               	movlw	-7
 18380  016F72  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18381  016F78                     l13860:
 18382                           
 18383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 18384                           ;stkvar	_c @ sp[(-20)+12]
 18385                           ;stkvar	_i @ sp[(-20)+14]
 18386  016F78  0EFA               	movlw	-6
 18387  016F7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18388  016F80  0EFB               	movlw	-5
 18389  016F82  006F FF8C  F00C    	movff	plusw1,btemp+11
 18390  016F88  0E43               	movlw	low _dbuf
 18391  016F8A  240B               	addwf	(btemp+10)^0,w,c
 18392  016F8C  6ED9               	movwf	fsr2l,c
 18393  016F8E  0E02               	movlw	high _dbuf
 18394  016F90  200C               	addwfc	(btemp+11)^0,w,c
 18395  016F92  6EDA               	movwf	fsr2h,c
 18396  016F94  0EF8               	movlw	-8
 18397  016F96  006F FF8F FFDF     	movff	plusw1,indf2
 18398                           
 18399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 18400                           ;stkvar	_p @ sp[(-20)+18]
 18401  016F9C  50E1               	movf	fsr1l,w,c
 18402  016F9E  0FFE               	addlw	-2
 18403  016FA0  6ED9               	movwf	fsr2l,c
 18404  016FA2  50E2               	movf	fsr1h,w,c
 18405  016FA4  6EDA               	movwf	fsr2h,c
 18406  016FA6  0EFF               	movlw	255
 18407  016FA8  22DA               	addwfc	fsr2h,f,c
 18408  016FAA  06DE               	decf	postinc2,f,c
 18409  016FAC  0E00               	movlw	0
 18410  016FAE  5ADD               	subwfb	postdec2,f,c
 18411                           
 18412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 18413                           ;stkvar	_w @ sp[(-20)+16]
 18414  016FB0  50E1               	movf	fsr1l,w,c
 18415  016FB2  0FFC               	addlw	-4
 18416  016FB4  6ED9               	movwf	fsr2l,c
 18417  016FB6  50E2               	movf	fsr1h,w,c
 18418  016FB8  6EDA               	movwf	fsr2h,c
 18419  016FBA  0EFF               	movlw	255
 18420  016FBC  22DA               	addwfc	fsr2h,f,c
 18421  016FBE  06DE               	decf	postinc2,f,c
 18422  016FC0  0E00               	movlw	0
 18423  016FC2  5ADD               	subwfb	postdec2,f,c
 18424                           
 18425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 18426  016FC4  0E04               	movlw	4
 18427  016FC6  6E0C               	movwf	(btemp+11)^0,c
 18428                           
 18429                           ;stkvar	_n @ sp[(-20)+4]
 18430  016FC8  50E1               	movf	fsr1l,w,c
 18431  016FCA  0FF0               	addlw	-16
 18432  016FCC  6ED9               	movwf	fsr2l,c
 18433  016FCE  50E2               	movf	fsr1h,w,c
 18434  016FD0  6EDA               	movwf	fsr2h,c
 18435  016FD2  0EFF               	movlw	255
 18436  016FD4  22DA               	addwfc	fsr2h,f,c
 18437  016FD6  280C               	incf	(btemp+11)^0,w,c
 18438  016FD8  52DE               	movf	postinc2,f,c
 18439  016FDA  D00F               	goto	u13060
 18440  016FDC                     u13065:
 18441  016FDC  52DE               	movf	postinc2,f,c
 18442  016FDE  52DE               	movf	postinc2,f,c
 18443  016FE0  52DE               	movf	postinc2,f,c
 18444  016FE2  52DE               	movf	postinc2,f,c
 18445  016FE4  52DE               	movf	postinc2,f,c
 18446  016FE6  52DE               	movf	postinc2,f,c
 18447  016FE8  90D8               	bcf	status,0,c
 18448  016FEA  32DD               	rrcf	postdec2,f,c
 18449  016FEC  32DD               	rrcf	postdec2,f,c
 18450  016FEE  32DD               	rrcf	postdec2,f,c
 18451  016FF0  32DD               	rrcf	postdec2,f,c
 18452  016FF2  32DD               	rrcf	postdec2,f,c
 18453  016FF4  32DD               	rrcf	postdec2,f,c
 18454  016FF6  32DD               	rrcf	postdec2,f,c
 18455  016FF8  32DE               	rrcf	postinc2,f,c
 18456  016FFA                     u13060:
 18457  016FFA  2EE8               	decfsz	wreg,f,c
 18458  016FFC  D7EF               	goto	u13065
 18459  016FFE                     l13868:
 18460                           
 18461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18462                           ;stkvar	_i @ sp[(-20)+14]
 18463  016FFE  0EFB               	movlw	-5
 18464  017000  BEE3               	btfsc	plusw1,7,c
 18465  017002  D03A               	goto	u13110
 18466  017004  0EFB               	movlw	-5
 18467  017006  50E3               	movf	plusw1,w,c
 18468  017008  E108               	bnz	u13070
 18469  01700A  0EFA               	movlw	-6
 18470  01700C  006F FF8C  F001    	movff	plusw1,btemp
 18471  017012  0E02               	movlw	2
 18472  017014  5E01               	subwf	btemp^0,f,c
 18473  017016  A0D8               	btfss	status,0,c
 18474  017018  D02F               	goto	u13110
 18475  01701A                     u13070:
 18476                           
 18477                           ;stkvar	_n @ sp[(-20)+4]
 18478  01701A  0EF0               	movlw	-16
 18479  01701C  50E3               	movf	plusw1,w,c
 18480  01701E  E115               	bnz	u13081
 18481  017020  0EF1               	movlw	-15
 18482  017022  50E3               	movf	plusw1,w,c
 18483  017024  E112               	bnz	u13081
 18484  017026  0EF2               	movlw	-14
 18485  017028  50E3               	movf	plusw1,w,c
 18486  01702A  E10F               	bnz	u13081
 18487  01702C  0EF3               	movlw	-13
 18488  01702E  50E3               	movf	plusw1,w,c
 18489  017030  E10C               	bnz	u13081
 18490  017032  0EF4               	movlw	-12
 18491  017034  50E3               	movf	plusw1,w,c
 18492  017036  E109               	bnz	u13081
 18493  017038  0EF5               	movlw	-11
 18494  01703A  50E3               	movf	plusw1,w,c
 18495  01703C  E106               	bnz	u13081
 18496  01703E  0EF6               	movlw	-10
 18497  017040  50E3               	movf	plusw1,w,c
 18498  017042  E103               	bnz	u13081
 18499  017044  0EF7               	movlw	-9
 18500  017046  50E3               	movf	plusw1,w,c
 18501  017048  A4D8               	btfss	status,2,c
 18502  01704A                     u13081:
 18503  01704A  D6EB               	goto	l13836
 18504                           
 18505                           ;stkvar	_p @ sp[(-20)+18]
 18506  01704C  0EFF               	movlw	-1
 18507  01704E  BEE3               	btfsc	plusw1,7,c
 18508  017050  D007               	goto	u13090
 18509  017052  0EFF               	movlw	-1
 18510  017054  50E3               	movf	plusw1,w,c
 18511  017056  E103               	bnz	u13091
 18512  017058  0EFE               	movlw	-2
 18513  01705A  04E3               	decf	plusw1,w,c
 18514  01705C  B0D8               	btfsc	status,0,c
 18515  01705E                     u13091:
 18516  01705E  D6E1               	goto	l13836
 18517  017060                     u13090:
 18518                           
 18519                           ;stkvar	_w @ sp[(-20)+16]
 18520  017060  0EFD               	movlw	-3
 18521  017062  BEE3               	btfsc	plusw1,7,c
 18522  017064  D009               	goto	u13110
 18523  017066  0EFD               	movlw	-3
 18524  017068  50E3               	movf	plusw1,w,c
 18525  01706A  E104               	bnz	u13100
 18526  01706C  0EFC               	movlw	-4
 18527  01706E  04E3               	decf	plusw1,w,c
 18528  017070  A0D8               	btfss	status,0,c
 18529  017072  D002               	goto	u13110
 18530  017074                     u13100:
 18531  017074  B23E               	btfsc	_flags^0,1,c
 18532  017076  D6D5               	goto	l13836
 18533  017078                     u13110:
 18534                           
 18535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 18536  017078  A83E               	btfss	_flags^0,4,c
 18537  01707A  D036               	goto	l13884
 18538                           
 18539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 18540                           ;stkvar	_i @ sp[(-20)+14]
 18541  01707C  50E1               	movf	fsr1l,w,c
 18542  01707E  0FFA               	addlw	-6
 18543  017080  6ED9               	movwf	fsr2l,c
 18544  017082  50E2               	movf	fsr1h,w,c
 18545  017084  6EDA               	movwf	fsr2h,c
 18546  017086  0EFF               	movlw	255
 18547  017088  22DA               	addwfc	fsr2h,f,c
 18548  01708A  06DE               	decf	postinc2,f,c
 18549  01708C  0E00               	movlw	0
 18550  01708E  5ADD               	subwfb	postdec2,f,c
 18551                           
 18552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 18553                           ;stkvar	_x @ sp[(-20)+-11]
 18554                           ;stkvar	_i @ sp[(-20)+14]
 18555  017090  0EFA               	movlw	-6
 18556  017092  006F FF8C  F00B    	movff	plusw1,btemp+10
 18557  017098  0EFB               	movlw	-5
 18558  01709A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18559  0170A0  0E43               	movlw	low _dbuf
 18560  0170A2  240B               	addwf	(btemp+10)^0,w,c
 18561  0170A4  6ED9               	movwf	fsr2l,c
 18562  0170A6  0E02               	movlw	high _dbuf
 18563  0170A8  200C               	addwfc	(btemp+11)^0,w,c
 18564  0170AA  6EDA               	movwf	fsr2h,c
 18565  0170AC  0EE1               	movlw	-31
 18566  0170AE  006F FF8F FFDF     	movff	plusw1,indf2
 18567                           
 18568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 18569                           ;stkvar	_i @ sp[(-20)+14]
 18570  0170B4  50E1               	movf	fsr1l,w,c
 18571  0170B6  0FFA               	addlw	-6
 18572  0170B8  6ED9               	movwf	fsr2l,c
 18573  0170BA  50E2               	movf	fsr1h,w,c
 18574  0170BC  6EDA               	movwf	fsr2h,c
 18575  0170BE  0EFF               	movlw	255
 18576  0170C0  22DA               	addwfc	fsr2h,f,c
 18577  0170C2  06DE               	decf	postinc2,f,c
 18578  0170C4  0E00               	movlw	0
 18579  0170C6  5ADD               	subwfb	postdec2,f,c
 18580                           
 18581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 18582                           ;stkvar	_i @ sp[(-20)+14]
 18583  0170C8  0EFA               	movlw	-6
 18584  0170CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18585  0170D0  0EFB               	movlw	-5
 18586  0170D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18587  0170D8  0E43               	movlw	low _dbuf
 18588  0170DA  240B               	addwf	(btemp+10)^0,w,c
 18589  0170DC  6ED9               	movwf	fsr2l,c
 18590  0170DE  0E02               	movlw	high _dbuf
 18591  0170E0  200C               	addwfc	(btemp+11)^0,w,c
 18592  0170E2  6EDA               	movwf	fsr2h,c
 18593  0170E4  0E30               	movlw	48
 18594  0170E6  6EDF               	movwf	indf2,c
 18595  0170E8                     l13884:
 18596                           
 18597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 18598                           ;stkvar	_w @ sp[(-20)+16]
 18599  0170E8  0EFC               	movlw	-4
 18600  0170EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18601  0170F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18602                           
 18603                           ;stkvar	_i @ sp[(-22)+14]
 18604  0170F6  0E43               	movlw	low _dbuf
 18605  0170F8  6E0B               	movwf	(btemp+10)^0,c
 18606  0170FA  0E02               	movlw	high _dbuf
 18607  0170FC  6E0C               	movwf	(btemp+11)^0,c
 18608  0170FE  0EF8               	movlw	-8
 18609  017100  50E3               	movf	plusw1,w,c
 18610  017102  260B               	addwf	(btemp+10)^0,f,c
 18611  017104  0EF9               	movlw	-7
 18612  017106  50E3               	movf	plusw1,w,c
 18613  017108  220C               	addwfc	(btemp+11)^0,f,c
 18614  01710A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18615  017110  0060  F033  FFE6   	movff	btemp+11,postinc1
 18616                           
 18617                           ;stkvar	_fp @ sp[(-24)+-2]
 18618  017116  0EE6               	movlw	-26
 18619  017118  006F FF8F FFE6     	movff	plusw1,postinc1
 18620  01711E  006F FF8F FFE6     	movff	plusw1,postinc1
 18621  017124  ECB2  F0D7         	call	_pad	;wreg free
 18622                           
 18623                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 18624  017128  0EE1               	movlw	225
 18625  01712A  26E1               	addwf	fsr1l,f,c
 18626  01712C  0EFF               	movlw	255
 18627  01712E  22E2               	addwfc	fsr1h,f,c
 18628  017130  0012               	return		;funcret
 18629  017132                     __end_of_xtoa:
 18630                           	opt callstack 0
 18631                           
 18632 ;; *************** function _toupper *****************
 18633 ;; Defined at:
 18634 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 18635 ;; Parameters:    Size  Location     Type
 18636 ;;  c               2  [STACK] int 
 18637 ;; Auto vars:     Size  Location     Type
 18638 ;;		None
 18639 ;; Return value:  Size  Location     Type
 18640 ;;                  2  [STACK] int 
 18641 ;; Registers used:
 18642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18643 ;; Tracked objects:
 18644 ;;		On entry : 0/2
 18645 ;;		On exit  : 0/0
 18646 ;;		Unchanged: 0/0
 18647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18652 ;;Total ram usage:        0 bytes
 18653 ;; Hardware stack levels used:    1
 18654 ;; Hardware stack levels required when called:   16
 18655 ;; This function calls:
 18656 ;;		_islower
 18657 ;; This function is called by:
 18658 ;;		_xtoa
 18659 ;; This function uses a reentrant model
 18660 ;;
 18661                           
 18662                           	psect	text69
 18663  01C3B2                     __ptext69:
 18664                           	opt callstack 0
 18665  01C3B2                     _toupper:
 18666                           	opt callstack 0
 18667                           
 18668                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18669  01C3B2  52E6               	movf	postinc1,f,c
 18670  01C3B4  52E6               	movf	postinc1,f,c
 18671                           
 18672                           ;stkvar	_c @ sp[(-2)+-2]
 18673                           
 18674                           ;incstack = 0
 18675 ;; hardware stack exceeded
 18676  01C3B6  0EFC               	movlw	-4
 18677  01C3B8  50E3               	movf	plusw1,w,c
 18678  01C3BA  0F9F               	addlw	159
 18679  01C3BC  6E0B               	movwf	(btemp+10)^0,c
 18680  01C3BE  0EFD               	movlw	-3
 18681  01C3C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18682  01C3C6  0EFF               	movlw	255
 18683  01C3C8  220C               	addwfc	(btemp+11)^0,f,c
 18684  01C3CA  500C               	movf	(btemp+11)^0,w,c
 18685  01C3CC  E106               	bnz	u6830
 18686  01C3CE  0E1A               	movlw	26
 18687  01C3D0  5C0B               	subwf	(btemp+10)^0,w,c
 18688  01C3D2  B0D8               	btfsc	status,0,c
 18689  01C3D4  D002               	goto	u6830
 18690  01C3D6  0E01               	movlw	1
 18691  01C3D8  D001               	goto	u6840
 18692  01C3DA                     u6830:
 18693  01C3DA  0E00               	movlw	0
 18694  01C3DC                     u6840:
 18695  01C3DC  6E0B               	movwf	(btemp+10)^0,c
 18696  01C3DE  6A0C               	clrf	(btemp+11)^0,c
 18697                           
 18698                           ;stkvar	_toupper$7032 @ sp[(-2)+0]
 18699  01C3E0  0EFE               	movlw	-2
 18700  01C3E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18701  01C3E8  0EFF               	movlw	-1
 18702  01C3EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18703                           
 18704                           ;stkvar	_toupper$7032 @ sp[(-2)+0]
 18705  01C3F0  0EFE               	movlw	-2
 18706  01C3F2  006F FF8C  F001    	movff	plusw1,btemp
 18707  01C3F8  0EFF               	movlw	-1
 18708  01C3FA  50E3               	movf	plusw1,w,c
 18709  01C3FC  1001               	iorwf	btemp^0,w,c
 18710  01C3FE  B4D8               	btfsc	status,2,c
 18711  01C400  D00D               	goto	l8956
 18712                           
 18713                           ;stkvar	_c @ sp[(-2)+-2]
 18714  01C402  0EFC               	movlw	-4
 18715  01C404  006F FF8C  F001    	movff	plusw1,btemp
 18716  01C40A  0EFD               	movlw	-3
 18717  01C40C  006F FF8C  F002    	movff	plusw1,btemp+1
 18718  01C412  0E5F               	movlw	95
 18719  01C414  1601               	andwf	btemp^0,f,c
 18720  01C416  0E00               	movlw	0
 18721  01C418  1602               	andwf	(btemp+1)^0,f,c
 18722  01C41A  D008               	goto	l3757
 18723  01C41C                     l8956:
 18724                           
 18725                           ;stkvar	_c @ sp[(-2)+-2]
 18726  01C41C  0EFC               	movlw	-4
 18727  01C41E  006F FF8C  F001    	movff	plusw1,btemp
 18728  01C424  0EFD               	movlw	-3
 18729  01C426  006F FF8C  F002    	movff	plusw1,btemp+1
 18730  01C42C                     l3757:
 18731                           
 18732                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18733  01C42C  52E5               	movf	postdec1,f,c
 18734  01C42E  52E5               	movf	postdec1,f,c
 18735  01C430  52E5               	movf	postdec1,f,c
 18736  01C432  52E5               	movf	postdec1,f,c
 18737  01C434  0012               	return		;funcret
 18738  01C436                     __end_of_toupper:
 18739                           	opt callstack 0
 18740                           
 18741 ;; *************** function _islower *****************
 18742 ;; Defined at:
 18743 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 18744 ;; Parameters:    Size  Location     Type
 18745 ;;  c               2  [STACK] int 
 18746 ;; Auto vars:     Size  Location     Type
 18747 ;;		None
 18748 ;; Return value:  Size  Location     Type
 18749 ;;                  2  [STACK] int 
 18750 ;; Registers used:
 18751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18752 ;; Tracked objects:
 18753 ;;		On entry : 0/0
 18754 ;;		On exit  : 0/0
 18755 ;;		Unchanged: 0/0
 18756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18761 ;;Total ram usage:        0 bytes
 18762 ;; Hardware stack levels used:    1
 18763 ;; Hardware stack levels required when called:   15
 18764 ;; This function calls:
 18765 ;;		Nothing
 18766 ;; This function is called by:
 18767 ;;		_toupper
 18768 ;; This function uses a reentrant model
 18769 ;;
 18770                           
 18771                           	psect	text70
 18772  01D3FA                     __ptext70:
 18773                           	opt callstack 0
 18774  01D3FA                     _islower:
 18775                           	opt callstack 0
 18776                           
 18777                           ;stkvar	_c @ sp[(0)+-2]
 18778                           
 18779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18780                           ;incstack = 0
 18781 ;; hardware stack exceeded
 18782  01D3FA  0EFE               	movlw	-2
 18783  01D3FC  50E3               	movf	plusw1,w,c
 18784  01D3FE  0F9F               	addlw	159
 18785  01D400  6E0B               	movwf	(btemp+10)^0,c
 18786  01D402  0EFF               	movlw	-1
 18787  01D404  006F FF8C  F00C    	movff	plusw1,btemp+11
 18788  01D40A  0EFF               	movlw	255
 18789  01D40C  220C               	addwfc	(btemp+11)^0,f,c
 18790  01D40E  500C               	movf	(btemp+11)^0,w,c
 18791  01D410  E106               	bnz	u6470
 18792  01D412  0E1A               	movlw	26
 18793  01D414  5C0B               	subwf	(btemp+10)^0,w,c
 18794  01D416  B0D8               	btfsc	status,0,c
 18795  01D418  D002               	goto	u6470
 18796  01D41A  0E01               	movlw	1
 18797  01D41C  D001               	goto	u6480
 18798  01D41E                     u6470:
 18799  01D41E  0E00               	movlw	0
 18800  01D420                     u6480:
 18801  01D420  6E01               	movwf	btemp^0,c
 18802  01D422  6A02               	clrf	(btemp+1)^0,c
 18803                           
 18804                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18805  01D424  52E5               	movf	postdec1,f,c
 18806  01D426  52E5               	movf	postdec1,f,c
 18807  01D428  0012               	return		;funcret
 18808  01D42A                     __end_of_islower:
 18809                           	opt callstack 0
 18810                           
 18811 ;; *************** function _isalpha *****************
 18812 ;; Defined at:
 18813 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;  c               2  [STACK] int 
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;		None
 18818 ;; Return value:  Size  Location     Type
 18819 ;;                  2  [STACK] int 
 18820 ;; Registers used:
 18821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 18822 ;; Tracked objects:
 18823 ;;		On entry : 0/0
 18824 ;;		On exit  : 0/0
 18825 ;;		Unchanged: 0/0
 18826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;Total ram usage:        0 bytes
 18832 ;; Hardware stack levels used:    1
 18833 ;; Hardware stack levels required when called:   15
 18834 ;; This function calls:
 18835 ;;		Nothing
 18836 ;; This function is called by:
 18837 ;;		_xtoa
 18838 ;; This function uses a reentrant model
 18839 ;;
 18840                           
 18841                           	psect	text71
 18842  01CFA8                     __ptext71:
 18843                           	opt callstack 0
 18844  01CFA8                     _isalpha:
 18845                           	opt callstack 0
 18846                           
 18847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18848                           ;incstack = 0
 18849 ;; hardware stack exceeded
 18850  01CFA8  0E9F               	movlw	159
 18851  01CFAA  6E0B               	movwf	(btemp+10)^0,c
 18852  01CFAC  0EFF               	movlw	255
 18853  01CFAE  6E0C               	movwf	(btemp+11)^0,c
 18854                           
 18855                           ;stkvar	_c @ sp[(0)+-2]
 18856  01CFB0  0EFE               	movlw	-2
 18857  01CFB2  006F FF8C  F009    	movff	plusw1,btemp+8
 18858  01CFB8  0EFF               	movlw	-1
 18859  01CFBA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18860  01CFC0  0E20               	movlw	32
 18861  01CFC2  1209               	iorwf	(btemp+8)^0,f,c
 18862  01CFC4  0E00               	movlw	0
 18863  01CFC6  120A               	iorwf	(btemp+9)^0,f,c
 18864  01CFC8  500B               	movf	(btemp+10)^0,w,c
 18865  01CFCA  2609               	addwf	(btemp+8)^0,f,c
 18866  01CFCC  500C               	movf	(btemp+11)^0,w,c
 18867  01CFCE  220A               	addwfc	(btemp+9)^0,f,c
 18868  01CFD0  500A               	movf	(btemp+9)^0,w,c
 18869  01CFD2  E106               	bnz	u6810
 18870  01CFD4  0E1A               	movlw	26
 18871  01CFD6  5C09               	subwf	(btemp+8)^0,w,c
 18872  01CFD8  B0D8               	btfsc	status,0,c
 18873  01CFDA  D002               	goto	u6810
 18874  01CFDC  0E01               	movlw	1
 18875  01CFDE  D001               	goto	u6820
 18876  01CFE0                     u6810:
 18877  01CFE0  0E00               	movlw	0
 18878  01CFE2                     u6820:
 18879  01CFE2  6E01               	movwf	btemp^0,c
 18880  01CFE4  6A02               	clrf	(btemp+1)^0,c
 18881                           
 18882                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18883  01CFE6  52E5               	movf	postdec1,f,c
 18884  01CFE8  52E5               	movf	postdec1,f,c
 18885  01CFEA  0012               	return		;funcret
 18886  01CFEC                     __end_of_isalpha:
 18887                           	opt callstack 0
 18888                           
 18889 ;; *************** function _utoa *****************
 18890 ;; Defined at:
 18891 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18892 ;; Parameters:    Size  Location     Type
 18893 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18894 ;;		 -> f(6), NULL(0), 
 18895 ;;  d               8  [STACK] unsigned long long 
 18896 ;; Auto vars:     Size  Location     Type
 18897 ;;  n               8  [STACK] unsigned long long 
 18898 ;;  i               2  [STACK] int 
 18899 ;;  w               2  [STACK] int 
 18900 ;;  p               2  [STACK] int 
 18901 ;; Return value:  Size  Location     Type
 18902 ;;                  2  [STACK] int 
 18903 ;; Registers used:
 18904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18905 ;; Tracked objects:
 18906 ;;		On entry : 0/0
 18907 ;;		On exit  : 0/0
 18908 ;;		Unchanged: 0/0
 18909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18914 ;;Total ram usage:        0 bytes
 18915 ;; Hardware stack levels used:    1
 18916 ;; Hardware stack levels required when called:   20
 18917 ;; This function calls:
 18918 ;;		___lodiv
 18919 ;;		___lomod
 18920 ;;		_pad
 18921 ;; This function is called by:
 18922 ;;		_vfpfcnvrt
 18923 ;; This function uses a reentrant model
 18924 ;;
 18925                           
 18926                           	psect	text72
 18927  01749E                     __ptext72:
 18928                           	opt callstack 0
 18929  01749E                     _utoa:
 18930                           	opt callstack 0
 18931                           
 18932                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18933  01749E  0E0E               	movlw	14
 18934  0174A0  26E1               	addwf	fsr1l,f,c
 18935  0174A2  0E00               	movlw	0
 18936  0174A4  22E2               	addwfc	fsr1h,f,c
 18937                           
 18938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 18939                           
 18940                           ;incstack = 0
 18941 ;; hardware stack exceeded
 18942  0174A6  AE3D               	btfss	(_prec+1)^0,7,c
 18943                           
 18944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 18945  0174A8  923E               	bcf	_flags^0,1,c
 18946                           
 18947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 18948  0174AA  BE3D               	btfsc	(_prec+1)^0,7,c
 18949  0174AC  D005               	goto	u12880
 18950  0174AE  503D               	movf	(_prec+1)^0,w,c
 18951  0174B0  E110               	bnz	l13784
 18952  0174B2  043C               	decf	_prec^0,w,c
 18953  0174B4  B0D8               	btfsc	status,0,c
 18954  0174B6  D00D               	goto	l13784
 18955  0174B8                     u12880:
 18956  0174B8  0E01               	movlw	1
 18957  0174BA  6E0B               	movwf	(btemp+10)^0,c
 18958  0174BC  0E00               	movlw	0
 18959  0174BE  6E0C               	movwf	(btemp+11)^0,c
 18960                           
 18961                           ;stkvar	_p @ sp[(-14)+12]
 18962  0174C0  0EFE               	movlw	-2
 18963  0174C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18964  0174C8  0EFF               	movlw	-1
 18965  0174CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18966  0174D0  D008               	goto	l2575
 18967  0174D2                     l13784:
 18968                           
 18969                           ;stkvar	_p @ sp[(-14)+12]
 18970  0174D2  0EFE               	movlw	-2
 18971  0174D4  0060  F0F3  FFE3   	movff	_prec,plusw1
 18972  0174DA  0EFF               	movlw	-1
 18973  0174DC  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18974  0174E2                     l2575:
 18975                           
 18976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 18977                           ;stkvar	_w @ sp[(-14)+10]
 18978  0174E2  0EFC               	movlw	-4
 18979  0174E4  0060  F0EB  FFE3   	movff	_width,plusw1
 18980  0174EA  0EFD               	movlw	-3
 18981  0174EC  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18982                           
 18983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 18984                           ;stkvar	_d @ sp[(-14)+-10]
 18985  0174F2  0EE8               	movlw	232
 18986  0174F4  24E1               	addwf	fsr1l,w,c
 18987  0174F6  6ED9               	movwf	fsr2l,c
 18988  0174F8  0EFF               	movlw	255
 18989  0174FA  20E2               	addwfc	fsr1h,w,c
 18990  0174FC  6EDA               	movwf	fsr2h,c
 18991                           
 18992                           ;stkvar	_n @ sp[(-14)+0]
 18993  0174FE  0E08               	movlw	8
 18994  017500  6E01               	movwf	btemp^0,c
 18995  017502  0EF2               	movlw	-14
 18996  017504                     us1289999:
 18997  017504  006F FF7B FFE3     	movff	postinc2,plusw1
 18998  01750A  28E8               	incf	wreg,w,c
 18999  01750C  2E01               	decfsz	btemp^0,f,c
 19000  01750E  D7FA               	bra	us1289999
 19001                           
 19002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 19003  017510  0E4F               	movlw	79
 19004  017512  6E0B               	movwf	(btemp+10)^0,c
 19005  017514  0E00               	movlw	0
 19006  017516  6E0C               	movwf	(btemp+11)^0,c
 19007                           
 19008                           ;stkvar	_i @ sp[(-14)+8]
 19009  017518  0EFA               	movlw	-6
 19010  01751A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19011  017520  0EFB               	movlw	-5
 19012  017522  0060  F033  FFE3   	movff	btemp+11,plusw1
 19013                           
 19014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 19015  017528  0102               	movlb	2	; () banked
 19016  01752A  6B92               	clrf	(_dbuf+79)& (0+255),b
 19017                           
 19018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 19019  01752C  D0FB               	goto	l13802
 19020  01752E                     l13792:
 19021                           
 19022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 19023                           ;stkvar	_i @ sp[(-14)+8]
 19024  01752E  50E1               	movf	fsr1l,w,c
 19025  017530  0FFA               	addlw	-6
 19026  017532  6ED9               	movwf	fsr2l,c
 19027  017534  50E2               	movf	fsr1h,w,c
 19028  017536  6EDA               	movwf	fsr2h,c
 19029  017538  0EFF               	movlw	255
 19030  01753A  22DA               	addwfc	fsr2h,f,c
 19031  01753C  06DE               	decf	postinc2,f,c
 19032  01753E  0E00               	movlw	0
 19033  017540  5ADD               	subwfb	postdec2,f,c
 19034                           
 19035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 19036  017542  0E0A               	movlw	10
 19037  017544  6EE6               	movwf	postinc1,c
 19038  017546  0E00               	movlw	0
 19039  017548  6EE6               	movwf	postinc1,c
 19040  01754A  0E00               	movlw	0
 19041  01754C  6EE6               	movwf	postinc1,c
 19042  01754E  0E00               	movlw	0
 19043  017550  6EE6               	movwf	postinc1,c
 19044  017552  0E00               	movlw	0
 19045  017554  6EE6               	movwf	postinc1,c
 19046  017556  0E00               	movlw	0
 19047  017558  6EE6               	movwf	postinc1,c
 19048  01755A  0E00               	movlw	0
 19049  01755C  6EE6               	movwf	postinc1,c
 19050  01755E  0E00               	movlw	0
 19051  017560  6EE6               	movwf	postinc1,c
 19052                           
 19053                           ;stkvar	_n @ sp[(-22)+0]
 19054  017562  50E1               	movf	fsr1l,w,c
 19055  017564  0FEA               	addlw	-22
 19056  017566  6ED9               	movwf	fsr2l,c
 19057  017568  50E2               	movf	fsr1h,w,c
 19058  01756A  6EDA               	movwf	fsr2h,c
 19059  01756C  0EFF               	movlw	255
 19060  01756E  22DA               	addwfc	fsr2h,f,c
 19061  017570  006F FF7B FFE6     	movff	postinc2,postinc1
 19062  017576  006F FF7B FFE6     	movff	postinc2,postinc1
 19063  01757C  006F FF7B FFE6     	movff	postinc2,postinc1
 19064  017582  006F FF7B FFE6     	movff	postinc2,postinc1
 19065  017588  006F FF7B FFE6     	movff	postinc2,postinc1
 19066  01758E  006F FF7B FFE6     	movff	postinc2,postinc1
 19067  017594  006F FF7B FFE6     	movff	postinc2,postinc1
 19068  01759A  006F FF7B FFE6     	movff	postinc2,postinc1
 19069  0175A0  ECA9  F0D3         	call	___lomod	;wreg free
 19070  0175A4  52E5               	movf	postdec1,f,c
 19071  0175A6  006F FF9C  F018    	movff	indf1,btemp+23
 19072  0175AC  52E5               	movf	postdec1,f,c
 19073  0175AE  006F FF9C  F017    	movff	indf1,btemp+22
 19074  0175B4  52E5               	movf	postdec1,f,c
 19075  0175B6  006F FF9C  F016    	movff	indf1,btemp+21
 19076  0175BC  52E5               	movf	postdec1,f,c
 19077  0175BE  006F FF9C  F015    	movff	indf1,btemp+20
 19078  0175C4  52E5               	movf	postdec1,f,c
 19079  0175C6  006F FF9C  F014    	movff	indf1,btemp+19
 19080  0175CC  52E5               	movf	postdec1,f,c
 19081  0175CE  006F FF9C  F013    	movff	indf1,btemp+18
 19082  0175D4  52E5               	movf	postdec1,f,c
 19083  0175D6  006F FF9C  F012    	movff	indf1,btemp+17
 19084  0175DC  52E5               	movf	postdec1,f,c
 19085  0175DE  006F FF9C  F011    	movff	indf1,btemp+16
 19086  0175E4  0EF8               	movlw	248
 19087  0175E6  26E1               	addwf	fsr1l,f,c
 19088  0175E8  0EFF               	movlw	255
 19089  0175EA  22E2               	addwfc	fsr1h,f,c
 19090  0175EC  0E30               	movlw	48
 19091  0175EE  2611               	addwf	(btemp+16)^0,f,c
 19092                           
 19093                           ;stkvar	_i @ sp[(-14)+8]
 19094  0175F0  0EFA               	movlw	-6
 19095  0175F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19096  0175F8  0EFB               	movlw	-5
 19097  0175FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19098  017600  0E43               	movlw	low _dbuf
 19099  017602  240B               	addwf	(btemp+10)^0,w,c
 19100  017604  6ED9               	movwf	fsr2l,c
 19101  017606  0E02               	movlw	high _dbuf
 19102  017608  200C               	addwfc	(btemp+11)^0,w,c
 19103  01760A  6EDA               	movwf	fsr2h,c
 19104  01760C  0060  F047  FFDF   	movff	btemp+16,indf2
 19105                           
 19106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 19107                           ;stkvar	_p @ sp[(-14)+12]
 19108  017612  50E1               	movf	fsr1l,w,c
 19109  017614  0FFE               	addlw	-2
 19110  017616  6ED9               	movwf	fsr2l,c
 19111  017618  50E2               	movf	fsr1h,w,c
 19112  01761A  6EDA               	movwf	fsr2h,c
 19113  01761C  0EFF               	movlw	255
 19114  01761E  22DA               	addwfc	fsr2h,f,c
 19115  017620  06DE               	decf	postinc2,f,c
 19116  017622  0E00               	movlw	0
 19117  017624  5ADD               	subwfb	postdec2,f,c
 19118                           
 19119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 19120                           ;stkvar	_w @ sp[(-14)+10]
 19121  017626  50E1               	movf	fsr1l,w,c
 19122  017628  0FFC               	addlw	-4
 19123  01762A  6ED9               	movwf	fsr2l,c
 19124  01762C  50E2               	movf	fsr1h,w,c
 19125  01762E  6EDA               	movwf	fsr2h,c
 19126  017630  0EFF               	movlw	255
 19127  017632  22DA               	addwfc	fsr2h,f,c
 19128  017634  06DE               	decf	postinc2,f,c
 19129  017636  0E00               	movlw	0
 19130  017638  5ADD               	subwfb	postdec2,f,c
 19131                           
 19132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 19133  01763A  0E0A               	movlw	10
 19134  01763C  6EE6               	movwf	postinc1,c
 19135  01763E  0E00               	movlw	0
 19136  017640  6EE6               	movwf	postinc1,c
 19137  017642  0E00               	movlw	0
 19138  017644  6EE6               	movwf	postinc1,c
 19139  017646  0E00               	movlw	0
 19140  017648  6EE6               	movwf	postinc1,c
 19141  01764A  0E00               	movlw	0
 19142  01764C  6EE6               	movwf	postinc1,c
 19143  01764E  0E00               	movlw	0
 19144  017650  6EE6               	movwf	postinc1,c
 19145  017652  0E00               	movlw	0
 19146  017654  6EE6               	movwf	postinc1,c
 19147  017656  0E00               	movlw	0
 19148  017658  6EE6               	movwf	postinc1,c
 19149                           
 19150                           ;stkvar	_n @ sp[(-22)+0]
 19151  01765A  50E1               	movf	fsr1l,w,c
 19152  01765C  0FEA               	addlw	-22
 19153  01765E  6ED9               	movwf	fsr2l,c
 19154  017660  50E2               	movf	fsr1h,w,c
 19155  017662  6EDA               	movwf	fsr2h,c
 19156  017664  0EFF               	movlw	255
 19157  017666  22DA               	addwfc	fsr2h,f,c
 19158  017668  006F FF7B FFE6     	movff	postinc2,postinc1
 19159  01766E  006F FF7B FFE6     	movff	postinc2,postinc1
 19160  017674  006F FF7B FFE6     	movff	postinc2,postinc1
 19161  01767A  006F FF7B FFE6     	movff	postinc2,postinc1
 19162  017680  006F FF7B FFE6     	movff	postinc2,postinc1
 19163  017686  006F FF7B FFE6     	movff	postinc2,postinc1
 19164  01768C  006F FF7B FFE6     	movff	postinc2,postinc1
 19165  017692  006F FF7B FFE6     	movff	postinc2,postinc1
 19166  017698  ECCD  F0CE         	call	___lodiv	;wreg free
 19167  01769C  52E5               	movf	postdec1,f,c
 19168  01769E  006F FF9C  F018    	movff	indf1,btemp+23
 19169  0176A4  52E5               	movf	postdec1,f,c
 19170  0176A6  006F FF9C  F017    	movff	indf1,btemp+22
 19171  0176AC  52E5               	movf	postdec1,f,c
 19172  0176AE  006F FF9C  F016    	movff	indf1,btemp+21
 19173  0176B4  52E5               	movf	postdec1,f,c
 19174  0176B6  006F FF9C  F015    	movff	indf1,btemp+20
 19175  0176BC  52E5               	movf	postdec1,f,c
 19176  0176BE  006F FF9C  F014    	movff	indf1,btemp+19
 19177  0176C4  52E5               	movf	postdec1,f,c
 19178  0176C6  006F FF9C  F013    	movff	indf1,btemp+18
 19179  0176CC  52E5               	movf	postdec1,f,c
 19180  0176CE  006F FF9C  F012    	movff	indf1,btemp+17
 19181  0176D4  52E5               	movf	postdec1,f,c
 19182  0176D6  006F FF9C  F011    	movff	indf1,btemp+16
 19183  0176DC  0EF8               	movlw	248
 19184  0176DE  26E1               	addwf	fsr1l,f,c
 19185  0176E0  0EFF               	movlw	255
 19186  0176E2  22E2               	addwfc	fsr1h,f,c
 19187                           
 19188                           ;stkvar	_n @ sp[(-14)+0]
 19189  0176E4  0EF2               	movlw	-14
 19190  0176E6  0060  F047  FFE3   	movff	btemp+16,plusw1
 19191  0176EC  0EF3               	movlw	-13
 19192  0176EE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19193  0176F4  0EF4               	movlw	-12
 19194  0176F6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19195  0176FC  0EF5               	movlw	-11
 19196  0176FE  0060  F053  FFE3   	movff	btemp+19,plusw1
 19197  017704  0EF6               	movlw	-10
 19198  017706  0060  F057  FFE3   	movff	btemp+20,plusw1
 19199  01770C  0EF7               	movlw	-9
 19200  01770E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19201  017714  0EF8               	movlw	-8
 19202  017716  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19203  01771C  0EF9               	movlw	-7
 19204  01771E  0060  F063  FFE3   	movff	btemp+23,plusw1
 19205  017724                     l13802:
 19206                           
 19207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 19208                           ;stkvar	_i @ sp[(-14)+8]
 19209  017724  0EFA               	movlw	-6
 19210  017726  006F FF8C  F001    	movff	plusw1,btemp
 19211  01772C  0EFB               	movlw	-5
 19212  01772E  50E3               	movf	plusw1,w,c
 19213  017730  1001               	iorwf	btemp^0,w,c
 19214  017732  B4D8               	btfsc	status,2,c
 19215  017734  D02F               	goto	u12940
 19216                           
 19217                           ;stkvar	_n @ sp[(-14)+0]
 19218  017736  0EF2               	movlw	-14
 19219  017738  50E3               	movf	plusw1,w,c
 19220  01773A  E115               	bnz	u12911
 19221  01773C  0EF3               	movlw	-13
 19222  01773E  50E3               	movf	plusw1,w,c
 19223  017740  E112               	bnz	u12911
 19224  017742  0EF4               	movlw	-12
 19225  017744  50E3               	movf	plusw1,w,c
 19226  017746  E10F               	bnz	u12911
 19227  017748  0EF5               	movlw	-11
 19228  01774A  50E3               	movf	plusw1,w,c
 19229  01774C  E10C               	bnz	u12911
 19230  01774E  0EF6               	movlw	-10
 19231  017750  50E3               	movf	plusw1,w,c
 19232  017752  E109               	bnz	u12911
 19233  017754  0EF7               	movlw	-9
 19234  017756  50E3               	movf	plusw1,w,c
 19235  017758  E106               	bnz	u12911
 19236  01775A  0EF8               	movlw	-8
 19237  01775C  50E3               	movf	plusw1,w,c
 19238  01775E  E103               	bnz	u12911
 19239  017760  0EF9               	movlw	-7
 19240  017762  50E3               	movf	plusw1,w,c
 19241  017764  A4D8               	btfss	status,2,c
 19242  017766                     u12911:
 19243  017766  D6E3               	goto	l13792
 19244                           
 19245                           ;stkvar	_p @ sp[(-14)+12]
 19246  017768  0EFF               	movlw	-1
 19247  01776A  BEE3               	btfsc	plusw1,7,c
 19248  01776C  D007               	goto	u12920
 19249  01776E  0EFF               	movlw	-1
 19250  017770  50E3               	movf	plusw1,w,c
 19251  017772  E103               	bnz	u12921
 19252  017774  0EFE               	movlw	-2
 19253  017776  04E3               	decf	plusw1,w,c
 19254  017778  B0D8               	btfsc	status,0,c
 19255  01777A                     u12921:
 19256  01777A  D6D9               	goto	l13792
 19257  01777C                     u12920:
 19258                           
 19259                           ;stkvar	_w @ sp[(-14)+10]
 19260  01777C  0EFD               	movlw	-3
 19261  01777E  BEE3               	btfsc	plusw1,7,c
 19262  017780  D009               	goto	u12940
 19263  017782  0EFD               	movlw	-3
 19264  017784  50E3               	movf	plusw1,w,c
 19265  017786  E104               	bnz	u12930
 19266  017788  0EFC               	movlw	-4
 19267  01778A  04E3               	decf	plusw1,w,c
 19268  01778C  A0D8               	btfss	status,0,c
 19269  01778E  D002               	goto	u12940
 19270  017790                     u12930:
 19271  017790  B23E               	btfsc	_flags^0,1,c
 19272  017792  D6CD               	goto	l13792
 19273  017794                     u12940:
 19274                           
 19275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 19276                           ;stkvar	_w @ sp[(-14)+10]
 19277  017794  0EFC               	movlw	-4
 19278  017796  006F FF8F FFE6     	movff	plusw1,postinc1
 19279  01779C  006F FF8F FFE6     	movff	plusw1,postinc1
 19280                           
 19281                           ;stkvar	_i @ sp[(-16)+8]
 19282  0177A2  0E43               	movlw	low _dbuf
 19283  0177A4  6E0B               	movwf	(btemp+10)^0,c
 19284  0177A6  0E02               	movlw	high _dbuf
 19285  0177A8  6E0C               	movwf	(btemp+11)^0,c
 19286  0177AA  0EF8               	movlw	-8
 19287  0177AC  50E3               	movf	plusw1,w,c
 19288  0177AE  260B               	addwf	(btemp+10)^0,f,c
 19289  0177B0  0EF9               	movlw	-7
 19290  0177B2  50E3               	movf	plusw1,w,c
 19291  0177B4  220C               	addwfc	(btemp+11)^0,f,c
 19292  0177B6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19293  0177BC  0060  F033  FFE6   	movff	btemp+11,postinc1
 19294                           
 19295                           ;stkvar	_fp @ sp[(-18)+-2]
 19296  0177C2  0EEC               	movlw	-20
 19297  0177C4  006F FF8F FFE6     	movff	plusw1,postinc1
 19298  0177CA  006F FF8F FFE6     	movff	plusw1,postinc1
 19299  0177D0  ECB2  F0D7         	call	_pad	;wreg free
 19300                           
 19301                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19302  0177D4  0EE8               	movlw	232
 19303  0177D6  26E1               	addwf	fsr1l,f,c
 19304  0177D8  0EFF               	movlw	255
 19305  0177DA  22E2               	addwfc	fsr1h,f,c
 19306  0177DC  0012               	return		;funcret
 19307  0177DE                     __end_of_utoa:
 19308                           	opt callstack 0
 19309                           
 19310 ;; *************** function ___lomod *****************
 19311 ;; Defined at:
 19312 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 19313 ;; Parameters:    Size  Location     Type
 19314 ;;  dividend        8  [STACK] unsigned long long 
 19315 ;;  divisor         8  [STACK] unsigned long long 
 19316 ;; Auto vars:     Size  Location     Type
 19317 ;;  counter         1  [STACK] unsigned char 
 19318 ;; Return value:  Size  Location     Type
 19319 ;;                  8  [STACK] unsigned long long 
 19320 ;; Registers used:
 19321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19322 ;; Tracked objects:
 19323 ;;		On entry : 0/2
 19324 ;;		On exit  : 0/0
 19325 ;;		Unchanged: 0/0
 19326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19331 ;;Total ram usage:        0 bytes
 19332 ;; Hardware stack levels used:    1
 19333 ;; Hardware stack levels required when called:   15
 19334 ;; This function calls:
 19335 ;;		Nothing
 19336 ;; This function is called by:
 19337 ;;		_utoa
 19338 ;; This function uses a reentrant model
 19339 ;;
 19340                           
 19341                           	psect	text73
 19342  01A752                     __ptext73:
 19343                           	opt callstack 0
 19344  01A752                     ___lomod:
 19345                           	opt callstack 0
 19346                           
 19347                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19348  01A752  52E6               	movf	postinc1,f,c
 19349                           
 19350                           ;stkvar	_divisor @ sp[(-1)+-16]
 19351                           
 19352                           ;incstack = 0
 19353 ;; hardware stack exceeded
 19354  01A754  0EEF               	movlw	-17
 19355  01A756  50E3               	movf	plusw1,w,c
 19356  01A758  E116               	bnz	u7960
 19357  01A75A  0EF0               	movlw	-16
 19358  01A75C  50E3               	movf	plusw1,w,c
 19359  01A75E  E113               	bnz	u7960
 19360  01A760  0EF1               	movlw	-15
 19361  01A762  50E3               	movf	plusw1,w,c
 19362  01A764  E110               	bnz	u7960
 19363  01A766  0EF2               	movlw	-14
 19364  01A768  50E3               	movf	plusw1,w,c
 19365  01A76A  E10D               	bnz	u7960
 19366  01A76C  0EF3               	movlw	-13
 19367  01A76E  50E3               	movf	plusw1,w,c
 19368  01A770  E10A               	bnz	u7960
 19369  01A772  0EF4               	movlw	-12
 19370  01A774  50E3               	movf	plusw1,w,c
 19371  01A776  E107               	bnz	u7960
 19372  01A778  0EF5               	movlw	-11
 19373  01A77A  50E3               	movf	plusw1,w,c
 19374  01A77C  E104               	bnz	u7960
 19375  01A77E  0EF6               	movlw	-10
 19376  01A780  50E3               	movf	plusw1,w,c
 19377  01A782  B4D8               	btfsc	status,2,c
 19378  01A784  D075               	goto	u7990
 19379  01A786                     u7960:
 19380                           
 19381                           ;stkvar	_counter @ sp[(-1)+0]
 19382  01A786  0EFF               	movlw	-1
 19383  01A788  6AE3               	clrf	plusw1,c
 19384  01A78A  D012               	goto	L20
 19385  01A78C                     l9566:
 19386                           
 19387                           ;stkvar	_divisor @ sp[(-1)+-16]
 19388  01A78C  90D8               	bcf	status,0,c
 19389  01A78E  0EEF               	movlw	-17
 19390  01A790  36E3               	rlcf	plusw1,f,c
 19391  01A792  0EF0               	movlw	-16
 19392  01A794  36E3               	rlcf	plusw1,f,c
 19393  01A796  0EF1               	movlw	-15
 19394  01A798  36E3               	rlcf	plusw1,f,c
 19395  01A79A  0EF2               	movlw	-14
 19396  01A79C  36E3               	rlcf	plusw1,f,c
 19397  01A79E  0EF3               	movlw	-13
 19398  01A7A0  36E3               	rlcf	plusw1,f,c
 19399  01A7A2  0EF4               	movlw	-12
 19400  01A7A4  36E3               	rlcf	plusw1,f,c
 19401  01A7A6  0EF5               	movlw	-11
 19402  01A7A8  36E3               	rlcf	plusw1,f,c
 19403  01A7AA  0EF6               	movlw	-10
 19404  01A7AC  36E3               	rlcf	plusw1,f,c
 19405                           
 19406                           ;stkvar	_counter @ sp[(-1)+0]
 19407  01A7AE  0EFF               	movlw	-1
 19408  01A7B0                     L20:
 19409  01A7B0  2AE3               	incf	plusw1,f,c
 19410                           
 19411                           ;stkvar	_divisor @ sp[(-1)+-16]
 19412  01A7B2  0EF6               	movlw	-10
 19413  01A7B4  AEE3               	btfss	plusw1,7,c
 19414  01A7B6  D7EA               	goto	l9566
 19415  01A7B8                     u7970:
 19416                           
 19417                           ;stkvar	_divisor @ sp[(-1)+-16]
 19418                           ;stkvar	_dividend @ sp[(-1)+-8]
 19419  01A7B8  50E1               	movf	fsr1l,w,c
 19420  01A7BA  0FF7               	addlw	-9
 19421  01A7BC  6ED9               	movwf	fsr2l,c
 19422  01A7BE  50E2               	movf	fsr1h,w,c
 19423  01A7C0  6EDA               	movwf	fsr2h,c
 19424  01A7C2  0EFF               	movlw	255
 19425  01A7C4  22DA               	addwfc	fsr2h,f,c
 19426  01A7C6  0EEF               	movlw	-17
 19427  01A7C8  50E3               	movf	plusw1,w,c
 19428  01A7CA  5CDE               	subwf	postinc2,w,c
 19429  01A7CC  0EF0               	movlw	-16
 19430  01A7CE  50E3               	movf	plusw1,w,c
 19431  01A7D0  58DE               	subwfb	postinc2,w,c
 19432  01A7D2  0EF1               	movlw	-15
 19433  01A7D4  50E3               	movf	plusw1,w,c
 19434  01A7D6  58DE               	subwfb	postinc2,w,c
 19435  01A7D8  0EF2               	movlw	-14
 19436  01A7DA  50E3               	movf	plusw1,w,c
 19437  01A7DC  58DE               	subwfb	postinc2,w,c
 19438  01A7DE  0EF3               	movlw	-13
 19439  01A7E0  50E3               	movf	plusw1,w,c
 19440  01A7E2  58DE               	subwfb	postinc2,w,c
 19441  01A7E4  0EF4               	movlw	-12
 19442  01A7E6  50E3               	movf	plusw1,w,c
 19443  01A7E8  58DE               	subwfb	postinc2,w,c
 19444  01A7EA  0EF5               	movlw	-11
 19445  01A7EC  50E3               	movf	plusw1,w,c
 19446  01A7EE  58DE               	subwfb	postinc2,w,c
 19447  01A7F0  0EF6               	movlw	-10
 19448  01A7F2  50E3               	movf	plusw1,w,c
 19449  01A7F4  58DE               	subwfb	postinc2,w,c
 19450  01A7F6  A0D8               	btfss	status,0,c
 19451  01A7F8  D01F               	goto	l9574
 19452                           
 19453                           ;stkvar	_divisor @ sp[(-1)+-16]
 19454                           ;stkvar	_dividend @ sp[(-1)+-8]
 19455  01A7FA  50E1               	movf	fsr1l,w,c
 19456  01A7FC  0FF7               	addlw	-9
 19457  01A7FE  6ED9               	movwf	fsr2l,c
 19458  01A800  50E2               	movf	fsr1h,w,c
 19459  01A802  6EDA               	movwf	fsr2h,c
 19460  01A804  0EFF               	movlw	255
 19461  01A806  22DA               	addwfc	fsr2h,f,c
 19462  01A808  0EEF               	movlw	-17
 19463  01A80A  50E3               	movf	plusw1,w,c
 19464  01A80C  5EDE               	subwf	postinc2,f,c
 19465  01A80E  0EF0               	movlw	-16
 19466  01A810  50E3               	movf	plusw1,w,c
 19467  01A812  5ADE               	subwfb	postinc2,f,c
 19468  01A814  0EF1               	movlw	-15
 19469  01A816  50E3               	movf	plusw1,w,c
 19470  01A818  5ADE               	subwfb	postinc2,f,c
 19471  01A81A  0EF2               	movlw	-14
 19472  01A81C  50E3               	movf	plusw1,w,c
 19473  01A81E  5ADE               	subwfb	postinc2,f,c
 19474  01A820  0EF3               	movlw	-13
 19475  01A822  50E3               	movf	plusw1,w,c
 19476  01A824  5ADE               	subwfb	postinc2,f,c
 19477  01A826  0EF4               	movlw	-12
 19478  01A828  50E3               	movf	plusw1,w,c
 19479  01A82A  5ADE               	subwfb	postinc2,f,c
 19480  01A82C  0EF5               	movlw	-11
 19481  01A82E  50E3               	movf	plusw1,w,c
 19482  01A830  5ADE               	subwfb	postinc2,f,c
 19483  01A832  0EF6               	movlw	-10
 19484  01A834  50E3               	movf	plusw1,w,c
 19485  01A836  5ADE               	subwfb	postinc2,f,c
 19486  01A838                     l9574:
 19487                           
 19488                           ;stkvar	_divisor @ sp[(-1)+-16]
 19489  01A838  90D8               	bcf	status,0,c
 19490  01A83A  0EF6               	movlw	-10
 19491  01A83C  32E3               	rrcf	plusw1,f,c
 19492  01A83E  0EF5               	movlw	-11
 19493  01A840  32E3               	rrcf	plusw1,f,c
 19494  01A842  0EF4               	movlw	-12
 19495  01A844  32E3               	rrcf	plusw1,f,c
 19496  01A846  0EF3               	movlw	-13
 19497  01A848  32E3               	rrcf	plusw1,f,c
 19498  01A84A  0EF2               	movlw	-14
 19499  01A84C  32E3               	rrcf	plusw1,f,c
 19500  01A84E  0EF1               	movlw	-15
 19501  01A850  32E3               	rrcf	plusw1,f,c
 19502  01A852  0EF0               	movlw	-16
 19503  01A854  32E3               	rrcf	plusw1,f,c
 19504  01A856  0EEF               	movlw	-17
 19505  01A858  32E3               	rrcf	plusw1,f,c
 19506                           
 19507                           ;stkvar	_counter @ sp[(-1)+0]
 19508  01A85A  0EFF               	movlw	-1
 19509  01A85C  50E3               	movf	plusw1,w,c
 19510  01A85E  6E01               	movwf	btemp^0,c
 19511  01A860  0E01               	movlw	1
 19512  01A862  5E01               	subwf	btemp^0,f,c
 19513  01A864  0EFF               	movlw	-1
 19514  01A866  0060  F007  FFE3   	movff	btemp,plusw1
 19515  01A86C  A4D8               	btfss	status,2,c
 19516  01A86E  D7A4               	goto	u7970
 19517  01A870                     u7990:
 19518                           
 19519                           ;stkvar	_dividend @ sp[(-1)+-8]
 19520  01A870  0EF7               	movlw	247
 19521  01A872  24E1               	addwf	fsr1l,w,c
 19522  01A874  6ED9               	movwf	fsr2l,c
 19523  01A876  0EFF               	movlw	255
 19524  01A878  20E2               	addwfc	fsr1h,w,c
 19525  01A87A  6EDA               	movwf	fsr2h,c
 19526                           
 19527                           ;stkvar	?___lomod @ sp[(-1)+-8]
 19528  01A87C  0E08               	movlw	8
 19529  01A87E  6E01               	movwf	btemp^0,c
 19530  01A880  0EF7               	movlw	-9
 19531  01A882                     us800999:
 19532  01A882  006F FF7B FFE3     	movff	postinc2,plusw1
 19533  01A888  28E8               	incf	wreg,w,c
 19534  01A88A  2E01               	decfsz	btemp^0,f,c
 19535  01A88C  D7FA               	bra	us800999
 19536                           
 19537                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19538  01A88E  52E5               	movf	postdec1,f,c
 19539  01A890  0012               	return		;funcret
 19540  01A892                     __end_of___lomod:
 19541                           	opt callstack 0
 19542                           
 19543 ;; *************** function ___lodiv *****************
 19544 ;; Defined at:
 19545 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 19546 ;; Parameters:    Size  Location     Type
 19547 ;;  dividend        8  [STACK] unsigned long long 
 19548 ;;  divisor         8  [STACK] unsigned long long 
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;  quotient        8  [STACK] unsigned long long 
 19551 ;;  counter         1  [STACK] unsigned char 
 19552 ;; Return value:  Size  Location     Type
 19553 ;;                  8  [STACK] unsigned long long 
 19554 ;; Registers used:
 19555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19556 ;; Tracked objects:
 19557 ;;		On entry : 0/2
 19558 ;;		On exit  : 0/0
 19559 ;;		Unchanged: 0/0
 19560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19565 ;;Total ram usage:        0 bytes
 19566 ;; Hardware stack levels used:    1
 19567 ;; Hardware stack levels required when called:   15
 19568 ;; This function calls:
 19569 ;;		Nothing
 19570 ;; This function is called by:
 19571 ;;		_utoa
 19572 ;; This function uses a reentrant model
 19573 ;;
 19574                           
 19575                           	psect	text74
 19576  019D9A                     __ptext74:
 19577                           	opt callstack 0
 19578  019D9A                     ___lodiv:
 19579                           	opt callstack 0
 19580                           
 19581                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19582  019D9A  0E09               	movlw	9
 19583  019D9C  26E1               	addwf	fsr1l,f,c
 19584  019D9E  0E00               	movlw	0
 19585  019DA0  22E2               	addwfc	fsr1h,f,c
 19586                           
 19587                           ;stkvar	_quotient @ sp[(-9)+0]
 19588                           
 19589                           ;incstack = 0
 19590 ;; hardware stack exceeded
 19591  019DA2  0E07               	movlw	7
 19592  019DA4  6E01               	movwf	btemp^0,c
 19593  019DA6  0EF7               	movlw	-9
 19594  019DA8                     u7901:
 19595  019DA8  6AE3               	clrf	plusw1,c
 19596  019DAA  2AE8               	incf	wreg,f,c
 19597  019DAC  0601               	decf	btemp^0,f,c
 19598  019DAE  E2FC               	bc	u7901
 19599                           
 19600                           ;stkvar	_divisor @ sp[(-9)+-16]
 19601  019DB0  0EE7               	movlw	-25
 19602  019DB2  50E3               	movf	plusw1,w,c
 19603  019DB4  E116               	bnz	u7910
 19604  019DB6  0EE8               	movlw	-24
 19605  019DB8  50E3               	movf	plusw1,w,c
 19606  019DBA  E113               	bnz	u7910
 19607  019DBC  0EE9               	movlw	-23
 19608  019DBE  50E3               	movf	plusw1,w,c
 19609  019DC0  E110               	bnz	u7910
 19610  019DC2  0EEA               	movlw	-22
 19611  019DC4  50E3               	movf	plusw1,w,c
 19612  019DC6  E10D               	bnz	u7910
 19613  019DC8  0EEB               	movlw	-21
 19614  019DCA  50E3               	movf	plusw1,w,c
 19615  019DCC  E10A               	bnz	u7910
 19616  019DCE  0EEC               	movlw	-20
 19617  019DD0  50E3               	movf	plusw1,w,c
 19618  019DD2  E107               	bnz	u7910
 19619  019DD4  0EED               	movlw	-19
 19620  019DD6  50E3               	movf	plusw1,w,c
 19621  019DD8  E104               	bnz	u7910
 19622  019DDA  0EEE               	movlw	-18
 19623  019DDC  50E3               	movf	plusw1,w,c
 19624  019DDE  B4D8               	btfsc	status,2,c
 19625  019DE0  D088               	goto	u7940
 19626  019DE2                     u7910:
 19627                           
 19628                           ;stkvar	_counter @ sp[(-9)+8]
 19629  019DE2  0EFF               	movlw	-1
 19630  019DE4  6AE3               	clrf	plusw1,c
 19631  019DE6  D012               	goto	L21
 19632  019DE8                     l9542:
 19633                           
 19634                           ;stkvar	_divisor @ sp[(-9)+-16]
 19635  019DE8  90D8               	bcf	status,0,c
 19636  019DEA  0EE7               	movlw	-25
 19637  019DEC  36E3               	rlcf	plusw1,f,c
 19638  019DEE  0EE8               	movlw	-24
 19639  019DF0  36E3               	rlcf	plusw1,f,c
 19640  019DF2  0EE9               	movlw	-23
 19641  019DF4  36E3               	rlcf	plusw1,f,c
 19642  019DF6  0EEA               	movlw	-22
 19643  019DF8  36E3               	rlcf	plusw1,f,c
 19644  019DFA  0EEB               	movlw	-21
 19645  019DFC  36E3               	rlcf	plusw1,f,c
 19646  019DFE  0EEC               	movlw	-20
 19647  019E00  36E3               	rlcf	plusw1,f,c
 19648  019E02  0EED               	movlw	-19
 19649  019E04  36E3               	rlcf	plusw1,f,c
 19650  019E06  0EEE               	movlw	-18
 19651  019E08  36E3               	rlcf	plusw1,f,c
 19652                           
 19653                           ;stkvar	_counter @ sp[(-9)+8]
 19654  019E0A  0EFF               	movlw	-1
 19655  019E0C                     L21:
 19656  019E0C  2AE3               	incf	plusw1,f,c
 19657                           
 19658                           ;stkvar	_divisor @ sp[(-9)+-16]
 19659  019E0E  0EEE               	movlw	-18
 19660  019E10  AEE3               	btfss	plusw1,7,c
 19661  019E12  D7EA               	goto	l9542
 19662  019E14                     u7920:
 19663                           
 19664                           ;stkvar	_quotient @ sp[(-9)+0]
 19665  019E14  90D8               	bcf	status,0,c
 19666  019E16  0EF7               	movlw	-9
 19667  019E18  36E3               	rlcf	plusw1,f,c
 19668  019E1A  0EF8               	movlw	-8
 19669  019E1C  36E3               	rlcf	plusw1,f,c
 19670  019E1E  0EF9               	movlw	-7
 19671  019E20  36E3               	rlcf	plusw1,f,c
 19672  019E22  0EFA               	movlw	-6
 19673  019E24  36E3               	rlcf	plusw1,f,c
 19674  019E26  0EFB               	movlw	-5
 19675  019E28  36E3               	rlcf	plusw1,f,c
 19676  019E2A  0EFC               	movlw	-4
 19677  019E2C  36E3               	rlcf	plusw1,f,c
 19678  019E2E  0EFD               	movlw	-3
 19679  019E30  36E3               	rlcf	plusw1,f,c
 19680  019E32  0EFE               	movlw	-2
 19681  019E34  36E3               	rlcf	plusw1,f,c
 19682                           
 19683                           ;stkvar	_divisor @ sp[(-9)+-16]
 19684                           ;stkvar	_dividend @ sp[(-9)+-8]
 19685  019E36  50E1               	movf	fsr1l,w,c
 19686  019E38  0FEF               	addlw	-17
 19687  019E3A  6ED9               	movwf	fsr2l,c
 19688  019E3C  50E2               	movf	fsr1h,w,c
 19689  019E3E  6EDA               	movwf	fsr2h,c
 19690  019E40  0EFF               	movlw	255
 19691  019E42  22DA               	addwfc	fsr2h,f,c
 19692  019E44  0EE7               	movlw	-25
 19693  019E46  50E3               	movf	plusw1,w,c
 19694  019E48  5CDE               	subwf	postinc2,w,c
 19695  019E4A  0EE8               	movlw	-24
 19696  019E4C  50E3               	movf	plusw1,w,c
 19697  019E4E  58DE               	subwfb	postinc2,w,c
 19698  019E50  0EE9               	movlw	-23
 19699  019E52  50E3               	movf	plusw1,w,c
 19700  019E54  58DE               	subwfb	postinc2,w,c
 19701  019E56  0EEA               	movlw	-22
 19702  019E58  50E3               	movf	plusw1,w,c
 19703  019E5A  58DE               	subwfb	postinc2,w,c
 19704  019E5C  0EEB               	movlw	-21
 19705  019E5E  50E3               	movf	plusw1,w,c
 19706  019E60  58DE               	subwfb	postinc2,w,c
 19707  019E62  0EEC               	movlw	-20
 19708  019E64  50E3               	movf	plusw1,w,c
 19709  019E66  58DE               	subwfb	postinc2,w,c
 19710  019E68  0EED               	movlw	-19
 19711  019E6A  50E3               	movf	plusw1,w,c
 19712  019E6C  58DE               	subwfb	postinc2,w,c
 19713  019E6E  0EEE               	movlw	-18
 19714  019E70  50E3               	movf	plusw1,w,c
 19715  019E72  58DE               	subwfb	postinc2,w,c
 19716  019E74  A0D8               	btfss	status,0,c
 19717  019E76  D021               	goto	l9554
 19718                           
 19719                           ;stkvar	_divisor @ sp[(-9)+-16]
 19720                           ;stkvar	_dividend @ sp[(-9)+-8]
 19721  019E78  50E1               	movf	fsr1l,w,c
 19722  019E7A  0FEF               	addlw	-17
 19723  019E7C  6ED9               	movwf	fsr2l,c
 19724  019E7E  50E2               	movf	fsr1h,w,c
 19725  019E80  6EDA               	movwf	fsr2h,c
 19726  019E82  0EFF               	movlw	255
 19727  019E84  22DA               	addwfc	fsr2h,f,c
 19728  019E86  0EE7               	movlw	-25
 19729  019E88  50E3               	movf	plusw1,w,c
 19730  019E8A  5EDE               	subwf	postinc2,f,c
 19731  019E8C  0EE8               	movlw	-24
 19732  019E8E  50E3               	movf	plusw1,w,c
 19733  019E90  5ADE               	subwfb	postinc2,f,c
 19734  019E92  0EE9               	movlw	-23
 19735  019E94  50E3               	movf	plusw1,w,c
 19736  019E96  5ADE               	subwfb	postinc2,f,c
 19737  019E98  0EEA               	movlw	-22
 19738  019E9A  50E3               	movf	plusw1,w,c
 19739  019E9C  5ADE               	subwfb	postinc2,f,c
 19740  019E9E  0EEB               	movlw	-21
 19741  019EA0  50E3               	movf	plusw1,w,c
 19742  019EA2  5ADE               	subwfb	postinc2,f,c
 19743  019EA4  0EEC               	movlw	-20
 19744  019EA6  50E3               	movf	plusw1,w,c
 19745  019EA8  5ADE               	subwfb	postinc2,f,c
 19746  019EAA  0EED               	movlw	-19
 19747  019EAC  50E3               	movf	plusw1,w,c
 19748  019EAE  5ADE               	subwfb	postinc2,f,c
 19749  019EB0  0EEE               	movlw	-18
 19750  019EB2  50E3               	movf	plusw1,w,c
 19751  019EB4  5ADE               	subwfb	postinc2,f,c
 19752                           
 19753                           ;stkvar	_quotient @ sp[(-9)+0]
 19754  019EB6  0EF7               	movlw	-9
 19755  019EB8  80E3               	bsf	plusw1,0,c
 19756  019EBA                     l9554:
 19757                           
 19758                           ;stkvar	_divisor @ sp[(-9)+-16]
 19759  019EBA  90D8               	bcf	status,0,c
 19760  019EBC  0EEE               	movlw	-18
 19761  019EBE  32E3               	rrcf	plusw1,f,c
 19762  019EC0  0EED               	movlw	-19
 19763  019EC2  32E3               	rrcf	plusw1,f,c
 19764  019EC4  0EEC               	movlw	-20
 19765  019EC6  32E3               	rrcf	plusw1,f,c
 19766  019EC8  0EEB               	movlw	-21
 19767  019ECA  32E3               	rrcf	plusw1,f,c
 19768  019ECC  0EEA               	movlw	-22
 19769  019ECE  32E3               	rrcf	plusw1,f,c
 19770  019ED0  0EE9               	movlw	-23
 19771  019ED2  32E3               	rrcf	plusw1,f,c
 19772  019ED4  0EE8               	movlw	-24
 19773  019ED6  32E3               	rrcf	plusw1,f,c
 19774  019ED8  0EE7               	movlw	-25
 19775  019EDA  32E3               	rrcf	plusw1,f,c
 19776                           
 19777                           ;stkvar	_counter @ sp[(-9)+8]
 19778  019EDC  0EFF               	movlw	-1
 19779  019EDE  50E3               	movf	plusw1,w,c
 19780  019EE0  6E01               	movwf	btemp^0,c
 19781  019EE2  0E01               	movlw	1
 19782  019EE4  5E01               	subwf	btemp^0,f,c
 19783  019EE6  0EFF               	movlw	-1
 19784  019EE8  0060  F007  FFE3   	movff	btemp,plusw1
 19785  019EEE  A4D8               	btfss	status,2,c
 19786  019EF0  D791               	goto	u7920
 19787  019EF2                     u7940:
 19788                           
 19789                           ;stkvar	_quotient @ sp[(-9)+0]
 19790  019EF2  0EF7               	movlw	247
 19791  019EF4  24E1               	addwf	fsr1l,w,c
 19792  019EF6  6ED9               	movwf	fsr2l,c
 19793  019EF8  0EFF               	movlw	255
 19794  019EFA  20E2               	addwfc	fsr1h,w,c
 19795  019EFC  6EDA               	movwf	fsr2h,c
 19796                           
 19797                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 19798  019EFE  0E08               	movlw	8
 19799  019F00  6E01               	movwf	btemp^0,c
 19800  019F02  0EEF               	movlw	-17
 19801  019F04                     us795999:
 19802  019F04  006F FF7B FFE3     	movff	postinc2,plusw1
 19803  019F0A  28E8               	incf	wreg,w,c
 19804  019F0C  2E01               	decfsz	btemp^0,f,c
 19805  019F0E  D7FA               	bra	us795999
 19806                           
 19807                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19808  019F10  0EF7               	movlw	247
 19809  019F12  26E1               	addwf	fsr1l,f,c
 19810  019F14  0EFF               	movlw	255
 19811  019F16  22E2               	addwfc	fsr1h,f,c
 19812  019F18  0012               	return		;funcret
 19813  019F1A                     __end_of___lodiv:
 19814                           	opt callstack 0
 19815                           
 19816 ;; *************** function _strncmp *****************
 19817 ;; Defined at:
 19818 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 19819 ;; Parameters:    Size  Location     Type
 19820 ;;  _l              2  [STACK] PTR const unsigned char 
 19821 ;;		 -> ct(3), STR_93(127), STR_91(3), STR_90(3), 
 19822 ;;		 -> STR_89(19), STR_88(19), STR_87(19), STR_86(19), 
 19823 ;;		 -> STR_85(19), STR_84(19), STR_83(24), STR_82(15), 
 19824 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 19825 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(3), 
 19826 ;;		 -> STR_71(21), STR_70(21), STR_69(21), STR_68(21), 
 19827 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(21), 
 19828 ;;		 -> STR_63(21), STR_62(18), STR_61(21), STR_60(21), 
 19829 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 19830 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 19831 ;;		 -> STR_51(21), STR_50(21), STR_49(20), STR_48(21), 
 19832 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 19833 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 19834 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 19835 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 19836 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 19837 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 19838 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 19839 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 19840 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 19841 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 19842 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 19843 ;;		 -> STR_2(21), STR_1(21), 
 19844 ;;  _r              2  [STACK] PTR const unsigned char 
 19845 ;;		 -> STR_127(3), STR_123(3), STR_118(3), STR_113(3), 
 19846 ;;		 -> STR_108(3), STR_104(3), 
 19847 ;;  n               2  [STACK] unsigned int 
 19848 ;; Auto vars:     Size  Location     Type
 19849 ;;  r               2  [STACK] PTR const unsigned char 
 19850 ;;		 -> STR_127(3), STR_123(3), STR_118(3), STR_113(3), 
 19851 ;;		 -> STR_108(3), STR_104(3), 
 19852 ;;  l               2  [STACK] PTR const unsigned char 
 19853 ;;		 -> ct(3), STR_93(127), STR_91(3), STR_90(3), 
 19854 ;;		 -> STR_89(19), STR_88(19), STR_87(19), STR_86(19), 
 19855 ;;		 -> STR_85(19), STR_84(19), STR_83(24), STR_82(15), 
 19856 ;;		 -> STR_81(15), STR_80(15), STR_79(10), STR_78(10), 
 19857 ;;		 -> STR_77(19), STR_76(19), STR_73(3), STR_72(3), 
 19858 ;;		 -> STR_71(21), STR_70(21), STR_69(21), STR_68(21), 
 19859 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(21), 
 19860 ;;		 -> STR_63(21), STR_62(18), STR_61(21), STR_60(21), 
 19861 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 19862 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 19863 ;;		 -> STR_51(21), STR_50(21), STR_49(20), STR_48(21), 
 19864 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 19865 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 19866 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 19867 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 19868 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 19869 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 19870 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 19871 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 19872 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 19873 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 19874 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 19875 ;;		 -> STR_2(21), STR_1(21), 
 19876 ;; Return value:  Size  Location     Type
 19877 ;;                  2  [STACK] int 
 19878 ;; Registers used:
 19879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 19880 ;; Tracked objects:
 19881 ;;		On entry : 0/0
 19882 ;;		On exit  : 0/0
 19883 ;;		Unchanged: 0/0
 19884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19889 ;;Total ram usage:        0 bytes
 19890 ;; Hardware stack levels used:    1
 19891 ;; Hardware stack levels required when called:   15
 19892 ;; This function calls:
 19893 ;;		Nothing
 19894 ;; This function is called by:
 19895 ;;		_vfpfcnvrt
 19896 ;; This function uses a reentrant model
 19897 ;;
 19898                           
 19899                           	psect	text75
 19900  018D06                     __ptext75:
 19901                           	opt callstack 0
 19902  018D06                     _strncmp:
 19903                           	opt callstack 0
 19904                           
 19905                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19906  018D06  52E6               	movf	postinc1,f,c
 19907  018D08  52E6               	movf	postinc1,f,c
 19908  018D0A  52E6               	movf	postinc1,f,c
 19909  018D0C  52E6               	movf	postinc1,f,c
 19910                           
 19911                           ;stkvar	__l @ sp[(-4)+-2]
 19912                           
 19913                           ;incstack = 0
 19914 ;; hardware stack exceeded
 19915  018D0E  0EFA               	movlw	-6
 19916  018D10  006F FF8C  F00B    	movff	plusw1,btemp+10
 19917  018D16  0EFB               	movlw	-5
 19918  018D18  006F FF8C  F00C    	movff	plusw1,btemp+11
 19919                           
 19920                           ;stkvar	_l @ sp[(-4)+2]
 19921  018D1E  0EFF               	movlw	-1
 19922  018D20  0060  F033  FFE3   	movff	btemp+11,plusw1
 19923  018D26  0EFE               	movlw	-2
 19924  018D28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19925                           
 19926                           ;stkvar	__r @ sp[(-4)+-4]
 19927  018D2E  0EF8               	movlw	-8
 19928  018D30  006F FF8C  F00B    	movff	plusw1,btemp+10
 19929  018D36  0EF9               	movlw	-7
 19930  018D38  006F FF8C  F00C    	movff	plusw1,btemp+11
 19931                           
 19932                           ;stkvar	_r @ sp[(-4)+0]
 19933  018D3E  0EFD               	movlw	-3
 19934  018D40  0060  F033  FFE3   	movff	btemp+11,plusw1
 19935  018D46  0EFC               	movlw	-4
 19936  018D48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19937                           
 19938                           ;stkvar	_n @ sp[(-4)+-6]
 19939  018D4E  0EF6               	movlw	-10
 19940  018D50  006F FF8C  F001    	movff	plusw1,btemp
 19941  018D56  0E01               	movlw	1
 19942  018D58  5E01               	subwf	btemp^0,f,c
 19943  018D5A  0EF6               	movlw	-10
 19944  018D5C  0060  F007  FFE3   	movff	btemp,plusw1
 19945  018D62  0EF7               	movlw	-9
 19946  018D64  006F FF8C  F001    	movff	plusw1,btemp
 19947  018D6A  0E00               	movlw	0
 19948  018D6C  5A01               	subwfb	btemp^0,f,c
 19949  018D6E  0EF7               	movlw	-9
 19950  018D70  0060  F007  FFE3   	movff	btemp,plusw1
 19951  018D76  0EF6               	movlw	-10
 19952  018D78  28E3               	incf	plusw1,w,c
 19953  018D7A  E13F               	bnz	l10224
 19954  018D7C  0EF7               	movlw	-9
 19955  018D7E  28E3               	incf	plusw1,w,c
 19956  018D80  A4D8               	btfss	status,2,c
 19957  018D82  D03B               	goto	l10224
 19958  018D84  0E00               	movlw	0
 19959  018D86  6E01               	movwf	btemp^0,c
 19960  018D88  0E00               	movlw	0
 19961  018D8A  6E02               	movwf	(btemp+1)^0,c
 19962  018D8C  D0C7               	goto	l3729
 19963  018D8E                     l10222:
 19964                           
 19965                           ;stkvar	_l @ sp[(-4)+2]
 19966  018D8E  0EFE               	movlw	-2
 19967  018D90  50E3               	movf	plusw1,w,c
 19968  018D92  0F01               	addlw	1
 19969  018D94  6E01               	movwf	btemp^0,c
 19970  018D96  0EFE               	movlw	-2
 19971  018D98  0060  F007  FFE3   	movff	btemp,plusw1
 19972  018D9E  6A01               	clrf	btemp^0,c
 19973  018DA0  0EFF               	movlw	-1
 19974  018DA2  50E3               	movf	plusw1,w,c
 19975  018DA4  2001               	addwfc	btemp^0,w,c
 19976  018DA6  6E01               	movwf	btemp^0,c
 19977  018DA8  0EFF               	movlw	-1
 19978  018DAA  0060  F007  FFE3   	movff	btemp,plusw1
 19979                           
 19980                           ;stkvar	_r @ sp[(-4)+0]
 19981  018DB0  0EFC               	movlw	-4
 19982  018DB2  50E3               	movf	plusw1,w,c
 19983  018DB4  0F01               	addlw	1
 19984  018DB6  6E01               	movwf	btemp^0,c
 19985  018DB8  0EFC               	movlw	-4
 19986  018DBA  0060  F007  FFE3   	movff	btemp,plusw1
 19987  018DC0  6A01               	clrf	btemp^0,c
 19988  018DC2  0EFD               	movlw	-3
 19989  018DC4  50E3               	movf	plusw1,w,c
 19990  018DC6  2001               	addwfc	btemp^0,w,c
 19991  018DC8  6E01               	movwf	btemp^0,c
 19992  018DCA  0EFD               	movlw	-3
 19993  018DCC  0060  F007  FFE3   	movff	btemp,plusw1
 19994                           
 19995                           ;stkvar	_n @ sp[(-4)+-6]
 19996  018DD2  0EF6               	movlw	-10
 19997  018DD4  006F FF8C  F001    	movff	plusw1,btemp
 19998  018DDA  0E01               	movlw	1
 19999  018DDC  5E01               	subwf	btemp^0,f,c
 20000  018DDE  0EF6               	movlw	-10
 20001  018DE0  0060  F007  FFE3   	movff	btemp,plusw1
 20002  018DE6  0EF7               	movlw	-9
 20003  018DE8  006F FF8C  F001    	movff	plusw1,btemp
 20004  018DEE  0E00               	movlw	0
 20005  018DF0  5A01               	subwfb	btemp^0,f,c
 20006  018DF2  0EF7               	movlw	-9
 20007  018DF4  0060  F007  FFE3   	movff	btemp,plusw1
 20008  018DFA                     l10224:
 20009                           
 20010                           ;stkvar	_l @ sp[(-4)+2]
 20011  018DFA  0EFE               	movlw	-2
 20012  018DFC  006F FF8F FFF6     	movff	plusw1,tblptrl
 20013  018E02  0EFF               	movlw	-1
 20014  018E04  006F FF8F FFF7     	movff	plusw1,tblptrh
 20015  018E0A  0E00               	movlw	low (__mediumconst shr (0+16))
 20016  018E0C  6EF8               	movwf	tblptru,c
 20017  018E0E  0E1F               	movlw	(high __ramtop+-1)
 20018  018E10  64F7               	cpfsgt	tblptrh,c
 20019  018E12  D003               	bra	u9197
 20020  018E14  0008               	tblrd		*
 20021  018E16  50F5               	movf	tablat,w,c
 20022  018E18  D007               	bra	u9190
 20023  018E1A                     u9197:
 20024  018E1A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20025  018E20  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20026  018E26  50EF               	movf	indf0,w,c
 20027  018E28                     u9190:
 20028  018E28  0900               	iorlw	0
 20029  018E2A  B4D8               	btfsc	status,2,c
 20030  018E2C  D04A               	goto	u9230
 20031                           
 20032                           ;stkvar	_r @ sp[(-4)+0]
 20033  018E2E  50E1               	movf	fsr1l,w,c
 20034  018E30  0FFC               	addlw	-4
 20035  018E32  6ED9               	movwf	fsr2l,c
 20036  018E34  50E2               	movf	fsr1h,w,c
 20037  018E36  6EDA               	movwf	fsr2h,c
 20038  018E38  0EFF               	movlw	255
 20039  018E3A  22DA               	addwfc	fsr2h,f,c
 20040  018E3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20041  018E42  006F FF77 FFF7     	movff	postdec2,tblptrh
 20042  018E48                     	if	0	;tblptru may be non-zero
 20043  018E48                     	endif
 20044  018E48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20045  018E48  0E00               	movlw	low (__mediumconst shr (0+16))
 20046  018E4A  6EF8               	movwf	tblptru,c
 20047  018E4C                     	endif
 20048  018E4C  0008               	tblrd		*
 20049  018E4E  50F5               	movf	tablat,w,c
 20050  018E50  0900               	iorlw	0
 20051  018E52  B4D8               	btfsc	status,2,c
 20052  018E54  D036               	goto	u9230
 20053                           
 20054                           ;stkvar	_n @ sp[(-4)+-6]
 20055  018E56  0EF6               	movlw	-10
 20056  018E58  006F FF8C  F001    	movff	plusw1,btemp
 20057  018E5E  0EF7               	movlw	-9
 20058  018E60  50E3               	movf	plusw1,w,c
 20059  018E62  1001               	iorwf	btemp^0,w,c
 20060  018E64  B4D8               	btfsc	status,2,c
 20061  018E66  D02D               	goto	u9230
 20062                           
 20063                           ;stkvar	_r @ sp[(-4)+0]
 20064  018E68  50E1               	movf	fsr1l,w,c
 20065  018E6A  0FFC               	addlw	-4
 20066  018E6C  6ED9               	movwf	fsr2l,c
 20067  018E6E  50E2               	movf	fsr1h,w,c
 20068  018E70  6EDA               	movwf	fsr2h,c
 20069  018E72  0EFF               	movlw	255
 20070  018E74  22DA               	addwfc	fsr2h,f,c
 20071  018E76  006F FF7B FFF6     	movff	postinc2,tblptrl
 20072  018E7C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20073  018E82                     	if	0	;tblptru may be non-zero
 20074  018E82                     	endif
 20075  018E82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20076  018E82  0E00               	movlw	low (__mediumconst shr (0+16))
 20077  018E84  6EF8               	movwf	tblptru,c
 20078  018E86                     	endif
 20079  018E86  0008               	tblrd		*
 20080  018E88  006F FFD4  F00C    	movff	tablat,btemp+11
 20081                           
 20082                           ;stkvar	_l @ sp[(-4)+2]
 20083  018E8E  0EFE               	movlw	-2
 20084  018E90  006F FF8F FFF6     	movff	plusw1,tblptrl
 20085  018E96  0EFF               	movlw	-1
 20086  018E98  006F FF8F FFF7     	movff	plusw1,tblptrh
 20087  018E9E  0E00               	movlw	low (__mediumconst shr (0+16))
 20088  018EA0  6EF8               	movwf	tblptru,c
 20089  018EA2  0E1F               	movlw	(high __ramtop+-1)
 20090  018EA4  64F7               	cpfsgt	tblptrh,c
 20091  018EA6  D003               	bra	u9237
 20092  018EA8  0008               	tblrd		*
 20093  018EAA  50F5               	movf	tablat,w,c
 20094  018EAC  D007               	bra	u9235
 20095  018EAE                     u9237:
 20096  018EAE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20097  018EB4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20098  018EBA  50EF               	movf	indf0,w,c
 20099  018EBC                     u9235:
 20100  018EBC  180C               	xorwf	(btemp+11)^0,w,c
 20101  018EBE  B4D8               	btfsc	status,2,c
 20102  018EC0  D766               	goto	l10222
 20103  018EC2                     u9230:
 20104                           
 20105                           ;stkvar	_l @ sp[(-4)+2]
 20106  018EC2  0EFE               	movlw	-2
 20107  018EC4  006F FF8F FFF6     	movff	plusw1,tblptrl
 20108  018ECA  0EFF               	movlw	-1
 20109  018ECC  006F FF8F FFF7     	movff	plusw1,tblptrh
 20110  018ED2  0E00               	movlw	low (__mediumconst shr (0+16))
 20111  018ED4  6EF8               	movwf	tblptru,c
 20112  018ED6  0E1F               	movlw	(high __ramtop+-1)
 20113  018ED8  64F7               	cpfsgt	tblptrh,c
 20114  018EDA  D003               	bra	u9247
 20115  018EDC  0008               	tblrd		*
 20116  018EDE  50F5               	movf	tablat,w,c
 20117  018EE0  D007               	bra	u9240
 20118  018EE2                     u9247:
 20119  018EE2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20120  018EE8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20121  018EEE  50EF               	movf	indf0,w,c
 20122  018EF0                     u9240:
 20123  018EF0  6E01               	movwf	btemp^0,c
 20124  018EF2  6A02               	clrf	(btemp+1)^0,c
 20125                           
 20126                           ;stkvar	_r @ sp[(-4)+0]
 20127  018EF4  50E1               	movf	fsr1l,w,c
 20128  018EF6  0FFC               	addlw	-4
 20129  018EF8  6ED9               	movwf	fsr2l,c
 20130  018EFA  50E2               	movf	fsr1h,w,c
 20131  018EFC  6EDA               	movwf	fsr2h,c
 20132  018EFE  0EFF               	movlw	255
 20133  018F00  22DA               	addwfc	fsr2h,f,c
 20134  018F02  006F FF7B FFF6     	movff	postinc2,tblptrl
 20135  018F08  006F FF77 FFF7     	movff	postdec2,tblptrh
 20136  018F0E                     	if	0	;tblptru may be non-zero
 20137  018F0E                     	endif
 20138  018F0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20139  018F0E  0E00               	movlw	low (__mediumconst shr (0+16))
 20140  018F10  6EF8               	movwf	tblptru,c
 20141  018F12                     	endif
 20142  018F12  0008               	tblrd		*
 20143  018F14  50F5               	movf	tablat,w,c
 20144  018F16  5E01               	subwf	btemp^0,f,c
 20145  018F18  0E00               	movlw	0
 20146  018F1A  5A02               	subwfb	(btemp+1)^0,f,c
 20147  018F1C                     l3729:
 20148                           
 20149                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 20150  018F1C  0EF6               	movlw	246
 20151  018F1E  26E1               	addwf	fsr1l,f,c
 20152  018F20  0EFF               	movlw	255
 20153  018F22  22E2               	addwfc	fsr1h,f,c
 20154  018F24  0012               	return		;funcret
 20155  018F26                     __end_of_strncmp:
 20156                           	opt callstack 0
 20157                           
 20158 ;; *************** function _stoa *****************
 20159 ;; Defined at:
 20160 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20161 ;; Parameters:    Size  Location     Type
 20162 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20163 ;;		 -> f(6), NULL(0), 
 20164 ;;  s               2  [STACK] PTR unsigned char 
 20165 ;;		 -> ?_printf(2), ?_sprintf(2), STR_75(9), STR_74(12), 
 20166 ;;		 -> D.lcd(480), D(482), T(144), cp(4), 
 20167 ;;		 -> cb(4), STR_3(5), V(192), 
 20168 ;; Auto vars:     Size  Location     Type
 20169 ;;  nuls            7  [STACK] unsigned char [7]
 20170 ;;  l               2  [STACK] int 
 20171 ;;  p               2  [STACK] int 
 20172 ;;  cp              2  [STACK] PTR unsigned char 
 20173 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_75(9), 
 20174 ;;		 -> STR_74(12), D.lcd(480), D(482), T(144), 
 20175 ;;		 -> cp(4), cb(4), STR_3(5), V(192), 
 20176 ;;  w               2  [STACK] int 
 20177 ;;  i               2  [STACK] int 
 20178 ;; Return value:  Size  Location     Type
 20179 ;;                  2  [STACK] int 
 20180 ;; Registers used:
 20181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20182 ;; Tracked objects:
 20183 ;;		On entry : 0/0
 20184 ;;		On exit  : 0/0
 20185 ;;		Unchanged: 0/0
 20186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20191 ;;Total ram usage:        0 bytes
 20192 ;; Hardware stack levels used:    1
 20193 ;; Hardware stack levels required when called:   18
 20194 ;; This function calls:
 20195 ;;		_fputc
 20196 ;;		_strlen
 20197 ;; This function is called by:
 20198 ;;		_vfpfcnvrt
 20199 ;; This function uses a reentrant model
 20200 ;;
 20201                           
 20202                           	psect	text76
 20203  0180CE                     __ptext76:
 20204                           	opt callstack 0
 20205  0180CE                     _stoa:
 20206                           	opt callstack 0
 20207                           
 20208                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20209  0180CE  0E11               	movlw	17
 20210  0180D0  26E1               	addwf	fsr1l,f,c
 20211  0180D2  0E00               	movlw	0
 20212  0180D4  22E2               	addwfc	fsr1h,f,c
 20213                           
 20214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 20215                           
 20216                           ;incstack = 0
 20217 ;; hardware stack exceeded
 20218  0180D6  EE20  F100         	lfsr	2,stoa@F1166
 20219                           
 20220                           ;stkvar	_nuls @ sp[(-17)+0]
 20221  0180DA  0E07               	movlw	7
 20222  0180DC  6E01               	movwf	btemp^0,c
 20223  0180DE  0EEF               	movlw	-17
 20224  0180E0                     us1277999:
 20225  0180E0  006F FF7B FFE3     	movff	postinc2,plusw1
 20226  0180E6  28E8               	incf	wreg,w,c
 20227  0180E8  2E01               	decfsz	btemp^0,f,c
 20228  0180EA  D7FA               	bra	us1277999
 20229                           
 20230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 20231                           ;stkvar	_s @ sp[(-17)+-4]
 20232  0180EC  0EEB               	movlw	-21
 20233  0180EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 20234  0180F4  0EEC               	movlw	-20
 20235  0180F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 20236                           
 20237                           ;stkvar	_cp @ sp[(-17)+11]
 20238  0180FC  0EFB               	movlw	-5
 20239  0180FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 20240  018104  0EFA               	movlw	-6
 20241  018106  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20242                           
 20243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 20244                           ;stkvar	_cp @ sp[(-17)+11]
 20245  01810C  0EFA               	movlw	-6
 20246  01810E  006F FF8C  F001    	movff	plusw1,btemp
 20247  018114  0EFB               	movlw	-5
 20248  018116  50E3               	movf	plusw1,w,c
 20249  018118  1001               	iorwf	btemp^0,w,c
 20250  01811A  A4D8               	btfss	status,2,c
 20251  01811C  D00E               	goto	l13732
 20252                           
 20253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 20254                           ;stkvar	_nuls @ sp[(-17)+0]
 20255  01811E  0EEF               	movlw	239
 20256  018120  24E1               	addwf	fsr1l,w,c
 20257  018122  6E0B               	movwf	(btemp+10)^0,c
 20258  018124  0EFF               	movlw	255
 20259  018126  20E2               	addwfc	fsr1h,w,c
 20260  018128  6E0C               	movwf	(btemp+11)^0,c
 20261                           
 20262                           ;stkvar	_cp @ sp[(-17)+11]
 20263  01812A  0EFB               	movlw	-5
 20264  01812C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20265  018132  0EFA               	movlw	-6
 20266  018134  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20267  01813A                     l13732:
 20268                           
 20269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 20270                           ;stkvar	_cp @ sp[(-17)+11]
 20271  01813A  0EFA               	movlw	-6
 20272  01813C  006F FF8F FFE6     	movff	plusw1,postinc1
 20273  018142  006F FF8F FFE6     	movff	plusw1,postinc1
 20274  018148  ECD6  F0DF         	call	_strlen	;wreg free
 20275                           
 20276                           ;stkvar	_l @ sp[(-17)+7]
 20277  01814C  0EF6               	movlw	-10
 20278  01814E  0060  F007  FFE3   	movff	btemp,plusw1
 20279  018154  0EF7               	movlw	-9
 20280  018156  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20281                           
 20282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 20283                           ;stkvar	_p @ sp[(-17)+9]
 20284  01815C  0EF8               	movlw	-8
 20285  01815E  0060  F0F3  FFE3   	movff	_prec,plusw1
 20286  018164  0EF9               	movlw	-7
 20287  018166  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20288                           
 20289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 20290                           ;stkvar	_p @ sp[(-17)+9]
 20291  01816C  0EF9               	movlw	-7
 20292  01816E  BEE3               	btfsc	plusw1,7,c
 20293  018170  D023               	goto	l2554
 20294                           
 20295                           ;stkvar	_l @ sp[(-17)+7]
 20296                           ;stkvar	_p @ sp[(-17)+9]
 20297  018172  50E1               	movf	fsr1l,w,c
 20298  018174  0FF8               	addlw	-8
 20299  018176  6ED9               	movwf	fsr2l,c
 20300  018178  50E2               	movf	fsr1h,w,c
 20301  01817A  6EDA               	movwf	fsr2h,c
 20302  01817C  0EFF               	movlw	255
 20303  01817E  22DA               	addwfc	fsr2h,f,c
 20304  018180  0EF6               	movlw	-10
 20305  018182  50E3               	movf	plusw1,w,c
 20306  018184  5CDE               	subwf	postinc2,w,c
 20307  018186  50DE               	movf	postinc2,w,c
 20308  018188  0A80               	xorlw	128
 20309  01818A  6E01               	movwf	btemp^0,c
 20310  01818C  0EF7               	movlw	-9
 20311  01818E  50E3               	movf	plusw1,w,c
 20312  018190  0A80               	xorlw	128
 20313  018192  5801               	subwfb	btemp^0,w,c
 20314  018194  B0D8               	btfsc	status,0,c
 20315  018196  D010               	goto	l2554
 20316                           
 20317                           ;stkvar	_p @ sp[(-17)+9]
 20318                           ;stkvar	_l @ sp[(-17)+7]
 20319  018198  0EF8               	movlw	-8
 20320  01819A  006F FF8C  F001    	movff	plusw1,btemp
 20321  0181A0  0EF6               	movlw	-10
 20322  0181A2  0060  F007  FFE3   	movff	btemp,plusw1
 20323  0181A8  0EF9               	movlw	-7
 20324  0181AA  006F FF8C  F001    	movff	plusw1,btemp
 20325  0181B0  0EF7               	movlw	-9
 20326  0181B2  0060  F007  FFE3   	movff	btemp,plusw1
 20327  0181B8                     l2554:
 20328                           
 20329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 20330                           ;stkvar	_l @ sp[(-17)+7]
 20331                           ;stkvar	_p @ sp[(-17)+9]
 20332  0181B8  0EF6               	movlw	-10
 20333  0181BA  006F FF8C  F001    	movff	plusw1,btemp
 20334  0181C0  0EF8               	movlw	-8
 20335  0181C2  0060  F007  FFE3   	movff	btemp,plusw1
 20336  0181C8  0EF7               	movlw	-9
 20337  0181CA  006F FF8C  F001    	movff	plusw1,btemp
 20338  0181D0  0EF9               	movlw	-7
 20339  0181D2  0060  F007  FFE3   	movff	btemp,plusw1
 20340                           
 20341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 20342                           ;stkvar	_w @ sp[(-17)+13]
 20343  0181D8  0EFC               	movlw	-4
 20344  0181DA  0060  F0EB  FFE3   	movff	_width,plusw1
 20345  0181E0  0EFD               	movlw	-3
 20346  0181E2  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20347                           
 20348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 20349  0181E8  A03E               	btfss	_flags^0,0,c
 20350  0181EA  D01F               	goto	l13752
 20351  0181EC  D031               	goto	u12820
 20352  0181EE                     l13748:
 20353                           
 20354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 20355                           ;stkvar	_fp @ sp[(-17)+-2]
 20356  0181EE  0EED               	movlw	-19
 20357  0181F0  006F FF8F FFE6     	movff	plusw1,postinc1
 20358  0181F6  006F FF8F FFE6     	movff	plusw1,postinc1
 20359  0181FC  0E20               	movlw	32
 20360  0181FE  6EE6               	movwf	postinc1,c
 20361  018200  0E00               	movlw	0
 20362  018202  6EE6               	movwf	postinc1,c
 20363  018204  EC7C  F0D5         	call	_fputc	;wreg free
 20364                           
 20365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 20366                           ;stkvar	_l @ sp[(-17)+7]
 20367  018208  0EF6               	movlw	-10
 20368  01820A  50E3               	movf	plusw1,w,c
 20369  01820C  0F01               	addlw	1
 20370  01820E  6E01               	movwf	btemp^0,c
 20371  018210  0EF6               	movlw	-10
 20372  018212  0060  F007  FFE3   	movff	btemp,plusw1
 20373  018218  6A01               	clrf	btemp^0,c
 20374  01821A  0EF7               	movlw	-9
 20375  01821C  50E3               	movf	plusw1,w,c
 20376  01821E  2001               	addwfc	btemp^0,w,c
 20377  018220  6E01               	movwf	btemp^0,c
 20378  018222  0EF7               	movlw	-9
 20379  018224  0060  F007  FFE3   	movff	btemp,plusw1
 20380  01822A                     l13752:
 20381                           
 20382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 20383                           ;stkvar	_w @ sp[(-17)+13]
 20384                           ;stkvar	_l @ sp[(-17)+7]
 20385  01822A  50E1               	movf	fsr1l,w,c
 20386  01822C  0FF6               	addlw	-10
 20387  01822E  6ED9               	movwf	fsr2l,c
 20388  018230  50E2               	movf	fsr1h,w,c
 20389  018232  6EDA               	movwf	fsr2h,c
 20390  018234  0EFF               	movlw	255
 20391  018236  22DA               	addwfc	fsr2h,f,c
 20392  018238  0EFC               	movlw	-4
 20393  01823A  50E3               	movf	plusw1,w,c
 20394  01823C  5CDE               	subwf	postinc2,w,c
 20395  01823E  50DE               	movf	postinc2,w,c
 20396  018240  0A80               	xorlw	128
 20397  018242  6E01               	movwf	btemp^0,c
 20398  018244  0EFD               	movlw	-3
 20399  018246  50E3               	movf	plusw1,w,c
 20400  018248  0A80               	xorlw	128
 20401  01824A  5801               	subwfb	btemp^0,w,c
 20402  01824C  A0D8               	btfss	status,0,c
 20403  01824E  D7CF               	goto	l13748
 20404  018250                     u12820:
 20405                           
 20406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 20407                           ;stkvar	_i @ sp[(-17)+15]
 20408  018250  0EFE               	movlw	-2
 20409  018252  6AE3               	clrf	plusw1,c
 20410  018254  0EFF               	movlw	-1
 20411  018256  6AE3               	clrf	plusw1,c
 20412                           
 20413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 20414  018258  D045               	goto	l13762
 20415  01825A                     l13756:
 20416                           
 20417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 20418                           ;stkvar	_fp @ sp[(-17)+-2]
 20419  01825A  0EED               	movlw	-19
 20420  01825C  006F FF8F FFE6     	movff	plusw1,postinc1
 20421  018262  006F FF8F FFE6     	movff	plusw1,postinc1
 20422                           
 20423                           ;stkvar	_cp @ sp[(-19)+11]
 20424  018268  0EF8               	movlw	-8
 20425  01826A  006F FF8F FFF6     	movff	plusw1,tblptrl
 20426  018270  0EF9               	movlw	-7
 20427  018272  006F FF8F FFF7     	movff	plusw1,tblptrh
 20428  018278  0E00               	movlw	low (__mediumconst shr (0+16))
 20429  01827A  6EF8               	movwf	tblptru,c
 20430  01827C  0E1F               	movlw	(high __ramtop+-1)
 20431  01827E  64F7               	cpfsgt	tblptrh,c
 20432  018280  D003               	bra	u12837
 20433  018282  0008               	tblrd		*
 20434  018284  50F5               	movf	tablat,w,c
 20435  018286  D007               	bra	u12830
 20436  018288                     u12837:
 20437  018288  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20438  01828E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20439  018294  50EF               	movf	indf0,w,c
 20440  018296                     u12830:
 20441  018296  6EE6               	movwf	postinc1,c
 20442  018298  0E00               	movlw	0
 20443  01829A  6EE6               	movwf	postinc1,c
 20444  01829C  EC7C  F0D5         	call	_fputc	;wreg free
 20445                           
 20446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 20447                           ;stkvar	_cp @ sp[(-17)+11]
 20448  0182A0  0EFA               	movlw	-6
 20449  0182A2  50E3               	movf	plusw1,w,c
 20450  0182A4  0F01               	addlw	1
 20451  0182A6  6E01               	movwf	btemp^0,c
 20452  0182A8  0EFA               	movlw	-6
 20453  0182AA  0060  F007  FFE3   	movff	btemp,plusw1
 20454  0182B0  6A01               	clrf	btemp^0,c
 20455  0182B2  0EFB               	movlw	-5
 20456  0182B4  50E3               	movf	plusw1,w,c
 20457  0182B6  2001               	addwfc	btemp^0,w,c
 20458  0182B8  6E01               	movwf	btemp^0,c
 20459  0182BA  0EFB               	movlw	-5
 20460  0182BC  0060  F007  FFE3   	movff	btemp,plusw1
 20461                           
 20462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 20463                           ;stkvar	_i @ sp[(-17)+15]
 20464  0182C2  0EFE               	movlw	-2
 20465  0182C4  50E3               	movf	plusw1,w,c
 20466  0182C6  0F01               	addlw	1
 20467  0182C8  6E01               	movwf	btemp^0,c
 20468  0182CA  0EFE               	movlw	-2
 20469  0182CC  0060  F007  FFE3   	movff	btemp,plusw1
 20470  0182D2  6A01               	clrf	btemp^0,c
 20471  0182D4  0EFF               	movlw	-1
 20472  0182D6  50E3               	movf	plusw1,w,c
 20473  0182D8  2001               	addwfc	btemp^0,w,c
 20474  0182DA  6E01               	movwf	btemp^0,c
 20475  0182DC  0EFF               	movlw	-1
 20476  0182DE  0060  F007  FFE3   	movff	btemp,plusw1
 20477  0182E4                     l13762:
 20478                           
 20479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 20480                           ;stkvar	_p @ sp[(-17)+9]
 20481                           ;stkvar	_i @ sp[(-17)+15]
 20482  0182E4  50E1               	movf	fsr1l,w,c
 20483  0182E6  0FFE               	addlw	-2
 20484  0182E8  6ED9               	movwf	fsr2l,c
 20485  0182EA  50E2               	movf	fsr1h,w,c
 20486  0182EC  6EDA               	movwf	fsr2h,c
 20487  0182EE  0EFF               	movlw	255
 20488  0182F0  22DA               	addwfc	fsr2h,f,c
 20489  0182F2  0EF8               	movlw	-8
 20490  0182F4  50E3               	movf	plusw1,w,c
 20491  0182F6  5CDE               	subwf	postinc2,w,c
 20492  0182F8  50DE               	movf	postinc2,w,c
 20493  0182FA  0A80               	xorlw	128
 20494  0182FC  6E01               	movwf	btemp^0,c
 20495  0182FE  0EF9               	movlw	-7
 20496  018300  50E3               	movf	plusw1,w,c
 20497  018302  0A80               	xorlw	128
 20498  018304  5801               	subwfb	btemp^0,w,c
 20499  018306  A0D8               	btfss	status,0,c
 20500  018308  D7A8               	goto	l13756
 20501                           
 20502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 20503  01830A  B03E               	btfsc	_flags^0,0,c
 20504  01830C  D01F               	goto	l13770
 20505  01830E  D031               	goto	u12860
 20506  018310                     l13766:
 20507                           
 20508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 20509                           ;stkvar	_fp @ sp[(-17)+-2]
 20510  018310  0EED               	movlw	-19
 20511  018312  006F FF8F FFE6     	movff	plusw1,postinc1
 20512  018318  006F FF8F FFE6     	movff	plusw1,postinc1
 20513  01831E  0E20               	movlw	32
 20514  018320  6EE6               	movwf	postinc1,c
 20515  018322  0E00               	movlw	0
 20516  018324  6EE6               	movwf	postinc1,c
 20517  018326  EC7C  F0D5         	call	_fputc	;wreg free
 20518                           
 20519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 20520                           ;stkvar	_l @ sp[(-17)+7]
 20521  01832A  0EF6               	movlw	-10
 20522  01832C  50E3               	movf	plusw1,w,c
 20523  01832E  0F01               	addlw	1
 20524  018330  6E01               	movwf	btemp^0,c
 20525  018332  0EF6               	movlw	-10
 20526  018334  0060  F007  FFE3   	movff	btemp,plusw1
 20527  01833A  6A01               	clrf	btemp^0,c
 20528  01833C  0EF7               	movlw	-9
 20529  01833E  50E3               	movf	plusw1,w,c
 20530  018340  2001               	addwfc	btemp^0,w,c
 20531  018342  6E01               	movwf	btemp^0,c
 20532  018344  0EF7               	movlw	-9
 20533  018346  0060  F007  FFE3   	movff	btemp,plusw1
 20534  01834C                     l13770:
 20535                           
 20536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 20537                           ;stkvar	_w @ sp[(-17)+13]
 20538                           ;stkvar	_l @ sp[(-17)+7]
 20539  01834C  50E1               	movf	fsr1l,w,c
 20540  01834E  0FF6               	addlw	-10
 20541  018350  6ED9               	movwf	fsr2l,c
 20542  018352  50E2               	movf	fsr1h,w,c
 20543  018354  6EDA               	movwf	fsr2h,c
 20544  018356  0EFF               	movlw	255
 20545  018358  22DA               	addwfc	fsr2h,f,c
 20546  01835A  0EFC               	movlw	-4
 20547  01835C  50E3               	movf	plusw1,w,c
 20548  01835E  5CDE               	subwf	postinc2,w,c
 20549  018360  50DE               	movf	postinc2,w,c
 20550  018362  0A80               	xorlw	128
 20551  018364  6E01               	movwf	btemp^0,c
 20552  018366  0EFD               	movlw	-3
 20553  018368  50E3               	movf	plusw1,w,c
 20554  01836A  0A80               	xorlw	128
 20555  01836C  5801               	subwfb	btemp^0,w,c
 20556  01836E  A0D8               	btfss	status,0,c
 20557  018370  D7CF               	goto	l13766
 20558  018372                     u12860:
 20559                           
 20560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 20561                           ;stkvar	_l @ sp[(-17)+7]
 20562  018372  0EF6               	movlw	-10
 20563  018374  006F FF8C  F001    	movff	plusw1,btemp
 20564  01837A  0EF7               	movlw	-9
 20565  01837C  006F FF8C  F002    	movff	plusw1,btemp+1
 20566                           
 20567                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20568  018382  0EEB               	movlw	235
 20569  018384  26E1               	addwf	fsr1l,f,c
 20570  018386  0EFF               	movlw	255
 20571  018388  22E2               	addwfc	fsr1h,f,c
 20572  01838A  0012               	return		;funcret
 20573  01838C                     __end_of_stoa:
 20574                           	opt callstack 0
 20575                           
 20576 ;; *************** function _efgtoa *****************
 20577 ;; Defined at:
 20578 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20579 ;; Parameters:    Size  Location     Type
 20580 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20581 ;;		 -> f(6), NULL(0), 
 20582 ;;  f               4  [STACK] PTR struct _IO_FILE
 20583 ;;  c               1  [STACK] unsigned char 
 20584 ;; Auto vars:     Size  Location     Type
 20585 ;;  u               4  [STACK] unsigned char 
 20586 ;;  g               4  [STACK] unsigned char 
 20587 ;;  l               4  [STACK] unsigned char 
 20588 ;;  h               4  [STACK] unsigned char 
 20589 ;;  ou              4  [STACK] unsigned char 
 20590 ;;  n               2  [STACK] int 
 20591 ;;  e               2  [STACK] int 
 20592 ;;  i               2  [STACK] int 
 20593 ;;  w               2  [STACK] int 
 20594 ;;  p               2  [STACK] int 
 20595 ;;  sign            2  [STACK] int 
 20596 ;;  d               2  [STACK] int 
 20597 ;;  ne              2  [STACK] int 
 20598 ;;  m               2  [STACK] int 
 20599 ;;  pp              2  [STACK] int 
 20600 ;;  t               2  [STACK] int 
 20601 ;;  mode            1  [STACK] unsigned char 
 20602 ;;  nmode           1  [STACK] unsigned char 
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  2  [STACK] int 
 20605 ;; Registers used:
 20606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 20607 ;; Tracked objects:
 20608 ;;		On entry : 0/0
 20609 ;;		On exit  : 0/0
 20610 ;;		Unchanged: 0/0
 20611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20616 ;;Total ram usage:        0 bytes
 20617 ;; Hardware stack levels used:    1
 20618 ;; Hardware stack levels required when called:   20
 20619 ;; This function calls:
 20620 ;;		___awdiv
 20621 ;;		___awmod
 20622 ;;		___fladd
 20623 ;;		___fldiv
 20624 ;;		___fleq
 20625 ;;		___flge
 20626 ;;		___flmul
 20627 ;;		___flneg
 20628 ;;		___flsub
 20629 ;;		___fltol
 20630 ;;		___fpclassifyf
 20631 ;;		_floorf
 20632 ;;		_isupper
 20633 ;;		_pad
 20634 ;;		_strcpy
 20635 ;;		_tolower
 20636 ;; This function is called by:
 20637 ;;		_vfpfcnvrt
 20638 ;; This function uses a reentrant model
 20639 ;;
 20640                           
 20641                           	psect	text77
 20642  01127E                     __ptext77:
 20643                           	opt callstack 0
 20644  01127E                     _efgtoa:
 20645                           	opt callstack 0
 20646                           
 20647                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20648  01127E  0E38               	movlw	56
 20649  011280  26E1               	addwf	fsr1l,f,c
 20650  011282  0E00               	movlw	0
 20651  011284  22E2               	addwfc	fsr1h,f,c
 20652                           
 20653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 20654                           ;stkvar	_sign @ sp[(-56)+42]
 20655                           
 20656                           ;incstack = 0
 20657 ;; hardware stack exceeded
 20658  011286  0EF2               	movlw	-14
 20659  011288  6AE3               	clrf	plusw1,c
 20660  01128A  0EF3               	movlw	-13
 20661  01128C  6AE3               	clrf	plusw1,c
 20662                           
 20663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 20664                           ;stkvar	_f @ sp[(-56)+-6]
 20665  01128E  0EC2               	movlw	-62
 20666  011290  006F FF8C  F009    	movff	plusw1,btemp+8
 20667  011296  0EC3               	movlw	-61
 20668  011298  006F FF8C  F00A    	movff	plusw1,btemp+9
 20669  01129E  0EC4               	movlw	-60
 20670  0112A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20671  0112A6  0EC5               	movlw	-59
 20672  0112A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20673                           
 20674                           ;stkvar	_g @ sp[(-56)+16]
 20675  0112AE  0ED8               	movlw	-40
 20676  0112B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 20677  0112B6  0ED9               	movlw	-39
 20678  0112B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20679  0112BE  0EDA               	movlw	-38
 20680  0112C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20681  0112C6  0EDB               	movlw	-37
 20682  0112C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 20683                           
 20684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 20685                           ;stkvar	_g @ sp[(-56)+16]
 20686  0112CE  0EDB               	movlw	-37
 20687  0112D0  AEE3               	btfss	plusw1,7,c
 20688  0112D2  D02B               	goto	l13430
 20689                           
 20690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 20691  0112D4  0E01               	movlw	1
 20692  0112D6  6E0B               	movwf	(btemp+10)^0,c
 20693  0112D8  0E00               	movlw	0
 20694  0112DA  6E0C               	movwf	(btemp+11)^0,c
 20695                           
 20696                           ;stkvar	_sign @ sp[(-56)+42]
 20697  0112DC  0EF2               	movlw	-14
 20698  0112DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20699  0112E4  0EF3               	movlw	-13
 20700  0112E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 20701                           
 20702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 20703                           ;stkvar	_g @ sp[(-56)+16]
 20704  0112EC  0ED8               	movlw	-40
 20705  0112EE  006F FF8F FFE6     	movff	plusw1,postinc1
 20706  0112F4  006F FF8F FFE6     	movff	plusw1,postinc1
 20707  0112FA  006F FF8F FFE6     	movff	plusw1,postinc1
 20708  011300  006F FF8F FFE6     	movff	plusw1,postinc1
 20709  011306  ECFE  F0E6         	call	___flneg	;wreg free
 20710                           
 20711                           ;stkvar	_g @ sp[(-56)+16]
 20712  01130A  0ED8               	movlw	-40
 20713  01130C  0060  F007  FFE3   	movff	btemp,plusw1
 20714  011312  0ED9               	movlw	-39
 20715  011314  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20716  01131A  0EDA               	movlw	-38
 20717  01131C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20718  011322  0EDB               	movlw	-37
 20719  011324  0060  F013  FFE3   	movff	btemp+3,plusw1
 20720  01132A                     l13430:
 20721                           
 20722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 20723                           ;stkvar	_n @ sp[(-56)+32]
 20724  01132A  0EE8               	movlw	-24
 20725  01132C  6AE3               	clrf	plusw1,c
 20726  01132E  0EE9               	movlw	-23
 20727  011330  6AE3               	clrf	plusw1,c
 20728                           
 20729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 20730                           ;stkvar	_w @ sp[(-56)+38]
 20731  011332  0EEE               	movlw	-18
 20732  011334  0060  F0EB  FFE3   	movff	_width,plusw1
 20733  01133A  0EEF               	movlw	-17
 20734  01133C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20735                           
 20736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 20737                           ;stkvar	_sign @ sp[(-56)+42]
 20738  011342  0EF2               	movlw	-14
 20739  011344  006F FF8C  F001    	movff	plusw1,btemp
 20740  01134A  0EF3               	movlw	-13
 20741  01134C  50E3               	movf	plusw1,w,c
 20742  01134E  1001               	iorwf	btemp^0,w,c
 20743  011350  A4D8               	btfss	status,2,c
 20744  011352  D002               	goto	u12270
 20745  011354  A43E               	btfss	_flags^0,2,c
 20746  011356  D036               	goto	l13450
 20747  011358                     u12270:
 20748                           
 20749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 20750                           ;stkvar	_sign @ sp[(-56)+42]
 20751  011358  0EF2               	movlw	-14
 20752  01135A  006F FF8C  F001    	movff	plusw1,btemp
 20753  011360  0EF3               	movlw	-13
 20754  011362  50E3               	movf	plusw1,w,c
 20755  011364  1001               	iorwf	btemp^0,w,c
 20756  011366  A4D8               	btfss	status,2,c
 20757  011368  D002               	goto	l13442
 20758  01136A  0E2B               	movlw	43
 20759  01136C  D001               	goto	L22
 20760  01136E                     l13442:
 20761  01136E  0E2D               	movlw	45
 20762  011370                     L22:
 20763  011370  6E0B               	movwf	(btemp+10)^0,c
 20764  011372  0E00               	movlw	0
 20765  011374  6E0C               	movwf	(btemp+11)^0,c
 20766                           
 20767                           ;stkvar	_efgtoa$6187 @ sp[(-56)+10]
 20768  011376  0ED2               	movlw	-46
 20769  011378  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20770  01137E  0ED3               	movlw	-45
 20771  011380  0060  F033  FFE3   	movff	btemp+11,plusw1
 20772                           
 20773                           ;stkvar	_efgtoa$6187 @ sp[(-56)+10]
 20774  011386  0ED2               	movlw	-46
 20775  011388  006F FF8C  F243    	movff	plusw1,_dbuf
 20776                           
 20777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 20778                           ;stkvar	_n @ sp[(-56)+32]
 20779  01138E  0EE8               	movlw	-24
 20780  011390  50E3               	movf	plusw1,w,c
 20781  011392  0F01               	addlw	1
 20782  011394  6E01               	movwf	btemp^0,c
 20783  011396  0EE8               	movlw	-24
 20784  011398  0060  F007  FFE3   	movff	btemp,plusw1
 20785  01139E  6A01               	clrf	btemp^0,c
 20786  0113A0  0EE9               	movlw	-23
 20787  0113A2  50E3               	movf	plusw1,w,c
 20788  0113A4  2001               	addwfc	btemp^0,w,c
 20789  0113A6  6E01               	movwf	btemp^0,c
 20790  0113A8  0EE9               	movlw	-23
 20791  0113AA  0060  F007  FFE3   	movff	btemp,plusw1
 20792                           
 20793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 20794                           ;stkvar	_w @ sp[(-56)+38]
 20795  0113B0  50E1               	movf	fsr1l,w,c
 20796  0113B2  0FEE               	addlw	-18
 20797  0113B4  6ED9               	movwf	fsr2l,c
 20798  0113B6  50E2               	movf	fsr1h,w,c
 20799  0113B8  6EDA               	movwf	fsr2h,c
 20800  0113BA  0EFF               	movlw	255
 20801  0113BC  22DA               	addwfc	fsr2h,f,c
 20802  0113BE  06DE               	decf	postinc2,f,c
 20803  0113C0  0E00               	movlw	0
 20804  0113C2  5ADD               	subwfb	postdec2,f,c
 20805  0113C4                     l13450:
 20806                           
 20807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 20808                           ;stkvar	_g @ sp[(-56)+16]
 20809  0113C4  0ED8               	movlw	-40
 20810  0113C6  006F FF8F FFE6     	movff	plusw1,postinc1
 20811  0113CC  006F FF8F FFE6     	movff	plusw1,postinc1
 20812  0113D2  006F FF8F FFE6     	movff	plusw1,postinc1
 20813  0113D8  006F FF8F FFE6     	movff	plusw1,postinc1
 20814  0113DE  EC3F  F0CD         	call	___fpclassifyf	;wreg free
 20815  0113E2  0401               	decf	btemp^0,w,c
 20816  0113E4  1002               	iorwf	(btemp+1)^0,w,c
 20817  0113E6  A4D8               	btfss	status,2,c
 20818  0113E8  D076               	goto	l13468
 20819  0113EA  0EBF               	movlw	191
 20820  0113EC  6E0B               	movwf	(btemp+10)^0,c
 20821  0113EE  0EFF               	movlw	255
 20822  0113F0  6E0C               	movwf	(btemp+11)^0,c
 20823                           
 20824                           ;stkvar	_c @ sp[(-56)+-7]
 20825  0113F2  0EC1               	movlw	-63
 20826  0113F4  50E3               	movf	plusw1,w,c
 20827  0113F6  6E09               	movwf	(btemp+8)^0,c
 20828  0113F8  6A0A               	clrf	(btemp+9)^0,c
 20829  0113FA  500B               	movf	(btemp+10)^0,w,c
 20830  0113FC  2609               	addwf	(btemp+8)^0,f,c
 20831  0113FE  500C               	movf	(btemp+11)^0,w,c
 20832  011400  220A               	addwfc	(btemp+9)^0,f,c
 20833  011402  500A               	movf	(btemp+9)^0,w,c
 20834  011404  E106               	bnz	u12300
 20835  011406  0E1A               	movlw	26
 20836  011408  5C09               	subwf	(btemp+8)^0,w,c
 20837  01140A  B0D8               	btfsc	status,0,c
 20838  01140C  D002               	goto	u12300
 20839  01140E  0E01               	movlw	1
 20840  011410  D001               	goto	u12310
 20841  011412                     u12300:
 20842  011412  0E00               	movlw	0
 20843  011414                     u12310:
 20844  011414  6E0B               	movwf	(btemp+10)^0,c
 20845  011416  6A0C               	clrf	(btemp+11)^0,c
 20846                           
 20847                           ;stkvar	_efgtoa$6188 @ sp[(-56)+8]
 20848  011418  0ED0               	movlw	-48
 20849  01141A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20850  011420  0ED1               	movlw	-47
 20851  011422  0060  F033  FFE3   	movff	btemp+11,plusw1
 20852                           
 20853                           ;stkvar	_efgtoa$6188 @ sp[(-56)+8]
 20854  011428  0ED0               	movlw	-48
 20855  01142A  006F FF8C  F001    	movff	plusw1,btemp
 20856  011430  0ED1               	movlw	-47
 20857  011432  50E3               	movf	plusw1,w,c
 20858  011434  1001               	iorwf	btemp^0,w,c
 20859  011436  B4D8               	btfsc	status,2,c
 20860  011438  D017               	goto	l13460
 20861                           
 20862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 20863  01143A  0ED7               	movlw	low STR_94
 20864  01143C  6EE6               	movwf	postinc1,c
 20865  01143E  0EFF               	movlw	high STR_94
 20866  011440  6EE6               	movwf	postinc1,c
 20867                           
 20868                           ;stkvar	_n @ sp[(-58)+32]
 20869  011442  0E43               	movlw	low _dbuf
 20870  011444  6E0B               	movwf	(btemp+10)^0,c
 20871  011446  0E02               	movlw	high _dbuf
 20872  011448  6E0C               	movwf	(btemp+11)^0,c
 20873  01144A  0EE6               	movlw	-26
 20874  01144C  50E3               	movf	plusw1,w,c
 20875  01144E  260B               	addwf	(btemp+10)^0,f,c
 20876  011450  0EE7               	movlw	-25
 20877  011452  50E3               	movf	plusw1,w,c
 20878  011454  220C               	addwfc	(btemp+11)^0,f,c
 20879  011456  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20880  01145C  0060  F033  FFE6   	movff	btemp+11,postinc1
 20881  011462  EC21  F0DB         	call	_strcpy	;wreg free
 20882                           
 20883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 20884  011466  D016               	goto	l13462
 20885  011468                     l13460:
 20886                           
 20887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 20888  011468  0EDF               	movlw	low STR_95
 20889  01146A  6EE6               	movwf	postinc1,c
 20890  01146C  0EFF               	movlw	high STR_95
 20891  01146E  6EE6               	movwf	postinc1,c
 20892                           
 20893                           ;stkvar	_n @ sp[(-58)+32]
 20894  011470  0E43               	movlw	low _dbuf
 20895  011472  6E0B               	movwf	(btemp+10)^0,c
 20896  011474  0E02               	movlw	high _dbuf
 20897  011476  6E0C               	movwf	(btemp+11)^0,c
 20898  011478  0EE6               	movlw	-26
 20899  01147A  50E3               	movf	plusw1,w,c
 20900  01147C  260B               	addwf	(btemp+10)^0,f,c
 20901  01147E  0EE7               	movlw	-25
 20902  011480  50E3               	movf	plusw1,w,c
 20903  011482  220C               	addwfc	(btemp+11)^0,f,c
 20904  011484  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20905  01148A  0060  F033  FFE6   	movff	btemp+11,postinc1
 20906  011490  EC21  F0DB         	call	_strcpy	;wreg free
 20907  011494                     l13462:
 20908                           
 20909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 20910                           ;stkvar	_w @ sp[(-56)+38]
 20911  011494  50E1               	movf	fsr1l,w,c
 20912  011496  0FEE               	addlw	-18
 20913  011498  6ED9               	movwf	fsr2l,c
 20914  01149A  50E2               	movf	fsr1h,w,c
 20915  01149C  6EDA               	movwf	fsr2h,c
 20916  01149E  0EFF               	movlw	255
 20917  0114A0  22DA               	addwfc	fsr2h,f,c
 20918  0114A2  0EFD               	movlw	253
 20919  0114A4  26DE               	addwf	postinc2,f,c
 20920  0114A6  0EFF               	movlw	255
 20921  0114A8  22DD               	addwfc	postdec2,f,c
 20922  0114AA                     l13464:
 20923                           
 20924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 20925                           ;stkvar	_w @ sp[(-56)+38]
 20926  0114AA  0EEE               	movlw	-18
 20927  0114AC  006F FF8F FFE6     	movff	plusw1,postinc1
 20928  0114B2  006F FF8F FFE6     	movff	plusw1,postinc1
 20929  0114B8  0E43               	movlw	low _dbuf
 20930  0114BA  6EE6               	movwf	postinc1,c
 20931  0114BC  0E02               	movlw	high _dbuf
 20932  0114BE  6EE6               	movwf	postinc1,c
 20933                           
 20934                           ;stkvar	_fp @ sp[(-60)+-2]
 20935  0114C0  0EC2               	movlw	-62
 20936  0114C2  006F FF8F FFE6     	movff	plusw1,postinc1
 20937  0114C8  006F FF8F FFE6     	movff	plusw1,postinc1
 20938  0114CE  ECB2  F0D7         	call	_pad	;wreg free
 20939  0114D2  EF5C  F092         	goto	l2472
 20940  0114D6                     l13468:
 20941                           
 20942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 20943                           ;stkvar	_g @ sp[(-56)+16]
 20944  0114D6  0ED8               	movlw	-40
 20945  0114D8  006F FF8F FFE6     	movff	plusw1,postinc1
 20946  0114DE  006F FF8F FFE6     	movff	plusw1,postinc1
 20947  0114E4  006F FF8F FFE6     	movff	plusw1,postinc1
 20948  0114EA  006F FF8F FFE6     	movff	plusw1,postinc1
 20949  0114F0  EC3F  F0CD         	call	___fpclassifyf	;wreg free
 20950  0114F4  5001               	movf	btemp^0,w,c
 20951  0114F6  1002               	iorwf	(btemp+1)^0,w,c
 20952  0114F8  A4D8               	btfss	status,2,c
 20953  0114FA  D056               	goto	l13486
 20954  0114FC  0EBF               	movlw	191
 20955  0114FE  6E0B               	movwf	(btemp+10)^0,c
 20956  011500  0EFF               	movlw	255
 20957  011502  6E0C               	movwf	(btemp+11)^0,c
 20958                           
 20959                           ;stkvar	_c @ sp[(-56)+-7]
 20960  011504  0EC1               	movlw	-63
 20961  011506  50E3               	movf	plusw1,w,c
 20962  011508  6E09               	movwf	(btemp+8)^0,c
 20963  01150A  6A0A               	clrf	(btemp+9)^0,c
 20964  01150C  500B               	movf	(btemp+10)^0,w,c
 20965  01150E  2609               	addwf	(btemp+8)^0,f,c
 20966  011510  500C               	movf	(btemp+11)^0,w,c
 20967  011512  220A               	addwfc	(btemp+9)^0,f,c
 20968  011514  500A               	movf	(btemp+9)^0,w,c
 20969  011516  E106               	bnz	u12340
 20970  011518  0E1A               	movlw	26
 20971  01151A  5C09               	subwf	(btemp+8)^0,w,c
 20972  01151C  B0D8               	btfsc	status,0,c
 20973  01151E  D002               	goto	u12340
 20974  011520  0E01               	movlw	1
 20975  011522  D001               	goto	u12350
 20976  011524                     u12340:
 20977  011524  0E00               	movlw	0
 20978  011526                     u12350:
 20979  011526  6E0B               	movwf	(btemp+10)^0,c
 20980  011528  6A0C               	clrf	(btemp+11)^0,c
 20981                           
 20982                           ;stkvar	_efgtoa$6192 @ sp[(-56)+6]
 20983  01152A  0ECE               	movlw	-50
 20984  01152C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20985  011532  0ECF               	movlw	-49
 20986  011534  0060  F033  FFE3   	movff	btemp+11,plusw1
 20987                           
 20988                           ;stkvar	_efgtoa$6192 @ sp[(-56)+6]
 20989  01153A  0ECE               	movlw	-50
 20990  01153C  006F FF8C  F001    	movff	plusw1,btemp
 20991  011542  0ECF               	movlw	-49
 20992  011544  50E3               	movf	plusw1,w,c
 20993  011546  1001               	iorwf	btemp^0,w,c
 20994  011548  B4D8               	btfsc	status,2,c
 20995  01154A  D017               	goto	l13478
 20996                           
 20997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 20998  01154C  0EDB               	movlw	low STR_98
 20999  01154E  6EE6               	movwf	postinc1,c
 21000  011550  0EFF               	movlw	high STR_98
 21001  011552  6EE6               	movwf	postinc1,c
 21002                           
 21003                           ;stkvar	_n @ sp[(-58)+32]
 21004  011554  0E43               	movlw	low _dbuf
 21005  011556  6E0B               	movwf	(btemp+10)^0,c
 21006  011558  0E02               	movlw	high _dbuf
 21007  01155A  6E0C               	movwf	(btemp+11)^0,c
 21008  01155C  0EE6               	movlw	-26
 21009  01155E  50E3               	movf	plusw1,w,c
 21010  011560  260B               	addwf	(btemp+10)^0,f,c
 21011  011562  0EE7               	movlw	-25
 21012  011564  50E3               	movf	plusw1,w,c
 21013  011566  220C               	addwfc	(btemp+11)^0,f,c
 21014  011568  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21015  01156E  0060  F033  FFE6   	movff	btemp+11,postinc1
 21016  011574  EC21  F0DB         	call	_strcpy	;wreg free
 21017                           
 21018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 21019  011578  D78D               	goto	l13462
 21020  01157A                     l13478:
 21021                           
 21022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 21023  01157A  0EE3               	movlw	low STR_99
 21024  01157C  6EE6               	movwf	postinc1,c
 21025  01157E  0EFF               	movlw	high STR_99
 21026  011580  6EE6               	movwf	postinc1,c
 21027                           
 21028                           ;stkvar	_n @ sp[(-58)+32]
 21029  011582  0E43               	movlw	low _dbuf
 21030  011584  6E0B               	movwf	(btemp+10)^0,c
 21031  011586  0E02               	movlw	high _dbuf
 21032  011588  6E0C               	movwf	(btemp+11)^0,c
 21033  01158A  0EE6               	movlw	-26
 21034  01158C  50E3               	movf	plusw1,w,c
 21035  01158E  260B               	addwf	(btemp+10)^0,f,c
 21036  011590  0EE7               	movlw	-25
 21037  011592  50E3               	movf	plusw1,w,c
 21038  011594  220C               	addwfc	(btemp+11)^0,f,c
 21039  011596  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21040  01159C  0060  F033  FFE6   	movff	btemp+11,postinc1
 21041  0115A2  EC21  F0DB         	call	_strcpy	;wreg free
 21042  0115A6  D776               	goto	l13462
 21043  0115A8                     l13486:
 21044                           
 21045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 21046  0115A8  0E00               	movlw	0
 21047  0115AA  6E09               	movwf	(btemp+8)^0,c
 21048  0115AC  0E00               	movlw	0
 21049  0115AE  6E0A               	movwf	(btemp+9)^0,c
 21050  0115B0  0E80               	movlw	128
 21051  0115B2  6E0B               	movwf	(btemp+10)^0,c
 21052  0115B4  0E3F               	movlw	63
 21053  0115B6  6E0C               	movwf	(btemp+11)^0,c
 21054                           
 21055                           ;stkvar	_u @ sp[(-56)+12]
 21056  0115B8  0ED4               	movlw	-44
 21057  0115BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 21058  0115C0  0ED5               	movlw	-43
 21059  0115C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21060  0115C8  0ED6               	movlw	-42
 21061  0115CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21062  0115D0  0ED7               	movlw	-41
 21063  0115D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21064                           
 21065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 21066                           ;stkvar	_e @ sp[(-56)+34]
 21067  0115D8  0EEA               	movlw	-22
 21068  0115DA  6AE3               	clrf	plusw1,c
 21069  0115DC  0EEB               	movlw	-21
 21070  0115DE  6AE3               	clrf	plusw1,c
 21071                           
 21072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 21073  0115E0  0E00               	movlw	0
 21074  0115E2  6EE6               	movwf	postinc1,c
 21075  0115E4  0E00               	movlw	0
 21076  0115E6  6EE6               	movwf	postinc1,c
 21077  0115E8  0E00               	movlw	0
 21078  0115EA  6EE6               	movwf	postinc1,c
 21079  0115EC  0E00               	movlw	0
 21080  0115EE  6EE6               	movwf	postinc1,c
 21081                           
 21082                           ;stkvar	_g @ sp[(-60)+16]
 21083  0115F0  0ED4               	movlw	-44
 21084  0115F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21085  0115F8  006F FF8F FFE6     	movff	plusw1,postinc1
 21086  0115FE  006F FF8F FFE6     	movff	plusw1,postinc1
 21087  011604  006F FF8F FFE6     	movff	plusw1,postinc1
 21088  01160A  EC5A  F0DC         	call	___fleq	;wreg free
 21089  01160E  A001               	btfss	btemp& (0+255),0,c
 21090  011610  D039               	goto	l13498
 21091  011612  D0BC               	goto	u12390
 21092  011614                     l13494:
 21093                           
 21094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 21095  011614  0E00               	movlw	0
 21096  011616  6EE6               	movwf	postinc1,c
 21097  011618  0E00               	movlw	0
 21098  01161A  6EE6               	movwf	postinc1,c
 21099  01161C  0E20               	movlw	32
 21100  01161E  6EE6               	movwf	postinc1,c
 21101  011620  0E41               	movlw	65
 21102  011622  6EE6               	movwf	postinc1,c
 21103                           
 21104                           ;stkvar	_u @ sp[(-60)+12]
 21105  011624  0ED0               	movlw	-48
 21106  011626  006F FF8F FFE6     	movff	plusw1,postinc1
 21107  01162C  006F FF8F FFE6     	movff	plusw1,postinc1
 21108  011632  006F FF8F FFE6     	movff	plusw1,postinc1
 21109  011638  006F FF8F FFE6     	movff	plusw1,postinc1
 21110  01163E  EC48  F0A5         	call	___flmul	;wreg free
 21111                           
 21112                           ;stkvar	_u @ sp[(-56)+12]
 21113  011642  0ED4               	movlw	-44
 21114  011644  0060  F007  FFE3   	movff	btemp,plusw1
 21115  01164A  0ED5               	movlw	-43
 21116  01164C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21117  011652  0ED6               	movlw	-42
 21118  011654  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21119  01165A  0ED7               	movlw	-41
 21120  01165C  0060  F013  FFE3   	movff	btemp+3,plusw1
 21121                           
 21122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 21123                           ;stkvar	_e @ sp[(-56)+34]
 21124  011662  0EEA               	movlw	-22
 21125  011664  50E3               	movf	plusw1,w,c
 21126  011666  0F01               	addlw	1
 21127  011668  6E01               	movwf	btemp^0,c
 21128  01166A  0EEA               	movlw	-22
 21129  01166C  0060  F007  FFE3   	movff	btemp,plusw1
 21130  011672  6A01               	clrf	btemp^0,c
 21131  011674  0EEB               	movlw	-21
 21132  011676  50E3               	movf	plusw1,w,c
 21133  011678  2001               	addwfc	btemp^0,w,c
 21134  01167A  6E01               	movwf	btemp^0,c
 21135  01167C  0EEB               	movlw	-21
 21136  01167E  0060  F007  FFE3   	movff	btemp,plusw1
 21137  011684                     l13498:
 21138                           
 21139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 21140  011684  0E00               	movlw	0
 21141  011686  6EE6               	movwf	postinc1,c
 21142  011688  0E00               	movlw	0
 21143  01168A  6EE6               	movwf	postinc1,c
 21144  01168C  0E20               	movlw	32
 21145  01168E  6EE6               	movwf	postinc1,c
 21146  011690  0E41               	movlw	65
 21147  011692  6EE6               	movwf	postinc1,c
 21148                           
 21149                           ;stkvar	_u @ sp[(-60)+12]
 21150  011694  0ED0               	movlw	-48
 21151  011696  006F FF8F FFE6     	movff	plusw1,postinc1
 21152  01169C  006F FF8F FFE6     	movff	plusw1,postinc1
 21153  0116A2  006F FF8F FFE6     	movff	plusw1,postinc1
 21154  0116A8  006F FF8F FFE6     	movff	plusw1,postinc1
 21155  0116AE  EC48  F0A5         	call	___flmul	;wreg free
 21156  0116B2  0060  F007  FFE6   	movff	btemp,postinc1
 21157  0116B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21158  0116BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21159  0116C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 21160                           
 21161                           ;stkvar	_g @ sp[(-60)+16]
 21162  0116CA  0ED4               	movlw	-44
 21163  0116CC  006F FF8F FFE6     	movff	plusw1,postinc1
 21164  0116D2  006F FF8F FFE6     	movff	plusw1,postinc1
 21165  0116D8  006F FF8F FFE6     	movff	plusw1,postinc1
 21166  0116DE  006F FF8F FFE6     	movff	plusw1,postinc1
 21167  0116E4  ECFF  F0D0         	call	___flge	;wreg free
 21168  0116E8  A001               	btfss	btemp& (0+255),0,c
 21169  0116EA  D032               	goto	l13504
 21170  0116EC  D793               	goto	l13494
 21171  0116EE                     l13500:
 21172                           
 21173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 21174  0116EE  0E00               	movlw	0
 21175  0116F0  6EE6               	movwf	postinc1,c
 21176  0116F2  0E00               	movlw	0
 21177  0116F4  6EE6               	movwf	postinc1,c
 21178  0116F6  0E20               	movlw	32
 21179  0116F8  6EE6               	movwf	postinc1,c
 21180  0116FA  0E41               	movlw	65
 21181  0116FC  6EE6               	movwf	postinc1,c
 21182                           
 21183                           ;stkvar	_u @ sp[(-60)+12]
 21184  0116FE  0ED0               	movlw	-48
 21185  011700  006F FF8F FFE6     	movff	plusw1,postinc1
 21186  011706  006F FF8F FFE6     	movff	plusw1,postinc1
 21187  01170C  006F FF8F FFE6     	movff	plusw1,postinc1
 21188  011712  006F FF8F FFE6     	movff	plusw1,postinc1
 21189  011718  EC3B  F0AD         	call	___fldiv	;wreg free
 21190                           
 21191                           ;stkvar	_u @ sp[(-56)+12]
 21192  01171C  0ED4               	movlw	-44
 21193  01171E  0060  F007  FFE3   	movff	btemp,plusw1
 21194  011724  0ED5               	movlw	-43
 21195  011726  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21196  01172C  0ED6               	movlw	-42
 21197  01172E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21198  011734  0ED7               	movlw	-41
 21199  011736  0060  F013  FFE3   	movff	btemp+3,plusw1
 21200                           
 21201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 21202                           ;stkvar	_e @ sp[(-56)+34]
 21203  01173C  50E1               	movf	fsr1l,w,c
 21204  01173E  0FEA               	addlw	-22
 21205  011740  6ED9               	movwf	fsr2l,c
 21206  011742  50E2               	movf	fsr1h,w,c
 21207  011744  6EDA               	movwf	fsr2h,c
 21208  011746  0EFF               	movlw	255
 21209  011748  22DA               	addwfc	fsr2h,f,c
 21210  01174A  06DE               	decf	postinc2,f,c
 21211  01174C  0E00               	movlw	0
 21212  01174E  5ADD               	subwfb	postdec2,f,c
 21213  011750                     l13504:
 21214                           
 21215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 21216                           ;stkvar	_u @ sp[(-56)+12]
 21217  011750  0ED4               	movlw	-44
 21218  011752  006F FF8F FFE6     	movff	plusw1,postinc1
 21219  011758  006F FF8F FFE6     	movff	plusw1,postinc1
 21220  01175E  006F FF8F FFE6     	movff	plusw1,postinc1
 21221  011764  006F FF8F FFE6     	movff	plusw1,postinc1
 21222                           
 21223                           ;stkvar	_g @ sp[(-60)+16]
 21224  01176A  0ED4               	movlw	-44
 21225  01176C  006F FF8F FFE6     	movff	plusw1,postinc1
 21226  011772  006F FF8F FFE6     	movff	plusw1,postinc1
 21227  011778  006F FF8F FFE6     	movff	plusw1,postinc1
 21228  01177E  006F FF8F FFE6     	movff	plusw1,postinc1
 21229  011784  ECFF  F0D0         	call	___flge	;wreg free
 21230  011788  A001               	btfss	btemp& (0+255),0,c
 21231  01178A  D7B1               	goto	l13500
 21232  01178C                     u12390:
 21233                           
 21234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 21235                           ;stkvar	_c @ sp[(-56)+-7]
 21236  01178C  0EC1               	movlw	-63
 21237  01178E  50E3               	movf	plusw1,w,c
 21238  011790  6EE6               	movwf	postinc1,c
 21239  011792  0E00               	movlw	0
 21240  011794  6EE6               	movwf	postinc1,c
 21241  011796  EC1B  F0E2         	call	_tolower	;wreg free
 21242                           
 21243                           ;stkvar	_mode @ sp[(-56)+54]
 21244  01179A  0EFE               	movlw	-2
 21245  01179C  0060  F007  FFE3   	movff	btemp,plusw1
 21246                           
 21247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 21248                           ;stkvar	_mode @ sp[(-56)+54]
 21249                           ;stkvar	_nmode @ sp[(-56)+55]
 21250  0117A2  0EFE               	movlw	-2
 21251  0117A4  006F FF8C  F001    	movff	plusw1,btemp
 21252  0117AA  0EFF               	movlw	-1
 21253  0117AC  0060  F007  FFE3   	movff	btemp,plusw1
 21254                           
 21255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 21256                           ;stkvar	_mode @ sp[(-56)+54]
 21257  0117B2  0EFE               	movlw	-2
 21258  0117B4  006F FF8C  F001    	movff	plusw1,btemp
 21259  0117BA  0E67               	movlw	103
 21260  0117BC  1801               	xorwf	btemp^0,w,c
 21261  0117BE  A4D8               	btfss	status,2,c
 21262  0117C0  D025               	goto	l13522
 21263                           
 21264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 21265  0117C2  503C               	movf	_prec^0,w,c
 21266  0117C4  103D               	iorwf	(_prec+1)^0,w,c
 21267  0117C6  A4D8               	btfss	status,2,c
 21268  0117C8  D004               	goto	l13516
 21269                           
 21270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 21271  0117CA  0E00               	movlw	0
 21272  0117CC  6E3D               	movwf	(_prec+1)^0,c
 21273  0117CE  0E01               	movlw	1
 21274  0117D0  6E3C               	movwf	_prec^0,c
 21275  0117D2                     l13516:
 21276                           
 21277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 21278  0117D2  BE3D               	btfsc	(_prec+1)^0,7,c
 21279  0117D4  D005               	goto	u12420
 21280  0117D6  503D               	movf	(_prec+1)^0,w,c
 21281  0117D8  E110               	bnz	l13520
 21282  0117DA  043C               	decf	_prec^0,w,c
 21283  0117DC  B0D8               	btfsc	status,0,c
 21284  0117DE  D00D               	goto	l13520
 21285  0117E0                     u12420:
 21286  0117E0  0E06               	movlw	6
 21287  0117E2  6E0B               	movwf	(btemp+10)^0,c
 21288  0117E4  0E00               	movlw	0
 21289  0117E6  6E0C               	movwf	(btemp+11)^0,c
 21290                           
 21291                           ;stkvar	_p @ sp[(-56)+40]
 21292  0117E8  0EF0               	movlw	-16
 21293  0117EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21294  0117F0  0EF1               	movlw	-15
 21295  0117F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21296  0117F8  D00C               	goto	l13528
 21297  0117FA                     l13520:
 21298                           
 21299                           ;stkvar	_p @ sp[(-56)+40]
 21300  0117FA  0EF0               	movlw	-16
 21301  0117FC  0060  F0F3  FFE3   	movff	_prec,plusw1
 21302  011802  0EF1               	movlw	-15
 21303  011804  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 21304  01180A  D003               	goto	l13528
 21305  01180C                     l13522:
 21306                           
 21307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 21308  01180C  AE3D               	btfss	(_prec+1)^0,7,c
 21309  01180E  D7F5               	goto	l13520
 21310  011810  D7E7               	goto	u12420
 21311  011812                     l13528:
 21312                           
 21313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 21314                           ;stkvar	_mode @ sp[(-56)+54]
 21315  011812  0EFE               	movlw	-2
 21316  011814  006F FF8C  F001    	movff	plusw1,btemp
 21317  01181A  0E67               	movlw	103
 21318  01181C  1801               	xorwf	btemp^0,w,c
 21319  01181E  A4D8               	btfss	status,2,c
 21320  011820  D02F               	goto	l13538
 21321                           
 21322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 21323                           ;stkvar	_e @ sp[(-56)+34]
 21324  011822  0EEB               	movlw	-21
 21325  011824  AEE3               	btfss	plusw1,7,c
 21326  011826  D00E               	goto	u12450
 21327  011828  0EEA               	movlw	-22
 21328  01182A  006F FF8C  F001    	movff	plusw1,btemp
 21329  011830  0EFC               	movlw	252
 21330  011832  5E01               	subwf	btemp^0,f,c
 21331  011834  0EEB               	movlw	-21
 21332  011836  006F FF8C  F001    	movff	plusw1,btemp
 21333  01183C  0EFF               	movlw	255
 21334  01183E  5A01               	subwfb	btemp^0,f,c
 21335  011840  A0D8               	btfss	status,0,c
 21336  011842  D018               	goto	l13536
 21337  011844                     u12450:
 21338                           
 21339                           ;stkvar	_e @ sp[(-56)+34]
 21340                           ;stkvar	_p @ sp[(-56)+40]
 21341  011844  0EF0               	movlw	-16
 21342  011846  50E3               	movf	plusw1,w,c
 21343  011848  0FFF               	addlw	255
 21344  01184A  6E0B               	movwf	(btemp+10)^0,c
 21345  01184C  0EF1               	movlw	-15
 21346  01184E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21347  011854  0EFF               	movlw	255
 21348  011856  220C               	addwfc	(btemp+11)^0,f,c
 21349  011858  0EEA               	movlw	-22
 21350  01185A  50E3               	movf	plusw1,w,c
 21351  01185C  5C0B               	subwf	(btemp+10)^0,w,c
 21352  01185E  500C               	movf	(btemp+11)^0,w,c
 21353  011860  0A80               	xorlw	128
 21354  011862  6E01               	movwf	btemp^0,c
 21355  011864  0EEB               	movlw	-21
 21356  011866  50E3               	movf	plusw1,w,c
 21357  011868  0A80               	xorlw	128
 21358  01186A  5801               	subwfb	btemp^0,w,c
 21359  01186C  A0D8               	btfss	status,0,c
 21360  01186E  D002               	goto	l13536
 21361                           
 21362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 21363  011870  0E66               	movlw	102
 21364  011872  D001               	goto	L23
 21365  011874                     l13536:
 21366                           
 21367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 21368  011874  0E65               	movlw	101
 21369  011876                     L23:
 21370  011876  6E0C               	movwf	(btemp+11)^0,c
 21371                           
 21372                           ;stkvar	_nmode @ sp[(-56)+55]
 21373  011878  0EFF               	movlw	-1
 21374  01187A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21375  011880                     l13538:
 21376                           
 21377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 21378                           ;stkvar	_p @ sp[(-56)+40]
 21379                           ;stkvar	_m @ sp[(-56)+48]
 21380  011880  0EF0               	movlw	-16
 21381  011882  006F FF8C  F001    	movff	plusw1,btemp
 21382  011888  0EF8               	movlw	-8
 21383  01188A  0060  F007  FFE3   	movff	btemp,plusw1
 21384  011890  0EF1               	movlw	-15
 21385  011892  006F FF8C  F001    	movff	plusw1,btemp
 21386  011898  0EF9               	movlw	-7
 21387  01189A  0060  F007  FFE3   	movff	btemp,plusw1
 21388                           
 21389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 21390                           ;stkvar	_mode @ sp[(-56)+54]
 21391  0118A0  0EFE               	movlw	-2
 21392  0118A2  006F FF8C  F001    	movff	plusw1,btemp
 21393  0118A8  0E67               	movlw	103
 21394  0118AA  1801               	xorwf	btemp^0,w,c
 21395  0118AC  A4D8               	btfss	status,2,c
 21396  0118AE  D00B               	goto	u12490
 21397                           
 21398                           ;stkvar	_nmode @ sp[(-56)+55]
 21399  0118B0  0EFF               	movlw	-1
 21400  0118B2  006F FF8C  F001    	movff	plusw1,btemp
 21401  0118B8  0E66               	movlw	102
 21402  0118BA  1801               	xorwf	btemp^0,w,c
 21403  0118BC  A4D8               	btfss	status,2,c
 21404  0118BE  D014               	goto	l2501
 21405                           
 21406                           ;stkvar	_e @ sp[(-56)+34]
 21407  0118C0  0EEB               	movlw	-21
 21408  0118C2  AEE3               	btfss	plusw1,7,c
 21409  0118C4  D011               	goto	l2501
 21410  0118C6                     u12490:
 21411                           
 21412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 21413                           ;stkvar	_m @ sp[(-56)+48]
 21414  0118C6  0EF8               	movlw	-8
 21415  0118C8  50E3               	movf	plusw1,w,c
 21416  0118CA  0F01               	addlw	1
 21417  0118CC  6E01               	movwf	btemp^0,c
 21418  0118CE  0EF8               	movlw	-8
 21419  0118D0  0060  F007  FFE3   	movff	btemp,plusw1
 21420  0118D6  6A01               	clrf	btemp^0,c
 21421  0118D8  0EF9               	movlw	-7
 21422  0118DA  50E3               	movf	plusw1,w,c
 21423  0118DC  2001               	addwfc	btemp^0,w,c
 21424  0118DE  6E01               	movwf	btemp^0,c
 21425  0118E0  0EF9               	movlw	-7
 21426  0118E2  0060  F007  FFE3   	movff	btemp,plusw1
 21427  0118E8                     l2501:
 21428                           
 21429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 21430                           ;stkvar	_nmode @ sp[(-56)+55]
 21431  0118E8  0EFF               	movlw	-1
 21432  0118EA  006F FF8C  F001    	movff	plusw1,btemp
 21433  0118F0  0E66               	movlw	102
 21434  0118F2  1801               	xorwf	btemp^0,w,c
 21435  0118F4  A4D8               	btfss	status,2,c
 21436  0118F6  D03B               	goto	l13558
 21437                           
 21438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 21439                           ;stkvar	_e @ sp[(-56)+34]
 21440  0118F8  0EEB               	movlw	-21
 21441  0118FA  AEE3               	btfss	plusw1,7,c
 21442  0118FC  D01C               	goto	l13554
 21443                           
 21444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 21445  0118FE  0E00               	movlw	0
 21446  011900  6E09               	movwf	(btemp+8)^0,c
 21447  011902  0E00               	movlw	0
 21448  011904  6E0A               	movwf	(btemp+9)^0,c
 21449  011906  0E80               	movlw	128
 21450  011908  6E0B               	movwf	(btemp+10)^0,c
 21451  01190A  0E3F               	movlw	63
 21452  01190C  6E0C               	movwf	(btemp+11)^0,c
 21453                           
 21454                           ;stkvar	_u @ sp[(-56)+12]
 21455  01190E  0ED4               	movlw	-44
 21456  011910  0060  F027  FFE3   	movff	btemp+8,plusw1
 21457  011916  0ED5               	movlw	-43
 21458  011918  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21459  01191E  0ED6               	movlw	-42
 21460  011920  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21461  011926  0ED7               	movlw	-41
 21462  011928  0060  F033  FFE3   	movff	btemp+11,plusw1
 21463                           
 21464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 21465                           ;stkvar	_e @ sp[(-56)+34]
 21466  01192E  0EEA               	movlw	-22
 21467  011930  6AE3               	clrf	plusw1,c
 21468  011932  0EEB               	movlw	-21
 21469  011934  6AE3               	clrf	plusw1,c
 21470  011936                     l13554:
 21471                           
 21472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 21473                           ;stkvar	_mode @ sp[(-56)+54]
 21474  011936  0EFE               	movlw	-2
 21475  011938  006F FF8C  F001    	movff	plusw1,btemp
 21476  01193E  0E67               	movlw	103
 21477  011940  1801               	xorwf	btemp^0,w,c
 21478  011942  B4D8               	btfsc	status,2,c
 21479  011944  D014               	goto	l13558
 21480                           
 21481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 21482                           ;stkvar	_e @ sp[(-56)+34]
 21483                           ;stkvar	_m @ sp[(-56)+48]
 21484  011946  0EF8               	movlw	-8
 21485  011948  50E3               	movf	plusw1,w,c
 21486  01194A  6E01               	movwf	btemp^0,c
 21487  01194C  0EEA               	movlw	-22
 21488  01194E  50E3               	movf	plusw1,w,c
 21489  011950  2601               	addwf	btemp^0,f,c
 21490  011952  0EF8               	movlw	-8
 21491  011954  0060  F007  FFE3   	movff	btemp,plusw1
 21492  01195A  0EF9               	movlw	-7
 21493  01195C  50E3               	movf	plusw1,w,c
 21494  01195E  6E01               	movwf	btemp^0,c
 21495  011960  0EEB               	movlw	-21
 21496  011962  50E3               	movf	plusw1,w,c
 21497  011964  2201               	addwfc	btemp^0,f,c
 21498  011966  0EF9               	movlw	-7
 21499  011968  0060  F007  FFE3   	movff	btemp,plusw1
 21500  01196E                     l13558:
 21501                           
 21502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 21503                           ;stkvar	_i @ sp[(-56)+36]
 21504  01196E  0EEC               	movlw	-20
 21505  011970  6AE3               	clrf	plusw1,c
 21506  011972  0EED               	movlw	-19
 21507  011974  6AE3               	clrf	plusw1,c
 21508                           
 21509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 21510                           ;stkvar	_g @ sp[(-56)+16]
 21511  011976  0ED8               	movlw	-40
 21512  011978  006F FF8C  F009    	movff	plusw1,btemp+8
 21513  01197E  0ED9               	movlw	-39
 21514  011980  006F FF8C  F00A    	movff	plusw1,btemp+9
 21515  011986  0EDA               	movlw	-38
 21516  011988  006F FF8C  F00B    	movff	plusw1,btemp+10
 21517  01198E  0EDB               	movlw	-37
 21518  011990  006F FF8C  F00C    	movff	plusw1,btemp+11
 21519                           
 21520                           ;stkvar	_h @ sp[(-56)+24]
 21521  011996  0EE0               	movlw	-32
 21522  011998  0060  F027  FFE3   	movff	btemp+8,plusw1
 21523  01199E  0EE1               	movlw	-31
 21524  0119A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21525  0119A6  0EE2               	movlw	-30
 21526  0119A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21527  0119AE  0EE3               	movlw	-29
 21528  0119B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 21529                           
 21530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 21531                           ;stkvar	_u @ sp[(-56)+12]
 21532  0119B6  0ED4               	movlw	-44
 21533  0119B8  006F FF8C  F009    	movff	plusw1,btemp+8
 21534  0119BE  0ED5               	movlw	-43
 21535  0119C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 21536  0119C6  0ED6               	movlw	-42
 21537  0119C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21538  0119CE  0ED7               	movlw	-41
 21539  0119D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21540                           
 21541                           ;stkvar	_ou @ sp[(-56)+28]
 21542  0119D6  0EE4               	movlw	-28
 21543  0119D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 21544  0119DE  0EE5               	movlw	-27
 21545  0119E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21546  0119E6  0EE6               	movlw	-26
 21547  0119E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21548  0119EE  0EE7               	movlw	-25
 21549  0119F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 21550                           
 21551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 21552  0119F6  D0D6               	goto	l13574
 21553  0119F8                     l13564:
 21554                           
 21555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 21556                           ;stkvar	_u @ sp[(-56)+12]
 21557  0119F8  0ED4               	movlw	-44
 21558  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 21559  011A00  006F FF8F FFE6     	movff	plusw1,postinc1
 21560  011A06  006F FF8F FFE6     	movff	plusw1,postinc1
 21561  011A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 21562                           
 21563                           ;stkvar	_h @ sp[(-60)+24]
 21564  011A12  0EDC               	movlw	-36
 21565  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 21566  011A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 21567  011A20  006F FF8F FFE6     	movff	plusw1,postinc1
 21568  011A26  006F FF8F FFE6     	movff	plusw1,postinc1
 21569  011A2C  EC3B  F0AD         	call	___fldiv	;wreg free
 21570  011A30  0060  F007  FFE6   	movff	btemp,postinc1
 21571  011A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21572  011A3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21573  011A42  0060  F013  FFE6   	movff	btemp+3,postinc1
 21574  011A48  EC99  F0B8         	call	_floorf	;wreg free
 21575                           
 21576                           ;stkvar	_l @ sp[(-56)+20]
 21577  011A4C  0EDC               	movlw	-36
 21578  011A4E  0060  F007  FFE3   	movff	btemp,plusw1
 21579  011A54  0EDD               	movlw	-35
 21580  011A56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21581  011A5C  0EDE               	movlw	-34
 21582  011A5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21583  011A64  0EDF               	movlw	-33
 21584  011A66  0060  F013  FFE3   	movff	btemp+3,plusw1
 21585                           
 21586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 21587                           ;stkvar	_l @ sp[(-56)+20]
 21588  011A6C  0EDC               	movlw	-36
 21589  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 21590  011A74  006F FF8F FFE6     	movff	plusw1,postinc1
 21591  011A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 21592  011A80  006F FF8F FFE6     	movff	plusw1,postinc1
 21593  011A86  EC46  F0D0         	call	___fltol	;wreg free
 21594  011A8A  0060  F004  F00B   	movff	btemp,btemp+10
 21595  011A90  0060  F008  F00C   	movff	btemp+1,btemp+11
 21596                           
 21597                           ;stkvar	_d @ sp[(-56)+44]
 21598  011A96  0EF4               	movlw	-12
 21599  011A98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21600  011A9E  0EF5               	movlw	-11
 21601  011AA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 21602                           
 21603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 21604                           ;stkvar	_u @ sp[(-56)+12]
 21605  011AA6  0ED4               	movlw	-44
 21606  011AA8  006F FF8F FFE6     	movff	plusw1,postinc1
 21607  011AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 21608  011AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 21609  011ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 21610                           
 21611                           ;stkvar	_l @ sp[(-60)+20]
 21612  011AC0  0ED8               	movlw	-40
 21613  011AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 21614  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 21615  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 21616  011AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 21617  011ADA  EC48  F0A5         	call	___flmul	;wreg free
 21618  011ADE  0060  F007  FFE6   	movff	btemp,postinc1
 21619  011AE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21620  011AEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21621  011AF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 21622                           
 21623                           ;stkvar	_h @ sp[(-60)+24]
 21624  011AF6  0EDC               	movlw	-36
 21625  011AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 21626  011AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 21627  011B04  006F FF8F FFE6     	movff	plusw1,postinc1
 21628  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 21629  011B10  ECB1  F0E7         	call	___flsub	;wreg free
 21630                           
 21631                           ;stkvar	_h @ sp[(-56)+24]
 21632  011B14  0EE0               	movlw	-32
 21633  011B16  0060  F007  FFE3   	movff	btemp,plusw1
 21634  011B1C  0EE1               	movlw	-31
 21635  011B1E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21636  011B24  0EE2               	movlw	-30
 21637  011B26  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21638  011B2C  0EE3               	movlw	-29
 21639  011B2E  0060  F013  FFE3   	movff	btemp+3,plusw1
 21640                           
 21641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 21642  011B34  0E00               	movlw	0
 21643  011B36  6EE6               	movwf	postinc1,c
 21644  011B38  0E00               	movlw	0
 21645  011B3A  6EE6               	movwf	postinc1,c
 21646  011B3C  0E20               	movlw	32
 21647  011B3E  6EE6               	movwf	postinc1,c
 21648  011B40  0E41               	movlw	65
 21649  011B42  6EE6               	movwf	postinc1,c
 21650                           
 21651                           ;stkvar	_u @ sp[(-60)+12]
 21652  011B44  0ED0               	movlw	-48
 21653  011B46  006F FF8F FFE6     	movff	plusw1,postinc1
 21654  011B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 21655  011B52  006F FF8F FFE6     	movff	plusw1,postinc1
 21656  011B58  006F FF8F FFE6     	movff	plusw1,postinc1
 21657  011B5E  EC3B  F0AD         	call	___fldiv	;wreg free
 21658                           
 21659                           ;stkvar	_u @ sp[(-56)+12]
 21660  011B62  0ED4               	movlw	-44
 21661  011B64  0060  F007  FFE3   	movff	btemp,plusw1
 21662  011B6A  0ED5               	movlw	-43
 21663  011B6C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21664  011B72  0ED6               	movlw	-42
 21665  011B74  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21666  011B7A  0ED7               	movlw	-41
 21667  011B7C  0060  F013  FFE3   	movff	btemp+3,plusw1
 21668                           
 21669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 21670                           ;stkvar	_i @ sp[(-56)+36]
 21671  011B82  0EEC               	movlw	-20
 21672  011B84  50E3               	movf	plusw1,w,c
 21673  011B86  0F01               	addlw	1
 21674  011B88  6E01               	movwf	btemp^0,c
 21675  011B8A  0EEC               	movlw	-20
 21676  011B8C  0060  F007  FFE3   	movff	btemp,plusw1
 21677  011B92  6A01               	clrf	btemp^0,c
 21678  011B94  0EED               	movlw	-19
 21679  011B96  50E3               	movf	plusw1,w,c
 21680  011B98  2001               	addwfc	btemp^0,w,c
 21681  011B9A  6E01               	movwf	btemp^0,c
 21682  011B9C  0EED               	movlw	-19
 21683  011B9E  0060  F007  FFE3   	movff	btemp,plusw1
 21684  011BA4                     l13574:
 21685                           
 21686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 21687                           ;stkvar	_m @ sp[(-56)+48]
 21688                           ;stkvar	_i @ sp[(-56)+36]
 21689  011BA4  50E1               	movf	fsr1l,w,c
 21690  011BA6  0FEC               	addlw	-20
 21691  011BA8  6ED9               	movwf	fsr2l,c
 21692  011BAA  50E2               	movf	fsr1h,w,c
 21693  011BAC  6EDA               	movwf	fsr2h,c
 21694  011BAE  0EFF               	movlw	255
 21695  011BB0  22DA               	addwfc	fsr2h,f,c
 21696  011BB2  0EF8               	movlw	-8
 21697  011BB4  50E3               	movf	plusw1,w,c
 21698  011BB6  5CDE               	subwf	postinc2,w,c
 21699  011BB8  50DE               	movf	postinc2,w,c
 21700  011BBA  0A80               	xorlw	128
 21701  011BBC  6E01               	movwf	btemp^0,c
 21702  011BBE  0EF9               	movlw	-7
 21703  011BC0  50E3               	movf	plusw1,w,c
 21704  011BC2  0A80               	xorlw	128
 21705  011BC4  5801               	subwfb	btemp^0,w,c
 21706  011BC6  A0D8               	btfss	status,0,c
 21707  011BC8  D717               	goto	l13564
 21708                           
 21709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 21710  011BCA  0E00               	movlw	0
 21711  011BCC  6EE6               	movwf	postinc1,c
 21712  011BCE  0E00               	movlw	0
 21713  011BD0  6EE6               	movwf	postinc1,c
 21714  011BD2  0EA0               	movlw	160
 21715  011BD4  6EE6               	movwf	postinc1,c
 21716  011BD6  0E40               	movlw	64
 21717  011BD8  6EE6               	movwf	postinc1,c
 21718                           
 21719                           ;stkvar	_u @ sp[(-60)+12]
 21720  011BDA  0ED0               	movlw	-48
 21721  011BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 21722  011BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21723  011BE8  006F FF8F FFE6     	movff	plusw1,postinc1
 21724  011BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 21725  011BF4  EC48  F0A5         	call	___flmul	;wreg free
 21726                           
 21727                           ;stkvar	_l @ sp[(-56)+20]
 21728  011BF8  0EDC               	movlw	-36
 21729  011BFA  0060  F007  FFE3   	movff	btemp,plusw1
 21730  011C00  0EDD               	movlw	-35
 21731  011C02  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21732  011C08  0EDE               	movlw	-34
 21733  011C0A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21734  011C10  0EDF               	movlw	-33
 21735  011C12  0060  F013  FFE3   	movff	btemp+3,plusw1
 21736                           
 21737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 21738                           ;stkvar	_l @ sp[(-56)+20]
 21739  011C18  0EDC               	movlw	-36
 21740  011C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 21741  011C20  006F FF8F FFE6     	movff	plusw1,postinc1
 21742  011C26  006F FF8F FFE6     	movff	plusw1,postinc1
 21743  011C2C  006F FF8F FFE6     	movff	plusw1,postinc1
 21744                           
 21745                           ;stkvar	_h @ sp[(-60)+24]
 21746  011C32  0EDC               	movlw	-36
 21747  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 21748  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 21749  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 21750  011C46  006F FF8F FFE6     	movff	plusw1,postinc1
 21751  011C4C  ECFF  F0D0         	call	___flge	;wreg free
 21752  011C50  A001               	btfss	btemp& (0+255),0,c
 21753  011C52  D021               	goto	u12560
 21754                           
 21755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 21756                           ;stkvar	_l @ sp[(-56)+20]
 21757                           
 21758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 21759                           
 21760                           ;stkvar	_l @ sp[(-56)+20]
 21761                           
 21762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 21763  011C54  0EDC               	movlw	-36
 21764  011C56  006F FF8F FFE6     	movff	plusw1,postinc1
 21765  011C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 21766  011C62  006F FF8F FFE6     	movff	plusw1,postinc1
 21767  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 21768                           
 21769                           ;stkvar	_h @ sp[(-60)+24]
 21770  011C6E  0EDC               	movlw	-36
 21771  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 21772  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 21773  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21774  011C82  006F FF8F FFE6     	movff	plusw1,postinc1
 21775  011C88  EC5A  F0DC         	call	___fleq	;wreg free
 21776  011C8C  A001               	btfss	btemp& (0+255),0,c
 21777  011C8E  D01B               	goto	l13588
 21778                           
 21779                           ;stkvar	_d @ sp[(-56)+44]
 21780  011C90  0EF4               	movlw	-12
 21781  011C92  B0E3               	btfsc	plusw1,0,c
 21782  011C94  D018               	goto	l13588
 21783  011C96                     u12560:
 21784                           
 21785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 21786  011C96  0E00               	movlw	0
 21787  011C98  6E09               	movwf	(btemp+8)^0,c
 21788  011C9A  0E00               	movlw	0
 21789  011C9C  6E0A               	movwf	(btemp+9)^0,c
 21790  011C9E  0E00               	movlw	0
 21791  011CA0  6E0B               	movwf	(btemp+10)^0,c
 21792  011CA2  0E00               	movlw	0
 21793  011CA4  6E0C               	movwf	(btemp+11)^0,c
 21794                           
 21795                           ;stkvar	_l @ sp[(-56)+20]
 21796  011CA6  0EDC               	movlw	-36
 21797  011CA8  0060  F027  FFE3   	movff	btemp+8,plusw1
 21798  011CAE  0EDD               	movlw	-35
 21799  011CB0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21800  011CB6  0EDE               	movlw	-34
 21801  011CB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21802  011CBE  0EDF               	movlw	-33
 21803  011CC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 21804  011CC6                     l13588:
 21805                           
 21806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 21807                           ;stkvar	_l @ sp[(-56)+20]
 21808  011CC6  0EDC               	movlw	-36
 21809  011CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 21810  011CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 21811  011CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 21812  011CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 21813                           
 21814                           ;stkvar	_g @ sp[(-60)+16]
 21815  011CE0  0ED4               	movlw	-44
 21816  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21817  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 21818  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 21819  011CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 21820  011CFA  EC5D  F0A9         	call	___fladd	;wreg free
 21821                           
 21822                           ;stkvar	_h @ sp[(-56)+24]
 21823  011CFE  0EE0               	movlw	-32
 21824  011D00  0060  F007  FFE3   	movff	btemp,plusw1
 21825  011D06  0EE1               	movlw	-31
 21826  011D08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21827  011D0E  0EE2               	movlw	-30
 21828  011D10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21829  011D16  0EE3               	movlw	-29
 21830  011D18  0060  F013  FFE3   	movff	btemp+3,plusw1
 21831                           
 21832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 21833                           ;stkvar	_ou @ sp[(-56)+28]
 21834  011D1E  0EE4               	movlw	-28
 21835  011D20  006F FF8C  F009    	movff	plusw1,btemp+8
 21836  011D26  0EE5               	movlw	-27
 21837  011D28  006F FF8C  F00A    	movff	plusw1,btemp+9
 21838  011D2E  0EE6               	movlw	-26
 21839  011D30  006F FF8C  F00B    	movff	plusw1,btemp+10
 21840  011D36  0EE7               	movlw	-25
 21841  011D38  006F FF8C  F00C    	movff	plusw1,btemp+11
 21842                           
 21843                           ;stkvar	_u @ sp[(-56)+12]
 21844  011D3E  0ED4               	movlw	-44
 21845  011D40  0060  F027  FFE3   	movff	btemp+8,plusw1
 21846  011D46  0ED5               	movlw	-43
 21847  011D48  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21848  011D4E  0ED6               	movlw	-42
 21849  011D50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21850  011D56  0ED7               	movlw	-41
 21851  011D58  0060  F033  FFE3   	movff	btemp+11,plusw1
 21852                           
 21853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 21854                           ;stkvar	_nmode @ sp[(-56)+55]
 21855  011D5E  0EFF               	movlw	-1
 21856  011D60  006F FF8C  F001    	movff	plusw1,btemp
 21857  011D66  0E65               	movlw	101
 21858  011D68  1801               	xorwf	btemp^0,w,c
 21859  011D6A  B4D8               	btfsc	status,2,c
 21860  011D6C  D011               	goto	l13596
 21861                           
 21862                           ;stkvar	_e @ sp[(-56)+34]
 21863                           ;stkvar	_ne @ sp[(-56)+46]
 21864  011D6E  0EEA               	movlw	-22
 21865  011D70  006F FF8C  F001    	movff	plusw1,btemp
 21866  011D76  0EF6               	movlw	-10
 21867  011D78  0060  F007  FFE3   	movff	btemp,plusw1
 21868  011D7E  0EEB               	movlw	-21
 21869  011D80  006F FF8C  F001    	movff	plusw1,btemp
 21870  011D86  0EF7               	movlw	-9
 21871  011D88  0060  F007  FFE3   	movff	btemp,plusw1
 21872  011D8E  D004               	goto	l2516
 21873  011D90                     l13596:
 21874                           
 21875                           ;stkvar	_ne @ sp[(-56)+46]
 21876  011D90  0EF6               	movlw	-10
 21877  011D92  6AE3               	clrf	plusw1,c
 21878  011D94  0EF7               	movlw	-9
 21879  011D96  6AE3               	clrf	plusw1,c
 21880  011D98                     l2516:
 21881                           
 21882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 21883                           ;stkvar	_pp @ sp[(-56)+50]
 21884  011D98  0EFA               	movlw	-6
 21885  011D9A  6AE3               	clrf	plusw1,c
 21886  011D9C  0EFB               	movlw	-5
 21887  011D9E  6AE3               	clrf	plusw1,c
 21888                           
 21889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 21890                           ;stkvar	_t @ sp[(-56)+52]
 21891  011DA0  0EFC               	movlw	-4
 21892  011DA2  6AE3               	clrf	plusw1,c
 21893  011DA4  0EFD               	movlw	-3
 21894  011DA6  6AE3               	clrf	plusw1,c
 21895                           
 21896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 21897                           ;stkvar	_i @ sp[(-56)+36]
 21898  011DA8  0EEC               	movlw	-20
 21899  011DAA  6AE3               	clrf	plusw1,c
 21900  011DAC  0EED               	movlw	-19
 21901  011DAE  6AE3               	clrf	plusw1,c
 21902                           
 21903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 21904  011DB0  D1B7               	goto	l13648
 21905  011DB2                     l13598:
 21906                           
 21907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 21908                           ;stkvar	_u @ sp[(-56)+12]
 21909  011DB2  0ED4               	movlw	-44
 21910  011DB4  006F FF8F FFE6     	movff	plusw1,postinc1
 21911  011DBA  006F FF8F FFE6     	movff	plusw1,postinc1
 21912  011DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 21913  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 21914                           
 21915                           ;stkvar	_h @ sp[(-60)+24]
 21916  011DCC  0EDC               	movlw	-36
 21917  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 21918  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 21919  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 21920  011DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 21921  011DE6  EC3B  F0AD         	call	___fldiv	;wreg free
 21922  011DEA  0060  F007  FFE6   	movff	btemp,postinc1
 21923  011DF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21924  011DF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21925  011DFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 21926  011E02  EC99  F0B8         	call	_floorf	;wreg free
 21927                           
 21928                           ;stkvar	_l @ sp[(-56)+20]
 21929  011E06  0EDC               	movlw	-36
 21930  011E08  0060  F007  FFE3   	movff	btemp,plusw1
 21931  011E0E  0EDD               	movlw	-35
 21932  011E10  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21933  011E16  0EDE               	movlw	-34
 21934  011E18  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21935  011E1E  0EDF               	movlw	-33
 21936  011E20  0060  F013  FFE3   	movff	btemp+3,plusw1
 21937                           
 21938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 21939                           ;stkvar	_l @ sp[(-56)+20]
 21940  011E26  0EDC               	movlw	-36
 21941  011E28  006F FF8F FFE6     	movff	plusw1,postinc1
 21942  011E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 21943  011E34  006F FF8F FFE6     	movff	plusw1,postinc1
 21944  011E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 21945  011E40  EC46  F0D0         	call	___fltol	;wreg free
 21946  011E44  0060  F004  F00B   	movff	btemp,btemp+10
 21947  011E4A  0060  F008  F00C   	movff	btemp+1,btemp+11
 21948                           
 21949                           ;stkvar	_d @ sp[(-56)+44]
 21950  011E50  0EF4               	movlw	-12
 21951  011E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21952  011E58  0EF5               	movlw	-11
 21953  011E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21954                           
 21955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 21956  011E60  B83E               	btfsc	_flags^0,4,c
 21957  011E62  D026               	goto	l13612
 21958                           
 21959                           ;stkvar	_d @ sp[(-56)+44]
 21960  011E64  0EF4               	movlw	-12
 21961  011E66  006F FF8C  F001    	movff	plusw1,btemp
 21962  011E6C  0EF5               	movlw	-11
 21963  011E6E  50E3               	movf	plusw1,w,c
 21964  011E70  1001               	iorwf	btemp^0,w,c
 21965  011E72  A4D8               	btfss	status,2,c
 21966  011E74  D01D               	goto	l13612
 21967                           
 21968                           ;stkvar	_mode @ sp[(-56)+54]
 21969  011E76  0EFE               	movlw	-2
 21970  011E78  006F FF8C  F001    	movff	plusw1,btemp
 21971  011E7E  0E67               	movlw	103
 21972  011E80  1801               	xorwf	btemp^0,w,c
 21973  011E82  A4D8               	btfss	status,2,c
 21974  011E84  D015               	goto	l13612
 21975                           
 21976                           ;stkvar	_ne @ sp[(-56)+46]
 21977  011E86  0EF7               	movlw	-9
 21978  011E88  AEE3               	btfss	plusw1,7,c
 21979  011E8A  D012               	goto	l13612
 21980                           
 21981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 21982                           ;stkvar	_t @ sp[(-56)+52]
 21983  011E8C  0EFC               	movlw	-4
 21984  011E8E  50E3               	movf	plusw1,w,c
 21985  011E90  0F01               	addlw	1
 21986  011E92  6E01               	movwf	btemp^0,c
 21987  011E94  0EFC               	movlw	-4
 21988  011E96  0060  F007  FFE3   	movff	btemp,plusw1
 21989  011E9C  6A01               	clrf	btemp^0,c
 21990  011E9E  0EFD               	movlw	-3
 21991  011EA0  50E3               	movf	plusw1,w,c
 21992  011EA2  2001               	addwfc	btemp^0,w,c
 21993  011EA4  6E01               	movwf	btemp^0,c
 21994  011EA6  0EFD               	movlw	-3
 21995  011EA8  0060  F007  FFE3   	movff	btemp,plusw1
 21996                           
 21997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 21998  011EAE  D0AF               	goto	l13640
 21999  011EB0                     l13612:
 22000                           
 22001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 22002                           ;stkvar	_pp @ sp[(-56)+50]
 22003  011EB0  0EFA               	movlw	-6
 22004  011EB2  006F FF8C  F001    	movff	plusw1,btemp
 22005  011EB8  0EFB               	movlw	-5
 22006  011EBA  50E3               	movf	plusw1,w,c
 22007  011EBC  1001               	iorwf	btemp^0,w,c
 22008  011EBE  A4D8               	btfss	status,2,c
 22009  011EC0  D070               	goto	l13632
 22010                           
 22011                           ;stkvar	_ne @ sp[(-56)+46]
 22012  011EC2  0EF7               	movlw	-9
 22013  011EC4  AEE3               	btfss	plusw1,7,c
 22014  011EC6  D06D               	goto	l13632
 22015                           
 22016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 22017                           ;stkvar	_n @ sp[(-56)+32]
 22018  011EC8  0EE8               	movlw	-24
 22019  011ECA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22020  011ED0  0EE9               	movlw	-23
 22021  011ED2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22022  011ED8  0E43               	movlw	low _dbuf
 22023  011EDA  240B               	addwf	(btemp+10)^0,w,c
 22024  011EDC  6ED9               	movwf	fsr2l,c
 22025  011EDE  0E02               	movlw	high _dbuf
 22026  011EE0  200C               	addwfc	(btemp+11)^0,w,c
 22027  011EE2  6EDA               	movwf	fsr2h,c
 22028  011EE4  0E2E               	movlw	46
 22029  011EE6  6EDF               	movwf	indf2,c
 22030                           
 22031                           ;stkvar	_n @ sp[(-56)+32]
 22032  011EE8  0EE8               	movlw	-24
 22033  011EEA  50E3               	movf	plusw1,w,c
 22034  011EEC  0F01               	addlw	1
 22035  011EEE  6E01               	movwf	btemp^0,c
 22036  011EF0  0EE8               	movlw	-24
 22037  011EF2  0060  F007  FFE3   	movff	btemp,plusw1
 22038  011EF8  6A01               	clrf	btemp^0,c
 22039  011EFA  0EE9               	movlw	-23
 22040  011EFC  50E3               	movf	plusw1,w,c
 22041  011EFE  2001               	addwfc	btemp^0,w,c
 22042  011F00  6E01               	movwf	btemp^0,c
 22043  011F02  0EE9               	movlw	-23
 22044  011F04  0060  F007  FFE3   	movff	btemp,plusw1
 22045                           
 22046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 22047                           ;stkvar	_w @ sp[(-56)+38]
 22048  011F0A  50E1               	movf	fsr1l,w,c
 22049  011F0C  0FEE               	addlw	-18
 22050  011F0E  6ED9               	movwf	fsr2l,c
 22051  011F10  50E2               	movf	fsr1h,w,c
 22052  011F12  6EDA               	movwf	fsr2h,c
 22053  011F14  0EFF               	movlw	255
 22054  011F16  22DA               	addwfc	fsr2h,f,c
 22055  011F18  06DE               	decf	postinc2,f,c
 22056  011F1A  0E00               	movlw	0
 22057  011F1C  5ADD               	subwfb	postdec2,f,c
 22058                           
 22059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 22060  011F1E  0E01               	movlw	1
 22061  011F20  6E0B               	movwf	(btemp+10)^0,c
 22062  011F22  0E00               	movlw	0
 22063  011F24  6E0C               	movwf	(btemp+11)^0,c
 22064                           
 22065                           ;stkvar	_pp @ sp[(-56)+50]
 22066  011F26  0EFA               	movlw	-6
 22067  011F28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22068  011F2E  0EFB               	movlw	-5
 22069  011F30  0060  F033  FFE3   	movff	btemp+11,plusw1
 22070  011F36  D035               	goto	l13632
 22071  011F38                     l13624:
 22072                           
 22073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 22074                           ;stkvar	_n @ sp[(-56)+32]
 22075  011F38  0EE8               	movlw	-24
 22076  011F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22077  011F40  0EE9               	movlw	-23
 22078  011F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 22079  011F48  0E43               	movlw	low _dbuf
 22080  011F4A  240B               	addwf	(btemp+10)^0,w,c
 22081  011F4C  6ED9               	movwf	fsr2l,c
 22082  011F4E  0E02               	movlw	high _dbuf
 22083  011F50  200C               	addwfc	(btemp+11)^0,w,c
 22084  011F52  6EDA               	movwf	fsr2h,c
 22085  011F54  0E30               	movlw	48
 22086  011F56  6EDF               	movwf	indf2,c
 22087                           
 22088                           ;stkvar	_n @ sp[(-56)+32]
 22089  011F58  0EE8               	movlw	-24
 22090  011F5A  50E3               	movf	plusw1,w,c
 22091  011F5C  0F01               	addlw	1
 22092  011F5E  6E01               	movwf	btemp^0,c
 22093  011F60  0EE8               	movlw	-24
 22094  011F62  0060  F007  FFE3   	movff	btemp,plusw1
 22095  011F68  6A01               	clrf	btemp^0,c
 22096  011F6A  0EE9               	movlw	-23
 22097  011F6C  50E3               	movf	plusw1,w,c
 22098  011F6E  2001               	addwfc	btemp^0,w,c
 22099  011F70  6E01               	movwf	btemp^0,c
 22100  011F72  0EE9               	movlw	-23
 22101  011F74  0060  F007  FFE3   	movff	btemp,plusw1
 22102                           
 22103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 22104                           ;stkvar	_w @ sp[(-56)+38]
 22105  011F7A  50E1               	movf	fsr1l,w,c
 22106  011F7C  0FEE               	addlw	-18
 22107  011F7E  6ED9               	movwf	fsr2l,c
 22108  011F80  50E2               	movf	fsr1h,w,c
 22109  011F82  6EDA               	movwf	fsr2h,c
 22110  011F84  0EFF               	movlw	255
 22111  011F86  22DA               	addwfc	fsr2h,f,c
 22112  011F88  06DE               	decf	postinc2,f,c
 22113  011F8A  0E00               	movlw	0
 22114  011F8C  5ADD               	subwfb	postdec2,f,c
 22115                           
 22116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 22117                           ;stkvar	_t @ sp[(-56)+52]
 22118  011F8E  50E1               	movf	fsr1l,w,c
 22119  011F90  0FFC               	addlw	-4
 22120  011F92  6ED9               	movwf	fsr2l,c
 22121  011F94  50E2               	movf	fsr1h,w,c
 22122  011F96  6EDA               	movwf	fsr2h,c
 22123  011F98  0EFF               	movlw	255
 22124  011F9A  22DA               	addwfc	fsr2h,f,c
 22125  011F9C  06DE               	decf	postinc2,f,c
 22126  011F9E  0E00               	movlw	0
 22127  011FA0  5ADD               	subwfb	postdec2,f,c
 22128  011FA2                     l13632:
 22129                           
 22130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 22131                           ;stkvar	_t @ sp[(-56)+52]
 22132  011FA2  0EFC               	movlw	-4
 22133  011FA4  006F FF8C  F001    	movff	plusw1,btemp
 22134  011FAA  0EFD               	movlw	-3
 22135  011FAC  50E3               	movf	plusw1,w,c
 22136  011FAE  1001               	iorwf	btemp^0,w,c
 22137  011FB0  A4D8               	btfss	status,2,c
 22138  011FB2  D7C2               	goto	l13624
 22139                           
 22140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 22141                           ;stkvar	_n @ sp[(-56)+32]
 22142  011FB4  0EE8               	movlw	-24
 22143  011FB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22144  011FBC  0EE9               	movlw	-23
 22145  011FBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22146  011FC4  0E43               	movlw	low _dbuf
 22147  011FC6  240B               	addwf	(btemp+10)^0,w,c
 22148  011FC8  6ED9               	movwf	fsr2l,c
 22149  011FCA  0E02               	movlw	high _dbuf
 22150  011FCC  200C               	addwfc	(btemp+11)^0,w,c
 22151  011FCE  6EDA               	movwf	fsr2h,c
 22152                           
 22153                           ;stkvar	_d @ sp[(-56)+44]
 22154  011FD0  0EF4               	movlw	-12
 22155  011FD2  50E3               	movf	plusw1,w,c
 22156  011FD4  0F30               	addlw	48
 22157  011FD6  6EDF               	movwf	indf2,c
 22158                           
 22159                           ;stkvar	_n @ sp[(-56)+32]
 22160  011FD8  0EE8               	movlw	-24
 22161  011FDA  50E3               	movf	plusw1,w,c
 22162  011FDC  0F01               	addlw	1
 22163  011FDE  6E01               	movwf	btemp^0,c
 22164  011FE0  0EE8               	movlw	-24
 22165  011FE2  0060  F007  FFE3   	movff	btemp,plusw1
 22166  011FE8  6A01               	clrf	btemp^0,c
 22167  011FEA  0EE9               	movlw	-23
 22168  011FEC  50E3               	movf	plusw1,w,c
 22169  011FEE  2001               	addwfc	btemp^0,w,c
 22170  011FF0  6E01               	movwf	btemp^0,c
 22171  011FF2  0EE9               	movlw	-23
 22172  011FF4  0060  F007  FFE3   	movff	btemp,plusw1
 22173                           
 22174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 22175                           ;stkvar	_w @ sp[(-56)+38]
 22176  011FFA  50E1               	movf	fsr1l,w,c
 22177  011FFC  0FEE               	addlw	-18
 22178  011FFE  6ED9               	movwf	fsr2l,c
 22179  012000  50E2               	movf	fsr1h,w,c
 22180  012002  6EDA               	movwf	fsr2h,c
 22181  012004  0EFF               	movlw	255
 22182  012006  22DA               	addwfc	fsr2h,f,c
 22183  012008  06DE               	decf	postinc2,f,c
 22184  01200A  0E00               	movlw	0
 22185  01200C  5ADD               	subwfb	postdec2,f,c
 22186  01200E                     l13640:
 22187                           
 22188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 22189                           ;stkvar	_u @ sp[(-56)+12]
 22190  01200E  0ED4               	movlw	-44
 22191  012010  006F FF8F FFE6     	movff	plusw1,postinc1
 22192  012016  006F FF8F FFE6     	movff	plusw1,postinc1
 22193  01201C  006F FF8F FFE6     	movff	plusw1,postinc1
 22194  012022  006F FF8F FFE6     	movff	plusw1,postinc1
 22195                           
 22196                           ;stkvar	_l @ sp[(-60)+20]
 22197  012028  0ED8               	movlw	-40
 22198  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 22199  012030  006F FF8F FFE6     	movff	plusw1,postinc1
 22200  012036  006F FF8F FFE6     	movff	plusw1,postinc1
 22201  01203C  006F FF8F FFE6     	movff	plusw1,postinc1
 22202  012042  EC48  F0A5         	call	___flmul	;wreg free
 22203  012046  0060  F007  FFE6   	movff	btemp,postinc1
 22204  01204C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22205  012052  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22206  012058  0060  F013  FFE6   	movff	btemp+3,postinc1
 22207                           
 22208                           ;stkvar	_h @ sp[(-60)+24]
 22209  01205E  0EDC               	movlw	-36
 22210  012060  006F FF8F FFE6     	movff	plusw1,postinc1
 22211  012066  006F FF8F FFE6     	movff	plusw1,postinc1
 22212  01206C  006F FF8F FFE6     	movff	plusw1,postinc1
 22213  012072  006F FF8F FFE6     	movff	plusw1,postinc1
 22214  012078  ECB1  F0E7         	call	___flsub	;wreg free
 22215                           
 22216                           ;stkvar	_h @ sp[(-56)+24]
 22217  01207C  0EE0               	movlw	-32
 22218  01207E  0060  F007  FFE3   	movff	btemp,plusw1
 22219  012084  0EE1               	movlw	-31
 22220  012086  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22221  01208C  0EE2               	movlw	-30
 22222  01208E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22223  012094  0EE3               	movlw	-29
 22224  012096  0060  F013  FFE3   	movff	btemp+3,plusw1
 22225                           
 22226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 22227  01209C  0E00               	movlw	0
 22228  01209E  6EE6               	movwf	postinc1,c
 22229  0120A0  0E00               	movlw	0
 22230  0120A2  6EE6               	movwf	postinc1,c
 22231  0120A4  0E20               	movlw	32
 22232  0120A6  6EE6               	movwf	postinc1,c
 22233  0120A8  0E41               	movlw	65
 22234  0120AA  6EE6               	movwf	postinc1,c
 22235                           
 22236                           ;stkvar	_u @ sp[(-60)+12]
 22237  0120AC  0ED0               	movlw	-48
 22238  0120AE  006F FF8F FFE6     	movff	plusw1,postinc1
 22239  0120B4  006F FF8F FFE6     	movff	plusw1,postinc1
 22240  0120BA  006F FF8F FFE6     	movff	plusw1,postinc1
 22241  0120C0  006F FF8F FFE6     	movff	plusw1,postinc1
 22242  0120C6  EC3B  F0AD         	call	___fldiv	;wreg free
 22243                           
 22244                           ;stkvar	_u @ sp[(-56)+12]
 22245  0120CA  0ED4               	movlw	-44
 22246  0120CC  0060  F007  FFE3   	movff	btemp,plusw1
 22247  0120D2  0ED5               	movlw	-43
 22248  0120D4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22249  0120DA  0ED6               	movlw	-42
 22250  0120DC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 22251  0120E2  0ED7               	movlw	-41
 22252  0120E4  0060  F013  FFE3   	movff	btemp+3,plusw1
 22253                           
 22254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 22255                           ;stkvar	_ne @ sp[(-56)+46]
 22256  0120EA  50E1               	movf	fsr1l,w,c
 22257  0120EC  0FF6               	addlw	-10
 22258  0120EE  6ED9               	movwf	fsr2l,c
 22259  0120F0  50E2               	movf	fsr1h,w,c
 22260  0120F2  6EDA               	movwf	fsr2h,c
 22261  0120F4  0EFF               	movlw	255
 22262  0120F6  22DA               	addwfc	fsr2h,f,c
 22263  0120F8  06DE               	decf	postinc2,f,c
 22264  0120FA  0E00               	movlw	0
 22265  0120FC  5ADD               	subwfb	postdec2,f,c
 22266                           
 22267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 22268                           ;stkvar	_i @ sp[(-56)+36]
 22269  0120FE  0EEC               	movlw	-20
 22270  012100  50E3               	movf	plusw1,w,c
 22271  012102  0F01               	addlw	1
 22272  012104  6E01               	movwf	btemp^0,c
 22273  012106  0EEC               	movlw	-20
 22274  012108  0060  F007  FFE3   	movff	btemp,plusw1
 22275  01210E  6A01               	clrf	btemp^0,c
 22276  012110  0EED               	movlw	-19
 22277  012112  50E3               	movf	plusw1,w,c
 22278  012114  2001               	addwfc	btemp^0,w,c
 22279  012116  6E01               	movwf	btemp^0,c
 22280  012118  0EED               	movlw	-19
 22281  01211A  0060  F007  FFE3   	movff	btemp,plusw1
 22282  012120                     l13648:
 22283                           
 22284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 22285                           ;stkvar	_m @ sp[(-56)+48]
 22286                           ;stkvar	_i @ sp[(-56)+36]
 22287  012120  50E1               	movf	fsr1l,w,c
 22288  012122  0FEC               	addlw	-20
 22289  012124  6ED9               	movwf	fsr2l,c
 22290  012126  50E2               	movf	fsr1h,w,c
 22291  012128  6EDA               	movwf	fsr2h,c
 22292  01212A  0EFF               	movlw	255
 22293  01212C  22DA               	addwfc	fsr2h,f,c
 22294  01212E  0EF8               	movlw	-8
 22295  012130  50E3               	movf	plusw1,w,c
 22296  012132  5CDE               	subwf	postinc2,w,c
 22297  012134  50DE               	movf	postinc2,w,c
 22298  012136  0A80               	xorlw	128
 22299  012138  6E01               	movwf	btemp^0,c
 22300  01213A  0EF9               	movlw	-7
 22301  01213C  50E3               	movf	plusw1,w,c
 22302  01213E  0A80               	xorlw	128
 22303  012140  5801               	subwfb	btemp^0,w,c
 22304  012142  B0D8               	btfsc	status,0,c
 22305  012144  D00E               	goto	u12660
 22306                           
 22307                           ;stkvar	_n @ sp[(-56)+32]
 22308  012146  0EE9               	movlw	-23
 22309  012148  BEE3               	btfsc	plusw1,7,c
 22310  01214A  D633               	goto	l13598
 22311  01214C  0EE9               	movlw	-23
 22312  01214E  50E3               	movf	plusw1,w,c
 22313  012150  E108               	bnz	u12660
 22314  012152  0EE8               	movlw	-24
 22315  012154  006F FF8C  F001    	movff	plusw1,btemp
 22316  01215A  0E4B               	movlw	75
 22317  01215C  5E01               	subwf	btemp^0,f,c
 22318  01215E  A0D8               	btfss	status,0,c
 22319  012160  D628               	goto	l13598
 22320  012162                     u12660:
 22321                           
 22322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 22323                           ;stkvar	_pp @ sp[(-56)+50]
 22324  012162  0EFA               	movlw	-6
 22325  012164  006F FF8C  F001    	movff	plusw1,btemp
 22326  01216A  0EFB               	movlw	-5
 22327  01216C  50E3               	movf	plusw1,w,c
 22328  01216E  1001               	iorwf	btemp^0,w,c
 22329  012170  B4D8               	btfsc	status,2,c
 22330  012172  A83E               	btfss	_flags^0,4,c
 22331  012174  D021               	goto	l13660
 22332                           
 22333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 22334                           ;stkvar	_n @ sp[(-56)+32]
 22335  012176  0EE8               	movlw	-24
 22336  012178  006F FF8C  F00B    	movff	plusw1,btemp+10
 22337  01217E  0EE9               	movlw	-23
 22338  012180  006F FF8C  F00C    	movff	plusw1,btemp+11
 22339  012186  0E43               	movlw	low _dbuf
 22340  012188  240B               	addwf	(btemp+10)^0,w,c
 22341  01218A  6ED9               	movwf	fsr2l,c
 22342  01218C  0E02               	movlw	high _dbuf
 22343  01218E  200C               	addwfc	(btemp+11)^0,w,c
 22344  012190  6EDA               	movwf	fsr2h,c
 22345  012192  0E2E               	movlw	46
 22346  012194  6EDF               	movwf	indf2,c
 22347                           
 22348                           ;stkvar	_n @ sp[(-56)+32]
 22349  012196  0EE8               	movlw	-24
 22350  012198  50E3               	movf	plusw1,w,c
 22351  01219A  0F01               	addlw	1
 22352  01219C  6E01               	movwf	btemp^0,c
 22353  01219E  0EE8               	movlw	-24
 22354  0121A0  0060  F007  FFE3   	movff	btemp,plusw1
 22355  0121A6  6A01               	clrf	btemp^0,c
 22356  0121A8  0EE9               	movlw	-23
 22357  0121AA  50E3               	movf	plusw1,w,c
 22358  0121AC  2001               	addwfc	btemp^0,w,c
 22359  0121AE  6E01               	movwf	btemp^0,c
 22360  0121B0  0EE9               	movlw	-23
 22361  0121B2  0060  F007  FFE3   	movff	btemp,plusw1
 22362  0121B8                     l13660:
 22363                           
 22364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 22365                           ;stkvar	_n @ sp[(-56)+32]
 22366  0121B8  0EE8               	movlw	-24
 22367  0121BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22368  0121C0  0EE9               	movlw	-23
 22369  0121C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22370  0121C8  0E43               	movlw	low _dbuf
 22371  0121CA  240B               	addwf	(btemp+10)^0,w,c
 22372  0121CC  6ED9               	movwf	fsr2l,c
 22373  0121CE  0E02               	movlw	high _dbuf
 22374  0121D0  200C               	addwfc	(btemp+11)^0,w,c
 22375  0121D2  6EDA               	movwf	fsr2h,c
 22376  0121D4  0E00               	movlw	0
 22377  0121D6  6EDF               	movwf	indf2,c
 22378                           
 22379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 22380                           ;stkvar	_nmode @ sp[(-56)+55]
 22381  0121D8  0EFF               	movlw	-1
 22382  0121DA  006F FF8C  F001    	movff	plusw1,btemp
 22383  0121E0  0E65               	movlw	101
 22384  0121E2  1801               	xorwf	btemp^0,w,c
 22385  0121E4  A4D8               	btfss	status,2,c
 22386  0121E6  EF55  F08A         	goto	l13464
 22387                           
 22388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 22389  0121EA  0E4F               	movlw	79
 22390  0121EC  6E0B               	movwf	(btemp+10)^0,c
 22391  0121EE  0E00               	movlw	0
 22392  0121F0  6E0C               	movwf	(btemp+11)^0,c
 22393                           
 22394                           ;stkvar	_i @ sp[(-56)+36]
 22395  0121F2  0EEC               	movlw	-20
 22396  0121F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22397  0121FA  0EED               	movlw	-19
 22398  0121FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22399                           
 22400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 22401                           ;stkvar	_i @ sp[(-56)+36]
 22402  012202  0EEC               	movlw	-20
 22403  012204  006F FF8C  F00B    	movff	plusw1,btemp+10
 22404  01220A  0EED               	movlw	-19
 22405  01220C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22406  012212  0E43               	movlw	low _dbuf
 22407  012214  240B               	addwf	(btemp+10)^0,w,c
 22408  012216  6ED9               	movwf	fsr2l,c
 22409  012218  0E02               	movlw	high _dbuf
 22410  01221A  200C               	addwfc	(btemp+11)^0,w,c
 22411  01221C  6EDA               	movwf	fsr2h,c
 22412  01221E  0E00               	movlw	0
 22413  012220  6EDF               	movwf	indf2,c
 22414                           
 22415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 22416                           ;stkvar	_sign @ sp[(-56)+42]
 22417  012222  0EF2               	movlw	-14
 22418  012224  6AE3               	clrf	plusw1,c
 22419  012226  0EF3               	movlw	-13
 22420  012228  6AE3               	clrf	plusw1,c
 22421                           
 22422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 22423                           ;stkvar	_e @ sp[(-56)+34]
 22424  01222A  0EEB               	movlw	-21
 22425  01222C  AEE3               	btfss	plusw1,7,c
 22426  01222E  D012               	goto	l13674
 22427                           
 22428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 22429  012230  0E01               	movlw	1
 22430  012232  6E0B               	movwf	(btemp+10)^0,c
 22431  012234  0E00               	movlw	0
 22432  012236  6E0C               	movwf	(btemp+11)^0,c
 22433                           
 22434                           ;stkvar	_sign @ sp[(-56)+42]
 22435  012238  0EF2               	movlw	-14
 22436  01223A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22437  012240  0EF3               	movlw	-13
 22438  012242  0060  F033  FFE3   	movff	btemp+11,plusw1
 22439                           
 22440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 22441                           ;stkvar	_e @ sp[(-56)+34]
 22442                           ;stkvar	_e @ sp[(-56)+34]
 22443  012248  0EEA               	movlw	-22
 22444  01224A  6CE3               	negf	plusw1,c
 22445  01224C  0EEB               	movlw	-21
 22446  01224E  1EE3               	comf	plusw1,f,c
 22447  012250  B0D8               	btfsc	status,0,c
 22448  012252  2AE3               	incf	plusw1,f,c
 22449  012254                     l13674:
 22450                           
 22451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 22452  012254  0E02               	movlw	2
 22453  012256  6E0B               	movwf	(btemp+10)^0,c
 22454  012258  0E00               	movlw	0
 22455  01225A  6E0C               	movwf	(btemp+11)^0,c
 22456                           
 22457                           ;stkvar	_p @ sp[(-56)+40]
 22458  01225C  0EF0               	movlw	-16
 22459  01225E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22460  012264  0EF1               	movlw	-15
 22461  012266  0060  F033  FFE3   	movff	btemp+11,plusw1
 22462                           
 22463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 22464  01226C  D051               	goto	l13686
 22465  01226E                     l13676:
 22466                           
 22467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 22468                           ;stkvar	_i @ sp[(-56)+36]
 22469  01226E  50E1               	movf	fsr1l,w,c
 22470  012270  0FEC               	addlw	-20
 22471  012272  6ED9               	movwf	fsr2l,c
 22472  012274  50E2               	movf	fsr1h,w,c
 22473  012276  6EDA               	movwf	fsr2h,c
 22474  012278  0EFF               	movlw	255
 22475  01227A  22DA               	addwfc	fsr2h,f,c
 22476  01227C  06DE               	decf	postinc2,f,c
 22477  01227E  0E00               	movlw	0
 22478  012280  5ADD               	subwfb	postdec2,f,c
 22479                           
 22480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 22481                           ;stkvar	_i @ sp[(-56)+36]
 22482  012282  0EEC               	movlw	-20
 22483  012284  006F FF8C  F00B    	movff	plusw1,btemp+10
 22484  01228A  0EED               	movlw	-19
 22485  01228C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22486  012292  0E43               	movlw	low _dbuf
 22487  012294  240B               	addwf	(btemp+10)^0,w,c
 22488  012296  6ED9               	movwf	fsr2l,c
 22489  012298  0E02               	movlw	high _dbuf
 22490  01229A  200C               	addwfc	(btemp+11)^0,w,c
 22491  01229C  6EDA               	movwf	fsr2h,c
 22492  01229E  0E0A               	movlw	10
 22493  0122A0  6EE6               	movwf	postinc1,c
 22494  0122A2  0E00               	movlw	0
 22495  0122A4  6EE6               	movwf	postinc1,c
 22496                           
 22497                           ;stkvar	_e @ sp[(-58)+34]
 22498  0122A6  0EE8               	movlw	-24
 22499  0122A8  006F FF8F FFE6     	movff	plusw1,postinc1
 22500  0122AE  006F FF8F FFE6     	movff	plusw1,postinc1
 22501  0122B4  EC26  F0D7         	call	___awmod	;wreg free
 22502  0122B8  5001               	movf	btemp^0,w,c
 22503  0122BA  0F30               	addlw	48
 22504  0122BC  6EDF               	movwf	indf2,c
 22505                           
 22506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 22507  0122BE  0E0A               	movlw	10
 22508  0122C0  6EE6               	movwf	postinc1,c
 22509  0122C2  0E00               	movlw	0
 22510  0122C4  6EE6               	movwf	postinc1,c
 22511                           
 22512                           ;stkvar	_e @ sp[(-58)+34]
 22513  0122C6  0EE8               	movlw	-24
 22514  0122C8  006F FF8F FFE6     	movff	plusw1,postinc1
 22515  0122CE  006F FF8F FFE6     	movff	plusw1,postinc1
 22516  0122D4  EC61  F0D2         	call	___awdiv	;wreg free
 22517                           
 22518                           ;stkvar	_e @ sp[(-56)+34]
 22519  0122D8  0EEA               	movlw	-22
 22520  0122DA  0060  F007  FFE3   	movff	btemp,plusw1
 22521  0122E0  0EEB               	movlw	-21
 22522  0122E2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 22523                           
 22524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 22525                           ;stkvar	_p @ sp[(-56)+40]
 22526  0122E8  50E1               	movf	fsr1l,w,c
 22527  0122EA  0FF0               	addlw	-16
 22528  0122EC  6ED9               	movwf	fsr2l,c
 22529  0122EE  50E2               	movf	fsr1h,w,c
 22530  0122F0  6EDA               	movwf	fsr2h,c
 22531  0122F2  0EFF               	movlw	255
 22532  0122F4  22DA               	addwfc	fsr2h,f,c
 22533  0122F6  06DE               	decf	postinc2,f,c
 22534  0122F8  0E00               	movlw	0
 22535  0122FA  5ADD               	subwfb	postdec2,f,c
 22536                           
 22537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 22538                           ;stkvar	_w @ sp[(-56)+38]
 22539  0122FC  50E1               	movf	fsr1l,w,c
 22540  0122FE  0FEE               	addlw	-18
 22541  012300  6ED9               	movwf	fsr2l,c
 22542  012302  50E2               	movf	fsr1h,w,c
 22543  012304  6EDA               	movwf	fsr2h,c
 22544  012306  0EFF               	movlw	255
 22545  012308  22DA               	addwfc	fsr2h,f,c
 22546  01230A  06DE               	decf	postinc2,f,c
 22547  01230C  0E00               	movlw	0
 22548  01230E  5ADD               	subwfb	postdec2,f,c
 22549  012310                     l13686:
 22550                           
 22551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 22552                           ;stkvar	_e @ sp[(-56)+34]
 22553  012310  0EEA               	movlw	-22
 22554  012312  006F FF8C  F001    	movff	plusw1,btemp
 22555  012318  0EEB               	movlw	-21
 22556  01231A  50E3               	movf	plusw1,w,c
 22557  01231C  1001               	iorwf	btemp^0,w,c
 22558  01231E  A4D8               	btfss	status,2,c
 22559  012320  D7A6               	goto	l13676
 22560                           
 22561                           ;stkvar	_p @ sp[(-56)+40]
 22562  012322  0EF1               	movlw	-15
 22563  012324  BEE3               	btfsc	plusw1,7,c
 22564  012326  D007               	goto	u12720
 22565  012328  0EF1               	movlw	-15
 22566  01232A  50E3               	movf	plusw1,w,c
 22567  01232C  E1A0               	bnz	l13676
 22568  01232E  0EF0               	movlw	-16
 22569  012330  04E3               	decf	plusw1,w,c
 22570  012332  B0D8               	btfsc	status,0,c
 22571  012334  D79C               	goto	l13676
 22572  012336                     u12720:
 22573                           
 22574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 22575                           ;stkvar	_i @ sp[(-56)+36]
 22576  012336  50E1               	movf	fsr1l,w,c
 22577  012338  0FEC               	addlw	-20
 22578  01233A  6ED9               	movwf	fsr2l,c
 22579  01233C  50E2               	movf	fsr1h,w,c
 22580  01233E  6EDA               	movwf	fsr2h,c
 22581  012340  0EFF               	movlw	255
 22582  012342  22DA               	addwfc	fsr2h,f,c
 22583  012344  06DE               	decf	postinc2,f,c
 22584  012346  0E00               	movlw	0
 22585  012348  5ADD               	subwfb	postdec2,f,c
 22586                           
 22587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 22588                           ;stkvar	_sign @ sp[(-56)+42]
 22589  01234A  0EF2               	movlw	-14
 22590  01234C  006F FF8C  F001    	movff	plusw1,btemp
 22591  012352  0EF3               	movlw	-13
 22592  012354  50E3               	movf	plusw1,w,c
 22593  012356  1001               	iorwf	btemp^0,w,c
 22594  012358  A4D8               	btfss	status,2,c
 22595  01235A  D002               	goto	l13696
 22596  01235C  0E2B               	movlw	43
 22597  01235E  D001               	goto	L24
 22598  012360                     l13696:
 22599  012360  0E2D               	movlw	45
 22600  012362                     L24:
 22601  012362  6E0B               	movwf	(btemp+10)^0,c
 22602  012364  0E00               	movlw	0
 22603  012366  6E0C               	movwf	(btemp+11)^0,c
 22604                           
 22605                           ;stkvar	_efgtoa$6196 @ sp[(-56)+4]
 22606  012368  0ECC               	movlw	-52
 22607  01236A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22608  012370  0ECD               	movlw	-51
 22609  012372  0060  F033  FFE3   	movff	btemp+11,plusw1
 22610                           
 22611                           ;stkvar	_efgtoa$6196 @ sp[(-56)+4]
 22612                           ;stkvar	_i @ sp[(-56)+36]
 22613  012378  0EEC               	movlw	-20
 22614  01237A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22615  012380  0EED               	movlw	-19
 22616  012382  006F FF8C  F00C    	movff	plusw1,btemp+11
 22617  012388  0E43               	movlw	low _dbuf
 22618  01238A  240B               	addwf	(btemp+10)^0,w,c
 22619  01238C  6ED9               	movwf	fsr2l,c
 22620  01238E  0E02               	movlw	high _dbuf
 22621  012390  200C               	addwfc	(btemp+11)^0,w,c
 22622  012392  6EDA               	movwf	fsr2h,c
 22623  012394  0ECC               	movlw	-52
 22624  012396  006F FF8F FFDF     	movff	plusw1,indf2
 22625                           
 22626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 22627                           ;stkvar	_w @ sp[(-56)+38]
 22628  01239C  50E1               	movf	fsr1l,w,c
 22629  01239E  0FEE               	addlw	-18
 22630  0123A0  6ED9               	movwf	fsr2l,c
 22631  0123A2  50E2               	movf	fsr1h,w,c
 22632  0123A4  6EDA               	movwf	fsr2h,c
 22633  0123A6  0EFF               	movlw	255
 22634  0123A8  22DA               	addwfc	fsr2h,f,c
 22635  0123AA  06DE               	decf	postinc2,f,c
 22636  0123AC  0E00               	movlw	0
 22637  0123AE  5ADD               	subwfb	postdec2,f,c
 22638                           
 22639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 22640                           ;stkvar	_i @ sp[(-56)+36]
 22641  0123B0  50E1               	movf	fsr1l,w,c
 22642  0123B2  0FEC               	addlw	-20
 22643  0123B4  6ED9               	movwf	fsr2l,c
 22644  0123B6  50E2               	movf	fsr1h,w,c
 22645  0123B8  6EDA               	movwf	fsr2h,c
 22646  0123BA  0EFF               	movlw	255
 22647  0123BC  22DA               	addwfc	fsr2h,f,c
 22648  0123BE  06DE               	decf	postinc2,f,c
 22649  0123C0  0E00               	movlw	0
 22650  0123C2  5ADD               	subwfb	postdec2,f,c
 22651  0123C4  0EBF               	movlw	191
 22652  0123C6  6E0B               	movwf	(btemp+10)^0,c
 22653  0123C8  0EFF               	movlw	255
 22654  0123CA  6E0C               	movwf	(btemp+11)^0,c
 22655                           
 22656                           ;stkvar	_c @ sp[(-56)+-7]
 22657  0123CC  0EC1               	movlw	-63
 22658  0123CE  50E3               	movf	plusw1,w,c
 22659  0123D0  6E09               	movwf	(btemp+8)^0,c
 22660  0123D2  6A0A               	clrf	(btemp+9)^0,c
 22661  0123D4  500B               	movf	(btemp+10)^0,w,c
 22662  0123D6  2609               	addwf	(btemp+8)^0,f,c
 22663  0123D8  500C               	movf	(btemp+11)^0,w,c
 22664  0123DA  220A               	addwfc	(btemp+9)^0,f,c
 22665  0123DC  500A               	movf	(btemp+9)^0,w,c
 22666  0123DE  E106               	bnz	u12740
 22667  0123E0  0E1A               	movlw	26
 22668  0123E2  5C09               	subwf	(btemp+8)^0,w,c
 22669  0123E4  B0D8               	btfsc	status,0,c
 22670  0123E6  D002               	goto	u12740
 22671  0123E8  0E01               	movlw	1
 22672  0123EA  D001               	goto	u12750
 22673  0123EC                     u12740:
 22674  0123EC  0E00               	movlw	0
 22675  0123EE                     u12750:
 22676  0123EE  6E0B               	movwf	(btemp+10)^0,c
 22677  0123F0  6A0C               	clrf	(btemp+11)^0,c
 22678                           
 22679                           ;stkvar	_efgtoa$6198 @ sp[(-56)+0]
 22680  0123F2  0EC8               	movlw	-56
 22681  0123F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22682  0123FA  0EC9               	movlw	-55
 22683  0123FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22684                           
 22685                           ;stkvar	_efgtoa$6198 @ sp[(-56)+0]
 22686  012402  0EC8               	movlw	-56
 22687  012404  006F FF8C  F001    	movff	plusw1,btemp
 22688  01240A  0EC9               	movlw	-55
 22689  01240C  50E3               	movf	plusw1,w,c
 22690  01240E  1001               	iorwf	btemp^0,w,c
 22691  012410  A4D8               	btfss	status,2,c
 22692  012412  D002               	goto	l13712
 22693  012414  0E65               	movlw	101
 22694  012416  D001               	goto	L25
 22695  012418                     l13712:
 22696  012418  0E45               	movlw	69
 22697  01241A                     L25:
 22698  01241A  6E0B               	movwf	(btemp+10)^0,c
 22699  01241C  0E00               	movlw	0
 22700  01241E  6E0C               	movwf	(btemp+11)^0,c
 22701                           
 22702                           ;stkvar	_efgtoa$6197 @ sp[(-56)+2]
 22703  012420  0ECA               	movlw	-54
 22704  012422  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22705  012428  0ECB               	movlw	-53
 22706  01242A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22707                           
 22708                           ;stkvar	_efgtoa$6197 @ sp[(-56)+2]
 22709                           ;stkvar	_i @ sp[(-56)+36]
 22710  012430  0EEC               	movlw	-20
 22711  012432  006F FF8C  F00B    	movff	plusw1,btemp+10
 22712  012438  0EED               	movlw	-19
 22713  01243A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22714  012440  0E43               	movlw	low _dbuf
 22715  012442  240B               	addwf	(btemp+10)^0,w,c
 22716  012444  6ED9               	movwf	fsr2l,c
 22717  012446  0E02               	movlw	high _dbuf
 22718  012448  200C               	addwfc	(btemp+11)^0,w,c
 22719  01244A  6EDA               	movwf	fsr2h,c
 22720  01244C  0ECA               	movlw	-54
 22721  01244E  006F FF8F FFDF     	movff	plusw1,indf2
 22722                           
 22723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 22724                           ;stkvar	_w @ sp[(-56)+38]
 22725  012454  50E1               	movf	fsr1l,w,c
 22726  012456  0FEE               	addlw	-18
 22727  012458  6ED9               	movwf	fsr2l,c
 22728  01245A  50E2               	movf	fsr1h,w,c
 22729  01245C  6EDA               	movwf	fsr2h,c
 22730  01245E  0EFF               	movlw	255
 22731  012460  22DA               	addwfc	fsr2h,f,c
 22732  012462  06DE               	decf	postinc2,f,c
 22733  012464  0E00               	movlw	0
 22734  012466  5ADD               	subwfb	postdec2,f,c
 22735                           
 22736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 22737                           ;stkvar	_i @ sp[(-56)+36]
 22738  012468  0EEC               	movlw	-20
 22739  01246A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22740  012470  0EED               	movlw	-19
 22741  012472  006F FF8C  F00C    	movff	plusw1,btemp+11
 22742  012478  0E43               	movlw	low _dbuf
 22743  01247A  240B               	addwf	(btemp+10)^0,w,c
 22744  01247C  6E09               	movwf	(btemp+8)^0,c
 22745  01247E  0E02               	movlw	high _dbuf
 22746  012480  200C               	addwfc	(btemp+11)^0,w,c
 22747  012482  6E0A               	movwf	(btemp+9)^0,c
 22748  012484  0060  F027  FFE6   	movff	btemp+8,postinc1
 22749  01248A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22750                           
 22751                           ;stkvar	_n @ sp[(-58)+32]
 22752  012490  0E43               	movlw	low _dbuf
 22753  012492  6E0B               	movwf	(btemp+10)^0,c
 22754  012494  0E02               	movlw	high _dbuf
 22755  012496  6E0C               	movwf	(btemp+11)^0,c
 22756  012498  0EE6               	movlw	-26
 22757  01249A  50E3               	movf	plusw1,w,c
 22758  01249C  260B               	addwf	(btemp+10)^0,f,c
 22759  01249E  0EE7               	movlw	-25
 22760  0124A0  50E3               	movf	plusw1,w,c
 22761  0124A2  220C               	addwfc	(btemp+11)^0,f,c
 22762  0124A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22763  0124AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 22764  0124B0  EC21  F0DB         	call	_strcpy	;wreg free
 22765  0124B4  EF55  F08A         	goto	l13464
 22766  0124B8                     l2472:
 22767                           
 22768                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 22769  0124B8  0EC1               	movlw	193
 22770  0124BA  26E1               	addwf	fsr1l,f,c
 22771  0124BC  0EFF               	movlw	255
 22772  0124BE  22E2               	addwfc	fsr1h,f,c
 22773  0124C0  0012               	return		;funcret
 22774  0124C2                     __end_of_efgtoa:
 22775                           	opt callstack 0
 22776                           
 22777 ;; *************** function _tolower *****************
 22778 ;; Defined at:
 22779 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;  c               2  [STACK] int 
 22782 ;; Auto vars:     Size  Location     Type
 22783 ;;		None
 22784 ;; Return value:  Size  Location     Type
 22785 ;;                  2  [STACK] int 
 22786 ;; Registers used:
 22787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22788 ;; Tracked objects:
 22789 ;;		On entry : 0/0
 22790 ;;		On exit  : 0/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22797 ;;Total ram usage:        0 bytes
 22798 ;; Hardware stack levels used:    1
 22799 ;; Hardware stack levels required when called:   16
 22800 ;; This function calls:
 22801 ;;		_isupper
 22802 ;; This function is called by:
 22803 ;;		_efgtoa
 22804 ;;		_vfpfcnvrt
 22805 ;; This function uses a reentrant model
 22806 ;;
 22807                           
 22808                           	psect	text78
 22809  01C436                     __ptext78:
 22810                           	opt callstack 0
 22811  01C436                     _tolower:
 22812                           	opt callstack 0
 22813                           
 22814                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22815  01C436  52E6               	movf	postinc1,f,c
 22816  01C438  52E6               	movf	postinc1,f,c
 22817                           
 22818                           ;stkvar	_c @ sp[(-2)+-2]
 22819                           
 22820                           ;incstack = 0
 22821 ;; hardware stack exceeded
 22822  01C43A  0EFC               	movlw	-4
 22823  01C43C  50E3               	movf	plusw1,w,c
 22824  01C43E  0FBF               	addlw	191
 22825  01C440  6E0B               	movwf	(btemp+10)^0,c
 22826  01C442  0EFD               	movlw	-3
 22827  01C444  006F FF8C  F00C    	movff	plusw1,btemp+11
 22828  01C44A  0EFF               	movlw	255
 22829  01C44C  220C               	addwfc	(btemp+11)^0,f,c
 22830  01C44E  500C               	movf	(btemp+11)^0,w,c
 22831  01C450  E106               	bnz	u6680
 22832  01C452  0E1A               	movlw	26
 22833  01C454  5C0B               	subwf	(btemp+10)^0,w,c
 22834  01C456  B0D8               	btfsc	status,0,c
 22835  01C458  D002               	goto	u6680
 22836  01C45A  0E01               	movlw	1
 22837  01C45C  D001               	goto	u6690
 22838  01C45E                     u6680:
 22839  01C45E  0E00               	movlw	0
 22840  01C460                     u6690:
 22841  01C460  6E0B               	movwf	(btemp+10)^0,c
 22842  01C462  6A0C               	clrf	(btemp+11)^0,c
 22843                           
 22844                           ;stkvar	_tolower$7017 @ sp[(-2)+0]
 22845  01C464  0EFE               	movlw	-2
 22846  01C466  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22847  01C46C  0EFF               	movlw	-1
 22848  01C46E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22849                           
 22850                           ;stkvar	_tolower$7017 @ sp[(-2)+0]
 22851  01C474  0EFE               	movlw	-2
 22852  01C476  006F FF8C  F001    	movff	plusw1,btemp
 22853  01C47C  0EFF               	movlw	-1
 22854  01C47E  50E3               	movf	plusw1,w,c
 22855  01C480  1001               	iorwf	btemp^0,w,c
 22856  01C482  B4D8               	btfsc	status,2,c
 22857  01C484  D00D               	goto	l8900
 22858                           
 22859                           ;stkvar	_c @ sp[(-2)+-2]
 22860  01C486  0EFC               	movlw	-4
 22861  01C488  006F FF8C  F001    	movff	plusw1,btemp
 22862  01C48E  0EFD               	movlw	-3
 22863  01C490  006F FF8C  F002    	movff	plusw1,btemp+1
 22864  01C496  0E20               	movlw	32
 22865  01C498  1201               	iorwf	btemp^0,f,c
 22866  01C49A  0E00               	movlw	0
 22867  01C49C  1202               	iorwf	(btemp+1)^0,f,c
 22868  01C49E  D008               	goto	l3744
 22869  01C4A0                     l8900:
 22870                           
 22871                           ;stkvar	_c @ sp[(-2)+-2]
 22872  01C4A0  0EFC               	movlw	-4
 22873  01C4A2  006F FF8C  F001    	movff	plusw1,btemp
 22874  01C4A8  0EFD               	movlw	-3
 22875  01C4AA  006F FF8C  F002    	movff	plusw1,btemp+1
 22876  01C4B0                     l3744:
 22877                           
 22878                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22879  01C4B0  52E5               	movf	postdec1,f,c
 22880  01C4B2  52E5               	movf	postdec1,f,c
 22881  01C4B4  52E5               	movf	postdec1,f,c
 22882  01C4B6  52E5               	movf	postdec1,f,c
 22883  01C4B8  0012               	return		;funcret
 22884  01C4BA                     __end_of_tolower:
 22885                           	opt callstack 0
 22886                           
 22887 ;; *************** function _isupper *****************
 22888 ;; Defined at:
 22889 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 22890 ;; Parameters:    Size  Location     Type
 22891 ;;  c               2  [STACK] int 
 22892 ;; Auto vars:     Size  Location     Type
 22893 ;;		None
 22894 ;; Return value:  Size  Location     Type
 22895 ;;                  2  [STACK] int 
 22896 ;; Registers used:
 22897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22898 ;; Tracked objects:
 22899 ;;		On entry : 0/0
 22900 ;;		On exit  : 0/0
 22901 ;;		Unchanged: 0/0
 22902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22907 ;;Total ram usage:        0 bytes
 22908 ;; Hardware stack levels used:    1
 22909 ;; Hardware stack levels required when called:   15
 22910 ;; This function calls:
 22911 ;;		Nothing
 22912 ;; This function is called by:
 22913 ;;		_efgtoa
 22914 ;;		_xtoa
 22915 ;;		_vfpfcnvrt
 22916 ;;		_tolower
 22917 ;; This function uses a reentrant model
 22918 ;;
 22919                           
 22920                           	psect	text79
 22921  01D42A                     __ptext79:
 22922                           	opt callstack 0
 22923  01D42A                     _isupper:
 22924                           	opt callstack 0
 22925                           
 22926                           ;stkvar	_c @ sp[(0)+-2]
 22927                           
 22928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22929                           ;incstack = 0
 22930 ;; hardware stack exceeded
 22931  01D42A  0EFE               	movlw	-2
 22932  01D42C  50E3               	movf	plusw1,w,c
 22933  01D42E  0FBF               	addlw	191
 22934  01D430  6E0B               	movwf	(btemp+10)^0,c
 22935  01D432  0EFF               	movlw	-1
 22936  01D434  006F FF8C  F00C    	movff	plusw1,btemp+11
 22937  01D43A  0EFF               	movlw	255
 22938  01D43C  220C               	addwfc	(btemp+11)^0,f,c
 22939  01D43E  500C               	movf	(btemp+11)^0,w,c
 22940  01D440  E106               	bnz	u6030
 22941  01D442  0E1A               	movlw	26
 22942  01D444  5C0B               	subwf	(btemp+10)^0,w,c
 22943  01D446  B0D8               	btfsc	status,0,c
 22944  01D448  D002               	goto	u6030
 22945  01D44A  0E01               	movlw	1
 22946  01D44C  D001               	goto	u6040
 22947  01D44E                     u6030:
 22948  01D44E  0E00               	movlw	0
 22949  01D450                     u6040:
 22950  01D450  6E01               	movwf	btemp^0,c
 22951  01D452  6A02               	clrf	(btemp+1)^0,c
 22952                           
 22953                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22954  01D454  52E5               	movf	postdec1,f,c
 22955  01D456  52E5               	movf	postdec1,f,c
 22956  01D458  0012               	return		;funcret
 22957  01D45A                     __end_of_isupper:
 22958                           	opt callstack 0
 22959                           
 22960 ;; *************** function _strcpy *****************
 22961 ;; Defined at:
 22962 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;  dest            2  [STACK] PTR unsigned char 
 22965 ;;		 -> dbuf(80), 
 22966 ;;  src             2  [STACK] PTR const unsigned char 
 22967 ;;		 -> STR_99(4), STR_98(4), STR_95(4), STR_94(4), 
 22968 ;;		 -> dbuf(80), 
 22969 ;; Auto vars:     Size  Location     Type
 22970 ;;  d               2  [STACK] PTR unsigned char 
 22971 ;;		 -> dbuf(80), 
 22972 ;;  s               2  [STACK] PTR const unsigned char 
 22973 ;;		 -> STR_99(4), STR_98(4), STR_95(4), STR_94(4), 
 22974 ;;		 -> dbuf(80), 
 22975 ;; Return value:  Size  Location     Type
 22976 ;;                  2  [STACK] PTR unsigned char 
 22977 ;; Registers used:
 22978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 22979 ;; Tracked objects:
 22980 ;;		On entry : 0/0
 22981 ;;		On exit  : 0/0
 22982 ;;		Unchanged: 0/0
 22983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22988 ;;Total ram usage:        0 bytes
 22989 ;; Hardware stack levels used:    1
 22990 ;; Hardware stack levels required when called:   15
 22991 ;; This function calls:
 22992 ;;		Nothing
 22993 ;; This function is called by:
 22994 ;;		_efgtoa
 22995 ;; This function uses a reentrant model
 22996 ;;
 22997                           
 22998                           	psect	text80
 22999  01B642                     __ptext80:
 23000                           	opt callstack 0
 23001  01B642                     _strcpy:
 23002                           	opt callstack 0
 23003                           
 23004                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23005  01B642  52E6               	movf	postinc1,f,c
 23006  01B644  52E6               	movf	postinc1,f,c
 23007  01B646  52E6               	movf	postinc1,f,c
 23008  01B648  52E6               	movf	postinc1,f,c
 23009                           
 23010                           ;stkvar	_src @ sp[(-4)+-4]
 23011                           
 23012                           ;incstack = 0
 23013 ;; hardware stack exceeded
 23014  01B64A  0EF8               	movlw	-8
 23015  01B64C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23016  01B652  0EF9               	movlw	-7
 23017  01B654  006F FF8C  F00C    	movff	plusw1,btemp+11
 23018                           
 23019                           ;stkvar	_s @ sp[(-4)+2]
 23020  01B65A  0EFF               	movlw	-1
 23021  01B65C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23022  01B662  0EFE               	movlw	-2
 23023  01B664  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23024                           
 23025                           ;stkvar	_dest @ sp[(-4)+-2]
 23026  01B66A  0EFA               	movlw	-6
 23027  01B66C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23028  01B672  0EFB               	movlw	-5
 23029  01B674  006F FF8C  F00C    	movff	plusw1,btemp+11
 23030                           
 23031                           ;stkvar	_d @ sp[(-4)+0]
 23032  01B67A  0EFD               	movlw	-3
 23033  01B67C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23034  01B682  0EFC               	movlw	-4
 23035  01B684  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23036  01B68A                     l13326:
 23037                           
 23038                           ;stkvar	_s @ sp[(-4)+2]
 23039  01B68A  50E1               	movf	fsr1l,w,c
 23040  01B68C  0FFE               	addlw	-2
 23041  01B68E  6ED9               	movwf	fsr2l,c
 23042  01B690  50E2               	movf	fsr1h,w,c
 23043  01B692  6EDA               	movwf	fsr2h,c
 23044  01B694  0EFF               	movlw	255
 23045  01B696  22DA               	addwfc	fsr2h,f,c
 23046  01B698  006F FF7C  F00B    	movff	indf2,btemp+10
 23047  01B69E  0E01               	movlw	1
 23048  01B6A0  26DE               	addwf	postinc2,f,c
 23049  01B6A2  006F FF7C  F00C    	movff	indf2,btemp+11
 23050  01B6A8  0E00               	movlw	0
 23051  01B6AA  22DD               	addwfc	postdec2,f,c
 23052  01B6AC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 23053  01B6B2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 23054  01B6B8  0E00               	movlw	low (__mediumconst shr (0+16))
 23055  01B6BA  6EF8               	movwf	tblptru,c
 23056                           
 23057                           ;stkvar	_d @ sp[(-4)+0]
 23058  01B6BC  50E1               	movf	fsr1l,w,c
 23059  01B6BE  0FFC               	addlw	-4
 23060  01B6C0  6ED9               	movwf	fsr2l,c
 23061  01B6C2  50E2               	movf	fsr1h,w,c
 23062  01B6C4  6EDA               	movwf	fsr2h,c
 23063  01B6C6  0EFF               	movlw	255
 23064  01B6C8  22DA               	addwfc	fsr2h,f,c
 23065  01B6CA  006F FF7C  F00B    	movff	indf2,btemp+10
 23066  01B6D0  0E01               	movlw	1
 23067  01B6D2  26DE               	addwf	postinc2,f,c
 23068  01B6D4  006F FF7C  F00C    	movff	indf2,btemp+11
 23069  01B6DA  0E00               	movlw	0
 23070  01B6DC  22DD               	addwfc	postdec2,f,c
 23071  01B6DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 23072  01B6E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 23073  01B6EA  0E1F               	movlw	(high __ramtop+-1)
 23074  01B6EC  64F7               	cpfsgt	tblptrh,c
 23075  01B6EE  D003               	bra	u12047
 23076  01B6F0  0008               	tblrd		*
 23077  01B6F2  50F5               	movf	tablat,w,c
 23078  01B6F4  D007               	bra	u12040
 23079  01B6F6                     u12047:
 23080  01B6F6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23081  01B6FC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23082  01B702  50EF               	movf	indf0,w,c
 23083  01B704                     u12040:
 23084  01B704  6EDF               	movwf	indf2,c
 23085  01B706  50DF               	movf	indf2,w,c
 23086  01B708  A4D8               	btfss	status,2,c
 23087  01B70A  D7BF               	goto	l13326
 23088                           
 23089                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 23090  01B70C  0EF8               	movlw	248
 23091  01B70E  26E1               	addwf	fsr1l,f,c
 23092  01B710  0EFF               	movlw	255
 23093  01B712  22E2               	addwfc	fsr1h,f,c
 23094  01B714  0012               	return		;funcret
 23095  01B716                     __end_of_strcpy:
 23096                           	opt callstack 0
 23097                           
 23098 ;; *************** function _floorf *****************
 23099 ;; Defined at:
 23100 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 23101 ;; Parameters:    Size  Location     Type
 23102 ;;  x               4  [STACK] float 
 23103 ;; Auto vars:     Size  Location     Type
 23104 ;;  u               4  [STACK] struct .
 23105 ;;  m               4  [STACK] unsigned long 
 23106 ;;  e               2  [STACK] int 
 23107 ;; Return value:  Size  Location     Type
 23108 ;;                  4  [STACK] float 
 23109 ;; Registers used:
 23110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23111 ;; Tracked objects:
 23112 ;;		On entry : 0/0
 23113 ;;		On exit  : 0/0
 23114 ;;		Unchanged: 0/0
 23115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;Total ram usage:        0 bytes
 23121 ;; Hardware stack levels used:    1
 23122 ;; Hardware stack levels required when called:   15
 23123 ;; This function calls:
 23124 ;;		Nothing
 23125 ;; This function is called by:
 23126 ;;		_efgtoa
 23127 ;; This function uses a reentrant model
 23128 ;;
 23129                           
 23130                           	psect	text81
 23131  017132                     __ptext81:
 23132                           	opt callstack 0
 23133  017132                     _floorf:
 23134                           	opt callstack 0
 23135                           
 23136                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23137  017132  0E0A               	movlw	10
 23138  017134  26E1               	addwf	fsr1l,f,c
 23139  017136  0E00               	movlw	0
 23140  017138  22E2               	addwfc	fsr1h,f,c
 23141                           
 23142                           ;incstack = 0
 23143 ;; hardware stack exceeded
 23144  01713A  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 23145  017140  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 23146  017146  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 23147  01714C  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 23148                           
 23149                           ;stkvar	_u @ sp[(-10)+0]
 23150  017152  0EF6               	movlw	-10
 23151  017154  0060  F027  FFE3   	movff	btemp+8,plusw1
 23152  01715A  0EF7               	movlw	-9
 23153  01715C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23154  017162  0EF8               	movlw	-8
 23155  017164  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23156  01716A  0EF9               	movlw	-7
 23157  01716C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23158                           
 23159                           ;stkvar	_x @ sp[(-10)+-4]
 23160  017172  0EF2               	movlw	-14
 23161  017174  006F FF8C  F009    	movff	plusw1,btemp+8
 23162  01717A  0EF3               	movlw	-13
 23163  01717C  006F FF8C  F00A    	movff	plusw1,btemp+9
 23164  017182  0EF4               	movlw	-12
 23165  017184  006F FF8C  F00B    	movff	plusw1,btemp+10
 23166  01718A  0EF5               	movlw	-11
 23167  01718C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23168                           
 23169                           ;stkvar	_u @ sp[(-10)+0]
 23170  017192  0EF6               	movlw	-10
 23171  017194  0060  F027  FFE3   	movff	btemp+8,plusw1
 23172  01719A  0EF7               	movlw	-9
 23173  01719C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23174  0171A2  0EF8               	movlw	-8
 23175  0171A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23176  0171AA  0EF9               	movlw	-7
 23177  0171AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23178  0171B2  0E81               	movlw	129
 23179  0171B4  6E0B               	movwf	(btemp+10)^0,c
 23180  0171B6  0EFF               	movlw	255
 23181  0171B8  6E0C               	movwf	(btemp+11)^0,c
 23182                           
 23183                           ;stkvar	_u @ sp[(-10)+0]
 23184  0171BA  0EF6               	movlw	-10
 23185  0171BC  006F FF8C  F005    	movff	plusw1,btemp+4
 23186  0171C2  0EF7               	movlw	-9
 23187  0171C4  006F FF8C  F006    	movff	plusw1,btemp+5
 23188  0171CA  0EF8               	movlw	-8
 23189  0171CC  006F FF8C  F007    	movff	plusw1,btemp+6
 23190  0171D2  0EF9               	movlw	-7
 23191  0171D4  006F FF8C  F008    	movff	plusw1,btemp+7
 23192  0171DA  0E18               	movlw	24
 23193  0171DC  D005               	goto	u6710
 23194  0171DE                     u6715:
 23195  0171DE  90D8               	bcf	status,0,c
 23196  0171E0  3208               	rrcf	(btemp+7)^0,f,c
 23197  0171E2  3207               	rrcf	(btemp+6)^0,f,c
 23198  0171E4  3206               	rrcf	(btemp+5)^0,f,c
 23199  0171E6  3205               	rrcf	(btemp+4)^0,f,c
 23200  0171E8                     u6710:
 23201  0171E8  2EE8               	decfsz	wreg,f,c
 23202  0171EA  D7F9               	goto	u6715
 23203  0171EC  0060  F014  F009   	movff	btemp+4,btemp+8
 23204  0171F2  0060  F018  F00A   	movff	btemp+5,btemp+9
 23205  0171F8  0EFF               	movlw	255
 23206  0171FA  1609               	andwf	(btemp+8)^0,f,c
 23207  0171FC  0E00               	movlw	0
 23208  0171FE  160A               	andwf	(btemp+9)^0,f,c
 23209  017200  500B               	movf	(btemp+10)^0,w,c
 23210  017202  2609               	addwf	(btemp+8)^0,f,c
 23211  017204  500C               	movf	(btemp+11)^0,w,c
 23212  017206  220A               	addwfc	(btemp+9)^0,f,c
 23213                           
 23214                           ;stkvar	_e @ sp[(-10)+8]
 23215  017208  0EFE               	movlw	-2
 23216  01720A  0060  F027  FFE3   	movff	btemp+8,plusw1
 23217  017210  0EFF               	movlw	-1
 23218  017212  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23219                           
 23220                           ;stkvar	_e @ sp[(-10)+8]
 23221  017218  0EFF               	movlw	-1
 23222  01721A  BEE3               	btfsc	plusw1,7,c
 23223  01721C  D019               	goto	l8914
 23224  01721E  0EFF               	movlw	-1
 23225  017220  50E3               	movf	plusw1,w,c
 23226  017222  E108               	bnz	u6720
 23227  017224  0EFE               	movlw	-2
 23228  017226  006F FF8C  F001    	movff	plusw1,btemp
 23229  01722C  0E17               	movlw	23
 23230  01722E  5E01               	subwf	btemp^0,f,c
 23231  017230  A0D8               	btfss	status,0,c
 23232  017232  D00E               	goto	l8914
 23233  017234                     u6720:
 23234                           
 23235                           ;stkvar	_x @ sp[(-10)+-4]
 23236  017234  0EF2               	movlw	-14
 23237  017236  006F FF8C  F001    	movff	plusw1,btemp
 23238  01723C  0EF3               	movlw	-13
 23239  01723E  006F FF8C  F002    	movff	plusw1,btemp+1
 23240  017244  0EF4               	movlw	-12
 23241  017246  006F FF8C  F003    	movff	plusw1,btemp+2
 23242  01724C  0EF5               	movlw	-11
 23243  01724E  D11F               	goto	L26
 23244  017250                     l8914:
 23245                           
 23246                           ;stkvar	_e @ sp[(-10)+8]
 23247  017250  0EFF               	movlw	-1
 23248  017252  BEE3               	btfsc	plusw1,7,c
 23249  017254  D0B4               	goto	l8930
 23250                           
 23251                           ;stkvar	_e @ sp[(-10)+8]
 23252  017256  0EFE               	movlw	-2
 23253  017258  006F FF8C  F00C    	movff	plusw1,btemp+11
 23254  01725E  0EFF               	movlw	255
 23255  017260  6E05               	movwf	(btemp+4)^0,c
 23256  017262  0EFF               	movlw	255
 23257  017264  6E06               	movwf	(btemp+5)^0,c
 23258  017266  0E7F               	movlw	127
 23259  017268  6E07               	movwf	(btemp+6)^0,c
 23260  01726A  0E00               	movlw	0
 23261  01726C  6E08               	movwf	(btemp+7)^0,c
 23262  01726E                     u6745:
 23263  01726E  660C               	tstfsz	(btemp+11)^0,c
 23264  017270  D001               	goto	u6746
 23265  017272  D007               	goto	u6747
 23266  017274                     u6746:
 23267  017274  3408               	rlcf	(btemp+7)^0,w,c
 23268  017276  3208               	rrcf	(btemp+7)^0,f,c
 23269  017278  3207               	rrcf	(btemp+6)^0,f,c
 23270  01727A  3206               	rrcf	(btemp+5)^0,f,c
 23271  01727C  3205               	rrcf	(btemp+4)^0,f,c
 23272  01727E  2E0C               	decfsz	(btemp+11)^0,f,c
 23273  017280  D7F6               	goto	u6745
 23274  017282                     u6747:
 23275                           
 23276                           ;stkvar	_m @ sp[(-10)+4]
 23277  017282  0EFA               	movlw	-6
 23278  017284  0060  F017  FFE3   	movff	btemp+4,plusw1
 23279  01728A  0EFB               	movlw	-5
 23280  01728C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23281  017292  0EFC               	movlw	-4
 23282  017294  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23283  01729A  0EFD               	movlw	-3
 23284  01729C  0060  F023  FFE3   	movff	btemp+7,plusw1
 23285                           
 23286                           ;stkvar	_m @ sp[(-10)+4]
 23287                           ;stkvar	_u @ sp[(-10)+0]
 23288  0172A2  0EF6               	movlw	-10
 23289  0172A4  006F FF8C  F009    	movff	plusw1,btemp+8
 23290  0172AA  0EF7               	movlw	-9
 23291  0172AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 23292  0172B2  0EF8               	movlw	-8
 23293  0172B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23294  0172BA  0EF9               	movlw	-7
 23295  0172BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23296  0172C2  0EFA               	movlw	-6
 23297  0172C4  50E3               	movf	plusw1,w,c
 23298  0172C6  1609               	andwf	(btemp+8)^0,f,c
 23299  0172C8  0EFB               	movlw	-5
 23300  0172CA  50E3               	movf	plusw1,w,c
 23301  0172CC  160A               	andwf	(btemp+9)^0,f,c
 23302  0172CE  0EFC               	movlw	-4
 23303  0172D0  50E3               	movf	plusw1,w,c
 23304  0172D2  160B               	andwf	(btemp+10)^0,f,c
 23305  0172D4  0EFD               	movlw	-3
 23306  0172D6  50E3               	movf	plusw1,w,c
 23307  0172D8  160C               	andwf	(btemp+11)^0,f,c
 23308  0172DA  5009               	movf	(btemp+8)^0,w,c
 23309  0172DC  100A               	iorwf	(btemp+9)^0,w,c
 23310  0172DE  100B               	iorwf	(btemp+10)^0,w,c
 23311  0172E0  100C               	iorwf	(btemp+11)^0,w,c
 23312  0172E2  B4D8               	btfsc	status,2,c
 23313  0172E4  D7A7               	goto	u6720
 23314                           
 23315                           ;stkvar	_u @ sp[(-10)+0]
 23316  0172E6  0EF6               	movlw	-10
 23317  0172E8  006F FF8C  F009    	movff	plusw1,btemp+8
 23318  0172EE  0EF7               	movlw	-9
 23319  0172F0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23320  0172F6  0EF8               	movlw	-8
 23321  0172F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23322  0172FE  0EF9               	movlw	-7
 23323  017300  006F FF8C  F00C    	movff	plusw1,btemp+11
 23324  017306  0E20               	movlw	32
 23325  017308  D005               	goto	u6760
 23326  01730A                     u6765:
 23327  01730A  90D8               	bcf	status,0,c
 23328  01730C  320C               	rrcf	(btemp+11)^0,f,c
 23329  01730E  320B               	rrcf	(btemp+10)^0,f,c
 23330  017310  320A               	rrcf	(btemp+9)^0,f,c
 23331  017312  3209               	rrcf	(btemp+8)^0,f,c
 23332  017314                     u6760:
 23333  017314  2EE8               	decfsz	wreg,f,c
 23334  017316  D7F9               	goto	u6765
 23335  017318  5009               	movf	(btemp+8)^0,w,c
 23336  01731A  B4D8               	btfsc	status,2,c
 23337  01731C  D028               	goto	l8928
 23338                           
 23339                           ;stkvar	_m @ sp[(-10)+4]
 23340                           ;stkvar	_u @ sp[(-10)+0]
 23341  01731E  0EF6               	movlw	-10
 23342  017320  50E3               	movf	plusw1,w,c
 23343  017322  6E01               	movwf	btemp^0,c
 23344  017324  0EFA               	movlw	-6
 23345  017326  50E3               	movf	plusw1,w,c
 23346  017328  2601               	addwf	btemp^0,f,c
 23347  01732A  0EF6               	movlw	-10
 23348  01732C  0060  F007  FFE3   	movff	btemp,plusw1
 23349  017332  0EF7               	movlw	-9
 23350  017334  50E3               	movf	plusw1,w,c
 23351  017336  6E01               	movwf	btemp^0,c
 23352  017338  0EFB               	movlw	-5
 23353  01733A  50E3               	movf	plusw1,w,c
 23354  01733C  2201               	addwfc	btemp^0,f,c
 23355  01733E  0EF7               	movlw	-9
 23356  017340  0060  F007  FFE3   	movff	btemp,plusw1
 23357  017346  0EF8               	movlw	-8
 23358  017348  50E3               	movf	plusw1,w,c
 23359  01734A  6E01               	movwf	btemp^0,c
 23360  01734C  0EFC               	movlw	-4
 23361  01734E  50E3               	movf	plusw1,w,c
 23362  017350  2201               	addwfc	btemp^0,f,c
 23363  017352  0EF8               	movlw	-8
 23364  017354  0060  F007  FFE3   	movff	btemp,plusw1
 23365  01735A  0EF9               	movlw	-7
 23366  01735C  50E3               	movf	plusw1,w,c
 23367  01735E  6E01               	movwf	btemp^0,c
 23368  017360  0EFD               	movlw	-3
 23369  017362  50E3               	movf	plusw1,w,c
 23370  017364  2201               	addwfc	btemp^0,f,c
 23371  017366  0EF9               	movlw	-7
 23372  017368  0060  F007  FFE3   	movff	btemp,plusw1
 23373  01736E                     l8928:
 23374                           
 23375                           ;stkvar	_m @ sp[(-10)+4]
 23376  01736E  0EFA               	movlw	-6
 23377  017370  006F FF8C  F009    	movff	plusw1,btemp+8
 23378  017376  0EFB               	movlw	-5
 23379  017378  006F FF8C  F00A    	movff	plusw1,btemp+9
 23380  01737E  0EFC               	movlw	-4
 23381  017380  006F FF8C  F00B    	movff	plusw1,btemp+10
 23382  017386  0EFD               	movlw	-3
 23383  017388  006F FF8C  F00C    	movff	plusw1,btemp+11
 23384  01738E  1C09               	comf	(btemp+8)^0,w,c
 23385  017390  6E05               	movwf	(btemp+4)^0,c
 23386  017392  1C0A               	comf	(btemp+9)^0,w,c
 23387  017394  6E06               	movwf	(btemp+5)^0,c
 23388  017396  1C0B               	comf	(btemp+10)^0,w,c
 23389  017398  6E07               	movwf	(btemp+6)^0,c
 23390  01739A  1C0C               	comf	(btemp+11)^0,w,c
 23391  01739C  6E08               	movwf	(btemp+7)^0,c
 23392                           
 23393                           ;stkvar	_u @ sp[(-10)+0]
 23394  01739E  50E1               	movf	fsr1l,w,c
 23395  0173A0  0FF6               	addlw	-10
 23396  0173A2  6ED9               	movwf	fsr2l,c
 23397  0173A4  50E2               	movf	fsr1h,w,c
 23398  0173A6  6EDA               	movwf	fsr2h,c
 23399  0173A8  0EFF               	movlw	255
 23400  0173AA  22DA               	addwfc	fsr2h,f,c
 23401  0173AC  5005               	movf	(btemp+4)^0,w,c
 23402  0173AE  16DE               	andwf	postinc2,f,c
 23403  0173B0  5006               	movf	(btemp+5)^0,w,c
 23404  0173B2  16DE               	andwf	postinc2,f,c
 23405  0173B4  5007               	movf	(btemp+6)^0,w,c
 23406  0173B6  16DE               	andwf	postinc2,f,c
 23407  0173B8  5008               	movf	(btemp+7)^0,w,c
 23408  0173BA  16DE               	andwf	postinc2,f,c
 23409  0173BC  D05B               	goto	l8938
 23410  0173BE                     l8930:
 23411                           
 23412                           ;stkvar	_u @ sp[(-10)+0]
 23413  0173BE  0EF6               	movlw	-10
 23414  0173C0  006F FF8C  F009    	movff	plusw1,btemp+8
 23415  0173C6  0EF7               	movlw	-9
 23416  0173C8  006F FF8C  F00A    	movff	plusw1,btemp+9
 23417  0173CE  0EF8               	movlw	-8
 23418  0173D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23419  0173D6  0EF9               	movlw	-7
 23420  0173D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23421  0173DE  0E20               	movlw	32
 23422  0173E0  D005               	goto	u6780
 23423  0173E2                     u6785:
 23424  0173E2  90D8               	bcf	status,0,c
 23425  0173E4  320C               	rrcf	(btemp+11)^0,f,c
 23426  0173E6  320B               	rrcf	(btemp+10)^0,f,c
 23427  0173E8  320A               	rrcf	(btemp+9)^0,f,c
 23428  0173EA  3209               	rrcf	(btemp+8)^0,f,c
 23429  0173EC                     u6780:
 23430  0173EC  2EE8               	decfsz	wreg,f,c
 23431  0173EE  D7F9               	goto	u6785
 23432  0173F0  6609               	tstfsz	(btemp+8)^0,c
 23433  0173F2  D009               	goto	l8934
 23434                           
 23435                           ;stkvar	_u @ sp[(-10)+0]
 23436  0173F4  0EF6               	movlw	-10
 23437  0173F6  6AE3               	clrf	plusw1,c
 23438  0173F8  0EF7               	movlw	-9
 23439  0173FA  6AE3               	clrf	plusw1,c
 23440  0173FC  0EF8               	movlw	-8
 23441  0173FE  6AE3               	clrf	plusw1,c
 23442  017400  0EF9               	movlw	-7
 23443  017402  6AE3               	clrf	plusw1,c
 23444  017404  D037               	goto	l8938
 23445  017406                     l8934:
 23446                           
 23447                           ;stkvar	_u @ sp[(-10)+0]
 23448  017406  0EF6               	movlw	-10
 23449  017408  006F FF8C  F009    	movff	plusw1,btemp+8
 23450  01740E  0EF7               	movlw	-9
 23451  017410  006F FF8C  F00A    	movff	plusw1,btemp+9
 23452  017416  0EF8               	movlw	-8
 23453  017418  006F FF8C  F00B    	movff	plusw1,btemp+10
 23454  01741E  0EF9               	movlw	-7
 23455  017420  006F FF8C  F00C    	movff	plusw1,btemp+11
 23456  017426  90D8               	bcf	status,0,c
 23457  017428  3409               	rlcf	(btemp+8)^0,w,c
 23458  01742A  6E05               	movwf	(btemp+4)^0,c
 23459  01742C  340A               	rlcf	(btemp+9)^0,w,c
 23460  01742E  6E06               	movwf	(btemp+5)^0,c
 23461  017430  340B               	rlcf	(btemp+10)^0,w,c
 23462  017432  6E07               	movwf	(btemp+6)^0,c
 23463  017434  340C               	rlcf	(btemp+11)^0,w,c
 23464  017436  6E08               	movwf	(btemp+7)^0,c
 23465  017438  5005               	movf	(btemp+4)^0,w,c
 23466  01743A  1006               	iorwf	(btemp+5)^0,w,c
 23467  01743C  1007               	iorwf	(btemp+6)^0,w,c
 23468  01743E  1008               	iorwf	(btemp+7)^0,w,c
 23469  017440  B4D8               	btfsc	status,2,c
 23470  017442  D018               	goto	l8938
 23471  017444  0E00               	movlw	0
 23472  017446  6E09               	movwf	(btemp+8)^0,c
 23473  017448  0E00               	movlw	0
 23474  01744A  6E0A               	movwf	(btemp+9)^0,c
 23475  01744C  0E80               	movlw	128
 23476  01744E  6E0B               	movwf	(btemp+10)^0,c
 23477  017450  0EBF               	movlw	191
 23478  017452  6E0C               	movwf	(btemp+11)^0,c
 23479                           
 23480                           ;stkvar	_u @ sp[(-10)+0]
 23481  017454  0EF6               	movlw	-10
 23482  017456  0060  F027  FFE3   	movff	btemp+8,plusw1
 23483  01745C  0EF7               	movlw	-9
 23484  01745E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23485  017464  0EF8               	movlw	-8
 23486  017466  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23487  01746C  0EF9               	movlw	-7
 23488  01746E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23489  017474                     l8938:
 23490                           
 23491                           ;stkvar	_u @ sp[(-10)+0]
 23492  017474  0EF6               	movlw	-10
 23493  017476  006F FF8C  F001    	movff	plusw1,btemp
 23494  01747C  0EF7               	movlw	-9
 23495  01747E  006F FF8C  F002    	movff	plusw1,btemp+1
 23496  017484  0EF8               	movlw	-8
 23497  017486  006F FF8C  F003    	movff	plusw1,btemp+2
 23498  01748C  0EF9               	movlw	-7
 23499  01748E                     L26:
 23500  01748E  006F FF8C  F004    	movff	plusw1,btemp+3
 23501                           
 23502                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23503  017494  0EF2               	movlw	242
 23504  017496  26E1               	addwf	fsr1l,f,c
 23505  017498  0EFF               	movlw	255
 23506  01749A  22E2               	addwfc	fsr1h,f,c
 23507  01749C  0012               	return		;funcret
 23508  01749E                     __end_of_floorf:
 23509                           	opt callstack 0
 23510                           
 23511 ;; *************** function ___fpclassifyf *****************
 23512 ;; Defined at:
 23513 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 23514 ;; Parameters:    Size  Location     Type
 23515 ;;  x               4  [STACK] float 
 23516 ;; Auto vars:     Size  Location     Type
 23517 ;;  u               4  [STACK] struct .
 23518 ;;  e               2  [STACK] int 
 23519 ;; Return value:  Size  Location     Type
 23520 ;;                  2  [STACK] int 
 23521 ;; Registers used:
 23522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 23523 ;; Tracked objects:
 23524 ;;		On entry : 0/0
 23525 ;;		On exit  : 0/0
 23526 ;;		Unchanged: 0/0
 23527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;Total ram usage:        0 bytes
 23533 ;; Hardware stack levels used:    1
 23534 ;; Hardware stack levels required when called:   15
 23535 ;; This function calls:
 23536 ;;		Nothing
 23537 ;; This function is called by:
 23538 ;;		_efgtoa
 23539 ;; This function uses a reentrant model
 23540 ;;
 23541                           
 23542                           	psect	text82
 23543  019A7E                     __ptext82:
 23544                           	opt callstack 0
 23545  019A7E                     ___fpclassifyf:
 23546                           	opt callstack 0
 23547                           
 23548                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23549  019A7E  0E06               	movlw	6
 23550  019A80  26E1               	addwf	fsr1l,f,c
 23551  019A82  0E00               	movlw	0
 23552  019A84  22E2               	addwfc	fsr1h,f,c
 23553                           
 23554                           ;incstack = 0
 23555 ;; hardware stack exceeded
 23556  019A86  0060  F180  F009   	movff	___fpclassifyf@F463,btemp+8
 23557  019A8C  0060  F184  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 23558  019A92  0060  F188  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 23559  019A98  0060  F18C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 23560                           
 23561                           ;stkvar	_u @ sp[(-6)+0]
 23562  019A9E  0EFA               	movlw	-6
 23563  019AA0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23564  019AA6  0EFB               	movlw	-5
 23565  019AA8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23566  019AAE  0EFC               	movlw	-4
 23567  019AB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23568  019AB6  0EFD               	movlw	-3
 23569  019AB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23570                           
 23571                           ;stkvar	_x @ sp[(-6)+-4]
 23572  019ABE  0EF6               	movlw	-10
 23573  019AC0  006F FF8C  F009    	movff	plusw1,btemp+8
 23574  019AC6  0EF7               	movlw	-9
 23575  019AC8  006F FF8C  F00A    	movff	plusw1,btemp+9
 23576  019ACE  0EF8               	movlw	-8
 23577  019AD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23578  019AD6  0EF9               	movlw	-7
 23579  019AD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23580                           
 23581                           ;stkvar	_u @ sp[(-6)+0]
 23582  019ADE  0EFA               	movlw	-6
 23583  019AE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23584  019AE6  0EFB               	movlw	-5
 23585  019AE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23586  019AEE  0EFC               	movlw	-4
 23587  019AF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23588  019AF6  0EFD               	movlw	-3
 23589  019AF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23590                           
 23591                           ;stkvar	_u @ sp[(-6)+0]
 23592  019AFE  0EFA               	movlw	-6
 23593  019B00  006F FF8C  F009    	movff	plusw1,btemp+8
 23594  019B06  0EFB               	movlw	-5
 23595  019B08  006F FF8C  F00A    	movff	plusw1,btemp+9
 23596  019B0E  0EFC               	movlw	-4
 23597  019B10  006F FF8C  F00B    	movff	plusw1,btemp+10
 23598  019B16  0EFD               	movlw	-3
 23599  019B18  006F FF8C  F00C    	movff	plusw1,btemp+11
 23600  019B1E  0E18               	movlw	24
 23601  019B20  D005               	goto	u6590
 23602  019B22                     u6595:
 23603  019B22  90D8               	bcf	status,0,c
 23604  019B24  320C               	rrcf	(btemp+11)^0,f,c
 23605  019B26  320B               	rrcf	(btemp+10)^0,f,c
 23606  019B28  320A               	rrcf	(btemp+9)^0,f,c
 23607  019B2A  3209               	rrcf	(btemp+8)^0,f,c
 23608  019B2C                     u6590:
 23609  019B2C  2EE8               	decfsz	wreg,f,c
 23610  019B2E  D7F9               	goto	u6595
 23611  019B30  0060  F024  F007   	movff	btemp+8,btemp+6
 23612  019B36  0060  F028  F008   	movff	btemp+9,btemp+7
 23613  019B3C  0EFF               	movlw	255
 23614  019B3E  1607               	andwf	(btemp+6)^0,f,c
 23615  019B40  0E00               	movlw	0
 23616  019B42  1608               	andwf	(btemp+7)^0,f,c
 23617                           
 23618                           ;stkvar	_e @ sp[(-6)+4]
 23619  019B44  0EFE               	movlw	-2
 23620  019B46  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23621  019B4C  0EFF               	movlw	-1
 23622  019B4E  0060  F023  FFE3   	movff	btemp+7,plusw1
 23623                           
 23624                           ;stkvar	_e @ sp[(-6)+4]
 23625  019B54  0EFE               	movlw	-2
 23626  019B56  006F FF8C  F001    	movff	plusw1,btemp
 23627  019B5C  0EFF               	movlw	-1
 23628  019B5E  50E3               	movf	plusw1,w,c
 23629  019B60  1001               	iorwf	btemp^0,w,c
 23630  019B62  A4D8               	btfss	status,2,c
 23631  019B64  D023               	goto	l8876
 23632                           
 23633                           ;stkvar	_u @ sp[(-6)+0]
 23634  019B66  0EFA               	movlw	-6
 23635  019B68  006F FF8C  F009    	movff	plusw1,btemp+8
 23636  019B6E  0EFB               	movlw	-5
 23637  019B70  006F FF8C  F00A    	movff	plusw1,btemp+9
 23638  019B76  0EFC               	movlw	-4
 23639  019B78  006F FF8C  F00B    	movff	plusw1,btemp+10
 23640  019B7E  0EFD               	movlw	-3
 23641  019B80  006F FF8C  F00C    	movff	plusw1,btemp+11
 23642  019B86  90D8               	bcf	status,0,c
 23643  019B88  3409               	rlcf	(btemp+8)^0,w,c
 23644  019B8A  6E05               	movwf	(btemp+4)^0,c
 23645  019B8C  340A               	rlcf	(btemp+9)^0,w,c
 23646  019B8E  6E06               	movwf	(btemp+5)^0,c
 23647  019B90  340B               	rlcf	(btemp+10)^0,w,c
 23648  019B92  6E07               	movwf	(btemp+6)^0,c
 23649  019B94  340C               	rlcf	(btemp+11)^0,w,c
 23650  019B96  6E08               	movwf	(btemp+7)^0,c
 23651  019B98  5005               	movf	(btemp+4)^0,w,c
 23652  019B9A  1006               	iorwf	(btemp+5)^0,w,c
 23653  019B9C  1007               	iorwf	(btemp+6)^0,w,c
 23654  019B9E  1008               	iorwf	(btemp+7)^0,w,c
 23655  019BA0  A4D8               	btfss	status,2,c
 23656  019BA2  D002               	goto	l8872
 23657  019BA4  0E02               	movlw	2
 23658  019BA6  D02E               	goto	L27
 23659  019BA8                     l8872:
 23660  019BA8  0E03               	movlw	3
 23661  019BAA  D02C               	goto	L27
 23662  019BAC                     l8876:
 23663                           
 23664                           ;stkvar	_e @ sp[(-6)+4]
 23665  019BAC  0EFE               	movlw	-2
 23666  019BAE  28E3               	incf	plusw1,w,c
 23667  019BB0  E128               	bnz	l8882
 23668  019BB2  0EFF               	movlw	-1
 23669  019BB4  50E3               	movf	plusw1,w,c
 23670  019BB6  A4D8               	btfss	status,2,c
 23671  019BB8  D024               	goto	l8882
 23672                           
 23673                           ;stkvar	_u @ sp[(-6)+0]
 23674  019BBA  0EFA               	movlw	-6
 23675  019BBC  006F FF8C  F009    	movff	plusw1,btemp+8
 23676  019BC2  0EFB               	movlw	-5
 23677  019BC4  006F FF8C  F00A    	movff	plusw1,btemp+9
 23678  019BCA  0EFC               	movlw	-4
 23679  019BCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23680  019BD2  0EFD               	movlw	-3
 23681  019BD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23682  019BDA  0E09               	movlw	9
 23683  019BDC                     u6635:
 23684  019BDC  90D8               	bcf	status,0,c
 23685  019BDE  3609               	rlcf	(btemp+8)^0,f,c
 23686  019BE0  360A               	rlcf	(btemp+9)^0,f,c
 23687  019BE2  360B               	rlcf	(btemp+10)^0,f,c
 23688  019BE4  360C               	rlcf	(btemp+11)^0,f,c
 23689  019BE6  2EE8               	decfsz	wreg,f,c
 23690  019BE8  D7F9               	goto	u6635
 23691  019BEA  5009               	movf	(btemp+8)^0,w,c
 23692  019BEC  100A               	iorwf	(btemp+9)^0,w,c
 23693  019BEE  100B               	iorwf	(btemp+10)^0,w,c
 23694  019BF0  100C               	iorwf	(btemp+11)^0,w,c
 23695  019BF2  A4D8               	btfss	status,2,c
 23696  019BF4  D002               	goto	u6640
 23697  019BF6  0E01               	movlw	1
 23698  019BF8  D001               	goto	u6650
 23699  019BFA                     u6640:
 23700  019BFA  0E00               	movlw	0
 23701  019BFC                     u6650:
 23702  019BFC  6E01               	movwf	btemp^0,c
 23703  019BFE  6A02               	clrf	(btemp+1)^0,c
 23704  019C00  D004               	goto	l3354
 23705  019C02                     l8882:
 23706  019C02  0E04               	movlw	4
 23707  019C04                     L27:
 23708  019C04  6E01               	movwf	btemp^0,c
 23709  019C06  0E00               	movlw	0
 23710  019C08  6E02               	movwf	(btemp+1)^0,c
 23711  019C0A                     l3354:
 23712                           
 23713                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 23714  019C0A  0EF6               	movlw	246
 23715  019C0C  26E1               	addwf	fsr1l,f,c
 23716  019C0E  0EFF               	movlw	255
 23717  019C10  22E2               	addwfc	fsr1h,f,c
 23718  019C12  0012               	return		;funcret
 23719  019C14                     __end_of___fpclassifyf:
 23720                           	opt callstack 0
 23721                           
 23722 ;; *************** function ___fltol *****************
 23723 ;; Defined at:
 23724 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 23725 ;; Parameters:    Size  Location     Type
 23726 ;;  f1              4  [STACK] int 
 23727 ;; Auto vars:     Size  Location     Type
 23728 ;;  exp1            1  [STACK] unsigned char 
 23729 ;;  sign1           1  [STACK] unsigned char 
 23730 ;; Return value:  Size  Location     Type
 23731 ;;                  4  [STACK] long 
 23732 ;; Registers used:
 23733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23734 ;; Tracked objects:
 23735 ;;		On entry : 0/0
 23736 ;;		On exit  : 0/0
 23737 ;;		Unchanged: 0/0
 23738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23743 ;;Total ram usage:        0 bytes
 23744 ;; Hardware stack levels used:    1
 23745 ;; Hardware stack levels required when called:   15
 23746 ;; This function calls:
 23747 ;;		Nothing
 23748 ;; This function is called by:
 23749 ;;		_main
 23750 ;;		_convert_dac_raw
 23751 ;;		_calc_bsoc
 23752 ;;		_init_bsoc
 23753 ;;		_efgtoa
 23754 ;; This function uses a reentrant model
 23755 ;;
 23756                           
 23757                           	psect	text83
 23758  01A08C                     __ptext83:
 23759                           	opt callstack 0
 23760  01A08C                     ___fltol:
 23761                           	opt callstack 0
 23762                           
 23763                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23764  01A08C  52E6               	movf	postinc1,f,c
 23765  01A08E  52E6               	movf	postinc1,f,c
 23766                           
 23767                           ;stkvar	_f1 @ sp[(-2)+-4]
 23768                           
 23769                           ;incstack = 0
 23770 ;; hardware stack exceeded
 23771  01A090  0EFA               	movlw	-6
 23772  01A092  006F FF8C  F009    	movff	plusw1,btemp+8
 23773  01A098  0EFB               	movlw	-5
 23774  01A09A  006F FF8C  F00A    	movff	plusw1,btemp+9
 23775  01A0A0  0EFC               	movlw	-4
 23776  01A0A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 23777  01A0A8  0EFD               	movlw	-3
 23778  01A0AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 23779  01A0B0  0E18               	movlw	24
 23780  01A0B2  D005               	goto	u7800
 23781  01A0B4                     u7805:
 23782  01A0B4  90D8               	bcf	status,0,c
 23783  01A0B6  320C               	rrcf	(btemp+11)^0,f,c
 23784  01A0B8  320B               	rrcf	(btemp+10)^0,f,c
 23785  01A0BA  320A               	rrcf	(btemp+9)^0,f,c
 23786  01A0BC  3209               	rrcf	(btemp+8)^0,f,c
 23787  01A0BE                     u7800:
 23788  01A0BE  2EE8               	decfsz	wreg,f,c
 23789  01A0C0  D7F9               	goto	u7805
 23790                           
 23791                           ;stkvar	_exp1 @ sp[(-2)+0]
 23792  01A0C2  0EFE               	movlw	-2
 23793  01A0C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 23794  01A0CA  0EFE               	movlw	-2
 23795  01A0CC  50E3               	movf	plusw1,w,c
 23796  01A0CE  A4D8               	btfss	status,2,c
 23797  01A0D0  D006               	goto	l9502
 23798  01A0D2                     u7810:
 23799  01A0D2  0E00               	movlw	0
 23800  01A0D4  6E01               	movwf	btemp^0,c
 23801  01A0D6  6A02               	clrf	(btemp+1)^0,c
 23802  01A0D8  6A03               	clrf	(btemp+2)^0,c
 23803  01A0DA  6A04               	clrf	(btemp+3)^0,c
 23804  01A0DC  D08B               	goto	l2970
 23805  01A0DE                     l9502:
 23806                           
 23807                           ;stkvar	_f1 @ sp[(-2)+-4]
 23808  01A0DE  0EFA               	movlw	-6
 23809  01A0E0  006F FF8C  F009    	movff	plusw1,btemp+8
 23810  01A0E6  0EFB               	movlw	-5
 23811  01A0E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 23812  01A0EE  0EFC               	movlw	-4
 23813  01A0F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23814  01A0F6  0EFD               	movlw	-3
 23815  01A0F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23816  01A0FE  0E20               	movlw	32
 23817  01A100  D005               	goto	u7820
 23818  01A102                     u7825:
 23819  01A102  90D8               	bcf	status,0,c
 23820  01A104  320C               	rrcf	(btemp+11)^0,f,c
 23821  01A106  320B               	rrcf	(btemp+10)^0,f,c
 23822  01A108  320A               	rrcf	(btemp+9)^0,f,c
 23823  01A10A  3209               	rrcf	(btemp+8)^0,f,c
 23824  01A10C                     u7820:
 23825  01A10C  2EE8               	decfsz	wreg,f,c
 23826  01A10E  D7F9               	goto	u7825
 23827                           
 23828                           ;stkvar	_sign1 @ sp[(-2)+1]
 23829  01A110  0EFF               	movlw	-1
 23830  01A112  0060  F027  FFE3   	movff	btemp+8,plusw1
 23831                           
 23832                           ;stkvar	_f1 @ sp[(-2)+-4]
 23833  01A118  0EFC               	movlw	-4
 23834  01A11A  8EE3               	bsf	plusw1,7,c
 23835                           
 23836                           ;stkvar	_f1 @ sp[(-2)+-4]
 23837  01A11C  50E1               	movf	fsr1l,w,c
 23838  01A11E  0FFA               	addlw	-6
 23839  01A120  6ED9               	movwf	fsr2l,c
 23840  01A122  50E2               	movf	fsr1h,w,c
 23841  01A124  6EDA               	movwf	fsr2h,c
 23842  01A126  0EFF               	movlw	255
 23843  01A128  22DA               	addwfc	fsr2h,f,c
 23844  01A12A  0EFF               	movlw	255
 23845  01A12C  16DE               	andwf	postinc2,f,c
 23846  01A12E  0EFF               	movlw	255
 23847  01A130  16DE               	andwf	postinc2,f,c
 23848  01A132  0EFF               	movlw	255
 23849  01A134  16DE               	andwf	postinc2,f,c
 23850  01A136  0E00               	movlw	0
 23851  01A138  16DE               	andwf	postinc2,f,c
 23852                           
 23853                           ;stkvar	_exp1 @ sp[(-2)+0]
 23854  01A13A  0EFE               	movlw	-2
 23855  01A13C  006F FF8C  F001    	movff	plusw1,btemp
 23856  01A142  0E96               	movlw	150
 23857  01A144  5E01               	subwf	btemp^0,f,c
 23858  01A146  0EFE               	movlw	-2
 23859  01A148  0060  F007  FFE3   	movff	btemp,plusw1
 23860                           
 23861                           ;stkvar	_exp1 @ sp[(-2)+0]
 23862  01A14E  0EFE               	movlw	-2
 23863  01A150  AEE3               	btfss	plusw1,7,c
 23864  01A152  D014               	goto	l9520
 23865                           
 23866                           ;stkvar	_exp1 @ sp[(-2)+0]
 23867  01A154  0EFE               	movlw	-2
 23868  01A156  50E3               	movf	plusw1,w,c
 23869  01A158  0A80               	xorlw	128
 23870  01A15A  0F97               	addlw	151
 23871  01A15C  A0D8               	btfss	status,0,c
 23872  01A15E  D7B9               	goto	u7810
 23873  01A160                     l9518:
 23874                           
 23875                           ;stkvar	_f1 @ sp[(-2)+-4]
 23876  01A160  90D8               	bcf	status,0,c
 23877  01A162  0EFD               	movlw	-3
 23878  01A164  32E3               	rrcf	plusw1,f,c
 23879  01A166  0EFC               	movlw	-4
 23880  01A168  32E3               	rrcf	plusw1,f,c
 23881  01A16A  0EFB               	movlw	-5
 23882  01A16C  32E3               	rrcf	plusw1,f,c
 23883  01A16E  0EFA               	movlw	-6
 23884  01A170  32E3               	rrcf	plusw1,f,c
 23885                           
 23886                           ;stkvar	_exp1 @ sp[(-2)+0]
 23887  01A172  0EFE               	movlw	-2
 23888  01A174  2AE3               	incf	plusw1,f,c
 23889  01A176  B4D8               	btfsc	status,2,c
 23890  01A178  D018               	goto	u7870
 23891  01A17A  D7F2               	goto	l9518
 23892  01A17C                     l9520:
 23893                           
 23894                           ;stkvar	_exp1 @ sp[(-2)+0]
 23895  01A17C  0EFE               	movlw	-2
 23896  01A17E  006F FF8C  F001    	movff	plusw1,btemp
 23897  01A184  0E1F               	movlw	31
 23898  01A186  6401               	cpfsgt	btemp^0,c
 23899  01A188  D00C               	goto	l9528
 23900  01A18A  D7A3               	goto	u7810
 23901  01A18C                     l9526:
 23902                           
 23903                           ;stkvar	_f1 @ sp[(-2)+-4]
 23904  01A18C  90D8               	bcf	status,0,c
 23905  01A18E  0EFA               	movlw	-6
 23906  01A190  36E3               	rlcf	plusw1,f,c
 23907  01A192  0EFB               	movlw	-5
 23908  01A194  36E3               	rlcf	plusw1,f,c
 23909  01A196  0EFC               	movlw	-4
 23910  01A198  36E3               	rlcf	plusw1,f,c
 23911  01A19A  0EFD               	movlw	-3
 23912  01A19C  36E3               	rlcf	plusw1,f,c
 23913                           
 23914                           ;stkvar	_exp1 @ sp[(-2)+0]
 23915  01A19E  0EFE               	movlw	-2
 23916  01A1A0  06E3               	decf	plusw1,f,c
 23917  01A1A2                     l9528:
 23918                           
 23919                           ;stkvar	_exp1 @ sp[(-2)+0]
 23920  01A1A2  0EFE               	movlw	-2
 23921  01A1A4  50E3               	movf	plusw1,w,c
 23922  01A1A6  A4D8               	btfss	status,2,c
 23923  01A1A8  D7F1               	goto	l9526
 23924  01A1AA                     u7870:
 23925                           
 23926                           ;stkvar	_sign1 @ sp[(-2)+1]
 23927  01A1AA  0EFF               	movlw	-1
 23928  01A1AC  50E3               	movf	plusw1,w,c
 23929  01A1AE  B4D8               	btfsc	status,2,c
 23930  01A1B0  D011               	goto	u7890
 23931                           
 23932                           ;stkvar	_f1 @ sp[(-2)+-4]
 23933                           ;stkvar	_f1 @ sp[(-2)+-4]
 23934  01A1B2  0EFA               	movlw	-6
 23935  01A1B4  6CE3               	negf	plusw1,c
 23936  01A1B6  0EFB               	movlw	-5
 23937  01A1B8  1EE3               	comf	plusw1,f,c
 23938  01A1BA  0EFC               	movlw	-4
 23939  01A1BC  1EE3               	comf	plusw1,f,c
 23940  01A1BE  0EFD               	movlw	-3
 23941  01A1C0  1EE3               	comf	plusw1,f,c
 23942  01A1C2  E308               	bnc	u7890
 23943  01A1C4  0EFB               	movlw	-5
 23944  01A1C6  2AE3               	incf	plusw1,f,c
 23945  01A1C8  E305               	bnc	u7890
 23946  01A1CA  0EFC               	movlw	-4
 23947  01A1CC  2AE3               	incf	plusw1,f,c
 23948  01A1CE  E302               	bnc	u7890
 23949  01A1D0  0EFD               	movlw	-3
 23950  01A1D2  2AE3               	incf	plusw1,f,c
 23951  01A1D4                     u7890:
 23952                           
 23953                           ;stkvar	_f1 @ sp[(-2)+-4]
 23954  01A1D4  0EFA               	movlw	-6
 23955  01A1D6  006F FF8C  F001    	movff	plusw1,btemp
 23956  01A1DC  0EFB               	movlw	-5
 23957  01A1DE  006F FF8C  F002    	movff	plusw1,btemp+1
 23958  01A1E4  0EFC               	movlw	-4
 23959  01A1E6  006F FF8C  F003    	movff	plusw1,btemp+2
 23960  01A1EC  0EFD               	movlw	-3
 23961  01A1EE  006F FF8C  F004    	movff	plusw1,btemp+3
 23962  01A1F4                     l2970:
 23963                           
 23964                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23965  01A1F4  0EFA               	movlw	250
 23966  01A1F6  26E1               	addwf	fsr1l,f,c
 23967  01A1F8  0EFF               	movlw	255
 23968  01A1FA  22E2               	addwfc	fsr1h,f,c
 23969  01A1FC  0012               	return		;funcret
 23970  01A1FE                     __end_of___fltol:
 23971                           	opt callstack 0
 23972                           
 23973 ;; *************** function ___flneg *****************
 23974 ;; Defined at:
 23975 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 23976 ;; Parameters:    Size  Location     Type
 23977 ;;  f1              4  [STACK] long 
 23978 ;; Auto vars:     Size  Location     Type
 23979 ;;		None
 23980 ;; Return value:  Size  Location     Type
 23981 ;;                  4  [STACK] long 
 23982 ;; Registers used:
 23983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 23984 ;; Tracked objects:
 23985 ;;		On entry : 0/0
 23986 ;;		On exit  : 0/0
 23987 ;;		Unchanged: 0/0
 23988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23993 ;;Total ram usage:        0 bytes
 23994 ;; Hardware stack levels used:    1
 23995 ;; Hardware stack levels required when called:   15
 23996 ;; This function calls:
 23997 ;;		Nothing
 23998 ;; This function is called by:
 23999 ;;		_calc_bsoc
 24000 ;;		_efgtoa
 24001 ;; This function uses a reentrant model
 24002 ;;
 24003                           
 24004                           	psect	text84
 24005  01CDFC                     __ptext84:
 24006                           	opt callstack 0
 24007  01CDFC                     ___flneg:
 24008                           	opt callstack 0
 24009                           
 24010                           ;stkvar	_f1 @ sp[(0)+-4]
 24011                           
 24012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24013                           ;incstack = 0
 24014 ;; hardware stack exceeded
 24015  01CDFC  0EFC               	movlw	-4
 24016  01CDFE  50E3               	movf	plusw1,w,c
 24017  01CE00  E10A               	bnz	u7790
 24018  01CE02  0EFD               	movlw	-3
 24019  01CE04  50E3               	movf	plusw1,w,c
 24020  01CE06  E107               	bnz	u7790
 24021  01CE08  0EFE               	movlw	-2
 24022  01CE0A  50E3               	movf	plusw1,w,c
 24023  01CE0C  E104               	bnz	u7790
 24024  01CE0E  0EFF               	movlw	-1
 24025  01CE10  50E3               	movf	plusw1,w,c
 24026  01CE12  B4D8               	btfsc	status,2,c
 24027  01CE14  D002               	goto	l9492
 24028  01CE16                     u7790:
 24029                           
 24030                           ;stkvar	_f1 @ sp[(0)+-4]
 24031  01CE16  0EFF               	movlw	-1
 24032  01CE18  7EE3               	btg	plusw1,7,c
 24033  01CE1A                     l9492:
 24034                           
 24035                           ;stkvar	_f1 @ sp[(0)+-4]
 24036  01CE1A  0EFC               	movlw	-4
 24037  01CE1C  006F FF8C  F001    	movff	plusw1,btemp
 24038  01CE22  0EFD               	movlw	-3
 24039  01CE24  006F FF8C  F002    	movff	plusw1,btemp+1
 24040  01CE2A  0EFE               	movlw	-2
 24041  01CE2C  006F FF8C  F003    	movff	plusw1,btemp+2
 24042  01CE32  0EFF               	movlw	-1
 24043  01CE34  006F FF8C  F004    	movff	plusw1,btemp+3
 24044                           
 24045                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24046  01CE3A  52E5               	movf	postdec1,f,c
 24047  01CE3C  52E5               	movf	postdec1,f,c
 24048  01CE3E  52E5               	movf	postdec1,f,c
 24049  01CE40  52E5               	movf	postdec1,f,c
 24050  01CE42  0012               	return		;funcret
 24051  01CE44                     __end_of___flneg:
 24052                           	opt callstack 0
 24053                           
 24054 ;; *************** function ___fleq *****************
 24055 ;; Defined at:
 24056 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 24057 ;; Parameters:    Size  Location     Type
 24058 ;;  ff1             4  [STACK] long 
 24059 ;;  ff2             4  [STACK] long 
 24060 ;; Auto vars:     Size  Location     Type
 24061 ;;		None
 24062 ;; Return value:  Size  Location     Type
 24063 ;;		None               void
 24064 ;; Registers used:
 24065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24066 ;; Tracked objects:
 24067 ;;		On entry : 0/0
 24068 ;;		On exit  : 0/0
 24069 ;;		Unchanged: 0/0
 24070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24075 ;;Total ram usage:        0 bytes
 24076 ;; Hardware stack levels used:    1
 24077 ;; Hardware stack levels required when called:   15
 24078 ;; This function calls:
 24079 ;;		Nothing
 24080 ;; This function is called by:
 24081 ;;		_efgtoa
 24082 ;; This function uses a reentrant model
 24083 ;;
 24084                           
 24085                           	psect	text85
 24086  01B8B4                     __ptext85:
 24087                           	opt callstack 0
 24088  01B8B4                     ___fleq:
 24089                           	opt callstack 0
 24090                           
 24091                           ;stkvar	_ff1 @ sp[(0)+-4]
 24092                           
 24093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24094                           ;incstack = 0
 24095 ;; hardware stack exceeded
 24096  01B8B4  50E1               	movf	fsr1l,w,c
 24097  01B8B6  0FFC               	addlw	-4
 24098  01B8B8  6ED9               	movwf	fsr2l,c
 24099  01B8BA  50E2               	movf	fsr1h,w,c
 24100  01B8BC  6EDA               	movwf	fsr2h,c
 24101  01B8BE  0EFF               	movlw	255
 24102  01B8C0  22DA               	addwfc	fsr2h,f,c
 24103  01B8C2  0E00               	movlw	0
 24104  01B8C4  14DE               	andwf	postinc2,w,c
 24105  01B8C6  6E09               	movwf	(btemp+8)^0,c
 24106  01B8C8  0E00               	movlw	0
 24107  01B8CA  14DE               	andwf	postinc2,w,c
 24108  01B8CC  6E0A               	movwf	(btemp+9)^0,c
 24109  01B8CE  0E80               	movlw	128
 24110  01B8D0  14DE               	andwf	postinc2,w,c
 24111  01B8D2  6E0B               	movwf	(btemp+10)^0,c
 24112  01B8D4  0E7F               	movlw	127
 24113  01B8D6  14DE               	andwf	postinc2,w,c
 24114  01B8D8  6E0C               	movwf	(btemp+11)^0,c
 24115  01B8DA  5009               	movf	(btemp+8)^0,w,c
 24116  01B8DC  100A               	iorwf	(btemp+9)^0,w,c
 24117  01B8DE  100B               	iorwf	(btemp+10)^0,w,c
 24118  01B8E0  100C               	iorwf	(btemp+11)^0,w,c
 24119  01B8E2  A4D8               	btfss	status,2,c
 24120  01B8E4  D008               	goto	l9450
 24121                           
 24122                           ;stkvar	_ff1 @ sp[(0)+-4]
 24123  01B8E6  0EFC               	movlw	-4
 24124  01B8E8  6AE3               	clrf	plusw1,c
 24125  01B8EA  0EFD               	movlw	-3
 24126  01B8EC  6AE3               	clrf	plusw1,c
 24127  01B8EE  0EFE               	movlw	-2
 24128  01B8F0  6AE3               	clrf	plusw1,c
 24129  01B8F2  0EFF               	movlw	-1
 24130  01B8F4  6AE3               	clrf	plusw1,c
 24131  01B8F6                     l9450:
 24132                           
 24133                           ;stkvar	_ff2 @ sp[(0)+-8]
 24134  01B8F6  50E1               	movf	fsr1l,w,c
 24135  01B8F8  0FF8               	addlw	-8
 24136  01B8FA  6ED9               	movwf	fsr2l,c
 24137  01B8FC  50E2               	movf	fsr1h,w,c
 24138  01B8FE  6EDA               	movwf	fsr2h,c
 24139  01B900  0EFF               	movlw	255
 24140  01B902  22DA               	addwfc	fsr2h,f,c
 24141  01B904  0E00               	movlw	0
 24142  01B906  14DE               	andwf	postinc2,w,c
 24143  01B908  6E09               	movwf	(btemp+8)^0,c
 24144  01B90A  0E00               	movlw	0
 24145  01B90C  14DE               	andwf	postinc2,w,c
 24146  01B90E  6E0A               	movwf	(btemp+9)^0,c
 24147  01B910  0E80               	movlw	128
 24148  01B912  14DE               	andwf	postinc2,w,c
 24149  01B914  6E0B               	movwf	(btemp+10)^0,c
 24150  01B916  0E7F               	movlw	127
 24151  01B918  14DE               	andwf	postinc2,w,c
 24152  01B91A  6E0C               	movwf	(btemp+11)^0,c
 24153  01B91C  5009               	movf	(btemp+8)^0,w,c
 24154  01B91E  100A               	iorwf	(btemp+9)^0,w,c
 24155  01B920  100B               	iorwf	(btemp+10)^0,w,c
 24156  01B922  100C               	iorwf	(btemp+11)^0,w,c
 24157  01B924  A4D8               	btfss	status,2,c
 24158  01B926  D008               	goto	l9454
 24159                           
 24160                           ;stkvar	_ff2 @ sp[(0)+-8]
 24161  01B928  0EF8               	movlw	-8
 24162  01B92A  6AE3               	clrf	plusw1,c
 24163  01B92C  0EF9               	movlw	-7
 24164  01B92E  6AE3               	clrf	plusw1,c
 24165  01B930  0EFA               	movlw	-6
 24166  01B932  6AE3               	clrf	plusw1,c
 24167  01B934  0EFB               	movlw	-5
 24168  01B936  6AE3               	clrf	plusw1,c
 24169  01B938                     l9454:
 24170                           
 24171                           ;stkvar	_ff2 @ sp[(0)+-8]
 24172                           ;stkvar	_ff1 @ sp[(0)+-4]
 24173  01B938  50E1               	movf	fsr1l,w,c
 24174  01B93A  0FFC               	addlw	-4
 24175  01B93C  6ED9               	movwf	fsr2l,c
 24176  01B93E  50E2               	movf	fsr1h,w,c
 24177  01B940  6EDA               	movwf	fsr2h,c
 24178  01B942  0EFF               	movlw	255
 24179  01B944  22DA               	addwfc	fsr2h,f,c
 24180  01B946  0EF8               	movlw	-8
 24181  01B948  50E3               	movf	plusw1,w,c
 24182  01B94A  18DE               	xorwf	postinc2,w,c
 24183  01B94C  E10D               	bnz	u7730
 24184  01B94E  0EF9               	movlw	-7
 24185  01B950  50E3               	movf	plusw1,w,c
 24186  01B952  18DE               	xorwf	postinc2,w,c
 24187  01B954  E109               	bnz	u7730
 24188  01B956  0EFA               	movlw	-6
 24189  01B958  50E3               	movf	plusw1,w,c
 24190  01B95A  18DE               	xorwf	postinc2,w,c
 24191  01B95C  E105               	bnz	u7730
 24192  01B95E  0EFB               	movlw	-5
 24193  01B960  50E3               	movf	plusw1,w,c
 24194  01B962  18DE               	xorwf	postinc2,w,c
 24195  01B964  B4D8               	btfsc	status,2,c
 24196  01B966  D002               	goto	l9458
 24197  01B968                     u7730:
 24198  01B968  9001               	bcf	btemp& (0+255),0,c
 24199  01B96A  D001               	goto	l2932
 24200  01B96C                     l9458:
 24201  01B96C  8001               	bsf	btemp& (0+255),0,c
 24202  01B96E                     l2932:
 24203                           
 24204                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 24205  01B96E  0EF8               	movlw	248
 24206  01B970  26E1               	addwf	fsr1l,f,c
 24207  01B972  0EFF               	movlw	255
 24208  01B974  22E2               	addwfc	fsr1h,f,c
 24209  01B976  0012               	return		;funcret
 24210  01B978                     __end_of___fleq:
 24211                           	opt callstack 0
 24212                           
 24213 ;; *************** function ___awmod *****************
 24214 ;; Defined at:
 24215 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 24216 ;; Parameters:    Size  Location     Type
 24217 ;;  dividend        2  [STACK] int 
 24218 ;;  divisor         2  [STACK] int 
 24219 ;; Auto vars:     Size  Location     Type
 24220 ;;  sign            1  [STACK] unsigned char 
 24221 ;;  counter         1  [STACK] unsigned char 
 24222 ;; Return value:  Size  Location     Type
 24223 ;;                  2  [STACK] int 
 24224 ;; Registers used:
 24225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24226 ;; Tracked objects:
 24227 ;;		On entry : 0/0
 24228 ;;		On exit  : 0/0
 24229 ;;		Unchanged: 0/0
 24230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24235 ;;Total ram usage:        0 bytes
 24236 ;; Hardware stack levels used:    1
 24237 ;; Hardware stack levels required when called:   15
 24238 ;; This function calls:
 24239 ;;		Nothing
 24240 ;; This function is called by:
 24241 ;;		_efgtoa
 24242 ;; This function uses a reentrant model
 24243 ;;
 24244                           
 24245                           	psect	text86
 24246  01AE4C                     __ptext86:
 24247                           	opt callstack 0
 24248  01AE4C                     ___awmod:
 24249                           	opt callstack 0
 24250                           
 24251                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24252  01AE4C  52E6               	movf	postinc1,f,c
 24253  01AE4E  52E6               	movf	postinc1,f,c
 24254                           
 24255                           ;stkvar	_sign @ sp[(-2)+0]
 24256                           
 24257                           ;incstack = 0
 24258 ;; hardware stack exceeded
 24259  01AE50  0EFE               	movlw	-2
 24260  01AE52  6AE3               	clrf	plusw1,c
 24261                           
 24262                           ;stkvar	_dividend @ sp[(-2)+-2]
 24263  01AE54  0EFD               	movlw	-3
 24264  01AE56  AEE3               	btfss	plusw1,7,c
 24265  01AE58  D009               	goto	l9416
 24266                           
 24267                           ;stkvar	_dividend @ sp[(-2)+-2]
 24268                           ;stkvar	_dividend @ sp[(-2)+-2]
 24269  01AE5A  0EFC               	movlw	-4
 24270  01AE5C  6CE3               	negf	plusw1,c
 24271  01AE5E  0EFD               	movlw	-3
 24272  01AE60  1EE3               	comf	plusw1,f,c
 24273  01AE62  B0D8               	btfsc	status,0,c
 24274  01AE64  2AE3               	incf	plusw1,f,c
 24275                           
 24276                           ;stkvar	_sign @ sp[(-2)+0]
 24277  01AE66  0EFE               	movlw	-2
 24278  01AE68  6AE3               	clrf	plusw1,c
 24279  01AE6A  2AE3               	incf	plusw1,f,c
 24280  01AE6C                     l9416:
 24281                           
 24282                           ;stkvar	_divisor @ sp[(-2)+-4]
 24283  01AE6C  0EFB               	movlw	-5
 24284  01AE6E  AEE3               	btfss	plusw1,7,c
 24285  01AE70  D006               	goto	l9420
 24286                           
 24287                           ;stkvar	_divisor @ sp[(-2)+-4]
 24288                           ;stkvar	_divisor @ sp[(-2)+-4]
 24289  01AE72  0EFA               	movlw	-6
 24290  01AE74  6CE3               	negf	plusw1,c
 24291  01AE76  0EFB               	movlw	-5
 24292  01AE78  1EE3               	comf	plusw1,f,c
 24293  01AE7A  B0D8               	btfsc	status,0,c
 24294  01AE7C  2AE3               	incf	plusw1,f,c
 24295  01AE7E                     l9420:
 24296                           
 24297                           ;stkvar	_divisor @ sp[(-2)+-4]
 24298  01AE7E  0EFA               	movlw	-6
 24299  01AE80  006F FF8C  F001    	movff	plusw1,btemp
 24300  01AE86  0EFB               	movlw	-5
 24301  01AE88  50E3               	movf	plusw1,w,c
 24302  01AE8A  1001               	iorwf	btemp^0,w,c
 24303  01AE8C  B4D8               	btfsc	status,2,c
 24304  01AE8E  D053               	goto	u7690
 24305                           
 24306                           ;stkvar	_counter @ sp[(-2)+1]
 24307  01AE90  0EFF               	movlw	-1
 24308  01AE92  6AE3               	clrf	plusw1,c
 24309  01AE94  D012               	goto	L28
 24310  01AE96                     l9424:
 24311                           
 24312                           ;stkvar	_divisor @ sp[(-2)+-4]
 24313  01AE96  0EFA               	movlw	-6
 24314  01AE98  50E3               	movf	plusw1,w,c
 24315  01AE9A  90D8               	bcf	status,0,c
 24316  01AE9C  34E8               	rlcf	wreg,w,c
 24317  01AE9E  6E01               	movwf	btemp^0,c
 24318  01AEA0  0EFA               	movlw	-6
 24319  01AEA2  0060  F007  FFE3   	movff	btemp,plusw1
 24320  01AEA8  0EFB               	movlw	-5
 24321  01AEAA  50E3               	movf	plusw1,w,c
 24322  01AEAC  34E8               	rlcf	wreg,w,c
 24323  01AEAE  6E01               	movwf	btemp^0,c
 24324  01AEB0  0EFB               	movlw	-5
 24325  01AEB2  0060  F007  FFE3   	movff	btemp,plusw1
 24326                           
 24327                           ;stkvar	_counter @ sp[(-2)+1]
 24328  01AEB8  0EFF               	movlw	-1
 24329  01AEBA                     L28:
 24330  01AEBA  2AE3               	incf	plusw1,f,c
 24331                           
 24332                           ;stkvar	_divisor @ sp[(-2)+-4]
 24333  01AEBC  0EFB               	movlw	-5
 24334  01AEBE  AEE3               	btfss	plusw1,7,c
 24335  01AEC0  D7EA               	goto	l9424
 24336  01AEC2                     u7670:
 24337                           
 24338                           ;stkvar	_divisor @ sp[(-2)+-4]
 24339  01AEC2  0EFA               	movlw	-6
 24340  01AEC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24341  01AECA  0EFB               	movlw	-5
 24342  01AECC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24343                           
 24344                           ;stkvar	_dividend @ sp[(-2)+-2]
 24345  01AED2  0EFC               	movlw	-4
 24346  01AED4  006F FF8C  F009    	movff	plusw1,btemp+8
 24347  01AEDA  0EFD               	movlw	-3
 24348  01AEDC  006F FF8C  F00A    	movff	plusw1,btemp+9
 24349  01AEE2  500B               	movf	(btemp+10)^0,w,c
 24350  01AEE4  5C09               	subwf	(btemp+8)^0,w,c
 24351  01AEE6  500C               	movf	(btemp+11)^0,w,c
 24352  01AEE8  580A               	subwfb	(btemp+9)^0,w,c
 24353  01AEEA  A0D8               	btfss	status,0,c
 24354  01AEEC  D014               	goto	l9434
 24355                           
 24356                           ;stkvar	_divisor @ sp[(-2)+-4]
 24357                           ;stkvar	_dividend @ sp[(-2)+-2]
 24358  01AEEE  0EFC               	movlw	-4
 24359  01AEF0  50E3               	movf	plusw1,w,c
 24360  01AEF2  6E01               	movwf	btemp^0,c
 24361  01AEF4  0EFA               	movlw	-6
 24362  01AEF6  50E3               	movf	plusw1,w,c
 24363  01AEF8  5E01               	subwf	btemp^0,f,c
 24364  01AEFA  0EFC               	movlw	-4
 24365  01AEFC  0060  F007  FFE3   	movff	btemp,plusw1
 24366  01AF02  0EFD               	movlw	-3
 24367  01AF04  50E3               	movf	plusw1,w,c
 24368  01AF06  6E01               	movwf	btemp^0,c
 24369  01AF08  0EFB               	movlw	-5
 24370  01AF0A  50E3               	movf	plusw1,w,c
 24371  01AF0C  5A01               	subwfb	btemp^0,f,c
 24372  01AF0E  0EFD               	movlw	-3
 24373  01AF10  0060  F007  FFE3   	movff	btemp,plusw1
 24374  01AF16                     l9434:
 24375                           
 24376                           ;stkvar	_divisor @ sp[(-2)+-4]
 24377  01AF16  90D8               	bcf	status,0,c
 24378  01AF18  0EFB               	movlw	-5
 24379  01AF1A  32E3               	rrcf	plusw1,f,c
 24380  01AF1C  0EFA               	movlw	-6
 24381  01AF1E  32E3               	rrcf	plusw1,f,c
 24382                           
 24383                           ;stkvar	_counter @ sp[(-2)+1]
 24384  01AF20  0EFF               	movlw	-1
 24385  01AF22  50E3               	movf	plusw1,w,c
 24386  01AF24  6E01               	movwf	btemp^0,c
 24387  01AF26  0E01               	movlw	1
 24388  01AF28  5E01               	subwf	btemp^0,f,c
 24389  01AF2A  0EFF               	movlw	-1
 24390  01AF2C  0060  F007  FFE3   	movff	btemp,plusw1
 24391  01AF32  A4D8               	btfss	status,2,c
 24392  01AF34  D7C6               	goto	u7670
 24393  01AF36                     u7690:
 24394                           
 24395                           ;stkvar	_sign @ sp[(-2)+0]
 24396  01AF36  0EFE               	movlw	-2
 24397  01AF38  50E3               	movf	plusw1,w,c
 24398  01AF3A  B4D8               	btfsc	status,2,c
 24399  01AF3C  D006               	goto	l9442
 24400                           
 24401                           ;stkvar	_dividend @ sp[(-2)+-2]
 24402                           ;stkvar	_dividend @ sp[(-2)+-2]
 24403  01AF3E  0EFC               	movlw	-4
 24404  01AF40  6CE3               	negf	plusw1,c
 24405  01AF42  0EFD               	movlw	-3
 24406  01AF44  1EE3               	comf	plusw1,f,c
 24407  01AF46  B0D8               	btfsc	status,0,c
 24408  01AF48  2AE3               	incf	plusw1,f,c
 24409  01AF4A                     l9442:
 24410                           
 24411                           ;stkvar	_dividend @ sp[(-2)+-2]
 24412  01AF4A  0EFC               	movlw	-4
 24413  01AF4C  006F FF8C  F001    	movff	plusw1,btemp
 24414  01AF52  0EFD               	movlw	-3
 24415  01AF54  006F FF8C  F002    	movff	plusw1,btemp+1
 24416                           
 24417                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24418  01AF5A  0EFA               	movlw	250
 24419  01AF5C  26E1               	addwf	fsr1l,f,c
 24420  01AF5E  0EFF               	movlw	255
 24421  01AF60  22E2               	addwfc	fsr1h,f,c
 24422  01AF62  0012               	return		;funcret
 24423  01AF64                     __end_of___awmod:
 24424                           	opt callstack 0
 24425                           
 24426 ;; *************** function ___awdiv *****************
 24427 ;; Defined at:
 24428 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 24429 ;; Parameters:    Size  Location     Type
 24430 ;;  dividend        2  [STACK] int 
 24431 ;;  divisor         2  [STACK] int 
 24432 ;; Auto vars:     Size  Location     Type
 24433 ;;  quotient        2  [STACK] int 
 24434 ;;  sign            1  [STACK] unsigned char 
 24435 ;;  counter         1  [STACK] unsigned char 
 24436 ;; Return value:  Size  Location     Type
 24437 ;;                  2  [STACK] int 
 24438 ;; Registers used:
 24439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24440 ;; Tracked objects:
 24441 ;;		On entry : 0/0
 24442 ;;		On exit  : 0/0
 24443 ;;		Unchanged: 0/0
 24444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24449 ;;Total ram usage:        0 bytes
 24450 ;; Hardware stack levels used:    1
 24451 ;; Hardware stack levels required when called:   15
 24452 ;; This function calls:
 24453 ;;		Nothing
 24454 ;; This function is called by:
 24455 ;;		_efgtoa
 24456 ;; This function uses a reentrant model
 24457 ;;
 24458                           
 24459                           	psect	text87
 24460  01A4C2                     __ptext87:
 24461                           	opt callstack 0
 24462  01A4C2                     ___awdiv:
 24463                           	opt callstack 0
 24464                           
 24465                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24466  01A4C2  52E6               	movf	postinc1,f,c
 24467  01A4C4  52E6               	movf	postinc1,f,c
 24468  01A4C6  52E6               	movf	postinc1,f,c
 24469  01A4C8  52E6               	movf	postinc1,f,c
 24470                           
 24471                           ;stkvar	_sign @ sp[(-4)+2]
 24472                           
 24473                           ;incstack = 0
 24474 ;; hardware stack exceeded
 24475  01A4CA  0EFE               	movlw	-2
 24476  01A4CC  6AE3               	clrf	plusw1,c
 24477                           
 24478                           ;stkvar	_divisor @ sp[(-4)+-4]
 24479  01A4CE  0EF9               	movlw	-7
 24480  01A4D0  AEE3               	btfss	plusw1,7,c
 24481  01A4D2  D009               	goto	l9370
 24482                           
 24483                           ;stkvar	_divisor @ sp[(-4)+-4]
 24484                           ;stkvar	_divisor @ sp[(-4)+-4]
 24485  01A4D4  0EF8               	movlw	-8
 24486  01A4D6  6CE3               	negf	plusw1,c
 24487  01A4D8  0EF9               	movlw	-7
 24488  01A4DA  1EE3               	comf	plusw1,f,c
 24489  01A4DC  B0D8               	btfsc	status,0,c
 24490  01A4DE  2AE3               	incf	plusw1,f,c
 24491                           
 24492                           ;stkvar	_sign @ sp[(-4)+2]
 24493  01A4E0  0EFE               	movlw	-2
 24494  01A4E2  6AE3               	clrf	plusw1,c
 24495  01A4E4  2AE3               	incf	plusw1,f,c
 24496  01A4E6                     l9370:
 24497                           
 24498                           ;stkvar	_dividend @ sp[(-4)+-2]
 24499  01A4E6  0EFB               	movlw	-5
 24500  01A4E8  AEE3               	btfss	plusw1,7,c
 24501  01A4EA  D008               	goto	l9376
 24502                           
 24503                           ;stkvar	_dividend @ sp[(-4)+-2]
 24504                           ;stkvar	_dividend @ sp[(-4)+-2]
 24505  01A4EC  0EFA               	movlw	-6
 24506  01A4EE  6CE3               	negf	plusw1,c
 24507  01A4F0  0EFB               	movlw	-5
 24508  01A4F2  1EE3               	comf	plusw1,f,c
 24509  01A4F4  B0D8               	btfsc	status,0,c
 24510  01A4F6  2AE3               	incf	plusw1,f,c
 24511                           
 24512                           ;stkvar	_sign @ sp[(-4)+2]
 24513  01A4F8  0EFE               	movlw	-2
 24514  01A4FA  70E3               	btg	plusw1,0,c
 24515  01A4FC                     l9376:
 24516                           
 24517                           ;stkvar	_quotient @ sp[(-4)+0]
 24518  01A4FC  0EFC               	movlw	-4
 24519  01A4FE  6AE3               	clrf	plusw1,c
 24520  01A500  0EFD               	movlw	-3
 24521  01A502  6AE3               	clrf	plusw1,c
 24522                           
 24523                           ;stkvar	_divisor @ sp[(-4)+-4]
 24524  01A504  0EF8               	movlw	-8
 24525  01A506  006F FF8C  F001    	movff	plusw1,btemp
 24526  01A50C  0EF9               	movlw	-7
 24527  01A50E  50E3               	movf	plusw1,w,c
 24528  01A510  1001               	iorwf	btemp^0,w,c
 24529  01A512  B4D8               	btfsc	status,2,c
 24530  01A514  D066               	goto	u7620
 24531                           
 24532                           ;stkvar	_counter @ sp[(-4)+3]
 24533  01A516  0EFF               	movlw	-1
 24534  01A518  6AE3               	clrf	plusw1,c
 24535  01A51A  D012               	goto	L29
 24536  01A51C                     l9382:
 24537                           
 24538                           ;stkvar	_divisor @ sp[(-4)+-4]
 24539  01A51C  0EF8               	movlw	-8
 24540  01A51E  50E3               	movf	plusw1,w,c
 24541  01A520  90D8               	bcf	status,0,c
 24542  01A522  34E8               	rlcf	wreg,w,c
 24543  01A524  6E01               	movwf	btemp^0,c
 24544  01A526  0EF8               	movlw	-8
 24545  01A528  0060  F007  FFE3   	movff	btemp,plusw1
 24546  01A52E  0EF9               	movlw	-7
 24547  01A530  50E3               	movf	plusw1,w,c
 24548  01A532  34E8               	rlcf	wreg,w,c
 24549  01A534  6E01               	movwf	btemp^0,c
 24550  01A536  0EF9               	movlw	-7
 24551  01A538  0060  F007  FFE3   	movff	btemp,plusw1
 24552                           
 24553                           ;stkvar	_counter @ sp[(-4)+3]
 24554  01A53E  0EFF               	movlw	-1
 24555  01A540                     L29:
 24556  01A540  2AE3               	incf	plusw1,f,c
 24557                           
 24558                           ;stkvar	_divisor @ sp[(-4)+-4]
 24559  01A542  0EF9               	movlw	-7
 24560  01A544  AEE3               	btfss	plusw1,7,c
 24561  01A546  D7EA               	goto	l9382
 24562  01A548                     u7600:
 24563                           
 24564                           ;stkvar	_quotient @ sp[(-4)+0]
 24565  01A548  0EFC               	movlw	-4
 24566  01A54A  50E3               	movf	plusw1,w,c
 24567  01A54C  90D8               	bcf	status,0,c
 24568  01A54E  34E8               	rlcf	wreg,w,c
 24569  01A550  6E01               	movwf	btemp^0,c
 24570  01A552  0EFC               	movlw	-4
 24571  01A554  0060  F007  FFE3   	movff	btemp,plusw1
 24572  01A55A  0EFD               	movlw	-3
 24573  01A55C  50E3               	movf	plusw1,w,c
 24574  01A55E  34E8               	rlcf	wreg,w,c
 24575  01A560  6E01               	movwf	btemp^0,c
 24576  01A562  0EFD               	movlw	-3
 24577  01A564  0060  F007  FFE3   	movff	btemp,plusw1
 24578                           
 24579                           ;stkvar	_divisor @ sp[(-4)+-4]
 24580  01A56A  0EF8               	movlw	-8
 24581  01A56C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24582  01A572  0EF9               	movlw	-7
 24583  01A574  006F FF8C  F00C    	movff	plusw1,btemp+11
 24584                           
 24585                           ;stkvar	_dividend @ sp[(-4)+-2]
 24586  01A57A  0EFA               	movlw	-6
 24587  01A57C  006F FF8C  F009    	movff	plusw1,btemp+8
 24588  01A582  0EFB               	movlw	-5
 24589  01A584  006F FF8C  F00A    	movff	plusw1,btemp+9
 24590  01A58A  500B               	movf	(btemp+10)^0,w,c
 24591  01A58C  5C09               	subwf	(btemp+8)^0,w,c
 24592  01A58E  500C               	movf	(btemp+11)^0,w,c
 24593  01A590  580A               	subwfb	(btemp+9)^0,w,c
 24594  01A592  A0D8               	btfss	status,0,c
 24595  01A594  D016               	goto	l9396
 24596                           
 24597                           ;stkvar	_divisor @ sp[(-4)+-4]
 24598                           ;stkvar	_dividend @ sp[(-4)+-2]
 24599  01A596  0EFA               	movlw	-6
 24600  01A598  50E3               	movf	plusw1,w,c
 24601  01A59A  6E01               	movwf	btemp^0,c
 24602  01A59C  0EF8               	movlw	-8
 24603  01A59E  50E3               	movf	plusw1,w,c
 24604  01A5A0  5E01               	subwf	btemp^0,f,c
 24605  01A5A2  0EFA               	movlw	-6
 24606  01A5A4  0060  F007  FFE3   	movff	btemp,plusw1
 24607  01A5AA  0EFB               	movlw	-5
 24608  01A5AC  50E3               	movf	plusw1,w,c
 24609  01A5AE  6E01               	movwf	btemp^0,c
 24610  01A5B0  0EF9               	movlw	-7
 24611  01A5B2  50E3               	movf	plusw1,w,c
 24612  01A5B4  5A01               	subwfb	btemp^0,f,c
 24613  01A5B6  0EFB               	movlw	-5
 24614  01A5B8  0060  F007  FFE3   	movff	btemp,plusw1
 24615                           
 24616                           ;stkvar	_quotient @ sp[(-4)+0]
 24617  01A5BE  0EFC               	movlw	-4
 24618  01A5C0  80E3               	bsf	plusw1,0,c
 24619  01A5C2                     l9396:
 24620                           
 24621                           ;stkvar	_divisor @ sp[(-4)+-4]
 24622  01A5C2  90D8               	bcf	status,0,c
 24623  01A5C4  0EF9               	movlw	-7
 24624  01A5C6  32E3               	rrcf	plusw1,f,c
 24625  01A5C8  0EF8               	movlw	-8
 24626  01A5CA  32E3               	rrcf	plusw1,f,c
 24627                           
 24628                           ;stkvar	_counter @ sp[(-4)+3]
 24629  01A5CC  0EFF               	movlw	-1
 24630  01A5CE  50E3               	movf	plusw1,w,c
 24631  01A5D0  6E01               	movwf	btemp^0,c
 24632  01A5D2  0E01               	movlw	1
 24633  01A5D4  5E01               	subwf	btemp^0,f,c
 24634  01A5D6  0EFF               	movlw	-1
 24635  01A5D8  0060  F007  FFE3   	movff	btemp,plusw1
 24636  01A5DE  A4D8               	btfss	status,2,c
 24637  01A5E0  D7B3               	goto	u7600
 24638  01A5E2                     u7620:
 24639                           
 24640                           ;stkvar	_sign @ sp[(-4)+2]
 24641  01A5E2  0EFE               	movlw	-2
 24642  01A5E4  50E3               	movf	plusw1,w,c
 24643  01A5E6  B4D8               	btfsc	status,2,c
 24644  01A5E8  D006               	goto	l9404
 24645                           
 24646                           ;stkvar	_quotient @ sp[(-4)+0]
 24647                           ;stkvar	_quotient @ sp[(-4)+0]
 24648  01A5EA  0EFC               	movlw	-4
 24649  01A5EC  6CE3               	negf	plusw1,c
 24650  01A5EE  0EFD               	movlw	-3
 24651  01A5F0  1EE3               	comf	plusw1,f,c
 24652  01A5F2  B0D8               	btfsc	status,0,c
 24653  01A5F4  2AE3               	incf	plusw1,f,c
 24654  01A5F6                     l9404:
 24655                           
 24656                           ;stkvar	_quotient @ sp[(-4)+0]
 24657  01A5F6  0EFC               	movlw	-4
 24658  01A5F8  006F FF8C  F001    	movff	plusw1,btemp
 24659  01A5FE  0EFD               	movlw	-3
 24660  01A600  006F FF8C  F002    	movff	plusw1,btemp+1
 24661                           
 24662                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 24663  01A606  0EF8               	movlw	248
 24664  01A608  26E1               	addwf	fsr1l,f,c
 24665  01A60A  0EFF               	movlw	255
 24666  01A60C  22E2               	addwfc	fsr1h,f,c
 24667  01A60E  0012               	return		;funcret
 24668  01A610                     __end_of___awdiv:
 24669                           	opt callstack 0
 24670                           
 24671 ;; *************** function _dtoa *****************
 24672 ;; Defined at:
 24673 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24674 ;; Parameters:    Size  Location     Type
 24675 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24676 ;;		 -> f(6), NULL(0), 
 24677 ;;  d               8  [STACK] long long 
 24678 ;; Auto vars:     Size  Location     Type
 24679 ;;  n               8  [STACK] long long 
 24680 ;;  i               2  [STACK] int 
 24681 ;;  s               2  [STACK] int 
 24682 ;;  w               2  [STACK] int 
 24683 ;;  p               2  [STACK] int 
 24684 ;; Return value:  Size  Location     Type
 24685 ;;                  2  [STACK] int 
 24686 ;; Registers used:
 24687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 24688 ;; Tracked objects:
 24689 ;;		On entry : 0/0
 24690 ;;		On exit  : 0/0
 24691 ;;		Unchanged: 0/0
 24692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;Total ram usage:        0 bytes
 24698 ;; Hardware stack levels used:    1
 24699 ;; Hardware stack levels required when called:   20
 24700 ;; This function calls:
 24701 ;;		___aodiv
 24702 ;;		___aomod
 24703 ;;		_abs
 24704 ;;		_pad
 24705 ;; This function is called by:
 24706 ;;		_vfpfcnvrt
 24707 ;; This function uses a reentrant model
 24708 ;;
 24709                           
 24710                           	psect	text88
 24711  0164AC                     __ptext88:
 24712                           	opt callstack 0
 24713  0164AC                     _dtoa:
 24714                           	opt callstack 0
 24715                           
 24716                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 24717  0164AC  0E12               	movlw	18
 24718  0164AE  26E1               	addwf	fsr1l,f,c
 24719  0164B0  0E00               	movlw	0
 24720  0164B2  22E2               	addwfc	fsr1h,f,c
 24721                           
 24722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 24723                           ;stkvar	_d @ sp[(-18)+-10]
 24724                           
 24725                           ;incstack = 0
 24726 ;; hardware stack exceeded
 24727  0164B4  0EE4               	movlw	228
 24728  0164B6  24E1               	addwf	fsr1l,w,c
 24729  0164B8  6ED9               	movwf	fsr2l,c
 24730  0164BA  0EFF               	movlw	255
 24731  0164BC  20E2               	addwfc	fsr1h,w,c
 24732  0164BE  6EDA               	movwf	fsr2h,c
 24733                           
 24734                           ;stkvar	_n @ sp[(-18)+2]
 24735  0164C0  0E08               	movlw	8
 24736  0164C2  6E01               	movwf	btemp^0,c
 24737  0164C4  0EF0               	movlw	-16
 24738  0164C6                     us1208999:
 24739  0164C6  006F FF7B FFE3     	movff	postinc2,plusw1
 24740  0164CC  28E8               	incf	wreg,w,c
 24741  0164CE  2E01               	decfsz	btemp^0,f,c
 24742  0164D0  D7FA               	bra	us1208999
 24743                           
 24744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 24745                           ;stkvar	_n @ sp[(-18)+2]
 24746  0164D2  0EF7               	movlw	-9
 24747  0164D4  AEE3               	btfss	plusw1,7,c
 24748  0164D6  D002               	goto	u12090
 24749  0164D8  0E01               	movlw	1
 24750  0164DA  D001               	goto	u12100
 24751  0164DC                     u12090:
 24752  0164DC  0E00               	movlw	0
 24753  0164DE                     u12100:
 24754  0164DE  6E0B               	movwf	(btemp+10)^0,c
 24755  0164E0  6A0C               	clrf	(btemp+11)^0,c
 24756                           
 24757                           ;stkvar	_s @ sp[(-18)+12]
 24758  0164E2  0EFA               	movlw	-6
 24759  0164E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24760  0164EA  0EFB               	movlw	-5
 24761  0164EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24762                           
 24763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 24764                           ;stkvar	_s @ sp[(-18)+12]
 24765  0164F2  0EFA               	movlw	-6
 24766  0164F4  006F FF8C  F001    	movff	plusw1,btemp
 24767  0164FA  0EFB               	movlw	-5
 24768  0164FC  50E3               	movf	plusw1,w,c
 24769  0164FE  1001               	iorwf	btemp^0,w,c
 24770  016500  B4D8               	btfsc	status,2,c
 24771  016502  D025               	goto	u12120
 24772                           
 24773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 24774                           ;stkvar	_n @ sp[(-18)+2]
 24775                           ;stkvar	_n @ sp[(-18)+2]
 24776  016504  0EF0               	movlw	-16
 24777  016506  6CE3               	negf	plusw1,c
 24778  016508  0EF1               	movlw	-15
 24779  01650A  1EE3               	comf	plusw1,f,c
 24780  01650C  0EF2               	movlw	-14
 24781  01650E  1EE3               	comf	plusw1,f,c
 24782  016510  0EF3               	movlw	-13
 24783  016512  1EE3               	comf	plusw1,f,c
 24784  016514  0EF4               	movlw	-12
 24785  016516  1EE3               	comf	plusw1,f,c
 24786  016518  0EF5               	movlw	-11
 24787  01651A  1EE3               	comf	plusw1,f,c
 24788  01651C  0EF6               	movlw	-10
 24789  01651E  1EE3               	comf	plusw1,f,c
 24790  016520  0EF7               	movlw	-9
 24791  016522  1EE3               	comf	plusw1,f,c
 24792  016524  E314               	bnc	u12120
 24793  016526  0EF1               	movlw	-15
 24794  016528  2AE3               	incf	plusw1,f,c
 24795  01652A  E311               	bnc	u12120
 24796  01652C  0EF2               	movlw	-14
 24797  01652E  2AE3               	incf	plusw1,f,c
 24798  016530  E30E               	bnc	u12120
 24799  016532  0EF3               	movlw	-13
 24800  016534  2AE3               	incf	plusw1,f,c
 24801  016536  E30B               	bnc	u12120
 24802  016538  0EF4               	movlw	-12
 24803  01653A  2AE3               	incf	plusw1,f,c
 24804  01653C  E308               	bnc	u12120
 24805  01653E  0EF5               	movlw	-11
 24806  016540  2AE3               	incf	plusw1,f,c
 24807  016542  E305               	bnc	u12120
 24808  016544  0EF6               	movlw	-10
 24809  016546  2AE3               	incf	plusw1,f,c
 24810  016548  E302               	bnc	u12120
 24811  01654A  0EF7               	movlw	-9
 24812  01654C  2AE3               	incf	plusw1,f,c
 24813  01654E                     u12120:
 24814                           
 24815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 24816  01654E  AE3D               	btfss	(_prec+1)^0,7,c
 24817                           
 24818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 24819  016550  923E               	bcf	_flags^0,1,c
 24820                           
 24821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 24822  016552  BE3D               	btfsc	(_prec+1)^0,7,c
 24823  016554  D005               	goto	u12140
 24824  016556  503D               	movf	(_prec+1)^0,w,c
 24825  016558  E110               	bnz	l13370
 24826  01655A  043C               	decf	_prec^0,w,c
 24827  01655C  B0D8               	btfsc	status,0,c
 24828  01655E  D00D               	goto	l13370
 24829  016560                     u12140:
 24830  016560  0E01               	movlw	1
 24831  016562  6E0B               	movwf	(btemp+10)^0,c
 24832  016564  0E00               	movlw	0
 24833  016566  6E0C               	movwf	(btemp+11)^0,c
 24834                           
 24835                           ;stkvar	_p @ sp[(-18)+16]
 24836  016568  0EFE               	movlw	-2
 24837  01656A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24838  016570  0EFF               	movlw	-1
 24839  016572  0060  F033  FFE3   	movff	btemp+11,plusw1
 24840  016578  D008               	goto	l2436
 24841  01657A                     l13370:
 24842                           
 24843                           ;stkvar	_p @ sp[(-18)+16]
 24844  01657A  0EFE               	movlw	-2
 24845  01657C  0060  F0F3  FFE3   	movff	_prec,plusw1
 24846  016582  0EFF               	movlw	-1
 24847  016584  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 24848  01658A                     l2436:
 24849                           
 24850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 24851                           ;stkvar	_w @ sp[(-18)+14]
 24852  01658A  0EFC               	movlw	-4
 24853  01658C  0060  F0EB  FFE3   	movff	_width,plusw1
 24854  016592  0EFD               	movlw	-3
 24855  016594  0060  F0EF  FFE3   	movff	_width+1,plusw1
 24856                           
 24857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 24858                           ;stkvar	_s @ sp[(-18)+12]
 24859  01659A  0EFA               	movlw	-6
 24860  01659C  006F FF8C  F001    	movff	plusw1,btemp
 24861  0165A2  0EFB               	movlw	-5
 24862  0165A4  50E3               	movf	plusw1,w,c
 24863  0165A6  1001               	iorwf	btemp^0,w,c
 24864  0165A8  A4D8               	btfss	status,2,c
 24865  0165AA  D002               	goto	u12160
 24866  0165AC  A43E               	btfss	_flags^0,2,c
 24867  0165AE  D00A               	goto	l13378
 24868  0165B0                     u12160:
 24869                           
 24870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 24871                           ;stkvar	_w @ sp[(-18)+14]
 24872  0165B0  50E1               	movf	fsr1l,w,c
 24873  0165B2  0FFC               	addlw	-4
 24874  0165B4  6ED9               	movwf	fsr2l,c
 24875  0165B6  50E2               	movf	fsr1h,w,c
 24876  0165B8  6EDA               	movwf	fsr2h,c
 24877  0165BA  0EFF               	movlw	255
 24878  0165BC  22DA               	addwfc	fsr2h,f,c
 24879  0165BE  06DE               	decf	postinc2,f,c
 24880  0165C0  0E00               	movlw	0
 24881  0165C2  5ADD               	subwfb	postdec2,f,c
 24882  0165C4                     l13378:
 24883                           
 24884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 24885  0165C4  0E4F               	movlw	79
 24886  0165C6  6E0B               	movwf	(btemp+10)^0,c
 24887  0165C8  0E00               	movlw	0
 24888  0165CA  6E0C               	movwf	(btemp+11)^0,c
 24889                           
 24890                           ;stkvar	_i @ sp[(-18)+10]
 24891  0165CC  0EF8               	movlw	-8
 24892  0165CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24893  0165D4  0EF9               	movlw	-7
 24894  0165D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24895                           
 24896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 24897  0165DC  0102               	movlb	2	; () banked
 24898  0165DE  6B92               	clrf	(_dbuf+79)& (0+255),b
 24899                           
 24900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 24901  0165E0  D109               	goto	l13392
 24902  0165E2                     l13382:
 24903                           
 24904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 24905                           ;stkvar	_i @ sp[(-18)+10]
 24906  0165E2  50E1               	movf	fsr1l,w,c
 24907  0165E4  0FF8               	addlw	-8
 24908  0165E6  6ED9               	movwf	fsr2l,c
 24909  0165E8  50E2               	movf	fsr1h,w,c
 24910  0165EA  6EDA               	movwf	fsr2h,c
 24911  0165EC  0EFF               	movlw	255
 24912  0165EE  22DA               	addwfc	fsr2h,f,c
 24913  0165F0  06DE               	decf	postinc2,f,c
 24914  0165F2  0E00               	movlw	0
 24915  0165F4  5ADD               	subwfb	postdec2,f,c
 24916                           
 24917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 24918  0165F6  0E0A               	movlw	10
 24919  0165F8  6EE6               	movwf	postinc1,c
 24920  0165FA  0E00               	movlw	0
 24921  0165FC  6EE6               	movwf	postinc1,c
 24922  0165FE  0E00               	movlw	0
 24923  016600  6EE6               	movwf	postinc1,c
 24924  016602  0E00               	movlw	0
 24925  016604  6EE6               	movwf	postinc1,c
 24926  016606  0E00               	movlw	0
 24927  016608  6EE6               	movwf	postinc1,c
 24928  01660A  0E00               	movlw	0
 24929  01660C  6EE6               	movwf	postinc1,c
 24930  01660E  0E00               	movlw	0
 24931  016610  6EE6               	movwf	postinc1,c
 24932  016612  0E00               	movlw	0
 24933  016614  6EE6               	movwf	postinc1,c
 24934                           
 24935                           ;stkvar	_n @ sp[(-26)+2]
 24936  016616  50E1               	movf	fsr1l,w,c
 24937  016618  0FE8               	addlw	-24
 24938  01661A  6ED9               	movwf	fsr2l,c
 24939  01661C  50E2               	movf	fsr1h,w,c
 24940  01661E  6EDA               	movwf	fsr2h,c
 24941  016620  0EFF               	movlw	255
 24942  016622  22DA               	addwfc	fsr2h,f,c
 24943  016624  006F FF7B FFE6     	movff	postinc2,postinc1
 24944  01662A  006F FF7B FFE6     	movff	postinc2,postinc1
 24945  016630  006F FF7B FFE6     	movff	postinc2,postinc1
 24946  016636  006F FF7B FFE6     	movff	postinc2,postinc1
 24947  01663C  006F FF7B FFE6     	movff	postinc2,postinc1
 24948  016642  006F FF7B FFE6     	movff	postinc2,postinc1
 24949  016648  006F FF7B FFE6     	movff	postinc2,postinc1
 24950  01664E  006F FF7B FFE6     	movff	postinc2,postinc1
 24951  016654  EC63  F0C5         	call	___aomod	;wreg free
 24952  016658  52E5               	movf	postdec1,f,c
 24953  01665A  006F FF9C  F018    	movff	indf1,btemp+23
 24954  016660  52E5               	movf	postdec1,f,c
 24955  016662  006F FF9C  F017    	movff	indf1,btemp+22
 24956  016668  52E5               	movf	postdec1,f,c
 24957  01666A  006F FF9C  F016    	movff	indf1,btemp+21
 24958  016670  52E5               	movf	postdec1,f,c
 24959  016672  006F FF9C  F015    	movff	indf1,btemp+20
 24960  016678  52E5               	movf	postdec1,f,c
 24961  01667A  006F FF9C  F014    	movff	indf1,btemp+19
 24962  016680  52E5               	movf	postdec1,f,c
 24963  016682  006F FF9C  F013    	movff	indf1,btemp+18
 24964  016688  52E5               	movf	postdec1,f,c
 24965  01668A  006F FF9C  F012    	movff	indf1,btemp+17
 24966  016690  52E5               	movf	postdec1,f,c
 24967  016692  006F FF9C  F011    	movff	indf1,btemp+16
 24968  016698  0EF8               	movlw	248
 24969  01669A  26E1               	addwf	fsr1l,f,c
 24970  01669C  0EFF               	movlw	255
 24971  01669E  22E2               	addwfc	fsr1h,f,c
 24972  0166A0  0060  F044  F00B   	movff	btemp+16,btemp+10
 24973  0166A6  0060  F048  F00C   	movff	btemp+17,btemp+11
 24974  0166AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24975  0166B2  0060  F033  FFE6   	movff	btemp+11,postinc1
 24976  0166B8  EC8E  F0E7         	call	_abs	;wreg free
 24977  0166BC  0E30               	movlw	48
 24978  0166BE  2601               	addwf	btemp^0,f,c
 24979                           
 24980                           ;stkvar	_i @ sp[(-18)+10]
 24981  0166C0  0EF8               	movlw	-8
 24982  0166C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24983  0166C8  0EF9               	movlw	-7
 24984  0166CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24985  0166D0  0E43               	movlw	low _dbuf
 24986  0166D2  240B               	addwf	(btemp+10)^0,w,c
 24987  0166D4  6ED9               	movwf	fsr2l,c
 24988  0166D6  0E02               	movlw	high _dbuf
 24989  0166D8  200C               	addwfc	(btemp+11)^0,w,c
 24990  0166DA  6EDA               	movwf	fsr2h,c
 24991  0166DC  0060  F007  FFDF   	movff	btemp,indf2
 24992                           
 24993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 24994                           ;stkvar	_p @ sp[(-18)+16]
 24995  0166E2  50E1               	movf	fsr1l,w,c
 24996  0166E4  0FFE               	addlw	-2
 24997  0166E6  6ED9               	movwf	fsr2l,c
 24998  0166E8  50E2               	movf	fsr1h,w,c
 24999  0166EA  6EDA               	movwf	fsr2h,c
 25000  0166EC  0EFF               	movlw	255
 25001  0166EE  22DA               	addwfc	fsr2h,f,c
 25002  0166F0  06DE               	decf	postinc2,f,c
 25003  0166F2  0E00               	movlw	0
 25004  0166F4  5ADD               	subwfb	postdec2,f,c
 25005                           
 25006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 25007                           ;stkvar	_w @ sp[(-18)+14]
 25008  0166F6  50E1               	movf	fsr1l,w,c
 25009  0166F8  0FFC               	addlw	-4
 25010  0166FA  6ED9               	movwf	fsr2l,c
 25011  0166FC  50E2               	movf	fsr1h,w,c
 25012  0166FE  6EDA               	movwf	fsr2h,c
 25013  016700  0EFF               	movlw	255
 25014  016702  22DA               	addwfc	fsr2h,f,c
 25015  016704  06DE               	decf	postinc2,f,c
 25016  016706  0E00               	movlw	0
 25017  016708  5ADD               	subwfb	postdec2,f,c
 25018                           
 25019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 25020  01670A  0E0A               	movlw	10
 25021  01670C  6EE6               	movwf	postinc1,c
 25022  01670E  0E00               	movlw	0
 25023  016710  6EE6               	movwf	postinc1,c
 25024  016712  0E00               	movlw	0
 25025  016714  6EE6               	movwf	postinc1,c
 25026  016716  0E00               	movlw	0
 25027  016718  6EE6               	movwf	postinc1,c
 25028  01671A  0E00               	movlw	0
 25029  01671C  6EE6               	movwf	postinc1,c
 25030  01671E  0E00               	movlw	0
 25031  016720  6EE6               	movwf	postinc1,c
 25032  016722  0E00               	movlw	0
 25033  016724  6EE6               	movwf	postinc1,c
 25034  016726  0E00               	movlw	0
 25035  016728  6EE6               	movwf	postinc1,c
 25036                           
 25037                           ;stkvar	_n @ sp[(-26)+2]
 25038  01672A  50E1               	movf	fsr1l,w,c
 25039  01672C  0FE8               	addlw	-24
 25040  01672E  6ED9               	movwf	fsr2l,c
 25041  016730  50E2               	movf	fsr1h,w,c
 25042  016732  6EDA               	movwf	fsr2h,c
 25043  016734  0EFF               	movlw	255
 25044  016736  22DA               	addwfc	fsr2h,f,c
 25045  016738  006F FF7B FFE6     	movff	postinc2,postinc1
 25046  01673E  006F FF7B FFE6     	movff	postinc2,postinc1
 25047  016744  006F FF7B FFE6     	movff	postinc2,postinc1
 25048  01674A  006F FF7B FFE6     	movff	postinc2,postinc1
 25049  016750  006F FF7B FFE6     	movff	postinc2,postinc1
 25050  016756  006F FF7B FFE6     	movff	postinc2,postinc1
 25051  01675C  006F FF7B FFE6     	movff	postinc2,postinc1
 25052  016762  006F FF7B FFE6     	movff	postinc2,postinc1
 25053  016768  ECC6  F0C1         	call	___aodiv	;wreg free
 25054  01676C  52E5               	movf	postdec1,f,c
 25055  01676E  006F FF9C  F018    	movff	indf1,btemp+23
 25056  016774  52E5               	movf	postdec1,f,c
 25057  016776  006F FF9C  F017    	movff	indf1,btemp+22
 25058  01677C  52E5               	movf	postdec1,f,c
 25059  01677E  006F FF9C  F016    	movff	indf1,btemp+21
 25060  016784  52E5               	movf	postdec1,f,c
 25061  016786  006F FF9C  F015    	movff	indf1,btemp+20
 25062  01678C  52E5               	movf	postdec1,f,c
 25063  01678E  006F FF9C  F014    	movff	indf1,btemp+19
 25064  016794  52E5               	movf	postdec1,f,c
 25065  016796  006F FF9C  F013    	movff	indf1,btemp+18
 25066  01679C  52E5               	movf	postdec1,f,c
 25067  01679E  006F FF9C  F012    	movff	indf1,btemp+17
 25068  0167A4  52E5               	movf	postdec1,f,c
 25069  0167A6  006F FF9C  F011    	movff	indf1,btemp+16
 25070  0167AC  0EF8               	movlw	248
 25071  0167AE  26E1               	addwf	fsr1l,f,c
 25072  0167B0  0EFF               	movlw	255
 25073  0167B2  22E2               	addwfc	fsr1h,f,c
 25074                           
 25075                           ;stkvar	_n @ sp[(-18)+2]
 25076  0167B4  0EF0               	movlw	-16
 25077  0167B6  0060  F047  FFE3   	movff	btemp+16,plusw1
 25078  0167BC  0EF1               	movlw	-15
 25079  0167BE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 25080  0167C4  0EF2               	movlw	-14
 25081  0167C6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 25082  0167CC  0EF3               	movlw	-13
 25083  0167CE  0060  F053  FFE3   	movff	btemp+19,plusw1
 25084  0167D4  0EF4               	movlw	-12
 25085  0167D6  0060  F057  FFE3   	movff	btemp+20,plusw1
 25086  0167DC  0EF5               	movlw	-11
 25087  0167DE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 25088  0167E4  0EF6               	movlw	-10
 25089  0167E6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 25090  0167EC  0EF7               	movlw	-9
 25091  0167EE  0060  F063  FFE3   	movff	btemp+23,plusw1
 25092  0167F4                     l13392:
 25093                           
 25094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 25095                           ;stkvar	_i @ sp[(-18)+10]
 25096  0167F4  0EF9               	movlw	-7
 25097  0167F6  BEE3               	btfsc	plusw1,7,c
 25098  0167F8  D036               	goto	u12210
 25099  0167FA  0EF9               	movlw	-7
 25100  0167FC  50E3               	movf	plusw1,w,c
 25101  0167FE  E104               	bnz	u12170
 25102  016800  0EF8               	movlw	-8
 25103  016802  04E3               	decf	plusw1,w,c
 25104  016804  A0D8               	btfss	status,0,c
 25105  016806  D02F               	goto	u12210
 25106  016808                     u12170:
 25107                           
 25108                           ;stkvar	_n @ sp[(-18)+2]
 25109  016808  0EF0               	movlw	-16
 25110  01680A  50E3               	movf	plusw1,w,c
 25111  01680C  E115               	bnz	u12181
 25112  01680E  0EF1               	movlw	-15
 25113  016810  50E3               	movf	plusw1,w,c
 25114  016812  E112               	bnz	u12181
 25115  016814  0EF2               	movlw	-14
 25116  016816  50E3               	movf	plusw1,w,c
 25117  016818  E10F               	bnz	u12181
 25118  01681A  0EF3               	movlw	-13
 25119  01681C  50E3               	movf	plusw1,w,c
 25120  01681E  E10C               	bnz	u12181
 25121  016820  0EF4               	movlw	-12
 25122  016822  50E3               	movf	plusw1,w,c
 25123  016824  E109               	bnz	u12181
 25124  016826  0EF5               	movlw	-11
 25125  016828  50E3               	movf	plusw1,w,c
 25126  01682A  E106               	bnz	u12181
 25127  01682C  0EF6               	movlw	-10
 25128  01682E  50E3               	movf	plusw1,w,c
 25129  016830  E103               	bnz	u12181
 25130  016832  0EF7               	movlw	-9
 25131  016834  50E3               	movf	plusw1,w,c
 25132  016836  A4D8               	btfss	status,2,c
 25133  016838                     u12181:
 25134  016838  D6D4               	goto	l13382
 25135                           
 25136                           ;stkvar	_p @ sp[(-18)+16]
 25137  01683A  0EFF               	movlw	-1
 25138  01683C  BEE3               	btfsc	plusw1,7,c
 25139  01683E  D007               	goto	u12190
 25140  016840  0EFF               	movlw	-1
 25141  016842  50E3               	movf	plusw1,w,c
 25142  016844  E103               	bnz	u12191
 25143  016846  0EFE               	movlw	-2
 25144  016848  04E3               	decf	plusw1,w,c
 25145  01684A  B0D8               	btfsc	status,0,c
 25146  01684C                     u12191:
 25147  01684C  D6CA               	goto	l13382
 25148  01684E                     u12190:
 25149                           
 25150                           ;stkvar	_w @ sp[(-18)+14]
 25151  01684E  0EFD               	movlw	-3
 25152  016850  BEE3               	btfsc	plusw1,7,c
 25153  016852  D009               	goto	u12210
 25154  016854  0EFD               	movlw	-3
 25155  016856  50E3               	movf	plusw1,w,c
 25156  016858  E104               	bnz	u12200
 25157  01685A  0EFC               	movlw	-4
 25158  01685C  04E3               	decf	plusw1,w,c
 25159  01685E  A0D8               	btfss	status,0,c
 25160  016860  D002               	goto	u12210
 25161  016862                     u12200:
 25162  016862  B23E               	btfsc	_flags^0,1,c
 25163  016864  D6BE               	goto	l13382
 25164  016866                     u12210:
 25165                           
 25166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 25167                           ;stkvar	_s @ sp[(-18)+12]
 25168  016866  0EFA               	movlw	-6
 25169  016868  006F FF8C  F001    	movff	plusw1,btemp
 25170  01686E  0EFB               	movlw	-5
 25171  016870  50E3               	movf	plusw1,w,c
 25172  016872  1001               	iorwf	btemp^0,w,c
 25173  016874  A4D8               	btfss	status,2,c
 25174  016876  D002               	goto	u12230
 25175  016878  A43E               	btfss	_flags^0,2,c
 25176  01687A  D033               	goto	l13416
 25177  01687C                     u12230:
 25178                           
 25179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 25180                           ;stkvar	_i @ sp[(-18)+10]
 25181  01687C  50E1               	movf	fsr1l,w,c
 25182  01687E  0FF8               	addlw	-8
 25183  016880  6ED9               	movwf	fsr2l,c
 25184  016882  50E2               	movf	fsr1h,w,c
 25185  016884  6EDA               	movwf	fsr2h,c
 25186  016886  0EFF               	movlw	255
 25187  016888  22DA               	addwfc	fsr2h,f,c
 25188  01688A  06DE               	decf	postinc2,f,c
 25189  01688C  0E00               	movlw	0
 25190  01688E  5ADD               	subwfb	postdec2,f,c
 25191                           
 25192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 25193                           ;stkvar	_s @ sp[(-18)+12]
 25194  016890  0EFA               	movlw	-6
 25195  016892  006F FF8C  F001    	movff	plusw1,btemp
 25196  016898  0EFB               	movlw	-5
 25197  01689A  50E3               	movf	plusw1,w,c
 25198  01689C  1001               	iorwf	btemp^0,w,c
 25199  01689E  A4D8               	btfss	status,2,c
 25200  0168A0  D002               	goto	l13412
 25201  0168A2  0E2B               	movlw	43
 25202  0168A4  D001               	goto	L30
 25203  0168A6                     l13412:
 25204  0168A6  0E2D               	movlw	45
 25205  0168A8                     L30:
 25206  0168A8  6E0B               	movwf	(btemp+10)^0,c
 25207  0168AA  0E00               	movlw	0
 25208  0168AC  6E0C               	movwf	(btemp+11)^0,c
 25209                           
 25210                           ;stkvar	_dtoa$6164 @ sp[(-18)+0]
 25211  0168AE  0EEE               	movlw	-18
 25212  0168B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25213  0168B6  0EEF               	movlw	-17
 25214  0168B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25215                           
 25216                           ;stkvar	_dtoa$6164 @ sp[(-18)+0]
 25217                           ;stkvar	_i @ sp[(-18)+10]
 25218  0168BE  0EF8               	movlw	-8
 25219  0168C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 25220  0168C6  0EF9               	movlw	-7
 25221  0168C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 25222  0168CE  0E43               	movlw	low _dbuf
 25223  0168D0  240B               	addwf	(btemp+10)^0,w,c
 25224  0168D2  6ED9               	movwf	fsr2l,c
 25225  0168D4  0E02               	movlw	high _dbuf
 25226  0168D6  200C               	addwfc	(btemp+11)^0,w,c
 25227  0168D8  6EDA               	movwf	fsr2h,c
 25228  0168DA  0EEE               	movlw	-18
 25229  0168DC  006F FF8F FFDF     	movff	plusw1,indf2
 25230  0168E2                     l13416:
 25231                           
 25232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 25233                           ;stkvar	_w @ sp[(-18)+14]
 25234  0168E2  0EFC               	movlw	-4
 25235  0168E4  006F FF8F FFE6     	movff	plusw1,postinc1
 25236  0168EA  006F FF8F FFE6     	movff	plusw1,postinc1
 25237                           
 25238                           ;stkvar	_i @ sp[(-20)+10]
 25239  0168F0  0E43               	movlw	low _dbuf
 25240  0168F2  6E0B               	movwf	(btemp+10)^0,c
 25241  0168F4  0E02               	movlw	high _dbuf
 25242  0168F6  6E0C               	movwf	(btemp+11)^0,c
 25243  0168F8  0EF6               	movlw	-10
 25244  0168FA  50E3               	movf	plusw1,w,c
 25245  0168FC  260B               	addwf	(btemp+10)^0,f,c
 25246  0168FE  0EF7               	movlw	-9
 25247  016900  50E3               	movf	plusw1,w,c
 25248  016902  220C               	addwfc	(btemp+11)^0,f,c
 25249  016904  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25250  01690A  0060  F033  FFE6   	movff	btemp+11,postinc1
 25251                           
 25252                           ;stkvar	_fp @ sp[(-22)+-2]
 25253  016910  0EE8               	movlw	-24
 25254  016912  006F FF8F FFE6     	movff	plusw1,postinc1
 25255  016918  006F FF8F FFE6     	movff	plusw1,postinc1
 25256  01691E  ECB2  F0D7         	call	_pad	;wreg free
 25257                           
 25258                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 25259  016922  0EE4               	movlw	228
 25260  016924  26E1               	addwf	fsr1l,f,c
 25261  016926  0EFF               	movlw	255
 25262  016928  22E2               	addwfc	fsr1h,f,c
 25263  01692A  0012               	return		;funcret
 25264  01692C                     __end_of_dtoa:
 25265                           	opt callstack 0
 25266                           
 25267 ;; *************** function _abs *****************
 25268 ;; Defined at:
 25269 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 25270 ;; Parameters:    Size  Location     Type
 25271 ;;  a               2  [STACK] int 
 25272 ;; Auto vars:     Size  Location     Type
 25273 ;;		None
 25274 ;; Return value:  Size  Location     Type
 25275 ;;                  2  [STACK] int 
 25276 ;; Registers used:
 25277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 25278 ;; Tracked objects:
 25279 ;;		On entry : 0/2
 25280 ;;		On exit  : 0/0
 25281 ;;		Unchanged: 0/0
 25282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25287 ;;Total ram usage:        0 bytes
 25288 ;; Hardware stack levels used:    1
 25289 ;; Hardware stack levels required when called:   15
 25290 ;; This function calls:
 25291 ;;		Nothing
 25292 ;; This function is called by:
 25293 ;;		_dtoa
 25294 ;; This function uses a reentrant model
 25295 ;;
 25296                           
 25297                           	psect	text89
 25298  01CF1C                     __ptext89:
 25299                           	opt callstack 0
 25300  01CF1C                     _abs:
 25301                           	opt callstack 0
 25302                           
 25303                           ;stkvar	_a @ sp[(0)+-2]
 25304                           
 25305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25306                           ;incstack = 0
 25307 ;; hardware stack exceeded
 25308  01CF1C  0EFF               	movlw	-1
 25309  01CF1E  BEE3               	btfsc	plusw1,7,c
 25310  01CF20  D007               	goto	u6580
 25311  01CF22  0EFF               	movlw	-1
 25312  01CF24  50E3               	movf	plusw1,w,c
 25313  01CF26  E112               	bnz	l8858
 25314  01CF28  0EFE               	movlw	-2
 25315  01CF2A  04E3               	decf	plusw1,w,c
 25316  01CF2C  B0D8               	btfsc	status,0,c
 25317  01CF2E  D00E               	goto	l8858
 25318  01CF30                     u6580:
 25319                           
 25320                           ;stkvar	_a @ sp[(0)+-2]
 25321  01CF30  0EFE               	movlw	-2
 25322  01CF32  006F FF8C  F001    	movff	plusw1,btemp
 25323  01CF38  1E01               	comf	btemp^0,f,c
 25324  01CF3A  0EFF               	movlw	-1
 25325  01CF3C  006F FF8C  F002    	movff	plusw1,btemp+1
 25326  01CF42  1E02               	comf	(btemp+1)^0,f,c
 25327  01CF44  2A01               	incf	btemp^0,f,c
 25328  01CF46  B4D8               	btfsc	status,2,c
 25329  01CF48  2A02               	incf	(btemp+1)^0,f,c
 25330  01CF4A  D008               	goto	l3362
 25331  01CF4C                     l8858:
 25332                           
 25333                           ;stkvar	_a @ sp[(0)+-2]
 25334  01CF4C  0EFE               	movlw	-2
 25335  01CF4E  006F FF8C  F001    	movff	plusw1,btemp
 25336  01CF54  0EFF               	movlw	-1
 25337  01CF56  006F FF8C  F002    	movff	plusw1,btemp+1
 25338  01CF5C                     l3362:
 25339                           
 25340                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 25341  01CF5C  52E5               	movf	postdec1,f,c
 25342  01CF5E  52E5               	movf	postdec1,f,c
 25343  01CF60  0012               	return		;funcret
 25344  01CF62                     __end_of_abs:
 25345                           	opt callstack 0
 25346                           
 25347 ;; *************** function ___aomod *****************
 25348 ;; Defined at:
 25349 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 25350 ;; Parameters:    Size  Location     Type
 25351 ;;  dividend        8  [STACK] long long 
 25352 ;;  divisor         8  [STACK] long long 
 25353 ;; Auto vars:     Size  Location     Type
 25354 ;;  sign            1  [STACK] unsigned char 
 25355 ;;  counter         1  [STACK] unsigned char 
 25356 ;; Return value:  Size  Location     Type
 25357 ;;                  8  [STACK] long long 
 25358 ;; Registers used:
 25359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 25360 ;; Tracked objects:
 25361 ;;		On entry : 0/2
 25362 ;;		On exit  : 0/0
 25363 ;;		Unchanged: 0/0
 25364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25369 ;;Total ram usage:        0 bytes
 25370 ;; Hardware stack levels used:    1
 25371 ;; Hardware stack levels required when called:   15
 25372 ;; This function calls:
 25373 ;;		Nothing
 25374 ;; This function is called by:
 25375 ;;		_dtoa
 25376 ;; This function uses a reentrant model
 25377 ;;
 25378                           
 25379                           	psect	text90
 25380  018AC6                     __ptext90:
 25381                           	opt callstack 0
 25382  018AC6                     ___aomod:
 25383                           	opt callstack 0
 25384                           
 25385                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 25386  018AC6  52E6               	movf	postinc1,f,c
 25387  018AC8  52E6               	movf	postinc1,f,c
 25388                           
 25389                           ;stkvar	_sign @ sp[(-2)+0]
 25390                           
 25391                           ;incstack = 0
 25392 ;; hardware stack exceeded
 25393  018ACA  0EFE               	movlw	-2
 25394  018ACC  6AE3               	clrf	plusw1,c
 25395                           
 25396                           ;stkvar	_dividend @ sp[(-2)+-8]
 25397  018ACE  0EFD               	movlw	-3
 25398  018AD0  AEE3               	btfss	plusw1,7,c
 25399  018AD2  D028               	goto	l9016
 25400                           
 25401                           ;stkvar	_dividend @ sp[(-2)+-8]
 25402                           ;stkvar	_dividend @ sp[(-2)+-8]
 25403  018AD4  0EF6               	movlw	-10
 25404  018AD6  6CE3               	negf	plusw1,c
 25405  018AD8  0EF7               	movlw	-9
 25406  018ADA  1EE3               	comf	plusw1,f,c
 25407  018ADC  0EF8               	movlw	-8
 25408  018ADE  1EE3               	comf	plusw1,f,c
 25409  018AE0  0EF9               	movlw	-7
 25410  018AE2  1EE3               	comf	plusw1,f,c
 25411  018AE4  0EFA               	movlw	-6
 25412  018AE6  1EE3               	comf	plusw1,f,c
 25413  018AE8  0EFB               	movlw	-5
 25414  018AEA  1EE3               	comf	plusw1,f,c
 25415  018AEC  0EFC               	movlw	-4
 25416  018AEE  1EE3               	comf	plusw1,f,c
 25417  018AF0  0EFD               	movlw	-3
 25418  018AF2  1EE3               	comf	plusw1,f,c
 25419  018AF4  E314               	bnc	u7010
 25420  018AF6  0EF7               	movlw	-9
 25421  018AF8  2AE3               	incf	plusw1,f,c
 25422  018AFA  E311               	bnc	u7010
 25423  018AFC  0EF8               	movlw	-8
 25424  018AFE  2AE3               	incf	plusw1,f,c
 25425  018B00  E30E               	bnc	u7010
 25426  018B02  0EF9               	movlw	-7
 25427  018B04  2AE3               	incf	plusw1,f,c
 25428  018B06  E30B               	bnc	u7010
 25429  018B08  0EFA               	movlw	-6
 25430  018B0A  2AE3               	incf	plusw1,f,c
 25431  018B0C  E308               	bnc	u7010
 25432  018B0E  0EFB               	movlw	-5
 25433  018B10  2AE3               	incf	plusw1,f,c
 25434  018B12  E305               	bnc	u7010
 25435  018B14  0EFC               	movlw	-4
 25436  018B16  2AE3               	incf	plusw1,f,c
 25437  018B18  E302               	bnc	u7010
 25438  018B1A  0EFD               	movlw	-3
 25439  018B1C  2AE3               	incf	plusw1,f,c
 25440  018B1E                     u7010:
 25441                           
 25442                           ;stkvar	_sign @ sp[(-2)+0]
 25443  018B1E  0EFE               	movlw	-2
 25444  018B20  6AE3               	clrf	plusw1,c
 25445  018B22  2AE3               	incf	plusw1,f,c
 25446  018B24                     l9016:
 25447                           
 25448                           ;stkvar	_divisor @ sp[(-2)+-16]
 25449  018B24  0EF5               	movlw	-11
 25450  018B26  AEE3               	btfss	plusw1,7,c
 25451  018B28  D025               	goto	u7030
 25452                           
 25453                           ;stkvar	_divisor @ sp[(-2)+-16]
 25454                           ;stkvar	_divisor @ sp[(-2)+-16]
 25455  018B2A  0EEE               	movlw	-18
 25456  018B2C  6CE3               	negf	plusw1,c
 25457  018B2E  0EEF               	movlw	-17
 25458  018B30  1EE3               	comf	plusw1,f,c
 25459  018B32  0EF0               	movlw	-16
 25460  018B34  1EE3               	comf	plusw1,f,c
 25461  018B36  0EF1               	movlw	-15
 25462  018B38  1EE3               	comf	plusw1,f,c
 25463  018B3A  0EF2               	movlw	-14
 25464  018B3C  1EE3               	comf	plusw1,f,c
 25465  018B3E  0EF3               	movlw	-13
 25466  018B40  1EE3               	comf	plusw1,f,c
 25467  018B42  0EF4               	movlw	-12
 25468  018B44  1EE3               	comf	plusw1,f,c
 25469  018B46  0EF5               	movlw	-11
 25470  018B48  1EE3               	comf	plusw1,f,c
 25471  018B4A  E314               	bnc	u7030
 25472  018B4C  0EEF               	movlw	-17
 25473  018B4E  2AE3               	incf	plusw1,f,c
 25474  018B50  E311               	bnc	u7030
 25475  018B52  0EF0               	movlw	-16
 25476  018B54  2AE3               	incf	plusw1,f,c
 25477  018B56  E30E               	bnc	u7030
 25478  018B58  0EF1               	movlw	-15
 25479  018B5A  2AE3               	incf	plusw1,f,c
 25480  018B5C  E30B               	bnc	u7030
 25481  018B5E  0EF2               	movlw	-14
 25482  018B60  2AE3               	incf	plusw1,f,c
 25483  018B62  E308               	bnc	u7030
 25484  018B64  0EF3               	movlw	-13
 25485  018B66  2AE3               	incf	plusw1,f,c
 25486  018B68  E305               	bnc	u7030
 25487  018B6A  0EF4               	movlw	-12
 25488  018B6C  2AE3               	incf	plusw1,f,c
 25489  018B6E  E302               	bnc	u7030
 25490  018B70  0EF5               	movlw	-11
 25491  018B72  2AE3               	incf	plusw1,f,c
 25492  018B74                     u7030:
 25493                           
 25494                           ;stkvar	_divisor @ sp[(-2)+-16]
 25495  018B74  0EEE               	movlw	-18
 25496  018B76  50E3               	movf	plusw1,w,c
 25497  018B78  E116               	bnz	u7040
 25498  018B7A  0EEF               	movlw	-17
 25499  018B7C  50E3               	movf	plusw1,w,c
 25500  018B7E  E113               	bnz	u7040
 25501  018B80  0EF0               	movlw	-16
 25502  018B82  50E3               	movf	plusw1,w,c
 25503  018B84  E110               	bnz	u7040
 25504  018B86  0EF1               	movlw	-15
 25505  018B88  50E3               	movf	plusw1,w,c
 25506  018B8A  E10D               	bnz	u7040
 25507  018B8C  0EF2               	movlw	-14
 25508  018B8E  50E3               	movf	plusw1,w,c
 25509  018B90  E10A               	bnz	u7040
 25510  018B92  0EF3               	movlw	-13
 25511  018B94  50E3               	movf	plusw1,w,c
 25512  018B96  E107               	bnz	u7040
 25513  018B98  0EF4               	movlw	-12
 25514  018B9A  50E3               	movf	plusw1,w,c
 25515  018B9C  E104               	bnz	u7040
 25516  018B9E  0EF5               	movlw	-11
 25517  018BA0  50E3               	movf	plusw1,w,c
 25518  018BA2  B4D8               	btfsc	status,2,c
 25519  018BA4  D075               	goto	u7070
 25520  018BA6                     u7040:
 25521                           
 25522                           ;stkvar	_counter @ sp[(-2)+1]
 25523  018BA6  0EFF               	movlw	-1
 25524  018BA8  6AE3               	clrf	plusw1,c
 25525  018BAA  D012               	goto	L31
 25526  018BAC                     l9024:
 25527                           
 25528                           ;stkvar	_divisor @ sp[(-2)+-16]
 25529  018BAC  90D8               	bcf	status,0,c
 25530  018BAE  0EEE               	movlw	-18
 25531  018BB0  36E3               	rlcf	plusw1,f,c
 25532  018BB2  0EEF               	movlw	-17
 25533  018BB4  36E3               	rlcf	plusw1,f,c
 25534  018BB6  0EF0               	movlw	-16
 25535  018BB8  36E3               	rlcf	plusw1,f,c
 25536  018BBA  0EF1               	movlw	-15
 25537  018BBC  36E3               	rlcf	plusw1,f,c
 25538  018BBE  0EF2               	movlw	-14
 25539  018BC0  36E3               	rlcf	plusw1,f,c
 25540  018BC2  0EF3               	movlw	-13
 25541  018BC4  36E3               	rlcf	plusw1,f,c
 25542  018BC6  0EF4               	movlw	-12
 25543  018BC8  36E3               	rlcf	plusw1,f,c
 25544  018BCA  0EF5               	movlw	-11
 25545  018BCC  36E3               	rlcf	plusw1,f,c
 25546                           
 25547                           ;stkvar	_counter @ sp[(-2)+1]
 25548  018BCE  0EFF               	movlw	-1
 25549  018BD0                     L31:
 25550  018BD0  2AE3               	incf	plusw1,f,c
 25551                           
 25552                           ;stkvar	_divisor @ sp[(-2)+-16]
 25553  018BD2  0EF5               	movlw	-11
 25554  018BD4  AEE3               	btfss	plusw1,7,c
 25555  018BD6  D7EA               	goto	l9024
 25556  018BD8                     u7050:
 25557                           
 25558                           ;stkvar	_divisor @ sp[(-2)+-16]
 25559                           ;stkvar	_dividend @ sp[(-2)+-8]
 25560  018BD8  50E1               	movf	fsr1l,w,c
 25561  018BDA  0FF6               	addlw	-10
 25562  018BDC  6ED9               	movwf	fsr2l,c
 25563  018BDE  50E2               	movf	fsr1h,w,c
 25564  018BE0  6EDA               	movwf	fsr2h,c
 25565  018BE2  0EFF               	movlw	255
 25566  018BE4  22DA               	addwfc	fsr2h,f,c
 25567  018BE6  0EEE               	movlw	-18
 25568  018BE8  50E3               	movf	plusw1,w,c
 25569  018BEA  5CDE               	subwf	postinc2,w,c
 25570  018BEC  0EEF               	movlw	-17
 25571  018BEE  50E3               	movf	plusw1,w,c
 25572  018BF0  58DE               	subwfb	postinc2,w,c
 25573  018BF2  0EF0               	movlw	-16
 25574  018BF4  50E3               	movf	plusw1,w,c
 25575  018BF6  58DE               	subwfb	postinc2,w,c
 25576  018BF8  0EF1               	movlw	-15
 25577  018BFA  50E3               	movf	plusw1,w,c
 25578  018BFC  58DE               	subwfb	postinc2,w,c
 25579  018BFE  0EF2               	movlw	-14
 25580  018C00  50E3               	movf	plusw1,w,c
 25581  018C02  58DE               	subwfb	postinc2,w,c
 25582  018C04  0EF3               	movlw	-13
 25583  018C06  50E3               	movf	plusw1,w,c
 25584  018C08  58DE               	subwfb	postinc2,w,c
 25585  018C0A  0EF4               	movlw	-12
 25586  018C0C  50E3               	movf	plusw1,w,c
 25587  018C0E  58DE               	subwfb	postinc2,w,c
 25588  018C10  0EF5               	movlw	-11
 25589  018C12  50E3               	movf	plusw1,w,c
 25590  018C14  58DE               	subwfb	postinc2,w,c
 25591  018C16  A0D8               	btfss	status,0,c
 25592  018C18  D01F               	goto	l9032
 25593                           
 25594                           ;stkvar	_divisor @ sp[(-2)+-16]
 25595                           ;stkvar	_dividend @ sp[(-2)+-8]
 25596  018C1A  50E1               	movf	fsr1l,w,c
 25597  018C1C  0FF6               	addlw	-10
 25598  018C1E  6ED9               	movwf	fsr2l,c
 25599  018C20  50E2               	movf	fsr1h,w,c
 25600  018C22  6EDA               	movwf	fsr2h,c
 25601  018C24  0EFF               	movlw	255
 25602  018C26  22DA               	addwfc	fsr2h,f,c
 25603  018C28  0EEE               	movlw	-18
 25604  018C2A  50E3               	movf	plusw1,w,c
 25605  018C2C  5EDE               	subwf	postinc2,f,c
 25606  018C2E  0EEF               	movlw	-17
 25607  018C30  50E3               	movf	plusw1,w,c
 25608  018C32  5ADE               	subwfb	postinc2,f,c
 25609  018C34  0EF0               	movlw	-16
 25610  018C36  50E3               	movf	plusw1,w,c
 25611  018C38  5ADE               	subwfb	postinc2,f,c
 25612  018C3A  0EF1               	movlw	-15
 25613  018C3C  50E3               	movf	plusw1,w,c
 25614  018C3E  5ADE               	subwfb	postinc2,f,c
 25615  018C40  0EF2               	movlw	-14
 25616  018C42  50E3               	movf	plusw1,w,c
 25617  018C44  5ADE               	subwfb	postinc2,f,c
 25618  018C46  0EF3               	movlw	-13
 25619  018C48  50E3               	movf	plusw1,w,c
 25620  018C4A  5ADE               	subwfb	postinc2,f,c
 25621  018C4C  0EF4               	movlw	-12
 25622  018C4E  50E3               	movf	plusw1,w,c
 25623  018C50  5ADE               	subwfb	postinc2,f,c
 25624  018C52  0EF5               	movlw	-11
 25625  018C54  50E3               	movf	plusw1,w,c
 25626  018C56  5ADE               	subwfb	postinc2,f,c
 25627  018C58                     l9032:
 25628                           
 25629                           ;stkvar	_divisor @ sp[(-2)+-16]
 25630  018C58  90D8               	bcf	status,0,c
 25631  018C5A  0EF5               	movlw	-11
 25632  018C5C  32E3               	rrcf	plusw1,f,c
 25633  018C5E  0EF4               	movlw	-12
 25634  018C60  32E3               	rrcf	plusw1,f,c
 25635  018C62  0EF3               	movlw	-13
 25636  018C64  32E3               	rrcf	plusw1,f,c
 25637  018C66  0EF2               	movlw	-14
 25638  018C68  32E3               	rrcf	plusw1,f,c
 25639  018C6A  0EF1               	movlw	-15
 25640  018C6C  32E3               	rrcf	plusw1,f,c
 25641  018C6E  0EF0               	movlw	-16
 25642  018C70  32E3               	rrcf	plusw1,f,c
 25643  018C72  0EEF               	movlw	-17
 25644  018C74  32E3               	rrcf	plusw1,f,c
 25645  018C76  0EEE               	movlw	-18
 25646  018C78  32E3               	rrcf	plusw1,f,c
 25647                           
 25648                           ;stkvar	_counter @ sp[(-2)+1]
 25649  018C7A  0EFF               	movlw	-1
 25650  018C7C  50E3               	movf	plusw1,w,c
 25651  018C7E  6E01               	movwf	btemp^0,c
 25652  018C80  0E01               	movlw	1
 25653  018C82  5E01               	subwf	btemp^0,f,c
 25654  018C84  0EFF               	movlw	-1
 25655  018C86  0060  F007  FFE3   	movff	btemp,plusw1
 25656  018C8C  A4D8               	btfss	status,2,c
 25657  018C8E  D7A4               	goto	u7050
 25658  018C90                     u7070:
 25659                           
 25660                           ;stkvar	_sign @ sp[(-2)+0]
 25661  018C90  0EFE               	movlw	-2
 25662  018C92  50E3               	movf	plusw1,w,c
 25663  018C94  B4D8               	btfsc	status,2,c
 25664  018C96  D025               	goto	u7090
 25665                           
 25666                           ;stkvar	_dividend @ sp[(-2)+-8]
 25667                           ;stkvar	_dividend @ sp[(-2)+-8]
 25668  018C98  0EF6               	movlw	-10
 25669  018C9A  6CE3               	negf	plusw1,c
 25670  018C9C  0EF7               	movlw	-9
 25671  018C9E  1EE3               	comf	plusw1,f,c
 25672  018CA0  0EF8               	movlw	-8
 25673  018CA2  1EE3               	comf	plusw1,f,c
 25674  018CA4  0EF9               	movlw	-7
 25675  018CA6  1EE3               	comf	plusw1,f,c
 25676  018CA8  0EFA               	movlw	-6
 25677  018CAA  1EE3               	comf	plusw1,f,c
 25678  018CAC  0EFB               	movlw	-5
 25679  018CAE  1EE3               	comf	plusw1,f,c
 25680  018CB0  0EFC               	movlw	-4
 25681  018CB2  1EE3               	comf	plusw1,f,c
 25682  018CB4  0EFD               	movlw	-3
 25683  018CB6  1EE3               	comf	plusw1,f,c
 25684  018CB8  E314               	bnc	u7090
 25685  018CBA  0EF7               	movlw	-9
 25686  018CBC  2AE3               	incf	plusw1,f,c
 25687  018CBE  E311               	bnc	u7090
 25688  018CC0  0EF8               	movlw	-8
 25689  018CC2  2AE3               	incf	plusw1,f,c
 25690  018CC4  E30E               	bnc	u7090
 25691  018CC6  0EF9               	movlw	-7
 25692  018CC8  2AE3               	incf	plusw1,f,c
 25693  018CCA  E30B               	bnc	u7090
 25694  018CCC  0EFA               	movlw	-6
 25695  018CCE  2AE3               	incf	plusw1,f,c
 25696  018CD0  E308               	bnc	u7090
 25697  018CD2  0EFB               	movlw	-5
 25698  018CD4  2AE3               	incf	plusw1,f,c
 25699  018CD6  E305               	bnc	u7090
 25700  018CD8  0EFC               	movlw	-4
 25701  018CDA  2AE3               	incf	plusw1,f,c
 25702  018CDC  E302               	bnc	u7090
 25703  018CDE  0EFD               	movlw	-3
 25704  018CE0  2AE3               	incf	plusw1,f,c
 25705  018CE2                     u7090:
 25706                           
 25707                           ;stkvar	_dividend @ sp[(-2)+-8]
 25708  018CE2  0EF6               	movlw	246
 25709  018CE4  24E1               	addwf	fsr1l,w,c
 25710  018CE6  6ED9               	movwf	fsr2l,c
 25711  018CE8  0EFF               	movlw	255
 25712  018CEA  20E2               	addwfc	fsr1h,w,c
 25713  018CEC  6EDA               	movwf	fsr2h,c
 25714                           
 25715                           ;stkvar	?___aomod @ sp[(-2)+-8]
 25716  018CEE  0E08               	movlw	8
 25717  018CF0  6E01               	movwf	btemp^0,c
 25718  018CF2  0EF6               	movlw	-10
 25719  018CF4                     us710999:
 25720  018CF4  006F FF7B FFE3     	movff	postinc2,plusw1
 25721  018CFA  28E8               	incf	wreg,w,c
 25722  018CFC  2E01               	decfsz	btemp^0,f,c
 25723  018CFE  D7FA               	bra	us710999
 25724                           
 25725                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 25726  018D00  52E5               	movf	postdec1,f,c
 25727  018D02  52E5               	movf	postdec1,f,c
 25728  018D04  0012               	return		;funcret
 25729  018D06                     __end_of___aomod:
 25730                           	opt callstack 0
 25731                           
 25732 ;; *************** function ___aodiv *****************
 25733 ;; Defined at:
 25734 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 25735 ;; Parameters:    Size  Location     Type
 25736 ;;  dividend        8  [STACK] long long 
 25737 ;;  divisor         8  [STACK] long long 
 25738 ;; Auto vars:     Size  Location     Type
 25739 ;;  quotient        8  [STACK] long long 
 25740 ;;  sign            1  [STACK] unsigned char 
 25741 ;;  counter         1  [STACK] unsigned char 
 25742 ;; Return value:  Size  Location     Type
 25743 ;;                  8  [STACK] long long 
 25744 ;; Registers used:
 25745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 25746 ;; Tracked objects:
 25747 ;;		On entry : 0/2
 25748 ;;		On exit  : 0/0
 25749 ;;		Unchanged: 0/0
 25750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25755 ;;Total ram usage:        0 bytes
 25756 ;; Hardware stack levels used:    1
 25757 ;; Hardware stack levels required when called:   15
 25758 ;; This function calls:
 25759 ;;		Nothing
 25760 ;; This function is called by:
 25761 ;;		_dtoa
 25762 ;; This function uses a reentrant model
 25763 ;;
 25764                           
 25765                           	psect	text91
 25766  01838C                     __ptext91:
 25767                           	opt callstack 0
 25768  01838C                     ___aodiv:
 25769                           	opt callstack 0
 25770                           
 25771                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 25772  01838C  0E0A               	movlw	10
 25773  01838E  26E1               	addwf	fsr1l,f,c
 25774  018390  0E00               	movlw	0
 25775  018392  22E2               	addwfc	fsr1h,f,c
 25776                           
 25777                           ;stkvar	_sign @ sp[(-10)+8]
 25778                           
 25779                           ;incstack = 0
 25780 ;; hardware stack exceeded
 25781  018394  0EFE               	movlw	-2
 25782  018396  6AE3               	clrf	plusw1,c
 25783                           
 25784                           ;stkvar	_divisor @ sp[(-10)+-16]
 25785  018398  0EED               	movlw	-19
 25786  01839A  AEE3               	btfss	plusw1,7,c
 25787  01839C  D028               	goto	l8972
 25788                           
 25789                           ;stkvar	_divisor @ sp[(-10)+-16]
 25790                           ;stkvar	_divisor @ sp[(-10)+-16]
 25791  01839E  0EE6               	movlw	-26
 25792  0183A0  6CE3               	negf	plusw1,c
 25793  0183A2  0EE7               	movlw	-25
 25794  0183A4  1EE3               	comf	plusw1,f,c
 25795  0183A6  0EE8               	movlw	-24
 25796  0183A8  1EE3               	comf	plusw1,f,c
 25797  0183AA  0EE9               	movlw	-23
 25798  0183AC  1EE3               	comf	plusw1,f,c
 25799  0183AE  0EEA               	movlw	-22
 25800  0183B0  1EE3               	comf	plusw1,f,c
 25801  0183B2  0EEB               	movlw	-21
 25802  0183B4  1EE3               	comf	plusw1,f,c
 25803  0183B6  0EEC               	movlw	-20
 25804  0183B8  1EE3               	comf	plusw1,f,c
 25805  0183BA  0EED               	movlw	-19
 25806  0183BC  1EE3               	comf	plusw1,f,c
 25807  0183BE  E314               	bnc	u6890
 25808  0183C0  0EE7               	movlw	-25
 25809  0183C2  2AE3               	incf	plusw1,f,c
 25810  0183C4  E311               	bnc	u6890
 25811  0183C6  0EE8               	movlw	-24
 25812  0183C8  2AE3               	incf	plusw1,f,c
 25813  0183CA  E30E               	bnc	u6890
 25814  0183CC  0EE9               	movlw	-23
 25815  0183CE  2AE3               	incf	plusw1,f,c
 25816  0183D0  E30B               	bnc	u6890
 25817  0183D2  0EEA               	movlw	-22
 25818  0183D4  2AE3               	incf	plusw1,f,c
 25819  0183D6  E308               	bnc	u6890
 25820  0183D8  0EEB               	movlw	-21
 25821  0183DA  2AE3               	incf	plusw1,f,c
 25822  0183DC  E305               	bnc	u6890
 25823  0183DE  0EEC               	movlw	-20
 25824  0183E0  2AE3               	incf	plusw1,f,c
 25825  0183E2  E302               	bnc	u6890
 25826  0183E4  0EED               	movlw	-19
 25827  0183E6  2AE3               	incf	plusw1,f,c
 25828  0183E8                     u6890:
 25829                           
 25830                           ;stkvar	_sign @ sp[(-10)+8]
 25831  0183E8  0EFE               	movlw	-2
 25832  0183EA  6AE3               	clrf	plusw1,c
 25833  0183EC  2AE3               	incf	plusw1,f,c
 25834  0183EE                     l8972:
 25835                           
 25836                           ;stkvar	_dividend @ sp[(-10)+-8]
 25837  0183EE  0EF5               	movlw	-11
 25838  0183F0  AEE3               	btfss	plusw1,7,c
 25839  0183F2  D027               	goto	l8978
 25840                           
 25841                           ;stkvar	_dividend @ sp[(-10)+-8]
 25842                           ;stkvar	_dividend @ sp[(-10)+-8]
 25843  0183F4  0EEE               	movlw	-18
 25844  0183F6  6CE3               	negf	plusw1,c
 25845  0183F8  0EEF               	movlw	-17
 25846  0183FA  1EE3               	comf	plusw1,f,c
 25847  0183FC  0EF0               	movlw	-16
 25848  0183FE  1EE3               	comf	plusw1,f,c
 25849  018400  0EF1               	movlw	-15
 25850  018402  1EE3               	comf	plusw1,f,c
 25851  018404  0EF2               	movlw	-14
 25852  018406  1EE3               	comf	plusw1,f,c
 25853  018408  0EF3               	movlw	-13
 25854  01840A  1EE3               	comf	plusw1,f,c
 25855  01840C  0EF4               	movlw	-12
 25856  01840E  1EE3               	comf	plusw1,f,c
 25857  018410  0EF5               	movlw	-11
 25858  018412  1EE3               	comf	plusw1,f,c
 25859  018414  E314               	bnc	u6910
 25860  018416  0EEF               	movlw	-17
 25861  018418  2AE3               	incf	plusw1,f,c
 25862  01841A  E311               	bnc	u6910
 25863  01841C  0EF0               	movlw	-16
 25864  01841E  2AE3               	incf	plusw1,f,c
 25865  018420  E30E               	bnc	u6910
 25866  018422  0EF1               	movlw	-15
 25867  018424  2AE3               	incf	plusw1,f,c
 25868  018426  E30B               	bnc	u6910
 25869  018428  0EF2               	movlw	-14
 25870  01842A  2AE3               	incf	plusw1,f,c
 25871  01842C  E308               	bnc	u6910
 25872  01842E  0EF3               	movlw	-13
 25873  018430  2AE3               	incf	plusw1,f,c
 25874  018432  E305               	bnc	u6910
 25875  018434  0EF4               	movlw	-12
 25876  018436  2AE3               	incf	plusw1,f,c
 25877  018438  E302               	bnc	u6910
 25878  01843A  0EF5               	movlw	-11
 25879  01843C  2AE3               	incf	plusw1,f,c
 25880  01843E                     u6910:
 25881                           
 25882                           ;stkvar	_sign @ sp[(-10)+8]
 25883  01843E  0EFE               	movlw	-2
 25884  018440  70E3               	btg	plusw1,0,c
 25885  018442                     l8978:
 25886                           
 25887                           ;stkvar	_quotient @ sp[(-10)+0]
 25888  018442  0E07               	movlw	7
 25889  018444  6E01               	movwf	btemp^0,c
 25890  018446  0EF6               	movlw	-10
 25891  018448                     u6921:
 25892  018448  6AE3               	clrf	plusw1,c
 25893  01844A  2AE8               	incf	wreg,f,c
 25894  01844C  0601               	decf	btemp^0,f,c
 25895  01844E  E2FC               	bc	u6921
 25896                           
 25897                           ;stkvar	_divisor @ sp[(-10)+-16]
 25898  018450  0EE6               	movlw	-26
 25899  018452  50E3               	movf	plusw1,w,c
 25900  018454  E116               	bnz	u6930
 25901  018456  0EE7               	movlw	-25
 25902  018458  50E3               	movf	plusw1,w,c
 25903  01845A  E113               	bnz	u6930
 25904  01845C  0EE8               	movlw	-24
 25905  01845E  50E3               	movf	plusw1,w,c
 25906  018460  E110               	bnz	u6930
 25907  018462  0EE9               	movlw	-23
 25908  018464  50E3               	movf	plusw1,w,c
 25909  018466  E10D               	bnz	u6930
 25910  018468  0EEA               	movlw	-22
 25911  01846A  50E3               	movf	plusw1,w,c
 25912  01846C  E10A               	bnz	u6930
 25913  01846E  0EEB               	movlw	-21
 25914  018470  50E3               	movf	plusw1,w,c
 25915  018472  E107               	bnz	u6930
 25916  018474  0EEC               	movlw	-20
 25917  018476  50E3               	movf	plusw1,w,c
 25918  018478  E104               	bnz	u6930
 25919  01847A  0EED               	movlw	-19
 25920  01847C  50E3               	movf	plusw1,w,c
 25921  01847E  B4D8               	btfsc	status,2,c
 25922  018480  D088               	goto	u6960
 25923  018482                     u6930:
 25924                           
 25925                           ;stkvar	_counter @ sp[(-10)+9]
 25926  018482  0EFF               	movlw	-1
 25927  018484  6AE3               	clrf	plusw1,c
 25928  018486  D012               	goto	L32
 25929  018488                     l8984:
 25930                           
 25931                           ;stkvar	_divisor @ sp[(-10)+-16]
 25932  018488  90D8               	bcf	status,0,c
 25933  01848A  0EE6               	movlw	-26
 25934  01848C  36E3               	rlcf	plusw1,f,c
 25935  01848E  0EE7               	movlw	-25
 25936  018490  36E3               	rlcf	plusw1,f,c
 25937  018492  0EE8               	movlw	-24
 25938  018494  36E3               	rlcf	plusw1,f,c
 25939  018496  0EE9               	movlw	-23
 25940  018498  36E3               	rlcf	plusw1,f,c
 25941  01849A  0EEA               	movlw	-22
 25942  01849C  36E3               	rlcf	plusw1,f,c
 25943  01849E  0EEB               	movlw	-21
 25944  0184A0  36E3               	rlcf	plusw1,f,c
 25945  0184A2  0EEC               	movlw	-20
 25946  0184A4  36E3               	rlcf	plusw1,f,c
 25947  0184A6  0EED               	movlw	-19
 25948  0184A8  36E3               	rlcf	plusw1,f,c
 25949                           
 25950                           ;stkvar	_counter @ sp[(-10)+9]
 25951  0184AA  0EFF               	movlw	-1
 25952  0184AC                     L32:
 25953  0184AC  2AE3               	incf	plusw1,f,c
 25954                           
 25955                           ;stkvar	_divisor @ sp[(-10)+-16]
 25956  0184AE  0EED               	movlw	-19
 25957  0184B0  AEE3               	btfss	plusw1,7,c
 25958  0184B2  D7EA               	goto	l8984
 25959  0184B4                     u6940:
 25960                           
 25961                           ;stkvar	_quotient @ sp[(-10)+0]
 25962  0184B4  90D8               	bcf	status,0,c
 25963  0184B6  0EF6               	movlw	-10
 25964  0184B8  36E3               	rlcf	plusw1,f,c
 25965  0184BA  0EF7               	movlw	-9
 25966  0184BC  36E3               	rlcf	plusw1,f,c
 25967  0184BE  0EF8               	movlw	-8
 25968  0184C0  36E3               	rlcf	plusw1,f,c
 25969  0184C2  0EF9               	movlw	-7
 25970  0184C4  36E3               	rlcf	plusw1,f,c
 25971  0184C6  0EFA               	movlw	-6
 25972  0184C8  36E3               	rlcf	plusw1,f,c
 25973  0184CA  0EFB               	movlw	-5
 25974  0184CC  36E3               	rlcf	plusw1,f,c
 25975  0184CE  0EFC               	movlw	-4
 25976  0184D0  36E3               	rlcf	plusw1,f,c
 25977  0184D2  0EFD               	movlw	-3
 25978  0184D4  36E3               	rlcf	plusw1,f,c
 25979                           
 25980                           ;stkvar	_divisor @ sp[(-10)+-16]
 25981                           ;stkvar	_dividend @ sp[(-10)+-8]
 25982  0184D6  50E1               	movf	fsr1l,w,c
 25983  0184D8  0FEE               	addlw	-18
 25984  0184DA  6ED9               	movwf	fsr2l,c
 25985  0184DC  50E2               	movf	fsr1h,w,c
 25986  0184DE  6EDA               	movwf	fsr2h,c
 25987  0184E0  0EFF               	movlw	255
 25988  0184E2  22DA               	addwfc	fsr2h,f,c
 25989  0184E4  0EE6               	movlw	-26
 25990  0184E6  50E3               	movf	plusw1,w,c
 25991  0184E8  5CDE               	subwf	postinc2,w,c
 25992  0184EA  0EE7               	movlw	-25
 25993  0184EC  50E3               	movf	plusw1,w,c
 25994  0184EE  58DE               	subwfb	postinc2,w,c
 25995  0184F0  0EE8               	movlw	-24
 25996  0184F2  50E3               	movf	plusw1,w,c
 25997  0184F4  58DE               	subwfb	postinc2,w,c
 25998  0184F6  0EE9               	movlw	-23
 25999  0184F8  50E3               	movf	plusw1,w,c
 26000  0184FA  58DE               	subwfb	postinc2,w,c
 26001  0184FC  0EEA               	movlw	-22
 26002  0184FE  50E3               	movf	plusw1,w,c
 26003  018500  58DE               	subwfb	postinc2,w,c
 26004  018502  0EEB               	movlw	-21
 26005  018504  50E3               	movf	plusw1,w,c
 26006  018506  58DE               	subwfb	postinc2,w,c
 26007  018508  0EEC               	movlw	-20
 26008  01850A  50E3               	movf	plusw1,w,c
 26009  01850C  58DE               	subwfb	postinc2,w,c
 26010  01850E  0EED               	movlw	-19
 26011  018510  50E3               	movf	plusw1,w,c
 26012  018512  58DE               	subwfb	postinc2,w,c
 26013  018514  A0D8               	btfss	status,0,c
 26014  018516  D021               	goto	l8996
 26015                           
 26016                           ;stkvar	_divisor @ sp[(-10)+-16]
 26017                           ;stkvar	_dividend @ sp[(-10)+-8]
 26018  018518  50E1               	movf	fsr1l,w,c
 26019  01851A  0FEE               	addlw	-18
 26020  01851C  6ED9               	movwf	fsr2l,c
 26021  01851E  50E2               	movf	fsr1h,w,c
 26022  018520  6EDA               	movwf	fsr2h,c
 26023  018522  0EFF               	movlw	255
 26024  018524  22DA               	addwfc	fsr2h,f,c
 26025  018526  0EE6               	movlw	-26
 26026  018528  50E3               	movf	plusw1,w,c
 26027  01852A  5EDE               	subwf	postinc2,f,c
 26028  01852C  0EE7               	movlw	-25
 26029  01852E  50E3               	movf	plusw1,w,c
 26030  018530  5ADE               	subwfb	postinc2,f,c
 26031  018532  0EE8               	movlw	-24
 26032  018534  50E3               	movf	plusw1,w,c
 26033  018536  5ADE               	subwfb	postinc2,f,c
 26034  018538  0EE9               	movlw	-23
 26035  01853A  50E3               	movf	plusw1,w,c
 26036  01853C  5ADE               	subwfb	postinc2,f,c
 26037  01853E  0EEA               	movlw	-22
 26038  018540  50E3               	movf	plusw1,w,c
 26039  018542  5ADE               	subwfb	postinc2,f,c
 26040  018544  0EEB               	movlw	-21
 26041  018546  50E3               	movf	plusw1,w,c
 26042  018548  5ADE               	subwfb	postinc2,f,c
 26043  01854A  0EEC               	movlw	-20
 26044  01854C  50E3               	movf	plusw1,w,c
 26045  01854E  5ADE               	subwfb	postinc2,f,c
 26046  018550  0EED               	movlw	-19
 26047  018552  50E3               	movf	plusw1,w,c
 26048  018554  5ADE               	subwfb	postinc2,f,c
 26049                           
 26050                           ;stkvar	_quotient @ sp[(-10)+0]
 26051  018556  0EF6               	movlw	-10
 26052  018558  80E3               	bsf	plusw1,0,c
 26053  01855A                     l8996:
 26054                           
 26055                           ;stkvar	_divisor @ sp[(-10)+-16]
 26056  01855A  90D8               	bcf	status,0,c
 26057  01855C  0EED               	movlw	-19
 26058  01855E  32E3               	rrcf	plusw1,f,c
 26059  018560  0EEC               	movlw	-20
 26060  018562  32E3               	rrcf	plusw1,f,c
 26061  018564  0EEB               	movlw	-21
 26062  018566  32E3               	rrcf	plusw1,f,c
 26063  018568  0EEA               	movlw	-22
 26064  01856A  32E3               	rrcf	plusw1,f,c
 26065  01856C  0EE9               	movlw	-23
 26066  01856E  32E3               	rrcf	plusw1,f,c
 26067  018570  0EE8               	movlw	-24
 26068  018572  32E3               	rrcf	plusw1,f,c
 26069  018574  0EE7               	movlw	-25
 26070  018576  32E3               	rrcf	plusw1,f,c
 26071  018578  0EE6               	movlw	-26
 26072  01857A  32E3               	rrcf	plusw1,f,c
 26073                           
 26074                           ;stkvar	_counter @ sp[(-10)+9]
 26075  01857C  0EFF               	movlw	-1
 26076  01857E  50E3               	movf	plusw1,w,c
 26077  018580  6E01               	movwf	btemp^0,c
 26078  018582  0E01               	movlw	1
 26079  018584  5E01               	subwf	btemp^0,f,c
 26080  018586  0EFF               	movlw	-1
 26081  018588  0060  F007  FFE3   	movff	btemp,plusw1
 26082  01858E  A4D8               	btfss	status,2,c
 26083  018590  D791               	goto	u6940
 26084  018592                     u6960:
 26085                           
 26086                           ;stkvar	_sign @ sp[(-10)+8]
 26087  018592  0EFE               	movlw	-2
 26088  018594  50E3               	movf	plusw1,w,c
 26089  018596  B4D8               	btfsc	status,2,c
 26090  018598  D025               	goto	u6980
 26091                           
 26092                           ;stkvar	_quotient @ sp[(-10)+0]
 26093                           ;stkvar	_quotient @ sp[(-10)+0]
 26094  01859A  0EF6               	movlw	-10
 26095  01859C  6CE3               	negf	plusw1,c
 26096  01859E  0EF7               	movlw	-9
 26097  0185A0  1EE3               	comf	plusw1,f,c
 26098  0185A2  0EF8               	movlw	-8
 26099  0185A4  1EE3               	comf	plusw1,f,c
 26100  0185A6  0EF9               	movlw	-7
 26101  0185A8  1EE3               	comf	plusw1,f,c
 26102  0185AA  0EFA               	movlw	-6
 26103  0185AC  1EE3               	comf	plusw1,f,c
 26104  0185AE  0EFB               	movlw	-5
 26105  0185B0  1EE3               	comf	plusw1,f,c
 26106  0185B2  0EFC               	movlw	-4
 26107  0185B4  1EE3               	comf	plusw1,f,c
 26108  0185B6  0EFD               	movlw	-3
 26109  0185B8  1EE3               	comf	plusw1,f,c
 26110  0185BA  E314               	bnc	u6980
 26111  0185BC  0EF7               	movlw	-9
 26112  0185BE  2AE3               	incf	plusw1,f,c
 26113  0185C0  E311               	bnc	u6980
 26114  0185C2  0EF8               	movlw	-8
 26115  0185C4  2AE3               	incf	plusw1,f,c
 26116  0185C6  E30E               	bnc	u6980
 26117  0185C8  0EF9               	movlw	-7
 26118  0185CA  2AE3               	incf	plusw1,f,c
 26119  0185CC  E30B               	bnc	u6980
 26120  0185CE  0EFA               	movlw	-6
 26121  0185D0  2AE3               	incf	plusw1,f,c
 26122  0185D2  E308               	bnc	u6980
 26123  0185D4  0EFB               	movlw	-5
 26124  0185D6  2AE3               	incf	plusw1,f,c
 26125  0185D8  E305               	bnc	u6980
 26126  0185DA  0EFC               	movlw	-4
 26127  0185DC  2AE3               	incf	plusw1,f,c
 26128  0185DE  E302               	bnc	u6980
 26129  0185E0  0EFD               	movlw	-3
 26130  0185E2  2AE3               	incf	plusw1,f,c
 26131  0185E4                     u6980:
 26132                           
 26133                           ;stkvar	_quotient @ sp[(-10)+0]
 26134  0185E4  0EF6               	movlw	246
 26135  0185E6  24E1               	addwf	fsr1l,w,c
 26136  0185E8  6ED9               	movwf	fsr2l,c
 26137  0185EA  0EFF               	movlw	255
 26138  0185EC  20E2               	addwfc	fsr1h,w,c
 26139  0185EE  6EDA               	movwf	fsr2h,c
 26140                           
 26141                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 26142  0185F0  0E08               	movlw	8
 26143  0185F2  6E01               	movwf	btemp^0,c
 26144  0185F4  0EEE               	movlw	-18
 26145  0185F6                     us699999:
 26146  0185F6  006F FF7B FFE3     	movff	postinc2,plusw1
 26147  0185FC  28E8               	incf	wreg,w,c
 26148  0185FE  2E01               	decfsz	btemp^0,f,c
 26149  018600  D7FA               	bra	us699999
 26150                           
 26151                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 26152  018602  0EF6               	movlw	246
 26153  018604  26E1               	addwf	fsr1l,f,c
 26154  018606  0EFF               	movlw	255
 26155  018608  22E2               	addwfc	fsr1h,f,c
 26156  01860A  0012               	return		;funcret
 26157  01860C                     __end_of___aodiv:
 26158                           	opt callstack 0
 26159                           
 26160 ;; *************** function _ctoa *****************
 26161 ;; Defined at:
 26162 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26163 ;; Parameters:    Size  Location     Type
 26164 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26165 ;;		 -> f(6), NULL(0), 
 26166 ;;  c               1  [STACK] unsigned char 
 26167 ;; Auto vars:     Size  Location     Type
 26168 ;;  w               2  [STACK] int 
 26169 ;;  l               2    0        int 
 26170 ;; Return value:  Size  Location     Type
 26171 ;;                  2  [STACK] int 
 26172 ;; Registers used:
 26173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26174 ;; Tracked objects:
 26175 ;;		On entry : 0/0
 26176 ;;		On exit  : 0/0
 26177 ;;		Unchanged: 0/0
 26178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26183 ;;Total ram usage:        0 bytes
 26184 ;; Hardware stack levels used:    1
 26185 ;; Hardware stack levels required when called:   20
 26186 ;; This function calls:
 26187 ;;		_pad
 26188 ;; This function is called by:
 26189 ;;		_vfpfcnvrt
 26190 ;; This function uses a reentrant model
 26191 ;;
 26192                           
 26193                           	psect	text92
 26194  01C32A                     __ptext92:
 26195                           	opt callstack 0
 26196  01C32A                     _ctoa:
 26197                           	opt callstack 0
 26198                           
 26199                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26200  01C32A  52E6               	movf	postinc1,f,c
 26201  01C32C  52E6               	movf	postinc1,f,c
 26202                           
 26203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 26204                           
 26205                           ;incstack = 0
 26206 ;; hardware stack exceeded
 26207  01C32E  503A               	movf	_width^0,w,c
 26208  01C330  103B               	iorwf	(_width+1)^0,w,c
 26209  01C332  A4D8               	btfss	status,2,c
 26210  01C334  D009               	goto	l13344
 26211                           
 26212                           ;stkvar	_w @ sp[(-2)+0]
 26213  01C336  0EFE               	movlw	-2
 26214  01C338  0060  F0EB  FFE3   	movff	_width,plusw1
 26215  01C33E  0EFF               	movlw	-1
 26216  01C340  0060  F0EF  FFE3   	movff	_width+1,plusw1
 26217  01C346  D016               	goto	l13346
 26218  01C348                     l13344:
 26219  01C348  0EFF               	movlw	255
 26220  01C34A  6E0B               	movwf	(btemp+10)^0,c
 26221  01C34C  0EFF               	movlw	255
 26222  01C34E  6E0C               	movwf	(btemp+11)^0,c
 26223  01C350  0060  F0E8  F009   	movff	_width,btemp+8
 26224  01C356  0060  F0EC  F00A   	movff	_width+1,btemp+9
 26225  01C35C  500B               	movf	(btemp+10)^0,w,c
 26226  01C35E  2609               	addwf	(btemp+8)^0,f,c
 26227  01C360  500C               	movf	(btemp+11)^0,w,c
 26228  01C362  220A               	addwfc	(btemp+9)^0,f,c
 26229                           
 26230                           ;stkvar	_w @ sp[(-2)+0]
 26231  01C364  0EFE               	movlw	-2
 26232  01C366  0060  F027  FFE3   	movff	btemp+8,plusw1
 26233  01C36C  0EFF               	movlw	-1
 26234  01C36E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26235  01C374                     l13346:
 26236                           
 26237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 26238                           ;stkvar	_c @ sp[(-2)+-3]
 26239  01C374  0EFB               	movlw	-5
 26240  01C376  006F FF8C  F243    	movff	plusw1,_dbuf
 26241                           
 26242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 26243  01C37C  0102               	movlb	2	; () banked
 26244  01C37E  6B44               	clrf	(_dbuf+1)& (0+255),b
 26245                           
 26246                           ; BSR set to: 2
 26247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 26248                           ;stkvar	_w @ sp[(-2)+0]
 26249  01C380  0EFE               	movlw	-2
 26250  01C382  006F FF8F FFE6     	movff	plusw1,postinc1
 26251  01C388  006F FF8F FFE6     	movff	plusw1,postinc1
 26252  01C38E  0E43               	movlw	low _dbuf
 26253  01C390  6EE6               	movwf	postinc1,c
 26254  01C392  0E02               	movlw	high _dbuf
 26255  01C394  6EE6               	movwf	postinc1,c
 26256                           
 26257                           ;stkvar	_fp @ sp[(-6)+-2]
 26258  01C396  0EF8               	movlw	-8
 26259  01C398  006F FF8F FFE6     	movff	plusw1,postinc1
 26260  01C39E  006F FF8F FFE6     	movff	plusw1,postinc1
 26261  01C3A4  ECB2  F0D7         	call	_pad	;wreg free
 26262                           
 26263                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 26264  01C3A8  0EFB               	movlw	251
 26265  01C3AA  26E1               	addwf	fsr1l,f,c
 26266  01C3AC  0EFF               	movlw	255
 26267  01C3AE  22E2               	addwfc	fsr1h,f,c
 26268  01C3B0  0012               	return		;funcret
 26269  01C3B2                     __end_of_ctoa:
 26270                           	opt callstack 0
 26271                           
 26272 ;; *************** function _pad *****************
 26273 ;; Defined at:
 26274 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26275 ;; Parameters:    Size  Location     Type
 26276 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26277 ;;		 -> f(6), NULL(0), 
 26278 ;;  buf             2  [STACK] PTR unsigned char 
 26279 ;;		 -> dbuf(80), 
 26280 ;;  p               2  [STACK] int 
 26281 ;; Auto vars:     Size  Location     Type
 26282 ;;  w               2  [STACK] int 
 26283 ;;  i               2  [STACK] int 
 26284 ;; Return value:  Size  Location     Type
 26285 ;;                  2  [STACK] int 
 26286 ;; Registers used:
 26287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26288 ;; Tracked objects:
 26289 ;;		On entry : 0/2
 26290 ;;		On exit  : 0/0
 26291 ;;		Unchanged: 0/0
 26292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26297 ;;Total ram usage:        0 bytes
 26298 ;; Hardware stack levels used:    1
 26299 ;; Hardware stack levels required when called:   19
 26300 ;; This function calls:
 26301 ;;		_fputc
 26302 ;;		_fputs
 26303 ;;		_strlen
 26304 ;; This function is called by:
 26305 ;;		_ctoa
 26306 ;;		_dtoa
 26307 ;;		_efgtoa
 26308 ;;		_utoa
 26309 ;;		_xtoa
 26310 ;; This function uses a reentrant model
 26311 ;;
 26312                           
 26313                           	psect	text93
 26314  01AF64                     __ptext93:
 26315                           	opt callstack 0
 26316  01AF64                     _pad:
 26317                           	opt callstack 0
 26318                           
 26319                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26320  01AF64  52E6               	movf	postinc1,f,c
 26321  01AF66  52E6               	movf	postinc1,f,c
 26322  01AF68  52E6               	movf	postinc1,f,c
 26323  01AF6A  52E6               	movf	postinc1,f,c
 26324                           
 26325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 26326                           
 26327                           ;incstack = 0
 26328 ;; hardware stack exceeded
 26329  01AF6C  A03E               	btfss	_flags^0,0,c
 26330  01AF6E  D010               	goto	l13306
 26331                           
 26332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 26333                           ;stkvar	_fp @ sp[(-4)+-2]
 26334  01AF70  0EFA               	movlw	-6
 26335  01AF72  006F FF8F FFE6     	movff	plusw1,postinc1
 26336  01AF78  006F FF8F FFE6     	movff	plusw1,postinc1
 26337                           
 26338                           ;stkvar	_buf @ sp[(-6)+-4]
 26339  01AF7E  0EF6               	movlw	-10
 26340  01AF80  006F FF8F FFE6     	movff	plusw1,postinc1
 26341  01AF86  006F FF8F FFE6     	movff	plusw1,postinc1
 26342  01AF8C  EC27  F0E0         	call	_fputs	;wreg free
 26343  01AF90                     l13306:
 26344                           
 26345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 26346                           ;stkvar	_p @ sp[(-4)+-6]
 26347  01AF90  0EF7               	movlw	-9
 26348  01AF92  BEE3               	btfsc	plusw1,7,c
 26349  01AF94  D011               	goto	l13310
 26350                           
 26351                           ;stkvar	_p @ sp[(-4)+-6]
 26352                           ;stkvar	_w @ sp[(-4)+0]
 26353  01AF96  0EF6               	movlw	-10
 26354  01AF98  006F FF8C  F001    	movff	plusw1,btemp
 26355  01AF9E  0EFC               	movlw	-4
 26356  01AFA0  0060  F007  FFE3   	movff	btemp,plusw1
 26357  01AFA6  0EF7               	movlw	-9
 26358  01AFA8  006F FF8C  F001    	movff	plusw1,btemp
 26359  01AFAE  0EFD               	movlw	-3
 26360  01AFB0  0060  F007  FFE3   	movff	btemp,plusw1
 26361  01AFB6  D004               	goto	l2416
 26362  01AFB8                     l13310:
 26363                           
 26364                           ;stkvar	_w @ sp[(-4)+0]
 26365  01AFB8  0EFC               	movlw	-4
 26366  01AFBA  6AE3               	clrf	plusw1,c
 26367  01AFBC  0EFD               	movlw	-3
 26368  01AFBE  6AE3               	clrf	plusw1,c
 26369  01AFC0                     l2416:
 26370                           
 26371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 26372                           ;stkvar	_i @ sp[(-4)+2]
 26373  01AFC0  0EFE               	movlw	-2
 26374  01AFC2  6AE3               	clrf	plusw1,c
 26375  01AFC4  0EFF               	movlw	-1
 26376  01AFC6  6AE3               	clrf	plusw1,c
 26377                           
 26378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 26379  01AFC8  D01E               	goto	l13316
 26380  01AFCA                     l13312:
 26381                           
 26382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 26383                           ;stkvar	_fp @ sp[(-4)+-2]
 26384  01AFCA  0EFA               	movlw	-6
 26385  01AFCC  006F FF8F FFE6     	movff	plusw1,postinc1
 26386  01AFD2  006F FF8F FFE6     	movff	plusw1,postinc1
 26387  01AFD8  0E20               	movlw	32
 26388  01AFDA  6EE6               	movwf	postinc1,c
 26389  01AFDC  0E00               	movlw	0
 26390  01AFDE  6EE6               	movwf	postinc1,c
 26391  01AFE0  EC7C  F0D5         	call	_fputc	;wreg free
 26392                           
 26393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 26394                           ;stkvar	_i @ sp[(-4)+2]
 26395  01AFE4  0EFE               	movlw	-2
 26396  01AFE6  50E3               	movf	plusw1,w,c
 26397  01AFE8  0F01               	addlw	1
 26398  01AFEA  6E01               	movwf	btemp^0,c
 26399  01AFEC  0EFE               	movlw	-2
 26400  01AFEE  0060  F007  FFE3   	movff	btemp,plusw1
 26401  01AFF4  6A01               	clrf	btemp^0,c
 26402  01AFF6  0EFF               	movlw	-1
 26403  01AFF8  50E3               	movf	plusw1,w,c
 26404  01AFFA  2001               	addwfc	btemp^0,w,c
 26405  01AFFC  6E01               	movwf	btemp^0,c
 26406  01AFFE  0EFF               	movlw	-1
 26407  01B000  0060  F007  FFE3   	movff	btemp,plusw1
 26408  01B006                     l13316:
 26409                           
 26410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 26411                           ;stkvar	_w @ sp[(-4)+0]
 26412                           ;stkvar	_i @ sp[(-4)+2]
 26413  01B006  50E1               	movf	fsr1l,w,c
 26414  01B008  0FFE               	addlw	-2
 26415  01B00A  6ED9               	movwf	fsr2l,c
 26416  01B00C  50E2               	movf	fsr1h,w,c
 26417  01B00E  6EDA               	movwf	fsr2h,c
 26418  01B010  0EFF               	movlw	255
 26419  01B012  22DA               	addwfc	fsr2h,f,c
 26420  01B014  0EFC               	movlw	-4
 26421  01B016  50E3               	movf	plusw1,w,c
 26422  01B018  5CDE               	subwf	postinc2,w,c
 26423  01B01A  50DE               	movf	postinc2,w,c
 26424  01B01C  0A80               	xorlw	128
 26425  01B01E  6E01               	movwf	btemp^0,c
 26426  01B020  0EFD               	movlw	-3
 26427  01B022  50E3               	movf	plusw1,w,c
 26428  01B024  0A80               	xorlw	128
 26429  01B026  5801               	subwfb	btemp^0,w,c
 26430  01B028  A0D8               	btfss	status,0,c
 26431  01B02A  D7CF               	goto	l13312
 26432                           
 26433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 26434  01B02C  B03E               	btfsc	_flags^0,0,c
 26435  01B02E  D010               	goto	l13320
 26436                           
 26437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 26438                           ;stkvar	_fp @ sp[(-4)+-2]
 26439  01B030  0EFA               	movlw	-6
 26440  01B032  006F FF8F FFE6     	movff	plusw1,postinc1
 26441  01B038  006F FF8F FFE6     	movff	plusw1,postinc1
 26442                           
 26443                           ;stkvar	_buf @ sp[(-6)+-4]
 26444  01B03E  0EF6               	movlw	-10
 26445  01B040  006F FF8F FFE6     	movff	plusw1,postinc1
 26446  01B046  006F FF8F FFE6     	movff	plusw1,postinc1
 26447  01B04C  EC27  F0E0         	call	_fputs	;wreg free
 26448  01B050                     l13320:
 26449                           
 26450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 26451                           ;stkvar	_w @ sp[(-4)+0]
 26452                           ;stkvar	_buf @ sp[(-4)+-4]
 26453  01B050  0EF8               	movlw	-8
 26454  01B052  006F FF8F FFE6     	movff	plusw1,postinc1
 26455  01B058  006F FF8F FFE6     	movff	plusw1,postinc1
 26456  01B05E  ECD6  F0DF         	call	_strlen	;wreg free
 26457  01B062  0EFC               	movlw	-4
 26458  01B064  50E3               	movf	plusw1,w,c
 26459  01B066  2601               	addwf	btemp^0,f,c
 26460  01B068  0EFD               	movlw	-3
 26461  01B06A  50E3               	movf	plusw1,w,c
 26462  01B06C  2202               	addwfc	(btemp+1)^0,f,c
 26463                           
 26464                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 26465  01B06E  0EF6               	movlw	246
 26466  01B070  26E1               	addwf	fsr1l,f,c
 26467  01B072  0EFF               	movlw	255
 26468  01B074  22E2               	addwfc	fsr1h,f,c
 26469  01B076  0012               	return		;funcret
 26470  01B078                     __end_of_pad:
 26471                           	opt callstack 0
 26472                           
 26473 ;; *************** function _strlen *****************
 26474 ;; Defined at:
 26475 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 26476 ;; Parameters:    Size  Location     Type
 26477 ;;  s               2  [STACK] PTR const unsigned char 
 26478 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 26479 ;;		 -> spin(120), STR_75(9), STR_74(12), D.lcd(480), 
 26480 ;;		 -> D(482), T(144), port_data(512), cp(4), 
 26481 ;;		 -> cb(4), STR_3(5), V(192), 
 26482 ;; Auto vars:     Size  Location     Type
 26483 ;;  a               2  [STACK] PTR const unsigned char 
 26484 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 26485 ;;		 -> spin(120), STR_75(9), STR_74(12), D.lcd(480), 
 26486 ;;		 -> D(482), T(144), port_data(512), cp(4), 
 26487 ;;		 -> cb(4), STR_3(5), V(192), 
 26488 ;; Return value:  Size  Location     Type
 26489 ;;                  2  [STACK] unsigned int 
 26490 ;; Registers used:
 26491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 26492 ;; Tracked objects:
 26493 ;;		On entry : 0/0
 26494 ;;		On exit  : 0/0
 26495 ;;		Unchanged: 0/0
 26496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26501 ;;Total ram usage:        0 bytes
 26502 ;; Hardware stack levels used:    1
 26503 ;; Hardware stack levels required when called:   15
 26504 ;; This function calls:
 26505 ;;		Nothing
 26506 ;; This function is called by:
 26507 ;;		_eaDogM_WriteString
 26508 ;;		_spinners
 26509 ;;		_calc_bsoc
 26510 ;;		_pad
 26511 ;;		_stoa
 26512 ;; This function uses a reentrant model
 26513 ;;
 26514                           
 26515                           	psect	text94
 26516  01BFAC                     __ptext94:
 26517                           	opt callstack 0
 26518  01BFAC                     _strlen:
 26519                           	opt callstack 0
 26520                           
 26521                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26522  01BFAC  52E6               	movf	postinc1,f,c
 26523  01BFAE  52E6               	movf	postinc1,f,c
 26524                           
 26525                           ;stkvar	_s @ sp[(-2)+-2]
 26526                           
 26527                           ;incstack = 0
 26528 ;; hardware stack exceeded
 26529  01BFB0  0EFC               	movlw	-4
 26530  01BFB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 26531  01BFB8  0EFD               	movlw	-3
 26532  01BFBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26533                           
 26534                           ;stkvar	_a @ sp[(-2)+0]
 26535  01BFC0  0EFF               	movlw	-1
 26536  01BFC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26537  01BFC8  0EFE               	movlw	-2
 26538  01BFCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26539  01BFD0  D011               	goto	l8548
 26540  01BFD2                     l8546:
 26541                           
 26542                           ;stkvar	_s @ sp[(-2)+-2]
 26543  01BFD2  0EFC               	movlw	-4
 26544  01BFD4  50E3               	movf	plusw1,w,c
 26545  01BFD6  0F01               	addlw	1
 26546  01BFD8  6E01               	movwf	btemp^0,c
 26547  01BFDA  0EFC               	movlw	-4
 26548  01BFDC  0060  F007  FFE3   	movff	btemp,plusw1
 26549  01BFE2  6A01               	clrf	btemp^0,c
 26550  01BFE4  0EFD               	movlw	-3
 26551  01BFE6  50E3               	movf	plusw1,w,c
 26552  01BFE8  2001               	addwfc	btemp^0,w,c
 26553  01BFEA  6E01               	movwf	btemp^0,c
 26554  01BFEC  0EFD               	movlw	-3
 26555  01BFEE  0060  F007  FFE3   	movff	btemp,plusw1
 26556  01BFF4                     l8548:
 26557                           
 26558                           ;stkvar	_s @ sp[(-2)+-2]
 26559  01BFF4  0EFC               	movlw	-4
 26560  01BFF6  006F FF8F FFF6     	movff	plusw1,tblptrl
 26561  01BFFC  0EFD               	movlw	-3
 26562  01BFFE  006F FF8F FFF7     	movff	plusw1,tblptrh
 26563  01C004  0E00               	movlw	low (__mediumconst shr (0+16))
 26564  01C006  6EF8               	movwf	tblptru,c
 26565  01C008  0E1F               	movlw	(high __ramtop+-1)
 26566  01C00A  64F7               	cpfsgt	tblptrh,c
 26567  01C00C  D003               	bra	u6007
 26568  01C00E  0008               	tblrd		*
 26569  01C010  50F5               	movf	tablat,w,c
 26570  01C012  D007               	bra	u6000
 26571  01C014                     u6007:
 26572  01C014  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26573  01C01A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26574  01C020  50EF               	movf	indf0,w,c
 26575  01C022                     u6000:
 26576  01C022  0900               	iorlw	0
 26577  01C024  A4D8               	btfss	status,2,c
 26578  01C026  D7D5               	goto	l8546
 26579                           
 26580                           ;stkvar	_a @ sp[(-2)+0]
 26581                           ;stkvar	_s @ sp[(-2)+-2]
 26582  01C028  0EFC               	movlw	-4
 26583  01C02A  006F FF8C  F001    	movff	plusw1,btemp
 26584  01C030  0EFD               	movlw	-3
 26585  01C032  006F FF8C  F002    	movff	plusw1,btemp+1
 26586  01C038  0EFE               	movlw	-2
 26587  01C03A  50E3               	movf	plusw1,w,c
 26588  01C03C  5E01               	subwf	btemp^0,f,c
 26589  01C03E  0EFF               	movlw	-1
 26590  01C040  50E3               	movf	plusw1,w,c
 26591  01C042  5A02               	subwfb	(btemp+1)^0,f,c
 26592                           
 26593                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 26594  01C044  52E5               	movf	postdec1,f,c
 26595  01C046  52E5               	movf	postdec1,f,c
 26596  01C048  52E5               	movf	postdec1,f,c
 26597  01C04A  52E5               	movf	postdec1,f,c
 26598  01C04C  0012               	return		;funcret
 26599  01C04E                     __end_of_strlen:
 26600                           	opt callstack 0
 26601                           
 26602 ;; *************** function _fputs *****************
 26603 ;; Defined at:
 26604 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 26605 ;; Parameters:    Size  Location     Type
 26606 ;;  s               2  [STACK] PTR const unsigned char 
 26607 ;;		 -> dbuf(80), 
 26608 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26609 ;;		 -> f(6), NULL(0), 
 26610 ;; Auto vars:     Size  Location     Type
 26611 ;;  i               2  [STACK] int 
 26612 ;;  c               1  [STACK] unsigned char 
 26613 ;; Return value:  Size  Location     Type
 26614 ;;                  2  [STACK] int 
 26615 ;; Registers used:
 26616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 26617 ;; Tracked objects:
 26618 ;;		On entry : 0/2
 26619 ;;		On exit  : 0/0
 26620 ;;		Unchanged: 0/0
 26621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26626 ;;Total ram usage:        0 bytes
 26627 ;; Hardware stack levels used:    1
 26628 ;; Hardware stack levels required when called:   18
 26629 ;; This function calls:
 26630 ;;		_fputc
 26631 ;; This function is called by:
 26632 ;;		_pad
 26633 ;; This function uses a reentrant model
 26634 ;;
 26635                           
 26636                           	psect	text95
 26637  01C04E                     __ptext95:
 26638                           	opt callstack 0
 26639  01C04E                     _fputs:
 26640                           	opt callstack 0
 26641                           
 26642                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26643  01C04E  52E6               	movf	postinc1,f,c
 26644  01C050  52E6               	movf	postinc1,f,c
 26645  01C052  52E6               	movf	postinc1,f,c
 26646                           
 26647                           ;stkvar	_i @ sp[(-3)+0]
 26648                           
 26649                           ;incstack = 0
 26650 ;; hardware stack exceeded
 26651  01C054  0EFD               	movlw	-3
 26652  01C056  6AE3               	clrf	plusw1,c
 26653  01C058  0EFE               	movlw	-2
 26654  01C05A  6AE3               	clrf	plusw1,c
 26655  01C05C  D01F               	goto	l13258
 26656  01C05E                     l13254:
 26657                           
 26658                           ;stkvar	_fp @ sp[(-3)+-4]
 26659  01C05E  0EF9               	movlw	-7
 26660  01C060  006F FF8F FFE6     	movff	plusw1,postinc1
 26661  01C066  006F FF8F FFE6     	movff	plusw1,postinc1
 26662                           
 26663                           ;stkvar	_c @ sp[(-5)+2]
 26664  01C06C  0EFD               	movlw	-3
 26665  01C06E  50E3               	movf	plusw1,w,c
 26666  01C070  6EE6               	movwf	postinc1,c
 26667  01C072  0E00               	movlw	0
 26668  01C074  6EE6               	movwf	postinc1,c
 26669  01C076  EC7C  F0D5         	call	_fputc	;wreg free
 26670                           
 26671                           ;stkvar	_i @ sp[(-3)+0]
 26672  01C07A  0EFD               	movlw	-3
 26673  01C07C  50E3               	movf	plusw1,w,c
 26674  01C07E  0F01               	addlw	1
 26675  01C080  6E01               	movwf	btemp^0,c
 26676  01C082  0EFD               	movlw	-3
 26677  01C084  0060  F007  FFE3   	movff	btemp,plusw1
 26678  01C08A  6A01               	clrf	btemp^0,c
 26679  01C08C  0EFE               	movlw	-2
 26680  01C08E  50E3               	movf	plusw1,w,c
 26681  01C090  2001               	addwfc	btemp^0,w,c
 26682  01C092  6E01               	movwf	btemp^0,c
 26683  01C094  0EFE               	movlw	-2
 26684  01C096  0060  F007  FFE3   	movff	btemp,plusw1
 26685  01C09C                     l13258:
 26686                           
 26687                           ;stkvar	_i @ sp[(-3)+0]
 26688  01C09C  0EFD               	movlw	-3
 26689  01C09E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26690  01C0A4  0EFE               	movlw	-2
 26691  01C0A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26692                           
 26693                           ;stkvar	_s @ sp[(-3)+-2]
 26694  01C0AC  0EFB               	movlw	-5
 26695  01C0AE  006F FF8C  F009    	movff	plusw1,btemp+8
 26696  01C0B4  0EFC               	movlw	-4
 26697  01C0B6  006F FF8C  F00A    	movff	plusw1,btemp+9
 26698  01C0BC  500B               	movf	(btemp+10)^0,w,c
 26699  01C0BE  2409               	addwf	(btemp+8)^0,w,c
 26700  01C0C0  6ED9               	movwf	fsr2l,c
 26701  01C0C2  500C               	movf	(btemp+11)^0,w,c
 26702  01C0C4  200A               	addwfc	(btemp+9)^0,w,c
 26703  01C0C6  6EDA               	movwf	fsr2h,c
 26704  01C0C8  50DF               	movf	indf2,w,c
 26705  01C0CA  6E0C               	movwf	(btemp+11)^0,c
 26706                           
 26707                           ;stkvar	_c @ sp[(-3)+2]
 26708  01C0CC  0EFF               	movlw	-1
 26709  01C0CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26710  01C0D4  0EFF               	movlw	-1
 26711  01C0D6  50E3               	movf	plusw1,w,c
 26712  01C0D8  A4D8               	btfss	status,2,c
 26713  01C0DA  D7C1               	goto	l13254
 26714                           
 26715                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 26716  01C0DC  0EF9               	movlw	249
 26717  01C0DE  26E1               	addwf	fsr1l,f,c
 26718  01C0E0  0EFF               	movlw	255
 26719  01C0E2  22E2               	addwfc	fsr1h,f,c
 26720  01C0E4  0012               	return		;funcret
 26721  01C0E6                     __end_of_fputs:
 26722                           	opt callstack 0
 26723                           
 26724 ;; *************** function _fputc *****************
 26725 ;; Defined at:
 26726 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 26727 ;; Parameters:    Size  Location     Type
 26728 ;;  c               2  [STACK] int 
 26729 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26730 ;;		 -> f(6), NULL(0), 
 26731 ;; Auto vars:     Size  Location     Type
 26732 ;;		None
 26733 ;; Return value:  Size  Location     Type
 26734 ;;                  2  [STACK] int 
 26735 ;; Registers used:
 26736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 26737 ;; Tracked objects:
 26738 ;;		On entry : 0/0
 26739 ;;		On exit  : 0/0
 26740 ;;		Unchanged: 0/0
 26741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26746 ;;Total ram usage:        0 bytes
 26747 ;; Hardware stack levels used:    1
 26748 ;; Hardware stack levels required when called:   17
 26749 ;; This function calls:
 26750 ;;		_putch
 26751 ;; This function is called by:
 26752 ;;		_pad
 26753 ;;		_stoa
 26754 ;;		_vfpfcnvrt
 26755 ;;		_fputs
 26756 ;; This function uses a reentrant model
 26757 ;;
 26758                           
 26759                           	psect	text96
 26760  01AAF8                     __ptext96:
 26761                           	opt callstack 0
 26762  01AAF8                     _fputc:
 26763                           	opt callstack 0
 26764                           
 26765                           ;stkvar	_fp @ sp[(0)+-4]
 26766                           
 26767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26768                           ;incstack = 0
 26769 ;; hardware stack exceeded
 26770  01AAF8  0EFC               	movlw	-4
 26771  01AAFA  006F FF8C  F001    	movff	plusw1,btemp
 26772  01AB00  0EFD               	movlw	-3
 26773  01AB02  50E3               	movf	plusw1,w,c
 26774  01AB04  1001               	iorwf	btemp^0,w,c
 26775  01AB06  B4D8               	btfsc	status,2,c
 26776  01AB08  D009               	goto	u11910
 26777                           
 26778                           ;stkvar	_fp @ sp[(0)+-4]
 26779  01AB0A  0EFC               	movlw	-4
 26780  01AB0C  006F FF8C  F001    	movff	plusw1,btemp
 26781  01AB12  0EFD               	movlw	-3
 26782  01AB14  50E3               	movf	plusw1,w,c
 26783  01AB16  1001               	iorwf	btemp^0,w,c
 26784  01AB18  A4D8               	btfss	status,2,c
 26785  01AB1A  D006               	goto	l13242
 26786  01AB1C                     u11910:
 26787                           
 26788                           ;stkvar	_c @ sp[(0)+-2]
 26789  01AB1C  0EFE               	movlw	-2
 26790  01AB1E  50E3               	movf	plusw1,w,c
 26791  01AB20  6EE6               	movwf	postinc1,c
 26792  01AB22  ECEA  F0EC         	call	_putch	;wreg free
 26793  01AB26  D075               	goto	l3462
 26794  01AB28                     l13242:
 26795                           
 26796                           ;stkvar	_fp @ sp[(0)+-4]
 26797  01AB28  0EFC               	movlw	-4
 26798  01AB2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 26799  01AB30  0EFD               	movlw	-3
 26800  01AB32  006F FF8C  F00C    	movff	plusw1,btemp+11
 26801  01AB38  0E04               	movlw	4
 26802  01AB3A  240B               	addwf	(btemp+10)^0,w,c
 26803  01AB3C  6ED9               	movwf	fsr2l,c
 26804  01AB3E  0E00               	movlw	0
 26805  01AB40  200C               	addwfc	(btemp+11)^0,w,c
 26806  01AB42  6EDA               	movwf	fsr2h,c
 26807  01AB44  50DE               	movf	postinc2,w,c
 26808  01AB46  10DE               	iorwf	postinc2,w,c
 26809  01AB48  B4D8               	btfsc	status,2,c
 26810  01AB4A  D026               	goto	u11930
 26811                           
 26812                           ;stkvar	_fp @ sp[(0)+-4]
 26813  01AB4C  0EFC               	movlw	-4
 26814  01AB4E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26815  01AB54  0EFD               	movlw	-3
 26816  01AB56  006F FF8C  F00C    	movff	plusw1,btemp+11
 26817  01AB5C  0E04               	movlw	4
 26818  01AB5E  240B               	addwf	(btemp+10)^0,w,c
 26819  01AB60  6ED9               	movwf	fsr2l,c
 26820  01AB62  0E00               	movlw	0
 26821  01AB64  200C               	addwfc	(btemp+11)^0,w,c
 26822  01AB66  6EDA               	movwf	fsr2h,c
 26823                           
 26824                           ;stkvar	_fp @ sp[(0)+-4]
 26825  01AB68  0EFC               	movlw	-4
 26826  01AB6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 26827  01AB70  0EFD               	movlw	-3
 26828  01AB72  006F FF8C  F00C    	movff	plusw1,btemp+11
 26829  01AB78  0E02               	movlw	2
 26830  01AB7A  240B               	addwf	(btemp+10)^0,w,c
 26831  01AB7C  6EE9               	movwf	fsr0l,c
 26832  01AB7E  0E00               	movlw	0
 26833  01AB80  200C               	addwfc	(btemp+11)^0,w,c
 26834  01AB82  6EEA               	movwf	fsr0h,c
 26835  01AB84  50DE               	movf	postinc2,w,c
 26836  01AB86  5CEE               	subwf	postinc0,w,c
 26837  01AB88  50EE               	movf	postinc0,w,c
 26838  01AB8A  0A80               	xorlw	128
 26839  01AB8C  6E01               	movwf	btemp^0,c
 26840  01AB8E  50DE               	movf	postinc2,w,c
 26841  01AB90  0A80               	xorlw	128
 26842  01AB92  5801               	subwfb	btemp^0,w,c
 26843  01AB94  B0D8               	btfsc	status,0,c
 26844  01AB96  D03D               	goto	l3462
 26845  01AB98                     u11930:
 26846                           
 26847                           ;stkvar	_c @ sp[(0)+-2]
 26848                           ;stkvar	_fp @ sp[(0)+-4]
 26849  01AB98  0EFC               	movlw	-4
 26850  01AB9A  006F FF8C  F00B    	movff	plusw1,btemp+10
 26851  01ABA0  0EFD               	movlw	-3
 26852  01ABA2  006F FF8C  F00C    	movff	plusw1,btemp+11
 26853  01ABA8  0E02               	movlw	2
 26854  01ABAA  240B               	addwf	(btemp+10)^0,w,c
 26855  01ABAC  6ED9               	movwf	fsr2l,c
 26856  01ABAE  0E00               	movlw	0
 26857  01ABB0  200C               	addwfc	(btemp+11)^0,w,c
 26858  01ABB2  6EDA               	movwf	fsr2h,c
 26859  01ABB4  006F FF78  F00B    	movff	postinc2,btemp+10
 26860  01ABBA  006F FF74  F00C    	movff	postdec2,btemp+11
 26861                           
 26862                           ;stkvar	_fp @ sp[(0)+-4]
 26863  01ABC0  0EFC               	movlw	-4
 26864  01ABC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26865  01ABC8  0EFD               	movlw	-3
 26866  01ABCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26867  01ABD0  006F FF78  F009    	movff	postinc2,btemp+8
 26868  01ABD6  006F FF74  F00A    	movff	postdec2,btemp+9
 26869  01ABDC  500B               	movf	(btemp+10)^0,w,c
 26870  01ABDE  2409               	addwf	(btemp+8)^0,w,c
 26871  01ABE0  6ED9               	movwf	fsr2l,c
 26872  01ABE2  500C               	movf	(btemp+11)^0,w,c
 26873  01ABE4  200A               	addwfc	(btemp+9)^0,w,c
 26874  01ABE6  6EDA               	movwf	fsr2h,c
 26875  01ABE8  0EFE               	movlw	-2
 26876  01ABEA  006F FF8F FFDF     	movff	plusw1,indf2
 26877                           
 26878                           ;stkvar	_fp @ sp[(0)+-4]
 26879  01ABF0  0EFC               	movlw	-4
 26880  01ABF2  006F FF8C  F00B    	movff	plusw1,btemp+10
 26881  01ABF8  0EFD               	movlw	-3
 26882  01ABFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26883  01AC00  0E02               	movlw	2
 26884  01AC02  240B               	addwf	(btemp+10)^0,w,c
 26885  01AC04  6ED9               	movwf	fsr2l,c
 26886  01AC06  0E00               	movlw	0
 26887  01AC08  200C               	addwfc	(btemp+11)^0,w,c
 26888  01AC0A  6EDA               	movwf	fsr2h,c
 26889  01AC0C  2ADE               	incf	postinc2,f,c
 26890  01AC0E  0E00               	movlw	0
 26891  01AC10  22DD               	addwfc	postdec2,f,c
 26892  01AC12                     l3462:
 26893                           
 26894                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 26895  01AC12  52E5               	movf	postdec1,f,c
 26896  01AC14  52E5               	movf	postdec1,f,c
 26897  01AC16  52E5               	movf	postdec1,f,c
 26898  01AC18  52E5               	movf	postdec1,f,c
 26899  01AC1A  0012               	return		;funcret
 26900  01AC1C                     __end_of_fputc:
 26901                           	opt callstack 0
 26902                           
 26903 ;; *************** function _putch *****************
 26904 ;; Defined at:
 26905 ;;		line 421 in file "eadog.c"
 26906 ;; Parameters:    Size  Location     Type
 26907 ;;  c               1  [STACK] unsigned char 
 26908 ;; Auto vars:     Size  Location     Type
 26909 ;;		None
 26910 ;; Return value:  Size  Location     Type
 26911 ;;                  1  [STACK] void 
 26912 ;; Registers used:
 26913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26914 ;; Tracked objects:
 26915 ;;		On entry : 0/0
 26916 ;;		On exit  : 0/0
 26917 ;;		Unchanged: 0/0
 26918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26923 ;;Total ram usage:        0 bytes
 26924 ;; Hardware stack levels used:    1
 26925 ;; Hardware stack levels required when called:   16
 26926 ;; This function calls:
 26927 ;;		_ringBufS_put_dma
 26928 ;; This function is called by:
 26929 ;;		_fputc
 26930 ;; This function uses a reentrant model
 26931 ;;
 26932                           
 26933                           	psect	text97
 26934  01D9D4                     __ptext97:
 26935                           	opt callstack 0
 26936  01D9D4                     _putch:
 26937                           	opt callstack 0
 26938                           
 26939                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 26940                           ;stkvar	_c @ sp[(0)+-1]
 26941                           
 26942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26943                           ;incstack = 0
 26944 ;; hardware stack exceeded
 26945  01D9D4  0EFF               	movlw	-1
 26946  01D9D6  50E3               	movf	plusw1,w,c
 26947  01D9D8  6EE6               	movwf	postinc1,c
 26948  01D9DA  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 26949  01D9E0  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 26950  01D9E6  ECDA  F0DE         	call	_ringBufS_put_dma	;wreg free
 26951                           
 26952                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 26953  01D9EA  52E5               	movf	postdec1,f,c
 26954  01D9EC  0012               	return		;funcret
 26955  01D9EE                     __end_of_putch:
 26956                           	opt callstack 0
 26957                           
 26958 ;; *************** function _ringBufS_put_dma *****************
 26959 ;; Defined at:
 26960 ;;		line 67 in file "ringbufs.c"
 26961 ;; Parameters:    Size  Location     Type
 26962 ;;  _this           2  [STACK] PTR struct ringBufS_t
 26963 ;;		 -> ring_buf1(67), 
 26964 ;;  c               1  [STACK] const unsigned char 
 26965 ;; Auto vars:     Size  Location     Type
 26966 ;;		None
 26967 ;; Return value:  Size  Location     Type
 26968 ;;                  1  [STACK] void 
 26969 ;; Registers used:
 26970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26971 ;; Tracked objects:
 26972 ;;		On entry : 0/0
 26973 ;;		On exit  : 0/0
 26974 ;;		Unchanged: 0/0
 26975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26980 ;;Total ram usage:        0 bytes
 26981 ;; Hardware stack levels used:    1
 26982 ;; Hardware stack levels required when called:   15
 26983 ;; This function calls:
 26984 ;;		Nothing
 26985 ;; This function is called by:
 26986 ;;		_putch
 26987 ;; This function uses a reentrant model
 26988 ;;
 26989                           
 26990                           	psect	text98
 26991  01BDB4                     __ptext98:
 26992                           	opt callstack 0
 26993  01BDB4                     _ringBufS_put_dma:
 26994                           	opt callstack 0
 26995                           
 26996                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 26997                           ;stkvar	__this @ sp[(0)+-2]
 26998                           
 26999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27000                           ;incstack = 0
 27001 ;; hardware stack exceeded
 27002  01BDB4  0EFE               	movlw	-2
 27003  01BDB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 27004  01BDBC  0EFF               	movlw	-1
 27005  01BDBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27006  01BDC4  0E42               	movlw	66
 27007  01BDC6  240B               	addwf	(btemp+10)^0,w,c
 27008  01BDC8  6ED9               	movwf	fsr2l,c
 27009  01BDCA  0E00               	movlw	0
 27010  01BDCC  200C               	addwfc	(btemp+11)^0,w,c
 27011  01BDCE  6EDA               	movwf	fsr2h,c
 27012  01BDD0  0E40               	movlw	64
 27013  01BDD2  60DF               	cpfslt	indf2,c
 27014  01BDD4  D040               	goto	l1724
 27015                           
 27016                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 27017                           ;stkvar	_c @ sp[(0)+-3]
 27018                           ;stkvar	__this @ sp[(0)+-2]
 27019  01BDD6  0EFE               	movlw	-2
 27020  01BDD8  006F FF8C  F00B    	movff	plusw1,btemp+10
 27021  01BDDE  0EFF               	movlw	-1
 27022  01BDE0  006F FF8C  F00C    	movff	plusw1,btemp+11
 27023  01BDE6  0E40               	movlw	64
 27024  01BDE8  240B               	addwf	(btemp+10)^0,w,c
 27025  01BDEA  6ED9               	movwf	fsr2l,c
 27026  01BDEC  0E00               	movlw	0
 27027  01BDEE  200C               	addwfc	(btemp+11)^0,w,c
 27028  01BDF0  6EDA               	movwf	fsr2h,c
 27029  01BDF2  50DF               	movf	indf2,w,c
 27030  01BDF4  6E0C               	movwf	(btemp+11)^0,c
 27031                           
 27032                           ;stkvar	__this @ sp[(0)+-2]
 27033  01BDF6  0EFE               	movlw	-2
 27034  01BDF8  006F FF8C  F009    	movff	plusw1,btemp+8
 27035  01BDFE  0EFF               	movlw	-1
 27036  01BE00  006F FF8C  F00A    	movff	plusw1,btemp+9
 27037  01BE06  500C               	movf	(btemp+11)^0,w,c
 27038  01BE08  2409               	addwf	(btemp+8)^0,w,c
 27039  01BE0A  6ED9               	movwf	fsr2l,c
 27040  01BE0C  0E00               	movlw	0
 27041  01BE0E  200A               	addwfc	(btemp+9)^0,w,c
 27042  01BE10  6EDA               	movwf	fsr2h,c
 27043  01BE12  0EFD               	movlw	-3
 27044  01BE14  006F FF8F FFDF     	movff	plusw1,indf2
 27045                           
 27046                           ;ringbufs.c: 71:   ++_this->head;
 27047                           ;stkvar	__this @ sp[(0)+-2]
 27048  01BE1A  0EFE               	movlw	-2
 27049  01BE1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 27050  01BE22  0EFF               	movlw	-1
 27051  01BE24  006F FF8C  F00C    	movff	plusw1,btemp+11
 27052  01BE2A  0E40               	movlw	64
 27053  01BE2C  240B               	addwf	(btemp+10)^0,w,c
 27054  01BE2E  6ED9               	movwf	fsr2l,c
 27055  01BE30  0E00               	movlw	0
 27056  01BE32  200C               	addwfc	(btemp+11)^0,w,c
 27057  01BE34  6EDA               	movwf	fsr2h,c
 27058  01BE36  2ADF               	incf	indf2,f,c
 27059                           
 27060                           ;ringbufs.c: 72:   ++_this->count;
 27061                           ;stkvar	__this @ sp[(0)+-2]
 27062  01BE38  0EFE               	movlw	-2
 27063  01BE3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 27064  01BE40  0EFF               	movlw	-1
 27065  01BE42  006F FF8C  F00C    	movff	plusw1,btemp+11
 27066  01BE48  0E42               	movlw	66
 27067  01BE4A  240B               	addwf	(btemp+10)^0,w,c
 27068  01BE4C  6ED9               	movwf	fsr2l,c
 27069  01BE4E  0E00               	movlw	0
 27070  01BE50  200C               	addwfc	(btemp+11)^0,w,c
 27071  01BE52  6EDA               	movwf	fsr2h,c
 27072  01BE54  2ADF               	incf	indf2,f,c
 27073  01BE56                     l1724:
 27074                           
 27075                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 27076  01BE56  52E5               	movf	postdec1,f,c
 27077  01BE58  52E5               	movf	postdec1,f,c
 27078  01BE5A  52E5               	movf	postdec1,f,c
 27079  01BE5C  0012               	return		;funcret
 27080  01BE5E                     __end_of_ringBufS_put_dma:
 27081                           	opt callstack 0
 27082                           
 27083 ;; *************** function _atoi *****************
 27084 ;; Defined at:
 27085 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 27086 ;; Parameters:    Size  Location     Type
 27087 ;;  s               2  [STACK] PTR const unsigned char 
 27088 ;;		 -> STR_93(127), STR_91(3), STR_90(3), STR_89(19), 
 27089 ;;		 -> STR_88(19), STR_87(19), STR_86(19), STR_85(19), 
 27090 ;;		 -> STR_84(19), STR_83(24), STR_82(15), STR_81(15), 
 27091 ;;		 -> STR_80(15), STR_79(10), STR_78(10), STR_77(19), 
 27092 ;;		 -> STR_76(19), STR_73(3), STR_72(3), STR_71(21), 
 27093 ;;		 -> STR_70(21), STR_69(21), STR_68(21), STR_67(21), 
 27094 ;;		 -> STR_66(21), STR_65(21), STR_64(21), STR_63(21), 
 27095 ;;		 -> STR_62(18), STR_61(21), STR_60(21), STR_59(21), 
 27096 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 27097 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 27098 ;;		 -> STR_50(21), STR_49(20), STR_48(21), STR_47(21), 
 27099 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 27100 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 27101 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 27102 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 27103 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 27104 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 27105 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 27106 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 27107 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 27108 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 27109 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 27110 ;;		 -> STR_1(21), 
 27111 ;; Auto vars:     Size  Location     Type
 27112 ;;  n               2  [STACK] int 
 27113 ;;  neg             2  [STACK] int 
 27114 ;; Return value:  Size  Location     Type
 27115 ;;                  2  [STACK] int 
 27116 ;; Registers used:
 27117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 27118 ;; Tracked objects:
 27119 ;;		On entry : 0/0
 27120 ;;		On exit  : 0/0
 27121 ;;		Unchanged: 0/0
 27122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27127 ;;Total ram usage:        0 bytes
 27128 ;; Hardware stack levels used:    1
 27129 ;; Hardware stack levels required when called:   16
 27130 ;; This function calls:
 27131 ;;		_isdigit
 27132 ;;		_isspace
 27133 ;; This function is called by:
 27134 ;;		_vfpfcnvrt
 27135 ;; This function uses a reentrant model
 27136 ;;
 27137                           
 27138                           	psect	text99
 27139  01860C                     __ptext99:
 27140                           	opt callstack 0
 27141  01860C                     _atoi:
 27142                           	opt callstack 0
 27143                           
 27144                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27145  01860C  0E09               	movlw	9
 27146  01860E  26E1               	addwf	fsr1l,f,c
 27147  018610  0E00               	movlw	0
 27148  018612  22E2               	addwfc	fsr1h,f,c
 27149                           
 27150                           ;stkvar	_n @ sp[(-9)+5]
 27151                           
 27152                           ;incstack = 0
 27153 ;; hardware stack exceeded
 27154  018614  0EFC               	movlw	-4
 27155  018616  6AE3               	clrf	plusw1,c
 27156  018618  0EFD               	movlw	-3
 27157  01861A  6AE3               	clrf	plusw1,c
 27158                           
 27159                           ;stkvar	_neg @ sp[(-9)+7]
 27160  01861C  0EFE               	movlw	-2
 27161  01861E  6AE3               	clrf	plusw1,c
 27162  018620  0EFF               	movlw	-1
 27163  018622  6AE3               	clrf	plusw1,c
 27164  018624  D011               	goto	l10172
 27165  018626                     l10170:
 27166                           
 27167                           ;stkvar	_s @ sp[(-9)+-2]
 27168  018626  0EF5               	movlw	-11
 27169  018628  50E3               	movf	plusw1,w,c
 27170  01862A  0F01               	addlw	1
 27171  01862C  6E01               	movwf	btemp^0,c
 27172  01862E  0EF5               	movlw	-11
 27173  018630  0060  F007  FFE3   	movff	btemp,plusw1
 27174  018636  6A01               	clrf	btemp^0,c
 27175  018638  0EF6               	movlw	-10
 27176  01863A  50E3               	movf	plusw1,w,c
 27177  01863C  2001               	addwfc	btemp^0,w,c
 27178  01863E  6E01               	movwf	btemp^0,c
 27179  018640  0EF6               	movlw	-10
 27180  018642  0060  F007  FFE3   	movff	btemp,plusw1
 27181  018648                     l10172:
 27182                           
 27183                           ;stkvar	_atoi$6747 @ sp[(-9)+4]
 27184  018648  0EFB               	movlw	-5
 27185  01864A  6AE3               	clrf	plusw1,c
 27186  01864C  2AE3               	incf	plusw1,f,c
 27187                           
 27188                           ;stkvar	_s @ sp[(-9)+-2]
 27189  01864E  50E1               	movf	fsr1l,w,c
 27190  018650  0FF5               	addlw	-11
 27191  018652  6ED9               	movwf	fsr2l,c
 27192  018654  50E2               	movf	fsr1h,w,c
 27193  018656  6EDA               	movwf	fsr2h,c
 27194  018658  0EFF               	movlw	255
 27195  01865A  22DA               	addwfc	fsr2h,f,c
 27196  01865C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27197  018662  006F FF77 FFF7     	movff	postdec2,tblptrh
 27198  018668                     	if	0	;tblptru may be non-zero
 27199  018668                     	endif
 27200  018668                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27201  018668  0E00               	movlw	low (__mediumconst shr (0+16))
 27202  01866A  6EF8               	movwf	tblptru,c
 27203  01866C                     	endif
 27204  01866C  0008               	tblrd		*
 27205  01866E  50F5               	movf	tablat,w,c
 27206  018670  0A20               	xorlw	32
 27207  018672  B4D8               	btfsc	status,2,c
 27208  018674  D023               	goto	l10180
 27209  018676  0EF7               	movlw	247
 27210  018678  6E0B               	movwf	(btemp+10)^0,c
 27211  01867A  0EFF               	movlw	255
 27212  01867C  6E0C               	movwf	(btemp+11)^0,c
 27213                           
 27214                           ;stkvar	_s @ sp[(-9)+-2]
 27215  01867E  50E1               	movf	fsr1l,w,c
 27216  018680  0FF5               	addlw	-11
 27217  018682  6ED9               	movwf	fsr2l,c
 27218  018684  50E2               	movf	fsr1h,w,c
 27219  018686  6EDA               	movwf	fsr2h,c
 27220  018688  0EFF               	movlw	255
 27221  01868A  22DA               	addwfc	fsr2h,f,c
 27222  01868C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27223  018692  006F FF77 FFF7     	movff	postdec2,tblptrh
 27224  018698                     	if	0	;tblptru may be non-zero
 27225  018698                     	endif
 27226  018698                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27227  018698  0E00               	movlw	low (__mediumconst shr (0+16))
 27228  01869A  6EF8               	movwf	tblptru,c
 27229  01869C                     	endif
 27230  01869C  0008               	tblrd		*
 27231  01869E  50F5               	movf	tablat,w,c
 27232  0186A0  6E09               	movwf	(btemp+8)^0,c
 27233  0186A2  6A0A               	clrf	(btemp+9)^0,c
 27234  0186A4  500B               	movf	(btemp+10)^0,w,c
 27235  0186A6  2609               	addwf	(btemp+8)^0,f,c
 27236  0186A8  500C               	movf	(btemp+11)^0,w,c
 27237  0186AA  220A               	addwfc	(btemp+9)^0,f,c
 27238  0186AC  500A               	movf	(btemp+9)^0,w,c
 27239  0186AE  E104               	bnz	u9120
 27240  0186B0  0E05               	movlw	5
 27241  0186B2  5C09               	subwf	(btemp+8)^0,w,c
 27242  0186B4  A0D8               	btfss	status,0,c
 27243  0186B6  D002               	goto	l10180
 27244  0186B8                     u9120:
 27245                           
 27246                           ;stkvar	_atoi$6747 @ sp[(-9)+4]
 27247  0186B8  0EFB               	movlw	-5
 27248  0186BA  6AE3               	clrf	plusw1,c
 27249  0186BC                     l10180:
 27250                           
 27251                           ;stkvar	_atoi$6747 @ sp[(-9)+4]
 27252  0186BC  0EFB               	movlw	-5
 27253  0186BE  50E3               	movf	plusw1,w,c
 27254  0186C0  6E0B               	movwf	(btemp+10)^0,c
 27255  0186C2  6A0C               	clrf	(btemp+11)^0,c
 27256                           
 27257                           ;stkvar	_atoi$6746 @ sp[(-9)+2]
 27258  0186C4  0EF9               	movlw	-7
 27259  0186C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27260  0186CC  0EFA               	movlw	-6
 27261  0186CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27262                           
 27263                           ;stkvar	_atoi$6746 @ sp[(-9)+2]
 27264  0186D4  0EF9               	movlw	-7
 27265  0186D6  006F FF8C  F001    	movff	plusw1,btemp
 27266  0186DC  0EFA               	movlw	-6
 27267  0186DE  50E3               	movf	plusw1,w,c
 27268  0186E0  1001               	iorwf	btemp^0,w,c
 27269  0186E2  B4D8               	btfsc	status,2,c
 27270  0186E4  D01F               	goto	l10190
 27271  0186E6  D79F               	goto	l10170
 27272  0186E8                     l10186:
 27273  0186E8  0E01               	movlw	1
 27274  0186EA  6E0B               	movwf	(btemp+10)^0,c
 27275  0186EC  0E00               	movlw	0
 27276  0186EE  6E0C               	movwf	(btemp+11)^0,c
 27277                           
 27278                           ;stkvar	_neg @ sp[(-9)+7]
 27279  0186F0  0EFE               	movlw	-2
 27280  0186F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27281  0186F8  0EFF               	movlw	-1
 27282  0186FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27283  018700                     l10188:
 27284                           
 27285                           ;stkvar	_s @ sp[(-9)+-2]
 27286  018700  0EF5               	movlw	-11
 27287  018702  50E3               	movf	plusw1,w,c
 27288  018704  0F01               	addlw	1
 27289  018706  6E01               	movwf	btemp^0,c
 27290  018708  0EF5               	movlw	-11
 27291  01870A  0060  F007  FFE3   	movff	btemp,plusw1
 27292  018710  6A01               	clrf	btemp^0,c
 27293  018712  0EF6               	movlw	-10
 27294  018714  50E3               	movf	plusw1,w,c
 27295  018716  2001               	addwfc	btemp^0,w,c
 27296  018718  6E01               	movwf	btemp^0,c
 27297  01871A  0EF6               	movlw	-10
 27298  01871C  0060  F007  FFE3   	movff	btemp,plusw1
 27299  018722  D053               	goto	l10196
 27300  018724                     l10190:
 27301                           
 27302                           ;stkvar	_s @ sp[(-9)+-2]
 27303  018724  50E1               	movf	fsr1l,w,c
 27304  018726  0FF5               	addlw	-11
 27305  018728  6ED9               	movwf	fsr2l,c
 27306  01872A  50E2               	movf	fsr1h,w,c
 27307  01872C  6EDA               	movwf	fsr2h,c
 27308  01872E  0EFF               	movlw	255
 27309  018730  22DA               	addwfc	fsr2h,f,c
 27310  018732  006F FF7B FFF6     	movff	postinc2,tblptrl
 27311  018738  006F FF77 FFF7     	movff	postdec2,tblptrh
 27312  01873E                     	if	0	;tblptru may be non-zero
 27313  01873E                     	endif
 27314  01873E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27315  01873E  0E00               	movlw	low (__mediumconst shr (0+16))
 27316  018740  6EF8               	movwf	tblptru,c
 27317  018742                     	endif
 27318  018742  0008               	tblrd		*
 27319  018744  50F5               	movf	tablat,w,c
 27320  018746  6E0B               	movwf	(btemp+10)^0,c
 27321  018748  6A0C               	clrf	(btemp+11)^0,c
 27322                           
 27323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27324                           ; Switch size 1, requested type "simple"
 27325                           ; Number of cases is 1, Range of values is 0 to 0
 27326                           ; switch strategies available:
 27327                           ; Name         Instructions Cycles
 27328                           ; simple_byte            4     3 (average)
 27329                           ;	Chosen strategy is simple_byte
 27330  01874A  500C               	movf	(btemp+11)^0,w,c
 27331  01874C  0A00               	xorlw	0	; case 0
 27332  01874E  A4D8               	btfss	status,2,c
 27333  018750  D03C               	goto	l10196
 27334                           
 27335                           ; Switch size 1, requested type "simple"
 27336                           ; Number of cases is 2, Range of values is 43 to 45
 27337                           ; switch strategies available:
 27338                           ; Name         Instructions Cycles
 27339                           ; simple_byte            7     4 (average)
 27340                           ;	Chosen strategy is simple_byte
 27341  018752  500B               	movf	(btemp+10)^0,w,c
 27342  018754  0A2B               	xorlw	43	; case 43
 27343  018756  B4D8               	btfsc	status,2,c
 27344  018758  D7D3               	goto	l10188
 27345  01875A  0A06               	xorlw	6	; case 45
 27346  01875C  B4D8               	btfsc	status,2,c
 27347  01875E  D7C4               	goto	l10186
 27348  018760  D034               	goto	l10196
 27349  018762                     l10192:
 27350                           
 27351                           ;stkvar	_n @ sp[(-9)+5]
 27352  018762  0EFC               	movlw	-4
 27353  018764  006F FF8C  F00B    	movff	plusw1,btemp+10
 27354  01876A  0EFD               	movlw	-3
 27355  01876C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27356  018772  0E0A               	movlw	10
 27357  018774  020B               	mulwf	(btemp+10)^0,c
 27358  018776  006F FFCC  F009    	movff	prodl,btemp+8
 27359  01877C  006F FFD0  F00A    	movff	prodh,btemp+9
 27360  018782  020C               	mulwf	(btemp+11)^0,c
 27361  018784  50F3               	movf	prodl,w,c
 27362  018786  260A               	addwf	(btemp+9)^0,f,c
 27363                           
 27364                           ;stkvar	_s @ sp[(-9)+-2]
 27365  018788  50E1               	movf	fsr1l,w,c
 27366  01878A  0FF5               	addlw	-11
 27367  01878C  6ED9               	movwf	fsr2l,c
 27368  01878E  50E2               	movf	fsr1h,w,c
 27369  018790  6EDA               	movwf	fsr2h,c
 27370  018792  0EFF               	movlw	255
 27371  018794  22DA               	addwfc	fsr2h,f,c
 27372  018796  006F FF7B FFF6     	movff	postinc2,tblptrl
 27373  01879C  006F FF77 FFF7     	movff	postdec2,tblptrh
 27374  0187A2                     	if	0	;tblptru may be non-zero
 27375  0187A2                     	endif
 27376  0187A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27377  0187A2  0E00               	movlw	low (__mediumconst shr (0+16))
 27378  0187A4  6EF8               	movwf	tblptru,c
 27379  0187A6                     	endif
 27380  0187A6  0008               	tblrd		*
 27381  0187A8  50F5               	movf	tablat,w,c
 27382  0187AA  5E09               	subwf	(btemp+8)^0,f,c
 27383  0187AC  0E00               	movlw	0
 27384  0187AE  5A0A               	subwfb	(btemp+9)^0,f,c
 27385  0187B0  0E30               	movlw	48
 27386  0187B2  2609               	addwf	(btemp+8)^0,f,c
 27387  0187B4  0E00               	movlw	0
 27388  0187B6  220A               	addwfc	(btemp+9)^0,f,c
 27389                           
 27390                           ;stkvar	_n @ sp[(-9)+5]
 27391  0187B8  0EFC               	movlw	-4
 27392  0187BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 27393  0187C0  0EFD               	movlw	-3
 27394  0187C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27395  0187C8  D79B               	goto	l10188
 27396  0187CA                     l10196:
 27397  0187CA  0ED0               	movlw	208
 27398  0187CC  6E0B               	movwf	(btemp+10)^0,c
 27399  0187CE  0EFF               	movlw	255
 27400  0187D0  6E0C               	movwf	(btemp+11)^0,c
 27401                           
 27402                           ;stkvar	_s @ sp[(-9)+-2]
 27403  0187D2  50E1               	movf	fsr1l,w,c
 27404  0187D4  0FF5               	addlw	-11
 27405  0187D6  6ED9               	movwf	fsr2l,c
 27406  0187D8  50E2               	movf	fsr1h,w,c
 27407  0187DA  6EDA               	movwf	fsr2h,c
 27408  0187DC  0EFF               	movlw	255
 27409  0187DE  22DA               	addwfc	fsr2h,f,c
 27410  0187E0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27411  0187E6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27412  0187EC                     	if	0	;tblptru may be non-zero
 27413  0187EC                     	endif
 27414  0187EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27415  0187EC  0E00               	movlw	low (__mediumconst shr (0+16))
 27416  0187EE  6EF8               	movwf	tblptru,c
 27417  0187F0                     	endif
 27418  0187F0  0008               	tblrd		*
 27419  0187F2  50F5               	movf	tablat,w,c
 27420  0187F4  6E09               	movwf	(btemp+8)^0,c
 27421  0187F6  6A0A               	clrf	(btemp+9)^0,c
 27422  0187F8  500B               	movf	(btemp+10)^0,w,c
 27423  0187FA  2609               	addwf	(btemp+8)^0,f,c
 27424  0187FC  500C               	movf	(btemp+11)^0,w,c
 27425  0187FE  220A               	addwfc	(btemp+9)^0,f,c
 27426  018800  500A               	movf	(btemp+9)^0,w,c
 27427  018802  E106               	bnz	u9140
 27428  018804  0E0A               	movlw	10
 27429  018806  5C09               	subwf	(btemp+8)^0,w,c
 27430  018808  B0D8               	btfsc	status,0,c
 27431  01880A  D002               	goto	u9140
 27432  01880C  0E01               	movlw	1
 27433  01880E  D001               	goto	u9150
 27434  018810                     u9140:
 27435  018810  0E00               	movlw	0
 27436  018812                     u9150:
 27437  018812  6E0B               	movwf	(btemp+10)^0,c
 27438  018814  6A0C               	clrf	(btemp+11)^0,c
 27439                           
 27440                           ;stkvar	_atoi$6748 @ sp[(-9)+0]
 27441  018816  0EF7               	movlw	-9
 27442  018818  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27443  01881E  0EF8               	movlw	-8
 27444  018820  0060  F033  FFE3   	movff	btemp+11,plusw1
 27445                           
 27446                           ;stkvar	_atoi$6748 @ sp[(-9)+0]
 27447  018826  0EF7               	movlw	-9
 27448  018828  006F FF8C  F001    	movff	plusw1,btemp
 27449  01882E  0EF8               	movlw	-8
 27450  018830  50E3               	movf	plusw1,w,c
 27451  018832  1001               	iorwf	btemp^0,w,c
 27452  018834  A4D8               	btfss	status,2,c
 27453  018836  D795               	goto	l10192
 27454                           
 27455                           ;stkvar	_neg @ sp[(-9)+7]
 27456  018838  0EFE               	movlw	-2
 27457  01883A  006F FF8C  F001    	movff	plusw1,btemp
 27458  018840  0EFF               	movlw	-1
 27459  018842  50E3               	movf	plusw1,w,c
 27460  018844  1001               	iorwf	btemp^0,w,c
 27461  018846  A4D8               	btfss	status,2,c
 27462  018848  D00E               	goto	l10206
 27463                           
 27464                           ;stkvar	_n @ sp[(-9)+5]
 27465  01884A  0EFC               	movlw	-4
 27466  01884C  006F FF8C  F001    	movff	plusw1,btemp
 27467  018852  1E01               	comf	btemp^0,f,c
 27468  018854  0EFD               	movlw	-3
 27469  018856  006F FF8C  F002    	movff	plusw1,btemp+1
 27470  01885C  1E02               	comf	(btemp+1)^0,f,c
 27471  01885E  2A01               	incf	btemp^0,f,c
 27472  018860  B4D8               	btfsc	status,2,c
 27473  018862  2A02               	incf	(btemp+1)^0,f,c
 27474  018864  D008               	goto	l3393
 27475  018866                     l10206:
 27476                           
 27477                           ;stkvar	_n @ sp[(-9)+5]
 27478  018866  0EFC               	movlw	-4
 27479  018868  006F FF8C  F001    	movff	plusw1,btemp
 27480  01886E  0EFD               	movlw	-3
 27481  018870  006F FF8C  F002    	movff	plusw1,btemp+1
 27482  018876                     l3393:
 27483                           
 27484                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 27485  018876  0EF5               	movlw	245
 27486  018878  26E1               	addwf	fsr1l,f,c
 27487  01887A  0EFF               	movlw	255
 27488  01887C  22E2               	addwfc	fsr1h,f,c
 27489  01887E  0012               	return		;funcret
 27490  018880                     __end_of_atoi:
 27491                           	opt callstack 0
 27492                           
 27493 ;; *************** function _isspace *****************
 27494 ;; Defined at:
 27495 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 27496 ;; Parameters:    Size  Location     Type
 27497 ;;  c               2  [STACK] int 
 27498 ;; Auto vars:     Size  Location     Type
 27499 ;;		None
 27500 ;; Return value:  Size  Location     Type
 27501 ;;                  2  [STACK] int 
 27502 ;; Registers used:
 27503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27504 ;; Tracked objects:
 27505 ;;		On entry : 0/0
 27506 ;;		On exit  : 0/0
 27507 ;;		Unchanged: 0/0
 27508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27513 ;;Total ram usage:        0 bytes
 27514 ;; Hardware stack levels used:    1
 27515 ;; Hardware stack levels required when called:   15
 27516 ;; This function calls:
 27517 ;;		Nothing
 27518 ;; This function is called by:
 27519 ;;		_atoi
 27520 ;; This function uses a reentrant model
 27521 ;;
 27522                           
 27523                           	psect	text100
 27524  01CC24                     __ptext100:
 27525                           	opt callstack 0
 27526  01CC24                     _isspace:
 27527                           	opt callstack 0
 27528                           
 27529                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27530  01CC24  52E6               	movf	postinc1,f,c
 27531                           
 27532                           ;stkvar	_isspace$6797 @ sp[(-1)+0]
 27533                           
 27534                           ;incstack = 0
 27535 ;; hardware stack exceeded
 27536  01CC26  0EFF               	movlw	-1
 27537  01CC28  6AE3               	clrf	plusw1,c
 27538  01CC2A  2AE3               	incf	plusw1,f,c
 27539                           
 27540                           ;stkvar	_c @ sp[(-1)+-2]
 27541  01CC2C  0EFD               	movlw	-3
 27542  01CC2E  006F FF8C  F001    	movff	plusw1,btemp
 27543  01CC34  0E20               	movlw	32
 27544  01CC36  1801               	xorwf	btemp^0,w,c
 27545  01CC38  E104               	bnz	u8010
 27546  01CC3A  0EFE               	movlw	-2
 27547  01CC3C  50E3               	movf	plusw1,w,c
 27548  01CC3E  B4D8               	btfsc	status,2,c
 27549  01CC40  D012               	goto	l9590
 27550  01CC42                     u8010:
 27551                           
 27552                           ;stkvar	_c @ sp[(-1)+-2]
 27553  01CC42  0EFD               	movlw	-3
 27554  01CC44  50E3               	movf	plusw1,w,c
 27555  01CC46  0FF7               	addlw	247
 27556  01CC48  6E0B               	movwf	(btemp+10)^0,c
 27557  01CC4A  0EFE               	movlw	-2
 27558  01CC4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27559  01CC52  0EFF               	movlw	255
 27560  01CC54  220C               	addwfc	(btemp+11)^0,f,c
 27561  01CC56  500C               	movf	(btemp+11)^0,w,c
 27562  01CC58  E104               	bnz	u8020
 27563  01CC5A  0E05               	movlw	5
 27564  01CC5C  5C0B               	subwf	(btemp+10)^0,w,c
 27565  01CC5E  A0D8               	btfss	status,0,c
 27566  01CC60  D002               	goto	l9590
 27567  01CC62                     u8020:
 27568                           
 27569                           ;stkvar	_isspace$6797 @ sp[(-1)+0]
 27570  01CC62  0EFF               	movlw	-1
 27571  01CC64  6AE3               	clrf	plusw1,c
 27572  01CC66                     l9590:
 27573                           
 27574                           ;stkvar	_isspace$6797 @ sp[(-1)+0]
 27575  01CC66  0EFF               	movlw	-1
 27576  01CC68  50E3               	movf	plusw1,w,c
 27577  01CC6A  6E01               	movwf	btemp^0,c
 27578  01CC6C  6A02               	clrf	(btemp+1)^0,c
 27579                           
 27580                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27581  01CC6E  52E5               	movf	postdec1,f,c
 27582  01CC70  52E5               	movf	postdec1,f,c
 27583  01CC72  52E5               	movf	postdec1,f,c
 27584  01CC74  0012               	return		;funcret
 27585  01CC76                     __end_of_isspace:
 27586                           	opt callstack 0
 27587                           
 27588 ;; *************** function _isdigit *****************
 27589 ;; Defined at:
 27590 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 27591 ;; Parameters:    Size  Location     Type
 27592 ;;  c               2  [STACK] int 
 27593 ;; Auto vars:     Size  Location     Type
 27594 ;;		None
 27595 ;; Return value:  Size  Location     Type
 27596 ;;                  2  [STACK] int 
 27597 ;; Registers used:
 27598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27599 ;; Tracked objects:
 27600 ;;		On entry : 0/0
 27601 ;;		On exit  : 0/0
 27602 ;;		Unchanged: 0/0
 27603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27608 ;;Total ram usage:        0 bytes
 27609 ;; Hardware stack levels used:    1
 27610 ;; Hardware stack levels required when called:   15
 27611 ;; This function calls:
 27612 ;;		Nothing
 27613 ;; This function is called by:
 27614 ;;		_vfpfcnvrt
 27615 ;;		_atoi
 27616 ;; This function uses a reentrant model
 27617 ;;
 27618                           
 27619                           	psect	text101
 27620  01D45A                     __ptext101:
 27621                           	opt callstack 0
 27622  01D45A                     _isdigit:
 27623                           	opt callstack 0
 27624                           
 27625                           ;stkvar	_c @ sp[(0)+-2]
 27626                           
 27627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27628                           ;incstack = 0
 27629 ;; hardware stack exceeded
 27630  01D45A  0EFE               	movlw	-2
 27631  01D45C  50E3               	movf	plusw1,w,c
 27632  01D45E  0FD0               	addlw	208
 27633  01D460  6E0B               	movwf	(btemp+10)^0,c
 27634  01D462  0EFF               	movlw	-1
 27635  01D464  006F FF8C  F00C    	movff	plusw1,btemp+11
 27636  01D46A  0EFF               	movlw	255
 27637  01D46C  220C               	addwfc	(btemp+11)^0,f,c
 27638  01D46E  500C               	movf	(btemp+11)^0,w,c
 27639  01D470  E106               	bnz	u6860
 27640  01D472  0E0A               	movlw	10
 27641  01D474  5C0B               	subwf	(btemp+10)^0,w,c
 27642  01D476  B0D8               	btfsc	status,0,c
 27643  01D478  D002               	goto	u6860
 27644  01D47A  0E01               	movlw	1
 27645  01D47C  D001               	goto	u6870
 27646  01D47E                     u6860:
 27647  01D47E  0E00               	movlw	0
 27648  01D480                     u6870:
 27649  01D480  6E01               	movwf	btemp^0,c
 27650  01D482  6A02               	clrf	(btemp+1)^0,c
 27651                           
 27652                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27653  01D484  52E5               	movf	postdec1,f,c
 27654  01D486  52E5               	movf	postdec1,f,c
 27655  01D488  0012               	return		;funcret
 27656  01D48A                     __end_of_isdigit:
 27657                           	opt callstack 0
 27658                           
 27659 ;; *************** function _set_vterm *****************
 27660 ;; Defined at:
 27661 ;;		line 107 in file "mconfig.c"
 27662 ;; Parameters:    Size  Location     Type
 27663 ;;  vterm           1  [STACK] const unsigned char 
 27664 ;; Auto vars:     Size  Location     Type
 27665 ;;		None
 27666 ;; Return value:  Size  Location     Type
 27667 ;;                  1  [STACK] unsigned char 
 27668 ;; Registers used:
 27669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 27670 ;; Tracked objects:
 27671 ;;		On entry : 0/2
 27672 ;;		On exit  : 0/0
 27673 ;;		Unchanged: 0/0
 27674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27679 ;;Total ram usage:        0 bytes
 27680 ;; Hardware stack levels used:    1
 27681 ;; Hardware stack levels required when called:   15
 27682 ;; This function calls:
 27683 ;;		Nothing
 27684 ;; This function is called by:
 27685 ;;		_main
 27686 ;;		_check_help
 27687 ;; This function uses a reentrant model
 27688 ;;
 27689                           
 27690                           	psect	text102
 27691  01D97A                     __ptext102:
 27692                           	opt callstack 0
 27693  01D97A                     _set_vterm:
 27694                           	opt callstack 15
 27695                           
 27696                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 27697                           ;stkvar	_vterm @ sp[(0)+-1]
 27698                           
 27699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27700                           ;incstack = 0
 27701  01D97A  0EFF               	movlw	-1
 27702  01D97C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27703  01D982  0E03               	movlw	3
 27704  01D984  160C               	andwf	(btemp+11)^0,f,c
 27705  01D986  EE22  F30A         	lfsr	2,_D+480
 27706  01D98A  50DF               	movf	223,w,c
 27707  01D98C  180C               	xorwf	(btemp+11)^0,w,c
 27708  01D98E  0BFE               	andlw	-2
 27709  01D990  180C               	xorwf	(btemp+11)^0,w,c
 27710  01D992  6EDF               	movwf	223,c
 27711                           
 27712                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 27713  01D994  52E5               	movf	postdec1,f,c
 27714  01D996  0012               	return		;funcret
 27715  01D998                     __end_of_set_vterm:
 27716                           	opt callstack 0
 27717                           
 27718 ;; *************** function _set_temp_display_help *****************
 27719 ;; Defined at:
 27720 ;;		line 211 in file "mconfig.c"
 27721 ;; Parameters:    Size  Location     Type
 27722 ;;  new_response    1  [STACK] const enum E16524
 27723 ;; Auto vars:     Size  Location     Type
 27724 ;;		None
 27725 ;; Return value:  Size  Location     Type
 27726 ;;                  1  [STACK] enum E16524
 27727 ;; Registers used:
 27728 ;;		wreg, fsr1l, fsr1h
 27729 ;; Tracked objects:
 27730 ;;		On entry : 0/1
 27731 ;;		On exit  : 3F/1
 27732 ;;		Unchanged: 0/0
 27733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27738 ;;Total ram usage:        0 bytes
 27739 ;; Hardware stack levels used:    1
 27740 ;; Hardware stack levels required when called:   15
 27741 ;; This function calls:
 27742 ;;		Nothing
 27743 ;; This function is called by:
 27744 ;;		_check_help
 27745 ;; This function uses a reentrant model
 27746 ;;
 27747                           
 27748                           	psect	text103
 27749  01DAFA                     __ptext103:
 27750                           	opt callstack 0
 27751  01DAFA                     _set_temp_display_help:
 27752                           	opt callstack 14
 27753                           
 27754                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 27755                           
 27756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27757                           ;incstack = 0
 27758  01DAFA  0101               	movlb	1	; () banked
 27759  01DAFC  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 27760                           
 27761                           ; BSR set to: 1
 27762                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 27763                           ;stkvar	_new_response_info @ sp[(0)+-1]
 27764  01DAFE  0EFF               	movlw	-1
 27765  01DB00  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 27766                           
 27767                           ; BSR set to: 1
 27768                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 27769  01DB06  52E5               	movf	postdec1,f,c
 27770  01DB08  0012               	return		;funcret
 27771  01DB0A                     __end_of_set_temp_display_help:
 27772                           	opt callstack 0
 27773                           
 27774 ;; *************** function _set_display_info *****************
 27775 ;; Defined at:
 27776 ;;		line 200 in file "mconfig.c"
 27777 ;; Parameters:    Size  Location     Type
 27778 ;;  new_response    1  [STACK] const enum E16524
 27779 ;; Auto vars:     Size  Location     Type
 27780 ;;		None
 27781 ;; Return value:  Size  Location     Type
 27782 ;;                  1  [STACK] enum E17009
 27783 ;; Registers used:
 27784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27785 ;; Tracked objects:
 27786 ;;		On entry : 0/1
 27787 ;;		On exit  : 0/0
 27788 ;;		Unchanged: 0/0
 27789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27794 ;;Total ram usage:        0 bytes
 27795 ;; Hardware stack levels used:    1
 27796 ;; Hardware stack levels required when called:   16
 27797 ;; This function calls:
 27798 ;;		_TimerDone
 27799 ;; This function is called by:
 27800 ;;		_main
 27801 ;;		_check_help
 27802 ;; This function uses a reentrant model
 27803 ;;
 27804                           
 27805                           	psect	text104
 27806  01D998                     __ptext104:
 27807                           	opt callstack 0
 27808  01D998                     _set_display_info:
 27809                           	opt callstack 14
 27810                           
 27811                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 27812                           
 27813                           ; BSR set to: 1
 27814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27815                           ;incstack = 0
 27816  01D998  0E07               	movlw	7
 27817  01D99A  6EE6               	movwf	postinc1,c
 27818  01D99C  ECC7  F0EA         	call	_TimerDone	;wreg free
 27819  01D9A0  5001               	movf	btemp^0,w,c
 27820  01D9A2  B4D8               	btfsc	status,2,c
 27821  01D9A4  D006               	goto	l1859
 27822                           
 27823                           ;mconfig.c: 205:   old_info = V.response.info;
 27824  01D9A6  0101               	movlb	1	; () banked
 27825  01D9A8  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 27826                           
 27827                           ; BSR set to: 1
 27828                           ;mconfig.c: 206:   V.response.info = new_response_info;
 27829                           ;stkvar	_new_response_info @ sp[(0)+-1]
 27830  01D9AA  0EFF               	movlw	-1
 27831  01D9AC  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 27832  01D9B2                     l1859:
 27833                           
 27834                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 27835  01D9B2  52E5               	movf	postdec1,f,c
 27836  01D9B4  0012               	return		;funcret
 27837  01D9B6                     __end_of_set_display_info:
 27838                           	opt callstack 0
 27839                           
 27840 ;; *************** function _mode_lamp_dim *****************
 27841 ;; Defined at:
 27842 ;;		line 13 in file "mconfig.c"
 27843 ;; Parameters:    Size  Location     Type
 27844 ;;  level           2  [STACK] const unsigned short 
 27845 ;; Auto vars:     Size  Location     Type
 27846 ;;		None
 27847 ;; Return value:  Size  Location     Type
 27848 ;;                  1  [STACK] void 
 27849 ;; Registers used:
 27850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 27851 ;; Tracked objects:
 27852 ;;		On entry : 0/1
 27853 ;;		On exit  : 0/0
 27854 ;;		Unchanged: 0/0
 27855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27860 ;;Total ram usage:        0 bytes
 27861 ;; Hardware stack levels used:    1
 27862 ;; Hardware stack levels required when called:   16
 27863 ;; This function calls:
 27864 ;;		_PWM8_LoadDutyValue
 27865 ;; This function is called by:
 27866 ;;		_main
 27867 ;;		_check_help
 27868 ;; This function uses a reentrant model
 27869 ;;
 27870                           
 27871                           	psect	text105
 27872  01DA0A                     __ptext105:
 27873                           	opt callstack 0
 27874  01DA0A                     _mode_lamp_dim:
 27875                           	opt callstack 14
 27876                           
 27877                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 27878                           ;stkvar	_level @ sp[(0)+-2]
 27879                           
 27880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27881                           ;incstack = 0
 27882  01DA0A  0EFE               	movlw	-2
 27883  01DA0C  006F FF8F FFE6     	movff	plusw1,postinc1
 27884  01DA12  006F FF8F FFE6     	movff	plusw1,postinc1
 27885  01DA18  ECF6  F0E7         	call	_PWM8_LoadDutyValue	;wreg free
 27886                           
 27887                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 27888  01DA1C  52E5               	movf	postdec1,f,c
 27889  01DA1E  52E5               	movf	postdec1,f,c
 27890  01DA20  0012               	return		;funcret
 27891  01DA22                     __end_of_mode_lamp_dim:
 27892                           	opt callstack 0
 27893                           
 27894 ;; *************** function _mode_lamp_bright *****************
 27895 ;; Defined at:
 27896 ;;		line 18 in file "mconfig.c"
 27897 ;; Parameters:    Size  Location     Type
 27898 ;;		None
 27899 ;; Auto vars:     Size  Location     Type
 27900 ;;		None
 27901 ;; Return value:  Size  Location     Type
 27902 ;;                  1  [STACK] void 
 27903 ;; Registers used:
 27904 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 27905 ;; Tracked objects:
 27906 ;;		On entry : 0/0
 27907 ;;		On exit  : 0/0
 27908 ;;		Unchanged: 0/0
 27909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27914 ;;Total ram usage:        0 bytes
 27915 ;; Hardware stack levels used:    1
 27916 ;; Hardware stack levels required when called:   16
 27917 ;; This function calls:
 27918 ;;		_PWM8_LoadDutyValue
 27919 ;; This function is called by:
 27920 ;;		_check_help
 27921 ;; This function uses a reentrant model
 27922 ;;
 27923                           
 27924                           	psect	text106
 27925  01DB28                     __ptext106:
 27926                           	opt callstack 0
 27927  01DB28                     _mode_lamp_bright:
 27928                           	opt callstack 13
 27929                           
 27930                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 27931                           
 27932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27933                           ;incstack = 0
 27934  01DB28  0E2C               	movlw	44
 27935  01DB2A  6EE6               	movwf	postinc1,c
 27936  01DB2C  0E01               	movlw	1
 27937  01DB2E  6EE6               	movwf	postinc1,c
 27938  01DB30  ECF6  F0E7         	call	_PWM8_LoadDutyValue	;wreg free
 27939                           
 27940                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 27941  01DB34  0012               	return		;funcret
 27942  01DB36                     __end_of_mode_lamp_bright:
 27943                           	opt callstack 0
 27944                           
 27945 ;; *************** function _PWM8_LoadDutyValue *****************
 27946 ;; Defined at:
 27947 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 27948 ;; Parameters:    Size  Location     Type
 27949 ;;  dutyValue       2  [STACK] unsigned short 
 27950 ;; Auto vars:     Size  Location     Type
 27951 ;;		None
 27952 ;; Return value:  Size  Location     Type
 27953 ;;                  1  [STACK] void 
 27954 ;; Registers used:
 27955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 27956 ;; Tracked objects:
 27957 ;;		On entry : 0/1
 27958 ;;		On exit  : 0/0
 27959 ;;		Unchanged: 0/0
 27960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27965 ;;Total ram usage:        0 bytes
 27966 ;; Hardware stack levels used:    1
 27967 ;; Hardware stack levels required when called:   15
 27968 ;; This function calls:
 27969 ;;		Nothing
 27970 ;; This function is called by:
 27971 ;;		_mode_lamp_dim
 27972 ;;		_mode_lamp_bright
 27973 ;; This function uses a reentrant model
 27974 ;;
 27975                           
 27976                           	psect	text107
 27977  01CFEC                     __ptext107:
 27978                           	opt callstack 0
 27979  01CFEC                     _PWM8_LoadDutyValue:
 27980                           	opt callstack 14
 27981                           
 27982                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 27983                           ;stkvar	_dutyValue @ sp[(0)+-2]
 27984                           
 27985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27986                           ;incstack = 0
 27987  01CFEC  0EFE               	movlw	-2
 27988  01CFEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27989  01CFF4  0EFF               	movlw	-1
 27990  01CFF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27991  01CFFC  90D8               	bcf	status,0,c
 27992  01CFFE  320C               	rrcf	(btemp+11)^0,f,c
 27993  01D000  320B               	rrcf	(btemp+10)^0,f,c
 27994  01D002  90D8               	bcf	status,0,c
 27995  01D004  320C               	rrcf	(btemp+11)^0,f,c
 27996  01D006  320B               	rrcf	(btemp+10)^0,f,c
 27997  01D008  500B               	movf	(btemp+10)^0,w,c
 27998  01D00A  6E61               	movwf	97,c	;volatile
 27999                           
 28000                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 28001                           ;stkvar	_dutyValue @ sp[(0)+-2]
 28002  01D00C  0EFE               	movlw	-2
 28003  01D00E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28004  01D014  0E03               	movlw	3
 28005  01D016  160C               	andwf	(btemp+11)^0,f,c
 28006  01D018  0E06               	movlw	6
 28007  01D01A  6E01               	movwf	btemp^0,c
 28008  01D01C                     u10025:
 28009  01D01C  90D8               	bcf	status,0,c
 28010  01D01E  360C               	rlcf	(btemp+11)^0,f,c
 28011  01D020  2E01               	decfsz	btemp^0,f,c
 28012  01D022  D7FC               	goto	u10025
 28013  01D024  500C               	movf	(btemp+11)^0,w,c
 28014  01D026  6E60               	movwf	96,c	;volatile
 28015                           
 28016                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 28017  01D028  52E5               	movf	postdec1,f,c
 28018  01D02A  52E5               	movf	postdec1,f,c
 28019  01D02C  0012               	return		;funcret
 28020  01D02E                     __end_of_PWM8_LoadDutyValue:
 28021                           	opt callstack 0
 28022                           
 28023 ;; *************** function _help_button *****************
 28024 ;; Defined at:
 28025 ;;		line 26 in file "mconfig.c"
 28026 ;; Parameters:    Size  Location     Type
 28027 ;;		None
 28028 ;; Auto vars:     Size  Location     Type
 28029 ;;		None
 28030 ;; Return value:  Size  Location     Type
 28031 ;;                  1  [STACK] _Bool 
 28032 ;; Registers used:
 28033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28034 ;; Tracked objects:
 28035 ;;		On entry : 0/1
 28036 ;;		On exit  : 0/0
 28037 ;;		Unchanged: 0/0
 28038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28043 ;;Total ram usage:        0 bytes
 28044 ;; Hardware stack levels used:    1
 28045 ;; Hardware stack levels required when called:   16
 28046 ;; This function calls:
 28047 ;;		_StartTimer
 28048 ;;		_TimerDone
 28049 ;; This function is called by:
 28050 ;;		_check_help
 28051 ;; This function uses a reentrant model
 28052 ;;
 28053                           
 28054                           	psect	text108
 28055  01D222                     __ptext108:
 28056                           	opt callstack 0
 28057  01D222                     _help_button:
 28058                           	opt callstack 13
 28059                           
 28060                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 28061                           
 28062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28063                           ;incstack = 0
 28064  01D222  B0CB               	btfsc	203,0,c	;volatile
 28065  01D224  D00C               	goto	l1802
 28066                           
 28067                           ;mconfig.c: 29:   V.help = 1;
 28068  01D226  0101               	movlb	1	; () banked
 28069  01D228  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 28070                           
 28071                           ; BSR set to: 1
 28072                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 28073  01D22A  0E08               	movlw	8
 28074  01D22C  6EE6               	movwf	postinc1,c
 28075  01D22E  ECC7  F0EA         	call	_TimerDone	;wreg free
 28076  01D232  5001               	movf	btemp^0,w,c
 28077  01D234  B4D8               	btfsc	status,2,c
 28078  01D236  D003               	goto	l1802
 28079                           
 28080                           ;mconfig.c: 31:    return 1;
 28081  01D238  0E01               	movlw	1
 28082  01D23A  6E01               	movwf	btemp^0,c
 28083  01D23C  0012               	return	
 28084  01D23E                     l1802:
 28085                           
 28086                           ;mconfig.c: 34:  if (!V.help)
 28087  01D23E  0101               	movlb	1	; () banked
 28088  01D240  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 28089  01D242  D008               	goto	l11568
 28090                           
 28091                           ; BSR set to: 1
 28092                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 28093  01D244  0E2C               	movlw	44
 28094  01D246  6EE6               	movwf	postinc1,c
 28095  01D248  0E01               	movlw	1
 28096  01D24A  6EE6               	movwf	postinc1,c
 28097  01D24C  0E08               	movlw	8
 28098  01D24E  6EE6               	movwf	postinc1,c
 28099  01D250  EC57  F0E8         	call	_StartTimer	;wreg free
 28100  01D254                     l11568:
 28101                           
 28102                           ;mconfig.c: 37:  return 0;
 28103  01D254  0E00               	movlw	0
 28104  01D256  6E01               	movwf	btemp^0,c
 28105                           
 28106                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 28107  01D258  0012               	return		;funcret
 28108  01D25A                     __end_of_help_button:
 28109                           	opt callstack 0
 28110                           
 28111 ;; *************** function _TimerDone *****************
 28112 ;; Defined at:
 28113 ;;		line 20 in file "timers.c"
 28114 ;; Parameters:    Size  Location     Type
 28115 ;;  timer           1  [STACK] const unsigned char 
 28116 ;; Auto vars:     Size  Location     Type
 28117 ;;		None
 28118 ;; Return value:  Size  Location     Type
 28119 ;;                  1  [STACK] _Bool 
 28120 ;; Registers used:
 28121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28122 ;; Tracked objects:
 28123 ;;		On entry : 0/1
 28124 ;;		On exit  : 0/0
 28125 ;;		Unchanged: 0/0
 28126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28131 ;;Total ram usage:        0 bytes
 28132 ;; Hardware stack levels used:    1
 28133 ;; Hardware stack levels required when called:   15
 28134 ;; This function calls:
 28135 ;;		Nothing
 28136 ;; This function is called by:
 28137 ;;		_main
 28138 ;;		_WaitMs
 28139 ;;		_help_button
 28140 ;;		_check_help
 28141 ;;		_set_display_info
 28142 ;;		_update_adc_result
 28143 ;;		_esr_check
 28144 ;; This function uses a reentrant model
 28145 ;;
 28146                           
 28147                           	psect	text109
 28148  01D58E                     __ptext109:
 28149                           	opt callstack 0
 28150  01D58E                     _TimerDone:
 28151                           	opt callstack 14
 28152                           
 28153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28154                           ;incstack = 0
 28155  01D58E  0004               	clrwdt		;# 
 28156                           
 28157                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 28158                           ;stkvar	_timer @ sp[(0)+-1]
 28159  01D590  0EFF               	movlw	-1
 28160  01D592  50E3               	movf	plusw1,w,c
 28161  01D594  0D02               	mullw	2
 28162  01D596  0E29               	movlw	low _tickCount
 28163  01D598  24F3               	addwf	243,w,c
 28164  01D59A  6ED9               	movwf	fsr2l,c
 28165  01D59C  0E02               	movlw	high _tickCount
 28166  01D59E  20F4               	addwfc	prodh,w,c
 28167  01D5A0  6EDA               	movwf	fsr2h,c
 28168  01D5A2  50DE               	movf	postinc2,w,c
 28169  01D5A4  10DE               	iorwf	postinc2,w,c
 28170  01D5A6  A4D8               	btfss	status,2,c
 28171  01D5A8  D002               	goto	l10624
 28172                           
 28173                           ;timers.c: 24:   return 1;
 28174  01D5AA  0E01               	movlw	1
 28175  01D5AC  D001               	goto	L33
 28176  01D5AE                     l10624:
 28177                           
 28178                           ;timers.c: 26:  return 0;
 28179  01D5AE  0E00               	movlw	0
 28180  01D5B0                     L33:
 28181  01D5B0  6E01               	movwf	btemp^0,c
 28182                           
 28183                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 28184  01D5B2  52E5               	movf	postdec1,f,c
 28185  01D5B4  0012               	return		;funcret
 28186  01D5B6                     __end_of_TimerDone:
 28187                           	opt callstack 0
 28188                           
 28189 ;; *************** function _StartTimer *****************
 28190 ;; Defined at:
 28191 ;;		line 12 in file "timers.c"
 28192 ;; Parameters:    Size  Location     Type
 28193 ;;  timer           1  [STACK] const unsigned char 
 28194 ;;  count           2  [STACK] const unsigned short 
 28195 ;; Auto vars:     Size  Location     Type
 28196 ;;		None
 28197 ;; Return value:  Size  Location     Type
 28198 ;;                  1  [STACK] void 
 28199 ;; Registers used:
 28200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28201 ;; Tracked objects:
 28202 ;;		On entry : 0/0
 28203 ;;		On exit  : 0/0
 28204 ;;		Unchanged: 0/0
 28205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28210 ;;Total ram usage:        0 bytes
 28211 ;; Hardware stack levels used:    1
 28212 ;; Hardware stack levels required when called:   15
 28213 ;; This function calls:
 28214 ;;		Nothing
 28215 ;; This function is called by:
 28216 ;;		_main
 28217 ;;		_WaitMs
 28218 ;;		_help_button
 28219 ;;		_check_help
 28220 ;;		_update_adc_result
 28221 ;;		_calc_bsoc
 28222 ;;		_esr_check
 28223 ;; This function uses a reentrant model
 28224 ;;
 28225                           
 28226                           	psect	text110
 28227  01D0AE                     __ptext110:
 28228                           	opt callstack 0
 28229  01D0AE                     _StartTimer:
 28230                           	opt callstack 0
 28231                           
 28232                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 28233                           ;stkvar	_count @ sp[(0)+-3]
 28234                           
 28235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28236                           ;incstack = 0
 28237 ;; hardware stack exceeded
 28238  01D0AE  0EFD               	movlw	-3
 28239  01D0B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 28240  01D0B6  0EFE               	movlw	-2
 28241  01D0B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 28242  01D0BE  90D8               	bcf	status,0,c
 28243  01D0C0  340B               	rlcf	(btemp+10)^0,w,c
 28244  01D0C2  6E09               	movwf	(btemp+8)^0,c
 28245  01D0C4  340C               	rlcf	(btemp+11)^0,w,c
 28246  01D0C6  6E0A               	movwf	(btemp+9)^0,c
 28247                           
 28248                           ;stkvar	_timer @ sp[(0)+-1]
 28249  01D0C8  0EFF               	movlw	-1
 28250  01D0CA  50E3               	movf	plusw1,w,c
 28251  01D0CC  0D02               	mullw	2
 28252  01D0CE  0E29               	movlw	low _tickCount
 28253  01D0D0  24F3               	addwf	243,w,c
 28254  01D0D2  6ED9               	movwf	fsr2l,c
 28255  01D0D4  0E02               	movlw	high _tickCount
 28256  01D0D6  20F4               	addwfc	prodh,w,c
 28257  01D0D8  6EDA               	movwf	fsr2h,c
 28258  01D0DA  0060  F027  FFDE   	movff	btemp+8,postinc2
 28259  01D0E0  0060  F02B  FFDD   	movff	btemp+9,postdec2
 28260                           
 28261                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 28262  01D0E6  52E5               	movf	postdec1,f,c
 28263  01D0E8  52E5               	movf	postdec1,f,c
 28264  01D0EA  52E5               	movf	postdec1,f,c
 28265  01D0EC  0012               	return		;funcret
 28266  01D0EE                     __end_of_StartTimer:
 28267                           	opt callstack 0
 28268                           
 28269 ;; *************** function _display_info *****************
 28270 ;; Defined at:
 28271 ;;		line 190 in file "mconfig.c"
 28272 ;; Parameters:    Size  Location     Type
 28273 ;;		None
 28274 ;; Auto vars:     Size  Location     Type
 28275 ;;		None
 28276 ;; Return value:  Size  Location     Type
 28277 ;;                  1  [STACK] enum E16524
 28278 ;; Registers used:
 28279 ;;		btemp
 28280 ;; Tracked objects:
 28281 ;;		On entry : 0/1
 28282 ;;		On exit  : 0/0
 28283 ;;		Unchanged: 0/0
 28284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28289 ;;Total ram usage:        0 bytes
 28290 ;; Hardware stack levels used:    1
 28291 ;; Hardware stack levels required when called:   15
 28292 ;; This function calls:
 28293 ;;		Nothing
 28294 ;; This function is called by:
 28295 ;;		_check_help
 28296 ;; This function uses a reentrant model
 28297 ;;
 28298                           
 28299                           	psect	text111
 28300  01DBAA                     __ptext111:
 28301                           	opt callstack 0
 28302  01DBAA                     _display_info:
 28303                           	opt callstack 14
 28304                           
 28305                           ;mconfig.c: 192:  return V.response.info;
 28306                           
 28307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28308                           ;incstack = 0
 28309  01DBAA  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 28310                           
 28311                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 28312  01DBB0  0012               	return		;funcret
 28313  01DBB2                     __end_of_display_info:
 28314                           	opt callstack 0
 28315                           
 28316 ;; *************** function _display_help *****************
 28317 ;; Defined at:
 28318 ;;		line 195 in file "mconfig.c"
 28319 ;; Parameters:    Size  Location     Type
 28320 ;;		None
 28321 ;; Auto vars:     Size  Location     Type
 28322 ;;		None
 28323 ;; Return value:  Size  Location     Type
 28324 ;;                  1  [STACK] enum E16524
 28325 ;; Registers used:
 28326 ;;		btemp
 28327 ;; Tracked objects:
 28328 ;;		On entry : 3F/1
 28329 ;;		On exit  : 0/0
 28330 ;;		Unchanged: 0/0
 28331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28336 ;;Total ram usage:        0 bytes
 28337 ;; Hardware stack levels used:    1
 28338 ;; Hardware stack levels required when called:   15
 28339 ;; This function calls:
 28340 ;;		Nothing
 28341 ;; This function is called by:
 28342 ;;		_check_help
 28343 ;; This function uses a reentrant model
 28344 ;;
 28345                           
 28346                           	psect	text112
 28347  01DBB2                     __ptext112:
 28348                           	opt callstack 0
 28349  01DBB2                     _display_help:
 28350                           	opt callstack 14
 28351                           
 28352                           ;mconfig.c: 197:  return V.response.help_temp;
 28353                           
 28354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28355                           ;incstack = 0
 28356  01DBB2  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 28357                           
 28358                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 28359  01DBB8  0012               	return		;funcret
 28360  01DBBA                     __end_of_display_help:
 28361                           	opt callstack 0
 28362                           
 28363 ;; *************** function _check_enter_button *****************
 28364 ;; Defined at:
 28365 ;;		line 49 in file "hid.c"
 28366 ;; Parameters:    Size  Location     Type
 28367 ;;  h               2  [STACK] PTR struct H_data
 28368 ;;		 -> H(9), 
 28369 ;; Auto vars:     Size  Location     Type
 28370 ;;		None
 28371 ;; Return value:  Size  Location     Type
 28372 ;;                  1  [STACK] _Bool 
 28373 ;; Registers used:
 28374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 28375 ;; Tracked objects:
 28376 ;;		On entry : 0/0
 28377 ;;		On exit  : 0/0
 28378 ;;		Unchanged: 0/0
 28379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28384 ;;Total ram usage:        0 bytes
 28385 ;; Hardware stack levels used:    1
 28386 ;; Hardware stack levels required when called:   15
 28387 ;; This function calls:
 28388 ;;		Nothing
 28389 ;; This function is called by:
 28390 ;;		_main
 28391 ;; This function uses a reentrant model
 28392 ;;
 28393                           
 28394                           	psect	text113
 28395  01C6AA                     __ptext113:
 28396                           	opt callstack 0
 28397  01C6AA                     _check_enter_button:
 28398                           	opt callstack 15
 28399                           
 28400                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 28401                           ;stkvar	_h @ sp[(0)+-2]
 28402                           
 28403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28404                           ;incstack = 0
 28405  01C6AA  0EFE               	movlw	-2
 28406  01C6AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 28407  01C6B2  0EFF               	movlw	-1
 28408  01C6B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28409  01C6BA  0E04               	movlw	4
 28410  01C6BC  240B               	addwf	(btemp+10)^0,w,c
 28411  01C6BE  6ED9               	movwf	fsr2l,c
 28412  01C6C0  0E00               	movlw	0
 28413  01C6C2  200C               	addwfc	(btemp+11)^0,w,c
 28414  01C6C4  6EDA               	movwf	fsr2h,c
 28415  01C6C6  50DF               	movf	indf2,w,c
 28416  01C6C8  A4D8               	btfss	status,2,c
 28417  01C6CA  D023               	goto	l14604
 28418                           
 28419                           ;stkvar	_h @ sp[(0)+-2]
 28420  01C6CC  0EFE               	movlw	-2
 28421  01C6CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 28422  01C6D4  0EFF               	movlw	-1
 28423  01C6D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28424  01C6DC  0E05               	movlw	5
 28425  01C6DE  240B               	addwf	(btemp+10)^0,w,c
 28426  01C6E0  6ED9               	movwf	fsr2l,c
 28427  01C6E2  0E00               	movlw	0
 28428  01C6E4  200C               	addwfc	(btemp+11)^0,w,c
 28429  01C6E6  6EDA               	movwf	fsr2h,c
 28430  01C6E8  50DF               	movf	indf2,w,c
 28431  01C6EA  A4D8               	btfss	status,2,c
 28432  01C6EC  D012               	goto	l14604
 28433                           
 28434                           ;hid.c: 52:   h->wait_enter = 1;
 28435                           ;stkvar	_h @ sp[(0)+-2]
 28436  01C6EE  0EFE               	movlw	-2
 28437  01C6F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 28438  01C6F6  0EFF               	movlw	-1
 28439  01C6F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 28440  01C6FE  0E04               	movlw	4
 28441  01C700  240B               	addwf	(btemp+10)^0,w,c
 28442  01C702  6ED9               	movwf	fsr2l,c
 28443  01C704  0E00               	movlw	0
 28444  01C706  200C               	addwfc	(btemp+11)^0,w,c
 28445  01C708  6EDA               	movwf	fsr2h,c
 28446  01C70A  0E01               	movlw	1
 28447  01C70C  6EDF               	movwf	indf2,c
 28448                           
 28449                           ;hid.c: 53:   return 1;
 28450  01C70E  0E01               	movlw	1
 28451  01C710  D001               	goto	L34
 28452  01C712                     l14604:
 28453                           
 28454                           ;hid.c: 55:  return 0;
 28455  01C712  0E00               	movlw	0
 28456  01C714                     L34:
 28457  01C714  6E01               	movwf	btemp^0,c
 28458                           
 28459                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 28460  01C716  52E5               	movf	postdec1,f,c
 28461  01C718  52E5               	movf	postdec1,f,c
 28462  01C71A  0012               	return		;funcret
 28463  01C71C                     __end_of_check_enter_button:
 28464                           	opt callstack 0
 28465                           
 28466 ;; *************** function _calc_ror_data *****************
 28467 ;; Defined at:
 28468 ;;		line 102 in file "mbmc.c"
 28469 ;; Parameters:    Size  Location     Type
 28470 ;;		None
 28471 ;; Auto vars:     Size  Location     Type
 28472 ;;		None
 28473 ;; Return value:  Size  Location     Type
 28474 ;;                  1  [STACK] void 
 28475 ;; Registers used:
 28476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28477 ;; Tracked objects:
 28478 ;;		On entry : 0/0
 28479 ;;		On exit  : 0/0
 28480 ;;		Unchanged: 0/0
 28481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28486 ;;Total ram usage:        0 bytes
 28487 ;; Hardware stack levels used:    1
 28488 ;; Hardware stack levels required when called:   18
 28489 ;; This function calls:
 28490 ;;		___flge
 28491 ;;		___flsub
 28492 ;;		_conv_raw_result
 28493 ;;		_fabsf
 28494 ;; This function is called by:
 28495 ;;		_main
 28496 ;; This function uses a reentrant model
 28497 ;;
 28498                           
 28499                           	psect	text114
 28500  019C14                     __ptext114:
 28501                           	opt callstack 0
 28502  019C14                     _calc_ror_data:
 28503                           	opt callstack 12
 28504                           
 28505                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 28506                           
 28507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28508                           ;incstack = 0
 28509  019C14  0060  F193  FFE6   	movff	calc_ror_data@bcror,postinc1
 28510  019C1A  0060  F197  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 28511  019C20  0060  F19B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 28512  019C26  0060  F19F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 28513  019C2C  0E00               	movlw	0
 28514  019C2E  6EE6               	movwf	postinc1,c
 28515  019C30  0E00               	movlw	0
 28516  019C32  6EE6               	movwf	postinc1,c
 28517  019C34  ECF8  F0AF         	call	_conv_raw_result	;wreg free
 28518  019C38  0060  F007  FFE6   	movff	btemp,postinc1
 28519  019C3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28520  019C44  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28521  019C4A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28522  019C50  ECB1  F0E7         	call	___flsub	;wreg free
 28523  019C54  0060  F007  FFE6   	movff	btemp,postinc1
 28524  019C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28525  019C60  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28526  019C66  0060  F013  FFE6   	movff	btemp+3,postinc1
 28527  019C6C  EC2D  F0DE         	call	_fabsf	;wreg free
 28528  019C70  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 28529  019C76  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 28530  019C7C  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 28531  019C82  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 28532                           
 28533                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 28534  019C88  0E00               	movlw	0
 28535  019C8A  6EE6               	movwf	postinc1,c
 28536  019C8C  0E00               	movlw	0
 28537  019C8E  6EE6               	movwf	postinc1,c
 28538  019C90  ECF8  F0AF         	call	_conv_raw_result	;wreg free
 28539  019C94  0060  F004  F064   	movff	btemp,calc_ror_data@bcror
 28540  019C9A  0060  F008  F065   	movff	btemp+1,calc_ror_data@bcror+1
 28541  019CA0  0060  F00C  F066   	movff	btemp+2,calc_ror_data@bcror+2
 28542  019CA6  0060  F010  F067   	movff	btemp+3,calc_ror_data@bcror+3
 28543                           
 28544                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 28545  019CAC  0060  F1A3  FFE6   	movff	calc_ror_data@bvror,postinc1
 28546  019CB2  0060  F1A7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 28547  019CB8  0060  F1AB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 28548  019CBE  0060  F1AF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 28549  019CC4  0E00               	movlw	0
 28550  019CC6  6EE6               	movwf	postinc1,c
 28551  019CC8  0E04               	movlw	4
 28552  019CCA  6EE6               	movwf	postinc1,c
 28553  019CCC  ECF8  F0AF         	call	_conv_raw_result	;wreg free
 28554  019CD0  0060  F007  FFE6   	movff	btemp,postinc1
 28555  019CD6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28556  019CDC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28557  019CE2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28558  019CE8  ECB1  F0E7         	call	___flsub	;wreg free
 28559  019CEC  0060  F007  FFE6   	movff	btemp,postinc1
 28560  019CF2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28561  019CF8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28562  019CFE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28563  019D04  EC2D  F0DE         	call	_fabsf	;wreg free
 28564  019D08  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 28565  019D0E  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 28566  019D14  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 28567  019D1A  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 28568                           
 28569                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 28570  019D20  0EE7               	movlw	231
 28571  019D22  6EE6               	movwf	postinc1,c
 28572  019D24  0E1D               	movlw	29
 28573  019D26  6EE6               	movwf	postinc1,c
 28574  019D28  0EA7               	movlw	167
 28575  019D2A  6EE6               	movwf	postinc1,c
 28576  019D2C  0E3B               	movlw	59
 28577  019D2E  6EE6               	movwf	postinc1,c
 28578  019D30  EE22  F06B         	lfsr	2,_C+108	;volatile
 28579  019D34  006F FF7B FFE6     	movff	postinc2,postinc1
 28580  019D3A  006F FF7B FFE6     	movff	postinc2,postinc1
 28581  019D40  006F FF7B FFE6     	movff	postinc2,postinc1
 28582  019D46  006F FF7B FFE6     	movff	postinc2,postinc1
 28583  019D4C  ECFF  F0D0         	call	___flge	;wreg free
 28584  019D50  B001               	btfsc	btemp& (0+255),0,c
 28585  019D52  D010               	goto	l12122
 28586                           
 28587                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 28588  019D54  0EB0               	movlw	176
 28589  019D56  006F FFA0  F86B    	movff	wreg,_C+108	;volatile
 28590  019D5C  0E03               	movlw	3
 28591  019D5E  006F FFA0  F86C    	movff	wreg,_C+109	;volatile
 28592  019D64  0E67               	movlw	103
 28593  019D66  006F FFA0  F86D    	movff	wreg,_C+110	;volatile
 28594  019D6C  0E3C               	movlw	60
 28595  019D6E  006F FFA0  F86E    	movff	wreg,_C+111	;volatile
 28596  019D74                     l12122:
 28597                           
 28598                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 28599  019D74  0E00               	movlw	0
 28600  019D76  6EE6               	movwf	postinc1,c
 28601  019D78  0E04               	movlw	4
 28602  019D7A  6EE6               	movwf	postinc1,c
 28603  019D7C  ECF8  F0AF         	call	_conv_raw_result	;wreg free
 28604  019D80  0060  F004  F068   	movff	btemp,calc_ror_data@bvror
 28605  019D86  0060  F008  F069   	movff	btemp+1,calc_ror_data@bvror+1
 28606  019D8C  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bvror+2
 28607  019D92  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bvror+3
 28608                           
 28609                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 28610  019D98  0012               	return		;funcret
 28611  019D9A                     __end_of_calc_ror_data:
 28612                           	opt callstack 0
 28613                           
 28614 ;; *************** function _fabsf *****************
 28615 ;; Defined at:
 28616 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 28617 ;; Parameters:    Size  Location     Type
 28618 ;;  x               4  [STACK] float 
 28619 ;; Auto vars:     Size  Location     Type
 28620 ;;  u               4  [STACK] struct .
 28621 ;; Return value:  Size  Location     Type
 28622 ;;                  4  [STACK] float 
 28623 ;; Registers used:
 28624 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 28625 ;; Tracked objects:
 28626 ;;		On entry : 0/0
 28627 ;;		On exit  : 0/0
 28628 ;;		Unchanged: 0/0
 28629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28634 ;;Total ram usage:        0 bytes
 28635 ;; Hardware stack levels used:    1
 28636 ;; Hardware stack levels required when called:   15
 28637 ;; This function calls:
 28638 ;;		Nothing
 28639 ;; This function is called by:
 28640 ;;		_main
 28641 ;;		_calc_ror_data
 28642 ;;		_calc_bsoc
 28643 ;;		_esr_check
 28644 ;; This function uses a reentrant model
 28645 ;;
 28646                           
 28647                           	psect	text115
 28648  01BC5A                     __ptext115:
 28649                           	opt callstack 0
 28650  01BC5A                     _fabsf:
 28651                           	opt callstack 0
 28652                           
 28653                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28654  01BC5A  52E6               	movf	postinc1,f,c
 28655  01BC5C  52E6               	movf	postinc1,f,c
 28656  01BC5E  52E6               	movf	postinc1,f,c
 28657  01BC60  52E6               	movf	postinc1,f,c
 28658                           
 28659                           ;incstack = 0
 28660 ;; hardware stack exceeded
 28661  01BC62  0060  F7B8  F009   	movff	fabsf@F463,btemp+8
 28662  01BC68  0060  F7BC  F00A   	movff	fabsf@F463+1,btemp+9
 28663  01BC6E  0060  F7C0  F00B   	movff	fabsf@F463+2,btemp+10
 28664  01BC74  0060  F7C4  F00C   	movff	fabsf@F463+3,btemp+11
 28665                           
 28666                           ;stkvar	_u @ sp[(-4)+0]
 28667  01BC7A  0EFC               	movlw	-4
 28668  01BC7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 28669  01BC82  0EFD               	movlw	-3
 28670  01BC84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28671  01BC8A  0EFE               	movlw	-2
 28672  01BC8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28673  01BC92  0EFF               	movlw	-1
 28674  01BC94  0060  F033  FFE3   	movff	btemp+11,plusw1
 28675                           
 28676                           ;stkvar	_x @ sp[(-4)+-4]
 28677  01BC9A  0EF8               	movlw	-8
 28678  01BC9C  006F FF8C  F009    	movff	plusw1,btemp+8
 28679  01BCA2  0EF9               	movlw	-7
 28680  01BCA4  006F FF8C  F00A    	movff	plusw1,btemp+9
 28681  01BCAA  0EFA               	movlw	-6
 28682  01BCAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 28683  01BCB2  0EFB               	movlw	-5
 28684  01BCB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28685                           
 28686                           ;stkvar	_u @ sp[(-4)+0]
 28687  01BCBA  0EFC               	movlw	-4
 28688  01BCBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 28689  01BCC2  0EFD               	movlw	-3
 28690  01BCC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28691  01BCCA  0EFE               	movlw	-2
 28692  01BCCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28693  01BCD2  0EFF               	movlw	-1
 28694  01BCD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 28695                           
 28696                           ;stkvar	_u @ sp[(-4)+0]
 28697  01BCDA  0EFF               	movlw	-1
 28698  01BCDC  9EE3               	bcf	plusw1,7,c
 28699                           
 28700                           ;stkvar	_u @ sp[(-4)+0]
 28701  01BCDE  0EFC               	movlw	-4
 28702  01BCE0  006F FF8C  F001    	movff	plusw1,btemp
 28703  01BCE6  0EFD               	movlw	-3
 28704  01BCE8  006F FF8C  F002    	movff	plusw1,btemp+1
 28705  01BCEE  0EFE               	movlw	-2
 28706  01BCF0  006F FF8C  F003    	movff	plusw1,btemp+2
 28707  01BCF6  0EFF               	movlw	-1
 28708  01BCF8  006F FF8C  F004    	movff	plusw1,btemp+3
 28709                           
 28710                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 28711  01BCFE  0EF8               	movlw	248
 28712  01BD00  26E1               	addwf	fsr1l,f,c
 28713  01BD02  0EFF               	movlw	255
 28714  01BD04  22E2               	addwfc	fsr1h,f,c
 28715  01BD06  0012               	return		;funcret
 28716  01BD08                     __end_of_fabsf:
 28717                           	opt callstack 0
 28718                           
 28719 ;; *************** function _conv_raw_result *****************
 28720 ;; Defined at:
 28721 ;;		line 128 in file "daq.c"
 28722 ;; Parameters:    Size  Location     Type
 28723 ;;  chan            1  [STACK] const enum E16605
 28724 ;;  to_what         1  [STACK] const enum E16686
 28725 ;; Auto vars:     Size  Location     Type
 28726 ;;		None
 28727 ;; Return value:  Size  Location     Type
 28728 ;;                  4  [STACK] float 
 28729 ;; Registers used:
 28730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28731 ;; Tracked objects:
 28732 ;;		On entry : 0/0
 28733 ;;		On exit  : 0/0
 28734 ;;		Unchanged: 0/0
 28735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28740 ;;Total ram usage:        0 bytes
 28741 ;; Hardware stack levels used:    1
 28742 ;; Hardware stack levels required when called:   17
 28743 ;; This function calls:
 28744 ;;		___fldiv
 28745 ;;		___flmul
 28746 ;;		___flsub
 28747 ;;		___xxtofl
 28748 ;;		_get_raw_result
 28749 ;;		_nanf
 28750 ;; This function is called by:
 28751 ;;		_main
 28752 ;;		_convert_adc_data
 28753 ;;		_calc_ror_data
 28754 ;;		_check_day_time
 28755 ;;		_init_bsoc
 28756 ;;		_esr_check
 28757 ;; This function uses a reentrant model
 28758 ;;
 28759                           
 28760                           	psect	text116
 28761  015FF0                     __ptext116:
 28762                           	opt callstack 0
 28763  015FF0                     _conv_raw_result:
 28764                           	opt callstack 0
 28765                           
 28766                           ;daq.c: 128: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 129: {;daq.c: 131:  switch (to_what) {
 28767                           
 28768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28769                           ;incstack = 0
 28770 ;; hardware stack exceeded
 28771  015FF0  D24A               	goto	l10606
 28772  015FF2                     l10552:
 28773                           
 28774                           ;daq.c: 133:   if (!(0b0011110001110111 >> chan & 0x1))
 28775                           ;stkvar	_chan @ sp[(0)+-1]
 28776  015FF2  0EFF               	movlw	-1
 28777  015FF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28778  015FFA  0E77               	movlw	119
 28779  015FFC  6E09               	movwf	(btemp+8)^0,c
 28780  015FFE  0E3C               	movlw	60
 28781  016000  6E0A               	movwf	(btemp+9)^0,c
 28782  016002  2A0C               	incf	(btemp+11)^0,f,c
 28783  016004  D003               	goto	u9714
 28784  016006                     u9715:
 28785  016006  340A               	rlcf	(btemp+9)^0,w,c
 28786  016008  320A               	rrcf	(btemp+9)^0,f,c
 28787  01600A  3209               	rrcf	(btemp+8)^0,f,c
 28788  01600C                     u9714:
 28789  01600C  2E0C               	decfsz	(btemp+11)^0,f,c
 28790  01600E  D7FB               	goto	u9715
 28791  016010  B009               	btfsc	(btemp+8)^0,0,c
 28792  016012  D007               	goto	l10558
 28793                           
 28794                           ;daq.c: 134:    return nanf("");
 28795  016014  0EE7               	movlw	low (STR_93+126)
 28796  016016  6EE6               	movwf	postinc1,c
 28797  016018  0EFA               	movlw	high (STR_93+126)
 28798  01601A  6EE6               	movwf	postinc1,c
 28799  01601C  EC2A  F0E5         	call	_nanf	;wreg free
 28800  016020  D242               	goto	l1959
 28801  016022                     l10558:
 28802                           
 28803                           ;daq.c: 136:   if (0b0000000000000011 >> chan & 0x1) {
 28804                           ;stkvar	_chan @ sp[(0)+-1]
 28805  016022  0EFF               	movlw	-1
 28806  016024  006F FF8C  F00C    	movff	plusw1,btemp+11
 28807  01602A  0E03               	movlw	3
 28808  01602C  6E09               	movwf	(btemp+8)^0,c
 28809  01602E  0E00               	movlw	0
 28810  016030  6E0A               	movwf	(btemp+9)^0,c
 28811  016032  2A0C               	incf	(btemp+11)^0,f,c
 28812  016034  D003               	goto	u9734
 28813  016036                     u9735:
 28814  016036  340A               	rlcf	(btemp+9)^0,w,c
 28815  016038  320A               	rrcf	(btemp+9)^0,f,c
 28816  01603A  3209               	rrcf	(btemp+8)^0,f,c
 28817  01603C                     u9734:
 28818  01603C  2E0C               	decfsz	(btemp+11)^0,f,c
 28819  01603E  D7FB               	goto	u9735
 28820  016040  A009               	btfss	(btemp+8)^0,0,c
 28821  016042  D0F3               	goto	l10572
 28822                           
 28823                           ;daq.c: 137:    if (0b0000000000000001 >> chan & 0x1) {
 28824                           ;stkvar	_chan @ sp[(0)+-1]
 28825  016044  0EFF               	movlw	-1
 28826  016046  006F FF8C  F00C    	movff	plusw1,btemp+11
 28827  01604C  0E01               	movlw	1
 28828  01604E  6E09               	movwf	(btemp+8)^0,c
 28829  016050  0E00               	movlw	0
 28830  016052  6E0A               	movwf	(btemp+9)^0,c
 28831  016054  2A0C               	incf	(btemp+11)^0,f,c
 28832  016056  D003               	goto	u9754
 28833  016058                     u9755:
 28834  016058  340A               	rlcf	(btemp+9)^0,w,c
 28835  01605A  320A               	rrcf	(btemp+9)^0,f,c
 28836  01605C  3209               	rrcf	(btemp+8)^0,f,c
 28837  01605E                     u9754:
 28838  01605E  2E0C               	decfsz	(btemp+11)^0,f,c
 28839  016060  D7FB               	goto	u9755
 28840  016062  A009               	btfss	(btemp+8)^0,0,c
 28841  016064  D071               	goto	l10568
 28842                           
 28843                           ;daq.c: 138:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 28844  016066  0060  F363  FFE6   	movff	_R+42,postinc1
 28845  01606C  0060  F367  FFE6   	movff	_R+43,postinc1
 28846  016072  0060  F36B  FFE6   	movff	_R+44,postinc1
 28847  016078  0060  F36F  FFE6   	movff	_R+45,postinc1
 28848  01607E  0060  F350  F009   	movff	_R+38,btemp+8	;volatile
 28849  016084  0060  F354  F00A   	movff	_R+39,btemp+9	;volatile
 28850  01608A  0E00               	movlw	0
 28851  01608C  BE0A               	btfsc	(btemp+9)^0,7,c
 28852  01608E  0EFF               	movlw	255
 28853  016090  6E0B               	movwf	(btemp+10)^0,c
 28854  016092  6E0C               	movwf	(btemp+11)^0,c
 28855  016094  0060  F027  FFE6   	movff	btemp+8,postinc1
 28856  01609A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 28857  0160A0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 28858  0160A6  0060  F033  FFE6   	movff	btemp+11,postinc1
 28859  0160AC  0E01               	movlw	1
 28860  0160AE  6EE6               	movwf	postinc1,c
 28861  0160B0  ECAA  F0C9         	call	___xxtofl	;wreg free
 28862  0160B4  0060  F007  FFE6   	movff	btemp,postinc1
 28863  0160BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28864  0160C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28865  0160C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 28866                           
 28867                           ;stkvar	_chan @ sp[(-8)+-1]
 28868  0160CC  0EF7               	movlw	-9
 28869  0160CE  50E3               	movf	plusw1,w,c
 28870  0160D0  6EE6               	movwf	postinc1,c
 28871  0160D2  ECDB  F0EC         	call	_get_raw_result	;wreg free
 28872  0160D6  0060  F004  F00B   	movff	btemp,btemp+10
 28873  0160DC  0060  F008  F00C   	movff	btemp+1,btemp+11
 28874  0160E2  500B               	movf	(btemp+10)^0,w,c
 28875  0160E4  6E05               	movwf	(btemp+4)^0,c
 28876  0160E6  500C               	movf	(btemp+11)^0,w,c
 28877  0160E8  6E06               	movwf	(btemp+5)^0,c
 28878  0160EA  6A07               	clrf	(btemp+6)^0,c
 28879  0160EC  6A08               	clrf	(btemp+7)^0,c
 28880  0160EE  0060  F017  FFE6   	movff	btemp+4,postinc1
 28881  0160F4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28882  0160FA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28883  016100  0060  F023  FFE6   	movff	btemp+7,postinc1
 28884  016106  0E00               	movlw	0
 28885  016108  6EE6               	movwf	postinc1,c
 28886  01610A  ECAA  F0C9         	call	___xxtofl	;wreg free
 28887  01610E  0060  F007  FFE6   	movff	btemp,postinc1
 28888  016114  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28889  01611A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28890  016120  0060  F013  FFE6   	movff	btemp+3,postinc1
 28891  016126  ECB1  F0E7         	call	___flsub	;wreg free
 28892  01612A  0060  F007  FFE6   	movff	btemp,postinc1
 28893  016130  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28894  016136  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28895  01613C  0060  F013  FFE6   	movff	btemp+3,postinc1
 28896  016142  EC48  F0A5         	call	___flmul	;wreg free
 28897  016146  D1AF               	goto	l1959
 28898  016148                     l10568:
 28899                           
 28900                           ;daq.c: 140:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 28901  016148  0060  F373  FFE6   	movff	_R+46,postinc1
 28902  01614E  0060  F377  FFE6   	movff	_R+47,postinc1
 28903  016154  0060  F37B  FFE6   	movff	_R+48,postinc1
 28904  01615A  0060  F37F  FFE6   	movff	_R+49,postinc1
 28905  016160  0060  F358  F009   	movff	_R+40,btemp+8	;volatile
 28906  016166  0060  F35C  F00A   	movff	_R+41,btemp+9	;volatile
 28907  01616C  0E00               	movlw	0
 28908  01616E  BE0A               	btfsc	(btemp+9)^0,7,c
 28909  016170  0EFF               	movlw	255
 28910  016172  6E0B               	movwf	(btemp+10)^0,c
 28911  016174  6E0C               	movwf	(btemp+11)^0,c
 28912  016176  0060  F027  FFE6   	movff	btemp+8,postinc1
 28913  01617C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 28914  016182  0060  F02F  FFE6   	movff	btemp+10,postinc1
 28915  016188  0060  F033  FFE6   	movff	btemp+11,postinc1
 28916  01618E  0E01               	movlw	1
 28917  016190  6EE6               	movwf	postinc1,c
 28918  016192  ECAA  F0C9         	call	___xxtofl	;wreg free
 28919  016196  0060  F007  FFE6   	movff	btemp,postinc1
 28920  01619C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28921  0161A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28922  0161A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 28923                           
 28924                           ;stkvar	_chan @ sp[(-8)+-1]
 28925  0161AE  0EF7               	movlw	-9
 28926  0161B0  50E3               	movf	plusw1,w,c
 28927  0161B2  6EE6               	movwf	postinc1,c
 28928  0161B4  ECDB  F0EC         	call	_get_raw_result	;wreg free
 28929  0161B8  0060  F004  F00B   	movff	btemp,btemp+10
 28930  0161BE  0060  F008  F00C   	movff	btemp+1,btemp+11
 28931  0161C4  500B               	movf	(btemp+10)^0,w,c
 28932  0161C6  6E05               	movwf	(btemp+4)^0,c
 28933  0161C8  500C               	movf	(btemp+11)^0,w,c
 28934  0161CA  6E06               	movwf	(btemp+5)^0,c
 28935  0161CC  6A07               	clrf	(btemp+6)^0,c
 28936  0161CE  6A08               	clrf	(btemp+7)^0,c
 28937  0161D0  0060  F017  FFE6   	movff	btemp+4,postinc1
 28938  0161D6  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28939  0161DC  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28940  0161E2  0060  F023  FFE6   	movff	btemp+7,postinc1
 28941  0161E8  0E00               	movlw	0
 28942  0161EA  6EE6               	movwf	postinc1,c
 28943  0161EC  ECAA  F0C9         	call	___xxtofl	;wreg free
 28944  0161F0  0060  F007  FFE6   	movff	btemp,postinc1
 28945  0161F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28946  0161FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28947  016202  0060  F013  FFE6   	movff	btemp+3,postinc1
 28948  016208  ECB1  F0E7         	call	___flsub	;wreg free
 28949  01620C  0060  F007  FFE6   	movff	btemp,postinc1
 28950  016212  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28951  016218  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28952  01621E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28953  016224  EC48  F0A5         	call	___flmul	;wreg free
 28954  016228  D13E               	goto	l1959
 28955  01622A                     l10572:
 28956                           
 28957                           ;daq.c: 143:    if (0b0000100000000000 >> chan & 0x1) {
 28958                           ;stkvar	_chan @ sp[(0)+-1]
 28959  01622A  0EFF               	movlw	-1
 28960  01622C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28961  016232  0E00               	movlw	0
 28962  016234  6E09               	movwf	(btemp+8)^0,c
 28963  016236  0E08               	movlw	8
 28964  016238  6E0A               	movwf	(btemp+9)^0,c
 28965  01623A  2A0C               	incf	(btemp+11)^0,f,c
 28966  01623C  D003               	goto	u9774
 28967  01623E                     u9775:
 28968  01623E  340A               	rlcf	(btemp+9)^0,w,c
 28969  016240  320A               	rrcf	(btemp+9)^0,f,c
 28970  016242  3209               	rrcf	(btemp+8)^0,f,c
 28971  016244                     u9774:
 28972  016244  2E0C               	decfsz	(btemp+11)^0,f,c
 28973  016246  D7FB               	goto	u9775
 28974  016248  A009               	btfss	(btemp+8)^0,0,c
 28975  01624A  D008               	goto	l10580
 28976                           
 28977                           ;daq.c: 144:     return 25.0;
 28978  01624C  0E00               	movlw	0
 28979  01624E  6E01               	movwf	btemp^0,c
 28980  016250  0E00               	movlw	0
 28981  016252  6E02               	movwf	(btemp+1)^0,c
 28982  016254  0EC8               	movlw	200
 28983  016256  6E03               	movwf	(btemp+2)^0,c
 28984  016258  0E41               	movlw	65
 28985  01625A  D113               	goto	L35
 28986  01625C                     l10580:
 28987                           
 28988                           ;daq.c: 146:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 28989  01625C  0E00               	movlw	0
 28990  01625E  6EE6               	movwf	postinc1,c
 28991  016260  0E00               	movlw	0
 28992  016262  6EE6               	movwf	postinc1,c
 28993  016264  0E7A               	movlw	122
 28994  016266  6EE6               	movwf	postinc1,c
 28995  016268  0E44               	movlw	68
 28996  01626A  6EE6               	movwf	postinc1,c
 28997  01626C  0E61               	movlw	97
 28998  01626E  6EE6               	movwf	postinc1,c
 28999  016270  0E03               	movlw	3
 29000  016272  6EE6               	movwf	postinc1,c
 29001  016274  0E84               	movlw	132
 29002  016276  6EE6               	movwf	postinc1,c
 29003  016278  0E40               	movlw	64
 29004  01627A  6EE6               	movwf	postinc1,c
 29005                           
 29006                           ;stkvar	_chan @ sp[(-8)+-1]
 29007  01627C  0EF7               	movlw	-9
 29008  01627E  50E3               	movf	plusw1,w,c
 29009  016280  6EE6               	movwf	postinc1,c
 29010  016282  ECDB  F0EC         	call	_get_raw_result	;wreg free
 29011  016286  0060  F004  F00B   	movff	btemp,btemp+10
 29012  01628C  0060  F008  F00C   	movff	btemp+1,btemp+11
 29013  016292  500B               	movf	(btemp+10)^0,w,c
 29014  016294  6E05               	movwf	(btemp+4)^0,c
 29015  016296  500C               	movf	(btemp+11)^0,w,c
 29016  016298  6E06               	movwf	(btemp+5)^0,c
 29017  01629A  6A07               	clrf	(btemp+6)^0,c
 29018  01629C  6A08               	clrf	(btemp+7)^0,c
 29019  01629E  0060  F017  FFE6   	movff	btemp+4,postinc1
 29020  0162A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29021  0162AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29022  0162B0  0060  F023  FFE6   	movff	btemp+7,postinc1
 29023  0162B6  0E00               	movlw	0
 29024  0162B8  6EE6               	movwf	postinc1,c
 29025  0162BA  ECAA  F0C9         	call	___xxtofl	;wreg free
 29026  0162BE  0060  F007  FFE6   	movff	btemp,postinc1
 29027  0162C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29028  0162CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29029  0162D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 29030  0162D6  EC48  F0A5         	call	___flmul	;wreg free
 29031  0162DA  0060  F007  FFE6   	movff	btemp,postinc1
 29032  0162E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29033  0162E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29034  0162EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 29035  0162F2  EC3B  F0AD         	call	___fldiv	;wreg free
 29036  0162F6  D0D7               	goto	l1959
 29037  0162F8                     l10584:
 29038                           
 29039                           ;daq.c: 151:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 29040                           ;stkvar	_chan @ sp[(0)+-1]
 29041  0162F8  0EFF               	movlw	-1
 29042  0162FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29043  016300  0E03               	movlw	3
 29044  016302  6E09               	movwf	(btemp+8)^0,c
 29045  016304  0E00               	movlw	0
 29046  016306  6E0A               	movwf	(btemp+9)^0,c
 29047  016308  2A0C               	incf	(btemp+11)^0,f,c
 29048  01630A  D003               	goto	u9794
 29049  01630C                     u9795:
 29050  01630C  340A               	rlcf	(btemp+9)^0,w,c
 29051  01630E  320A               	rrcf	(btemp+9)^0,f,c
 29052  016310  3209               	rrcf	(btemp+8)^0,f,c
 29053  016312                     u9794:
 29054  016312  2E0C               	decfsz	(btemp+11)^0,f,c
 29055  016314  D7FB               	goto	u9795
 29056  016316  B009               	btfsc	(btemp+8)^0,0,c
 29057  016318  D011               	goto	u9820
 29058                           
 29059                           ;stkvar	_chan @ sp[(0)+-1]
 29060  01631A  0EFF               	movlw	-1
 29061  01631C  006F FF8C  F00C    	movff	plusw1,btemp+11
 29062  016322  0E00               	movlw	0
 29063  016324  6E09               	movwf	(btemp+8)^0,c
 29064  016326  0E08               	movlw	8
 29065  016328  6E0A               	movwf	(btemp+9)^0,c
 29066  01632A  2A0C               	incf	(btemp+11)^0,f,c
 29067  01632C  D003               	goto	u9814
 29068  01632E                     u9815:
 29069  01632E  340A               	rlcf	(btemp+9)^0,w,c
 29070  016330  320A               	rrcf	(btemp+9)^0,f,c
 29071  016332  3209               	rrcf	(btemp+8)^0,f,c
 29072  016334                     u9814:
 29073  016334  2E0C               	decfsz	(btemp+11)^0,f,c
 29074  016336  D7FB               	goto	u9815
 29075  016338  A009               	btfss	(btemp+8)^0,0,c
 29076  01633A  D04E               	goto	l10592
 29077  01633C                     u9820:
 29078                           
 29079                           ;daq.c: 152:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 29080  01633C  0E00               	movlw	0
 29081  01633E  6EE6               	movwf	postinc1,c
 29082  016340  0E00               	movlw	0
 29083  016342  6EE6               	movwf	postinc1,c
 29084  016344  0E7A               	movlw	122
 29085  016346  6EE6               	movwf	postinc1,c
 29086  016348  0E44               	movlw	68
 29087  01634A  6EE6               	movwf	postinc1,c
 29088  01634C  0E00               	movlw	0
 29089  01634E  6EE6               	movwf	postinc1,c
 29090  016350  0E00               	movlw	0
 29091  016352  6EE6               	movwf	postinc1,c
 29092  016354  0E20               	movlw	32
 29093  016356  6EE6               	movwf	postinc1,c
 29094  016358  0E3F               	movlw	63
 29095  01635A  6EE6               	movwf	postinc1,c
 29096                           
 29097                           ;stkvar	_chan @ sp[(-8)+-1]
 29098  01635C  0EF7               	movlw	-9
 29099  01635E  50E3               	movf	plusw1,w,c
 29100  016360  6EE6               	movwf	postinc1,c
 29101  016362  ECDB  F0EC         	call	_get_raw_result	;wreg free
 29102  016366  0060  F004  F00B   	movff	btemp,btemp+10
 29103  01636C  0060  F008  F00C   	movff	btemp+1,btemp+11
 29104  016372  500B               	movf	(btemp+10)^0,w,c
 29105  016374  6E05               	movwf	(btemp+4)^0,c
 29106  016376  500C               	movf	(btemp+11)^0,w,c
 29107  016378  6E06               	movwf	(btemp+5)^0,c
 29108  01637A  6A07               	clrf	(btemp+6)^0,c
 29109  01637C  6A08               	clrf	(btemp+7)^0,c
 29110  01637E  0060  F017  FFE6   	movff	btemp+4,postinc1
 29111  016384  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29112  01638A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29113  016390  0060  F023  FFE6   	movff	btemp+7,postinc1
 29114  016396  0E00               	movlw	0
 29115  016398  6EE6               	movwf	postinc1,c
 29116  01639A  ECAA  F0C9         	call	___xxtofl	;wreg free
 29117  01639E  0060  F007  FFE6   	movff	btemp,postinc1
 29118  0163A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29119  0163AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29120  0163B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 29121  0163B6  EC48  F0A5         	call	___flmul	;wreg free
 29122  0163BA  0060  F007  FFE6   	movff	btemp,postinc1
 29123  0163C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29124  0163C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29125  0163CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 29126  0163D2  EC3B  F0AD         	call	___fldiv	;wreg free
 29127  0163D6  D067               	goto	l1959
 29128  0163D8                     l10592:
 29129                           
 29130                           ;daq.c: 154:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 29131  0163D8  0E00               	movlw	0
 29132  0163DA  6EE6               	movwf	postinc1,c
 29133  0163DC  0E00               	movlw	0
 29134  0163DE  6EE6               	movwf	postinc1,c
 29135  0163E0  0E7A               	movlw	122
 29136  0163E2  6EE6               	movwf	postinc1,c
 29137  0163E4  0E44               	movlw	68
 29138  0163E6  6EE6               	movwf	postinc1,c
 29139  0163E8  0E61               	movlw	97
 29140  0163EA  6EE6               	movwf	postinc1,c
 29141  0163EC  0E03               	movlw	3
 29142  0163EE  6EE6               	movwf	postinc1,c
 29143  0163F0  0E84               	movlw	132
 29144  0163F2  6EE6               	movwf	postinc1,c
 29145  0163F4  0E40               	movlw	64
 29146  0163F6  6EE6               	movwf	postinc1,c
 29147                           
 29148                           ;stkvar	_chan @ sp[(-8)+-1]
 29149  0163F8  0EF7               	movlw	-9
 29150  0163FA  50E3               	movf	plusw1,w,c
 29151  0163FC  6EE6               	movwf	postinc1,c
 29152  0163FE  ECDB  F0EC         	call	_get_raw_result	;wreg free
 29153  016402  0060  F004  F00B   	movff	btemp,btemp+10
 29154  016408  0060  F008  F00C   	movff	btemp+1,btemp+11
 29155  01640E  500B               	movf	(btemp+10)^0,w,c
 29156  016410  6E05               	movwf	(btemp+4)^0,c
 29157  016412  500C               	movf	(btemp+11)^0,w,c
 29158  016414  6E06               	movwf	(btemp+5)^0,c
 29159  016416  6A07               	clrf	(btemp+6)^0,c
 29160  016418  6A08               	clrf	(btemp+7)^0,c
 29161  01641A  0060  F017  FFE6   	movff	btemp+4,postinc1
 29162  016420  0060  F01B  FFE6   	movff	btemp+5,postinc1
 29163  016426  0060  F01F  FFE6   	movff	btemp+6,postinc1
 29164  01642C  0060  F023  FFE6   	movff	btemp+7,postinc1
 29165  016432  0E00               	movlw	0
 29166  016434  6EE6               	movwf	postinc1,c
 29167  016436  ECAA  F0C9         	call	___xxtofl	;wreg free
 29168  01643A  0060  F007  FFE6   	movff	btemp,postinc1
 29169  016440  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29170  016446  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29171  01644C  0060  F013  FFE6   	movff	btemp+3,postinc1
 29172  016452  EC48  F0A5         	call	___flmul	;wreg free
 29173  016456  0060  F007  FFE6   	movff	btemp,postinc1
 29174  01645C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29175  016462  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29176  016468  0060  F013  FFE6   	movff	btemp+3,postinc1
 29177  01646E  EC3B  F0AD         	call	___fldiv	;wreg free
 29178  016472  D019               	goto	l1959
 29179  016474                     l10598:
 29180                           
 29181                           ;daq.c: 157:   return 0.0;
 29182  016474  0E00               	movlw	0
 29183  016476  6E01               	movwf	btemp^0,c
 29184  016478  0E00               	movlw	0
 29185  01647A  6E02               	movwf	(btemp+1)^0,c
 29186  01647C  0E00               	movlw	0
 29187  01647E  6E03               	movwf	(btemp+2)^0,c
 29188  016480  0E00               	movlw	0
 29189  016482                     L35:
 29190  016482  6E04               	movwf	(btemp+3)^0,c
 29191  016484  D010               	goto	l1959
 29192  016486                     l10606:
 29193                           
 29194                           ;stkvar	_to_what @ sp[(0)+-2]
 29195  016486  0EFE               	movlw	-2
 29196  016488  50E3               	movf	plusw1,w,c
 29197  01648A  6E0B               	movwf	(btemp+10)^0,c
 29198  01648C  6A0C               	clrf	(btemp+11)^0,c
 29199                           
 29200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29201                           ; Switch size 1, requested type "simple"
 29202                           ; Number of cases is 1, Range of values is 0 to 0
 29203                           ; switch strategies available:
 29204                           ; Name         Instructions Cycles
 29205                           ; simple_byte            4     3 (average)
 29206                           ;	Chosen strategy is simple_byte
 29207  01648E  500C               	movf	(btemp+11)^0,w,c
 29208  016490  0A00               	xorlw	0	; case 0
 29209  016492  A4D8               	btfss	status,2,c
 29210  016494  D7EF               	goto	l10598
 29211                           
 29212                           ; Switch size 1, requested type "simple"
 29213                           ; Number of cases is 2, Range of values is 0 to 1
 29214                           ; switch strategies available:
 29215                           ; Name         Instructions Cycles
 29216                           ; simple_byte            7     4 (average)
 29217                           ;	Chosen strategy is simple_byte
 29218  016496  500B               	movf	(btemp+10)^0,w,c
 29219  016498  0A00               	xorlw	0	; case 0
 29220  01649A  B4D8               	btfsc	status,2,c
 29221  01649C  D5AA               	goto	l10552
 29222  01649E  0A01               	xorlw	1	; case 1
 29223  0164A0  B4D8               	btfsc	status,2,c
 29224  0164A2  D72A               	goto	l10584
 29225  0164A4  D7E7               	goto	l10598
 29226  0164A6                     l1959:
 29227                           
 29228                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29229  0164A6  52E5               	movf	postdec1,f,c
 29230  0164A8  52E5               	movf	postdec1,f,c
 29231  0164AA  0012               	return		;funcret
 29232  0164AC                     __end_of_conv_raw_result:
 29233                           	opt callstack 0
 29234                           
 29235 ;; *************** function _nanf *****************
 29236 ;; Defined at:
 29237 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 29238 ;; Parameters:    Size  Location     Type
 29239 ;;  s               2  [STACK] PTR const unsigned char 
 29240 ;;		 -> STR_130(1), STR_92(1), 
 29241 ;; Auto vars:     Size  Location     Type
 29242 ;;  u               4  [STACK] struct .
 29243 ;; Return value:  Size  Location     Type
 29244 ;;                  4  [STACK] float 
 29245 ;; Registers used:
 29246 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 29247 ;; Tracked objects:
 29248 ;;		On entry : 0/0
 29249 ;;		On exit  : 0/0
 29250 ;;		Unchanged: 0/0
 29251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29256 ;;Total ram usage:        0 bytes
 29257 ;; Hardware stack levels used:    1
 29258 ;; Hardware stack levels required when called:   15
 29259 ;; This function calls:
 29260 ;;		Nothing
 29261 ;; This function is called by:
 29262 ;;		_conv_raw_result
 29263 ;; This function uses a reentrant model
 29264 ;;
 29265                           
 29266                           	psect	text117
 29267  01CA54                     __ptext117:
 29268                           	opt callstack 0
 29269  01CA54                     _nanf:
 29270                           	opt callstack 0
 29271                           
 29272                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29273  01CA54  52E6               	movf	postinc1,f,c
 29274  01CA56  52E6               	movf	postinc1,f,c
 29275  01CA58  52E6               	movf	postinc1,f,c
 29276  01CA5A  52E6               	movf	postinc1,f,c
 29277                           
 29278                           ;incstack = 0
 29279 ;; hardware stack exceeded
 29280  01CA5C  0EFF               	movlw	255
 29281  01CA5E  6E09               	movwf	(btemp+8)^0,c
 29282  01CA60  0EFF               	movlw	255
 29283  01CA62  6E0A               	movwf	(btemp+9)^0,c
 29284  01CA64  0EFF               	movlw	255
 29285  01CA66  6E0B               	movwf	(btemp+10)^0,c
 29286  01CA68  0E7F               	movlw	127
 29287  01CA6A  6E0C               	movwf	(btemp+11)^0,c
 29288                           
 29289                           ;stkvar	_u @ sp[(-4)+0]
 29290  01CA6C  0EFC               	movlw	-4
 29291  01CA6E  0060  F027  FFE3   	movff	btemp+8,plusw1
 29292  01CA74  0EFD               	movlw	-3
 29293  01CA76  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29294  01CA7C  0EFE               	movlw	-2
 29295  01CA7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29296  01CA84  0EFF               	movlw	-1
 29297  01CA86  0060  F033  FFE3   	movff	btemp+11,plusw1
 29298                           
 29299                           ;stkvar	_u @ sp[(-4)+0]
 29300  01CA8C  0EFC               	movlw	-4
 29301  01CA8E  006F FF8C  F001    	movff	plusw1,btemp
 29302  01CA94  0EFD               	movlw	-3
 29303  01CA96  006F FF8C  F002    	movff	plusw1,btemp+1
 29304  01CA9C  0EFE               	movlw	-2
 29305  01CA9E  006F FF8C  F003    	movff	plusw1,btemp+2
 29306  01CAA4  0EFF               	movlw	-1
 29307  01CAA6  006F FF8C  F004    	movff	plusw1,btemp+3
 29308                           
 29309                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 29310  01CAAC  0EFA               	movlw	250
 29311  01CAAE  26E1               	addwf	fsr1l,f,c
 29312  01CAB0  0EFF               	movlw	255
 29313  01CAB2  22E2               	addwfc	fsr1h,f,c
 29314  01CAB4  0012               	return		;funcret
 29315  01CAB6                     __end_of_nanf:
 29316                           	opt callstack 0
 29317                           
 29318 ;; *************** function _get_raw_result *****************
 29319 ;; Defined at:
 29320 ;;		line 120 in file "daq.c"
 29321 ;; Parameters:    Size  Location     Type
 29322 ;;  index           1  [STACK] const enum E16605
 29323 ;; Auto vars:     Size  Location     Type
 29324 ;;		None
 29325 ;; Return value:  Size  Location     Type
 29326 ;;                  2  [STACK] unsigned short 
 29327 ;; Registers used:
 29328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 29329 ;; Tracked objects:
 29330 ;;		On entry : 0/1
 29331 ;;		On exit  : 0/0
 29332 ;;		Unchanged: 0/0
 29333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29338 ;;Total ram usage:        0 bytes
 29339 ;; Hardware stack levels used:    1
 29340 ;; Hardware stack levels required when called:   15
 29341 ;; This function calls:
 29342 ;;		Nothing
 29343 ;; This function is called by:
 29344 ;;		_main
 29345 ;;		_current_sensor_cal
 29346 ;;		_conv_raw_result
 29347 ;; This function uses a reentrant model
 29348 ;;
 29349                           
 29350                           	psect	text118
 29351  01D9B6                     __ptext118:
 29352                           	opt callstack 0
 29353  01D9B6                     _get_raw_result:
 29354                           	opt callstack 0
 29355                           
 29356                           ;daq.c: 120: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 121: {;daq.c
      +                          : 122:  return R.raw_adc[index];
 29357                           ;stkvar	_index @ sp[(0)+-1]
 29358                           
 29359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29360                           ;incstack = 0
 29361 ;; hardware stack exceeded
 29362  01D9B6  0EFF               	movlw	-1
 29363  01D9B8  50E3               	movf	plusw1,w,c
 29364  01D9BA  0D02               	mullw	2
 29365  01D9BC  50F3               	movf	243,w,c
 29366  01D9BE  0FAE               	addlw	low _R
 29367  01D9C0  6ED9               	movwf	fsr2l,c
 29368  01D9C2  6ADA               	clrf	fsr2h,c
 29369  01D9C4  006F FF78  F001    	movff	postinc2,btemp
 29370  01D9CA  006F FF74  F002    	movff	postdec2,btemp+1
 29371                           
 29372                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 29373  01D9D0  52E5               	movf	postdec1,f,c
 29374  01D9D2  0012               	return		;funcret
 29375  01D9D4                     __end_of_get_raw_result:
 29376                           	opt callstack 0
 29377                           
 29378 ;; *************** function ___xxtofl *****************
 29379 ;; Defined at:
 29380 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 29381 ;; Parameters:    Size  Location     Type
 29382 ;;  sign            1  [STACK] unsigned char 
 29383 ;;  val             4  [STACK] long 
 29384 ;; Auto vars:     Size  Location     Type
 29385 ;;  arg             4  [STACK] unsigned long 
 29386 ;;  exp             1  [STACK] unsigned char 
 29387 ;; Return value:  Size  Location     Type
 29388 ;;                  4  [STACK] unsigned char 
 29389 ;; Registers used:
 29390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 29391 ;; Tracked objects:
 29392 ;;		On entry : 0/0
 29393 ;;		On exit  : 0/0
 29394 ;;		Unchanged: 0/0
 29395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29400 ;;Total ram usage:        0 bytes
 29401 ;; Hardware stack levels used:    1
 29402 ;; Hardware stack levels required when called:   15
 29403 ;; This function calls:
 29404 ;;		Nothing
 29405 ;; This function is called by:
 29406 ;;		_current_sensor_cal
 29407 ;;		_conv_raw_result
 29408 ;;		_init_bsoc
 29409 ;; This function uses a reentrant model
 29410 ;;
 29411                           
 29412                           	psect	text119
 29413  019354                     __ptext119:
 29414                           	opt callstack 0
 29415  019354                     ___xxtofl:
 29416                           	opt callstack 0
 29417                           
 29418                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29419  019354  0E05               	movlw	5
 29420  019356  26E1               	addwf	fsr1l,f,c
 29421  019358  0E00               	movlw	0
 29422  01935A  22E2               	addwfc	fsr1h,f,c
 29423                           
 29424                           ;stkvar	_sign @ sp[(-5)+-1]
 29425                           
 29426                           ;incstack = 0
 29427 ;; hardware stack exceeded
 29428  01935C  0EFA               	movlw	-6
 29429  01935E  50E3               	movf	plusw1,w,c
 29430  019360  B4D8               	btfsc	status,2,c
 29431  019362  D01D               	goto	l10480
 29432                           
 29433                           ;stkvar	_val @ sp[(-5)+-5]
 29434  019364  0EF9               	movlw	-7
 29435  019366  AEE3               	btfss	plusw1,7,c
 29436  019368  D01A               	goto	l10480
 29437                           
 29438                           ;stkvar	_val @ sp[(-5)+-5]
 29439  01936A  0EF6               	movlw	-10
 29440  01936C  006F FF8C  F009    	movff	plusw1,btemp+8
 29441  019372  0EF7               	movlw	-9
 29442  019374  006F FF8C  F00A    	movff	plusw1,btemp+9
 29443  01937A  0EF8               	movlw	-8
 29444  01937C  006F FF8C  F00B    	movff	plusw1,btemp+10
 29445  019382  0EF9               	movlw	-7
 29446  019384  006F FF8C  F00C    	movff	plusw1,btemp+11
 29447  01938A  1E09               	comf	(btemp+8)^0,f,c
 29448  01938C  1E0A               	comf	(btemp+9)^0,f,c
 29449  01938E  1E0B               	comf	(btemp+10)^0,f,c
 29450  019390  1E0C               	comf	(btemp+11)^0,f,c
 29451  019392  2A09               	incf	(btemp+8)^0,f,c
 29452  019394  0E00               	movlw	0
 29453  019396  220A               	addwfc	(btemp+9)^0,f,c
 29454  019398  220B               	addwfc	(btemp+10)^0,f,c
 29455  01939A  220C               	addwfc	(btemp+11)^0,f,c
 29456  01939C  D010               	goto	L36
 29457  01939E                     l10480:
 29458                           
 29459                           ;stkvar	_val @ sp[(-5)+-5]
 29460  01939E  0EF6               	movlw	-10
 29461  0193A0  006F FF8C  F009    	movff	plusw1,btemp+8
 29462  0193A6  0EF7               	movlw	-9
 29463  0193A8  006F FF8C  F00A    	movff	plusw1,btemp+9
 29464  0193AE  0EF8               	movlw	-8
 29465  0193B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 29466  0193B6  0EF9               	movlw	-7
 29467  0193B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29468  0193BE                     L36:
 29469                           
 29470                           ;stkvar	_arg @ sp[(-5)+0]
 29471  0193BE  0EFB               	movlw	-5
 29472  0193C0  0060  F027  FFE3   	movff	btemp+8,plusw1
 29473  0193C6  0EFC               	movlw	-4
 29474  0193C8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29475  0193CE  0EFD               	movlw	-3
 29476  0193D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29477  0193D6  0EFE               	movlw	-2
 29478  0193D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29479                           
 29480                           ;stkvar	_val @ sp[(-5)+-5]
 29481  0193DE  0EF6               	movlw	-10
 29482  0193E0  50E3               	movf	plusw1,w,c
 29483  0193E2  E113               	bnz	l10488
 29484  0193E4  0EF7               	movlw	-9
 29485  0193E6  50E3               	movf	plusw1,w,c
 29486  0193E8  E110               	bnz	l10488
 29487  0193EA  0EF8               	movlw	-8
 29488  0193EC  50E3               	movf	plusw1,w,c
 29489  0193EE  E10D               	bnz	l10488
 29490  0193F0  0EF9               	movlw	-7
 29491  0193F2  50E3               	movf	plusw1,w,c
 29492  0193F4  A4D8               	btfss	status,2,c
 29493  0193F6  D009               	goto	l10488
 29494  0193F8  0E00               	movlw	0
 29495  0193FA  6E01               	movwf	btemp^0,c
 29496  0193FC  0E00               	movlw	0
 29497  0193FE  6E02               	movwf	(btemp+1)^0,c
 29498  019400  0E00               	movlw	0
 29499  019402  6E03               	movwf	(btemp+2)^0,c
 29500  019404  0E00               	movlw	0
 29501  019406  6E04               	movwf	(btemp+3)^0,c
 29502  019408  D0A2               	goto	l3331
 29503  01940A                     l10488:
 29504  01940A  0E96               	movlw	150
 29505  01940C  6E0C               	movwf	(btemp+11)^0,c
 29506                           
 29507                           ;stkvar	_exp @ sp[(-5)+4]
 29508  01940E  0EFF               	movlw	-1
 29509  019410  0060  F033  FFE3   	movff	btemp+11,plusw1
 29510  019416  D00B               	goto	l10492
 29511  019418                     l10490:
 29512                           
 29513                           ;stkvar	_exp @ sp[(-5)+4]
 29514  019418  0EFF               	movlw	-1
 29515  01941A  2AE3               	incf	plusw1,f,c
 29516                           
 29517                           ;stkvar	_arg @ sp[(-5)+0]
 29518  01941C  90D8               	bcf	status,0,c
 29519  01941E  0EFE               	movlw	-2
 29520  019420  32E3               	rrcf	plusw1,f,c
 29521  019422  0EFD               	movlw	-3
 29522  019424  32E3               	rrcf	plusw1,f,c
 29523  019426  0EFC               	movlw	-4
 29524  019428  32E3               	rrcf	plusw1,f,c
 29525  01942A  0EFB               	movlw	-5
 29526  01942C  32E3               	rrcf	plusw1,f,c
 29527  01942E                     l10492:
 29528                           
 29529                           ;stkvar	_arg @ sp[(-5)+0]
 29530  01942E  50E1               	movf	fsr1l,w,c
 29531  019430  0FFB               	addlw	-5
 29532  019432  6ED9               	movwf	fsr2l,c
 29533  019434  50E2               	movf	fsr1h,w,c
 29534  019436  6EDA               	movwf	fsr2h,c
 29535  019438  0EFF               	movlw	255
 29536  01943A  22DA               	addwfc	fsr2h,f,c
 29537  01943C  52DE               	movf	postinc2,f,c
 29538  01943E  52DE               	movf	postinc2,f,c
 29539  019440  52DE               	movf	postinc2,f,c
 29540  019442  0EFE               	movlw	254
 29541  019444  14DD               	andwf	postdec2,w,c
 29542  019446  B4D8               	btfsc	status,2,c
 29543  019448  D018               	goto	l10500
 29544  01944A  D7E6               	goto	l10490
 29545  01944C                     l10494:
 29546                           
 29547                           ;stkvar	_exp @ sp[(-5)+4]
 29548  01944C  0EFF               	movlw	-1
 29549  01944E  2AE3               	incf	plusw1,f,c
 29550                           
 29551                           ;stkvar	_arg @ sp[(-5)+0]
 29552  019450  50E1               	movf	fsr1l,w,c
 29553  019452  0FFB               	addlw	-5
 29554  019454  6ED9               	movwf	fsr2l,c
 29555  019456  50E2               	movf	fsr1h,w,c
 29556  019458  6EDA               	movwf	fsr2h,c
 29557  01945A  0EFF               	movlw	255
 29558  01945C  22DA               	addwfc	fsr2h,f,c
 29559  01945E  2ADE               	incf	postinc2,f,c
 29560  019460  0E00               	movlw	0
 29561  019462  22DE               	addwfc	postinc2,f,c
 29562  019464  22DE               	addwfc	postinc2,f,c
 29563  019466  22DE               	addwfc	postinc2,f,c
 29564                           
 29565                           ;stkvar	_arg @ sp[(-5)+0]
 29566  019468  90D8               	bcf	status,0,c
 29567  01946A  0EFE               	movlw	-2
 29568  01946C  32E3               	rrcf	plusw1,f,c
 29569  01946E  0EFD               	movlw	-3
 29570  019470  32E3               	rrcf	plusw1,f,c
 29571  019472  0EFC               	movlw	-4
 29572  019474  32E3               	rrcf	plusw1,f,c
 29573  019476  0EFB               	movlw	-5
 29574  019478  32E3               	rrcf	plusw1,f,c
 29575  01947A                     l10500:
 29576                           
 29577                           ;stkvar	_arg @ sp[(-5)+0]
 29578  01947A  50E1               	movf	fsr1l,w,c
 29579  01947C  0FFB               	addlw	-5
 29580  01947E  6ED9               	movwf	fsr2l,c
 29581  019480  50E2               	movf	fsr1h,w,c
 29582  019482  6EDA               	movwf	fsr2h,c
 29583  019484  0EFF               	movlw	255
 29584  019486  22DA               	addwfc	fsr2h,f,c
 29585  019488  52DE               	movf	postinc2,f,c
 29586  01948A  52DE               	movf	postinc2,f,c
 29587  01948C  52DE               	movf	postinc2,f,c
 29588  01948E  0EFF               	movlw	255
 29589  019490  14DD               	andwf	postdec2,w,c
 29590  019492  B4D8               	btfsc	status,2,c
 29591  019494  D00C               	goto	l10504
 29592  019496  D7DA               	goto	l10494
 29593  019498                     l10502:
 29594                           
 29595                           ;stkvar	_exp @ sp[(-5)+4]
 29596  019498  0EFF               	movlw	-1
 29597  01949A  06E3               	decf	plusw1,f,c
 29598                           
 29599                           ;stkvar	_arg @ sp[(-5)+0]
 29600  01949C  90D8               	bcf	status,0,c
 29601  01949E  0EFB               	movlw	-5
 29602  0194A0  36E3               	rlcf	plusw1,f,c
 29603  0194A2  0EFC               	movlw	-4
 29604  0194A4  36E3               	rlcf	plusw1,f,c
 29605  0194A6  0EFD               	movlw	-3
 29606  0194A8  36E3               	rlcf	plusw1,f,c
 29607  0194AA  0EFE               	movlw	-2
 29608  0194AC  36E3               	rlcf	plusw1,f,c
 29609  0194AE                     l10504:
 29610                           
 29611                           ;stkvar	_arg @ sp[(-5)+0]
 29612  0194AE  0EFD               	movlw	-3
 29613  0194B0  BEE3               	btfsc	plusw1,7,c
 29614  0194B2  D007               	goto	u9640
 29615                           
 29616                           ;stkvar	_exp @ sp[(-5)+4]
 29617  0194B4  0EFF               	movlw	-1
 29618  0194B6  006F FF8C  F001    	movff	plusw1,btemp
 29619  0194BC  0E02               	movlw	2
 29620  0194BE  6001               	cpfslt	btemp^0,c
 29621  0194C0  D7EB               	goto	l10502
 29622  0194C2                     u9640:
 29623                           
 29624                           ;stkvar	_exp @ sp[(-5)+4]
 29625  0194C2  0EFF               	movlw	-1
 29626  0194C4  B0E3               	btfsc	plusw1,0,c
 29627  0194C6  D002               	goto	l10512
 29628                           
 29629                           ;stkvar	_arg @ sp[(-5)+0]
 29630  0194C8  0EFD               	movlw	-3
 29631  0194CA  9EE3               	bcf	plusw1,7,c
 29632  0194CC                     l10512:
 29633                           
 29634                           ;stkvar	_exp @ sp[(-5)+4]
 29635  0194CC  50E1               	movf	fsr1l,w,c
 29636  0194CE  0FFF               	addlw	-1
 29637  0194D0  6ED9               	movwf	fsr2l,c
 29638  0194D2  50E2               	movf	fsr1h,w,c
 29639  0194D4  6EDA               	movwf	fsr2h,c
 29640  0194D6  0EFF               	movlw	255
 29641  0194D8  22DA               	addwfc	fsr2h,f,c
 29642  0194DA  90D8               	bcf	status,0,c
 29643  0194DC  32DF               	rrcf	indf2,f,c
 29644                           
 29645                           ;stkvar	_exp @ sp[(-5)+4]
 29646  0194DE  0EFF               	movlw	-1
 29647  0194E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29648  0194E6  0060  F030  F005   	movff	btemp+11,btemp+4
 29649  0194EC  6A06               	clrf	(btemp+5)^0,c
 29650  0194EE  6A07               	clrf	(btemp+6)^0,c
 29651  0194F0  6A08               	clrf	(btemp+7)^0,c
 29652  0194F2  0060  F014  F008   	movff	btemp+4,btemp+7
 29653  0194F8  6A07               	clrf	(btemp+6)^0,c
 29654  0194FA  6A06               	clrf	(btemp+5)^0,c
 29655  0194FC  6A05               	clrf	(btemp+4)^0,c
 29656                           
 29657                           ;stkvar	_arg @ sp[(-5)+0]
 29658  0194FE  50E1               	movf	fsr1l,w,c
 29659  019500  0FFB               	addlw	-5
 29660  019502  6ED9               	movwf	fsr2l,c
 29661  019504  50E2               	movf	fsr1h,w,c
 29662  019506  6EDA               	movwf	fsr2h,c
 29663  019508  0EFF               	movlw	255
 29664  01950A  22DA               	addwfc	fsr2h,f,c
 29665  01950C  5005               	movf	(btemp+4)^0,w,c
 29666  01950E  12DE               	iorwf	postinc2,f,c
 29667  019510  5006               	movf	(btemp+5)^0,w,c
 29668  019512  12DE               	iorwf	postinc2,f,c
 29669  019514  5007               	movf	(btemp+6)^0,w,c
 29670  019516  12DE               	iorwf	postinc2,f,c
 29671  019518  5008               	movf	(btemp+7)^0,w,c
 29672  01951A  12DE               	iorwf	postinc2,f,c
 29673                           
 29674                           ;stkvar	_sign @ sp[(-5)+-1]
 29675  01951C  0EFA               	movlw	-6
 29676  01951E  50E3               	movf	plusw1,w,c
 29677  019520  B4D8               	btfsc	status,2,c
 29678  019522  D005               	goto	l10522
 29679                           
 29680                           ;stkvar	_val @ sp[(-5)+-5]
 29681  019524  0EF9               	movlw	-7
 29682  019526  AEE3               	btfss	plusw1,7,c
 29683  019528  D002               	goto	l10522
 29684                           
 29685                           ;stkvar	_arg @ sp[(-5)+0]
 29686  01952A  0EFE               	movlw	-2
 29687  01952C  8EE3               	bsf	plusw1,7,c
 29688  01952E                     l10522:
 29689                           
 29690                           ;stkvar	_arg @ sp[(-5)+0]
 29691  01952E  0EFB               	movlw	-5
 29692  019530  006F FF8C  F001    	movff	plusw1,btemp
 29693  019536  0EFC               	movlw	-4
 29694  019538  006F FF8C  F002    	movff	plusw1,btemp+1
 29695  01953E  0EFD               	movlw	-3
 29696  019540  006F FF8C  F003    	movff	plusw1,btemp+2
 29697  019546  0EFE               	movlw	-2
 29698  019548  006F FF8C  F004    	movff	plusw1,btemp+3
 29699  01954E                     l3331:
 29700                           
 29701                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 29702  01954E  0EF6               	movlw	246
 29703  019550  26E1               	addwf	fsr1l,f,c
 29704  019552  0EFF               	movlw	255
 29705  019554  22E2               	addwfc	fsr1h,f,c
 29706  019556  0012               	return		;funcret
 29707  019558                     __end_of___xxtofl:
 29708                           	opt callstack 0
 29709                           
 29710 ;; *************** function ___fldiv *****************
 29711 ;; Defined at:
 29712 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 29713 ;; Parameters:    Size  Location     Type
 29714 ;;  b               4  [STACK] unsigned char 
 29715 ;;  a               4  [STACK] unsigned char 
 29716 ;; Auto vars:     Size  Location     Type
 29717 ;;  grs             4  [STACK] unsigned long 
 29718 ;;  rem             4  [STACK] unsigned long 
 29719 ;;  new_exp         2  [STACK] short 
 29720 ;;  aexp            1  [STACK] unsigned char 
 29721 ;;  bexp            1  [STACK] unsigned char 
 29722 ;;  sign            1  [STACK] unsigned char 
 29723 ;; Return value:  Size  Location     Type
 29724 ;;                  4  [STACK] unsigned char 
 29725 ;; Registers used:
 29726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 29727 ;; Tracked objects:
 29728 ;;		On entry : 0/0
 29729 ;;		On exit  : 0/0
 29730 ;;		Unchanged: 0/0
 29731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29736 ;;Total ram usage:        0 bytes
 29737 ;; Hardware stack levels used:    1
 29738 ;; Hardware stack levels required when called:   15
 29739 ;; This function calls:
 29740 ;;		Nothing
 29741 ;; This function is called by:
 29742 ;;		_current_sensor_cal
 29743 ;;		_conv_raw_result
 29744 ;;		_convert_dac_raw
 29745 ;;		_calc_bsoc
 29746 ;;		_init_bsoc
 29747 ;;		_esr_check
 29748 ;;		_efgtoa
 29749 ;; This function uses a reentrant model
 29750 ;;
 29751                           
 29752                           	psect	text120
 29753  015A76                     __ptext120:
 29754                           	opt callstack 0
 29755  015A76                     ___fldiv:
 29756                           	opt callstack 0
 29757                           
 29758                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29759  015A76  0E0D               	movlw	13
 29760  015A78  26E1               	addwf	fsr1l,f,c
 29761  015A7A  0E00               	movlw	0
 29762  015A7C  22E2               	addwfc	fsr1h,f,c
 29763                           
 29764                           ;stkvar	_b @ sp[(-13)+-4]
 29765                           
 29766                           ;incstack = 0
 29767 ;; hardware stack exceeded
 29768  015A7E  0EF2               	movlw	242
 29769  015A80  24E1               	addwf	fsr1l,w,c
 29770  015A82  6ED9               	movwf	fsr2l,c
 29771  015A84  0EFF               	movlw	255
 29772  015A86  20E2               	addwfc	fsr1h,w,c
 29773  015A88  6EDA               	movwf	fsr2h,c
 29774  015A8A  50DF               	movf	indf2,w,c
 29775  015A8C  6E0C               	movwf	(btemp+11)^0,c
 29776  015A8E  0E80               	movlw	128
 29777  015A90  160C               	andwf	(btemp+11)^0,f,c
 29778                           
 29779                           ;stkvar	_sign @ sp[(-13)+12]
 29780  015A92  0EFF               	movlw	-1
 29781  015A94  0060  F033  FFE3   	movff	btemp+11,plusw1
 29782                           
 29783                           ;stkvar	_b @ sp[(-13)+-4]
 29784  015A9A  0EF2               	movlw	242
 29785  015A9C  24E1               	addwf	fsr1l,w,c
 29786  015A9E  6ED9               	movwf	fsr2l,c
 29787  015AA0  0EFF               	movlw	255
 29788  015AA2  20E2               	addwfc	fsr1h,w,c
 29789  015AA4  6EDA               	movwf	fsr2h,c
 29790  015AA6  50DF               	movf	indf2,w,c
 29791  015AA8  6E0C               	movwf	(btemp+11)^0,c
 29792  015AAA  90D8               	bcf	status,0,c
 29793  015AAC  340C               	rlcf	(btemp+11)^0,w,c
 29794  015AAE  6E0B               	movwf	(btemp+10)^0,c
 29795                           
 29796                           ;stkvar	_bexp @ sp[(-13)+11]
 29797  015AB0  0EFE               	movlw	-2
 29798  015AB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29799                           
 29800                           ;stkvar	_b @ sp[(-13)+-4]
 29801  015AB8  0EF1               	movlw	241
 29802  015ABA  24E1               	addwf	fsr1l,w,c
 29803  015ABC  6ED9               	movwf	fsr2l,c
 29804  015ABE  0EFF               	movlw	255
 29805  015AC0  20E2               	addwfc	fsr1h,w,c
 29806  015AC2  6EDA               	movwf	fsr2h,c
 29807  015AC4  AEDF               	btfss	indf2,7,c
 29808  015AC6  D002               	goto	l9052
 29809                           
 29810                           ;stkvar	_bexp @ sp[(-13)+11]
 29811  015AC8  0EFE               	movlw	-2
 29812  015ACA  80E3               	bsf	plusw1,0,c
 29813  015ACC                     l9052:
 29814                           
 29815                           ;stkvar	_bexp @ sp[(-13)+11]
 29816  015ACC  0EFE               	movlw	-2
 29817  015ACE  50E3               	movf	plusw1,w,c
 29818  015AD0  B4D8               	btfsc	status,2,c
 29819  015AD2  D027               	goto	l9062
 29820                           
 29821                           ;stkvar	_bexp @ sp[(-13)+11]
 29822  015AD4  0EFE               	movlw	-2
 29823  015AD6  28E3               	incf	plusw1,w,c
 29824  015AD8  A4D8               	btfss	status,2,c
 29825  015ADA  D018               	goto	l9058
 29826  015ADC  0E00               	movlw	0
 29827  015ADE  6E09               	movwf	(btemp+8)^0,c
 29828  015AE0  0E00               	movlw	0
 29829  015AE2  6E0A               	movwf	(btemp+9)^0,c
 29830  015AE4  0E00               	movlw	0
 29831  015AE6  6E0B               	movwf	(btemp+10)^0,c
 29832  015AE8  0E00               	movlw	0
 29833  015AEA  6E0C               	movwf	(btemp+11)^0,c
 29834                           
 29835                           ;stkvar	_b @ sp[(-13)+-4]
 29836  015AEC  0EEF               	movlw	-17
 29837  015AEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29838  015AF4  0EF0               	movlw	-16
 29839  015AF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29840  015AFC  0EF1               	movlw	-15
 29841  015AFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29842  015B04  0EF2               	movlw	-14
 29843  015B06  0060  F033  FFE3   	movff	btemp+11,plusw1
 29844  015B0C                     l9058:
 29845                           
 29846                           ;stkvar	_b @ sp[(-13)+-4]
 29847  015B0C  0EF1               	movlw	-15
 29848  015B0E  8EE3               	bsf	plusw1,7,c
 29849                           
 29850                           ;stkvar	_b @ sp[(-13)+-4]
 29851  015B10  0EF2               	movlw	242
 29852  015B12  24E1               	addwf	fsr1l,w,c
 29853  015B14  6ED9               	movwf	fsr2l,c
 29854  015B16  0EFF               	movlw	255
 29855  015B18  20E2               	addwfc	fsr1h,w,c
 29856  015B1A  6EDA               	movwf	fsr2h,c
 29857  015B1C  0E00               	movlw	0
 29858  015B1E  6EDF               	movwf	indf2,c
 29859  015B20  D018               	goto	l9064
 29860  015B22                     l9062:
 29861  015B22  0E00               	movlw	0
 29862  015B24  6E09               	movwf	(btemp+8)^0,c
 29863  015B26  0E00               	movlw	0
 29864  015B28  6E0A               	movwf	(btemp+9)^0,c
 29865  015B2A  0E00               	movlw	0
 29866  015B2C  6E0B               	movwf	(btemp+10)^0,c
 29867  015B2E  0E00               	movlw	0
 29868  015B30  6E0C               	movwf	(btemp+11)^0,c
 29869                           
 29870                           ;stkvar	_b @ sp[(-13)+-4]
 29871  015B32  0EEF               	movlw	-17
 29872  015B34  0060  F027  FFE3   	movff	btemp+8,plusw1
 29873  015B3A  0EF0               	movlw	-16
 29874  015B3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29875  015B42  0EF1               	movlw	-15
 29876  015B44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29877  015B4A  0EF2               	movlw	-14
 29878  015B4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 29879  015B52                     l9064:
 29880                           
 29881                           ;stkvar	_a @ sp[(-13)+-8]
 29882  015B52  0EEE               	movlw	238
 29883  015B54  24E1               	addwf	fsr1l,w,c
 29884  015B56  6ED9               	movwf	fsr2l,c
 29885  015B58  0EFF               	movlw	255
 29886  015B5A  20E2               	addwfc	fsr1h,w,c
 29887  015B5C  6EDA               	movwf	fsr2h,c
 29888  015B5E  50DF               	movf	indf2,w,c
 29889  015B60  6E0C               	movwf	(btemp+11)^0,c
 29890  015B62  0E80               	movlw	128
 29891  015B64  160C               	andwf	(btemp+11)^0,f,c
 29892                           
 29893                           ;stkvar	_sign @ sp[(-13)+12]
 29894  015B66  50E1               	movf	fsr1l,w,c
 29895  015B68  0FFF               	addlw	-1
 29896  015B6A  6ED9               	movwf	fsr2l,c
 29897  015B6C  50E2               	movf	fsr1h,w,c
 29898  015B6E  6EDA               	movwf	fsr2h,c
 29899  015B70  0EFF               	movlw	255
 29900  015B72  22DA               	addwfc	fsr2h,f,c
 29901  015B74  500C               	movf	(btemp+11)^0,w,c
 29902  015B76  1ADF               	xorwf	indf2,f,c
 29903                           
 29904                           ;stkvar	_a @ sp[(-13)+-8]
 29905  015B78  0EEE               	movlw	238
 29906  015B7A  24E1               	addwf	fsr1l,w,c
 29907  015B7C  6ED9               	movwf	fsr2l,c
 29908  015B7E  0EFF               	movlw	255
 29909  015B80  20E2               	addwfc	fsr1h,w,c
 29910  015B82  6EDA               	movwf	fsr2h,c
 29911  015B84  50DF               	movf	indf2,w,c
 29912  015B86  6E0C               	movwf	(btemp+11)^0,c
 29913  015B88  90D8               	bcf	status,0,c
 29914  015B8A  340C               	rlcf	(btemp+11)^0,w,c
 29915  015B8C  6E0B               	movwf	(btemp+10)^0,c
 29916                           
 29917                           ;stkvar	_aexp @ sp[(-13)+10]
 29918  015B8E  0EFD               	movlw	-3
 29919  015B90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29920                           
 29921                           ;stkvar	_a @ sp[(-13)+-8]
 29922  015B96  0EED               	movlw	237
 29923  015B98  24E1               	addwf	fsr1l,w,c
 29924  015B9A  6ED9               	movwf	fsr2l,c
 29925  015B9C  0EFF               	movlw	255
 29926  015B9E  20E2               	addwfc	fsr1h,w,c
 29927  015BA0  6EDA               	movwf	fsr2h,c
 29928  015BA2  AEDF               	btfss	indf2,7,c
 29929  015BA4  D002               	goto	l9072
 29930                           
 29931                           ;stkvar	_aexp @ sp[(-13)+10]
 29932  015BA6  0EFD               	movlw	-3
 29933  015BA8  80E3               	bsf	plusw1,0,c
 29934  015BAA                     l9072:
 29935                           
 29936                           ;stkvar	_aexp @ sp[(-13)+10]
 29937  015BAA  0EFD               	movlw	-3
 29938  015BAC  50E3               	movf	plusw1,w,c
 29939  015BAE  B4D8               	btfsc	status,2,c
 29940  015BB0  D027               	goto	l9082
 29941                           
 29942                           ;stkvar	_aexp @ sp[(-13)+10]
 29943  015BB2  0EFD               	movlw	-3
 29944  015BB4  28E3               	incf	plusw1,w,c
 29945  015BB6  A4D8               	btfss	status,2,c
 29946  015BB8  D018               	goto	l9078
 29947  015BBA  0E00               	movlw	0
 29948  015BBC  6E09               	movwf	(btemp+8)^0,c
 29949  015BBE  0E00               	movlw	0
 29950  015BC0  6E0A               	movwf	(btemp+9)^0,c
 29951  015BC2  0E00               	movlw	0
 29952  015BC4  6E0B               	movwf	(btemp+10)^0,c
 29953  015BC6  0E00               	movlw	0
 29954  015BC8  6E0C               	movwf	(btemp+11)^0,c
 29955                           
 29956                           ;stkvar	_a @ sp[(-13)+-8]
 29957  015BCA  0EEB               	movlw	-21
 29958  015BCC  0060  F027  FFE3   	movff	btemp+8,plusw1
 29959  015BD2  0EEC               	movlw	-20
 29960  015BD4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29961  015BDA  0EED               	movlw	-19
 29962  015BDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29963  015BE2  0EEE               	movlw	-18
 29964  015BE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 29965  015BEA                     l9078:
 29966                           
 29967                           ;stkvar	_a @ sp[(-13)+-8]
 29968  015BEA  0EED               	movlw	-19
 29969  015BEC  8EE3               	bsf	plusw1,7,c
 29970                           
 29971                           ;stkvar	_a @ sp[(-13)+-8]
 29972  015BEE  0EEE               	movlw	238
 29973  015BF0  24E1               	addwf	fsr1l,w,c
 29974  015BF2  6ED9               	movwf	fsr2l,c
 29975  015BF4  0EFF               	movlw	255
 29976  015BF6  20E2               	addwfc	fsr1h,w,c
 29977  015BF8  6EDA               	movwf	fsr2h,c
 29978  015BFA  0E00               	movlw	0
 29979  015BFC  6EDF               	movwf	indf2,c
 29980  015BFE  D018               	goto	l9084
 29981  015C00                     l9082:
 29982  015C00  0E00               	movlw	0
 29983  015C02  6E09               	movwf	(btemp+8)^0,c
 29984  015C04  0E00               	movlw	0
 29985  015C06  6E0A               	movwf	(btemp+9)^0,c
 29986  015C08  0E00               	movlw	0
 29987  015C0A  6E0B               	movwf	(btemp+10)^0,c
 29988  015C0C  0E00               	movlw	0
 29989  015C0E  6E0C               	movwf	(btemp+11)^0,c
 29990                           
 29991                           ;stkvar	_a @ sp[(-13)+-8]
 29992  015C10  0EEB               	movlw	-21
 29993  015C12  0060  F027  FFE3   	movff	btemp+8,plusw1
 29994  015C18  0EEC               	movlw	-20
 29995  015C1A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29996  015C20  0EED               	movlw	-19
 29997  015C22  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29998  015C28  0EEE               	movlw	-18
 29999  015C2A  0060  F033  FFE3   	movff	btemp+11,plusw1
 30000  015C30                     l9084:
 30001                           
 30002                           ;stkvar	_a @ sp[(-13)+-8]
 30003  015C30  0EEB               	movlw	-21
 30004  015C32  50E3               	movf	plusw1,w,c
 30005  015C34  E139               	bnz	l9096
 30006  015C36  0EEC               	movlw	-20
 30007  015C38  50E3               	movf	plusw1,w,c
 30008  015C3A  E136               	bnz	l9096
 30009  015C3C  0EED               	movlw	-19
 30010  015C3E  50E3               	movf	plusw1,w,c
 30011  015C40  E133               	bnz	l9096
 30012  015C42  0EEE               	movlw	-18
 30013  015C44  50E3               	movf	plusw1,w,c
 30014  015C46  A4D8               	btfss	status,2,c
 30015  015C48  D02F               	goto	l9096
 30016                           
 30017                           ;stkvar	_b @ sp[(-13)+-4]
 30018  015C4A  0EEF               	movlw	-17
 30019  015C4C  6AE3               	clrf	plusw1,c
 30020  015C4E  0EF0               	movlw	-16
 30021  015C50  6AE3               	clrf	plusw1,c
 30022  015C52  0EF1               	movlw	-15
 30023  015C54  6AE3               	clrf	plusw1,c
 30024  015C56  0EF2               	movlw	-14
 30025  015C58  6AE3               	clrf	plusw1,c
 30026                           
 30027                           ;stkvar	_b @ sp[(-13)+-4]
 30028  015C5A  0EF1               	movlw	241
 30029  015C5C  24E1               	addwf	fsr1l,w,c
 30030  015C5E  6ED9               	movwf	fsr2l,c
 30031  015C60  0EFF               	movlw	255
 30032  015C62  20E2               	addwfc	fsr1h,w,c
 30033  015C64  6EDA               	movwf	fsr2h,c
 30034  015C66  0E80               	movlw	128
 30035  015C68  12DE               	iorwf	postinc2,f,c
 30036  015C6A  0E7F               	movlw	127
 30037  015C6C  12DD               	iorwf	postdec2,f,c
 30038  015C6E                     l9090:
 30039                           
 30040                           ;stkvar	_sign @ sp[(-13)+12]
 30041  015C6E  0EFF               	movlw	-1
 30042  015C70  006F FF8C  F00C    	movff	plusw1,btemp+11
 30043                           
 30044                           ;stkvar	_b @ sp[(-13)+-4]
 30045  015C76  0EF2               	movlw	242
 30046  015C78  24E1               	addwf	fsr1l,w,c
 30047  015C7A  6ED9               	movwf	fsr2l,c
 30048  015C7C  0EFF               	movlw	255
 30049  015C7E  20E2               	addwfc	fsr1h,w,c
 30050  015C80  6EDA               	movwf	fsr2h,c
 30051  015C82  500C               	movf	(btemp+11)^0,w,c
 30052  015C84  12DF               	iorwf	indf2,f,c
 30053                           
 30054                           ;stkvar	_b @ sp[(-13)+-4]
 30055  015C86  0EEF               	movlw	-17
 30056  015C88  006F FF8C  F001    	movff	plusw1,btemp
 30057  015C8E  0EF0               	movlw	-16
 30058  015C90  006F FF8C  F002    	movff	plusw1,btemp+1
 30059  015C96  0EF1               	movlw	-15
 30060  015C98  006F FF8C  F003    	movff	plusw1,btemp+2
 30061  015C9E  0EF2               	movlw	-14
 30062  015CA0  006F FF8C  F004    	movff	plusw1,btemp+3
 30063  015CA6  D19F               	goto	l3255
 30064  015CA8                     l9096:
 30065                           
 30066                           ;stkvar	_bexp @ sp[(-13)+11]
 30067  015CA8  0EFE               	movlw	-2
 30068  015CAA  50E3               	movf	plusw1,w,c
 30069  015CAC  A4D8               	btfss	status,2,c
 30070  015CAE  D009               	goto	l9104
 30071  015CB0  0E00               	movlw	0
 30072  015CB2  6E01               	movwf	btemp^0,c
 30073  015CB4  0E00               	movlw	0
 30074  015CB6  6E02               	movwf	(btemp+1)^0,c
 30075  015CB8  0E00               	movlw	0
 30076  015CBA  6E03               	movwf	(btemp+2)^0,c
 30077  015CBC  0E00               	movlw	0
 30078  015CBE  6E04               	movwf	(btemp+3)^0,c
 30079  015CC0  D192               	goto	l3255
 30080  015CC2                     l9104:
 30081                           
 30082                           ;stkvar	_bexp @ sp[(-13)+11]
 30083  015CC2  0EFE               	movlw	-2
 30084  015CC4  50E3               	movf	plusw1,w,c
 30085  015CC6  6E0B               	movwf	(btemp+10)^0,c
 30086  015CC8  6A0C               	clrf	(btemp+11)^0,c
 30087                           
 30088                           ;stkvar	_aexp @ sp[(-13)+10]
 30089  015CCA  0EFD               	movlw	-3
 30090  015CCC  50E3               	movf	plusw1,w,c
 30091  015CCE  5E0B               	subwf	(btemp+10)^0,f,c
 30092  015CD0  0E00               	movlw	0
 30093  015CD2  5A0C               	subwfb	(btemp+11)^0,f,c
 30094  015CD4  0E7F               	movlw	127
 30095  015CD6  260B               	addwf	(btemp+10)^0,f,c
 30096  015CD8  0E00               	movlw	0
 30097  015CDA  220C               	addwfc	(btemp+11)^0,f,c
 30098                           
 30099                           ;stkvar	_new_exp @ sp[(-13)+8]
 30100  015CDC  0EFB               	movlw	-5
 30101  015CDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30102  015CE4  0EFC               	movlw	-4
 30103  015CE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 30104                           
 30105                           ;stkvar	_b @ sp[(-13)+-4]
 30106  015CEC  0EEF               	movlw	-17
 30107  015CEE  006F FF8C  F009    	movff	plusw1,btemp+8
 30108  015CF4  0EF0               	movlw	-16
 30109  015CF6  006F FF8C  F00A    	movff	plusw1,btemp+9
 30110  015CFC  0EF1               	movlw	-15
 30111  015CFE  006F FF8C  F00B    	movff	plusw1,btemp+10
 30112  015D04  0EF2               	movlw	-14
 30113  015D06  006F FF8C  F00C    	movff	plusw1,btemp+11
 30114                           
 30115                           ;stkvar	_rem @ sp[(-13)+4]
 30116  015D0C  0EF7               	movlw	-9
 30117  015D0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 30118  015D14  0EF8               	movlw	-8
 30119  015D16  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30120  015D1C  0EF9               	movlw	-7
 30121  015D1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30122  015D24  0EFA               	movlw	-6
 30123  015D26  0060  F033  FFE3   	movff	btemp+11,plusw1
 30124                           
 30125                           ;stkvar	_b @ sp[(-13)+-4]
 30126  015D2C  0EEF               	movlw	-17
 30127  015D2E  6AE3               	clrf	plusw1,c
 30128  015D30  0EF0               	movlw	-16
 30129  015D32  6AE3               	clrf	plusw1,c
 30130  015D34  0EF1               	movlw	-15
 30131  015D36  6AE3               	clrf	plusw1,c
 30132  015D38  0EF2               	movlw	-14
 30133  015D3A  6AE3               	clrf	plusw1,c
 30134                           
 30135                           ;stkvar	_grs @ sp[(-13)+0]
 30136  015D3C  0EF3               	movlw	-13
 30137  015D3E  6AE3               	clrf	plusw1,c
 30138  015D40  0EF4               	movlw	-12
 30139  015D42  6AE3               	clrf	plusw1,c
 30140  015D44  0EF5               	movlw	-11
 30141  015D46  6AE3               	clrf	plusw1,c
 30142  015D48  0EF6               	movlw	-10
 30143  015D4A  6AE3               	clrf	plusw1,c
 30144                           
 30145                           ;stkvar	_aexp @ sp[(-13)+10]
 30146  015D4C  0EFD               	movlw	-3
 30147  015D4E  6AE3               	clrf	plusw1,c
 30148  015D50  D050               	goto	l9132
 30149  015D52                     l9114:
 30150                           
 30151                           ;stkvar	_aexp @ sp[(-13)+10]
 30152  015D52  0EFD               	movlw	-3
 30153  015D54  50E3               	movf	plusw1,w,c
 30154  015D56  B4D8               	btfsc	status,2,c
 30155  015D58  D020               	goto	l9124
 30156                           
 30157                           ;stkvar	_rem @ sp[(-13)+4]
 30158  015D5A  90D8               	bcf	status,0,c
 30159  015D5C  0EF7               	movlw	-9
 30160  015D5E  36E3               	rlcf	plusw1,f,c
 30161  015D60  0EF8               	movlw	-8
 30162  015D62  36E3               	rlcf	plusw1,f,c
 30163  015D64  0EF9               	movlw	-7
 30164  015D66  36E3               	rlcf	plusw1,f,c
 30165  015D68  0EFA               	movlw	-6
 30166  015D6A  36E3               	rlcf	plusw1,f,c
 30167                           
 30168                           ;stkvar	_b @ sp[(-13)+-4]
 30169  015D6C  90D8               	bcf	status,0,c
 30170  015D6E  0EEF               	movlw	-17
 30171  015D70  36E3               	rlcf	plusw1,f,c
 30172  015D72  0EF0               	movlw	-16
 30173  015D74  36E3               	rlcf	plusw1,f,c
 30174  015D76  0EF1               	movlw	-15
 30175  015D78  36E3               	rlcf	plusw1,f,c
 30176  015D7A  0EF2               	movlw	-14
 30177  015D7C  36E3               	rlcf	plusw1,f,c
 30178                           
 30179                           ;stkvar	_grs @ sp[(-13)+0]
 30180  015D7E  0EF6               	movlw	-10
 30181  015D80  AEE3               	btfss	plusw1,7,c
 30182  015D82  D002               	goto	l9122
 30183                           
 30184                           ;stkvar	_b @ sp[(-13)+-4]
 30185  015D84  0EEF               	movlw	-17
 30186  015D86  80E3               	bsf	plusw1,0,c
 30187  015D88                     l9122:
 30188                           
 30189                           ;stkvar	_grs @ sp[(-13)+0]
 30190  015D88  90D8               	bcf	status,0,c
 30191  015D8A  0EF3               	movlw	-13
 30192  015D8C  36E3               	rlcf	plusw1,f,c
 30193  015D8E  0EF4               	movlw	-12
 30194  015D90  36E3               	rlcf	plusw1,f,c
 30195  015D92  0EF5               	movlw	-11
 30196  015D94  36E3               	rlcf	plusw1,f,c
 30197  015D96  0EF6               	movlw	-10
 30198  015D98  36E3               	rlcf	plusw1,f,c
 30199  015D9A                     l9124:
 30200                           
 30201                           ;stkvar	_a @ sp[(-13)+-8]
 30202                           ;stkvar	_rem @ sp[(-13)+4]
 30203  015D9A  50E1               	movf	fsr1l,w,c
 30204  015D9C  0FF7               	addlw	-9
 30205  015D9E  6ED9               	movwf	fsr2l,c
 30206  015DA0  50E2               	movf	fsr1h,w,c
 30207  015DA2  6EDA               	movwf	fsr2h,c
 30208  015DA4  0EFF               	movlw	255
 30209  015DA6  22DA               	addwfc	fsr2h,f,c
 30210  015DA8  0EEB               	movlw	-21
 30211  015DAA  50E3               	movf	plusw1,w,c
 30212  015DAC  5CDE               	subwf	postinc2,w,c
 30213  015DAE  0EEC               	movlw	-20
 30214  015DB0  50E3               	movf	plusw1,w,c
 30215  015DB2  58DE               	subwfb	postinc2,w,c
 30216  015DB4  0EED               	movlw	-19
 30217  015DB6  50E3               	movf	plusw1,w,c
 30218  015DB8  58DE               	subwfb	postinc2,w,c
 30219  015DBA  0EEE               	movlw	-18
 30220  015DBC  50E3               	movf	plusw1,w,c
 30221  015DBE  58DE               	subwfb	postinc2,w,c
 30222  015DC0  A0D8               	btfss	status,0,c
 30223  015DC2  D015               	goto	l9130
 30224                           
 30225                           ;stkvar	_grs @ sp[(-13)+0]
 30226  015DC4  0EF6               	movlw	-10
 30227  015DC6  8CE3               	bsf	plusw1,6,c
 30228                           
 30229                           ;stkvar	_a @ sp[(-13)+-8]
 30230                           ;stkvar	_rem @ sp[(-13)+4]
 30231  015DC8  50E1               	movf	fsr1l,w,c
 30232  015DCA  0FF7               	addlw	-9
 30233  015DCC  6ED9               	movwf	fsr2l,c
 30234  015DCE  50E2               	movf	fsr1h,w,c
 30235  015DD0  6EDA               	movwf	fsr2h,c
 30236  015DD2  0EFF               	movlw	255
 30237  015DD4  22DA               	addwfc	fsr2h,f,c
 30238  015DD6  0EEB               	movlw	-21
 30239  015DD8  50E3               	movf	plusw1,w,c
 30240  015DDA  5EDE               	subwf	postinc2,f,c
 30241  015DDC  0EEC               	movlw	-20
 30242  015DDE  50E3               	movf	plusw1,w,c
 30243  015DE0  5ADE               	subwfb	postinc2,f,c
 30244  015DE2  0EED               	movlw	-19
 30245  015DE4  50E3               	movf	plusw1,w,c
 30246  015DE6  5ADE               	subwfb	postinc2,f,c
 30247  015DE8  0EEE               	movlw	-18
 30248  015DEA  50E3               	movf	plusw1,w,c
 30249  015DEC  5ADE               	subwfb	postinc2,f,c
 30250  015DEE                     l9130:
 30251                           
 30252                           ;stkvar	_aexp @ sp[(-13)+10]
 30253  015DEE  0EFD               	movlw	-3
 30254  015DF0  2AE3               	incf	plusw1,f,c
 30255  015DF2                     l9132:
 30256                           
 30257                           ;stkvar	_aexp @ sp[(-13)+10]
 30258  015DF2  0EFD               	movlw	-3
 30259  015DF4  006F FF8C  F001    	movff	plusw1,btemp
 30260  015DFA  0E19               	movlw	25
 30261  015DFC  6401               	cpfsgt	btemp^0,c
 30262  015DFE  D7A9               	goto	l9114
 30263                           
 30264                           ;stkvar	_rem @ sp[(-13)+4]
 30265  015E00  0EF7               	movlw	-9
 30266  015E02  50E3               	movf	plusw1,w,c
 30267  015E04  E10A               	bnz	u7230
 30268  015E06  0EF8               	movlw	-8
 30269  015E08  50E3               	movf	plusw1,w,c
 30270  015E0A  E107               	bnz	u7230
 30271  015E0C  0EF9               	movlw	-7
 30272  015E0E  50E3               	movf	plusw1,w,c
 30273  015E10  E104               	bnz	u7230
 30274  015E12  0EFA               	movlw	-6
 30275  015E14  50E3               	movf	plusw1,w,c
 30276  015E16  B4D8               	btfsc	status,2,c
 30277  015E18  D024               	goto	l9148
 30278  015E1A                     u7230:
 30279                           
 30280                           ;stkvar	_grs @ sp[(-13)+0]
 30281  015E1A  0EF3               	movlw	-13
 30282  015E1C  80E3               	bsf	plusw1,0,c
 30283  015E1E  D021               	goto	l9148
 30284  015E20                     l9138:
 30285                           
 30286                           ;stkvar	_b @ sp[(-13)+-4]
 30287  015E20  90D8               	bcf	status,0,c
 30288  015E22  0EEF               	movlw	-17
 30289  015E24  36E3               	rlcf	plusw1,f,c
 30290  015E26  0EF0               	movlw	-16
 30291  015E28  36E3               	rlcf	plusw1,f,c
 30292  015E2A  0EF1               	movlw	-15
 30293  015E2C  36E3               	rlcf	plusw1,f,c
 30294  015E2E  0EF2               	movlw	-14
 30295  015E30  36E3               	rlcf	plusw1,f,c
 30296                           
 30297                           ;stkvar	_grs @ sp[(-13)+0]
 30298  015E32  0EF6               	movlw	-10
 30299  015E34  AEE3               	btfss	plusw1,7,c
 30300  015E36  D002               	goto	l9144
 30301                           
 30302                           ;stkvar	_b @ sp[(-13)+-4]
 30303  015E38  0EEF               	movlw	-17
 30304  015E3A  80E3               	bsf	plusw1,0,c
 30305  015E3C                     l9144:
 30306                           
 30307                           ;stkvar	_grs @ sp[(-13)+0]
 30308  015E3C  90D8               	bcf	status,0,c
 30309  015E3E  0EF3               	movlw	-13
 30310  015E40  36E3               	rlcf	plusw1,f,c
 30311  015E42  0EF4               	movlw	-12
 30312  015E44  36E3               	rlcf	plusw1,f,c
 30313  015E46  0EF5               	movlw	-11
 30314  015E48  36E3               	rlcf	plusw1,f,c
 30315  015E4A  0EF6               	movlw	-10
 30316  015E4C  36E3               	rlcf	plusw1,f,c
 30317                           
 30318                           ;stkvar	_new_exp @ sp[(-13)+8]
 30319  015E4E  50E1               	movf	fsr1l,w,c
 30320  015E50  0FFB               	addlw	-5
 30321  015E52  6ED9               	movwf	fsr2l,c
 30322  015E54  50E2               	movf	fsr1h,w,c
 30323  015E56  6EDA               	movwf	fsr2h,c
 30324  015E58  0EFF               	movlw	255
 30325  015E5A  22DA               	addwfc	fsr2h,f,c
 30326  015E5C  06DE               	decf	postinc2,f,c
 30327  015E5E  0E00               	movlw	0
 30328  015E60  5ADD               	subwfb	postdec2,f,c
 30329  015E62                     l9148:
 30330                           
 30331                           ;stkvar	_b @ sp[(-13)+-4]
 30332  015E62  0EF1               	movlw	-15
 30333  015E64  AEE3               	btfss	plusw1,7,c
 30334  015E66  D7DC               	goto	l9138
 30335                           
 30336                           ;stkvar	_aexp @ sp[(-13)+10]
 30337  015E68  0EFD               	movlw	-3
 30338  015E6A  6AE3               	clrf	plusw1,c
 30339                           
 30340                           ;stkvar	_grs @ sp[(-13)+0]
 30341  015E6C  0EF6               	movlw	-10
 30342  015E6E  AEE3               	btfss	plusw1,7,c
 30343  015E70  D020               	goto	l9162
 30344                           
 30345                           ;stkvar	_grs @ sp[(-13)+0]
 30346  015E72  50E1               	movf	fsr1l,w,c
 30347  015E74  0FF3               	addlw	-13
 30348  015E76  6ED9               	movwf	fsr2l,c
 30349  015E78  50E2               	movf	fsr1h,w,c
 30350  015E7A  6EDA               	movwf	fsr2h,c
 30351  015E7C  0EFF               	movlw	255
 30352  015E7E  22DA               	addwfc	fsr2h,f,c
 30353  015E80  0EFF               	movlw	255
 30354  015E82  14DE               	andwf	postinc2,w,c
 30355  015E84  6E09               	movwf	(btemp+8)^0,c
 30356  015E86  0EFF               	movlw	255
 30357  015E88  14DE               	andwf	postinc2,w,c
 30358  015E8A  6E0A               	movwf	(btemp+9)^0,c
 30359  015E8C  0EFF               	movlw	255
 30360  015E8E  14DE               	andwf	postinc2,w,c
 30361  015E90  6E0B               	movwf	(btemp+10)^0,c
 30362  015E92  0E7F               	movlw	127
 30363  015E94  14DE               	andwf	postinc2,w,c
 30364  015E96  6E0C               	movwf	(btemp+11)^0,c
 30365  015E98  5009               	movf	(btemp+8)^0,w,c
 30366  015E9A  100A               	iorwf	(btemp+9)^0,w,c
 30367  015E9C  100B               	iorwf	(btemp+10)^0,w,c
 30368  015E9E  100C               	iorwf	(btemp+11)^0,w,c
 30369  015EA0  B4D8               	btfsc	status,2,c
 30370  015EA2  D004               	goto	l9158
 30371  015EA4                     u7270:
 30372                           
 30373                           ;stkvar	_aexp @ sp[(-13)+10]
 30374  015EA4  0EFD               	movlw	-3
 30375  015EA6  6AE3               	clrf	plusw1,c
 30376  015EA8  2AE3               	incf	plusw1,f,c
 30377  015EAA  D003               	goto	l9162
 30378  015EAC                     l9158:
 30379                           
 30380                           ;stkvar	_b @ sp[(-13)+-4]
 30381  015EAC  0EEF               	movlw	-17
 30382  015EAE  B0E3               	btfsc	plusw1,0,c
 30383  015EB0  D7F9               	goto	u7270
 30384  015EB2                     l9162:
 30385                           
 30386                           ;stkvar	_aexp @ sp[(-13)+10]
 30387  015EB2  0EFD               	movlw	-3
 30388  015EB4  50E3               	movf	plusw1,w,c
 30389  015EB6  B4D8               	btfsc	status,2,c
 30390  015EB8  D036               	goto	l9172
 30391                           
 30392                           ;stkvar	_b @ sp[(-13)+-4]
 30393  015EBA  50E1               	movf	fsr1l,w,c
 30394  015EBC  0FEF               	addlw	-17
 30395  015EBE  6ED9               	movwf	fsr2l,c
 30396  015EC0  50E2               	movf	fsr1h,w,c
 30397  015EC2  6EDA               	movwf	fsr2h,c
 30398  015EC4  0EFF               	movlw	255
 30399  015EC6  22DA               	addwfc	fsr2h,f,c
 30400  015EC8  2ADE               	incf	postinc2,f,c
 30401  015ECA  0E00               	movlw	0
 30402  015ECC  22DE               	addwfc	postinc2,f,c
 30403  015ECE  22DE               	addwfc	postinc2,f,c
 30404  015ED0  22DE               	addwfc	postinc2,f,c
 30405                           
 30406                           ;stkvar	_b @ sp[(-13)+-4]
 30407  015ED2  0EF2               	movlw	-14
 30408  015ED4  A0E3               	btfss	plusw1,0,c
 30409  015ED6  D027               	goto	l9172
 30410  015ED8  0E01               	movlw	1
 30411  015EDA  6E0C               	movwf	(btemp+11)^0,c
 30412                           
 30413                           ;stkvar	_b @ sp[(-13)+-4]
 30414  015EDC  50E1               	movf	fsr1l,w,c
 30415  015EDE  0FEF               	addlw	-17
 30416  015EE0  6ED9               	movwf	fsr2l,c
 30417  015EE2  50E2               	movf	fsr1h,w,c
 30418  015EE4  6EDA               	movwf	fsr2h,c
 30419  015EE6  0EFF               	movlw	255
 30420  015EE8  22DA               	addwfc	fsr2h,f,c
 30421  015EEA  280C               	incf	(btemp+11)^0,w,c
 30422  015EEC  52DE               	movf	postinc2,f,c
 30423  015EEE  D008               	goto	u7310
 30424  015EF0                     u7315:
 30425  015EF0  52DE               	movf	postinc2,f,c
 30426  015EF2  90D8               	bcf	status,0,c
 30427  015EF4  BEDC               	btfsc	preinc2,7,c
 30428  015EF6  80D8               	bsf	status,0,c
 30429  015EF8  32DD               	rrcf	postdec2,f,c
 30430  015EFA  32DD               	rrcf	postdec2,f,c
 30431  015EFC  32DD               	rrcf	postdec2,f,c
 30432  015EFE  32DE               	rrcf	postinc2,f,c
 30433  015F00                     u7310:
 30434  015F00  2EE8               	decfsz	wreg,f,c
 30435  015F02  D7F6               	goto	u7315
 30436                           
 30437                           ;stkvar	_new_exp @ sp[(-13)+8]
 30438  015F04  0EFB               	movlw	-5
 30439  015F06  50E3               	movf	plusw1,w,c
 30440  015F08  0F01               	addlw	1
 30441  015F0A  6E01               	movwf	btemp^0,c
 30442  015F0C  0EFB               	movlw	-5
 30443  015F0E  0060  F007  FFE3   	movff	btemp,plusw1
 30444  015F14  6A01               	clrf	btemp^0,c
 30445  015F16  0EFC               	movlw	-4
 30446  015F18  50E3               	movf	plusw1,w,c
 30447  015F1A  2001               	addwfc	btemp^0,w,c
 30448  015F1C  6E01               	movwf	btemp^0,c
 30449  015F1E  0EFC               	movlw	-4
 30450  015F20  0060  F007  FFE3   	movff	btemp,plusw1
 30451  015F26                     l9172:
 30452                           
 30453                           ;stkvar	_new_exp @ sp[(-13)+8]
 30454  015F26  0EFC               	movlw	-4
 30455  015F28  BEE3               	btfsc	plusw1,7,c
 30456  015F2A  D01B               	goto	l9178
 30457  015F2C  0EFC               	movlw	-4
 30458  015F2E  50E3               	movf	plusw1,w,c
 30459  015F30  E104               	bnz	u7320
 30460  015F32  0EFB               	movlw	-5
 30461  015F34  28E3               	incf	plusw1,w,c
 30462  015F36  A0D8               	btfss	status,0,c
 30463  015F38  D014               	goto	l9178
 30464  015F3A                     u7320:
 30465  015F3A  0EFF               	movlw	255
 30466  015F3C  6E0B               	movwf	(btemp+10)^0,c
 30467  015F3E  0E00               	movlw	0
 30468  015F40  6E0C               	movwf	(btemp+11)^0,c
 30469                           
 30470                           ;stkvar	_new_exp @ sp[(-13)+8]
 30471  015F42  0EFB               	movlw	-5
 30472  015F44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30473  015F4A  0EFC               	movlw	-4
 30474  015F4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30475                           
 30476                           ;stkvar	_b @ sp[(-13)+-4]
 30477  015F52  0EEF               	movlw	-17
 30478  015F54  6AE3               	clrf	plusw1,c
 30479  015F56  0EF0               	movlw	-16
 30480  015F58  6AE3               	clrf	plusw1,c
 30481  015F5A  0EF1               	movlw	-15
 30482  015F5C  6AE3               	clrf	plusw1,c
 30483  015F5E  0EF2               	movlw	-14
 30484  015F60  6AE3               	clrf	plusw1,c
 30485  015F62                     l9178:
 30486                           
 30487                           ;stkvar	_new_exp @ sp[(-13)+8]
 30488  015F62  0EFC               	movlw	-4
 30489  015F64  BEE3               	btfsc	plusw1,7,c
 30490  015F66  D007               	goto	u7330
 30491  015F68  0EFC               	movlw	-4
 30492  015F6A  50E3               	movf	plusw1,w,c
 30493  015F6C  E112               	bnz	l9184
 30494  015F6E  0EFB               	movlw	-5
 30495  015F70  04E3               	decf	plusw1,w,c
 30496  015F72  B0D8               	btfsc	status,0,c
 30497  015F74  D00E               	goto	l9184
 30498  015F76                     u7330:
 30499                           
 30500                           ;stkvar	_new_exp @ sp[(-13)+8]
 30501  015F76  0EFB               	movlw	-5
 30502  015F78  6AE3               	clrf	plusw1,c
 30503  015F7A  0EFC               	movlw	-4
 30504  015F7C  6AE3               	clrf	plusw1,c
 30505                           
 30506                           ;stkvar	_b @ sp[(-13)+-4]
 30507  015F7E  0EEF               	movlw	-17
 30508  015F80  6AE3               	clrf	plusw1,c
 30509  015F82  0EF0               	movlw	-16
 30510  015F84  6AE3               	clrf	plusw1,c
 30511  015F86  0EF1               	movlw	-15
 30512  015F88  6AE3               	clrf	plusw1,c
 30513  015F8A  0EF2               	movlw	-14
 30514  015F8C  6AE3               	clrf	plusw1,c
 30515                           
 30516                           ;stkvar	_sign @ sp[(-13)+12]
 30517  015F8E  0EFF               	movlw	-1
 30518  015F90  6AE3               	clrf	plusw1,c
 30519  015F92                     l9184:
 30520                           
 30521                           ;stkvar	_new_exp @ sp[(-13)+8]
 30522                           ;stkvar	_bexp @ sp[(-13)+11]
 30523  015F92  0EFB               	movlw	-5
 30524  015F94  006F FF8C  F001    	movff	plusw1,btemp
 30525  015F9A  0EFE               	movlw	-2
 30526  015F9C  0060  F007  FFE3   	movff	btemp,plusw1
 30527                           
 30528                           ;stkvar	_bexp @ sp[(-13)+11]
 30529  015FA2  0EFE               	movlw	-2
 30530  015FA4  A0E3               	btfss	plusw1,0,c
 30531  015FA6  D009               	goto	l9190
 30532                           
 30533                           ;stkvar	_b @ sp[(-13)+-4]
 30534  015FA8  0EF1               	movlw	241
 30535  015FAA  24E1               	addwf	fsr1l,w,c
 30536  015FAC  6ED9               	movwf	fsr2l,c
 30537  015FAE  0EFF               	movlw	255
 30538  015FB0  20E2               	addwfc	fsr1h,w,c
 30539  015FB2  6EDA               	movwf	fsr2h,c
 30540  015FB4  0E00               	movlw	0
 30541  015FB6  8EDB               	bsf	plusw2,7,c
 30542  015FB8  D008               	goto	l9192
 30543  015FBA                     l9190:
 30544                           
 30545                           ;stkvar	_b @ sp[(-13)+-4]
 30546  015FBA  0EF1               	movlw	241
 30547  015FBC  24E1               	addwf	fsr1l,w,c
 30548  015FBE  6ED9               	movwf	fsr2l,c
 30549  015FC0  0EFF               	movlw	255
 30550  015FC2  20E2               	addwfc	fsr1h,w,c
 30551  015FC4  6EDA               	movwf	fsr2h,c
 30552  015FC6  0E7F               	movlw	127
 30553  015FC8  16DF               	andwf	indf2,f,c
 30554  015FCA                     l9192:
 30555                           
 30556                           ;stkvar	_b @ sp[(-13)+-4]
 30557  015FCA  0EF2               	movlw	242
 30558  015FCC  24E1               	addwf	fsr1l,w,c
 30559  015FCE  6ED9               	movwf	fsr2l,c
 30560  015FD0  0EFF               	movlw	255
 30561  015FD2  20E2               	addwfc	fsr1h,w,c
 30562  015FD4  6EDA               	movwf	fsr2h,c
 30563                           
 30564                           ;stkvar	_bexp @ sp[(-13)+11]
 30565  015FD6  0EFE               	movlw	-2
 30566  015FD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 30567  015FDE  90D8               	bcf	status,0,c
 30568  015FE0  300C               	rrcf	(btemp+11)^0,w,c
 30569  015FE2  6EDF               	movwf	indf2,c
 30570  015FE4  D644               	goto	l9090
 30571  015FE6                     l3255:
 30572                           
 30573                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30574  015FE6  0EEB               	movlw	235
 30575  015FE8  26E1               	addwf	fsr1l,f,c
 30576  015FEA  0EFF               	movlw	255
 30577  015FEC  22E2               	addwfc	fsr1h,f,c
 30578  015FEE  0012               	return		;funcret
 30579  015FF0                     __end_of___fldiv:
 30580                           	opt callstack 0
 30581                           
 30582 ;; *************** function ___flge *****************
 30583 ;; Defined at:
 30584 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 30585 ;; Parameters:    Size  Location     Type
 30586 ;;  ff1             4  [STACK] unsigned char 
 30587 ;;  ff2             4  [STACK] unsigned char 
 30588 ;; Auto vars:     Size  Location     Type
 30589 ;;		None
 30590 ;; Return value:  Size  Location     Type
 30591 ;;		None               void
 30592 ;; Registers used:
 30593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 30594 ;; Tracked objects:
 30595 ;;		On entry : 0/0
 30596 ;;		On exit  : 0/0
 30597 ;;		Unchanged: 0/0
 30598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30603 ;;Total ram usage:        0 bytes
 30604 ;; Hardware stack levels used:    1
 30605 ;; Hardware stack levels required when called:   15
 30606 ;; This function calls:
 30607 ;;		Nothing
 30608 ;; This function is called by:
 30609 ;;		_main
 30610 ;;		_convert_dac_raw
 30611 ;;		_calc_ror_data
 30612 ;;		_check_day_time
 30613 ;;		_calc_bsoc
 30614 ;;		_efgtoa
 30615 ;; This function uses a reentrant model
 30616 ;;
 30617                           
 30618                           	psect	text121
 30619  01A1FE                     __ptext121:
 30620                           	opt callstack 0
 30621  01A1FE                     ___flge:
 30622                           	opt callstack 0
 30623                           
 30624                           ;stkvar	_ff1 @ sp[(0)+-4]
 30625                           
 30626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30627                           ;incstack = 0
 30628 ;; hardware stack exceeded
 30629  01A1FE  50E1               	movf	fsr1l,w,c
 30630  01A200  0FFC               	addlw	-4
 30631  01A202  6ED9               	movwf	fsr2l,c
 30632  01A204  50E2               	movf	fsr1h,w,c
 30633  01A206  6EDA               	movwf	fsr2h,c
 30634  01A208  0EFF               	movlw	255
 30635  01A20A  22DA               	addwfc	fsr2h,f,c
 30636  01A20C  0E00               	movlw	0
 30637  01A20E  14DE               	andwf	postinc2,w,c
 30638  01A210  6E09               	movwf	(btemp+8)^0,c
 30639  01A212  0E00               	movlw	0
 30640  01A214  14DE               	andwf	postinc2,w,c
 30641  01A216  6E0A               	movwf	(btemp+9)^0,c
 30642  01A218  0E80               	movlw	128
 30643  01A21A  14DE               	andwf	postinc2,w,c
 30644  01A21C  6E0B               	movwf	(btemp+10)^0,c
 30645  01A21E  0E7F               	movlw	127
 30646  01A220  14DE               	andwf	postinc2,w,c
 30647  01A222  6E0C               	movwf	(btemp+11)^0,c
 30648  01A224  5009               	movf	(btemp+8)^0,w,c
 30649  01A226  100A               	iorwf	(btemp+9)^0,w,c
 30650  01A228  100B               	iorwf	(btemp+10)^0,w,c
 30651  01A22A  100C               	iorwf	(btemp+11)^0,w,c
 30652  01A22C  A4D8               	btfss	status,2,c
 30653  01A22E  D008               	goto	l9466
 30654                           
 30655                           ;stkvar	_ff1 @ sp[(0)+-4]
 30656  01A230  0EFC               	movlw	-4
 30657  01A232  6AE3               	clrf	plusw1,c
 30658  01A234  0EFD               	movlw	-3
 30659  01A236  6AE3               	clrf	plusw1,c
 30660  01A238  0EFE               	movlw	-2
 30661  01A23A  6AE3               	clrf	plusw1,c
 30662  01A23C  0EFF               	movlw	-1
 30663  01A23E  6AE3               	clrf	plusw1,c
 30664  01A240                     l9466:
 30665                           
 30666                           ;stkvar	_ff2 @ sp[(0)+-8]
 30667  01A240  50E1               	movf	fsr1l,w,c
 30668  01A242  0FF8               	addlw	-8
 30669  01A244  6ED9               	movwf	fsr2l,c
 30670  01A246  50E2               	movf	fsr1h,w,c
 30671  01A248  6EDA               	movwf	fsr2h,c
 30672  01A24A  0EFF               	movlw	255
 30673  01A24C  22DA               	addwfc	fsr2h,f,c
 30674  01A24E  0E00               	movlw	0
 30675  01A250  14DE               	andwf	postinc2,w,c
 30676  01A252  6E09               	movwf	(btemp+8)^0,c
 30677  01A254  0E00               	movlw	0
 30678  01A256  14DE               	andwf	postinc2,w,c
 30679  01A258  6E0A               	movwf	(btemp+9)^0,c
 30680  01A25A  0E80               	movlw	128
 30681  01A25C  14DE               	andwf	postinc2,w,c
 30682  01A25E  6E0B               	movwf	(btemp+10)^0,c
 30683  01A260  0E7F               	movlw	127
 30684  01A262  14DE               	andwf	postinc2,w,c
 30685  01A264  6E0C               	movwf	(btemp+11)^0,c
 30686  01A266  5009               	movf	(btemp+8)^0,w,c
 30687  01A268  100A               	iorwf	(btemp+9)^0,w,c
 30688  01A26A  100B               	iorwf	(btemp+10)^0,w,c
 30689  01A26C  100C               	iorwf	(btemp+11)^0,w,c
 30690  01A26E  A4D8               	btfss	status,2,c
 30691  01A270  D008               	goto	l2936
 30692                           
 30693                           ;stkvar	_ff2 @ sp[(0)+-8]
 30694  01A272  0EF8               	movlw	-8
 30695  01A274  6AE3               	clrf	plusw1,c
 30696  01A276  0EF9               	movlw	-7
 30697  01A278  6AE3               	clrf	plusw1,c
 30698  01A27A  0EFA               	movlw	-6
 30699  01A27C  6AE3               	clrf	plusw1,c
 30700  01A27E  0EFB               	movlw	-5
 30701  01A280  6AE3               	clrf	plusw1,c
 30702  01A282                     l2936:
 30703                           
 30704                           ;stkvar	_ff1 @ sp[(0)+-4]
 30705  01A282  0EFF               	movlw	-1
 30706  01A284  AEE3               	btfss	plusw1,7,c
 30707  01A286  D024               	goto	l9472
 30708                           
 30709                           ;stkvar	_ff1 @ sp[(0)+-4]
 30710  01A288  0E00               	movlw	0
 30711  01A28A  6E09               	movwf	(btemp+8)^0,c
 30712  01A28C  0E00               	movlw	0
 30713  01A28E  6E0A               	movwf	(btemp+9)^0,c
 30714  01A290  0E00               	movlw	0
 30715  01A292  6E0B               	movwf	(btemp+10)^0,c
 30716  01A294  0E80               	movlw	128
 30717  01A296  6E0C               	movwf	(btemp+11)^0,c
 30718  01A298  0EFC               	movlw	-4
 30719  01A29A  50E3               	movf	plusw1,w,c
 30720  01A29C  5E09               	subwf	(btemp+8)^0,f,c
 30721  01A29E  0EFD               	movlw	-3
 30722  01A2A0  50E3               	movf	plusw1,w,c
 30723  01A2A2  5A0A               	subwfb	(btemp+9)^0,f,c
 30724  01A2A4  0EFE               	movlw	-2
 30725  01A2A6  50E3               	movf	plusw1,w,c
 30726  01A2A8  5A0B               	subwfb	(btemp+10)^0,f,c
 30727  01A2AA  0EFF               	movlw	-1
 30728  01A2AC  50E3               	movf	plusw1,w,c
 30729  01A2AE  5A0C               	subwfb	(btemp+11)^0,f,c
 30730                           
 30731                           ;stkvar	_ff1 @ sp[(0)+-4]
 30732  01A2B0  0EFC               	movlw	-4
 30733  01A2B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 30734  01A2B8  0EFD               	movlw	-3
 30735  01A2BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30736  01A2C0  0EFE               	movlw	-2
 30737  01A2C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30738  01A2C8  0EFF               	movlw	-1
 30739  01A2CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30740  01A2D0                     l9472:
 30741                           
 30742                           ;stkvar	_ff2 @ sp[(0)+-8]
 30743  01A2D0  0EFB               	movlw	-5
 30744  01A2D2  AEE3               	btfss	plusw1,7,c
 30745  01A2D4  D024               	goto	l9476
 30746                           
 30747                           ;stkvar	_ff2 @ sp[(0)+-8]
 30748  01A2D6  0E00               	movlw	0
 30749  01A2D8  6E09               	movwf	(btemp+8)^0,c
 30750  01A2DA  0E00               	movlw	0
 30751  01A2DC  6E0A               	movwf	(btemp+9)^0,c
 30752  01A2DE  0E00               	movlw	0
 30753  01A2E0  6E0B               	movwf	(btemp+10)^0,c
 30754  01A2E2  0E80               	movlw	128
 30755  01A2E4  6E0C               	movwf	(btemp+11)^0,c
 30756  01A2E6  0EF8               	movlw	-8
 30757  01A2E8  50E3               	movf	plusw1,w,c
 30758  01A2EA  5E09               	subwf	(btemp+8)^0,f,c
 30759  01A2EC  0EF9               	movlw	-7
 30760  01A2EE  50E3               	movf	plusw1,w,c
 30761  01A2F0  5A0A               	subwfb	(btemp+9)^0,f,c
 30762  01A2F2  0EFA               	movlw	-6
 30763  01A2F4  50E3               	movf	plusw1,w,c
 30764  01A2F6  5A0B               	subwfb	(btemp+10)^0,f,c
 30765  01A2F8  0EFB               	movlw	-5
 30766  01A2FA  50E3               	movf	plusw1,w,c
 30767  01A2FC  5A0C               	subwfb	(btemp+11)^0,f,c
 30768                           
 30769                           ;stkvar	_ff2 @ sp[(0)+-8]
 30770  01A2FE  0EF8               	movlw	-8
 30771  01A300  0060  F027  FFE3   	movff	btemp+8,plusw1
 30772  01A306  0EF9               	movlw	-7
 30773  01A308  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30774  01A30E  0EFA               	movlw	-6
 30775  01A310  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30776  01A316  0EFB               	movlw	-5
 30777  01A318  0060  F033  FFE3   	movff	btemp+11,plusw1
 30778  01A31E                     l9476:
 30779                           
 30780                           ;stkvar	_ff1 @ sp[(0)+-4]
 30781  01A31E  0EFF               	movlw	-1
 30782  01A320  7EE3               	btg	plusw1,7,c
 30783                           
 30784                           ;stkvar	_ff2 @ sp[(0)+-8]
 30785  01A322  0EFB               	movlw	-5
 30786  01A324  7EE3               	btg	plusw1,7,c
 30787                           
 30788                           ;stkvar	_ff2 @ sp[(0)+-8]
 30789                           ;stkvar	_ff1 @ sp[(0)+-4]
 30790  01A326  50E1               	movf	fsr1l,w,c
 30791  01A328  0FFC               	addlw	-4
 30792  01A32A  6ED9               	movwf	fsr2l,c
 30793  01A32C  50E2               	movf	fsr1h,w,c
 30794  01A32E  6EDA               	movwf	fsr2h,c
 30795  01A330  0EFF               	movlw	255
 30796  01A332  22DA               	addwfc	fsr2h,f,c
 30797  01A334  0EF8               	movlw	-8
 30798  01A336  50E3               	movf	plusw1,w,c
 30799  01A338  5CDE               	subwf	postinc2,w,c
 30800  01A33A  0EF9               	movlw	-7
 30801  01A33C  50E3               	movf	plusw1,w,c
 30802  01A33E  58DE               	subwfb	postinc2,w,c
 30803  01A340  0EFA               	movlw	-6
 30804  01A342  50E3               	movf	plusw1,w,c
 30805  01A344  58DE               	subwfb	postinc2,w,c
 30806  01A346  0EFB               	movlw	-5
 30807  01A348  50E3               	movf	plusw1,w,c
 30808  01A34A  58DE               	subwfb	postinc2,w,c
 30809  01A34C  B0D8               	btfsc	status,0,c
 30810  01A34E  D002               	goto	l9484
 30811  01A350  9001               	bcf	btemp& (0+255),0,c
 30812  01A352  D001               	goto	l2943
 30813  01A354                     l9484:
 30814  01A354  8001               	bsf	btemp& (0+255),0,c
 30815  01A356                     l2943:
 30816                           
 30817                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 30818  01A356  0EF8               	movlw	248
 30819  01A358  26E1               	addwf	fsr1l,f,c
 30820  01A35A  0EFF               	movlw	255
 30821  01A35C  22E2               	addwfc	fsr1h,f,c
 30822  01A35E  0012               	return		;funcret
 30823  01A360                     __end_of___flge:
 30824                           	opt callstack 0
 30825                           
 30826 ;; *************** function _calc_model_data *****************
 30827 ;; Defined at:
 30828 ;;		line 67 in file "mbmc.c"
 30829 ;; Parameters:    Size  Location     Type
 30830 ;;		None
 30831 ;; Auto vars:     Size  Location     Type
 30832 ;;		None
 30833 ;; Return value:  Size  Location     Type
 30834 ;;                  1  [STACK] void 
 30835 ;; Registers used:
 30836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30837 ;; Tracked objects:
 30838 ;;		On entry : 0/1
 30839 ;;		On exit  : 3F/39
 30840 ;;		Unchanged: 0/0
 30841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30846 ;;Total ram usage:        0 bytes
 30847 ;; Hardware stack levels used:    1
 30848 ;; Hardware stack levels required when called:   18
 30849 ;; This function calls:
 30850 ;;		___fladd
 30851 ;;		___flmul
 30852 ;;		___flsub
 30853 ;;		_lp_filter
 30854 ;;		_start_bsoc
 30855 ;;		_stop_bsoc
 30856 ;; This function is called by:
 30857 ;;		_main
 30858 ;; This function uses a reentrant model
 30859 ;;
 30860                           
 30861                           	psect	text122
 30862  01692C                     __ptext122:
 30863                           	opt callstack 0
 30864  01692C                     _calc_model_data:
 30865                           	opt callstack 12
 30866                           
 30867                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 30868                           
 30869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30870                           ;incstack = 0
 30871  01692C  ECED  F0ED         	call	_stop_bsoc	;wreg free
 30872                           
 30873                           ; BSR set to: 57
 30874                           ;mbmc.c: 72:  if (!V.calib) {
 30875  016930  0101               	movlb	1	; () banked
 30876  016932  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 30877  016934  A4D8               	btfss	status,2,c
 30878  016936  D219               	goto	l12422
 30879                           
 30880                           ; BSR set to: 1
 30881                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 30882  016938  EE21  F3FF         	lfsr	2,_C
 30883  01693C  006F FF78  F843    	movff	postinc2,_C+68	;volatile
 30884  016942  006F FF78  F844    	movff	postinc2,_C+69	;volatile
 30885  016948  006F FF78  F845    	movff	postinc2,_C+70	;volatile
 30886  01694E  006F FF74  F846    	movff	postdec2,_C+71	;volatile
 30887                           
 30888                           ; BSR set to: 1
 30889                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 30890  016954  0060  F1B3  FFE6   	movff	calc_model_data@bcror,postinc1
 30891  01695A  0060  F1B7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 30892  016960  0060  F1BB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 30893  016966  0060  F1BF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 30894  01696C  EE22  F043         	lfsr	2,_C+68	;volatile
 30895  016970  006F FF7B FFE6     	movff	postinc2,postinc1
 30896  016976  006F FF7B FFE6     	movff	postinc2,postinc1
 30897  01697C  006F FF7B FFE6     	movff	postinc2,postinc1
 30898  016982  006F FF7B FFE6     	movff	postinc2,postinc1
 30899  016988  ECB1  F0E7         	call	___flsub	;wreg free
 30900  01698C  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 30901  016992  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 30902  016998  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 30903  01699E  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 30904                           
 30905                           ;mbmc.c: 75:   bcror = C.c_bat;
 30906  0169A4  C843  F06C         	movff	_C+68,calc_model_data@bcror	;volatile
 30907  0169A8  C844  F06D         	movff	_C+69,calc_model_data@bcror+1	;volatile
 30908  0169AC  C845  F06E         	movff	_C+70,calc_model_data@bcror+2	;volatile
 30909  0169B0  C846  F06F         	movff	_C+71,calc_model_data@bcror+3	;volatile
 30910                           
 30911                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 30912  0169B4  EE22  F003         	lfsr	2,_C+4	;volatile
 30913  0169B8  006F FF78  F847    	movff	postinc2,_C+72	;volatile
 30914  0169BE  006F FF78  F848    	movff	postinc2,_C+73	;volatile
 30915  0169C4  006F FF78  F849    	movff	postinc2,_C+74	;volatile
 30916  0169CA  006F FF74  F84A    	movff	postdec2,_C+75	;volatile
 30917                           
 30918                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 30919  0169D0  EE22  F00F         	lfsr	2,_C+16	;volatile
 30920  0169D4  006F FF78  F853    	movff	postinc2,_C+84	;volatile
 30921  0169DA  006F FF78  F854    	movff	postinc2,_C+85	;volatile
 30922  0169E0  006F FF78  F855    	movff	postinc2,_C+86	;volatile
 30923  0169E6  006F FF74  F856    	movff	postdec2,_C+87	;volatile
 30924                           
 30925                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 30926  0169EC  EE22  F033         	lfsr	2,_C+52	;volatile
 30927  0169F0  006F FF78  F867    	movff	postinc2,_C+104	;volatile
 30928  0169F6  006F FF78  F868    	movff	postinc2,_C+105	;volatile
 30929  0169FC  006F FF78  F869    	movff	postinc2,_C+106	;volatile
 30930  016A02  006F FF74  F86A    	movff	postdec2,_C+107	;volatile
 30931                           
 30932                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 30933  016A08  0060  F1C3  FFE6   	movff	calc_model_data@bvror,postinc1
 30934  016A0E  0060  F1C7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 30935  016A14  0060  F1CB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 30936  016A1A  0060  F1CF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 30937  016A20  EE22  F053         	lfsr	2,_C+84	;volatile
 30938  016A24  006F FF7B FFE6     	movff	postinc2,postinc1
 30939  016A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 30940  016A30  006F FF7B FFE6     	movff	postinc2,postinc1
 30941  016A36  006F FF7B FFE6     	movff	postinc2,postinc1
 30942  016A3C  ECB1  F0E7         	call	___flsub	;wreg free
 30943  016A40  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 30944  016A46  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 30945  016A4C  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 30946  016A52  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 30947                           
 30948                           ;mbmc.c: 80:   bvror = C.v_bat;
 30949  016A58  C853  F070         	movff	_C+84,calc_model_data@bvror	;volatile
 30950  016A5C  C854  F071         	movff	_C+85,calc_model_data@bvror+1	;volatile
 30951  016A60  C855  F072         	movff	_C+86,calc_model_data@bvror+2	;volatile
 30952  016A64  C856  F073         	movff	_C+87,calc_model_data@bvror+3	;volatile
 30953                           
 30954                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 30955  016A68  EE22  F013         	lfsr	2,_C+20	;volatile
 30956  016A6C  006F FF78  F84F    	movff	postinc2,_C+80	;volatile
 30957  016A72  006F FF78  F850    	movff	postinc2,_C+81	;volatile
 30958  016A78  006F FF78  F851    	movff	postinc2,_C+82	;volatile
 30959  016A7E  006F FF74  F852    	movff	postdec2,_C+83	;volatile
 30960                           
 30961                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 30962  016A84  EE22  F007         	lfsr	2,_C+8	;volatile
 30963  016A88  006F FF78  F84B    	movff	postinc2,_C+76	;volatile
 30964  016A8E  006F FF78  F84C    	movff	postinc2,_C+77	;volatile
 30965  016A94  006F FF78  F84D    	movff	postinc2,_C+78	;volatile
 30966  016A9A  006F FF74  F84E    	movff	postdec2,_C+79	;volatile
 30967                           
 30968                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 30969  016AA0  EE22  F02F         	lfsr	2,_C+48	;volatile
 30970  016AA4  006F FF78  F863    	movff	postinc2,_C+100	;volatile
 30971  016AAA  006F FF78  F864    	movff	postinc2,_C+101	;volatile
 30972  016AB0  006F FF78  F865    	movff	postinc2,_C+102	;volatile
 30973  016AB6  006F FF74  F866    	movff	postdec2,_C+103	;volatile
 30974                           
 30975                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 30976  016ABC  0E01               	movlw	1
 30977  016ABE  6EE6               	movwf	postinc1,c
 30978  016AC0  0E10               	movlw	16
 30979  016AC2  6EE6               	movwf	postinc1,c
 30980  016AC4  EE21  F3FF         	lfsr	2,_C
 30981  016AC8  006F FF7B FFE6     	movff	postinc2,postinc1
 30982  016ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 30983  016AD4  006F FF7B FFE6     	movff	postinc2,postinc1
 30984  016ADA  006F FF7B FFE6     	movff	postinc2,postinc1
 30985  016AE0  EE22  F003         	lfsr	2,_C+4	;volatile
 30986  016AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 30987  016AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 30988  016AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 30989  016AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 30990  016AFC  ECB1  F0E7         	call	___flsub	;wreg free
 30991  016B00  0060  F007  FFE6   	movff	btemp,postinc1
 30992  016B06  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30993  016B0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30994  016B12  0060  F013  FFE6   	movff	btemp+3,postinc1
 30995  016B18  EC91  F0CB         	call	_lp_filter	;wreg free
 30996  016B1C  0060  F004  F83F   	movff	btemp,_C+64	;volatile
 30997  016B22  0060  F008  F840   	movff	btemp+1,_C+65	;volatile
 30998  016B28  0060  F00C  F841   	movff	btemp+2,_C+66	;volatile
 30999  016B2E  0060  F010  F842   	movff	btemp+3,_C+67	;volatile
 31000                           
 31001                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 31002  016B34  0E01               	movlw	1
 31003  016B36  6EE6               	movwf	postinc1,c
 31004  016B38  0E11               	movlw	17
 31005  016B3A  6EE6               	movwf	postinc1,c
 31006  016B3C  EE22  F053         	lfsr	2,_C+84	;volatile
 31007  016B40  006F FF7B FFE6     	movff	postinc2,postinc1
 31008  016B46  006F FF7B FFE6     	movff	postinc2,postinc1
 31009  016B4C  006F FF7B FFE6     	movff	postinc2,postinc1
 31010  016B52  006F FF7B FFE6     	movff	postinc2,postinc1
 31011  016B58  EE22  F03F         	lfsr	2,_C+64	;volatile
 31012  016B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 31013  016B62  006F FF7B FFE6     	movff	postinc2,postinc1
 31014  016B68  006F FF7B FFE6     	movff	postinc2,postinc1
 31015  016B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 31016  016B74  EC48  F0A5         	call	___flmul	;wreg free
 31017  016B78  0060  F007  FFE6   	movff	btemp,postinc1
 31018  016B7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31019  016B84  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31020  016B8A  0060  F013  FFE6   	movff	btemp+3,postinc1
 31021  016B90  EC91  F0CB         	call	_lp_filter	;wreg free
 31022  016B94  0060  F004  F873   	movff	btemp,_C+116	;volatile
 31023  016B9A  0060  F008  F874   	movff	btemp+1,_C+117	;volatile
 31024  016BA0  0060  F00C  F875   	movff	btemp+2,_C+118	;volatile
 31025  016BA6  0060  F010  F876   	movff	btemp+3,_C+119	;volatile
 31026                           
 31027                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 31028  016BAC  0E01               	movlw	1
 31029  016BAE  6EE6               	movwf	postinc1,c
 31030  016BB0  0E12               	movlw	18
 31031  016BB2  6EE6               	movwf	postinc1,c
 31032  016BB4  EE22  F04F         	lfsr	2,_C+80	;volatile
 31033  016BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 31034  016BBE  006F FF7B FFE6     	movff	postinc2,postinc1
 31035  016BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 31036  016BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 31037  016BD0  EE22  F047         	lfsr	2,_C+72	;volatile
 31038  016BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 31039  016BDA  006F FF7B FFE6     	movff	postinc2,postinc1
 31040  016BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 31041  016BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 31042  016BEC  EC48  F0A5         	call	___flmul	;wreg free
 31043  016BF0  0060  F007  FFE6   	movff	btemp,postinc1
 31044  016BF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31045  016BFC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31046  016C02  0060  F013  FFE6   	movff	btemp+3,postinc1
 31047  016C08  EC91  F0CB         	call	_lp_filter	;wreg free
 31048  016C0C  0060  F004  F87B   	movff	btemp,_C+124	;volatile
 31049  016C12  0060  F008  F87C   	movff	btemp+1,_C+125	;volatile
 31050  016C18  0060  F00C  F87D   	movff	btemp+2,_C+126	;volatile
 31051  016C1E  0060  F010  F87E   	movff	btemp+3,_C+127	;volatile
 31052                           
 31053                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 31054  016C24  0E01               	movlw	1
 31055  016C26  6EE6               	movwf	postinc1,c
 31056  016C28  0E13               	movlw	19
 31057  016C2A  6EE6               	movwf	postinc1,c
 31058  016C2C  0E00               	movlw	0
 31059  016C2E  6EE6               	movwf	postinc1,c
 31060  016C30  0E00               	movlw	0
 31061  016C32  6EE6               	movwf	postinc1,c
 31062  016C34  0E60               	movlw	96
 31063  016C36  6EE6               	movwf	postinc1,c
 31064  016C38  0EC1               	movlw	193
 31065  016C3A  6EE6               	movwf	postinc1,c
 31066  016C3C  EE22  F063         	lfsr	2,_C+100	;volatile
 31067  016C40  006F FF7B FFE6     	movff	postinc2,postinc1
 31068  016C46  006F FF7B FFE6     	movff	postinc2,postinc1
 31069  016C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 31070  016C52  006F FF7B FFE6     	movff	postinc2,postinc1
 31071  016C58  EE22  F03F         	lfsr	2,_C+64	;volatile
 31072  016C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 31073  016C62  006F FF7B FFE6     	movff	postinc2,postinc1
 31074  016C68  006F FF7B FFE6     	movff	postinc2,postinc1
 31075  016C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 31076  016C74  EC48  F0A5         	call	___flmul	;wreg free
 31077  016C78  0060  F007  FFE6   	movff	btemp,postinc1
 31078  016C7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31079  016C84  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31080  016C8A  0060  F013  FFE6   	movff	btemp+3,postinc1
 31081  016C90  EC5D  F0A9         	call	___fladd	;wreg free
 31082  016C94  0060  F007  FFE6   	movff	btemp,postinc1
 31083  016C9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31084  016CA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31085  016CA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 31086  016CAC  EC91  F0CB         	call	_lp_filter	;wreg free
 31087  016CB0  0060  F004  F877   	movff	btemp,_C+120	;volatile
 31088  016CB6  0060  F008  F878   	movff	btemp+1,_C+121	;volatile
 31089  016CBC  0060  F00C  F879   	movff	btemp+2,_C+122	;volatile
 31090  016CC2  0060  F010  F87A   	movff	btemp+3,_C+123	;volatile
 31091                           
 31092                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 31093  016CC8  0E01               	movlw	1
 31094  016CCA  6EE6               	movwf	postinc1,c
 31095  016CCC  0E14               	movlw	20
 31096  016CCE  6EE6               	movwf	postinc1,c
 31097  016CD0  EE22  F053         	lfsr	2,_C+84	;volatile
 31098  016CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 31099  016CDA  006F FF7B FFE6     	movff	postinc2,postinc1
 31100  016CE0  006F FF7B FFE6     	movff	postinc2,postinc1
 31101  016CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 31102  016CEC  EE22  F043         	lfsr	2,_C+68	;volatile
 31103  016CF0  006F FF7B FFE6     	movff	postinc2,postinc1
 31104  016CF6  006F FF7B FFE6     	movff	postinc2,postinc1
 31105  016CFC  006F FF7B FFE6     	movff	postinc2,postinc1
 31106  016D02  006F FF7B FFE6     	movff	postinc2,postinc1
 31107  016D08  EC48  F0A5         	call	___flmul	;wreg free
 31108  016D0C  0060  F007  FFE6   	movff	btemp,postinc1
 31109  016D12  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31110  016D18  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31111  016D1E  0060  F013  FFE6   	movff	btemp+3,postinc1
 31112  016D24  EC91  F0CB         	call	_lp_filter	;wreg free
 31113  016D28  0060  F004  F87F   	movff	btemp,_C+128	;volatile
 31114  016D2E  0060  F008  F880   	movff	btemp+1,_C+129	;volatile
 31115  016D34  0060  F00C  F881   	movff	btemp+2,_C+130	;volatile
 31116  016D3A  0060  F010  F882   	movff	btemp+3,_C+131	;volatile
 31117                           
 31118                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 31119  016D40  EE22  F077         	lfsr	2,_C+120	;volatile
 31120  016D44  0E03               	movlw	3
 31121  016D46  AEDB               	btfss	plusw2,7,c
 31122  016D48  D010               	goto	l12422
 31123                           
 31124                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 31125  016D4A  0E17               	movlw	23
 31126  016D4C  006F FFA0  F877    	movff	wreg,_C+120	;volatile
 31127  016D52  0EB7               	movlw	183
 31128  016D54  006F FFA0  F878    	movff	wreg,_C+121	;volatile
 31129  016D5A  0ED1               	movlw	209
 31130  016D5C  006F FFA0  F879    	movff	wreg,_C+122	;volatile
 31131  016D62  0E38               	movlw	56
 31132  016D64  006F FFA0  F87A    	movff	wreg,_C+123	;volatile
 31133  016D6A                     l12422:
 31134                           
 31135                           ;mbmc.c: 95:  start_bsoc();
 31136  016D6A  EC5D  F0EC         	call	_start_bsoc	;wreg free
 31137                           
 31138                           ; BSR set to: 57
 31139                           ;mbmc.c: 96:  C.update = 1;
 31140  016D6E  0E01               	movlw	1
 31141  016D70  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 31142                           
 31143                           ; BSR set to: 57
 31144                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31145  016D76  0012               	return		;funcret
 31146  016D78                     __end_of_calc_model_data:
 31147                           	opt callstack 0
 31148                           
 31149 ;; *************** function _stop_bsoc *****************
 31150 ;; Defined at:
 31151 ;;		line 130 in file "bsoc.c"
 31152 ;; Parameters:    Size  Location     Type
 31153 ;;		None
 31154 ;; Auto vars:     Size  Location     Type
 31155 ;;		None
 31156 ;; Return value:  Size  Location     Type
 31157 ;;                  1  [STACK] void 
 31158 ;; Registers used:
 31159 ;;		None
 31160 ;; Tracked objects:
 31161 ;;		On entry : 0/1
 31162 ;;		On exit  : 3F/39
 31163 ;;		Unchanged: 0/0
 31164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31169 ;;Total ram usage:        0 bytes
 31170 ;; Hardware stack levels used:    1
 31171 ;; Hardware stack levels required when called:   15
 31172 ;; This function calls:
 31173 ;;		Nothing
 31174 ;; This function is called by:
 31175 ;;		_calc_model_data
 31176 ;; This function uses a reentrant model
 31177 ;;
 31178                           
 31179                           	psect	text123
 31180  01DBDA                     __ptext123:
 31181                           	opt callstack 0
 31182  01DBDA                     _stop_bsoc:
 31183                           	opt callstack 14
 31184                           
 31185                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 31186                           
 31187                           ; BSR set to: 57
 31188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31189                           ;incstack = 0
 31190  01DBDA  0139               	movlb	57	; () banked
 31191  01DBDC  9D96               	bcf	150,6,b	;volatile
 31192                           
 31193                           ; BSR set to: 57
 31194                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 31195  01DBDE  0012               	return		;funcret
 31196  01DBE0                     __end_of_stop_bsoc:
 31197                           	opt callstack 0
 31198                           
 31199 ;; *************** function _start_bsoc *****************
 31200 ;; Defined at:
 31201 ;;		line 121 in file "bsoc.c"
 31202 ;; Parameters:    Size  Location     Type
 31203 ;;		None
 31204 ;; Auto vars:     Size  Location     Type
 31205 ;;		None
 31206 ;; Return value:  Size  Location     Type
 31207 ;;                  1  [STACK] void 
 31208 ;; Registers used:
 31209 ;;		wreg, status,2, status,0, btemp+11
 31210 ;; Tracked objects:
 31211 ;;		On entry : 0/1
 31212 ;;		On exit  : 3F/39
 31213 ;;		Unchanged: 0/0
 31214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31219 ;;Total ram usage:        0 bytes
 31220 ;; Hardware stack levels used:    1
 31221 ;; Hardware stack levels required when called:   15
 31222 ;; This function calls:
 31223 ;;		Nothing
 31224 ;; This function is called by:
 31225 ;;		_calc_model_data
 31226 ;; This function uses a reentrant model
 31227 ;;
 31228                           
 31229                           	psect	text124
 31230  01D8BA                     __ptext124:
 31231                           	opt callstack 0
 31232  01D8BA                     _start_bsoc:
 31233                           	opt callstack 14
 31234                           
 31235                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 31236                           
 31237                           ; BSR set to: 57
 31238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31239                           ;incstack = 0
 31240  01D8BA  0139               	movlb	57	; () banked
 31241  01D8BC  8D96               	bsf	150,6,b	;volatile
 31242                           
 31243                           ; BSR set to: 57
 31244  01D8BE  A4BE               	btfss	190,2,c	;volatile
 31245  01D8C0  D002               	goto	u10560
 31246  01D8C2  0E01               	movlw	1
 31247  01D8C4  D001               	goto	u10566
 31248  01D8C6                     u10560:
 31249  01D8C6  0E00               	movlw	0
 31250  01D8C8                     u10566:
 31251  01D8C8  0AFF               	xorlw	255
 31252  01D8CA  6E0C               	movwf	(btemp+11)^0,c
 31253  01D8CC  460C               	rlncf	(btemp+11)^0,f,c
 31254  01D8CE  460C               	rlncf	(btemp+11)^0,f,c
 31255  01D8D0  50BE               	movf	190,w,c	;volatile
 31256  01D8D2  180C               	xorwf	(btemp+11)^0,w,c
 31257  01D8D4  0BFB               	andlw	-5
 31258  01D8D6  180C               	xorwf	(btemp+11)^0,w,c
 31259  01D8D8  6EBE               	movwf	190,c	;volatile
 31260                           
 31261                           ; BSR set to: 57
 31262                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 31263  01D8DA  0012               	return		;funcret
 31264  01D8DC                     __end_of_start_bsoc:
 31265                           	opt callstack 0
 31266                           
 31267 ;; *************** function _lp_filter *****************
 31268 ;; Defined at:
 31269 ;;		line 29 in file "mbmc.c"
 31270 ;; Parameters:    Size  Location     Type
 31271 ;;  new             4  [STACK] const float 
 31272 ;;  bn              1  [STACK] const unsigned char 
 31273 ;;  slow            1  [STACK] const char 
 31274 ;; Auto vars:     Size  Location     Type
 31275 ;;  lp_speed        4  [STACK] float 
 31276 ;; Return value:  Size  Location     Type
 31277 ;;                  4  [STACK] float 
 31278 ;; Registers used:
 31279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31280 ;; Tracked objects:
 31281 ;;		On entry : 0/1
 31282 ;;		On exit  : 0/0
 31283 ;;		Unchanged: 0/0
 31284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31289 ;;Total ram usage:        0 bytes
 31290 ;; Hardware stack levels used:    1
 31291 ;; Hardware stack levels required when called:   17
 31292 ;; This function calls:
 31293 ;;		___fladd
 31294 ;;		___flmul
 31295 ;;		___flsub
 31296 ;; This function is called by:
 31297 ;;		_main
 31298 ;;		_convert_adc_data
 31299 ;;		_calc_model_data
 31300 ;; This function uses a reentrant model
 31301 ;;
 31302                           
 31303                           	psect	text125
 31304  019722                     __ptext125:
 31305                           	opt callstack 0
 31306  019722                     _lp_filter:
 31307                           	opt callstack 0
 31308                           
 31309                           ; BSR set to: 57
 31310                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31311  019722  52E6               	movf	postinc1,f,c
 31312  019724  52E6               	movf	postinc1,f,c
 31313  019726  52E6               	movf	postinc1,f,c
 31314  019728  52E6               	movf	postinc1,f,c
 31315                           
 31316                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 31317                           ;stkvar	_bn @ sp[(-4)+-5]
 31318                           
 31319                           ;incstack = 0
 31320  01972A  0EF7               	movlw	-9
 31321  01972C  006F FF8C  F001    	movff	plusw1,btemp
 31322  019732  0E14               	movlw	20
 31323  019734  6401               	cpfsgt	btemp^0,c
 31324  019736  D011               	goto	l11436
 31325  019738                     u10320:
 31326                           
 31327                           ;mbmc.c: 35:   return new;
 31328                           ;stkvar	_new @ sp[(-4)+-4]
 31329  019738  0EF8               	movlw	-8
 31330  01973A  006F FF8C  F001    	movff	plusw1,btemp
 31331  019740  0EF9               	movlw	-7
 31332  019742  006F FF8C  F002    	movff	plusw1,btemp+1
 31333  019748  0EFA               	movlw	-6
 31334  01974A  006F FF8C  F003    	movff	plusw1,btemp+2
 31335  019750  0EFB               	movlw	-5
 31336  019752  006F FF8C  F004    	movff	plusw1,btemp+3
 31337  019758  D0BD               	goto	l2102
 31338  01975A                     l11436:
 31339                           
 31340                           ;mbmc.c: 37:  if (slow == (-1)) {
 31341                           ;stkvar	_slow @ sp[(-4)+-6]
 31342  01975A  0EF6               	movlw	-10
 31343  01975C  28E3               	incf	plusw1,w,c
 31344  01975E  A4D8               	btfss	status,2,c
 31345  019760  D012               	goto	l11444
 31346                           
 31347                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 31348                           ;stkvar	_bn @ sp[(-4)+-5]
 31349  019762  0EF7               	movlw	-9
 31350  019764  50E3               	movf	plusw1,w,c
 31351  019766  0D04               	mullw	4
 31352  019768  0E00               	movlw	low lp_filter@smooth
 31353  01976A  24F3               	addwf	243,w,c
 31354  01976C  6ED9               	movwf	fsr2l,c
 31355  01976E  0E03               	movlw	high lp_filter@smooth
 31356  019770  20F4               	addwfc	prodh,w,c
 31357  019772  6EDA               	movwf	fsr2h,c
 31358  019774  0E00               	movlw	0
 31359  019776  6EDE               	movwf	postinc2,c
 31360  019778  0E00               	movlw	0
 31361  01977A  6EDE               	movwf	postinc2,c
 31362  01977C  0E00               	movlw	0
 31363  01977E  6EDE               	movwf	postinc2,c
 31364  019780  0E00               	movlw	0
 31365  019782  6EDD               	movwf	postdec2,c
 31366  019784  D7D9               	goto	u10320
 31367  019786                     l11444:
 31368                           
 31369                           ;mbmc.c: 42:  if (slow) {
 31370                           ;stkvar	_slow @ sp[(-4)+-6]
 31371  019786  0EF6               	movlw	-10
 31372  019788  50E3               	movf	plusw1,w,c
 31373  01978A  B4D8               	btfsc	status,2,c
 31374  01978C  D006               	goto	l11448
 31375                           
 31376                           ;mbmc.c: 43:   lp_speed = 0.033;
 31377  01978E  0E02               	movlw	2
 31378  019790  6E09               	movwf	(btemp+8)^0,c
 31379  019792  0E2B               	movlw	43
 31380  019794  6E0A               	movwf	(btemp+9)^0,c
 31381  019796  0E07               	movlw	7
 31382  019798  D005               	goto	L37
 31383  01979A                     l11448:
 31384                           
 31385                           ;mbmc.c: 45:   lp_speed = 0.066;
 31386  01979A  0E02               	movlw	2
 31387  01979C  6E09               	movwf	(btemp+8)^0,c
 31388  01979E  0E2B               	movlw	43
 31389  0197A0  6E0A               	movwf	(btemp+9)^0,c
 31390  0197A2  0E87               	movlw	135
 31391  0197A4                     L37:
 31392  0197A4  6E0B               	movwf	(btemp+10)^0,c
 31393  0197A6  0E3D               	movlw	61
 31394  0197A8  6E0C               	movwf	(btemp+11)^0,c
 31395                           
 31396                           ;stkvar	_lp_speed @ sp[(-4)+0]
 31397  0197AA  0EFC               	movlw	-4
 31398  0197AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 31399  0197B2  0EFD               	movlw	-3
 31400  0197B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31401  0197BA  0EFE               	movlw	-2
 31402  0197BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31403  0197C2  0EFF               	movlw	-1
 31404  0197C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31405                           
 31406                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 31407                           ;stkvar	_bn @ sp[(-4)+-5]
 31408  0197CA  0EF7               	movlw	-9
 31409  0197CC  50E3               	movf	plusw1,w,c
 31410  0197CE  0D04               	mullw	4
 31411  0197D0  0E00               	movlw	low lp_filter@smooth
 31412  0197D2  24F3               	addwf	243,w,c
 31413  0197D4  6ED9               	movwf	fsr2l,c
 31414  0197D6  0E03               	movlw	high lp_filter@smooth
 31415  0197D8  20F4               	addwfc	prodh,w,c
 31416  0197DA  6EDA               	movwf	fsr2h,c
 31417  0197DC  006F FF7B FFE6     	movff	postinc2,postinc1
 31418  0197E2  006F FF7B FFE6     	movff	postinc2,postinc1
 31419  0197E8  006F FF7B FFE6     	movff	postinc2,postinc1
 31420  0197EE  006F FF7B FFE6     	movff	postinc2,postinc1
 31421                           
 31422                           ;stkvar	_lp_speed @ sp[(-8)+0]
 31423  0197F4  0EF8               	movlw	-8
 31424  0197F6  006F FF8F FFE6     	movff	plusw1,postinc1
 31425  0197FC  006F FF8F FFE6     	movff	plusw1,postinc1
 31426  019802  006F FF8F FFE6     	movff	plusw1,postinc1
 31427  019808  006F FF8F FFE6     	movff	plusw1,postinc1
 31428                           
 31429                           ;stkvar	_bn @ sp[(-12)+-5]
 31430  01980E  0EEF               	movlw	-17
 31431  019810  50E3               	movf	plusw1,w,c
 31432  019812  0D04               	mullw	4
 31433  019814  0E00               	movlw	low lp_filter@smooth
 31434  019816  24F3               	addwf	243,w,c
 31435  019818  6ED9               	movwf	fsr2l,c
 31436  01981A  0E03               	movlw	high lp_filter@smooth
 31437  01981C  20F4               	addwfc	prodh,w,c
 31438  01981E  6EDA               	movwf	fsr2h,c
 31439  019820  006F FF7B FFE6     	movff	postinc2,postinc1
 31440  019826  006F FF7B FFE6     	movff	postinc2,postinc1
 31441  01982C  006F FF7B FFE6     	movff	postinc2,postinc1
 31442  019832  006F FF7B FFE6     	movff	postinc2,postinc1
 31443                           
 31444                           ;stkvar	_new @ sp[(-16)+-4]
 31445  019838  0EEC               	movlw	-20
 31446  01983A  006F FF8F FFE6     	movff	plusw1,postinc1
 31447  019840  006F FF8F FFE6     	movff	plusw1,postinc1
 31448  019846  006F FF8F FFE6     	movff	plusw1,postinc1
 31449  01984C  006F FF8F FFE6     	movff	plusw1,postinc1
 31450  019852  ECB1  F0E7         	call	___flsub	;wreg free
 31451  019856  0060  F007  FFE6   	movff	btemp,postinc1
 31452  01985C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31453  019862  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31454  019868  0060  F013  FFE6   	movff	btemp+3,postinc1
 31455  01986E  EC48  F0A5         	call	___flmul	;wreg free
 31456  019872  0060  F007  FFE6   	movff	btemp,postinc1
 31457  019878  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31458  01987E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31459  019884  0060  F013  FFE6   	movff	btemp+3,postinc1
 31460  01988A  EC5D  F0A9         	call	___fladd	;wreg free
 31461                           
 31462                           ;stkvar	_bn @ sp[(-4)+-5]
 31463  01988E  0EF7               	movlw	-9
 31464  019890  50E3               	movf	plusw1,w,c
 31465  019892  0D04               	mullw	4
 31466  019894  0E00               	movlw	low lp_filter@smooth
 31467  019896  24F3               	addwf	243,w,c
 31468  019898  6ED9               	movwf	fsr2l,c
 31469  01989A  0E03               	movlw	high lp_filter@smooth
 31470  01989C  20F4               	addwfc	prodh,w,c
 31471  01989E  6EDA               	movwf	fsr2h,c
 31472  0198A0  0060  F007  FFDE   	movff	btemp,postinc2
 31473  0198A6  0060  F00B  FFDE   	movff	btemp+1,postinc2
 31474  0198AC  0060  F00F  FFDE   	movff	btemp+2,postinc2
 31475  0198B2  0060  F013  FFDD   	movff	btemp+3,postdec2
 31476  0198B8  52DD               	movf	postdec2,f,c
 31477  0198BA  52DD               	movf	postdec2,f,c
 31478  0198BC  006F FF78  F001    	movff	postinc2,btemp
 31479  0198C2  006F FF78  F002    	movff	postinc2,btemp+1
 31480  0198C8  006F FF78  F003    	movff	postinc2,btemp+2
 31481  0198CE  006F FF78  F004    	movff	postinc2,btemp+3
 31482  0198D4                     l2102:
 31483                           
 31484                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 31485  0198D4  0EF6               	movlw	246
 31486  0198D6  26E1               	addwf	fsr1l,f,c
 31487  0198D8  0EFF               	movlw	255
 31488  0198DA  22E2               	addwfc	fsr1h,f,c
 31489  0198DC  0012               	return		;funcret
 31490  0198DE                     __end_of_lp_filter:
 31491                           	opt callstack 0
 31492                           
 31493 ;; *************** function ___flsub *****************
 31494 ;; Defined at:
 31495 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 31496 ;; Parameters:    Size  Location     Type
 31497 ;;  b               4  [STACK] float 
 31498 ;;  a               4  [STACK] float 
 31499 ;; Auto vars:     Size  Location     Type
 31500 ;;		None
 31501 ;; Return value:  Size  Location     Type
 31502 ;;                  4  [STACK] float 
 31503 ;; Registers used:
 31504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31505 ;; Tracked objects:
 31506 ;;		On entry : 0/0
 31507 ;;		On exit  : 0/0
 31508 ;;		Unchanged: 0/0
 31509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31514 ;;Total ram usage:        0 bytes
 31515 ;; Hardware stack levels used:    1
 31516 ;; Hardware stack levels required when called:   16
 31517 ;; This function calls:
 31518 ;;		___fladd
 31519 ;; This function is called by:
 31520 ;;		_conv_raw_result
 31521 ;;		_lp_filter
 31522 ;;		_calc_model_data
 31523 ;;		_calc_ror_data
 31524 ;;		_esr_check
 31525 ;;		_efgtoa
 31526 ;; This function uses a reentrant model
 31527 ;;
 31528                           
 31529                           	psect	text126
 31530  01CF62                     __ptext126:
 31531                           	opt callstack 0
 31532  01CF62                     ___flsub:
 31533                           	opt callstack 0
 31534                           
 31535                           ;stkvar	_a @ sp[(0)+-8]
 31536                           
 31537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31538                           ;incstack = 0
 31539 ;; hardware stack exceeded
 31540  01CF62  0EFB               	movlw	-5
 31541  01CF64  7EE3               	btg	plusw1,7,c
 31542                           
 31543                           ;stkvar	_a @ sp[(0)+-8]
 31544  01CF66  0EF8               	movlw	-8
 31545  01CF68  006F FF8F FFE6     	movff	plusw1,postinc1
 31546  01CF6E  006F FF8F FFE6     	movff	plusw1,postinc1
 31547  01CF74  006F FF8F FFE6     	movff	plusw1,postinc1
 31548  01CF7A  006F FF8F FFE6     	movff	plusw1,postinc1
 31549                           
 31550                           ;stkvar	_b @ sp[(-4)+-4]
 31551  01CF80  0EF8               	movlw	-8
 31552  01CF82  006F FF8F FFE6     	movff	plusw1,postinc1
 31553  01CF88  006F FF8F FFE6     	movff	plusw1,postinc1
 31554  01CF8E  006F FF8F FFE6     	movff	plusw1,postinc1
 31555  01CF94  006F FF8F FFE6     	movff	plusw1,postinc1
 31556  01CF9A  EC5D  F0A9         	call	___fladd	;wreg free
 31557                           
 31558                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 31559  01CF9E  0EF8               	movlw	248
 31560  01CFA0  26E1               	addwf	fsr1l,f,c
 31561  01CFA2  0EFF               	movlw	255
 31562  01CFA4  22E2               	addwfc	fsr1h,f,c
 31563  01CFA6  0012               	return		;funcret
 31564  01CFA8                     __end_of___flsub:
 31565                           	opt callstack 0
 31566                           
 31567 ;; *************** function ___fladd *****************
 31568 ;; Defined at:
 31569 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 31570 ;; Parameters:    Size  Location     Type
 31571 ;;  b               4  [STACK] float 
 31572 ;;  a               4  [STACK] float 
 31573 ;; Auto vars:     Size  Location     Type
 31574 ;;  grs             1  [STACK] unsigned char 
 31575 ;;  bexp            1  [STACK] unsigned char 
 31576 ;;  aexp            1  [STACK] unsigned char 
 31577 ;;  signs           1  [STACK] unsigned char 
 31578 ;; Return value:  Size  Location     Type
 31579 ;;                  4  [STACK] unsigned char 
 31580 ;; Registers used:
 31581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31582 ;; Tracked objects:
 31583 ;;		On entry : 0/0
 31584 ;;		On exit  : 0/0
 31585 ;;		Unchanged: 0/0
 31586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31591 ;;Total ram usage:        0 bytes
 31592 ;; Hardware stack levels used:    1
 31593 ;; Hardware stack levels required when called:   15
 31594 ;; This function calls:
 31595 ;;		Nothing
 31596 ;; This function is called by:
 31597 ;;		_main
 31598 ;;		_lp_filter
 31599 ;;		_calc_model_data
 31600 ;;		_efgtoa
 31601 ;;		___asfladd
 31602 ;;		___flsub
 31603 ;; This function uses a reentrant model
 31604 ;;
 31605                           
 31606                           	psect	text127
 31607  0152BA                     __ptext127:
 31608                           	opt callstack 0
 31609  0152BA                     ___fladd:
 31610                           	opt callstack 0
 31611                           
 31612                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31613  0152BA  52E6               	movf	postinc1,f,c
 31614  0152BC  52E6               	movf	postinc1,f,c
 31615  0152BE  52E6               	movf	postinc1,f,c
 31616  0152C0  52E6               	movf	postinc1,f,c
 31617                           
 31618                           ;stkvar	_b @ sp[(-4)+-4]
 31619                           
 31620                           ;incstack = 0
 31621 ;; hardware stack exceeded
 31622  0152C2  0EFB               	movlw	251
 31623  0152C4  24E1               	addwf	fsr1l,w,c
 31624  0152C6  6ED9               	movwf	fsr2l,c
 31625  0152C8  0EFF               	movlw	255
 31626  0152CA  20E2               	addwfc	fsr1h,w,c
 31627  0152CC  6EDA               	movwf	fsr2h,c
 31628  0152CE  50DF               	movf	indf2,w,c
 31629  0152D0  6E0C               	movwf	(btemp+11)^0,c
 31630  0152D2  0E80               	movlw	128
 31631  0152D4  160C               	andwf	(btemp+11)^0,f,c
 31632                           
 31633                           ;stkvar	_signs @ sp[(-4)+3]
 31634  0152D6  0EFF               	movlw	-1
 31635  0152D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 31636                           
 31637                           ;stkvar	_b @ sp[(-4)+-4]
 31638  0152DE  0EFB               	movlw	251
 31639  0152E0  24E1               	addwf	fsr1l,w,c
 31640  0152E2  6ED9               	movwf	fsr2l,c
 31641  0152E4  0EFF               	movlw	255
 31642  0152E6  20E2               	addwfc	fsr1h,w,c
 31643  0152E8  6EDA               	movwf	fsr2h,c
 31644  0152EA  50DF               	movf	indf2,w,c
 31645  0152EC  6E0C               	movwf	(btemp+11)^0,c
 31646  0152EE  90D8               	bcf	status,0,c
 31647  0152F0  340C               	rlcf	(btemp+11)^0,w,c
 31648  0152F2  6E0B               	movwf	(btemp+10)^0,c
 31649                           
 31650                           ;stkvar	_bexp @ sp[(-4)+1]
 31651  0152F4  0EFD               	movlw	-3
 31652  0152F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31653                           
 31654                           ;stkvar	_b @ sp[(-4)+-4]
 31655  0152FC  0EFA               	movlw	250
 31656  0152FE  24E1               	addwf	fsr1l,w,c
 31657  015300  6ED9               	movwf	fsr2l,c
 31658  015302  0EFF               	movlw	255
 31659  015304  20E2               	addwfc	fsr1h,w,c
 31660  015306  6EDA               	movwf	fsr2h,c
 31661  015308  AEDF               	btfss	indf2,7,c
 31662  01530A  D002               	goto	l8574
 31663                           
 31664                           ;stkvar	_bexp @ sp[(-4)+1]
 31665  01530C  0EFD               	movlw	-3
 31666  01530E  80E3               	bsf	plusw1,0,c
 31667  015310                     l8574:
 31668                           
 31669                           ;stkvar	_bexp @ sp[(-4)+1]
 31670  015310  0EFD               	movlw	-3
 31671  015312  50E3               	movf	plusw1,w,c
 31672  015314  B4D8               	btfsc	status,2,c
 31673  015316  D027               	goto	l8584
 31674                           
 31675                           ;stkvar	_bexp @ sp[(-4)+1]
 31676  015318  0EFD               	movlw	-3
 31677  01531A  28E3               	incf	plusw1,w,c
 31678  01531C  A4D8               	btfss	status,2,c
 31679  01531E  D018               	goto	l8580
 31680  015320  0E00               	movlw	0
 31681  015322  6E09               	movwf	(btemp+8)^0,c
 31682  015324  0E00               	movlw	0
 31683  015326  6E0A               	movwf	(btemp+9)^0,c
 31684  015328  0E00               	movlw	0
 31685  01532A  6E0B               	movwf	(btemp+10)^0,c
 31686  01532C  0E00               	movlw	0
 31687  01532E  6E0C               	movwf	(btemp+11)^0,c
 31688                           
 31689                           ;stkvar	_b @ sp[(-4)+-4]
 31690  015330  0EF8               	movlw	-8
 31691  015332  0060  F027  FFE3   	movff	btemp+8,plusw1
 31692  015338  0EF9               	movlw	-7
 31693  01533A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31694  015340  0EFA               	movlw	-6
 31695  015342  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31696  015348  0EFB               	movlw	-5
 31697  01534A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31698  015350                     l8580:
 31699                           
 31700                           ;stkvar	_b @ sp[(-4)+-4]
 31701  015350  0EFA               	movlw	-6
 31702  015352  8EE3               	bsf	plusw1,7,c
 31703                           
 31704                           ;stkvar	_b @ sp[(-4)+-4]
 31705  015354  0EFB               	movlw	251
 31706  015356  24E1               	addwf	fsr1l,w,c
 31707  015358  6ED9               	movwf	fsr2l,c
 31708  01535A  0EFF               	movlw	255
 31709  01535C  20E2               	addwfc	fsr1h,w,c
 31710  01535E  6EDA               	movwf	fsr2h,c
 31711  015360  0E00               	movlw	0
 31712  015362  6EDF               	movwf	indf2,c
 31713  015364  D018               	goto	l8586
 31714  015366                     l8584:
 31715  015366  0E00               	movlw	0
 31716  015368  6E09               	movwf	(btemp+8)^0,c
 31717  01536A  0E00               	movlw	0
 31718  01536C  6E0A               	movwf	(btemp+9)^0,c
 31719  01536E  0E00               	movlw	0
 31720  015370  6E0B               	movwf	(btemp+10)^0,c
 31721  015372  0E00               	movlw	0
 31722  015374  6E0C               	movwf	(btemp+11)^0,c
 31723                           
 31724                           ;stkvar	_b @ sp[(-4)+-4]
 31725  015376  0EF8               	movlw	-8
 31726  015378  0060  F027  FFE3   	movff	btemp+8,plusw1
 31727  01537E  0EF9               	movlw	-7
 31728  015380  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31729  015386  0EFA               	movlw	-6
 31730  015388  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31731  01538E  0EFB               	movlw	-5
 31732  015390  0060  F033  FFE3   	movff	btemp+11,plusw1
 31733  015396                     l8586:
 31734                           
 31735                           ;stkvar	_a @ sp[(-4)+-8]
 31736  015396  0EF7               	movlw	247
 31737  015398  24E1               	addwf	fsr1l,w,c
 31738  01539A  6ED9               	movwf	fsr2l,c
 31739  01539C  0EFF               	movlw	255
 31740  01539E  20E2               	addwfc	fsr1h,w,c
 31741  0153A0  6EDA               	movwf	fsr2h,c
 31742  0153A2  50DF               	movf	indf2,w,c
 31743  0153A4  6E0C               	movwf	(btemp+11)^0,c
 31744  0153A6  0E80               	movlw	128
 31745  0153A8  160C               	andwf	(btemp+11)^0,f,c
 31746                           
 31747                           ;stkvar	_aexp @ sp[(-4)+2]
 31748  0153AA  0EFE               	movlw	-2
 31749  0153AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31750                           
 31751                           ;stkvar	_signs @ sp[(-4)+3]
 31752                           ;stkvar	_aexp @ sp[(-4)+2]
 31753  0153B2  50E1               	movf	fsr1l,w,c
 31754  0153B4  0FFE               	addlw	-2
 31755  0153B6  6ED9               	movwf	fsr2l,c
 31756  0153B8  50E2               	movf	fsr1h,w,c
 31757  0153BA  6EDA               	movwf	fsr2h,c
 31758  0153BC  0EFF               	movlw	255
 31759  0153BE  22DA               	addwfc	fsr2h,f,c
 31760  0153C0  0EFF               	movlw	-1
 31761  0153C2  50E3               	movf	plusw1,w,c
 31762  0153C4  18DE               	xorwf	postinc2,w,c
 31763  0153C6  B4D8               	btfsc	status,2,c
 31764  0153C8  D002               	goto	l8592
 31765                           
 31766                           ;stkvar	_signs @ sp[(-4)+3]
 31767  0153CA  0EFF               	movlw	-1
 31768  0153CC  8CE3               	bsf	plusw1,6,c
 31769  0153CE                     l8592:
 31770                           
 31771                           ;stkvar	_a @ sp[(-4)+-8]
 31772  0153CE  0EF7               	movlw	247
 31773  0153D0  24E1               	addwf	fsr1l,w,c
 31774  0153D2  6ED9               	movwf	fsr2l,c
 31775  0153D4  0EFF               	movlw	255
 31776  0153D6  20E2               	addwfc	fsr1h,w,c
 31777  0153D8  6EDA               	movwf	fsr2h,c
 31778  0153DA  50DF               	movf	indf2,w,c
 31779  0153DC  6E0C               	movwf	(btemp+11)^0,c
 31780  0153DE  90D8               	bcf	status,0,c
 31781  0153E0  340C               	rlcf	(btemp+11)^0,w,c
 31782  0153E2  6E0B               	movwf	(btemp+10)^0,c
 31783                           
 31784                           ;stkvar	_aexp @ sp[(-4)+2]
 31785  0153E4  0EFE               	movlw	-2
 31786  0153E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31787                           
 31788                           ;stkvar	_a @ sp[(-4)+-8]
 31789  0153EC  0EF6               	movlw	246
 31790  0153EE  24E1               	addwf	fsr1l,w,c
 31791  0153F0  6ED9               	movwf	fsr2l,c
 31792  0153F2  0EFF               	movlw	255
 31793  0153F4  20E2               	addwfc	fsr1h,w,c
 31794  0153F6  6EDA               	movwf	fsr2h,c
 31795  0153F8  AEDF               	btfss	indf2,7,c
 31796  0153FA  D002               	goto	l8598
 31797                           
 31798                           ;stkvar	_aexp @ sp[(-4)+2]
 31799  0153FC  0EFE               	movlw	-2
 31800  0153FE  80E3               	bsf	plusw1,0,c
 31801  015400                     l8598:
 31802                           
 31803                           ;stkvar	_aexp @ sp[(-4)+2]
 31804  015400  0EFE               	movlw	-2
 31805  015402  50E3               	movf	plusw1,w,c
 31806  015404  B4D8               	btfsc	status,2,c
 31807  015406  D027               	goto	l8608
 31808                           
 31809                           ;stkvar	_aexp @ sp[(-4)+2]
 31810  015408  0EFE               	movlw	-2
 31811  01540A  28E3               	incf	plusw1,w,c
 31812  01540C  A4D8               	btfss	status,2,c
 31813  01540E  D018               	goto	l8604
 31814  015410  0E00               	movlw	0
 31815  015412  6E09               	movwf	(btemp+8)^0,c
 31816  015414  0E00               	movlw	0
 31817  015416  6E0A               	movwf	(btemp+9)^0,c
 31818  015418  0E00               	movlw	0
 31819  01541A  6E0B               	movwf	(btemp+10)^0,c
 31820  01541C  0E00               	movlw	0
 31821  01541E  6E0C               	movwf	(btemp+11)^0,c
 31822                           
 31823                           ;stkvar	_a @ sp[(-4)+-8]
 31824  015420  0EF4               	movlw	-12
 31825  015422  0060  F027  FFE3   	movff	btemp+8,plusw1
 31826  015428  0EF5               	movlw	-11
 31827  01542A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31828  015430  0EF6               	movlw	-10
 31829  015432  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31830  015438  0EF7               	movlw	-9
 31831  01543A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31832  015440                     l8604:
 31833                           
 31834                           ;stkvar	_a @ sp[(-4)+-8]
 31835  015440  0EF6               	movlw	-10
 31836  015442  8EE3               	bsf	plusw1,7,c
 31837                           
 31838                           ;stkvar	_a @ sp[(-4)+-8]
 31839  015444  0EF7               	movlw	247
 31840  015446  24E1               	addwf	fsr1l,w,c
 31841  015448  6ED9               	movwf	fsr2l,c
 31842  01544A  0EFF               	movlw	255
 31843  01544C  20E2               	addwfc	fsr1h,w,c
 31844  01544E  6EDA               	movwf	fsr2h,c
 31845  015450  0E00               	movlw	0
 31846  015452  6EDF               	movwf	indf2,c
 31847  015454  D018               	goto	l8610
 31848  015456                     l8608:
 31849  015456  0E00               	movlw	0
 31850  015458  6E09               	movwf	(btemp+8)^0,c
 31851  01545A  0E00               	movlw	0
 31852  01545C  6E0A               	movwf	(btemp+9)^0,c
 31853  01545E  0E00               	movlw	0
 31854  015460  6E0B               	movwf	(btemp+10)^0,c
 31855  015462  0E00               	movlw	0
 31856  015464  6E0C               	movwf	(btemp+11)^0,c
 31857                           
 31858                           ;stkvar	_a @ sp[(-4)+-8]
 31859  015466  0EF4               	movlw	-12
 31860  015468  0060  F027  FFE3   	movff	btemp+8,plusw1
 31861  01546E  0EF5               	movlw	-11
 31862  015470  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31863  015476  0EF6               	movlw	-10
 31864  015478  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31865  01547E  0EF7               	movlw	-9
 31866  015480  0060  F033  FFE3   	movff	btemp+11,plusw1
 31867  015486                     l8610:
 31868                           
 31869                           ;stkvar	_bexp @ sp[(-4)+1]
 31870                           ;stkvar	_aexp @ sp[(-4)+2]
 31871  015486  50E1               	movf	fsr1l,w,c
 31872  015488  0FFE               	addlw	-2
 31873  01548A  6ED9               	movwf	fsr2l,c
 31874  01548C  50E2               	movf	fsr1h,w,c
 31875  01548E  6EDA               	movwf	fsr2h,c
 31876  015490  0EFF               	movlw	255
 31877  015492  22DA               	addwfc	fsr2h,f,c
 31878  015494  0EFD               	movlw	-3
 31879  015496  50E3               	movf	plusw1,w,c
 31880  015498  5CDE               	subwf	postinc2,w,c
 31881  01549A  B0D8               	btfsc	status,0,c
 31882  01549C  D0A4               	goto	l8646
 31883                           
 31884                           ;stkvar	_signs @ sp[(-4)+3]
 31885  01549E  0EFF               	movlw	-1
 31886  0154A0  ACE3               	btfss	plusw1,6,c
 31887  0154A2  D002               	goto	l8616
 31888                           
 31889                           ;stkvar	_signs @ sp[(-4)+3]
 31890  0154A4  0EFF               	movlw	-1
 31891  0154A6  7EE3               	btg	plusw1,7,c
 31892  0154A8                     l8616:
 31893                           
 31894                           ;stkvar	_bexp @ sp[(-4)+1]
 31895                           ;stkvar	_grs @ sp[(-4)+0]
 31896  0154A8  0EFD               	movlw	-3
 31897  0154AA  006F FF8C  F001    	movff	plusw1,btemp
 31898  0154B0  0EFC               	movlw	-4
 31899  0154B2  0060  F007  FFE3   	movff	btemp,plusw1
 31900                           
 31901                           ;stkvar	_aexp @ sp[(-4)+2]
 31902                           ;stkvar	_bexp @ sp[(-4)+1]
 31903  0154B8  0EFE               	movlw	-2
 31904  0154BA  006F FF8C  F001    	movff	plusw1,btemp
 31905  0154C0  0EFD               	movlw	-3
 31906  0154C2  0060  F007  FFE3   	movff	btemp,plusw1
 31907                           
 31908                           ;stkvar	_grs @ sp[(-4)+0]
 31909                           ;stkvar	_aexp @ sp[(-4)+2]
 31910  0154C8  0EFC               	movlw	-4
 31911  0154CA  006F FF8C  F001    	movff	plusw1,btemp
 31912  0154D0  0EFE               	movlw	-2
 31913  0154D2  0060  F007  FFE3   	movff	btemp,plusw1
 31914                           
 31915                           ;stkvar	_b @ sp[(-4)+-4]
 31916                           ;stkvar	_grs @ sp[(-4)+0]
 31917  0154D8  0EF8               	movlw	-8
 31918  0154DA  006F FF8C  F001    	movff	plusw1,btemp
 31919  0154E0  0EFC               	movlw	-4
 31920  0154E2  0060  F007  FFE3   	movff	btemp,plusw1
 31921                           
 31922                           ;stkvar	_a @ sp[(-4)+-8]
 31923                           ;stkvar	_b @ sp[(-4)+-4]
 31924  0154E8  0EF4               	movlw	-12
 31925  0154EA  006F FF8C  F001    	movff	plusw1,btemp
 31926  0154F0  0EF8               	movlw	-8
 31927  0154F2  0060  F007  FFE3   	movff	btemp,plusw1
 31928                           
 31929                           ;stkvar	_grs @ sp[(-4)+0]
 31930                           ;stkvar	_a @ sp[(-4)+-8]
 31931  0154F8  0EFC               	movlw	-4
 31932  0154FA  006F FF8C  F001    	movff	plusw1,btemp
 31933  015500  0EF4               	movlw	-12
 31934  015502  0060  F007  FFE3   	movff	btemp,plusw1
 31935                           
 31936                           ;stkvar	_b @ sp[(-4)+-4]
 31937  015508  0EF9               	movlw	249
 31938  01550A  24E1               	addwf	fsr1l,w,c
 31939  01550C  6ED9               	movwf	fsr2l,c
 31940  01550E  0EFF               	movlw	255
 31941  015510  20E2               	addwfc	fsr1h,w,c
 31942  015512  6EDA               	movwf	fsr2h,c
 31943  015514  50DF               	movf	indf2,w,c
 31944  015516  6E0C               	movwf	(btemp+11)^0,c
 31945                           
 31946                           ;stkvar	_grs @ sp[(-4)+0]
 31947  015518  0EFC               	movlw	-4
 31948  01551A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31949                           
 31950                           ;stkvar	_a @ sp[(-4)+-8]
 31951  015520  0EF5               	movlw	245
 31952  015522  24E1               	addwf	fsr1l,w,c
 31953  015524  6ED9               	movwf	fsr2l,c
 31954  015526  0EFF               	movlw	255
 31955  015528  20E2               	addwfc	fsr1h,w,c
 31956  01552A  6EDA               	movwf	fsr2h,c
 31957                           
 31958                           ;stkvar	_b @ sp[(-4)+-4]
 31959  01552C  0EF9               	movlw	249
 31960  01552E  24E1               	addwf	fsr1l,w,c
 31961  015530  6EE9               	movwf	fsr0l,c
 31962  015532  0EFF               	movlw	255
 31963  015534  20E2               	addwfc	fsr1h,w,c
 31964  015536  6EEA               	movwf	fsr0h,c
 31965  015538  006F FF7F FFEF     	movff	indf2,indf0
 31966                           
 31967                           ;stkvar	_grs @ sp[(-4)+0]
 31968                           ;stkvar	_a @ sp[(-4)+-8]
 31969  01553E  0EF5               	movlw	245
 31970  015540  24E1               	addwf	fsr1l,w,c
 31971  015542  6ED9               	movwf	fsr2l,c
 31972  015544  0EFF               	movlw	255
 31973  015546  20E2               	addwfc	fsr1h,w,c
 31974  015548  6EDA               	movwf	fsr2h,c
 31975  01554A  0EFC               	movlw	-4
 31976  01554C  006F FF8F FFDF     	movff	plusw1,indf2
 31977                           
 31978                           ;stkvar	_b @ sp[(-4)+-4]
 31979  015552  0EFA               	movlw	250
 31980  015554  24E1               	addwf	fsr1l,w,c
 31981  015556  6ED9               	movwf	fsr2l,c
 31982  015558  0EFF               	movlw	255
 31983  01555A  20E2               	addwfc	fsr1h,w,c
 31984  01555C  6EDA               	movwf	fsr2h,c
 31985  01555E  50DF               	movf	indf2,w,c
 31986  015560  6E0C               	movwf	(btemp+11)^0,c
 31987                           
 31988                           ;stkvar	_grs @ sp[(-4)+0]
 31989  015562  0EFC               	movlw	-4
 31990  015564  0060  F033  FFE3   	movff	btemp+11,plusw1
 31991                           
 31992                           ;stkvar	_a @ sp[(-4)+-8]
 31993  01556A  0EF6               	movlw	246
 31994  01556C  24E1               	addwf	fsr1l,w,c
 31995  01556E  6ED9               	movwf	fsr2l,c
 31996  015570  0EFF               	movlw	255
 31997  015572  20E2               	addwfc	fsr1h,w,c
 31998  015574  6EDA               	movwf	fsr2h,c
 31999                           
 32000                           ;stkvar	_b @ sp[(-4)+-4]
 32001  015576  0EFA               	movlw	250
 32002  015578  24E1               	addwf	fsr1l,w,c
 32003  01557A  6EE9               	movwf	fsr0l,c
 32004  01557C  0EFF               	movlw	255
 32005  01557E  20E2               	addwfc	fsr1h,w,c
 32006  015580  6EEA               	movwf	fsr0h,c
 32007  015582  006F FF7F FFEF     	movff	indf2,indf0
 32008                           
 32009                           ;stkvar	_grs @ sp[(-4)+0]
 32010                           ;stkvar	_a @ sp[(-4)+-8]
 32011  015588  0EF6               	movlw	246
 32012  01558A  24E1               	addwf	fsr1l,w,c
 32013  01558C  6ED9               	movwf	fsr2l,c
 32014  01558E  0EFF               	movlw	255
 32015  015590  20E2               	addwfc	fsr1h,w,c
 32016  015592  6EDA               	movwf	fsr2h,c
 32017  015594  0EFC               	movlw	-4
 32018  015596  006F FF8F FFDF     	movff	plusw1,indf2
 32019                           
 32020                           ;stkvar	_b @ sp[(-4)+-4]
 32021  01559C  0EFB               	movlw	251
 32022  01559E  24E1               	addwf	fsr1l,w,c
 32023  0155A0  6ED9               	movwf	fsr2l,c
 32024  0155A2  0EFF               	movlw	255
 32025  0155A4  20E2               	addwfc	fsr1h,w,c
 32026  0155A6  6EDA               	movwf	fsr2h,c
 32027  0155A8  50DF               	movf	indf2,w,c
 32028  0155AA  6E0C               	movwf	(btemp+11)^0,c
 32029                           
 32030                           ;stkvar	_grs @ sp[(-4)+0]
 32031  0155AC  0EFC               	movlw	-4
 32032  0155AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 32033                           
 32034                           ;stkvar	_a @ sp[(-4)+-8]
 32035  0155B4  0EF7               	movlw	247
 32036  0155B6  24E1               	addwf	fsr1l,w,c
 32037  0155B8  6ED9               	movwf	fsr2l,c
 32038  0155BA  0EFF               	movlw	255
 32039  0155BC  20E2               	addwfc	fsr1h,w,c
 32040  0155BE  6EDA               	movwf	fsr2h,c
 32041                           
 32042                           ;stkvar	_b @ sp[(-4)+-4]
 32043  0155C0  0EFB               	movlw	251
 32044  0155C2  24E1               	addwf	fsr1l,w,c
 32045  0155C4  6EE9               	movwf	fsr0l,c
 32046  0155C6  0EFF               	movlw	255
 32047  0155C8  20E2               	addwfc	fsr1h,w,c
 32048  0155CA  6EEA               	movwf	fsr0h,c
 32049  0155CC  006F FF7F FFEF     	movff	indf2,indf0
 32050                           
 32051                           ;stkvar	_grs @ sp[(-4)+0]
 32052                           ;stkvar	_a @ sp[(-4)+-8]
 32053  0155D2  0EF7               	movlw	247
 32054  0155D4  24E1               	addwf	fsr1l,w,c
 32055  0155D6  6ED9               	movwf	fsr2l,c
 32056  0155D8  0EFF               	movlw	255
 32057  0155DA  20E2               	addwfc	fsr1h,w,c
 32058  0155DC  6EDA               	movwf	fsr2h,c
 32059  0155DE  0EFC               	movlw	-4
 32060  0155E0  006F FF8F FFDF     	movff	plusw1,indf2
 32061  0155E6                     l8646:
 32062                           
 32063                           ;stkvar	_grs @ sp[(-4)+0]
 32064  0155E6  0EFC               	movlw	-4
 32065  0155E8  6AE3               	clrf	plusw1,c
 32066                           
 32067                           ;stkvar	_aexp @ sp[(-4)+2]
 32068  0155EA  0EFE               	movlw	-2
 32069  0155EC  50E3               	movf	plusw1,w,c
 32070  0155EE  6E0B               	movwf	(btemp+10)^0,c
 32071  0155F0  6A0C               	clrf	(btemp+11)^0,c
 32072                           
 32073                           ;stkvar	_bexp @ sp[(-4)+1]
 32074  0155F2  0EFD               	movlw	-3
 32075  0155F4  50E3               	movf	plusw1,w,c
 32076  0155F6  5E0B               	subwf	(btemp+10)^0,f,c
 32077  0155F8  0E00               	movlw	0
 32078  0155FA  5A0C               	subwfb	(btemp+11)^0,f,c
 32079  0155FC  BE0C               	btfsc	(btemp+11)^0,7,c
 32080  0155FE  D062               	goto	l8670
 32081  015600  500C               	movf	(btemp+11)^0,w,c
 32082  015602  E104               	bnz	u6140
 32083  015604  0E1A               	movlw	26
 32084  015606  5C0B               	subwf	(btemp+10)^0,w,c
 32085  015608  A0D8               	btfss	status,0,c
 32086  01560A  D05C               	goto	l8670
 32087  01560C                     u6140:
 32088                           
 32089                           ;stkvar	_b @ sp[(-4)+-4]
 32090  01560C  0EF8               	movlw	-8
 32091  01560E  50E3               	movf	plusw1,w,c
 32092  015610  E10A               	bnz	u6151
 32093  015612  0EF9               	movlw	-7
 32094  015614  50E3               	movf	plusw1,w,c
 32095  015616  E107               	bnz	u6151
 32096  015618  0EFA               	movlw	-6
 32097  01561A  50E3               	movf	plusw1,w,c
 32098  01561C  E104               	bnz	u6151
 32099  01561E  0EFB               	movlw	-5
 32100  015620  50E3               	movf	plusw1,w,c
 32101  015622  B4D8               	btfsc	status,2,c
 32102  015624  D003               	goto	u6150
 32103  015626                     u6151:
 32104  015626  6A0C               	clrf	(btemp+11)^0,c
 32105  015628  2A0C               	incf	(btemp+11)^0,f,c
 32106  01562A  D001               	goto	u6168
 32107  01562C                     u6150:
 32108  01562C  6A0C               	clrf	(btemp+11)^0,c
 32109  01562E                     u6168:
 32110                           
 32111                           ;stkvar	_grs @ sp[(-4)+0]
 32112  01562E  0EFC               	movlw	-4
 32113  015630  0060  F033  FFE3   	movff	btemp+11,plusw1
 32114                           
 32115                           ;stkvar	_b @ sp[(-4)+-4]
 32116  015636  0EF8               	movlw	-8
 32117  015638  6AE3               	clrf	plusw1,c
 32118  01563A  0EF9               	movlw	-7
 32119  01563C  6AE3               	clrf	plusw1,c
 32120  01563E  0EFA               	movlw	-6
 32121  015640  6AE3               	clrf	plusw1,c
 32122  015642  0EFB               	movlw	-5
 32123  015644  6AE3               	clrf	plusw1,c
 32124                           
 32125                           ;stkvar	_aexp @ sp[(-4)+2]
 32126                           ;stkvar	_bexp @ sp[(-4)+1]
 32127  015646  0EFE               	movlw	-2
 32128  015648  006F FF8C  F001    	movff	plusw1,btemp
 32129  01564E  0EFD               	movlw	-3
 32130  015650  0060  F007  FFE3   	movff	btemp,plusw1
 32131  015656  D042               	goto	u6200
 32132  015658                     l8656:
 32133                           
 32134                           ;stkvar	_grs @ sp[(-4)+0]
 32135  015658  0EFC               	movlw	-4
 32136  01565A  A0E3               	btfss	plusw1,0,c
 32137  01565C  D00D               	goto	l8660
 32138                           
 32139                           ;stkvar	_grs @ sp[(-4)+0]
 32140  01565E  0EFC               	movlw	-4
 32141  015660  006F FF8C  F00C    	movff	plusw1,btemp+11
 32142  015666  90D8               	bcf	status,0,c
 32143  015668  320C               	rrcf	(btemp+11)^0,f,c
 32144  01566A  0E01               	movlw	1
 32145  01566C  120C               	iorwf	(btemp+11)^0,f,c
 32146                           
 32147                           ;stkvar	_grs @ sp[(-4)+0]
 32148  01566E  0EFC               	movlw	-4
 32149  015670  0060  F033  FFE3   	movff	btemp+11,plusw1
 32150  015676  D009               	goto	l8662
 32151  015678                     l8660:
 32152                           
 32153                           ;stkvar	_grs @ sp[(-4)+0]
 32154  015678  50E1               	movf	fsr1l,w,c
 32155  01567A  0FFC               	addlw	-4
 32156  01567C  6ED9               	movwf	fsr2l,c
 32157  01567E  50E2               	movf	fsr1h,w,c
 32158  015680  6EDA               	movwf	fsr2h,c
 32159  015682  0EFF               	movlw	255
 32160  015684  22DA               	addwfc	fsr2h,f,c
 32161  015686  90D8               	bcf	status,0,c
 32162  015688  32DF               	rrcf	indf2,f,c
 32163  01568A                     l8662:
 32164                           
 32165                           ;stkvar	_b @ sp[(-4)+-4]
 32166  01568A  0EF8               	movlw	-8
 32167  01568C  A0E3               	btfss	plusw1,0,c
 32168  01568E  D002               	goto	l8666
 32169                           
 32170                           ;stkvar	_grs @ sp[(-4)+0]
 32171  015690  0EFC               	movlw	-4
 32172  015692  8EE3               	bsf	plusw1,7,c
 32173  015694                     l8666:
 32174  015694  0E01               	movlw	1
 32175  015696  6E0C               	movwf	(btemp+11)^0,c
 32176                           
 32177                           ;stkvar	_b @ sp[(-4)+-4]
 32178  015698  50E1               	movf	fsr1l,w,c
 32179  01569A  0FF8               	addlw	-8
 32180  01569C  6ED9               	movwf	fsr2l,c
 32181  01569E  50E2               	movf	fsr1h,w,c
 32182  0156A0  6EDA               	movwf	fsr2h,c
 32183  0156A2  0EFF               	movlw	255
 32184  0156A4  22DA               	addwfc	fsr2h,f,c
 32185  0156A6  280C               	incf	(btemp+11)^0,w,c
 32186  0156A8  52DE               	movf	postinc2,f,c
 32187  0156AA  D008               	goto	u6190
 32188  0156AC                     u6195:
 32189  0156AC  52DE               	movf	postinc2,f,c
 32190  0156AE  90D8               	bcf	status,0,c
 32191  0156B0  BEDC               	btfsc	preinc2,7,c
 32192  0156B2  80D8               	bsf	status,0,c
 32193  0156B4  32DD               	rrcf	postdec2,f,c
 32194  0156B6  32DD               	rrcf	postdec2,f,c
 32195  0156B8  32DD               	rrcf	postdec2,f,c
 32196  0156BA  32DE               	rrcf	postinc2,f,c
 32197  0156BC                     u6190:
 32198  0156BC  2EE8               	decfsz	wreg,f,c
 32199  0156BE  D7F6               	goto	u6195
 32200                           
 32201                           ;stkvar	_bexp @ sp[(-4)+1]
 32202  0156C0  0EFD               	movlw	-3
 32203  0156C2  2AE3               	incf	plusw1,f,c
 32204  0156C4                     l8670:
 32205                           
 32206                           ;stkvar	_aexp @ sp[(-4)+2]
 32207                           ;stkvar	_bexp @ sp[(-4)+1]
 32208  0156C4  50E1               	movf	fsr1l,w,c
 32209  0156C6  0FFD               	addlw	-3
 32210  0156C8  6ED9               	movwf	fsr2l,c
 32211  0156CA  50E2               	movf	fsr1h,w,c
 32212  0156CC  6EDA               	movwf	fsr2h,c
 32213  0156CE  0EFF               	movlw	255
 32214  0156D0  22DA               	addwfc	fsr2h,f,c
 32215  0156D2  0EFE               	movlw	-2
 32216  0156D4  50E3               	movf	plusw1,w,c
 32217  0156D6  5CDE               	subwf	postinc2,w,c
 32218  0156D8  A0D8               	btfss	status,0,c
 32219  0156DA  D7BE               	goto	l8656
 32220  0156DC                     u6200:
 32221                           
 32222                           ;stkvar	_signs @ sp[(-4)+3]
 32223  0156DC  0EFF               	movlw	-1
 32224  0156DE  BCE3               	btfsc	plusw1,6,c
 32225  0156E0  D066               	goto	l8698
 32226                           
 32227                           ;stkvar	_bexp @ sp[(-4)+1]
 32228  0156E2  0EFD               	movlw	-3
 32229  0156E4  50E3               	movf	plusw1,w,c
 32230  0156E6  B4D8               	btfsc	status,2,c
 32231  0156E8  D0F2               	goto	u6300
 32232                           
 32233                           ;stkvar	_a @ sp[(-4)+-8]
 32234                           ;stkvar	_b @ sp[(-4)+-4]
 32235  0156EA  0EF8               	movlw	-8
 32236  0156EC  50E3               	movf	plusw1,w,c
 32237  0156EE  6E01               	movwf	btemp^0,c
 32238  0156F0  0EF4               	movlw	-12
 32239  0156F2  50E3               	movf	plusw1,w,c
 32240  0156F4  2601               	addwf	btemp^0,f,c
 32241  0156F6  0EF8               	movlw	-8
 32242  0156F8  0060  F007  FFE3   	movff	btemp,plusw1
 32243  0156FE  0EF9               	movlw	-7
 32244  015700  50E3               	movf	plusw1,w,c
 32245  015702  6E01               	movwf	btemp^0,c
 32246  015704  0EF5               	movlw	-11
 32247  015706  50E3               	movf	plusw1,w,c
 32248  015708  2201               	addwfc	btemp^0,f,c
 32249  01570A  0EF9               	movlw	-7
 32250  01570C  0060  F007  FFE3   	movff	btemp,plusw1
 32251  015712  0EFA               	movlw	-6
 32252  015714  50E3               	movf	plusw1,w,c
 32253  015716  6E01               	movwf	btemp^0,c
 32254  015718  0EF6               	movlw	-10
 32255  01571A  50E3               	movf	plusw1,w,c
 32256  01571C  2201               	addwfc	btemp^0,f,c
 32257  01571E  0EFA               	movlw	-6
 32258  015720  0060  F007  FFE3   	movff	btemp,plusw1
 32259  015726  0EFB               	movlw	-5
 32260  015728  50E3               	movf	plusw1,w,c
 32261  01572A  6E01               	movwf	btemp^0,c
 32262  01572C  0EF7               	movlw	-9
 32263  01572E  50E3               	movf	plusw1,w,c
 32264  015730  2201               	addwfc	btemp^0,f,c
 32265  015732  0EFB               	movlw	-5
 32266  015734  0060  F007  FFE3   	movff	btemp,plusw1
 32267                           
 32268                           ;stkvar	_b @ sp[(-4)+-4]
 32269  01573A  0EFB               	movlw	-5
 32270  01573C  A0E3               	btfss	plusw1,0,c
 32271  01573E  D101               	goto	u6340
 32272                           
 32273                           ;stkvar	_grs @ sp[(-4)+0]
 32274  015740  0EFC               	movlw	-4
 32275  015742  A0E3               	btfss	plusw1,0,c
 32276  015744  D00D               	goto	l8688
 32277                           
 32278                           ;stkvar	_grs @ sp[(-4)+0]
 32279  015746  0EFC               	movlw	-4
 32280  015748  006F FF8C  F00C    	movff	plusw1,btemp+11
 32281  01574E  90D8               	bcf	status,0,c
 32282  015750  320C               	rrcf	(btemp+11)^0,f,c
 32283  015752  0E01               	movlw	1
 32284  015754  120C               	iorwf	(btemp+11)^0,f,c
 32285                           
 32286                           ;stkvar	_grs @ sp[(-4)+0]
 32287  015756  0EFC               	movlw	-4
 32288  015758  0060  F033  FFE3   	movff	btemp+11,plusw1
 32289  01575E  D009               	goto	l8690
 32290  015760                     l8688:
 32291                           
 32292                           ;stkvar	_grs @ sp[(-4)+0]
 32293  015760  50E1               	movf	fsr1l,w,c
 32294  015762  0FFC               	addlw	-4
 32295  015764  6ED9               	movwf	fsr2l,c
 32296  015766  50E2               	movf	fsr1h,w,c
 32297  015768  6EDA               	movwf	fsr2h,c
 32298  01576A  0EFF               	movlw	255
 32299  01576C  22DA               	addwfc	fsr2h,f,c
 32300  01576E  90D8               	bcf	status,0,c
 32301  015770  32DF               	rrcf	indf2,f,c
 32302  015772                     l8690:
 32303                           
 32304                           ;stkvar	_b @ sp[(-4)+-4]
 32305  015772  0EF8               	movlw	-8
 32306  015774  A0E3               	btfss	plusw1,0,c
 32307  015776  D002               	goto	l8694
 32308                           
 32309                           ;stkvar	_grs @ sp[(-4)+0]
 32310  015778  0EFC               	movlw	-4
 32311  01577A  8EE3               	bsf	plusw1,7,c
 32312  01577C                     l8694:
 32313  01577C  0E01               	movlw	1
 32314  01577E  6E0C               	movwf	(btemp+11)^0,c
 32315                           
 32316                           ;stkvar	_b @ sp[(-4)+-4]
 32317  015780  50E1               	movf	fsr1l,w,c
 32318  015782  0FF8               	addlw	-8
 32319  015784  6ED9               	movwf	fsr2l,c
 32320  015786  50E2               	movf	fsr1h,w,c
 32321  015788  6EDA               	movwf	fsr2h,c
 32322  01578A  0EFF               	movlw	255
 32323  01578C  22DA               	addwfc	fsr2h,f,c
 32324  01578E  280C               	incf	(btemp+11)^0,w,c
 32325  015790  52DE               	movf	postinc2,f,c
 32326  015792  D008               	goto	u6260
 32327  015794                     u6265:
 32328  015794  52DE               	movf	postinc2,f,c
 32329  015796  90D8               	bcf	status,0,c
 32330  015798  BEDC               	btfsc	preinc2,7,c
 32331  01579A  80D8               	bsf	status,0,c
 32332  01579C  32DD               	rrcf	postdec2,f,c
 32333  01579E  32DD               	rrcf	postdec2,f,c
 32334  0157A0  32DD               	rrcf	postdec2,f,c
 32335  0157A2  32DE               	rrcf	postinc2,f,c
 32336  0157A4                     u6260:
 32337  0157A4  2EE8               	decfsz	wreg,f,c
 32338  0157A6  D7F6               	goto	u6265
 32339                           
 32340                           ;stkvar	_bexp @ sp[(-4)+1]
 32341  0157A8  0EFD               	movlw	-3
 32342  0157AA  2AE3               	incf	plusw1,f,c
 32343  0157AC  D0CA               	goto	u6340
 32344  0157AE                     l8698:
 32345                           
 32346                           ;stkvar	_a @ sp[(-4)+-8]
 32347                           ;stkvar	_b @ sp[(-4)+-4]
 32348  0157AE  50E1               	movf	fsr1l,w,c
 32349  0157B0  0FF8               	addlw	-8
 32350  0157B2  6ED9               	movwf	fsr2l,c
 32351  0157B4  50E2               	movf	fsr1h,w,c
 32352  0157B6  6EDA               	movwf	fsr2h,c
 32353  0157B8  0EFF               	movlw	255
 32354  0157BA  22DA               	addwfc	fsr2h,f,c
 32355  0157BC  0EF4               	movlw	-12
 32356  0157BE  50E3               	movf	plusw1,w,c
 32357  0157C0  5CDE               	subwf	postinc2,w,c
 32358  0157C2  0EF5               	movlw	-11
 32359  0157C4  50E3               	movf	plusw1,w,c
 32360  0157C6  58DE               	subwfb	postinc2,w,c
 32361  0157C8  0EF6               	movlw	-10
 32362  0157CA  50E3               	movf	plusw1,w,c
 32363  0157CC  58DE               	subwfb	postinc2,w,c
 32364  0157CE  50DE               	movf	postinc2,w,c
 32365  0157D0  0A80               	xorlw	128
 32366  0157D2  6E01               	movwf	btemp^0,c
 32367  0157D4  0EF7               	movlw	-9
 32368  0157D6  50E3               	movf	plusw1,w,c
 32369  0157D8  0A80               	xorlw	128
 32370  0157DA  5801               	subwfb	btemp^0,w,c
 32371  0157DC  B0D8               	btfsc	status,0,c
 32372  0157DE  D053               	goto	l8710
 32373                           
 32374                           ;stkvar	_b @ sp[(-4)+-4]
 32375                           ;stkvar	_a @ sp[(-4)+-8]
 32376  0157E0  0EF4               	movlw	-12
 32377  0157E2  006F FF8C  F009    	movff	plusw1,btemp+8
 32378  0157E8  0EF5               	movlw	-11
 32379  0157EA  006F FF8C  F00A    	movff	plusw1,btemp+9
 32380  0157F0  0EF6               	movlw	-10
 32381  0157F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 32382  0157F8  0EF7               	movlw	-9
 32383  0157FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 32384  015800  0EF8               	movlw	-8
 32385  015802  50E3               	movf	plusw1,w,c
 32386  015804  5E09               	subwf	(btemp+8)^0,f,c
 32387  015806  0EF9               	movlw	-7
 32388  015808  50E3               	movf	plusw1,w,c
 32389  01580A  5A0A               	subwfb	(btemp+9)^0,f,c
 32390  01580C  0EFA               	movlw	-6
 32391  01580E  50E3               	movf	plusw1,w,c
 32392  015810  5A0B               	subwfb	(btemp+10)^0,f,c
 32393  015812  0EFB               	movlw	-5
 32394  015814  50E3               	movf	plusw1,w,c
 32395  015816  5A0C               	subwfb	(btemp+11)^0,f,c
 32396  015818  0EFF               	movlw	255
 32397  01581A  2409               	addwf	(btemp+8)^0,w,c
 32398  01581C  6E05               	movwf	(btemp+4)^0,c
 32399  01581E  0EFF               	movlw	255
 32400  015820  200A               	addwfc	(btemp+9)^0,w,c
 32401  015822  6E06               	movwf	(btemp+5)^0,c
 32402  015824  0EFF               	movlw	255
 32403  015826  200B               	addwfc	(btemp+10)^0,w,c
 32404  015828  6E07               	movwf	(btemp+6)^0,c
 32405  01582A  0EFF               	movlw	255
 32406  01582C  200C               	addwfc	(btemp+11)^0,w,c
 32407  01582E  6E08               	movwf	(btemp+7)^0,c
 32408                           
 32409                           ;stkvar	_b @ sp[(-4)+-4]
 32410  015830  0EF8               	movlw	-8
 32411  015832  0060  F017  FFE3   	movff	btemp+4,plusw1
 32412  015838  0EF9               	movlw	-7
 32413  01583A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32414  015840  0EFA               	movlw	-6
 32415  015842  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32416  015848  0EFB               	movlw	-5
 32417  01584A  0060  F023  FFE3   	movff	btemp+7,plusw1
 32418                           
 32419                           ;stkvar	_signs @ sp[(-4)+3]
 32420  015850  0EFF               	movlw	-1
 32421  015852  7EE3               	btg	plusw1,7,c
 32422                           
 32423                           ;stkvar	_grs @ sp[(-4)+0]
 32424  015854  0EFC               	movlw	-4
 32425  015856  50E3               	movf	plusw1,w,c
 32426  015858  0800               	sublw	0
 32427  01585A  6E0C               	movwf	(btemp+11)^0,c
 32428                           
 32429                           ;stkvar	_grs @ sp[(-4)+0]
 32430  01585C  0EFC               	movlw	-4
 32431  01585E  0060  F033  FFE3   	movff	btemp+11,plusw1
 32432                           
 32433                           ;stkvar	_grs @ sp[(-4)+0]
 32434  015864  0EFC               	movlw	-4
 32435  015866  50E3               	movf	plusw1,w,c
 32436  015868  A4D8               	btfss	status,2,c
 32437  01586A  D020               	goto	l8712
 32438                           
 32439                           ;stkvar	_b @ sp[(-4)+-4]
 32440  01586C  50E1               	movf	fsr1l,w,c
 32441  01586E  0FF8               	addlw	-8
 32442  015870  6ED9               	movwf	fsr2l,c
 32443  015872  50E2               	movf	fsr1h,w,c
 32444  015874  6EDA               	movwf	fsr2h,c
 32445  015876  0EFF               	movlw	255
 32446  015878  22DA               	addwfc	fsr2h,f,c
 32447  01587A  2ADE               	incf	postinc2,f,c
 32448  01587C  0E00               	movlw	0
 32449  01587E  22DE               	addwfc	postinc2,f,c
 32450  015880  22DE               	addwfc	postinc2,f,c
 32451  015882  22DE               	addwfc	postinc2,f,c
 32452  015884  D013               	goto	l8712
 32453  015886                     l8710:
 32454                           
 32455                           ;stkvar	_a @ sp[(-4)+-8]
 32456                           ;stkvar	_b @ sp[(-4)+-4]
 32457  015886  50E1               	movf	fsr1l,w,c
 32458  015888  0FF8               	addlw	-8
 32459  01588A  6ED9               	movwf	fsr2l,c
 32460  01588C  50E2               	movf	fsr1h,w,c
 32461  01588E  6EDA               	movwf	fsr2h,c
 32462  015890  0EFF               	movlw	255
 32463  015892  22DA               	addwfc	fsr2h,f,c
 32464  015894  0EF4               	movlw	-12
 32465  015896  50E3               	movf	plusw1,w,c
 32466  015898  5EDE               	subwf	postinc2,f,c
 32467  01589A  0EF5               	movlw	-11
 32468  01589C  50E3               	movf	plusw1,w,c
 32469  01589E  5ADE               	subwfb	postinc2,f,c
 32470  0158A0  0EF6               	movlw	-10
 32471  0158A2  50E3               	movf	plusw1,w,c
 32472  0158A4  5ADE               	subwfb	postinc2,f,c
 32473  0158A6  0EF7               	movlw	-9
 32474  0158A8  50E3               	movf	plusw1,w,c
 32475  0158AA  5ADE               	subwfb	postinc2,f,c
 32476  0158AC                     l8712:
 32477                           
 32478                           ;stkvar	_b @ sp[(-4)+-4]
 32479  0158AC  0EF8               	movlw	-8
 32480  0158AE  50E3               	movf	plusw1,w,c
 32481  0158B0  E145               	bnz	l8734
 32482  0158B2  0EF9               	movlw	-7
 32483  0158B4  50E3               	movf	plusw1,w,c
 32484  0158B6  E142               	bnz	l8734
 32485  0158B8  0EFA               	movlw	-6
 32486  0158BA  50E3               	movf	plusw1,w,c
 32487  0158BC  E13F               	bnz	l8734
 32488  0158BE  0EFB               	movlw	-5
 32489  0158C0  50E3               	movf	plusw1,w,c
 32490  0158C2  A4D8               	btfss	status,2,c
 32491  0158C4  D03B               	goto	l8734
 32492                           
 32493                           ;stkvar	_grs @ sp[(-4)+0]
 32494  0158C6  0EFC               	movlw	-4
 32495  0158C8  50E3               	movf	plusw1,w,c
 32496  0158CA  A4D8               	btfss	status,2,c
 32497  0158CC  D037               	goto	l8734
 32498  0158CE                     u6300:
 32499  0158CE  0E00               	movlw	0
 32500  0158D0  6E01               	movwf	btemp^0,c
 32501  0158D2  0E00               	movlw	0
 32502  0158D4  6E02               	movwf	(btemp+1)^0,c
 32503  0158D6  0E00               	movlw	0
 32504  0158D8  6E03               	movwf	(btemp+2)^0,c
 32505  0158DA  0E00               	movlw	0
 32506  0158DC  6E04               	movwf	(btemp+3)^0,c
 32507  0158DE  D0C6               	goto	l3210
 32508  0158E0                     l8720:
 32509                           
 32510                           ;stkvar	_b @ sp[(-4)+-4]
 32511  0158E0  90D8               	bcf	status,0,c
 32512  0158E2  0EF8               	movlw	-8
 32513  0158E4  36E3               	rlcf	plusw1,f,c
 32514  0158E6  0EF9               	movlw	-7
 32515  0158E8  36E3               	rlcf	plusw1,f,c
 32516  0158EA  0EFA               	movlw	-6
 32517  0158EC  36E3               	rlcf	plusw1,f,c
 32518  0158EE  0EFB               	movlw	-5
 32519  0158F0  36E3               	rlcf	plusw1,f,c
 32520                           
 32521                           ;stkvar	_grs @ sp[(-4)+0]
 32522  0158F2  0EFC               	movlw	-4
 32523  0158F4  AEE3               	btfss	plusw1,7,c
 32524  0158F6  D002               	goto	l3222
 32525                           
 32526                           ;stkvar	_b @ sp[(-4)+-4]
 32527  0158F8  0EF8               	movlw	-8
 32528  0158FA  80E3               	bsf	plusw1,0,c
 32529  0158FC                     l3222:
 32530                           
 32531                           ;stkvar	_grs @ sp[(-4)+0]
 32532  0158FC  0EFC               	movlw	-4
 32533  0158FE  A0E3               	btfss	plusw1,0,c
 32534  015900  D00E               	goto	l8728
 32535                           
 32536                           ;stkvar	_grs @ sp[(-4)+0]
 32537  015902  0EFC               	movlw	-4
 32538  015904  006F FF8C  F00C    	movff	plusw1,btemp+11
 32539  01590A  90D8               	bcf	status,0,c
 32540  01590C  340C               	rlcf	(btemp+11)^0,w,c
 32541  01590E  6E0B               	movwf	(btemp+10)^0,c
 32542  015910  0E01               	movlw	1
 32543  015912  120B               	iorwf	(btemp+10)^0,f,c
 32544                           
 32545                           ;stkvar	_grs @ sp[(-4)+0]
 32546  015914  0EFC               	movlw	-4
 32547  015916  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32548  01591C  D009               	goto	l8730
 32549  01591E                     l8728:
 32550                           
 32551                           ;stkvar	_grs @ sp[(-4)+0]
 32552  01591E  50E1               	movf	fsr1l,w,c
 32553  015920  0FFC               	addlw	-4
 32554  015922  6ED9               	movwf	fsr2l,c
 32555  015924  50E2               	movf	fsr1h,w,c
 32556  015926  6EDA               	movwf	fsr2h,c
 32557  015928  0EFF               	movlw	255
 32558  01592A  22DA               	addwfc	fsr2h,f,c
 32559  01592C  90D8               	bcf	status,0,c
 32560  01592E  36DF               	rlcf	indf2,f,c
 32561  015930                     l8730:
 32562                           
 32563                           ;stkvar	_bexp @ sp[(-4)+1]
 32564  015930  0EFD               	movlw	-3
 32565  015932  50E3               	movf	plusw1,w,c
 32566  015934  B4D8               	btfsc	status,2,c
 32567  015936  D002               	goto	l8734
 32568                           
 32569                           ;stkvar	_bexp @ sp[(-4)+1]
 32570  015938  0EFD               	movlw	-3
 32571  01593A  06E3               	decf	plusw1,f,c
 32572  01593C                     l8734:
 32573                           
 32574                           ;stkvar	_b @ sp[(-4)+-4]
 32575  01593C  0EFA               	movlw	-6
 32576  01593E  AEE3               	btfss	plusw1,7,c
 32577  015940  D7CF               	goto	l8720
 32578  015942                     u6340:
 32579                           
 32580                           ;stkvar	_aexp @ sp[(-4)+2]
 32581  015942  0EFE               	movlw	-2
 32582  015944  6AE3               	clrf	plusw1,c
 32583                           
 32584                           ;stkvar	_grs @ sp[(-4)+0]
 32585  015946  0EFC               	movlw	-4
 32586  015948  AEE3               	btfss	plusw1,7,c
 32587  01594A  D00F               	goto	l8748
 32588                           
 32589                           ;stkvar	_grs @ sp[(-4)+0]
 32590  01594C  0EFC               	movlw	-4
 32591  01594E  006F FF8C  F00C    	movff	plusw1,btemp+11
 32592  015954  0E7F               	movlw	127
 32593  015956  160C               	andwf	(btemp+11)^0,f,c
 32594  015958  B4D8               	btfsc	status,2,c
 32595  01595A  D004               	goto	l8744
 32596  01595C                     u6360:
 32597                           
 32598                           ;stkvar	_aexp @ sp[(-4)+2]
 32599  01595C  0EFE               	movlw	-2
 32600  01595E  6AE3               	clrf	plusw1,c
 32601  015960  2AE3               	incf	plusw1,f,c
 32602  015962  D003               	goto	l8748
 32603  015964                     l8744:
 32604                           
 32605                           ;stkvar	_b @ sp[(-4)+-4]
 32606  015964  0EF8               	movlw	-8
 32607  015966  B0E3               	btfsc	plusw1,0,c
 32608  015968  D7F9               	goto	u6360
 32609  01596A                     l8748:
 32610                           
 32611                           ;stkvar	_aexp @ sp[(-4)+2]
 32612  01596A  0EFE               	movlw	-2
 32613  01596C  50E3               	movf	plusw1,w,c
 32614  01596E  B4D8               	btfsc	status,2,c
 32615  015970  D02B               	goto	l8760
 32616                           
 32617                           ;stkvar	_b @ sp[(-4)+-4]
 32618  015972  50E1               	movf	fsr1l,w,c
 32619  015974  0FF8               	addlw	-8
 32620  015976  6ED9               	movwf	fsr2l,c
 32621  015978  50E2               	movf	fsr1h,w,c
 32622  01597A  6EDA               	movwf	fsr2h,c
 32623  01597C  0EFF               	movlw	255
 32624  01597E  22DA               	addwfc	fsr2h,f,c
 32625  015980  2ADE               	incf	postinc2,f,c
 32626  015982  0E00               	movlw	0
 32627  015984  22DE               	addwfc	postinc2,f,c
 32628  015986  22DE               	addwfc	postinc2,f,c
 32629  015988  22DE               	addwfc	postinc2,f,c
 32630                           
 32631                           ;stkvar	_b @ sp[(-4)+-4]
 32632  01598A  0EFB               	movlw	-5
 32633  01598C  A0E3               	btfss	plusw1,0,c
 32634  01598E  D01C               	goto	l8760
 32635  015990  0E01               	movlw	1
 32636  015992  6E0C               	movwf	(btemp+11)^0,c
 32637                           
 32638                           ;stkvar	_b @ sp[(-4)+-4]
 32639  015994  50E1               	movf	fsr1l,w,c
 32640  015996  0FF8               	addlw	-8
 32641  015998  6ED9               	movwf	fsr2l,c
 32642  01599A  50E2               	movf	fsr1h,w,c
 32643  01599C  6EDA               	movwf	fsr2h,c
 32644  01599E  0EFF               	movlw	255
 32645  0159A0  22DA               	addwfc	fsr2h,f,c
 32646  0159A2  280C               	incf	(btemp+11)^0,w,c
 32647  0159A4  52DE               	movf	postinc2,f,c
 32648  0159A6  D008               	goto	u6400
 32649  0159A8                     u6405:
 32650  0159A8  52DE               	movf	postinc2,f,c
 32651  0159AA  90D8               	bcf	status,0,c
 32652  0159AC  BEDC               	btfsc	preinc2,7,c
 32653  0159AE  80D8               	bsf	status,0,c
 32654  0159B0  32DD               	rrcf	postdec2,f,c
 32655  0159B2  32DD               	rrcf	postdec2,f,c
 32656  0159B4  32DD               	rrcf	postdec2,f,c
 32657  0159B6  32DE               	rrcf	postinc2,f,c
 32658  0159B8                     u6400:
 32659  0159B8  2EE8               	decfsz	wreg,f,c
 32660  0159BA  D7F6               	goto	u6405
 32661                           
 32662                           ;stkvar	_bexp @ sp[(-4)+1]
 32663  0159BC  0EFD               	movlw	-3
 32664  0159BE  28E3               	incf	plusw1,w,c
 32665  0159C0  B4D8               	btfsc	status,2,c
 32666  0159C2  D002               	goto	l8760
 32667                           
 32668                           ;stkvar	_bexp @ sp[(-4)+1]
 32669  0159C4  0EFD               	movlw	-3
 32670  0159C6  2AE3               	incf	plusw1,f,c
 32671  0159C8                     l8760:
 32672                           
 32673                           ;stkvar	_bexp @ sp[(-4)+1]
 32674  0159C8  0EFD               	movlw	-3
 32675  0159CA  28E3               	incf	plusw1,w,c
 32676  0159CC  B4D8               	btfsc	status,2,c
 32677  0159CE  D004               	goto	u6430
 32678                           
 32679                           ;stkvar	_bexp @ sp[(-4)+1]
 32680  0159D0  0EFD               	movlw	-3
 32681  0159D2  50E3               	movf	plusw1,w,c
 32682  0159D4  A4D8               	btfss	status,2,c
 32683  0159D6  D00E               	goto	l8770
 32684  0159D8                     u6430:
 32685                           
 32686                           ;stkvar	_b @ sp[(-4)+-4]
 32687  0159D8  0EF8               	movlw	-8
 32688  0159DA  6AE3               	clrf	plusw1,c
 32689  0159DC  0EF9               	movlw	-7
 32690  0159DE  6AE3               	clrf	plusw1,c
 32691  0159E0  0EFA               	movlw	-6
 32692  0159E2  6AE3               	clrf	plusw1,c
 32693  0159E4  0EFB               	movlw	-5
 32694  0159E6  6AE3               	clrf	plusw1,c
 32695                           
 32696                           ;stkvar	_bexp @ sp[(-4)+1]
 32697  0159E8  0EFD               	movlw	-3
 32698  0159EA  50E3               	movf	plusw1,w,c
 32699  0159EC  A4D8               	btfss	status,2,c
 32700  0159EE  D002               	goto	l8770
 32701                           
 32702                           ;stkvar	_signs @ sp[(-4)+3]
 32703  0159F0  0EFF               	movlw	-1
 32704  0159F2  6AE3               	clrf	plusw1,c
 32705  0159F4                     l8770:
 32706                           
 32707                           ;stkvar	_bexp @ sp[(-4)+1]
 32708  0159F4  0EFD               	movlw	-3
 32709  0159F6  A0E3               	btfss	plusw1,0,c
 32710  0159F8  D009               	goto	l8774
 32711                           
 32712                           ;stkvar	_b @ sp[(-4)+-4]
 32713  0159FA  0EFA               	movlw	250
 32714  0159FC  24E1               	addwf	fsr1l,w,c
 32715  0159FE  6ED9               	movwf	fsr2l,c
 32716  015A00  0EFF               	movlw	255
 32717  015A02  20E2               	addwfc	fsr1h,w,c
 32718  015A04  6EDA               	movwf	fsr2h,c
 32719  015A06  0E00               	movlw	0
 32720  015A08  8EDB               	bsf	plusw2,7,c
 32721  015A0A  D008               	goto	l8776
 32722  015A0C                     l8774:
 32723                           
 32724                           ;stkvar	_b @ sp[(-4)+-4]
 32725  015A0C  0EFA               	movlw	250
 32726  015A0E  24E1               	addwf	fsr1l,w,c
 32727  015A10  6ED9               	movwf	fsr2l,c
 32728  015A12  0EFF               	movlw	255
 32729  015A14  20E2               	addwfc	fsr1h,w,c
 32730  015A16  6EDA               	movwf	fsr2h,c
 32731  015A18  0E7F               	movlw	127
 32732  015A1A  16DF               	andwf	indf2,f,c
 32733  015A1C                     l8776:
 32734                           
 32735                           ;stkvar	_b @ sp[(-4)+-4]
 32736  015A1C  0EFB               	movlw	251
 32737  015A1E  24E1               	addwf	fsr1l,w,c
 32738  015A20  6ED9               	movwf	fsr2l,c
 32739  015A22  0EFF               	movlw	255
 32740  015A24  20E2               	addwfc	fsr1h,w,c
 32741  015A26  6EDA               	movwf	fsr2h,c
 32742                           
 32743                           ;stkvar	_bexp @ sp[(-4)+1]
 32744  015A28  0EFD               	movlw	-3
 32745  015A2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 32746  015A30  90D8               	bcf	status,0,c
 32747  015A32  300C               	rrcf	(btemp+11)^0,w,c
 32748  015A34  6EDF               	movwf	indf2,c
 32749                           
 32750                           ;stkvar	_signs @ sp[(-4)+3]
 32751  015A36  0EFF               	movlw	-1
 32752  015A38  AEE3               	btfss	plusw1,7,c
 32753  015A3A  D008               	goto	l8782
 32754                           
 32755                           ;stkvar	_b @ sp[(-4)+-4]
 32756  015A3C  0EFB               	movlw	251
 32757  015A3E  24E1               	addwf	fsr1l,w,c
 32758  015A40  6ED9               	movwf	fsr2l,c
 32759  015A42  0EFF               	movlw	255
 32760  015A44  20E2               	addwfc	fsr1h,w,c
 32761  015A46  6EDA               	movwf	fsr2h,c
 32762  015A48  0E00               	movlw	0
 32763  015A4A  8EDB               	bsf	plusw2,7,c
 32764  015A4C                     l8782:
 32765                           
 32766                           ;stkvar	_b @ sp[(-4)+-4]
 32767  015A4C  0EF8               	movlw	-8
 32768  015A4E  006F FF8C  F001    	movff	plusw1,btemp
 32769  015A54  0EF9               	movlw	-7
 32770  015A56  006F FF8C  F002    	movff	plusw1,btemp+1
 32771  015A5C  0EFA               	movlw	-6
 32772  015A5E  006F FF8C  F003    	movff	plusw1,btemp+2
 32773  015A64  0EFB               	movlw	-5
 32774  015A66  006F FF8C  F004    	movff	plusw1,btemp+3
 32775  015A6C                     l3210:
 32776                           
 32777                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 32778  015A6C  0EF4               	movlw	244
 32779  015A6E  26E1               	addwf	fsr1l,f,c
 32780  015A70  0EFF               	movlw	255
 32781  015A72  22E2               	addwfc	fsr1h,f,c
 32782  015A74  0012               	return		;funcret
 32783  015A76                     __end_of___fladd:
 32784                           	opt callstack 0
 32785                           
 32786 ;; *************** function ___flmul *****************
 32787 ;; Defined at:
 32788 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 32789 ;; Parameters:    Size  Location     Type
 32790 ;;  b               4  [STACK] unsigned char 
 32791 ;;  a               4  [STACK] unsigned char 
 32792 ;; Auto vars:     Size  Location     Type
 32793 ;;  prod            4  [STACK] struct .
 32794 ;;  grs             4  [STACK] unsigned long 
 32795 ;;  temp            2  [STACK] struct .
 32796 ;;  bexp            1  [STACK] unsigned char 
 32797 ;;  aexp            1  [STACK] unsigned char 
 32798 ;;  sign            1  [STACK] unsigned char 
 32799 ;; Return value:  Size  Location     Type
 32800 ;;                  4  [STACK] unsigned char 
 32801 ;; Registers used:
 32802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32803 ;; Tracked objects:
 32804 ;;		On entry : 0/0
 32805 ;;		On exit  : 0/0
 32806 ;;		Unchanged: 0/0
 32807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32812 ;;Total ram usage:        0 bytes
 32813 ;; Hardware stack levels used:    1
 32814 ;; Hardware stack levels required when called:   15
 32815 ;; This function calls:
 32816 ;;		Nothing
 32817 ;; This function is called by:
 32818 ;;		_conv_raw_result
 32819 ;;		_lp_filter
 32820 ;;		_calc_model_data
 32821 ;;		_calc_bsoc
 32822 ;;		_init_bsoc
 32823 ;;		_efgtoa
 32824 ;; This function uses a reentrant model
 32825 ;;
 32826                           
 32827                           	psect	text128
 32828  014A90                     __ptext128:
 32829                           	opt callstack 0
 32830  014A90                     ___flmul:
 32831                           	opt callstack 0
 32832                           
 32833                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32834  014A90  0E0D               	movlw	13
 32835  014A92  26E1               	addwf	fsr1l,f,c
 32836  014A94  0E00               	movlw	0
 32837  014A96  22E2               	addwfc	fsr1h,f,c
 32838                           
 32839                           ;stkvar	_b @ sp[(-13)+-4]
 32840                           
 32841                           ;incstack = 0
 32842 ;; hardware stack exceeded
 32843  014A98  0EF2               	movlw	242
 32844  014A9A  24E1               	addwf	fsr1l,w,c
 32845  014A9C  6ED9               	movwf	fsr2l,c
 32846  014A9E  0EFF               	movlw	255
 32847  014AA0  20E2               	addwfc	fsr1h,w,c
 32848  014AA2  6EDA               	movwf	fsr2h,c
 32849  014AA4  50DF               	movf	indf2,w,c
 32850  014AA6  6E0C               	movwf	(btemp+11)^0,c
 32851  014AA8  0E80               	movlw	128
 32852  014AAA  160C               	andwf	(btemp+11)^0,f,c
 32853                           
 32854                           ;stkvar	_sign @ sp[(-13)+12]
 32855  014AAC  0EFF               	movlw	-1
 32856  014AAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 32857                           
 32858                           ;stkvar	_b @ sp[(-13)+-4]
 32859  014AB4  0EF2               	movlw	242
 32860  014AB6  24E1               	addwf	fsr1l,w,c
 32861  014AB8  6ED9               	movwf	fsr2l,c
 32862  014ABA  0EFF               	movlw	255
 32863  014ABC  20E2               	addwfc	fsr1h,w,c
 32864  014ABE  6EDA               	movwf	fsr2h,c
 32865  014AC0  50DF               	movf	indf2,w,c
 32866  014AC2  6E0C               	movwf	(btemp+11)^0,c
 32867  014AC4  90D8               	bcf	status,0,c
 32868  014AC6  340C               	rlcf	(btemp+11)^0,w,c
 32869  014AC8  6E0B               	movwf	(btemp+10)^0,c
 32870                           
 32871                           ;stkvar	_bexp @ sp[(-13)+10]
 32872  014ACA  0EFD               	movlw	-3
 32873  014ACC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32874                           
 32875                           ;stkvar	_b @ sp[(-13)+-4]
 32876  014AD2  0EF1               	movlw	241
 32877  014AD4  24E1               	addwf	fsr1l,w,c
 32878  014AD6  6ED9               	movwf	fsr2l,c
 32879  014AD8  0EFF               	movlw	255
 32880  014ADA  20E2               	addwfc	fsr1h,w,c
 32881  014ADC  6EDA               	movwf	fsr2h,c
 32882  014ADE  AEDF               	btfss	indf2,7,c
 32883  014AE0  D002               	goto	l9208
 32884                           
 32885                           ;stkvar	_bexp @ sp[(-13)+10]
 32886  014AE2  0EFD               	movlw	-3
 32887  014AE4  80E3               	bsf	plusw1,0,c
 32888  014AE6                     l9208:
 32889                           
 32890                           ;stkvar	_bexp @ sp[(-13)+10]
 32891  014AE6  0EFD               	movlw	-3
 32892  014AE8  50E3               	movf	plusw1,w,c
 32893  014AEA  B4D8               	btfsc	status,2,c
 32894  014AEC  D01F               	goto	l9216
 32895                           
 32896                           ;stkvar	_bexp @ sp[(-13)+10]
 32897  014AEE  0EFD               	movlw	-3
 32898  014AF0  28E3               	incf	plusw1,w,c
 32899  014AF2  A4D8               	btfss	status,2,c
 32900  014AF4  D018               	goto	l9214
 32901  014AF6  0E00               	movlw	0
 32902  014AF8  6E09               	movwf	(btemp+8)^0,c
 32903  014AFA  0E00               	movlw	0
 32904  014AFC  6E0A               	movwf	(btemp+9)^0,c
 32905  014AFE  0E00               	movlw	0
 32906  014B00  6E0B               	movwf	(btemp+10)^0,c
 32907  014B02  0E00               	movlw	0
 32908  014B04  6E0C               	movwf	(btemp+11)^0,c
 32909                           
 32910                           ;stkvar	_b @ sp[(-13)+-4]
 32911  014B06  0EEF               	movlw	-17
 32912  014B08  0060  F027  FFE3   	movff	btemp+8,plusw1
 32913  014B0E  0EF0               	movlw	-16
 32914  014B10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32915  014B16  0EF1               	movlw	-15
 32916  014B18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32917  014B1E  0EF2               	movlw	-14
 32918  014B20  0060  F033  FFE3   	movff	btemp+11,plusw1
 32919  014B26                     l9214:
 32920                           
 32921                           ;stkvar	_b @ sp[(-13)+-4]
 32922  014B26  0EF1               	movlw	-15
 32923  014B28  8EE3               	bsf	plusw1,7,c
 32924  014B2A  D018               	goto	l9218
 32925  014B2C                     l9216:
 32926  014B2C  0E00               	movlw	0
 32927  014B2E  6E09               	movwf	(btemp+8)^0,c
 32928  014B30  0E00               	movlw	0
 32929  014B32  6E0A               	movwf	(btemp+9)^0,c
 32930  014B34  0E00               	movlw	0
 32931  014B36  6E0B               	movwf	(btemp+10)^0,c
 32932  014B38  0E00               	movlw	0
 32933  014B3A  6E0C               	movwf	(btemp+11)^0,c
 32934                           
 32935                           ;stkvar	_b @ sp[(-13)+-4]
 32936  014B3C  0EEF               	movlw	-17
 32937  014B3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 32938  014B44  0EF0               	movlw	-16
 32939  014B46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32940  014B4C  0EF1               	movlw	-15
 32941  014B4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32942  014B54  0EF2               	movlw	-14
 32943  014B56  0060  F033  FFE3   	movff	btemp+11,plusw1
 32944  014B5C                     l9218:
 32945                           
 32946                           ;stkvar	_a @ sp[(-13)+-8]
 32947  014B5C  0EEE               	movlw	238
 32948  014B5E  24E1               	addwf	fsr1l,w,c
 32949  014B60  6ED9               	movwf	fsr2l,c
 32950  014B62  0EFF               	movlw	255
 32951  014B64  20E2               	addwfc	fsr1h,w,c
 32952  014B66  6EDA               	movwf	fsr2h,c
 32953  014B68  50DF               	movf	indf2,w,c
 32954  014B6A  6E0C               	movwf	(btemp+11)^0,c
 32955  014B6C  0E80               	movlw	128
 32956  014B6E  160C               	andwf	(btemp+11)^0,f,c
 32957                           
 32958                           ;stkvar	_sign @ sp[(-13)+12]
 32959  014B70  50E1               	movf	fsr1l,w,c
 32960  014B72  0FFF               	addlw	-1
 32961  014B74  6ED9               	movwf	fsr2l,c
 32962  014B76  50E2               	movf	fsr1h,w,c
 32963  014B78  6EDA               	movwf	fsr2h,c
 32964  014B7A  0EFF               	movlw	255
 32965  014B7C  22DA               	addwfc	fsr2h,f,c
 32966  014B7E  500C               	movf	(btemp+11)^0,w,c
 32967  014B80  1ADF               	xorwf	indf2,f,c
 32968                           
 32969                           ;stkvar	_a @ sp[(-13)+-8]
 32970  014B82  0EEE               	movlw	238
 32971  014B84  24E1               	addwf	fsr1l,w,c
 32972  014B86  6ED9               	movwf	fsr2l,c
 32973  014B88  0EFF               	movlw	255
 32974  014B8A  20E2               	addwfc	fsr1h,w,c
 32975  014B8C  6EDA               	movwf	fsr2h,c
 32976  014B8E  50DF               	movf	indf2,w,c
 32977  014B90  6E0C               	movwf	(btemp+11)^0,c
 32978  014B92  90D8               	bcf	status,0,c
 32979  014B94  340C               	rlcf	(btemp+11)^0,w,c
 32980  014B96  6E0B               	movwf	(btemp+10)^0,c
 32981                           
 32982                           ;stkvar	_aexp @ sp[(-13)+11]
 32983  014B98  0EFE               	movlw	-2
 32984  014B9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32985                           
 32986                           ;stkvar	_a @ sp[(-13)+-8]
 32987  014BA0  0EED               	movlw	237
 32988  014BA2  24E1               	addwf	fsr1l,w,c
 32989  014BA4  6ED9               	movwf	fsr2l,c
 32990  014BA6  0EFF               	movlw	255
 32991  014BA8  20E2               	addwfc	fsr1h,w,c
 32992  014BAA  6EDA               	movwf	fsr2h,c
 32993  014BAC  AEDF               	btfss	indf2,7,c
 32994  014BAE  D002               	goto	l9226
 32995                           
 32996                           ;stkvar	_aexp @ sp[(-13)+11]
 32997  014BB0  0EFE               	movlw	-2
 32998  014BB2  80E3               	bsf	plusw1,0,c
 32999  014BB4                     l9226:
 33000                           
 33001                           ;stkvar	_aexp @ sp[(-13)+11]
 33002  014BB4  0EFE               	movlw	-2
 33003  014BB6  50E3               	movf	plusw1,w,c
 33004  014BB8  B4D8               	btfsc	status,2,c
 33005  014BBA  D01F               	goto	l9234
 33006                           
 33007                           ;stkvar	_aexp @ sp[(-13)+11]
 33008  014BBC  0EFE               	movlw	-2
 33009  014BBE  28E3               	incf	plusw1,w,c
 33010  014BC0  A4D8               	btfss	status,2,c
 33011  014BC2  D018               	goto	l9232
 33012  014BC4  0E00               	movlw	0
 33013  014BC6  6E09               	movwf	(btemp+8)^0,c
 33014  014BC8  0E00               	movlw	0
 33015  014BCA  6E0A               	movwf	(btemp+9)^0,c
 33016  014BCC  0E00               	movlw	0
 33017  014BCE  6E0B               	movwf	(btemp+10)^0,c
 33018  014BD0  0E00               	movlw	0
 33019  014BD2  6E0C               	movwf	(btemp+11)^0,c
 33020                           
 33021                           ;stkvar	_a @ sp[(-13)+-8]
 33022  014BD4  0EEB               	movlw	-21
 33023  014BD6  0060  F027  FFE3   	movff	btemp+8,plusw1
 33024  014BDC  0EEC               	movlw	-20
 33025  014BDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33026  014BE4  0EED               	movlw	-19
 33027  014BE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33028  014BEC  0EEE               	movlw	-18
 33029  014BEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 33030  014BF4                     l9232:
 33031                           
 33032                           ;stkvar	_a @ sp[(-13)+-8]
 33033  014BF4  0EED               	movlw	-19
 33034  014BF6  8EE3               	bsf	plusw1,7,c
 33035  014BF8  D018               	goto	l9236
 33036  014BFA                     l9234:
 33037  014BFA  0E00               	movlw	0
 33038  014BFC  6E09               	movwf	(btemp+8)^0,c
 33039  014BFE  0E00               	movlw	0
 33040  014C00  6E0A               	movwf	(btemp+9)^0,c
 33041  014C02  0E00               	movlw	0
 33042  014C04  6E0B               	movwf	(btemp+10)^0,c
 33043  014C06  0E00               	movlw	0
 33044  014C08  6E0C               	movwf	(btemp+11)^0,c
 33045                           
 33046                           ;stkvar	_a @ sp[(-13)+-8]
 33047  014C0A  0EEB               	movlw	-21
 33048  014C0C  0060  F027  FFE3   	movff	btemp+8,plusw1
 33049  014C12  0EEC               	movlw	-20
 33050  014C14  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33051  014C1A  0EED               	movlw	-19
 33052  014C1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33053  014C22  0EEE               	movlw	-18
 33054  014C24  0060  F033  FFE3   	movff	btemp+11,plusw1
 33055  014C2A                     l9236:
 33056                           
 33057                           ;stkvar	_aexp @ sp[(-13)+11]
 33058  014C2A  0EFE               	movlw	-2
 33059  014C2C  50E3               	movf	plusw1,w,c
 33060  014C2E  B4D8               	btfsc	status,2,c
 33061  014C30  D004               	goto	u7420
 33062                           
 33063                           ;stkvar	_bexp @ sp[(-13)+10]
 33064  014C32  0EFD               	movlw	-3
 33065  014C34  50E3               	movf	plusw1,w,c
 33066  014C36  A4D8               	btfss	status,2,c
 33067  014C38  D009               	goto	l9244
 33068  014C3A                     u7420:
 33069  014C3A  0E00               	movlw	0
 33070  014C3C  6E01               	movwf	btemp^0,c
 33071  014C3E  0E00               	movlw	0
 33072  014C40  6E02               	movwf	(btemp+1)^0,c
 33073  014C42  0E00               	movlw	0
 33074  014C44  6E03               	movwf	(btemp+2)^0,c
 33075  014C46  0E00               	movlw	0
 33076  014C48  6E04               	movwf	(btemp+3)^0,c
 33077  014C4A  D332               	goto	l3291
 33078  014C4C                     l9244:
 33079                           
 33080                           ;stkvar	_b @ sp[(-13)+-4]
 33081  014C4C  0EEF               	movlw	-17
 33082  014C4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 33083                           
 33084                           ;stkvar	_a @ sp[(-13)+-8]
 33085  014C54  0EED               	movlw	237
 33086  014C56  24E1               	addwf	fsr1l,w,c
 33087  014C58  6ED9               	movwf	fsr2l,c
 33088  014C5A  0EFF               	movlw	255
 33089  014C5C  20E2               	addwfc	fsr1h,w,c
 33090  014C5E  6EDA               	movwf	fsr2h,c
 33091  014C60  50DF               	movf	indf2,w,c
 33092  014C62  020C               	mulwf	(btemp+11)^0,c
 33093                           
 33094                           ;stkvar	_temp @ sp[(-13)+8]
 33095  014C64  0EFB               	movlw	-5
 33096  014C66  006F FFCF FFE3     	movff	prodl,plusw1
 33097  014C6C  0EFC               	movlw	-4
 33098  014C6E  006F FFD3 FFE3     	movff	prodh,plusw1
 33099                           
 33100                           ;stkvar	_temp @ sp[(-13)+8]
 33101  014C74  0EFB               	movlw	-5
 33102  014C76  006F FF8C  F00C    	movff	plusw1,btemp+11
 33103  014C7C  0060  F030  F005   	movff	btemp+11,btemp+4
 33104  014C82  6A06               	clrf	(btemp+5)^0,c
 33105  014C84  6A07               	clrf	(btemp+6)^0,c
 33106  014C86  6A08               	clrf	(btemp+7)^0,c
 33107                           
 33108                           ;stkvar	_grs @ sp[(-13)+4]
 33109  014C88  0EF7               	movlw	-9
 33110  014C8A  0060  F017  FFE3   	movff	btemp+4,plusw1
 33111  014C90  0EF8               	movlw	-8
 33112  014C92  0060  F01B  FFE3   	movff	btemp+5,plusw1
 33113  014C98  0EF9               	movlw	-7
 33114  014C9A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 33115  014CA0  0EFA               	movlw	-6
 33116  014CA2  0060  F023  FFE3   	movff	btemp+7,plusw1
 33117                           
 33118                           ;stkvar	_temp @ sp[(-13)+8]
 33119  014CA8  0EFC               	movlw	252
 33120  014CAA  24E1               	addwf	fsr1l,w,c
 33121  014CAC  6ED9               	movwf	fsr2l,c
 33122  014CAE  0EFF               	movlw	255
 33123  014CB0  20E2               	addwfc	fsr1h,w,c
 33124  014CB2  6EDA               	movwf	fsr2h,c
 33125  014CB4  50DF               	movf	indf2,w,c
 33126  014CB6  6E0C               	movwf	(btemp+11)^0,c
 33127  014CB8  0060  F030  F005   	movff	btemp+11,btemp+4
 33128  014CBE  6A06               	clrf	(btemp+5)^0,c
 33129  014CC0  6A07               	clrf	(btemp+6)^0,c
 33130  014CC2  6A08               	clrf	(btemp+7)^0,c
 33131                           
 33132                           ;stkvar	_prod @ sp[(-13)+0]
 33133  014CC4  0EF3               	movlw	-13
 33134  014CC6  0060  F017  FFE3   	movff	btemp+4,plusw1
 33135  014CCC  0EF4               	movlw	-12
 33136  014CCE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 33137  014CD4  0EF5               	movlw	-11
 33138  014CD6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 33139  014CDC  0EF6               	movlw	-10
 33140  014CDE  0060  F023  FFE3   	movff	btemp+7,plusw1
 33141                           
 33142                           ;stkvar	_b @ sp[(-13)+-4]
 33143  014CE4  0EF0               	movlw	240
 33144  014CE6  24E1               	addwf	fsr1l,w,c
 33145  014CE8  6ED9               	movwf	fsr2l,c
 33146  014CEA  0EFF               	movlw	255
 33147  014CEC  20E2               	addwfc	fsr1h,w,c
 33148  014CEE  6EDA               	movwf	fsr2h,c
 33149  014CF0  50DF               	movf	indf2,w,c
 33150  014CF2  6E0C               	movwf	(btemp+11)^0,c
 33151                           
 33152                           ;stkvar	_a @ sp[(-13)+-8]
 33153  014CF4  0EEC               	movlw	236
 33154  014CF6  24E1               	addwf	fsr1l,w,c
 33155  014CF8  6ED9               	movwf	fsr2l,c
 33156  014CFA  0EFF               	movlw	255
 33157  014CFC  20E2               	addwfc	fsr1h,w,c
 33158  014CFE  6EDA               	movwf	fsr2h,c
 33159  014D00  50DF               	movf	indf2,w,c
 33160  014D02  020C               	mulwf	(btemp+11)^0,c
 33161                           
 33162                           ;stkvar	_temp @ sp[(-13)+8]
 33163  014D04  0EFB               	movlw	-5
 33164  014D06  006F FFCF FFE3     	movff	prodl,plusw1
 33165  014D0C  0EFC               	movlw	-4
 33166  014D0E  006F FFD3 FFE3     	movff	prodh,plusw1
 33167                           
 33168                           ;stkvar	_grs @ sp[(-13)+4]
 33169  014D14  50E1               	movf	fsr1l,w,c
 33170  014D16  0FF7               	addlw	-9
 33171  014D18  6ED9               	movwf	fsr2l,c
 33172  014D1A  50E2               	movf	fsr1h,w,c
 33173  014D1C  6EDA               	movwf	fsr2h,c
 33174  014D1E  0EFF               	movlw	255
 33175  014D20  22DA               	addwfc	fsr2h,f,c
 33176                           
 33177                           ;stkvar	_temp @ sp[(-13)+8]
 33178  014D22  0EFB               	movlw	-5
 33179  014D24  50E3               	movf	plusw1,w,c
 33180  014D26  26DE               	addwf	postinc2,f,c
 33181  014D28  0E00               	movlw	0
 33182  014D2A  22DE               	addwfc	postinc2,f,c
 33183  014D2C  22DE               	addwfc	postinc2,f,c
 33184  014D2E  22DE               	addwfc	postinc2,f,c
 33185                           
 33186                           ;stkvar	_prod @ sp[(-13)+0]
 33187  014D30  50E1               	movf	fsr1l,w,c
 33188  014D32  0FF3               	addlw	-13
 33189  014D34  6ED9               	movwf	fsr2l,c
 33190  014D36  50E2               	movf	fsr1h,w,c
 33191  014D38  6EDA               	movwf	fsr2h,c
 33192  014D3A  0EFF               	movlw	255
 33193  014D3C  22DA               	addwfc	fsr2h,f,c
 33194                           
 33195                           ;stkvar	_temp @ sp[(-13)+8]
 33196  014D3E  0EFC               	movlw	252
 33197  014D40  24E1               	addwf	fsr1l,w,c
 33198  014D42  6EE9               	movwf	fsr0l,c
 33199  014D44  0EFF               	movlw	255
 33200  014D46  20E2               	addwfc	fsr1h,w,c
 33201  014D48  6EEA               	movwf	fsr0h,c
 33202  014D4A  50EF               	movf	indf0,w,c
 33203  014D4C  26DE               	addwf	postinc2,f,c
 33204  014D4E  0E00               	movlw	0
 33205  014D50  22DE               	addwfc	postinc2,f,c
 33206  014D52  22DE               	addwfc	postinc2,f,c
 33207  014D54  22DE               	addwfc	postinc2,f,c
 33208                           
 33209                           ;stkvar	_b @ sp[(-13)+-4]
 33210  014D56  0EF1               	movlw	241
 33211  014D58  24E1               	addwf	fsr1l,w,c
 33212  014D5A  6ED9               	movwf	fsr2l,c
 33213  014D5C  0EFF               	movlw	255
 33214  014D5E  20E2               	addwfc	fsr1h,w,c
 33215  014D60  6EDA               	movwf	fsr2h,c
 33216  014D62  50DF               	movf	indf2,w,c
 33217  014D64  6E0C               	movwf	(btemp+11)^0,c
 33218                           
 33219                           ;stkvar	_a @ sp[(-13)+-8]
 33220  014D66  0EEB               	movlw	-21
 33221  014D68  50E3               	movf	plusw1,w,c
 33222  014D6A  020C               	mulwf	(btemp+11)^0,c
 33223                           
 33224                           ;stkvar	_temp @ sp[(-13)+8]
 33225  014D6C  0EFB               	movlw	-5
 33226  014D6E  006F FFCF FFE3     	movff	prodl,plusw1
 33227  014D74  0EFC               	movlw	-4
 33228  014D76  006F FFD3 FFE3     	movff	prodh,plusw1
 33229                           
 33230                           ;stkvar	_grs @ sp[(-13)+4]
 33231  014D7C  50E1               	movf	fsr1l,w,c
 33232  014D7E  0FF7               	addlw	-9
 33233  014D80  6ED9               	movwf	fsr2l,c
 33234  014D82  50E2               	movf	fsr1h,w,c
 33235  014D84  6EDA               	movwf	fsr2h,c
 33236  014D86  0EFF               	movlw	255
 33237  014D88  22DA               	addwfc	fsr2h,f,c
 33238                           
 33239                           ;stkvar	_temp @ sp[(-13)+8]
 33240  014D8A  0EFB               	movlw	-5
 33241  014D8C  50E3               	movf	plusw1,w,c
 33242  014D8E  26DE               	addwf	postinc2,f,c
 33243  014D90  0E00               	movlw	0
 33244  014D92  22DE               	addwfc	postinc2,f,c
 33245  014D94  22DE               	addwfc	postinc2,f,c
 33246  014D96  22DE               	addwfc	postinc2,f,c
 33247                           
 33248                           ;stkvar	_prod @ sp[(-13)+0]
 33249  014D98  50E1               	movf	fsr1l,w,c
 33250  014D9A  0FF3               	addlw	-13
 33251  014D9C  6ED9               	movwf	fsr2l,c
 33252  014D9E  50E2               	movf	fsr1h,w,c
 33253  014DA0  6EDA               	movwf	fsr2h,c
 33254  014DA2  0EFF               	movlw	255
 33255  014DA4  22DA               	addwfc	fsr2h,f,c
 33256                           
 33257                           ;stkvar	_temp @ sp[(-13)+8]
 33258  014DA6  0EFC               	movlw	252
 33259  014DA8  24E1               	addwf	fsr1l,w,c
 33260  014DAA  6EE9               	movwf	fsr0l,c
 33261  014DAC  0EFF               	movlw	255
 33262  014DAE  20E2               	addwfc	fsr1h,w,c
 33263  014DB0  6EEA               	movwf	fsr0h,c
 33264  014DB2  50EF               	movf	indf0,w,c
 33265  014DB4  26DE               	addwf	postinc2,f,c
 33266  014DB6  0E00               	movlw	0
 33267  014DB8  22DE               	addwfc	postinc2,f,c
 33268  014DBA  22DE               	addwfc	postinc2,f,c
 33269  014DBC  22DE               	addwfc	postinc2,f,c
 33270                           
 33271                           ;stkvar	_grs @ sp[(-13)+4]
 33272  014DBE  50E1               	movf	fsr1l,w,c
 33273  014DC0  0FF7               	addlw	-9
 33274  014DC2  6ED9               	movwf	fsr2l,c
 33275  014DC4  50E2               	movf	fsr1h,w,c
 33276  014DC6  6EDA               	movwf	fsr2h,c
 33277  014DC8  0EFF               	movlw	255
 33278  014DCA  22DA               	addwfc	fsr2h,f,c
 33279  014DCC  0E08               	movlw	8
 33280  014DCE                     u7435:
 33281  014DCE  90D8               	bcf	status,0,c
 33282  014DD0  36DE               	rlcf	postinc2,f,c
 33283  014DD2  36DE               	rlcf	postinc2,f,c
 33284  014DD4  36DE               	rlcf	postinc2,f,c
 33285  014DD6  36DD               	rlcf	postdec2,f,c
 33286  014DD8  52DD               	movf	postdec2,f,c
 33287  014DDA  52DD               	movf	postdec2,f,c
 33288  014DDC  2EE8               	decfsz	wreg,f,c
 33289  014DDE  D7F7               	goto	u7435
 33290                           
 33291                           ;stkvar	_b @ sp[(-13)+-4]
 33292  014DE0  0EF0               	movlw	240
 33293  014DE2  24E1               	addwf	fsr1l,w,c
 33294  014DE4  6ED9               	movwf	fsr2l,c
 33295  014DE6  0EFF               	movlw	255
 33296  014DE8  20E2               	addwfc	fsr1h,w,c
 33297  014DEA  6EDA               	movwf	fsr2h,c
 33298  014DEC  50DF               	movf	indf2,w,c
 33299  014DEE  6E0C               	movwf	(btemp+11)^0,c
 33300                           
 33301                           ;stkvar	_a @ sp[(-13)+-8]
 33302  014DF0  0EEB               	movlw	-21
 33303  014DF2  50E3               	movf	plusw1,w,c
 33304  014DF4  020C               	mulwf	(btemp+11)^0,c
 33305                           
 33306                           ;stkvar	_temp @ sp[(-13)+8]
 33307  014DF6  0EFB               	movlw	-5
 33308  014DF8  006F FFCF FFE3     	movff	prodl,plusw1
 33309  014DFE  0EFC               	movlw	-4
 33310  014E00  006F FFD3 FFE3     	movff	prodh,plusw1
 33311                           
 33312                           ;stkvar	_temp @ sp[(-13)+8]
 33313  014E06  0EFB               	movlw	-5
 33314  014E08  006F FF8C  F00B    	movff	plusw1,btemp+10
 33315  014E0E  0EFC               	movlw	-4
 33316  014E10  006F FF8C  F00C    	movff	plusw1,btemp+11
 33317                           
 33318                           ;stkvar	_grs @ sp[(-13)+4]
 33319  014E16  50E1               	movf	fsr1l,w,c
 33320  014E18  0FF7               	addlw	-9
 33321  014E1A  6ED9               	movwf	fsr2l,c
 33322  014E1C  50E2               	movf	fsr1h,w,c
 33323  014E1E  6EDA               	movwf	fsr2h,c
 33324  014E20  0EFF               	movlw	255
 33325  014E22  22DA               	addwfc	fsr2h,f,c
 33326  014E24  500B               	movf	(btemp+10)^0,w,c
 33327  014E26  26DE               	addwf	postinc2,f,c
 33328  014E28  500C               	movf	(btemp+11)^0,w,c
 33329  014E2A  22DE               	addwfc	postinc2,f,c
 33330  014E2C  0E00               	movlw	0
 33331  014E2E  22DE               	addwfc	postinc2,f,c
 33332  014E30  22DE               	addwfc	postinc2,f,c
 33333                           
 33334                           ;stkvar	_b @ sp[(-13)+-4]
 33335  014E32  0EEF               	movlw	-17
 33336  014E34  006F FF8C  F00C    	movff	plusw1,btemp+11
 33337                           
 33338                           ;stkvar	_a @ sp[(-13)+-8]
 33339  014E3A  0EEC               	movlw	236
 33340  014E3C  24E1               	addwf	fsr1l,w,c
 33341  014E3E  6ED9               	movwf	fsr2l,c
 33342  014E40  0EFF               	movlw	255
 33343  014E42  20E2               	addwfc	fsr1h,w,c
 33344  014E44  6EDA               	movwf	fsr2h,c
 33345  014E46  50DF               	movf	indf2,w,c
 33346  014E48  020C               	mulwf	(btemp+11)^0,c
 33347                           
 33348                           ;stkvar	_temp @ sp[(-13)+8]
 33349  014E4A  0EFB               	movlw	-5
 33350  014E4C  006F FFCF FFE3     	movff	prodl,plusw1
 33351  014E52  0EFC               	movlw	-4
 33352  014E54  006F FFD3 FFE3     	movff	prodh,plusw1
 33353                           
 33354                           ;stkvar	_temp @ sp[(-13)+8]
 33355  014E5A  0EFB               	movlw	-5
 33356  014E5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 33357  014E62  0EFC               	movlw	-4
 33358  014E64  006F FF8C  F00C    	movff	plusw1,btemp+11
 33359                           
 33360                           ;stkvar	_grs @ sp[(-13)+4]
 33361  014E6A  50E1               	movf	fsr1l,w,c
 33362  014E6C  0FF7               	addlw	-9
 33363  014E6E  6ED9               	movwf	fsr2l,c
 33364  014E70  50E2               	movf	fsr1h,w,c
 33365  014E72  6EDA               	movwf	fsr2h,c
 33366  014E74  0EFF               	movlw	255
 33367  014E76  22DA               	addwfc	fsr2h,f,c
 33368  014E78  500B               	movf	(btemp+10)^0,w,c
 33369  014E7A  26DE               	addwf	postinc2,f,c
 33370  014E7C  500C               	movf	(btemp+11)^0,w,c
 33371  014E7E  22DE               	addwfc	postinc2,f,c
 33372  014E80  0E00               	movlw	0
 33373  014E82  22DE               	addwfc	postinc2,f,c
 33374  014E84  22DE               	addwfc	postinc2,f,c
 33375                           
 33376                           ;stkvar	_grs @ sp[(-13)+4]
 33377  014E86  50E1               	movf	fsr1l,w,c
 33378  014E88  0FF7               	addlw	-9
 33379  014E8A  6ED9               	movwf	fsr2l,c
 33380  014E8C  50E2               	movf	fsr1h,w,c
 33381  014E8E  6EDA               	movwf	fsr2h,c
 33382  014E90  0EFF               	movlw	255
 33383  014E92  22DA               	addwfc	fsr2h,f,c
 33384  014E94  0E08               	movlw	8
 33385  014E96                     u7445:
 33386  014E96  90D8               	bcf	status,0,c
 33387  014E98  36DE               	rlcf	postinc2,f,c
 33388  014E9A  36DE               	rlcf	postinc2,f,c
 33389  014E9C  36DE               	rlcf	postinc2,f,c
 33390  014E9E  36DD               	rlcf	postdec2,f,c
 33391  014EA0  52DD               	movf	postdec2,f,c
 33392  014EA2  52DD               	movf	postdec2,f,c
 33393  014EA4  2EE8               	decfsz	wreg,f,c
 33394  014EA6  D7F7               	goto	u7445
 33395                           
 33396                           ;stkvar	_b @ sp[(-13)+-4]
 33397  014EA8  0EEF               	movlw	-17
 33398  014EAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 33399                           
 33400                           ;stkvar	_a @ sp[(-13)+-8]
 33401  014EB0  0EEB               	movlw	-21
 33402  014EB2  50E3               	movf	plusw1,w,c
 33403  014EB4  020C               	mulwf	(btemp+11)^0,c
 33404                           
 33405                           ;stkvar	_temp @ sp[(-13)+8]
 33406  014EB6  0EFB               	movlw	-5
 33407  014EB8  006F FFCF FFE3     	movff	prodl,plusw1
 33408  014EBE  0EFC               	movlw	-4
 33409  014EC0  006F FFD3 FFE3     	movff	prodh,plusw1
 33410                           
 33411                           ;stkvar	_temp @ sp[(-13)+8]
 33412  014EC6  0EFB               	movlw	-5
 33413  014EC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 33414  014ECE  0EFC               	movlw	-4
 33415  014ED0  006F FF8C  F00C    	movff	plusw1,btemp+11
 33416                           
 33417                           ;stkvar	_grs @ sp[(-13)+4]
 33418  014ED6  50E1               	movf	fsr1l,w,c
 33419  014ED8  0FF7               	addlw	-9
 33420  014EDA  6ED9               	movwf	fsr2l,c
 33421  014EDC  50E2               	movf	fsr1h,w,c
 33422  014EDE  6EDA               	movwf	fsr2h,c
 33423  014EE0  0EFF               	movlw	255
 33424  014EE2  22DA               	addwfc	fsr2h,f,c
 33425  014EE4  500B               	movf	(btemp+10)^0,w,c
 33426  014EE6  26DE               	addwf	postinc2,f,c
 33427  014EE8  500C               	movf	(btemp+11)^0,w,c
 33428  014EEA  22DE               	addwfc	postinc2,f,c
 33429  014EEC  0E00               	movlw	0
 33430  014EEE  22DE               	addwfc	postinc2,f,c
 33431  014EF0  22DE               	addwfc	postinc2,f,c
 33432                           
 33433                           ;stkvar	_b @ sp[(-13)+-4]
 33434  014EF2  0EF0               	movlw	240
 33435  014EF4  24E1               	addwf	fsr1l,w,c
 33436  014EF6  6ED9               	movwf	fsr2l,c
 33437  014EF8  0EFF               	movlw	255
 33438  014EFA  20E2               	addwfc	fsr1h,w,c
 33439  014EFC  6EDA               	movwf	fsr2h,c
 33440  014EFE  50DF               	movf	indf2,w,c
 33441  014F00  6E0C               	movwf	(btemp+11)^0,c
 33442                           
 33443                           ;stkvar	_a @ sp[(-13)+-8]
 33444  014F02  0EED               	movlw	237
 33445  014F04  24E1               	addwf	fsr1l,w,c
 33446  014F06  6ED9               	movwf	fsr2l,c
 33447  014F08  0EFF               	movlw	255
 33448  014F0A  20E2               	addwfc	fsr1h,w,c
 33449  014F0C  6EDA               	movwf	fsr2h,c
 33450  014F0E  50DF               	movf	indf2,w,c
 33451  014F10  020C               	mulwf	(btemp+11)^0,c
 33452                           
 33453                           ;stkvar	_temp @ sp[(-13)+8]
 33454  014F12  0EFB               	movlw	-5
 33455  014F14  006F FFCF FFE3     	movff	prodl,plusw1
 33456  014F1A  0EFC               	movlw	-4
 33457  014F1C  006F FFD3 FFE3     	movff	prodh,plusw1
 33458                           
 33459                           ;stkvar	_temp @ sp[(-13)+8]
 33460  014F22  0EFB               	movlw	-5
 33461  014F24  006F FF8C  F00B    	movff	plusw1,btemp+10
 33462  014F2A  0EFC               	movlw	-4
 33463  014F2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 33464                           
 33465                           ;stkvar	_prod @ sp[(-13)+0]
 33466  014F32  50E1               	movf	fsr1l,w,c
 33467  014F34  0FF3               	addlw	-13
 33468  014F36  6ED9               	movwf	fsr2l,c
 33469  014F38  50E2               	movf	fsr1h,w,c
 33470  014F3A  6EDA               	movwf	fsr2h,c
 33471  014F3C  0EFF               	movlw	255
 33472  014F3E  22DA               	addwfc	fsr2h,f,c
 33473  014F40  500B               	movf	(btemp+10)^0,w,c
 33474  014F42  26DE               	addwf	postinc2,f,c
 33475  014F44  500C               	movf	(btemp+11)^0,w,c
 33476  014F46  22DE               	addwfc	postinc2,f,c
 33477  014F48  0E00               	movlw	0
 33478  014F4A  22DE               	addwfc	postinc2,f,c
 33479  014F4C  22DE               	addwfc	postinc2,f,c
 33480                           
 33481                           ;stkvar	_b @ sp[(-13)+-4]
 33482  014F4E  0EF1               	movlw	241
 33483  014F50  24E1               	addwf	fsr1l,w,c
 33484  014F52  6ED9               	movwf	fsr2l,c
 33485  014F54  0EFF               	movlw	255
 33486  014F56  20E2               	addwfc	fsr1h,w,c
 33487  014F58  6EDA               	movwf	fsr2h,c
 33488  014F5A  50DF               	movf	indf2,w,c
 33489  014F5C  6E0C               	movwf	(btemp+11)^0,c
 33490                           
 33491                           ;stkvar	_a @ sp[(-13)+-8]
 33492  014F5E  0EEC               	movlw	236
 33493  014F60  24E1               	addwf	fsr1l,w,c
 33494  014F62  6ED9               	movwf	fsr2l,c
 33495  014F64  0EFF               	movlw	255
 33496  014F66  20E2               	addwfc	fsr1h,w,c
 33497  014F68  6EDA               	movwf	fsr2h,c
 33498  014F6A  50DF               	movf	indf2,w,c
 33499  014F6C  020C               	mulwf	(btemp+11)^0,c
 33500                           
 33501                           ;stkvar	_temp @ sp[(-13)+8]
 33502  014F6E  0EFB               	movlw	-5
 33503  014F70  006F FFCF FFE3     	movff	prodl,plusw1
 33504  014F76  0EFC               	movlw	-4
 33505  014F78  006F FFD3 FFE3     	movff	prodh,plusw1
 33506                           
 33507                           ;stkvar	_temp @ sp[(-13)+8]
 33508  014F7E  0EFB               	movlw	-5
 33509  014F80  006F FF8C  F00B    	movff	plusw1,btemp+10
 33510  014F86  0EFC               	movlw	-4
 33511  014F88  006F FF8C  F00C    	movff	plusw1,btemp+11
 33512                           
 33513                           ;stkvar	_prod @ sp[(-13)+0]
 33514  014F8E  50E1               	movf	fsr1l,w,c
 33515  014F90  0FF3               	addlw	-13
 33516  014F92  6ED9               	movwf	fsr2l,c
 33517  014F94  50E2               	movf	fsr1h,w,c
 33518  014F96  6EDA               	movwf	fsr2h,c
 33519  014F98  0EFF               	movlw	255
 33520  014F9A  22DA               	addwfc	fsr2h,f,c
 33521  014F9C  500B               	movf	(btemp+10)^0,w,c
 33522  014F9E  26DE               	addwf	postinc2,f,c
 33523  014FA0  500C               	movf	(btemp+11)^0,w,c
 33524  014FA2  22DE               	addwfc	postinc2,f,c
 33525  014FA4  0E00               	movlw	0
 33526  014FA6  22DE               	addwfc	postinc2,f,c
 33527  014FA8  22DE               	addwfc	postinc2,f,c
 33528                           
 33529                           ;stkvar	_b @ sp[(-13)+-4]
 33530  014FAA  0EF1               	movlw	241
 33531  014FAC  24E1               	addwf	fsr1l,w,c
 33532  014FAE  6ED9               	movwf	fsr2l,c
 33533  014FB0  0EFF               	movlw	255
 33534  014FB2  20E2               	addwfc	fsr1h,w,c
 33535  014FB4  6EDA               	movwf	fsr2h,c
 33536  014FB6  50DF               	movf	indf2,w,c
 33537  014FB8  6E0C               	movwf	(btemp+11)^0,c
 33538                           
 33539                           ;stkvar	_a @ sp[(-13)+-8]
 33540  014FBA  0EED               	movlw	237
 33541  014FBC  24E1               	addwf	fsr1l,w,c
 33542  014FBE  6ED9               	movwf	fsr2l,c
 33543  014FC0  0EFF               	movlw	255
 33544  014FC2  20E2               	addwfc	fsr1h,w,c
 33545  014FC4  6EDA               	movwf	fsr2h,c
 33546  014FC6  50DF               	movf	indf2,w,c
 33547  014FC8  020C               	mulwf	(btemp+11)^0,c
 33548                           
 33549                           ;stkvar	_temp @ sp[(-13)+8]
 33550  014FCA  0EFB               	movlw	-5
 33551  014FCC  006F FFCF FFE3     	movff	prodl,plusw1
 33552  014FD2  0EFC               	movlw	-4
 33553  014FD4  006F FFD3 FFE3     	movff	prodh,plusw1
 33554                           
 33555                           ;stkvar	_temp @ sp[(-13)+8]
 33556  014FDA  0EFB               	movlw	-5
 33557  014FDC  006F FF8C  F00B    	movff	plusw1,btemp+10
 33558  014FE2  0EFC               	movlw	-4
 33559  014FE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 33560  014FEA  500B               	movf	(btemp+10)^0,w,c
 33561  014FEC  6E05               	movwf	(btemp+4)^0,c
 33562  014FEE  500C               	movf	(btemp+11)^0,w,c
 33563  014FF0  6E06               	movwf	(btemp+5)^0,c
 33564  014FF2  6A07               	clrf	(btemp+6)^0,c
 33565  014FF4  6A08               	clrf	(btemp+7)^0,c
 33566  014FF6  0060  F01C  F008   	movff	btemp+6,btemp+7
 33567  014FFC  0060  F018  F007   	movff	btemp+5,btemp+6
 33568  015002  0060  F014  F006   	movff	btemp+4,btemp+5
 33569  015008  6A05               	clrf	(btemp+4)^0,c
 33570                           
 33571                           ;stkvar	_prod @ sp[(-13)+0]
 33572  01500A  50E1               	movf	fsr1l,w,c
 33573  01500C  0FF3               	addlw	-13
 33574  01500E  6ED9               	movwf	fsr2l,c
 33575  015010  50E2               	movf	fsr1h,w,c
 33576  015012  6EDA               	movwf	fsr2h,c
 33577  015014  0EFF               	movlw	255
 33578  015016  22DA               	addwfc	fsr2h,f,c
 33579  015018  5005               	movf	(btemp+4)^0,w,c
 33580  01501A  26DE               	addwf	postinc2,f,c
 33581  01501C  5006               	movf	(btemp+5)^0,w,c
 33582  01501E  22DE               	addwfc	postinc2,f,c
 33583  015020  5007               	movf	(btemp+6)^0,w,c
 33584  015022  22DE               	addwfc	postinc2,f,c
 33585  015024  5008               	movf	(btemp+7)^0,w,c
 33586  015026  22DE               	addwfc	postinc2,f,c
 33587                           
 33588                           ;stkvar	_prod @ sp[(-13)+0]
 33589  015028  50E1               	movf	fsr1l,w,c
 33590  01502A  0FF3               	addlw	-13
 33591  01502C  6ED9               	movwf	fsr2l,c
 33592  01502E  50E2               	movf	fsr1h,w,c
 33593  015030  6EDA               	movwf	fsr2h,c
 33594  015032  0EFF               	movlw	255
 33595  015034  22DA               	addwfc	fsr2h,f,c
 33596                           
 33597                           ;stkvar	_grs @ sp[(-13)+4]
 33598  015036  0EFA               	movlw	250
 33599  015038  24E1               	addwf	fsr1l,w,c
 33600  01503A  6EE9               	movwf	fsr0l,c
 33601  01503C  0EFF               	movlw	255
 33602  01503E  20E2               	addwfc	fsr1h,w,c
 33603  015040  6EEA               	movwf	fsr0h,c
 33604  015042  50EF               	movf	indf0,w,c
 33605  015044  26DE               	addwf	postinc2,f,c
 33606  015046  0E00               	movlw	0
 33607  015048  22DE               	addwfc	postinc2,f,c
 33608  01504A  22DE               	addwfc	postinc2,f,c
 33609  01504C  22DE               	addwfc	postinc2,f,c
 33610                           
 33611                           ;stkvar	_grs @ sp[(-13)+4]
 33612  01504E  50E1               	movf	fsr1l,w,c
 33613  015050  0FF7               	addlw	-9
 33614  015052  6ED9               	movwf	fsr2l,c
 33615  015054  50E2               	movf	fsr1h,w,c
 33616  015056  6EDA               	movwf	fsr2h,c
 33617  015058  0EFF               	movlw	255
 33618  01505A  22DA               	addwfc	fsr2h,f,c
 33619  01505C  0E08               	movlw	8
 33620  01505E                     u7455:
 33621  01505E  90D8               	bcf	status,0,c
 33622  015060  36DE               	rlcf	postinc2,f,c
 33623  015062  36DE               	rlcf	postinc2,f,c
 33624  015064  36DE               	rlcf	postinc2,f,c
 33625  015066  36DD               	rlcf	postdec2,f,c
 33626  015068  52DD               	movf	postdec2,f,c
 33627  01506A  52DD               	movf	postdec2,f,c
 33628  01506C  2EE8               	decfsz	wreg,f,c
 33629  01506E  D7F7               	goto	u7455
 33630  015070  0E82               	movlw	130
 33631  015072  6E0B               	movwf	(btemp+10)^0,c
 33632  015074  0EFF               	movlw	255
 33633  015076  6E0C               	movwf	(btemp+11)^0,c
 33634                           
 33635                           ;stkvar	_bexp @ sp[(-13)+10]
 33636  015078  0EFD               	movlw	-3
 33637  01507A  50E3               	movf	plusw1,w,c
 33638  01507C  6E09               	movwf	(btemp+8)^0,c
 33639  01507E  6A0A               	clrf	(btemp+9)^0,c
 33640                           
 33641                           ;stkvar	_aexp @ sp[(-13)+11]
 33642  015080  0EFE               	movlw	-2
 33643  015082  50E3               	movf	plusw1,w,c
 33644  015084  2609               	addwf	(btemp+8)^0,f,c
 33645  015086  0E00               	movlw	0
 33646  015088  220A               	addwfc	(btemp+9)^0,f,c
 33647  01508A  500B               	movf	(btemp+10)^0,w,c
 33648  01508C  2609               	addwf	(btemp+8)^0,f,c
 33649  01508E  500C               	movf	(btemp+11)^0,w,c
 33650  015090  220A               	addwfc	(btemp+9)^0,f,c
 33651                           
 33652                           ;stkvar	_temp @ sp[(-13)+8]
 33653  015092  0EFB               	movlw	-5
 33654  015094  0060  F027  FFE3   	movff	btemp+8,plusw1
 33655  01509A  0EFC               	movlw	-4
 33656  01509C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33657  0150A2  D021               	goto	l9306
 33658  0150A4                     l9296:
 33659                           
 33660                           ;stkvar	_prod @ sp[(-13)+0]
 33661  0150A4  90D8               	bcf	status,0,c
 33662  0150A6  0EF3               	movlw	-13
 33663  0150A8  36E3               	rlcf	plusw1,f,c
 33664  0150AA  0EF4               	movlw	-12
 33665  0150AC  36E3               	rlcf	plusw1,f,c
 33666  0150AE  0EF5               	movlw	-11
 33667  0150B0  36E3               	rlcf	plusw1,f,c
 33668  0150B2  0EF6               	movlw	-10
 33669  0150B4  36E3               	rlcf	plusw1,f,c
 33670                           
 33671                           ;stkvar	_grs @ sp[(-13)+4]
 33672  0150B6  0EFA               	movlw	-6
 33673  0150B8  AEE3               	btfss	plusw1,7,c
 33674  0150BA  D002               	goto	l9302
 33675                           
 33676                           ;stkvar	_prod @ sp[(-13)+0]
 33677  0150BC  0EF3               	movlw	-13
 33678  0150BE  80E3               	bsf	plusw1,0,c
 33679  0150C0                     l9302:
 33680                           
 33681                           ;stkvar	_grs @ sp[(-13)+4]
 33682  0150C0  90D8               	bcf	status,0,c
 33683  0150C2  0EF7               	movlw	-9
 33684  0150C4  36E3               	rlcf	plusw1,f,c
 33685  0150C6  0EF8               	movlw	-8
 33686  0150C8  36E3               	rlcf	plusw1,f,c
 33687  0150CA  0EF9               	movlw	-7
 33688  0150CC  36E3               	rlcf	plusw1,f,c
 33689  0150CE  0EFA               	movlw	-6
 33690  0150D0  36E3               	rlcf	plusw1,f,c
 33691                           
 33692                           ;stkvar	_temp @ sp[(-13)+8]
 33693  0150D2  50E1               	movf	fsr1l,w,c
 33694  0150D4  0FFB               	addlw	-5
 33695  0150D6  6ED9               	movwf	fsr2l,c
 33696  0150D8  50E2               	movf	fsr1h,w,c
 33697  0150DA  6EDA               	movwf	fsr2h,c
 33698  0150DC  0EFF               	movlw	255
 33699  0150DE  22DA               	addwfc	fsr2h,f,c
 33700  0150E0  06DE               	decf	postinc2,f,c
 33701  0150E2  0E00               	movlw	0
 33702  0150E4  5ADD               	subwfb	postdec2,f,c
 33703  0150E6                     l9306:
 33704                           
 33705                           ;stkvar	_prod @ sp[(-13)+0]
 33706  0150E6  0EF5               	movlw	-11
 33707  0150E8  AEE3               	btfss	plusw1,7,c
 33708  0150EA  D7DC               	goto	l9296
 33709                           
 33710                           ;stkvar	_aexp @ sp[(-13)+11]
 33711  0150EC  0EFE               	movlw	-2
 33712  0150EE  6AE3               	clrf	plusw1,c
 33713                           
 33714                           ;stkvar	_grs @ sp[(-13)+4]
 33715  0150F0  0EFA               	movlw	-6
 33716  0150F2  AEE3               	btfss	plusw1,7,c
 33717  0150F4  D020               	goto	l9320
 33718                           
 33719                           ;stkvar	_grs @ sp[(-13)+4]
 33720  0150F6  50E1               	movf	fsr1l,w,c
 33721  0150F8  0FF7               	addlw	-9
 33722  0150FA  6ED9               	movwf	fsr2l,c
 33723  0150FC  50E2               	movf	fsr1h,w,c
 33724  0150FE  6EDA               	movwf	fsr2h,c
 33725  015100  0EFF               	movlw	255
 33726  015102  22DA               	addwfc	fsr2h,f,c
 33727  015104  0EFF               	movlw	255
 33728  015106  14DE               	andwf	postinc2,w,c
 33729  015108  6E09               	movwf	(btemp+8)^0,c
 33730  01510A  0EFF               	movlw	255
 33731  01510C  14DE               	andwf	postinc2,w,c
 33732  01510E  6E0A               	movwf	(btemp+9)^0,c
 33733  015110  0EFF               	movlw	255
 33734  015112  14DE               	andwf	postinc2,w,c
 33735  015114  6E0B               	movwf	(btemp+10)^0,c
 33736  015116  0E7F               	movlw	127
 33737  015118  14DE               	andwf	postinc2,w,c
 33738  01511A  6E0C               	movwf	(btemp+11)^0,c
 33739  01511C  5009               	movf	(btemp+8)^0,w,c
 33740  01511E  100A               	iorwf	(btemp+9)^0,w,c
 33741  015120  100B               	iorwf	(btemp+10)^0,w,c
 33742  015122  100C               	iorwf	(btemp+11)^0,w,c
 33743  015124  B4D8               	btfsc	status,2,c
 33744  015126  D004               	goto	l9316
 33745  015128                     u7490:
 33746                           
 33747                           ;stkvar	_aexp @ sp[(-13)+11]
 33748  015128  0EFE               	movlw	-2
 33749  01512A  6AE3               	clrf	plusw1,c
 33750  01512C  2AE3               	incf	plusw1,f,c
 33751  01512E  D003               	goto	l9320
 33752  015130                     l9316:
 33753                           
 33754                           ;stkvar	_prod @ sp[(-13)+0]
 33755  015130  0EF3               	movlw	-13
 33756  015132  B0E3               	btfsc	plusw1,0,c
 33757  015134  D7F9               	goto	u7490
 33758  015136                     l9320:
 33759                           
 33760                           ;stkvar	_aexp @ sp[(-13)+11]
 33761  015136  0EFE               	movlw	-2
 33762  015138  50E3               	movf	plusw1,w,c
 33763  01513A  B4D8               	btfsc	status,2,c
 33764  01513C  D036               	goto	l9330
 33765                           
 33766                           ;stkvar	_prod @ sp[(-13)+0]
 33767  01513E  50E1               	movf	fsr1l,w,c
 33768  015140  0FF3               	addlw	-13
 33769  015142  6ED9               	movwf	fsr2l,c
 33770  015144  50E2               	movf	fsr1h,w,c
 33771  015146  6EDA               	movwf	fsr2h,c
 33772  015148  0EFF               	movlw	255
 33773  01514A  22DA               	addwfc	fsr2h,f,c
 33774  01514C  2ADE               	incf	postinc2,f,c
 33775  01514E  0E00               	movlw	0
 33776  015150  22DE               	addwfc	postinc2,f,c
 33777  015152  22DE               	addwfc	postinc2,f,c
 33778  015154  22DE               	addwfc	postinc2,f,c
 33779                           
 33780                           ;stkvar	_prod @ sp[(-13)+0]
 33781  015156  0EF6               	movlw	-10
 33782  015158  A0E3               	btfss	plusw1,0,c
 33783  01515A  D027               	goto	l9330
 33784  01515C  0E01               	movlw	1
 33785  01515E  6E0C               	movwf	(btemp+11)^0,c
 33786                           
 33787                           ;stkvar	_prod @ sp[(-13)+0]
 33788  015160  50E1               	movf	fsr1l,w,c
 33789  015162  0FF3               	addlw	-13
 33790  015164  6ED9               	movwf	fsr2l,c
 33791  015166  50E2               	movf	fsr1h,w,c
 33792  015168  6EDA               	movwf	fsr2h,c
 33793  01516A  0EFF               	movlw	255
 33794  01516C  22DA               	addwfc	fsr2h,f,c
 33795  01516E  280C               	incf	(btemp+11)^0,w,c
 33796  015170  52DE               	movf	postinc2,f,c
 33797  015172  D008               	goto	u7530
 33798  015174                     u7535:
 33799  015174  52DE               	movf	postinc2,f,c
 33800  015176  90D8               	bcf	status,0,c
 33801  015178  BEDC               	btfsc	preinc2,7,c
 33802  01517A  80D8               	bsf	status,0,c
 33803  01517C  32DD               	rrcf	postdec2,f,c
 33804  01517E  32DD               	rrcf	postdec2,f,c
 33805  015180  32DD               	rrcf	postdec2,f,c
 33806  015182  32DE               	rrcf	postinc2,f,c
 33807  015184                     u7530:
 33808  015184  2EE8               	decfsz	wreg,f,c
 33809  015186  D7F6               	goto	u7535
 33810                           
 33811                           ;stkvar	_temp @ sp[(-13)+8]
 33812  015188  0EFB               	movlw	-5
 33813  01518A  50E3               	movf	plusw1,w,c
 33814  01518C  0F01               	addlw	1
 33815  01518E  6E01               	movwf	btemp^0,c
 33816  015190  0EFB               	movlw	-5
 33817  015192  0060  F007  FFE3   	movff	btemp,plusw1
 33818  015198  6A01               	clrf	btemp^0,c
 33819  01519A  0EFC               	movlw	-4
 33820  01519C  50E3               	movf	plusw1,w,c
 33821  01519E  2001               	addwfc	btemp^0,w,c
 33822  0151A0  6E01               	movwf	btemp^0,c
 33823  0151A2  0EFC               	movlw	-4
 33824  0151A4  0060  F007  FFE3   	movff	btemp,plusw1
 33825  0151AA                     l9330:
 33826                           
 33827                           ;stkvar	_temp @ sp[(-13)+8]
 33828  0151AA  0EFC               	movlw	-4
 33829  0151AC  BEE3               	btfsc	plusw1,7,c
 33830  0151AE  D020               	goto	l9334
 33831  0151B0  0EFC               	movlw	-4
 33832  0151B2  50E3               	movf	plusw1,w,c
 33833  0151B4  E104               	bnz	u7540
 33834  0151B6  0EFB               	movlw	-5
 33835  0151B8  28E3               	incf	plusw1,w,c
 33836  0151BA  A0D8               	btfss	status,0,c
 33837  0151BC  D019               	goto	l9334
 33838  0151BE                     u7540:
 33839  0151BE  0E00               	movlw	0
 33840  0151C0  6E09               	movwf	(btemp+8)^0,c
 33841  0151C2  0E00               	movlw	0
 33842  0151C4  6E0A               	movwf	(btemp+9)^0,c
 33843  0151C6  0E80               	movlw	128
 33844  0151C8  6E0B               	movwf	(btemp+10)^0,c
 33845  0151CA  0E7F               	movlw	127
 33846  0151CC  6E0C               	movwf	(btemp+11)^0,c
 33847                           
 33848                           ;stkvar	_prod @ sp[(-13)+0]
 33849  0151CE  0EF3               	movlw	-13
 33850  0151D0  0060  F027  FFE3   	movff	btemp+8,plusw1
 33851  0151D6  0EF4               	movlw	-12
 33852  0151D8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33853  0151DE  0EF5               	movlw	-11
 33854  0151E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33855  0151E6  0EF6               	movlw	-10
 33856  0151E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 33857  0151EE  D044               	goto	l9350
 33858  0151F0                     l9334:
 33859                           
 33860                           ;stkvar	_temp @ sp[(-13)+8]
 33861  0151F0  0EFC               	movlw	-4
 33862  0151F2  BEE3               	btfsc	plusw1,7,c
 33863  0151F4  D007               	goto	u7550
 33864  0151F6  0EFC               	movlw	-4
 33865  0151F8  50E3               	movf	plusw1,w,c
 33866  0151FA  E10F               	bnz	l9340
 33867  0151FC  0EFB               	movlw	-5
 33868  0151FE  04E3               	decf	plusw1,w,c
 33869  015200  B0D8               	btfsc	status,0,c
 33870  015202  D00B               	goto	l9340
 33871  015204                     u7550:
 33872                           
 33873                           ;stkvar	_prod @ sp[(-13)+0]
 33874  015204  0EF3               	movlw	-13
 33875  015206  6AE3               	clrf	plusw1,c
 33876  015208  0EF4               	movlw	-12
 33877  01520A  6AE3               	clrf	plusw1,c
 33878  01520C  0EF5               	movlw	-11
 33879  01520E  6AE3               	clrf	plusw1,c
 33880  015210  0EF6               	movlw	-10
 33881  015212  6AE3               	clrf	plusw1,c
 33882                           
 33883                           ;stkvar	_sign @ sp[(-13)+12]
 33884  015214  0EFF               	movlw	-1
 33885  015216  6AE3               	clrf	plusw1,c
 33886  015218  D02F               	goto	l9350
 33887  01521A                     l9340:
 33888                           
 33889                           ;stkvar	_temp @ sp[(-13)+8]
 33890                           ;stkvar	_bexp @ sp[(-13)+10]
 33891  01521A  0EFB               	movlw	-5
 33892  01521C  006F FF8C  F001    	movff	plusw1,btemp
 33893  015222  0EFD               	movlw	-3
 33894  015224  0060  F007  FFE3   	movff	btemp,plusw1
 33895                           
 33896                           ;stkvar	_prod @ sp[(-13)+0]
 33897  01522A  50E1               	movf	fsr1l,w,c
 33898  01522C  0FF3               	addlw	-13
 33899  01522E  6ED9               	movwf	fsr2l,c
 33900  015230  50E2               	movf	fsr1h,w,c
 33901  015232  6EDA               	movwf	fsr2h,c
 33902  015234  0EFF               	movlw	255
 33903  015236  22DA               	addwfc	fsr2h,f,c
 33904  015238  0EFF               	movlw	255
 33905  01523A  16DE               	andwf	postinc2,f,c
 33906  01523C  0EFF               	movlw	255
 33907  01523E  16DE               	andwf	postinc2,f,c
 33908  015240  0E7F               	movlw	127
 33909  015242  16DE               	andwf	postinc2,f,c
 33910  015244  0E00               	movlw	0
 33911  015246  16DE               	andwf	postinc2,f,c
 33912                           
 33913                           ;stkvar	_bexp @ sp[(-13)+10]
 33914  015248  0EFD               	movlw	-3
 33915  01524A  A0E3               	btfss	plusw1,0,c
 33916  01524C  D008               	goto	l9348
 33917                           
 33918                           ;stkvar	_prod @ sp[(-13)+0]
 33919  01524E  0EF5               	movlw	245
 33920  015250  24E1               	addwf	fsr1l,w,c
 33921  015252  6ED9               	movwf	fsr2l,c
 33922  015254  0EFF               	movlw	255
 33923  015256  20E2               	addwfc	fsr1h,w,c
 33924  015258  6EDA               	movwf	fsr2h,c
 33925  01525A  0E00               	movlw	0
 33926  01525C  8EDB               	bsf	plusw2,7,c
 33927  01525E                     l9348:
 33928                           
 33929                           ;stkvar	_prod @ sp[(-13)+0]
 33930  01525E  0EF6               	movlw	246
 33931  015260  24E1               	addwf	fsr1l,w,c
 33932  015262  6ED9               	movwf	fsr2l,c
 33933  015264  0EFF               	movlw	255
 33934  015266  20E2               	addwfc	fsr1h,w,c
 33935  015268  6EDA               	movwf	fsr2h,c
 33936                           
 33937                           ;stkvar	_bexp @ sp[(-13)+10]
 33938  01526A  0EFD               	movlw	-3
 33939  01526C  006F FF8C  F00C    	movff	plusw1,btemp+11
 33940  015272  90D8               	bcf	status,0,c
 33941  015274  300C               	rrcf	(btemp+11)^0,w,c
 33942  015276  6EDF               	movwf	indf2,c
 33943  015278                     l9350:
 33944                           
 33945                           ;stkvar	_sign @ sp[(-13)+12]
 33946  015278  0EFF               	movlw	-1
 33947  01527A  006F FF8C  F00C    	movff	plusw1,btemp+11
 33948                           
 33949                           ;stkvar	_prod @ sp[(-13)+0]
 33950  015280  0EF6               	movlw	246
 33951  015282  24E1               	addwf	fsr1l,w,c
 33952  015284  6ED9               	movwf	fsr2l,c
 33953  015286  0EFF               	movlw	255
 33954  015288  20E2               	addwfc	fsr1h,w,c
 33955  01528A  6EDA               	movwf	fsr2h,c
 33956  01528C  500C               	movf	(btemp+11)^0,w,c
 33957  01528E  12DF               	iorwf	indf2,f,c
 33958                           
 33959                           ;stkvar	_prod @ sp[(-13)+0]
 33960  015290  0EF3               	movlw	-13
 33961  015292  006F FF8C  F001    	movff	plusw1,btemp
 33962  015298  0EF4               	movlw	-12
 33963  01529A  006F FF8C  F002    	movff	plusw1,btemp+1
 33964  0152A0  0EF5               	movlw	-11
 33965  0152A2  006F FF8C  F003    	movff	plusw1,btemp+2
 33966  0152A8  0EF6               	movlw	-10
 33967  0152AA  006F FF8C  F004    	movff	plusw1,btemp+3
 33968  0152B0                     l3291:
 33969                           
 33970                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 33971  0152B0  0EEB               	movlw	235
 33972  0152B2  26E1               	addwf	fsr1l,f,c
 33973  0152B4  0EFF               	movlw	255
 33974  0152B6  22E2               	addwfc	fsr1h,f,c
 33975  0152B8  0012               	return		;funcret
 33976  0152BA                     __end_of___flmul:
 33977                           	opt callstack 0
 33978                           
 33979 ;; *************** function _SYSTEM_Initialize *****************
 33980 ;; Defined at:
 33981 ;;		line 50 in file "mcc_generated_files/mcc.c"
 33982 ;; Parameters:    Size  Location     Type
 33983 ;;		None
 33984 ;; Auto vars:     Size  Location     Type
 33985 ;;		None
 33986 ;; Return value:  Size  Location     Type
 33987 ;;                  1  [STACK] void 
 33988 ;; Registers used:
 33989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 33990 ;; Tracked objects:
 33991 ;;		On entry : 0/0
 33992 ;;		On exit  : 3F/3C
 33993 ;;		Unchanged: 0/0
 33994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33999 ;;Total ram usage:        0 bytes
 34000 ;; Hardware stack levels used:    1
 34001 ;; Hardware stack levels required when called:   17
 34002 ;; This function calls:
 34003 ;;		_ADCC_Initialize
 34004 ;;		_CLKREF_Initialize
 34005 ;;		_CRC_Initialize
 34006 ;;		_DMA1_Initialize
 34007 ;;		_DMA2_Initialize
 34008 ;;		_EXT_INT_Initialize
 34009 ;;		_FVR_Initialize
 34010 ;;		_INTERRUPT_Initialize
 34011 ;;		_OSCILLATOR_Initialize
 34012 ;;		_PIN_MANAGER_Initialize
 34013 ;;		_PMD_Initialize
 34014 ;;		_PWM8_Initialize
 34015 ;;		_SPI1_Initialize
 34016 ;;		_TMR2_Initialize
 34017 ;;		_TMR3_Initialize
 34018 ;;		_TMR5_Initialize
 34019 ;;		_TMR6_Initialize
 34020 ;;		_UART1_Initialize
 34021 ;;		_UART2_Initialize
 34022 ;; This function is called by:
 34023 ;;		_main
 34024 ;; This function uses a reentrant model
 34025 ;;
 34026                           
 34027                           	psect	text129
 34028  01CD16                     __ptext129:
 34029                           	opt callstack 0
 34030  01CD16                     _SYSTEM_Initialize:
 34031                           	opt callstack 13
 34032                           
 34033                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 34034                           
 34035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34036                           ;incstack = 0
 34037  01CD16  EC94  F0E4         	call	_INTERRUPT_Initialize	;wreg free
 34038                           
 34039                           ; BSR set to: 57
 34040                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 34041  01CD1A  EC49  F0ED         	call	_PMD_Initialize	;wreg free
 34042                           
 34043                           ; BSR set to: 57
 34044                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 34045  01CD1E  ECBC  F0E0         	call	_PIN_MANAGER_Initialize	;wreg free
 34046                           
 34047                           ; BSR set to: 58
 34048                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 34049  01CD22  EC3E  F0ED         	call	_OSCILLATOR_Initialize	;wreg free
 34050                           
 34051                           ; BSR set to: 57
 34052                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 34053  01CD26  ECDD  F0ED         	call	_FVR_Initialize	;wreg free
 34054                           
 34055                           ; BSR set to: 62
 34056                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 34057  01CD2A  EC05  F0E1         	call	_CRC_Initialize	;wreg free
 34058                           
 34059                           ; BSR set to: 0
 34060                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 34061  01CD2E  ECC3  F0E3         	call	_ADCC_Initialize	;wreg free
 34062                           
 34063                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 34064  01CD32  EC33  F0ED         	call	_PWM8_Initialize	;wreg free
 34065                           
 34066                           ; BSR set to: 63
 34067                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 34068  01CD36  EC11  F0ED         	call	_TMR2_Initialize	;wreg free
 34069                           
 34070                           ; BSR set to: 57
 34071                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 34072  01CD3A  ECB2  F0E9         	call	_EXT_INT_Initialize	;wreg free
 34073                           
 34074                           ; BSR set to: 57
 34075                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 34076  01CD3E  EC9E  F0EA         	call	_TMR6_Initialize	;wreg free
 34077                           
 34078                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 34079  01CD42  EC6A  F0E7         	call	_TMR3_Initialize	;wreg free
 34080                           
 34081                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 34082  01CD46  EC46  F0E7         	call	_TMR5_Initialize	;wreg free
 34083                           
 34084                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 34085  01CD4A  EC22  F0E7         	call	_UART1_Initialize	;wreg free
 34086                           
 34087                           ; BSR set to: 57
 34088                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 34089  01CD4E  EC5B  F0E5         	call	_UART2_Initialize	;wreg free
 34090                           
 34091                           ; BSR set to: 57
 34092                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 34093  01CD52  EC28  F0ED         	call	_SPI1_Initialize	;wreg free
 34094                           
 34095                           ; BSR set to: 61
 34096                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 34097  01CD56  ECE5  F0E5         	call	_DMA2_Initialize	;wreg free
 34098                           
 34099                           ; BSR set to: 59
 34100                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 34101  01CD5A  EC8E  F0E3         	call	_DMA1_Initialize	;wreg free
 34102                           
 34103                           ; BSR set to: 59
 34104                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 34105  01CD5E  ECB1  F0ED         	call	_CLKREF_Initialize	;wreg free
 34106                           
 34107                           ; BSR set to: 60
 34108                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34109  01CD62  0012               	return		;funcret
 34110  01CD64                     __end_of_SYSTEM_Initialize:
 34111                           	opt callstack 0
 34112                           
 34113 ;; *************** function _UART2_Initialize *****************
 34114 ;; Defined at:
 34115 ;;		line 78 in file "mcc_generated_files/uart2.c"
 34116 ;; Parameters:    Size  Location     Type
 34117 ;;		None
 34118 ;; Auto vars:     Size  Location     Type
 34119 ;;		None
 34120 ;; Return value:  Size  Location     Type
 34121 ;;                  1  [STACK] void 
 34122 ;; Registers used:
 34123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34124 ;; Tracked objects:
 34125 ;;		On entry : 3F/39
 34126 ;;		On exit  : 3F/39
 34127 ;;		Unchanged: 0/0
 34128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34133 ;;Total ram usage:        0 bytes
 34134 ;; Hardware stack levels used:    1
 34135 ;; Hardware stack levels required when called:   16
 34136 ;; This function calls:
 34137 ;;		_UART2_SetRxInterruptHandler
 34138 ;;		_UART2_SetTxInterruptHandler
 34139 ;; This function is called by:
 34140 ;;		_SYSTEM_Initialize
 34141 ;; This function uses a reentrant model
 34142 ;;
 34143                           
 34144                           	psect	text130
 34145  01CAB6                     __ptext130:
 34146                           	opt callstack 0
 34147  01CAB6                     _UART2_Initialize:
 34148                           	opt callstack 13
 34149                           
 34150                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 34151                           
 34152                           ; BSR set to: 60
 34153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34154                           ;incstack = 0
 34155  01CAB6  0139               	movlb	57	; () banked
 34156  01CAB8  9596               	bcf	150,2,b	;volatile
 34157                           
 34158                           ; BSR set to: 57
 34159                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 34160  01CABA  0E1E               	movlw	low _UART2_Receive_ISR
 34161  01CABC  6EE6               	movwf	postinc1,c
 34162  01CABE  0ED9               	movlw	high _UART2_Receive_ISR
 34163  01CAC0  6EE6               	movwf	postinc1,c
 34164  01CAC2  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 34165  01CAC4  6EE6               	movwf	postinc1,c
 34166  01CAC6  ECEF  F0EA         	call	_UART2_SetRxInterruptHandler	;wreg free
 34167                           
 34168                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 34169  01CACA  0139               	movlb	57	; () banked
 34170  01CACC  9796               	bcf	150,3,b	;volatile
 34171                           
 34172                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 34173  01CACE  0E10               	movlw	low _UART2_Transmit_ISR
 34174  01CAD0  6EE6               	movwf	postinc1,c
 34175  01CAD2  0ED5               	movlw	high _UART2_Transmit_ISR
 34176  01CAD4  6EE6               	movwf	postinc1,c
 34177  01CAD6  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 34178  01CAD8  6EE6               	movwf	postinc1,c
 34179  01CADA  ECDB  F0EA         	call	_UART2_SetTxInterruptHandler	;wreg free
 34180                           
 34181                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 34182  01CADE  013D               	movlb	61	; () banked
 34183  01CAE0  6BD4               	clrf	212,b	;volatile
 34184                           
 34185                           ; BSR set to: 61
 34186                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 34187  01CAE2  6BD6               	clrf	214,b	;volatile
 34188                           
 34189                           ; BSR set to: 61
 34190                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 34191  01CAE4  6BD8               	clrf	216,b	;volatile
 34192                           
 34193                           ; BSR set to: 61
 34194                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 34195  01CAE6  0EB0               	movlw	176
 34196  01CAE8  6FDA               	movwf	218,b	;volatile
 34197                           
 34198                           ; BSR set to: 61
 34199                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 34200  01CAEA  0E80               	movlw	128
 34201  01CAEC  6FDB               	movwf	219,b	;volatile
 34202                           
 34203                           ; BSR set to: 61
 34204                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 34205  01CAEE  6BDC               	clrf	220,b	;volatile
 34206                           
 34207                           ; BSR set to: 61
 34208                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 34209  01CAF0  0E82               	movlw	130
 34210  01CAF2  6FDD               	movwf	221,b	;volatile
 34211                           
 34212                           ; BSR set to: 61
 34213                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 34214  01CAF4  0E06               	movlw	6
 34215  01CAF6  6FDE               	movwf	222,b	;volatile
 34216                           
 34217                           ; BSR set to: 61
 34218                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 34219  01CAF8  6BDF               	clrf	223,b	;volatile
 34220                           
 34221                           ; BSR set to: 61
 34222                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 34223  01CAFA  6BE0               	clrf	224,b	;volatile
 34224                           
 34225                           ; BSR set to: 61
 34226                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 34227  01CAFC  6BE1               	clrf	225,b	;volatile
 34228                           
 34229                           ; BSR set to: 61
 34230                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 34231  01CAFE  6BE2               	clrf	226,b	;volatile
 34232                           
 34233                           ; BSR set to: 61
 34234                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 34235  01CB00  0100               	movlb	0	; () banked
 34236  01CB02  6BA8               	clrf	_uart2TxHead& (0+255),b	;volatile
 34237                           
 34238                           ; BSR set to: 0
 34239                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 34240  01CB04  6A46               	clrf	_uart2TxTail^0,c	;volatile
 34241                           
 34242                           ; BSR set to: 0
 34243                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 34244  01CB06  0E40               	movlw	64
 34245  01CB08  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 34246                           
 34247                           ; BSR set to: 0
 34248                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 34249  01CB0A  6A44               	clrf	_uart2RxHead^0,c	;volatile
 34250                           
 34251                           ; BSR set to: 0
 34252                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 34253  01CB0C  6BA7               	clrf	_uart2RxTail& (0+255),b	;volatile
 34254                           
 34255                           ; BSR set to: 0
 34256                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 34257  01CB0E  6BA6               	clrf	_uart2RxCount& (0+255),b	;volatile
 34258                           
 34259                           ; BSR set to: 0
 34260                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 34261  01CB10  0139               	movlb	57	; () banked
 34262  01CB12  8596               	bsf	150,2,b	;volatile
 34263                           
 34264                           ; BSR set to: 57
 34265                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34266  01CB14  0012               	return		;funcret
 34267  01CB16                     __end_of_UART2_Initialize:
 34268                           	opt callstack 0
 34269                           
 34270 ;; *************** function _UART2_SetTxInterruptHandler *****************
 34271 ;; Defined at:
 34272 ;;		line 252 in file "mcc_generated_files/uart2.c"
 34273 ;; Parameters:    Size  Location     Type
 34274 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34275 ;;		 -> UART2_Transmit_ISR(1), 
 34276 ;; Auto vars:     Size  Location     Type
 34277 ;;		None
 34278 ;; Return value:  Size  Location     Type
 34279 ;;                  1  [STACK] void 
 34280 ;; Registers used:
 34281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34282 ;; Tracked objects:
 34283 ;;		On entry : 3F/39
 34284 ;;		On exit  : 0/0
 34285 ;;		Unchanged: 0/0
 34286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34291 ;;Total ram usage:        0 bytes
 34292 ;; Hardware stack levels used:    1
 34293 ;; Hardware stack levels required when called:   15
 34294 ;; This function calls:
 34295 ;;		Nothing
 34296 ;; This function is called by:
 34297 ;;		_UART2_Initialize
 34298 ;; This function uses a reentrant model
 34299 ;;
 34300                           
 34301                           	psect	text131
 34302  01D5B6                     __ptext131:
 34303                           	opt callstack 0
 34304  01D5B6                     _UART2_SetTxInterruptHandler:
 34305                           	opt callstack 13
 34306                           
 34307                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 34308                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34309                           
 34310                           ; BSR set to: 57
 34311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34312                           ;incstack = 0
 34313  01D5B6  50E1               	movf	fsr1l,w,c
 34314  01D5B8  0FFD               	addlw	-3
 34315  01D5BA  6ED9               	movwf	fsr2l,c
 34316  01D5BC  50E2               	movf	fsr1h,w,c
 34317  01D5BE  6EDA               	movwf	fsr2h,c
 34318  01D5C0  0EFF               	movlw	255
 34319  01D5C2  22DA               	addwfc	fsr2h,f,c
 34320  01D5C4  006F FF78  F08A    	movff	postinc2,_UART2_TxInterruptHandler
 34321  01D5CA  006F FF78  F08B    	movff	postinc2,_UART2_TxInterruptHandler+1
 34322  01D5D0  006F FF74  F08C    	movff	postdec2,_UART2_TxInterruptHandler+2
 34323                           
 34324                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34325  01D5D6  52E5               	movf	postdec1,f,c
 34326  01D5D8  52E5               	movf	postdec1,f,c
 34327  01D5DA  52E5               	movf	postdec1,f,c
 34328  01D5DC  0012               	return		;funcret
 34329  01D5DE                     __end_of_UART2_SetTxInterruptHandler:
 34330                           	opt callstack 0
 34331                           
 34332 ;; *************** function _UART2_SetRxInterruptHandler *****************
 34333 ;; Defined at:
 34334 ;;		line 248 in file "mcc_generated_files/uart2.c"
 34335 ;; Parameters:    Size  Location     Type
 34336 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34337 ;;		 -> UART2_Receive_ISR(1), 
 34338 ;; Auto vars:     Size  Location     Type
 34339 ;;		None
 34340 ;; Return value:  Size  Location     Type
 34341 ;;                  1  [STACK] void 
 34342 ;; Registers used:
 34343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34344 ;; Tracked objects:
 34345 ;;		On entry : 3F/39
 34346 ;;		On exit  : 0/0
 34347 ;;		Unchanged: 0/0
 34348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34353 ;;Total ram usage:        0 bytes
 34354 ;; Hardware stack levels used:    1
 34355 ;; Hardware stack levels required when called:   15
 34356 ;; This function calls:
 34357 ;;		Nothing
 34358 ;; This function is called by:
 34359 ;;		_UART2_Initialize
 34360 ;; This function uses a reentrant model
 34361 ;;
 34362                           
 34363                           	psect	text132
 34364  01D5DE                     __ptext132:
 34365                           	opt callstack 0
 34366  01D5DE                     _UART2_SetRxInterruptHandler:
 34367                           	opt callstack 13
 34368                           
 34369                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 34370                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34371                           
 34372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34373                           ;incstack = 0
 34374  01D5DE  50E1               	movf	fsr1l,w,c
 34375  01D5E0  0FFD               	addlw	-3
 34376  01D5E2  6ED9               	movwf	fsr2l,c
 34377  01D5E4  50E2               	movf	fsr1h,w,c
 34378  01D5E6  6EDA               	movwf	fsr2h,c
 34379  01D5E8  0EFF               	movlw	255
 34380  01D5EA  22DA               	addwfc	fsr2h,f,c
 34381  01D5EC  006F FF78  F08D    	movff	postinc2,_UART2_RxInterruptHandler
 34382  01D5F2  006F FF78  F08E    	movff	postinc2,_UART2_RxInterruptHandler+1
 34383  01D5F8  006F FF74  F08F    	movff	postdec2,_UART2_RxInterruptHandler+2
 34384                           
 34385                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34386  01D5FE  52E5               	movf	postdec1,f,c
 34387  01D600  52E5               	movf	postdec1,f,c
 34388  01D602  52E5               	movf	postdec1,f,c
 34389  01D604  0012               	return		;funcret
 34390  01D606                     __end_of_UART2_SetRxInterruptHandler:
 34391                           	opt callstack 0
 34392                           
 34393 ;; *************** function _UART1_Initialize *****************
 34394 ;; Defined at:
 34395 ;;		line 75 in file "mcc_generated_files/uart1.c"
 34396 ;; Parameters:    Size  Location     Type
 34397 ;;		None
 34398 ;; Auto vars:     Size  Location     Type
 34399 ;;		None
 34400 ;; Return value:  Size  Location     Type
 34401 ;;                  1  [STACK] void 
 34402 ;; Registers used:
 34403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34404 ;; Tracked objects:
 34405 ;;		On entry : 0/39
 34406 ;;		On exit  : 3F/39
 34407 ;;		Unchanged: 0/0
 34408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34413 ;;Total ram usage:        0 bytes
 34414 ;; Hardware stack levels used:    1
 34415 ;; Hardware stack levels required when called:   16
 34416 ;; This function calls:
 34417 ;;		_UART1_SetRxInterruptHandler
 34418 ;; This function is called by:
 34419 ;;		_SYSTEM_Initialize
 34420 ;; This function uses a reentrant model
 34421 ;;
 34422                           
 34423                           	psect	text133
 34424  01CE44                     __ptext133:
 34425                           	opt callstack 0
 34426  01CE44                     _UART1_Initialize:
 34427                           	opt callstack 13
 34428                           
 34429                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 34430                           
 34431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34432                           ;incstack = 0
 34433  01CE44  0139               	movlb	57	; () banked
 34434  01CE46  9793               	bcf	147,3,b	;volatile
 34435                           
 34436                           ; BSR set to: 57
 34437                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 34438  01CE48  0EDC               	movlw	low _UART1_Receive_ISR
 34439  01CE4A  6EE6               	movwf	postinc1,c
 34440  01CE4C  0ED8               	movlw	high _UART1_Receive_ISR
 34441  01CE4E  6EE6               	movwf	postinc1,c
 34442  01CE50  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 34443  01CE52  6EE6               	movwf	postinc1,c
 34444  01CE54  EC03  F0EB         	call	_UART1_SetRxInterruptHandler	;wreg free
 34445                           
 34446                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 34447  01CE58  013D               	movlb	61	; () banked
 34448  01CE5A  6BEC               	clrf	236,b	;volatile
 34449                           
 34450                           ; BSR set to: 61
 34451                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 34452  01CE5C  6BED               	clrf	237,b	;volatile
 34453                           
 34454                           ; BSR set to: 61
 34455                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 34456  01CE5E  6BEE               	clrf	238,b	;volatile
 34457                           
 34458                           ; BSR set to: 61
 34459                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 34460  01CE60  6BEF               	clrf	239,b	;volatile
 34461                           
 34462                           ; BSR set to: 61
 34463                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 34464  01CE62  6BF0               	clrf	240,b	;volatile
 34465                           
 34466                           ; BSR set to: 61
 34467                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 34468  01CE64  6BF1               	clrf	241,b	;volatile
 34469                           
 34470                           ; BSR set to: 61
 34471                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 34472  01CE66  0EB0               	movlw	176
 34473  01CE68  6FF2               	movwf	242,b	;volatile
 34474                           
 34475                           ; BSR set to: 61
 34476                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 34477  01CE6A  0E80               	movlw	128
 34478  01CE6C  6FF3               	movwf	243,b	;volatile
 34479                           
 34480                           ; BSR set to: 61
 34481                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 34482  01CE6E  6BF4               	clrf	244,b	;volatile
 34483                           
 34484                           ; BSR set to: 61
 34485                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 34486  01CE70  0E8A               	movlw	138
 34487  01CE72  6FF5               	movwf	245,b	;volatile
 34488                           
 34489                           ; BSR set to: 61
 34490                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 34491  01CE74  6BF6               	clrf	246,b	;volatile
 34492                           
 34493                           ; BSR set to: 61
 34494                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 34495  01CE76  6BF7               	clrf	247,b	;volatile
 34496                           
 34497                           ; BSR set to: 61
 34498                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 34499  01CE78  6BF8               	clrf	248,b	;volatile
 34500                           
 34501                           ; BSR set to: 61
 34502                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 34503  01CE7A  6BF9               	clrf	249,b	;volatile
 34504                           
 34505                           ; BSR set to: 61
 34506                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 34507  01CE7C  6BFA               	clrf	250,b	;volatile
 34508                           
 34509                           ; BSR set to: 61
 34510                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 34511  01CE7E  6A47               	clrf	_uart1RxHead^0,c	;volatile
 34512                           
 34513                           ; BSR set to: 61
 34514                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 34515  01CE80  0100               	movlb	0	; () banked
 34516  01CE82  6BAA               	clrf	_uart1RxTail& (0+255),b	;volatile
 34517                           
 34518                           ; BSR set to: 0
 34519                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 34520  01CE84  6BA9               	clrf	_uart1RxCount& (0+255),b	;volatile
 34521                           
 34522                           ; BSR set to: 0
 34523                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 34524  01CE86  0139               	movlb	57	; () banked
 34525  01CE88  8793               	bsf	147,3,b	;volatile
 34526                           
 34527                           ; BSR set to: 57
 34528                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 34529  01CE8A  0012               	return		;funcret
 34530  01CE8C                     __end_of_UART1_Initialize:
 34531                           	opt callstack 0
 34532                           
 34533 ;; *************** function _UART1_SetRxInterruptHandler *****************
 34534 ;; Defined at:
 34535 ;;		line 207 in file "mcc_generated_files/uart1.c"
 34536 ;; Parameters:    Size  Location     Type
 34537 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34538 ;;		 -> UART1_Receive_ISR(1), 
 34539 ;; Auto vars:     Size  Location     Type
 34540 ;;		None
 34541 ;; Return value:  Size  Location     Type
 34542 ;;                  1  [STACK] void 
 34543 ;; Registers used:
 34544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34545 ;; Tracked objects:
 34546 ;;		On entry : 3F/39
 34547 ;;		On exit  : 0/0
 34548 ;;		Unchanged: 0/0
 34549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34554 ;;Total ram usage:        0 bytes
 34555 ;; Hardware stack levels used:    1
 34556 ;; Hardware stack levels required when called:   15
 34557 ;; This function calls:
 34558 ;;		Nothing
 34559 ;; This function is called by:
 34560 ;;		_UART1_Initialize
 34561 ;; This function uses a reentrant model
 34562 ;;
 34563                           
 34564                           	psect	text134
 34565  01D606                     __ptext134:
 34566                           	opt callstack 0
 34567  01D606                     _UART1_SetRxInterruptHandler:
 34568                           	opt callstack 13
 34569                           
 34570                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 34571                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34572                           
 34573                           ; BSR set to: 57
 34574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34575                           ;incstack = 0
 34576  01D606  50E1               	movf	fsr1l,w,c
 34577  01D608  0FFD               	addlw	-3
 34578  01D60A  6ED9               	movwf	fsr2l,c
 34579  01D60C  50E2               	movf	fsr1h,w,c
 34580  01D60E  6EDA               	movwf	fsr2h,c
 34581  01D610  0EFF               	movlw	255
 34582  01D612  22DA               	addwfc	fsr2h,f,c
 34583  01D614  006F FF78  F087    	movff	postinc2,_UART1_RxInterruptHandler
 34584  01D61A  006F FF78  F088    	movff	postinc2,_UART1_RxInterruptHandler+1
 34585  01D620  006F FF74  F089    	movff	postdec2,_UART1_RxInterruptHandler+2
 34586                           
 34587                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34588  01D626  52E5               	movf	postdec1,f,c
 34589  01D628  52E5               	movf	postdec1,f,c
 34590  01D62A  52E5               	movf	postdec1,f,c
 34591  01D62C  0012               	return		;funcret
 34592  01D62E                     __end_of_UART1_SetRxInterruptHandler:
 34593                           	opt callstack 0
 34594                           
 34595 ;; *************** function _TMR6_Initialize *****************
 34596 ;; Defined at:
 34597 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 34598 ;; Parameters:    Size  Location     Type
 34599 ;;		None
 34600 ;; Auto vars:     Size  Location     Type
 34601 ;;		None
 34602 ;; Return value:  Size  Location     Type
 34603 ;;                  1  [STACK] void 
 34604 ;; Registers used:
 34605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34606 ;; Tracked objects:
 34607 ;;		On entry : 3F/39
 34608 ;;		On exit  : 0/0
 34609 ;;		Unchanged: 0/0
 34610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34615 ;;Total ram usage:        0 bytes
 34616 ;; Hardware stack levels used:    1
 34617 ;; Hardware stack levels required when called:   16
 34618 ;; This function calls:
 34619 ;;		_TMR6_SetInterruptHandler
 34620 ;; This function is called by:
 34621 ;;		_SYSTEM_Initialize
 34622 ;; This function uses a reentrant model
 34623 ;;
 34624                           
 34625                           	psect	text135
 34626  01D53C                     __ptext135:
 34627                           	opt callstack 0
 34628  01D53C                     _TMR6_Initialize:
 34629                           	opt callstack 13
 34630                           
 34631                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 34632                           
 34633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34634                           ;incstack = 0
 34635  01D53C  0E01               	movlw	1
 34636  01D53E  6E96               	movwf	150,c	;volatile
 34637                           
 34638                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 34639  01D540  6A95               	clrf	149,c	;volatile
 34640                           
 34641                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 34642  01D542  6A97               	clrf	151,c	;volatile
 34643                           
 34644                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 34645  01D544  0E7C               	movlw	124
 34646  01D546  6E93               	movwf	147,c	;volatile
 34647                           
 34648                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 34649  01D548  6A92               	clrf	146,c	;volatile
 34650                           
 34651                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 34652  01D54A  0139               	movlb	57	; () banked
 34653  01D54C  91A9               	bcf	169,0,b	;volatile
 34654                           
 34655                           ; BSR set to: 57
 34656                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 34657  01D54E  8199               	bsf	153,0,b	;volatile
 34658                           
 34659                           ; BSR set to: 57
 34660                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 34661  01D550  0E64               	movlw	low _TMR6_DefaultInterruptHandler
 34662  01D552  6EE6               	movwf	postinc1,c
 34663  01D554  0ECD               	movlw	high _TMR6_DefaultInterruptHandler
 34664  01D556  6EE6               	movwf	postinc1,c
 34665  01D558  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 34666  01D55A  6EE6               	movwf	postinc1,c
 34667  01D55C  EC17  F0EB         	call	_TMR6_SetInterruptHandler	;wreg free
 34668                           
 34669                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 34670  01D560  0EE0               	movlw	224
 34671  01D562  6E94               	movwf	148,c	;volatile
 34672                           
 34673                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34674  01D564  0012               	return		;funcret
 34675  01D566                     __end_of_TMR6_Initialize:
 34676                           	opt callstack 0
 34677                           
 34678 ;; *************** function _TMR6_SetInterruptHandler *****************
 34679 ;; Defined at:
 34680 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 34681 ;; Parameters:    Size  Location     Type
 34682 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34683 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 34684 ;; Auto vars:     Size  Location     Type
 34685 ;;		None
 34686 ;; Return value:  Size  Location     Type
 34687 ;;                  1  [STACK] void 
 34688 ;; Registers used:
 34689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34690 ;; Tracked objects:
 34691 ;;		On entry : 3F/39
 34692 ;;		On exit  : 0/0
 34693 ;;		Unchanged: 0/0
 34694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34699 ;;Total ram usage:        0 bytes
 34700 ;; Hardware stack levels used:    1
 34701 ;; Hardware stack levels required when called:   15
 34702 ;; This function calls:
 34703 ;;		Nothing
 34704 ;; This function is called by:
 34705 ;;		_TMR6_Initialize
 34706 ;; This function uses a reentrant model
 34707 ;;
 34708                           
 34709                           	psect	text136
 34710  01D62E                     __ptext136:
 34711                           	opt callstack 0
 34712  01D62E                     _TMR6_SetInterruptHandler:
 34713                           	opt callstack 13
 34714                           
 34715                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 34716                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34717                           
 34718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34719                           ;incstack = 0
 34720  01D62E  50E1               	movf	fsr1l,w,c
 34721  01D630  0FFD               	addlw	-3
 34722  01D632  6ED9               	movwf	fsr2l,c
 34723  01D634  50E2               	movf	fsr1h,w,c
 34724  01D636  6EDA               	movwf	fsr2h,c
 34725  01D638  0EFF               	movlw	255
 34726  01D63A  22DA               	addwfc	fsr2h,f,c
 34727  01D63C  006F FF78  F07E    	movff	postinc2,_TMR6_InterruptHandler
 34728  01D642  006F FF78  F07F    	movff	postinc2,_TMR6_InterruptHandler+1
 34729  01D648  006F FF74  F080    	movff	postdec2,_TMR6_InterruptHandler+2
 34730                           
 34731                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34732  01D64E  52E5               	movf	postdec1,f,c
 34733  01D650  52E5               	movf	postdec1,f,c
 34734  01D652  52E5               	movf	postdec1,f,c
 34735  01D654  0012               	return		;funcret
 34736  01D656                     __end_of_TMR6_SetInterruptHandler:
 34737                           	opt callstack 0
 34738                           
 34739 ;; *************** function _TMR5_Initialize *****************
 34740 ;; Defined at:
 34741 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 34742 ;; Parameters:    Size  Location     Type
 34743 ;;		None
 34744 ;; Auto vars:     Size  Location     Type
 34745 ;;		None
 34746 ;; Return value:  Size  Location     Type
 34747 ;;                  1  [STACK] void 
 34748 ;; Registers used:
 34749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 34750 ;; Tracked objects:
 34751 ;;		On entry : 0/39
 34752 ;;		On exit  : 0/0
 34753 ;;		Unchanged: 0/0
 34754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34759 ;;Total ram usage:        0 bytes
 34760 ;; Hardware stack levels used:    1
 34761 ;; Hardware stack levels required when called:   16
 34762 ;; This function calls:
 34763 ;;		_TMR5_SetInterruptHandler
 34764 ;; This function is called by:
 34765 ;;		_SYSTEM_Initialize
 34766 ;; This function uses a reentrant model
 34767 ;;
 34768                           
 34769                           	psect	text137
 34770  01CE8C                     __ptext137:
 34771                           	opt callstack 0
 34772  01CE8C                     _TMR5_Initialize:
 34773                           	opt callstack 13
 34774                           
 34775                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 34776                           
 34777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34778                           ;incstack = 0
 34779  01CE8C  6A9B               	clrf	155,c	;volatile
 34780                           
 34781                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 34782  01CE8E  6A9C               	clrf	156,c	;volatile
 34783                           
 34784                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 34785  01CE90  0E01               	movlw	1
 34786  01CE92  6E9D               	movwf	157,c	;volatile
 34787                           
 34788                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 34789  01CE94  0E63               	movlw	99
 34790  01CE96  6E99               	movwf	153,c	;volatile
 34791                           
 34792                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 34793  01CE98  0EC0               	movlw	192
 34794  01CE9A  6E98               	movwf	152,c	;volatile
 34795                           
 34796                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 34797  01CE9C  5098               	movf	152,w,c	;volatile
 34798  01CE9E  006F FE64  F001    	movff	16281,btemp	;volatile
 34799  01CEA4  6A02               	clrf	(btemp+1)^0,c
 34800  01CEA6  0060  F004  F002   	movff	btemp,btemp+1
 34801  01CEAC  6A01               	clrf	btemp^0,c
 34802  01CEAE  1001               	iorwf	btemp^0,w,c
 34803  01CEB0  0100               	movlb	0	; () banked
 34804  01CEB2  6F9E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 34805  01CEB4  5002               	movf	(btemp+1)^0,w,c
 34806  01CEB6  6F9F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 34807                           
 34808                           ; BSR set to: 0
 34809                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 34810  01CEB8  0139               	movlb	57	; () banked
 34811  01CEBA  9DA8               	bcf	168,6,b	;volatile
 34812                           
 34813                           ; BSR set to: 57
 34814                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 34815  01CEBC  8D98               	bsf	152,6,b	;volatile
 34816                           
 34817                           ; BSR set to: 57
 34818                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 34819  01CEBE  0E5A               	movlw	low _TMR5_DefaultInterruptHandler
 34820  01CEC0  6EE6               	movwf	postinc1,c
 34821  01CEC2  0ED2               	movlw	high _TMR5_DefaultInterruptHandler
 34822  01CEC4  6EE6               	movwf	postinc1,c
 34823  01CEC6  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 34824  01CEC8  6EE6               	movwf	postinc1,c
 34825  01CECA  EC2B  F0EB         	call	_TMR5_SetInterruptHandler	;wreg free
 34826                           
 34827                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 34828  01CECE  0E31               	movlw	49
 34829  01CED0  6E9A               	movwf	154,c	;volatile
 34830                           
 34831                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34832  01CED2  0012               	return		;funcret
 34833  01CED4                     __end_of_TMR5_Initialize:
 34834                           	opt callstack 0
 34835                           
 34836 ;; *************** function _TMR5_SetInterruptHandler *****************
 34837 ;; Defined at:
 34838 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 34839 ;; Parameters:    Size  Location     Type
 34840 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34841 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 34842 ;; Auto vars:     Size  Location     Type
 34843 ;;		None
 34844 ;; Return value:  Size  Location     Type
 34845 ;;                  1  [STACK] void 
 34846 ;; Registers used:
 34847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34848 ;; Tracked objects:
 34849 ;;		On entry : 3F/39
 34850 ;;		On exit  : 0/0
 34851 ;;		Unchanged: 0/0
 34852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34857 ;;Total ram usage:        0 bytes
 34858 ;; Hardware stack levels used:    1
 34859 ;; Hardware stack levels required when called:   15
 34860 ;; This function calls:
 34861 ;;		Nothing
 34862 ;; This function is called by:
 34863 ;;		_TMR5_Initialize
 34864 ;; This function uses a reentrant model
 34865 ;;
 34866                           
 34867                           	psect	text138
 34868  01D656                     __ptext138:
 34869                           	opt callstack 0
 34870  01D656                     _TMR5_SetInterruptHandler:
 34871                           	opt callstack 13
 34872                           
 34873                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 34874                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34875                           
 34876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34877                           ;incstack = 0
 34878  01D656  50E1               	movf	fsr1l,w,c
 34879  01D658  0FFD               	addlw	-3
 34880  01D65A  6ED9               	movwf	fsr2l,c
 34881  01D65C  50E2               	movf	fsr1h,w,c
 34882  01D65E  6EDA               	movwf	fsr2h,c
 34883  01D660  0EFF               	movlw	255
 34884  01D662  22DA               	addwfc	fsr2h,f,c
 34885  01D664  006F FF78  F07B    	movff	postinc2,_TMR5_InterruptHandler
 34886  01D66A  006F FF78  F07C    	movff	postinc2,_TMR5_InterruptHandler+1
 34887  01D670  006F FF74  F07D    	movff	postdec2,_TMR5_InterruptHandler+2
 34888                           
 34889                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34890  01D676  52E5               	movf	postdec1,f,c
 34891  01D678  52E5               	movf	postdec1,f,c
 34892  01D67A  52E5               	movf	postdec1,f,c
 34893  01D67C  0012               	return		;funcret
 34894  01D67E                     __end_of_TMR5_SetInterruptHandler:
 34895                           	opt callstack 0
 34896                           
 34897 ;; *************** function _TMR3_Initialize *****************
 34898 ;; Defined at:
 34899 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 34900 ;; Parameters:    Size  Location     Type
 34901 ;;		None
 34902 ;; Auto vars:     Size  Location     Type
 34903 ;;		None
 34904 ;; Return value:  Size  Location     Type
 34905 ;;                  1  [STACK] void 
 34906 ;; Registers used:
 34907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 34908 ;; Tracked objects:
 34909 ;;		On entry : 0/39
 34910 ;;		On exit  : 0/0
 34911 ;;		Unchanged: 0/0
 34912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34917 ;;Total ram usage:        0 bytes
 34918 ;; Hardware stack levels used:    1
 34919 ;; Hardware stack levels required when called:   16
 34920 ;; This function calls:
 34921 ;;		_TMR3_SetInterruptHandler
 34922 ;; This function is called by:
 34923 ;;		_SYSTEM_Initialize
 34924 ;; This function uses a reentrant model
 34925 ;;
 34926                           
 34927                           	psect	text139
 34928  01CED4                     __ptext139:
 34929                           	opt callstack 0
 34930  01CED4                     _TMR3_Initialize:
 34931                           	opt callstack 13
 34932                           
 34933                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 34934                           
 34935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34936                           ;incstack = 0
 34937  01CED4  6AA7               	clrf	167,c	;volatile
 34938                           
 34939                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 34940  01CED6  6AA8               	clrf	168,c	;volatile
 34941                           
 34942                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 34943  01CED8  0E01               	movlw	1
 34944  01CEDA  6EA9               	movwf	169,c	;volatile
 34945                           
 34946                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 34947  01CEDC  0E3C               	movlw	60
 34948  01CEDE  6EA5               	movwf	165,c	;volatile
 34949                           
 34950                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 34951  01CEE0  0EB0               	movlw	176
 34952  01CEE2  6EA4               	movwf	164,c	;volatile
 34953                           
 34954                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 34955  01CEE4  50A4               	movf	164,w,c	;volatile
 34956  01CEE6  006F FE94  F001    	movff	16293,btemp	;volatile
 34957  01CEEC  6A02               	clrf	(btemp+1)^0,c
 34958  01CEEE  0060  F004  F002   	movff	btemp,btemp+1
 34959  01CEF4  6A01               	clrf	btemp^0,c
 34960  01CEF6  1001               	iorwf	btemp^0,w,c
 34961  01CEF8  0100               	movlb	0	; () banked
 34962  01CEFA  6F9A               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 34963  01CEFC  5002               	movf	(btemp+1)^0,w,c
 34964  01CEFE  6F9B               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 34965                           
 34966                           ; BSR set to: 0
 34967                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 34968  01CF00  0139               	movlb	57	; () banked
 34969  01CF02  9DA6               	bcf	166,6,b	;volatile
 34970                           
 34971                           ; BSR set to: 57
 34972                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 34973  01CF04  8D96               	bsf	150,6,b	;volatile
 34974                           
 34975                           ; BSR set to: 57
 34976                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 34977  01CF06  0EE8               	movlw	low _TMR3_DefaultInterruptHandler
 34978  01CF08  6EE6               	movwf	postinc1,c
 34979  01CF0A  0EDB               	movlw	high _TMR3_DefaultInterruptHandler
 34980  01CF0C  6EE6               	movwf	postinc1,c
 34981  01CF0E  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 34982  01CF10  6EE6               	movwf	postinc1,c
 34983  01CF12  EC3F  F0EB         	call	_TMR3_SetInterruptHandler	;wreg free
 34984                           
 34985                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 34986  01CF16  0E31               	movlw	49
 34987  01CF18  6EA6               	movwf	166,c	;volatile
 34988                           
 34989                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34990  01CF1A  0012               	return		;funcret
 34991  01CF1C                     __end_of_TMR3_Initialize:
 34992                           	opt callstack 0
 34993                           
 34994 ;; *************** function _TMR3_SetInterruptHandler *****************
 34995 ;; Defined at:
 34996 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 34997 ;; Parameters:    Size  Location     Type
 34998 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34999 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 35000 ;; Auto vars:     Size  Location     Type
 35001 ;;		None
 35002 ;; Return value:  Size  Location     Type
 35003 ;;                  1  [STACK] void 
 35004 ;; Registers used:
 35005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35006 ;; Tracked objects:
 35007 ;;		On entry : 0/0
 35008 ;;		On exit  : 0/0
 35009 ;;		Unchanged: 0/0
 35010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35015 ;;Total ram usage:        0 bytes
 35016 ;; Hardware stack levels used:    1
 35017 ;; Hardware stack levels required when called:   15
 35018 ;; This function calls:
 35019 ;;		Nothing
 35020 ;; This function is called by:
 35021 ;;		_TMR3_Initialize
 35022 ;;		_init_bsoc
 35023 ;; This function uses a reentrant model
 35024 ;;
 35025                           
 35026                           	psect	text140
 35027  01D67E                     __ptext140:
 35028                           	opt callstack 0
 35029  01D67E                     _TMR3_SetInterruptHandler:
 35030                           	opt callstack 14
 35031                           
 35032                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 35033                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35034                           
 35035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35036                           ;incstack = 0
 35037  01D67E  50E1               	movf	fsr1l,w,c
 35038  01D680  0FFD               	addlw	-3
 35039  01D682  6ED9               	movwf	fsr2l,c
 35040  01D684  50E2               	movf	fsr1h,w,c
 35041  01D686  6EDA               	movwf	fsr2h,c
 35042  01D688  0EFF               	movlw	255
 35043  01D68A  22DA               	addwfc	fsr2h,f,c
 35044  01D68C  006F FF78  F078    	movff	postinc2,_TMR3_InterruptHandler
 35045  01D692  006F FF78  F079    	movff	postinc2,_TMR3_InterruptHandler+1
 35046  01D698  006F FF74  F07A    	movff	postdec2,_TMR3_InterruptHandler+2
 35047                           
 35048                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35049  01D69E  52E5               	movf	postdec1,f,c
 35050  01D6A0  52E5               	movf	postdec1,f,c
 35051  01D6A2  52E5               	movf	postdec1,f,c
 35052  01D6A4  0012               	return		;funcret
 35053  01D6A6                     __end_of_TMR3_SetInterruptHandler:
 35054                           	opt callstack 0
 35055                           
 35056 ;; *************** function _TMR2_Initialize *****************
 35057 ;; Defined at:
 35058 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 35059 ;; Parameters:    Size  Location     Type
 35060 ;;		None
 35061 ;; Auto vars:     Size  Location     Type
 35062 ;;		None
 35063 ;; Return value:  Size  Location     Type
 35064 ;;                  1  [STACK] void 
 35065 ;; Registers used:
 35066 ;;		wreg, status,2
 35067 ;; Tracked objects:
 35068 ;;		On entry : 3F/3F
 35069 ;;		On exit  : 3F/39
 35070 ;;		Unchanged: 0/0
 35071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35076 ;;Total ram usage:        0 bytes
 35077 ;; Hardware stack levels used:    1
 35078 ;; Hardware stack levels required when called:   15
 35079 ;; This function calls:
 35080 ;;		Nothing
 35081 ;; This function is called by:
 35082 ;;		_SYSTEM_Initialize
 35083 ;; This function uses a reentrant model
 35084 ;;
 35085                           
 35086                           	psect	text141
 35087  01DA22                     __ptext141:
 35088                           	opt callstack 0
 35089  01DA22                     _TMR2_Initialize:
 35090                           	opt callstack 14
 35091                           
 35092                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 35093                           
 35094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35095                           ;incstack = 0
 35096  01DA22  0E01               	movlw	1
 35097  01DA24  6EAE               	movwf	174,c	;volatile
 35098                           
 35099                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 35100  01DA26  6AAD               	clrf	173,c	;volatile
 35101                           
 35102                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 35103  01DA28  6AAF               	clrf	175,c	;volatile
 35104                           
 35105                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 35106  01DA2A  0E63               	movlw	99
 35107  01DA2C  6EAB               	movwf	171,c	;volatile
 35108                           
 35109                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 35110  01DA2E  6AAA               	clrf	170,c	;volatile
 35111                           
 35112                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 35113  01DA30  0139               	movlb	57	; () banked
 35114  01DA32  95A4               	bcf	164,2,b	;volatile
 35115                           
 35116                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 35117  01DA34  0EC0               	movlw	192
 35118  01DA36  6EAC               	movwf	172,c	;volatile
 35119                           
 35120                           ; BSR set to: 57
 35121                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35122  01DA38  0012               	return		;funcret
 35123  01DA3A                     __end_of_TMR2_Initialize:
 35124                           	opt callstack 0
 35125                           
 35126 ;; *************** function _SPI1_Initialize *****************
 35127 ;; Defined at:
 35128 ;;		line 64 in file "mcc_generated_files/spi1.c"
 35129 ;; Parameters:    Size  Location     Type
 35130 ;;		None
 35131 ;; Auto vars:     Size  Location     Type
 35132 ;;		None
 35133 ;; Return value:  Size  Location     Type
 35134 ;;                  1  [STACK] void 
 35135 ;; Registers used:
 35136 ;;		wreg, status,2
 35137 ;; Tracked objects:
 35138 ;;		On entry : 3F/39
 35139 ;;		On exit  : 3F/3D
 35140 ;;		Unchanged: 0/0
 35141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35146 ;;Total ram usage:        0 bytes
 35147 ;; Hardware stack levels used:    1
 35148 ;; Hardware stack levels required when called:   15
 35149 ;; This function calls:
 35150 ;;		Nothing
 35151 ;; This function is called by:
 35152 ;;		_SYSTEM_Initialize
 35153 ;; This function uses a reentrant model
 35154 ;;
 35155                           
 35156                           	psect	text142
 35157  01DA50                     __ptext142:
 35158                           	opt callstack 0
 35159  01DA50                     _SPI1_Initialize:
 35160                           	opt callstack 14
 35161                           
 35162                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 35163                           
 35164                           ; BSR set to: 57
 35165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35166                           ;incstack = 0
 35167  01DA50  0E40               	movlw	64
 35168  01DA52  013D               	movlb	61	; () banked
 35169  01DA54  6F15               	movwf	21,b	;volatile
 35170                           
 35171                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 35172  01DA56  0E03               	movlw	3
 35173  01DA58  6F16               	movwf	22,b	;volatile
 35174                           
 35175                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 35176  01DA5A  0E4F               	movlw	79
 35177  01DA5C  6F19               	movwf	25,b	;volatile
 35178                           
 35179                           ; BSR set to: 61
 35180                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 35181  01DA5E  6B1C               	clrf	28,b	;volatile
 35182                           
 35183                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 35184  01DA60  0E83               	movlw	131
 35185  01DA62  6F14               	movwf	20,b	;volatile
 35186                           
 35187                           ; BSR set to: 61
 35188                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35189  01DA64  0012               	return		;funcret
 35190  01DA66                     __end_of_SPI1_Initialize:
 35191                           	opt callstack 0
 35192                           
 35193 ;; *************** function _PWM8_Initialize *****************
 35194 ;; Defined at:
 35195 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 35196 ;; Parameters:    Size  Location     Type
 35197 ;;		None
 35198 ;; Auto vars:     Size  Location     Type
 35199 ;;		None
 35200 ;; Return value:  Size  Location     Type
 35201 ;;                  1  [STACK] void 
 35202 ;; Registers used:
 35203 ;;		wreg, status,2
 35204 ;; Tracked objects:
 35205 ;;		On entry : 0/0
 35206 ;;		On exit  : 3F/3F
 35207 ;;		Unchanged: 0/0
 35208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35213 ;;Total ram usage:        0 bytes
 35214 ;; Hardware stack levels used:    1
 35215 ;; Hardware stack levels required when called:   15
 35216 ;; This function calls:
 35217 ;;		Nothing
 35218 ;; This function is called by:
 35219 ;;		_SYSTEM_Initialize
 35220 ;; This function uses a reentrant model
 35221 ;;
 35222                           
 35223                           	psect	text143
 35224  01DA66                     __ptext143:
 35225                           	opt callstack 0
 35226  01DA66                     _PWM8_Initialize:
 35227                           	opt callstack 14
 35228                           
 35229                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 35230                           
 35231                           ; BSR set to: 61
 35232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35233                           ;incstack = 0
 35234  01DA66  0E80               	movlw	128
 35235  01DA68  6E62               	movwf	98,c	;volatile
 35236                           
 35237                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 35238  01DA6A  6A61               	clrf	97,c	;volatile
 35239                           
 35240                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 35241  01DA6C  0E40               	movlw	64
 35242  01DA6E  6E60               	movwf	96,c	;volatile
 35243                           
 35244                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 35245  01DA70  013F               	movlb	63	; () banked
 35246  01DA72  515F               	movf	95,w,b	;volatile
 35247  01DA74  0B3F               	andlw	-193
 35248  01DA76  0940               	iorlw	64
 35249  01DA78  6F5F               	movwf	95,b	;volatile
 35250                           
 35251                           ; BSR set to: 63
 35252                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35253  01DA7A  0012               	return		;funcret
 35254  01DA7C                     __end_of_PWM8_Initialize:
 35255                           	opt callstack 0
 35256                           
 35257 ;; *************** function _PMD_Initialize *****************
 35258 ;; Defined at:
 35259 ;;		line 91 in file "mcc_generated_files/mcc.c"
 35260 ;; Parameters:    Size  Location     Type
 35261 ;;		None
 35262 ;; Auto vars:     Size  Location     Type
 35263 ;;		None
 35264 ;; Return value:  Size  Location     Type
 35265 ;;                  1  [STACK] void 
 35266 ;; Registers used:
 35267 ;;		None
 35268 ;; Tracked objects:
 35269 ;;		On entry : 3F/39
 35270 ;;		On exit  : 3F/39
 35271 ;;		Unchanged: 0/0
 35272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35277 ;;Total ram usage:        0 bytes
 35278 ;; Hardware stack levels used:    1
 35279 ;; Hardware stack levels required when called:   15
 35280 ;; This function calls:
 35281 ;;		Nothing
 35282 ;; This function is called by:
 35283 ;;		_SYSTEM_Initialize
 35284 ;; This function uses a reentrant model
 35285 ;;
 35286                           
 35287                           	psect	text144
 35288  01DA92                     __ptext144:
 35289                           	opt callstack 0
 35290  01DA92                     _PMD_Initialize:
 35291                           	opt callstack 14
 35292                           
 35293                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 35294                           
 35295                           ; BSR set to: 63
 35296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35297                           ;incstack = 0
 35298  01DA92  0139               	movlb	57	; () banked
 35299  01DA94  6BC0               	clrf	192,b	;volatile
 35300                           
 35301                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 35302  01DA96  6BC1               	clrf	193,b	;volatile
 35303                           
 35304                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 35305  01DA98  6BC2               	clrf	194,b	;volatile
 35306                           
 35307                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 35308  01DA9A  6BC3               	clrf	195,b	;volatile
 35309                           
 35310                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 35311  01DA9C  6BC4               	clrf	196,b	;volatile
 35312                           
 35313                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 35314  01DA9E  6BC5               	clrf	197,b	;volatile
 35315                           
 35316                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 35317  01DAA0  6BC6               	clrf	198,b	;volatile
 35318                           
 35319                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 35320  01DAA2  6BC7               	clrf	199,b	;volatile
 35321                           
 35322                           ; BSR set to: 57
 35323                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35324  01DAA4  0012               	return		;funcret
 35325  01DAA6                     __end_of_PMD_Initialize:
 35326                           	opt callstack 0
 35327                           
 35328 ;; *************** function _PIN_MANAGER_Initialize *****************
 35329 ;; Defined at:
 35330 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 35331 ;; Parameters:    Size  Location     Type
 35332 ;;		None
 35333 ;; Auto vars:     Size  Location     Type
 35334 ;;		None
 35335 ;; Return value:  Size  Location     Type
 35336 ;;                  1  [STACK] void 
 35337 ;; Registers used:
 35338 ;;		wreg, status,2
 35339 ;; Tracked objects:
 35340 ;;		On entry : 3F/39
 35341 ;;		On exit  : 3F/3A
 35342 ;;		Unchanged: 0/0
 35343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35348 ;;Total ram usage:        0 bytes
 35349 ;; Hardware stack levels used:    1
 35350 ;; Hardware stack levels required when called:   15
 35351 ;; This function calls:
 35352 ;;		Nothing
 35353 ;; This function is called by:
 35354 ;;		_SYSTEM_Initialize
 35355 ;; This function uses a reentrant model
 35356 ;;
 35357                           
 35358                           	psect	text145
 35359  01C178                     __ptext145:
 35360                           	opt callstack 0
 35361  01C178                     _PIN_MANAGER_Initialize:
 35362                           	opt callstack 14
 35363                           
 35364                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 35365                           
 35366                           ; BSR set to: 57
 35367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35368                           ;incstack = 0
 35369  01C178  0E07               	movlw	7
 35370  01C17A  6EBE               	movwf	190,c	;volatile
 35371                           
 35372                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 35373  01C17C  6ABD               	clrf	189,c	;volatile
 35374                           
 35375                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 35376  01C17E  6ABA               	clrf	186,c	;volatile
 35377                           
 35378                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 35379  01C180  0E23               	movlw	35
 35380  01C182  6EBF               	movwf	191,c	;volatile
 35381                           
 35382                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 35383  01C184  6ABB               	clrf	187,c	;volatile
 35384                           
 35385                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 35386  01C186  0E07               	movlw	7
 35387  01C188  6EBC               	movwf	188,c	;volatile
 35388                           
 35389                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 35390  01C18A  6AC6               	clrf	198,c	;volatile
 35391                           
 35392                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 35393  01C18C  0E0C               	movlw	12
 35394  01C18E  6EC7               	movwf	199,c	;volatile
 35395                           
 35396                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 35397  01C190  68C2               	setf	194,c	;volatile
 35398                           
 35399                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 35400  01C192  0EBF               	movlw	191
 35401  01C194  6EC3               	movwf	195,c	;volatile
 35402                           
 35403                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 35404  01C196  0E90               	movlw	144
 35405  01C198  6EC4               	movwf	196,c	;volatile
 35406                           
 35407                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 35408  01C19A  0E0C               	movlw	12
 35409  01C19C  6EC5               	movwf	197,c	;volatile
 35410                           
 35411                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 35412  01C19E  013A               	movlb	58	; () banked
 35413  01C1A0  6B70               	clrf	112,b	;volatile
 35414                           
 35415                           ; BSR set to: 58
 35416                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 35417  01C1A2  6B60               	clrf	96,b	;volatile
 35418                           
 35419                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 35420  01C1A4  0E3C               	movlw	60
 35421  01C1A6  6F50               	movwf	80,b	;volatile
 35422                           
 35423                           ; BSR set to: 58
 35424                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 35425  01C1A8  6B80               	clrf	128,b	;volatile
 35426                           
 35427                           ; BSR set to: 58
 35428                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 35429  01C1AA  6B90               	clrf	144,b	;volatile
 35430                           
 35431                           ; BSR set to: 58
 35432                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 35433  01C1AC  6940               	setf	64,b	;volatile
 35434                           
 35435                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 35436  01C1AE  0E0C               	movlw	12
 35437  01C1B0  6F71               	movwf	113,b	;volatile
 35438                           
 35439                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 35440  01C1B2  0E0C               	movlw	12
 35441  01C1B4  6F91               	movwf	145,b	;volatile
 35442                           
 35443                           ; BSR set to: 58
 35444                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 35445  01C1B6  6B81               	clrf	129,b	;volatile
 35446                           
 35447                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 35448  01C1B8  0E83               	movlw	131
 35449  01C1BA  6F51               	movwf	81,b	;volatile
 35450                           
 35451                           ; BSR set to: 58
 35452                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 35453  01C1BC  6B41               	clrf	65,b	;volatile
 35454                           
 35455                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 35456  01C1BE  0E97               	movlw	151
 35457  01C1C0  6F61               	movwf	97,b	;volatile
 35458                           
 35459                           ; BSR set to: 58
 35460                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 35461  01C1C2  6B82               	clrf	130,b	;volatile
 35462                           
 35463                           ; BSR set to: 58
 35464                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 35465  01C1C4  6B92               	clrf	146,b	;volatile
 35466                           
 35467                           ; BSR set to: 58
 35468                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 35469  01C1C6  6B42               	clrf	66,b	;volatile
 35470                           
 35471                           ; BSR set to: 58
 35472                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 35473  01C1C8  6B52               	clrf	82,b	;volatile
 35474                           
 35475                           ; BSR set to: 58
 35476                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 35477  01C1CA  6B62               	clrf	98,b	;volatile
 35478                           
 35479                           ; BSR set to: 58
 35480                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 35481  01C1CC  6B72               	clrf	114,b	;volatile
 35482                           
 35483                           ; BSR set to: 58
 35484                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 35485  01C1CE  6943               	setf	67,b	;volatile
 35486                           
 35487                           ; BSR set to: 58
 35488                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 35489  01C1D0  6953               	setf	83,b	;volatile
 35490                           
 35491                           ; BSR set to: 58
 35492                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 35493  01C1D2  6963               	setf	99,b	;volatile
 35494                           
 35495                           ; BSR set to: 58
 35496                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 35497  01C1D4  6973               	setf	115,b	;volatile
 35498                           
 35499                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 35500  01C1D6  0E07               	movlw	7
 35501  01C1D8  6F83               	movwf	131,b	;volatile
 35502                           
 35503                           ; BSR set to: 58
 35504                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 35505  01C1DA  6993               	setf	147,b	;volatile
 35506                           
 35507                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 35508  01C1DC  0E0F               	movlw	15
 35509  01C1DE  6FE8               	movwf	232,b	;volatile
 35510                           
 35511                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 35512  01C1E0  0E13               	movlw	19
 35513  01C1E2  6FDE               	movwf	222,b	;volatile
 35514                           
 35515                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 35516  01C1E4  0E16               	movlw	22
 35517  01C1E6  6F0E               	movwf	14,b	;volatile
 35518                           
 35519                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 35520  01C1E8  0E1E               	movlw	30
 35521  01C1EA  6F13               	movwf	19,b	;volatile
 35522                           
 35523                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 35524  01C1EC  0E08               	movlw	8
 35525  01C1EE  6FC0               	movwf	192,b	;volatile
 35526                           
 35527                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 35528  01C1F0  0E10               	movlw	16
 35529  01C1F2  6F19               	movwf	25,b	;volatile
 35530                           
 35531                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 35532  01C1F4  0E09               	movlw	9
 35533  01C1F6  6FC1               	movwf	193,b	;volatile
 35534                           
 35535                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 35536  01C1F8  0E1F               	movlw	31
 35537  01C1FA  6F15               	movwf	21,b	;volatile
 35538                           
 35539                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 35540  01C1FC  0E13               	movlw	19
 35541  01C1FE  6F16               	movwf	22,b	;volatile
 35542                           
 35543                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 35544  01C200  0E17               	movlw	23
 35545  01C202  6FE5               	movwf	229,b	;volatile
 35546                           
 35547                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 35548  01C204  0E14               	movlw	20
 35549  01C206  6FDF               	movwf	223,b	;volatile
 35550                           
 35551                           ; BSR set to: 58
 35552                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 35553  01C208  0012               	return		;funcret
 35554  01C20A                     __end_of_PIN_MANAGER_Initialize:
 35555                           	opt callstack 0
 35556                           
 35557 ;; *************** function _OSCILLATOR_Initialize *****************
 35558 ;; Defined at:
 35559 ;;		line 73 in file "mcc_generated_files/mcc.c"
 35560 ;; Parameters:    Size  Location     Type
 35561 ;;		None
 35562 ;; Auto vars:     Size  Location     Type
 35563 ;;		None
 35564 ;; Return value:  Size  Location     Type
 35565 ;;                  1  [STACK] void 
 35566 ;; Registers used:
 35567 ;;		wreg, status,2
 35568 ;; Tracked objects:
 35569 ;;		On entry : 3F/3A
 35570 ;;		On exit  : 3F/39
 35571 ;;		Unchanged: 0/0
 35572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35577 ;;Total ram usage:        0 bytes
 35578 ;; Hardware stack levels used:    1
 35579 ;; Hardware stack levels required when called:   15
 35580 ;; This function calls:
 35581 ;;		Nothing
 35582 ;; This function is called by:
 35583 ;;		_SYSTEM_Initialize
 35584 ;; This function uses a reentrant model
 35585 ;;
 35586                           
 35587                           	psect	text146
 35588  01DA7C                     __ptext146:
 35589                           	opt callstack 0
 35590  01DA7C                     _OSCILLATOR_Initialize:
 35591                           	opt callstack 14
 35592                           
 35593                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 35594                           
 35595                           ; BSR set to: 58
 35596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35597                           ;incstack = 0
 35598  01DA7C  0E20               	movlw	32
 35599  01DA7E  0139               	movlb	57	; () banked
 35600  01DA80  6FD9               	movwf	217,b	;volatile
 35601                           
 35602                           ; BSR set to: 57
 35603                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 35604  01DA82  6BDB               	clrf	219,b	;volatile
 35605                           
 35606                           ; BSR set to: 57
 35607                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 35608  01DA84  6BDD               	clrf	221,b	;volatile
 35609                           
 35610                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 35611  01DA86  0E02               	movlw	2
 35612  01DA88  6FDF               	movwf	223,b	;volatile
 35613                           
 35614                           ; BSR set to: 57
 35615                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 35616  01DA8A  6BDE               	clrf	222,b	;volatile
 35617  01DA8C                     l171:
 35618                           
 35619                           ; BSR set to: 57
 35620                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 35621  01DA8C  B1DC               	btfsc	220,0,b	;volatile
 35622  01DA8E  0012               	return	
 35623  01DA90  D7FD               	goto	l171
 35624  01DA92                     __end_of_OSCILLATOR_Initialize:
 35625                           	opt callstack 0
 35626                           
 35627 ;; *************** function _INTERRUPT_Initialize *****************
 35628 ;; Defined at:
 35629 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 35630 ;; Parameters:    Size  Location     Type
 35631 ;;		None
 35632 ;; Auto vars:     Size  Location     Type
 35633 ;;  state           1  [STACK] _Bool 
 35634 ;; Return value:  Size  Location     Type
 35635 ;;                  1  [STACK] void 
 35636 ;; Registers used:
 35637 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 35638 ;; Tracked objects:
 35639 ;;		On entry : 0/0
 35640 ;;		On exit  : 3F/39
 35641 ;;		Unchanged: 0/0
 35642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35647 ;;Total ram usage:        0 bytes
 35648 ;; Hardware stack levels used:    1
 35649 ;; Hardware stack levels required when called:   15
 35650 ;; This function calls:
 35651 ;;		Nothing
 35652 ;; This function is called by:
 35653 ;;		_SYSTEM_Initialize
 35654 ;; This function uses a reentrant model
 35655 ;;
 35656                           
 35657                           	psect	text147
 35658  01C928                     __ptext147:
 35659                           	opt callstack 0
 35660  01C928                     _INTERRUPT_Initialize:
 35661                           	opt callstack 0
 35662                           
 35663                           ; BSR set to: 57
 35664                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35665  01C928  52E6               	movf	postinc1,f,c
 35666                           
 35667                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 35668                           
 35669                           ;incstack = 0
 35670  01C92A  8AD2               	bsf	210,5,c	;volatile
 35671                           
 35672                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 35673  01C92C  AED2               	btfss	16338,7,c	;volatile
 35674  01C92E  D003               	goto	u10170
 35675  01C930  6A0C               	clrf	(btemp+11)^0,c
 35676  01C932  2A0C               	incf	(btemp+11)^0,f,c
 35677  01C934  D001               	goto	u10188
 35678  01C936                     u10170:
 35679  01C936  6A0C               	clrf	(btemp+11)^0,c
 35680  01C938                     u10188:
 35681                           
 35682                           ;stkvar	_state @ sp[(-1)+0]
 35683  01C938  0EFF               	movlw	-1
 35684  01C93A  0060  F033  FFE3   	movff	btemp+11,plusw1
 35685                           
 35686                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 35687  01C940  9ED2               	bcf	16338,7,c	;volatile
 35688                           
 35689                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 35690  01C942  0E55               	movlw	85
 35691  01C944  6ED4               	movwf	212,c	;volatile
 35692                           
 35693                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 35694  01C946  0EAA               	movlw	170
 35695  01C948  6ED4               	movwf	212,c	;volatile
 35696                           
 35697                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 35698  01C94A  90D4               	bcf	212,0,c	;volatile
 35699                           
 35700                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 35701  01C94C  0138               	movlb	56	; () banked
 35702  01C94E  6B9F               	clrf	159,b	;volatile
 35703                           
 35704                           ; BSR set to: 56
 35705                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 35706  01C950  6B9E               	clrf	158,b	;volatile
 35707                           
 35708                           ; BSR set to: 56
 35709                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 35710  01C952  0E08               	movlw	8
 35711  01C954  6F9D               	movwf	157,b	;volatile
 35712                           
 35713                           ; BSR set to: 56
 35714                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 35715  01C956  0E55               	movlw	85
 35716  01C958  6ED4               	movwf	212,c	;volatile
 35717                           
 35718                           ; BSR set to: 56
 35719                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 35720  01C95A  0EAA               	movlw	170
 35721  01C95C  6ED4               	movwf	212,c	;volatile
 35722                           
 35723                           ; BSR set to: 56
 35724                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 35725  01C95E  80D4               	bsf	212,0,c	;volatile
 35726                           
 35727                           ; BSR set to: 56
 35728                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 35729                           ;stkvar	_state @ sp[(-1)+0]
 35730  01C960  0EFF               	movlw	-1
 35731  01C962  B0E3               	btfsc	plusw1,0,c
 35732  01C964  D002               	bra	u10195
 35733  01C966  9ED2               	bcf	16338,7,c	;volatile
 35734  01C968  D001               	bra	u10196
 35735  01C96A                     u10195:
 35736  01C96A  8ED2               	bsf	16338,7,c	;volatile
 35737  01C96C                     u10196:
 35738                           
 35739                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 35740  01C96C  0139               	movlb	57	; () banked
 35741  01C96E  8782               	bsf	130,3,b	;volatile
 35742                           
 35743                           ; BSR set to: 57
 35744                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 35745  01C970  8382               	bsf	130,1,b	;volatile
 35746                           
 35747                           ; BSR set to: 57
 35748                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 35749  01C972  8182               	bsf	130,0,b	;volatile
 35750                           
 35751                           ; BSR set to: 57
 35752                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 35753  01C974  8582               	bsf	130,2,b	;volatile
 35754                           
 35755                           ; BSR set to: 57
 35756                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 35757  01C976  8786               	bsf	134,3,b	;volatile
 35758                           
 35759                           ; BSR set to: 57
 35760                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 35761  01C978  8586               	bsf	134,2,b	;volatile
 35762                           
 35763                           ; BSR set to: 57
 35764                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 35765  01C97A  8783               	bsf	131,3,b	;volatile
 35766                           
 35767                           ; BSR set to: 57
 35768                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 35769  01C97C  8181               	bsf	129,0,b	;volatile
 35770                           
 35771                           ; BSR set to: 57
 35772                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 35773  01C97E  9185               	bcf	133,0,b	;volatile
 35774                           
 35775                           ; BSR set to: 57
 35776                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 35777  01C980  8189               	bsf	137,0,b	;volatile
 35778                           
 35779                           ; BSR set to: 57
 35780                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 35781  01C982  9D88               	bcf	136,6,b	;volatile
 35782                           
 35783                           ; BSR set to: 57
 35784                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 35785  01C984  9D86               	bcf	134,6,b	;volatile
 35786                           
 35787                           ; BSR set to: 57
 35788                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 35789  01C986  8581               	bsf	129,2,b	;volatile
 35790                           
 35791                           ; BSR set to: 57
 35792                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 35793  01C988  8781               	bsf	129,3,b	;volatile
 35794                           
 35795                           ; BSR set to: 57
 35796                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 35797  01C98A  52E5               	movf	postdec1,f,c
 35798  01C98C  0012               	return		;funcret
 35799  01C98E                     __end_of_INTERRUPT_Initialize:
 35800                           	opt callstack 0
 35801                           
 35802 ;; *************** function _FVR_Initialize *****************
 35803 ;; Defined at:
 35804 ;;		line 58 in file "mcc_generated_files/fvr.c"
 35805 ;; Parameters:    Size  Location     Type
 35806 ;;		None
 35807 ;; Auto vars:     Size  Location     Type
 35808 ;;		None
 35809 ;; Return value:  Size  Location     Type
 35810 ;;                  1  [STACK] void 
 35811 ;; Registers used:
 35812 ;;		wreg, status,2
 35813 ;; Tracked objects:
 35814 ;;		On entry : 3F/39
 35815 ;;		On exit  : 3F/3E
 35816 ;;		Unchanged: 0/0
 35817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35822 ;;Total ram usage:        0 bytes
 35823 ;; Hardware stack levels used:    1
 35824 ;; Hardware stack levels required when called:   15
 35825 ;; This function calls:
 35826 ;;		Nothing
 35827 ;; This function is called by:
 35828 ;;		_SYSTEM_Initialize
 35829 ;; This function uses a reentrant model
 35830 ;;
 35831                           
 35832                           	psect	text148
 35833  01DBBA                     __ptext148:
 35834                           	opt callstack 0
 35835  01DBBA                     _FVR_Initialize:
 35836                           	opt callstack 14
 35837                           
 35838                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 35839                           
 35840                           ; BSR set to: 57
 35841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35842                           ;incstack = 0
 35843  01DBBA  0EAF               	movlw	175
 35844  01DBBC  013E               	movlb	62	; () banked
 35845  01DBBE  6FC1               	movwf	193,b	;volatile
 35846                           
 35847                           ; BSR set to: 62
 35848                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35849  01DBC0  0012               	return		;funcret
 35850  01DBC2                     __end_of_FVR_Initialize:
 35851                           	opt callstack 0
 35852                           
 35853 ;; *************** function _EXT_INT_Initialize *****************
 35854 ;; Defined at:
 35855 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 35856 ;; Parameters:    Size  Location     Type
 35857 ;;		None
 35858 ;; Auto vars:     Size  Location     Type
 35859 ;;		None
 35860 ;; Return value:  Size  Location     Type
 35861 ;;                  1  [STACK] void 
 35862 ;; Registers used:
 35863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35864 ;; Tracked objects:
 35865 ;;		On entry : 3F/39
 35866 ;;		On exit  : 3F/39
 35867 ;;		Unchanged: 0/0
 35868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35873 ;;Total ram usage:        0 bytes
 35874 ;; Hardware stack levels used:    1
 35875 ;; Hardware stack levels required when called:   16
 35876 ;; This function calls:
 35877 ;;		_INT0_SetInterruptHandler
 35878 ;;		_INT1_SetInterruptHandler
 35879 ;; This function is called by:
 35880 ;;		_SYSTEM_Initialize
 35881 ;; This function uses a reentrant model
 35882 ;;
 35883                           
 35884                           	psect	text149
 35885  01D364                     __ptext149:
 35886                           	opt callstack 0
 35887  01D364                     _EXT_INT_Initialize:
 35888                           	opt callstack 13
 35889                           
 35890                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 35891                           
 35892                           ; BSR set to: 62
 35893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35894                           ;incstack = 0
 35895  01D364  0139               	movlb	57	; () banked
 35896  01D366  91A1               	bcf	161,0,b	;volatile
 35897                           
 35898                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 35899  01D368  90D2               	bcf	210,0,c	;volatile
 35900                           
 35901                           ; BSR set to: 57
 35902                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 35903  01D36A  0EEA               	movlw	low _INT0_DefaultInterruptHandler
 35904  01D36C  6EE6               	movwf	postinc1,c
 35905  01D36E  0EDB               	movlw	high _INT0_DefaultInterruptHandler
 35906  01D370  6EE6               	movwf	postinc1,c
 35907  01D372  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 35908  01D374  6EE6               	movwf	postinc1,c
 35909  01D376  EC67  F0EB         	call	_INT0_SetInterruptHandler	;wreg free
 35910                           
 35911                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 35912  01D37A  0139               	movlb	57	; () banked
 35913  01D37C  8191               	bsf	145,0,b	;volatile
 35914                           
 35915                           ; BSR set to: 57
 35916                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 35917  01D37E  91A5               	bcf	165,0,b	;volatile
 35918                           
 35919                           ; BSR set to: 57
 35920                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 35921  01D380  92D2               	bcf	210,1,c	;volatile
 35922                           
 35923                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 35924  01D382  0EE6               	movlw	low _INT1_DefaultInterruptHandler
 35925  01D384  6EE6               	movwf	postinc1,c
 35926  01D386  0EDB               	movlw	high _INT1_DefaultInterruptHandler
 35927  01D388  6EE6               	movwf	postinc1,c
 35928  01D38A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 35929  01D38C  6EE6               	movwf	postinc1,c
 35930  01D38E  EC53  F0EB         	call	_INT1_SetInterruptHandler	;wreg free
 35931                           
 35932                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 35933  01D392  0139               	movlb	57	; () banked
 35934  01D394  8195               	bsf	149,0,b	;volatile
 35935                           
 35936                           ; BSR set to: 57
 35937                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 35938  01D396  0012               	return		;funcret
 35939  01D398                     __end_of_EXT_INT_Initialize:
 35940                           	opt callstack 0
 35941                           
 35942 ;; *************** function _INT1_SetInterruptHandler *****************
 35943 ;; Defined at:
 35944 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 35945 ;; Parameters:    Size  Location     Type
 35946 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35947 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 35948 ;; Auto vars:     Size  Location     Type
 35949 ;;		None
 35950 ;; Return value:  Size  Location     Type
 35951 ;;                  1  [STACK] void 
 35952 ;; Registers used:
 35953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35954 ;; Tracked objects:
 35955 ;;		On entry : 3F/39
 35956 ;;		On exit  : 0/0
 35957 ;;		Unchanged: 0/0
 35958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35963 ;;Total ram usage:        0 bytes
 35964 ;; Hardware stack levels used:    1
 35965 ;; Hardware stack levels required when called:   15
 35966 ;; This function calls:
 35967 ;;		Nothing
 35968 ;; This function is called by:
 35969 ;;		_EXT_INT_Initialize
 35970 ;;		_start_switch_handler
 35971 ;; This function uses a reentrant model
 35972 ;;
 35973                           
 35974                           	psect	text150
 35975  01D6A6                     __ptext150:
 35976                           	opt callstack 0
 35977  01D6A6                     _INT1_SetInterruptHandler:
 35978                           	opt callstack 14
 35979                           
 35980                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 35981                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35982                           
 35983                           ; BSR set to: 57
 35984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35985                           ;incstack = 0
 35986  01D6A6  50E1               	movf	fsr1l,w,c
 35987  01D6A8  0FFD               	addlw	-3
 35988  01D6AA  6ED9               	movwf	fsr2l,c
 35989  01D6AC  50E2               	movf	fsr1h,w,c
 35990  01D6AE  6EDA               	movwf	fsr2h,c
 35991  01D6B0  0EFF               	movlw	255
 35992  01D6B2  22DA               	addwfc	fsr2h,f,c
 35993  01D6B4  006F FF78  F090    	movff	postinc2,_INT1_InterruptHandler
 35994  01D6BA  006F FF78  F091    	movff	postinc2,_INT1_InterruptHandler+1
 35995  01D6C0  006F FF74  F092    	movff	postdec2,_INT1_InterruptHandler+2
 35996                           
 35997                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35998  01D6C6  52E5               	movf	postdec1,f,c
 35999  01D6C8  52E5               	movf	postdec1,f,c
 36000  01D6CA  52E5               	movf	postdec1,f,c
 36001  01D6CC  0012               	return		;funcret
 36002  01D6CE                     __end_of_INT1_SetInterruptHandler:
 36003                           	opt callstack 0
 36004                           
 36005 ;; *************** function _INT0_SetInterruptHandler *****************
 36006 ;; Defined at:
 36007 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 36008 ;; Parameters:    Size  Location     Type
 36009 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36010 ;;		 -> INT0_DefaultInterruptHandler(1), 
 36011 ;; Auto vars:     Size  Location     Type
 36012 ;;		None
 36013 ;; Return value:  Size  Location     Type
 36014 ;;                  1  [STACK] void 
 36015 ;; Registers used:
 36016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36017 ;; Tracked objects:
 36018 ;;		On entry : 3F/39
 36019 ;;		On exit  : 0/0
 36020 ;;		Unchanged: 0/0
 36021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36026 ;;Total ram usage:        0 bytes
 36027 ;; Hardware stack levels used:    1
 36028 ;; Hardware stack levels required when called:   15
 36029 ;; This function calls:
 36030 ;;		Nothing
 36031 ;; This function is called by:
 36032 ;;		_EXT_INT_Initialize
 36033 ;; This function uses a reentrant model
 36034 ;;
 36035                           
 36036                           	psect	text151
 36037  01D6CE                     __ptext151:
 36038                           	opt callstack 0
 36039  01D6CE                     _INT0_SetInterruptHandler:
 36040                           	opt callstack 13
 36041                           
 36042                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 36043                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36044                           
 36045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36046                           ;incstack = 0
 36047  01D6CE  50E1               	movf	fsr1l,w,c
 36048  01D6D0  0FFD               	addlw	-3
 36049  01D6D2  6ED9               	movwf	fsr2l,c
 36050  01D6D4  50E2               	movf	fsr1h,w,c
 36051  01D6D6  6EDA               	movwf	fsr2h,c
 36052  01D6D8  0EFF               	movlw	255
 36053  01D6DA  22DA               	addwfc	fsr2h,f,c
 36054  01D6DC  006F FF78  F093    	movff	postinc2,_INT0_InterruptHandler
 36055  01D6E2  006F FF78  F094    	movff	postinc2,_INT0_InterruptHandler+1
 36056  01D6E8  006F FF74  F095    	movff	postdec2,_INT0_InterruptHandler+2
 36057                           
 36058                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 36059  01D6EE  52E5               	movf	postdec1,f,c
 36060  01D6F0  52E5               	movf	postdec1,f,c
 36061  01D6F2  52E5               	movf	postdec1,f,c
 36062  01D6F4  0012               	return		;funcret
 36063  01D6F6                     __end_of_INT0_SetInterruptHandler:
 36064                           	opt callstack 0
 36065                           
 36066 ;; *************** function _DMA2_Initialize *****************
 36067 ;; Defined at:
 36068 ;;		line 61 in file "mcc_generated_files/dma2.c"
 36069 ;; Parameters:    Size  Location     Type
 36070 ;;		None
 36071 ;; Auto vars:     Size  Location     Type
 36072 ;;		None
 36073 ;; Return value:  Size  Location     Type
 36074 ;;                  1  [STACK] void 
 36075 ;; Registers used:
 36076 ;;		wreg, status,2
 36077 ;; Tracked objects:
 36078 ;;		On entry : 3F/3D
 36079 ;;		On exit  : 3F/3B
 36080 ;;		Unchanged: 0/0
 36081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36086 ;;Total ram usage:        0 bytes
 36087 ;; Hardware stack levels used:    1
 36088 ;; Hardware stack levels required when called:   15
 36089 ;; This function calls:
 36090 ;;		Nothing
 36091 ;; This function is called by:
 36092 ;;		_SYSTEM_Initialize
 36093 ;; This function uses a reentrant model
 36094 ;;
 36095                           
 36096                           	psect	text152
 36097  01CBCA                     __ptext152:
 36098                           	opt callstack 0
 36099  01CBCA                     _DMA2_Initialize:
 36100                           	opt callstack 14
 36101                           
 36102                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 36103                           
 36104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36105                           ;incstack = 0
 36106  01CBCA  0E00               	movlw	0
 36107  01CBCC  013B               	movlb	59	; () banked
 36108  01CBCE  6FD9               	movwf	217,b	;volatile
 36109  01CBD0  0E10               	movlw	16
 36110  01CBD2  6FDA               	movwf	218,b	;volatile
 36111  01CBD4  0E00               	movlw	0
 36112  01CBD6  6FDB               	movwf	219,b	;volatile
 36113                           
 36114                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 36115  01CBD8  0E3F               	movlw	63
 36116  01CBDA  6FD1               	movwf	209,b	;volatile
 36117  01CBDC  0EBB               	movlw	187
 36118  01CBDE  6FD0               	movwf	208,b	;volatile
 36119                           
 36120                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 36121  01CBE0  0E03               	movlw	3
 36122  01CBE2  6FDD               	movwf	221,b	;volatile
 36123                           
 36124                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 36125  01CBE4  0E00               	movlw	0
 36126  01CBE6  6FD8               	movwf	216,b	;volatile
 36127  01CBE8  0E01               	movlw	1
 36128  01CBEA  6FD7               	movwf	215,b	;volatile
 36129                           
 36130                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 36131  01CBEC  0E00               	movlw	0
 36132  01CBEE  6FCF               	movwf	207,b	;volatile
 36133  01CBF0  0E01               	movlw	1
 36134  01CBF2  6FCE               	movwf	206,b	;volatile
 36135                           
 36136                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 36137  01CBF4  0E1C               	movlw	28
 36138  01CBF6  6FDF               	movwf	223,b	;volatile
 36139                           
 36140                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 36141  01CBF8  0E3D               	movlw	61
 36142  01CBFA  6FDE               	movwf	222,b	;volatile
 36143                           
 36144                           ; BSR set to: 59
 36145                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 36146  01CBFC  0139               	movlb	57	; () banked
 36147  01CBFE  97A5               	bcf	165,3,b	;volatile
 36148                           
 36149                           ; BSR set to: 57
 36150                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 36151  01CC00  95A5               	bcf	165,2,b	;volatile
 36152                           
 36153                           ; BSR set to: 57
 36154                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 36155  01CC02  9BA5               	bcf	165,5,b	;volatile
 36156                           
 36157                           ; BSR set to: 57
 36158                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 36159  01CC04  99A5               	bcf	165,4,b	;volatile
 36160                           
 36161                           ; BSR set to: 57
 36162                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 36163  01CC06  9795               	bcf	149,3,b	;volatile
 36164                           
 36165                           ; BSR set to: 57
 36166                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 36167  01CC08  9595               	bcf	149,2,b	;volatile
 36168                           
 36169                           ; BSR set to: 57
 36170                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 36171  01CC0A  9B95               	bcf	149,5,b	;volatile
 36172                           
 36173                           ; BSR set to: 57
 36174                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 36175  01CC0C  9995               	bcf	149,4,b	;volatile
 36176  01CC0E  9ED2               	bcf	16338,7,c	;# 
 36177  01CC10  0139               	banksel	14831	;# 
 36178  01CC12  0E55               	movlw	85	;# 
 36179  01CC14  6FEF               	movwf	14831,b	;# 
 36180  01CC16  0EAA               	movlw	170	;# 
 36181  01CC18  6FEF               	movwf	14831,b	;# 
 36182  01CC1A  81EF               	bsf	14831,0,b	;# 
 36183  01CC1C  8ED2               	bsf	16338,7,c	;# 
 36184                           
 36185                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 36186  01CC1E  013B               	movlb	59	; () banked
 36187  01CC20  6BDC               	clrf	220,b	;volatile
 36188                           
 36189                           ; BSR set to: 59
 36190                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36191  01CC22  0012               	return		;funcret
 36192  01CC24                     __end_of_DMA2_Initialize:
 36193                           	opt callstack 0
 36194                           
 36195 ;; *************** function _DMA1_Initialize *****************
 36196 ;; Defined at:
 36197 ;;		line 86 in file "mcc_generated_files/dma1.c"
 36198 ;; Parameters:    Size  Location     Type
 36199 ;;		None
 36200 ;; Auto vars:     Size  Location     Type
 36201 ;;		None
 36202 ;; Return value:  Size  Location     Type
 36203 ;;                  1  [STACK] void 
 36204 ;; Registers used:
 36205 ;;		wreg, status,2
 36206 ;; Tracked objects:
 36207 ;;		On entry : 3F/3B
 36208 ;;		On exit  : 3F/3B
 36209 ;;		Unchanged: 0/0
 36210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36215 ;;Total ram usage:        0 bytes
 36216 ;; Hardware stack levels used:    1
 36217 ;; Hardware stack levels required when called:   15
 36218 ;; This function calls:
 36219 ;;		Nothing
 36220 ;; This function is called by:
 36221 ;;		_SYSTEM_Initialize
 36222 ;; This function uses a reentrant model
 36223 ;;
 36224                           
 36225                           	psect	text153
 36226  01C71C                     __ptext153:
 36227                           	opt callstack 0
 36228  01C71C                     _DMA1_Initialize:
 36229                           	opt callstack 14
 36230                           
 36231                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 36232                           
 36233                           ; BSR set to: 59
 36234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36235                           ;incstack = 0
 36236  01C71C  0E00               	movlw	0
 36237  01C71E  013B               	movlb	59	; () banked
 36238  01C720  6FF9               	movwf	249,b	;volatile
 36239  01C722  0E10               	movlw	16
 36240  01C724  6FFA               	movwf	250,b	;volatile
 36241  01C726  0E00               	movlw	0
 36242  01C728  6FFB               	movwf	251,b	;volatile
 36243                           
 36244                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 36245  01C72A  0E3D               	movlw	61
 36246  01C72C  6FF1               	movwf	241,b	;volatile
 36247  01C72E  0E11               	movlw	17
 36248  01C730  6FF0               	movwf	240,b	;volatile
 36249                           
 36250                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 36251  01C732  0E03               	movlw	3
 36252  01C734  6FFD               	movwf	253,b	;volatile
 36253                           
 36254                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 36255  01C736  0E00               	movlw	0
 36256  01C738  6FF8               	movwf	248,b	;volatile
 36257  01C73A  0E01               	movlw	1
 36258  01C73C  6FF7               	movwf	247,b	;volatile
 36259                           
 36260                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 36261  01C73E  0E00               	movlw	0
 36262  01C740  6FEF               	movwf	239,b	;volatile
 36263  01C742  0E01               	movlw	1
 36264  01C744  6FEE               	movwf	238,b	;volatile
 36265                           
 36266                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 36267  01C746  0E15               	movlw	21
 36268  01C748  6FFF               	movwf	255,b	;volatile
 36269                           
 36270                           ; BSR set to: 59
 36271                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 36272  01C74A  6BFE               	clrf	254,b	;volatile
 36273                           
 36274                           ; BSR set to: 59
 36275                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 36276  01C74C  0139               	movlb	57	; () banked
 36277  01C74E  93A2               	bcf	162,1,b	;volatile
 36278                           
 36279                           ; BSR set to: 57
 36280                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 36281  01C750  91A2               	bcf	162,0,b	;volatile
 36282                           
 36283                           ; BSR set to: 57
 36284                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 36285  01C752  97A2               	bcf	162,3,b	;volatile
 36286                           
 36287                           ; BSR set to: 57
 36288                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 36289  01C754  95A2               	bcf	162,2,b	;volatile
 36290                           
 36291                           ; BSR set to: 57
 36292                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 36293  01C756  8392               	bsf	146,1,b	;volatile
 36294                           
 36295                           ; BSR set to: 57
 36296                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 36297  01C758  8192               	bsf	146,0,b	;volatile
 36298                           
 36299                           ; BSR set to: 57
 36300                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 36301  01C75A  8792               	bsf	146,3,b	;volatile
 36302                           
 36303                           ; BSR set to: 57
 36304                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 36305  01C75C  8592               	bsf	146,2,b	;volatile
 36306                           
 36307                           ; BSR set to: 57
 36308                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 36309  01C75E  6BF1               	clrf	241,b	;volatile
 36310                           
 36311                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 36312  01C760  0E01               	movlw	1
 36313  01C762  6FF2               	movwf	242,b	;volatile
 36314                           
 36315                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 36316  01C764  0E04               	movlw	4
 36317  01C766  6FF3               	movwf	243,b	;volatile
 36318                           
 36319                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 36320  01C768  0E02               	movlw	2
 36321  01C76A  6FF4               	movwf	244,b	;volatile
 36322                           
 36323                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 36324  01C76C  0E03               	movlw	3
 36325  01C76E  6FF7               	movwf	247,b	;volatile
 36326  01C770  9ED2               	bcf	16338,7,c	;# 
 36327  01C772  0139               	banksel	14831	;# 
 36328  01C774  0E55               	movlw	85	;# 
 36329  01C776  6FEF               	movwf	14831,b	;# 
 36330  01C778  0EAA               	movlw	170	;# 
 36331  01C77A  6FEF               	movwf	14831,b	;# 
 36332  01C77C  81EF               	bsf	14831,0,b	;# 
 36333  01C77E  8ED2               	bsf	16338,7,c	;# 
 36334                           
 36335                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 36336  01C780  013B               	movlb	59	; () banked
 36337  01C782  6BFC               	clrf	252,b	;volatile
 36338                           
 36339                           ; BSR set to: 59
 36340                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36341  01C784  0012               	return		;funcret
 36342  01C786                     __end_of_DMA1_Initialize:
 36343                           	opt callstack 0
 36344                           
 36345 ;; *************** function _CRC_Initialize *****************
 36346 ;; Defined at:
 36347 ;;		line 76 in file "mcc_generated_files/crc.c"
 36348 ;; Parameters:    Size  Location     Type
 36349 ;;		None
 36350 ;; Auto vars:     Size  Location     Type
 36351 ;;  seed            2  [STACK] unsigned short 
 36352 ;;  poly            2  [STACK] unsigned short 
 36353 ;; Return value:  Size  Location     Type
 36354 ;;                  1  [STACK] void 
 36355 ;; Registers used:
 36356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 36357 ;; Tracked objects:
 36358 ;;		On entry : 0/39
 36359 ;;		On exit  : 3F/0
 36360 ;;		Unchanged: 0/0
 36361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36366 ;;Total ram usage:        0 bytes
 36367 ;; Hardware stack levels used:    1
 36368 ;; Hardware stack levels required when called:   15
 36369 ;; This function calls:
 36370 ;;		Nothing
 36371 ;; This function is called by:
 36372 ;;		_SYSTEM_Initialize
 36373 ;;		_read_cal_data
 36374 ;;		_write_cal_data
 36375 ;; This function uses a reentrant model
 36376 ;;
 36377                           
 36378                           	psect	text154
 36379  01C20A                     __ptext154:
 36380                           	opt callstack 0
 36381  01C20A                     _CRC_Initialize:
 36382                           	opt callstack 0
 36383                           
 36384                           ; BSR set to: 59
 36385                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36386  01C20A  52E6               	movf	postinc1,f,c
 36387  01C20C  52E6               	movf	postinc1,f,c
 36388  01C20E  52E6               	movf	postinc1,f,c
 36389  01C210  52E6               	movf	postinc1,f,c
 36390                           
 36391                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 36392                           
 36393                           ;incstack = 0
 36394  01C212  0E80               	movlw	128
 36395  01C214  0139               	movlb	57	; () banked
 36396  01C216  6F68               	movwf	104,b	;volatile
 36397                           
 36398                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 36399  01C218  0E07               	movlw	7
 36400  01C21A  6F69               	movwf	105,b	;volatile
 36401                           
 36402                           ; BSR set to: 57
 36403                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 36404  01C21C  6B62               	clrf	98,b	;volatile
 36405                           
 36406                           ; BSR set to: 57
 36407                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 36408  01C21E  6B63               	clrf	99,b	;volatile
 36409                           
 36410                           ; BSR set to: 57
 36411                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 36412  01C220  6B7C               	clrf	124,b	;volatile
 36413                           
 36414                           ; BSR set to: 57
 36415                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 36416  01C222  6B78               	clrf	120,b	;volatile
 36417                           
 36418                           ; BSR set to: 57
 36419                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 36420  01C224  6B77               	clrf	119,b	;volatile
 36421                           
 36422                           ; BSR set to: 57
 36423                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 36424  01C226  6B76               	clrf	118,b	;volatile
 36425                           
 36426                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 36427  01C228  0E3F               	movlw	63
 36428  01C22A  6F7B               	movwf	123,b	;volatile
 36429                           
 36430                           ; BSR set to: 57
 36431                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 36432  01C22C  697A               	setf	122,b	;volatile
 36433                           
 36434                           ; BSR set to: 57
 36435                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 36436  01C22E  6979               	setf	121,b	;volatile
 36437                           
 36438                           ; BSR set to: 57
 36439                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 36440  01C230  6B7D               	clrf	125,b	;volatile
 36441                           
 36442                           ; BSR set to: 57
 36443                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 36444  01C232  0ED5               	movlw	213
 36445  01C234  6E0B               	movwf	(btemp+10)^0,c
 36446  01C236  0E00               	movlw	0
 36447  01C238  6E0C               	movwf	(btemp+11)^0,c
 36448                           
 36449                           ;stkvar	_poly @ sp[(-4)+2]
 36450  01C23A  0EFE               	movlw	-2
 36451  01C23C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36452  01C242  0EFF               	movlw	-1
 36453  01C244  0060  F033  FFE3   	movff	btemp+11,plusw1
 36454                           
 36455                           ; BSR set to: 57
 36456                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 36457                           ;stkvar	_poly @ sp[(-4)+2]
 36458  01C24A  0EFF               	movlw	255
 36459  01C24C  24E1               	addwf	fsr1l,w,c
 36460  01C24E  6ED9               	movwf	fsr2l,c
 36461  01C250  0EFF               	movlw	255
 36462  01C252  20E2               	addwfc	fsr1h,w,c
 36463  01C254  6EDA               	movwf	fsr2h,c
 36464  01C256  50DF               	movf	indf2,w,c
 36465  01C258  6F67               	movwf	103,b	;volatile
 36466                           
 36467                           ; BSR set to: 57
 36468                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 36469  01C25A  0ED5               	movlw	213
 36470  01C25C  6F66               	movwf	102,b	;volatile
 36471                           
 36472                           ; BSR set to: 57
 36473                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 36474                           ;stkvar	_seed @ sp[(-4)+0]
 36475  01C25E  0EFC               	movlw	-4
 36476  01C260  6AE3               	clrf	plusw1,c
 36477  01C262  0EFD               	movlw	-3
 36478  01C264  6AE3               	clrf	plusw1,c
 36479                           
 36480                           ; BSR set to: 57
 36481                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 36482                           ;stkvar	_seed @ sp[(-4)+0]
 36483  01C266  0EFD               	movlw	253
 36484  01C268  24E1               	addwf	fsr1l,w,c
 36485  01C26A  6ED9               	movwf	fsr2l,c
 36486  01C26C  0EFF               	movlw	255
 36487  01C26E  20E2               	addwfc	fsr1h,w,c
 36488  01C270  6EDA               	movwf	fsr2h,c
 36489  01C272  50DF               	movf	indf2,w,c
 36490  01C274  6F63               	movwf	99,b	;volatile
 36491                           
 36492                           ; BSR set to: 57
 36493                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 36494  01C276  6B62               	clrf	98,b	;volatile
 36495                           
 36496                           ; BSR set to: 57
 36497                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 36498  01C278  3969               	swapf	105,w,b	;volatile
 36499  01C27A  0B0F               	andlw	15
 36500  01C27C  6E0C               	movwf	(btemp+11)^0,c
 36501  01C27E  280C               	incf	(btemp+11)^0,w,c
 36502  01C280  0100               	movlb	0	; () banked
 36503  01C282  6FAB               	movwf	_crcObj& (0+255),b
 36504                           
 36505                           ; BSR set to: 0
 36506                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 36507  01C284  0139               	movlb	57	; () banked
 36508  01C286  5169               	movf	105,w,b	;volatile
 36509  01C288  0B0F               	andlw	15
 36510  01C28A  6E0C               	movwf	(btemp+11)^0,c
 36511  01C28C  280C               	incf	(btemp+11)^0,w,c
 36512  01C28E  0100               	movlb	0	; () banked
 36513  01C290  6FAC               	movwf	(_crcObj+1)& (0+255),b
 36514                           
 36515                           ; BSR set to: 0
 36516                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36517  01C292  52E5               	movf	postdec1,f,c
 36518  01C294  52E5               	movf	postdec1,f,c
 36519  01C296  52E5               	movf	postdec1,f,c
 36520  01C298  52E5               	movf	postdec1,f,c
 36521  01C29A  0012               	return		;funcret
 36522  01C29C                     __end_of_CRC_Initialize:
 36523                           	opt callstack 0
 36524                           
 36525 ;; *************** function _CLKREF_Initialize *****************
 36526 ;; Defined at:
 36527 ;;		line 58 in file "mcc_generated_files/clkref.c"
 36528 ;; Parameters:    Size  Location     Type
 36529 ;;		None
 36530 ;; Auto vars:     Size  Location     Type
 36531 ;;		None
 36532 ;; Return value:  Size  Location     Type
 36533 ;;                  1  [STACK] void 
 36534 ;; Registers used:
 36535 ;;		wreg, status,2
 36536 ;; Tracked objects:
 36537 ;;		On entry : 3F/3B
 36538 ;;		On exit  : 3F/3C
 36539 ;;		Unchanged: 0/0
 36540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36545 ;;Total ram usage:        0 bytes
 36546 ;; Hardware stack levels used:    1
 36547 ;; Hardware stack levels required when called:   15
 36548 ;; This function calls:
 36549 ;;		Nothing
 36550 ;; This function is called by:
 36551 ;;		_SYSTEM_Initialize
 36552 ;; This function uses a reentrant model
 36553 ;;
 36554                           
 36555                           	psect	text155
 36556  01DB62                     __ptext155:
 36557                           	opt callstack 0
 36558  01DB62                     _CLKREF_Initialize:
 36559                           	opt callstack 14
 36560                           
 36561                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 36562                           
 36563                           ; BSR set to: 0
 36564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36565                           ;incstack = 0
 36566  01DB62  013C               	movlb	60	; () banked
 36567  01DB64  6BE6               	clrf	230,b	;volatile
 36568                           
 36569                           ; BSR set to: 60
 36570                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 36571  01DB66  0E94               	movlw	148
 36572  01DB68  6FE5               	movwf	229,b	;volatile
 36573                           
 36574                           ; BSR set to: 60
 36575                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36576  01DB6A  0012               	return		;funcret
 36577  01DB6C                     __end_of_CLKREF_Initialize:
 36578                           	opt callstack 0
 36579                           
 36580 ;; *************** function _ADCC_Initialize *****************
 36581 ;; Defined at:
 36582 ;;		line 65 in file "mcc_generated_files/adcc.c"
 36583 ;; Parameters:    Size  Location     Type
 36584 ;;		None
 36585 ;; Auto vars:     Size  Location     Type
 36586 ;;		None
 36587 ;; Return value:  Size  Location     Type
 36588 ;;                  1  [STACK] void 
 36589 ;; Registers used:
 36590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 36591 ;; Tracked objects:
 36592 ;;		On entry : 3F/0
 36593 ;;		On exit  : 0/0
 36594 ;;		Unchanged: 0/0
 36595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36600 ;;Total ram usage:        0 bytes
 36601 ;; Hardware stack levels used:    1
 36602 ;; Hardware stack levels required when called:   16
 36603 ;; This function calls:
 36604 ;;		_ADCC_SetADIInterruptHandler
 36605 ;;		_ADCC_SetADTIInterruptHandler
 36606 ;; This function is called by:
 36607 ;;		_SYSTEM_Initialize
 36608 ;; This function uses a reentrant model
 36609 ;;
 36610                           
 36611                           	psect	text156
 36612  01C786                     __ptext156:
 36613                           	opt callstack 0
 36614  01C786                     _ADCC_Initialize:
 36615                           	opt callstack 13
 36616                           
 36617                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 36618                           
 36619                           ; BSR set to: 60
 36620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36621                           ;incstack = 0
 36622  01C786  013E               	movlb	62	; () banked
 36623  01C788  6BDE               	clrf	222,b	;volatile
 36624                           
 36625                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 36626  01C78A  6BDF               	clrf	223,b	;volatile
 36627                           
 36628                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 36629  01C78C  6BE0               	clrf	224,b	;volatile
 36630                           
 36631                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 36632  01C78E  6BE1               	clrf	225,b	;volatile
 36633                           
 36634                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 36635  01C790  6BE4               	clrf	228,b	;volatile
 36636                           
 36637                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 36638  01C792  6BE5               	clrf	229,b	;volatile
 36639                           
 36640                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 36641  01C794  6BEA               	clrf	234,b	;volatile
 36642                           
 36643                           ; BSR set to: 62
 36644                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 36645  01C796  0E40               	movlw	64
 36646  01C798  6FEC               	movwf	236,b	;volatile
 36647                           
 36648                           ; BSR set to: 62
 36649                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 36650  01C79A  6BF1               	clrf	241,b	;volatile
 36651                           
 36652                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 36653  01C79C  0E20               	movlw	32
 36654  01C79E  6FF3               	movwf	243,b	;volatile
 36655                           
 36656                           ; BSR set to: 62
 36657                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 36658  01C7A0  6BF4               	clrf	244,b	;volatile
 36659                           
 36660                           ; BSR set to: 62
 36661                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 36662  01C7A2  6BF5               	clrf	245,b	;volatile
 36663                           
 36664                           ; BSR set to: 62
 36665                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 36666  01C7A4  6BF6               	clrf	246,b	;volatile
 36667                           
 36668                           ; BSR set to: 62
 36669                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 36670  01C7A6  6BF7               	clrf	247,b	;volatile
 36671                           
 36672                           ; BSR set to: 62
 36673                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 36674  01C7A8  6BF9               	clrf	249,b	;volatile
 36675                           
 36676                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 36677  01C7AA  0E5B               	movlw	91
 36678  01C7AC  6FFA               	movwf	250,b	;volatile
 36679                           
 36680                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 36681  01C7AE  0E27               	movlw	39
 36682  01C7B0  6FFB               	movwf	251,b	;volatile
 36683                           
 36684                           ; BSR set to: 62
 36685                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 36686  01C7B2  6BFC               	clrf	252,b	;volatile
 36687                           
 36688                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 36689  01C7B4  0E02               	movlw	2
 36690  01C7B6  6FFD               	movwf	253,b	;volatile
 36691                           
 36692                           ; BSR set to: 62
 36693                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 36694  01C7B8  6BFE               	clrf	254,b	;volatile
 36695                           
 36696                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 36697  01C7BA  0E07               	movlw	7
 36698  01C7BC  6FFF               	movwf	255,b	;volatile
 36699                           
 36700                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 36701  01C7BE  0E84               	movlw	132
 36702  01C7C0  6FF8               	movwf	248,b	;volatile
 36703                           
 36704                           ; BSR set to: 62
 36705                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 36706  01C7C2  0139               	movlb	57	; () banked
 36707  01C7C4  95A1               	bcf	161,2,b	;volatile
 36708                           
 36709                           ; BSR set to: 57
 36710                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 36711  01C7C6  8591               	bsf	145,2,b	;volatile
 36712                           
 36713                           ; BSR set to: 57
 36714                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 36715  01C7C8  0EEC               	movlw	low _ADCC_DefaultInterruptHandler
 36716  01C7CA  6EE6               	movwf	postinc1,c
 36717  01C7CC  0EDB               	movlw	high _ADCC_DefaultInterruptHandler
 36718  01C7CE  6EE6               	movwf	postinc1,c
 36719  01C7D0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 36720  01C7D2  6EE6               	movwf	postinc1,c
 36721  01C7D4  EC8F  F0EB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 36722                           
 36723                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 36724  01C7D8  0139               	movlb	57	; () banked
 36725  01C7DA  97A1               	bcf	161,3,b	;volatile
 36726                           
 36727                           ; BSR set to: 57
 36728                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 36729  01C7DC  8791               	bsf	145,3,b	;volatile
 36730                           
 36731                           ; BSR set to: 57
 36732                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 36733  01C7DE  0EEC               	movlw	low _ADCC_DefaultInterruptHandler
 36734  01C7E0  6EE6               	movwf	postinc1,c
 36735  01C7E2  0EDB               	movlw	high _ADCC_DefaultInterruptHandler
 36736  01C7E4  6EE6               	movwf	postinc1,c
 36737  01C7E6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 36738  01C7E8  6EE6               	movwf	postinc1,c
 36739  01C7EA  EC7B  F0EB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 36740                           
 36741                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36742  01C7EE  0012               	return		;funcret
 36743  01C7F0                     __end_of_ADCC_Initialize:
 36744                           	opt callstack 0
 36745                           
 36746 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 36747 ;; Defined at:
 36748 ;;		line 336 in file "mcc_generated_files/adcc.c"
 36749 ;; Parameters:    Size  Location     Type
 36750 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36751 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 36752 ;; Auto vars:     Size  Location     Type
 36753 ;;		None
 36754 ;; Return value:  Size  Location     Type
 36755 ;;                  1  [STACK] void 
 36756 ;; Registers used:
 36757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36758 ;; Tracked objects:
 36759 ;;		On entry : 0/0
 36760 ;;		On exit  : 0/0
 36761 ;;		Unchanged: 0/0
 36762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36767 ;;Total ram usage:        0 bytes
 36768 ;; Hardware stack levels used:    1
 36769 ;; Hardware stack levels required when called:   15
 36770 ;; This function calls:
 36771 ;;		Nothing
 36772 ;; This function is called by:
 36773 ;;		_ADCC_Initialize
 36774 ;;		_start_adc_scan
 36775 ;; This function uses a reentrant model
 36776 ;;
 36777                           
 36778                           	psect	text157
 36779  01D6F6                     __ptext157:
 36780                           	opt callstack 0
 36781  01D6F6                     _ADCC_SetADTIInterruptHandler:
 36782                           	opt callstack 14
 36783                           
 36784                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 36785                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36786                           
 36787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36788                           ;incstack = 0
 36789  01D6F6  50E1               	movf	fsr1l,w,c
 36790  01D6F8  0FFD               	addlw	-3
 36791  01D6FA  6ED9               	movwf	fsr2l,c
 36792  01D6FC  50E2               	movf	fsr1h,w,c
 36793  01D6FE  6EDA               	movwf	fsr2h,c
 36794  01D700  0EFF               	movlw	255
 36795  01D702  22DA               	addwfc	fsr2h,f,c
 36796  01D704  006F FF78  F081    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 36797  01D70A  006F FF78  F082    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 36798  01D710  006F FF74  F083    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 36799                           
 36800                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 36801  01D716  52E5               	movf	postdec1,f,c
 36802  01D718  52E5               	movf	postdec1,f,c
 36803  01D71A  52E5               	movf	postdec1,f,c
 36804  01D71C  0012               	return		;funcret
 36805  01D71E                     __end_of_ADCC_SetADTIInterruptHandler:
 36806                           	opt callstack 0
 36807                           
 36808 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 36809 ;; Defined at:
 36810 ;;		line 323 in file "mcc_generated_files/adcc.c"
 36811 ;; Parameters:    Size  Location     Type
 36812 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36813 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 36814 ;; Auto vars:     Size  Location     Type
 36815 ;;		None
 36816 ;; Return value:  Size  Location     Type
 36817 ;;                  1  [STACK] void 
 36818 ;; Registers used:
 36819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36820 ;; Tracked objects:
 36821 ;;		On entry : 6/0
 36822 ;;		On exit  : 0/0
 36823 ;;		Unchanged: 0/0
 36824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36829 ;;Total ram usage:        0 bytes
 36830 ;; Hardware stack levels used:    1
 36831 ;; Hardware stack levels required when called:   15
 36832 ;; This function calls:
 36833 ;;		Nothing
 36834 ;; This function is called by:
 36835 ;;		_ADCC_Initialize
 36836 ;;		_start_adc_scan
 36837 ;; This function uses a reentrant model
 36838 ;;
 36839                           
 36840                           	psect	text158
 36841  01D71E                     __ptext158:
 36842                           	opt callstack 0
 36843  01D71E                     _ADCC_SetADIInterruptHandler:
 36844                           	opt callstack 14
 36845                           
 36846                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 36847                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36848                           
 36849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36850                           ;incstack = 0
 36851  01D71E  50E1               	movf	fsr1l,w,c
 36852  01D720  0FFD               	addlw	-3
 36853  01D722  6ED9               	movwf	fsr2l,c
 36854  01D724  50E2               	movf	fsr1h,w,c
 36855  01D726  6EDA               	movwf	fsr2h,c
 36856  01D728  0EFF               	movlw	255
 36857  01D72A  22DA               	addwfc	fsr2h,f,c
 36858  01D72C  006F FF78  F084    	movff	postinc2,_ADCC_ADI_InterruptHandler
 36859  01D732  006F FF78  F085    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 36860  01D738  006F FF74  F086    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 36861                           
 36862                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 36863  01D73E  52E5               	movf	postdec1,f,c
 36864  01D740  52E5               	movf	postdec1,f,c
 36865  01D742  52E5               	movf	postdec1,f,c
 36866  01D744  0012               	return		;funcret
 36867  01D746                     __end_of_ADCC_SetADIInterruptHandler:
 36868                           	opt callstack 0
 36869                           
 36870 ;; *************** function _INT1_ISR *****************
 36871 ;; Defined at:
 36872 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 36873 ;; Parameters:    Size  Location     Type
 36874 ;;		None
 36875 ;; Auto vars:     Size  Location     Type
 36876 ;;		None
 36877 ;; Return value:  Size  Location     Type
 36878 ;;                  1    wreg      void 
 36879 ;; Registers used:
 36880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 36881 ;; Tracked objects:
 36882 ;;		On entry : 0/0
 36883 ;;		On exit  : 0/0
 36884 ;;		Unchanged: 0/0
 36885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36890 ;;Total ram usage:        4 bytes
 36891 ;; Hardware stack levels used:    1
 36892 ;; Hardware stack levels required when called:    5
 36893 ;; This function calls:
 36894 ;;		_INT1_CallBack
 36895 ;; This function is called by:
 36896 ;;		Interrupt level 1
 36897 ;; This function uses a non-reentrant model
 36898 ;;
 36899                           
 36900                           	psect	text159
 36901  01D170                     __ptext159:
 36902                           	opt callstack 0
 36903  01D170                     _INT1_ISR:
 36904                           	opt callstack 11
 36905                           
 36906                           ;incstack = 0
 36907  01D170  006F FF60  F027    	movff	status,??_INT1_ISR
 36908  01D176  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 36909  01D17C  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 36910  01D182  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 36911  01D188  EE16  F104         	lfsr	1,___intlo_sp
 36912                           
 36913                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 36914  01D18C  0139               	movlb	57	; () banked
 36915  01D18E  91A5               	bcf	165,0,b	;volatile
 36916                           
 36917                           ; BSR set to: 57
 36918                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 36919  01D190  ECF2  F0EB         	call	_INT1_CallBack	;wreg free
 36920  01D194  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 36921  01D19A  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 36922  01D1A0  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 36923  01D1A6  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 36924  01D1AC  0011               	retfie		f
 36925  01D1AE                     __end_of_INT1_ISR:
 36926                           	opt callstack 0
 36927                           
 36928 ;; *************** function _INT1_CallBack *****************
 36929 ;; Defined at:
 36930 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 36931 ;; Parameters:    Size  Location     Type
 36932 ;;		None
 36933 ;; Auto vars:     Size  Location     Type
 36934 ;;		None
 36935 ;; Return value:  Size  Location     Type
 36936 ;;                  1  [STACK] void 
 36937 ;; Registers used:
 36938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 36939 ;; Tracked objects:
 36940 ;;		On entry : 3F/39
 36941 ;;		On exit  : 0/0
 36942 ;;		Unchanged: 0/0
 36943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36948 ;;Total ram usage:        0 bytes
 36949 ;; Hardware stack levels used:    1
 36950 ;; Hardware stack levels required when called:    4
 36951 ;; This function calls:
 36952 ;;		Absolute function
 36953 ;;		_INT1_DefaultInterruptHandler
 36954 ;;		_switch_handler
 36955 ;; This function is called by:
 36956 ;;		_INT1_ISR
 36957 ;; This function uses a reentrant model
 36958 ;;
 36959                           
 36960                           	psect	text160
 36961  01D7E4                     __ptext160:
 36962                           	opt callstack 0
 36963  01D7E4                     _INT1_CallBack:
 36964                           	opt callstack 11
 36965                           
 36966                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 36967                           
 36968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36969                           ;incstack = 0
 36970  01D7E4  0100               	movlb	0	; () banked
 36971  01D7E6  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 36972  01D7E8  1191               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 36973  01D7EA  1192               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 36974  01D7EC  B4D8               	btfsc	status,2,c
 36975  01D7EE  0012               	return	
 36976                           
 36977                           ; BSR set to: 0
 36978                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 36979  01D7F0  D801               	call	u1093_28
 36980  01D7F2  0012               	return	
 36981  01D7F4                     u1093_28:
 36982  01D7F4  0005               	push	
 36983  01D7F6  6EFA               	movwf	pclath,c
 36984  01D7F8  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 36985  01D7FA  6EFD               	movwf	tosl,c
 36986  01D7FC  5191               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 36987  01D7FE  6EFE               	movwf	tosh,c
 36988  01D800  5192               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 36989  01D802  6EFF               	movwf	tosu,c
 36990  01D804  50FA               	movf	pclath,w,c
 36991  01D806  0012               	return		;indir
 36992  01D808                     __end_of_INT1_CallBack:
 36993                           	opt callstack 0
 36994                           
 36995 ;; *************** function _INT1_DefaultInterruptHandler *****************
 36996 ;; Defined at:
 36997 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 36998 ;; Parameters:    Size  Location     Type
 36999 ;;		None
 37000 ;; Auto vars:     Size  Location     Type
 37001 ;;		None
 37002 ;; Return value:  Size  Location     Type
 37003 ;;                  1  [STACK] void 
 37004 ;; Registers used:
 37005 ;;		None
 37006 ;; Tracked objects:
 37007 ;;		On entry : 3F/0
 37008 ;;		On exit  : 0/0
 37009 ;;		Unchanged: 0/0
 37010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37015 ;;Total ram usage:        0 bytes
 37016 ;; Hardware stack levels used:    1
 37017 ;; Hardware stack levels required when called:    3
 37018 ;; This function calls:
 37019 ;;		Nothing
 37020 ;; This function is called by:
 37021 ;;		_EXT_INT_Initialize
 37022 ;;		_INT1_CallBack
 37023 ;; This function uses a reentrant model
 37024 ;;
 37025                           
 37026                           	psect	text161
 37027  01DBE6                     __ptext161:
 37028                           	opt callstack 0
 37029  01DBE6                     _INT1_DefaultInterruptHandler:
 37030                           	opt callstack 11
 37031                           
 37032                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37033                           
 37034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37035                           ;incstack = 0
 37036  01DBE6  0012               	return		;funcret
 37037  01DBE8                     __end_of_INT1_DefaultInterruptHandler:
 37038                           	opt callstack 0
 37039                           
 37040 ;; *************** function _switch_handler *****************
 37041 ;; Defined at:
 37042 ;;		line 58 in file "dio.c"
 37043 ;; Parameters:    Size  Location     Type
 37044 ;;		None
 37045 ;; Auto vars:     Size  Location     Type
 37046 ;;  i               1  [STACK] unsigned char 
 37047 ;;  sw_value        1  [STACK] unsigned char 
 37048 ;; Return value:  Size  Location     Type
 37049 ;;                  1  [STACK] void 
 37050 ;; Registers used:
 37051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 37052 ;; Tracked objects:
 37053 ;;		On entry : 3F/0
 37054 ;;		On exit  : 0/0
 37055 ;;		Unchanged: 0/0
 37056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37061 ;;Total ram usage:        0 bytes
 37062 ;; Hardware stack levels used:    1
 37063 ;; Hardware stack levels required when called:    3
 37064 ;; This function calls:
 37065 ;;		Nothing
 37066 ;; This function is called by:
 37067 ;;		_start_switch_handler
 37068 ;;		_INT1_CallBack
 37069 ;; This function uses a reentrant model
 37070 ;;
 37071                           
 37072                           	psect	text162
 37073  01A610                     __ptext162:
 37074                           	opt callstack 0
 37075  01A610                     _switch_handler:
 37076                           	opt callstack 0
 37077                           
 37078                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37079  01A610  52E6               	movf	postinc1,f,c
 37080  01A612  52E6               	movf	postinc1,f,c
 37081                           
 37082                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 37083                           ;stkvar	_i @ sp[(-2)+0]
 37084                           
 37085                           ;incstack = 0
 37086  01A614  0EFE               	movlw	-2
 37087  01A616  6AE3               	clrf	plusw1,c
 37088  01A618  9ABF               	bcf	191,5,c	;volatile
 37089                           
 37090                           ;dio.c: 72:  __nop();
 37091  01A61A  F000               	nop	
 37092                           
 37093                           ;dio.c: 73:  __nop();
 37094  01A61C  F000               	nop	
 37095                           
 37096                           ;dio.c: 74:  __nop();
 37097  01A61E  F000               	nop	
 37098                           
 37099                           ;dio.c: 75:  __nop();
 37100  01A620  F000               	nop	
 37101                           
 37102                           ;dio.c: 76:  __nop();
 37103  01A622  F000               	nop	
 37104                           
 37105                           ;dio.c: 77:  __nop();
 37106  01A624  F000               	nop	
 37107  01A626  D016               	goto	l11698
 37108  01A628                     l11684:
 37109                           
 37110                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 37111  01A628  A6CF               	btfss	207,3,c	;volatile
 37112  01A62A  D00E               	goto	u1059_20
 37113  01A62C  D00A               	goto	u1059_21
 37114  01A62E                     u1057_28:
 37115                           
 37116                           ;stkvar	_sw_value @ sp[(-2)+1]
 37117  01A62E  0EFF               	movlw	-1
 37118  01A630  0060  F033  FFE3   	movff	btemp+11,plusw1
 37119                           
 37120                           ;dio.c: 83:    break;
 37121  01A636  D027               	goto	l11700
 37122  01A638                     l11686:
 37123                           
 37124                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 37125  01A638  A4CF               	btfss	207,2,c	;volatile
 37126  01A63A  D006               	goto	u1059_20
 37127  01A63C  D002               	goto	u1059_21
 37128  01A63E                     l11688:
 37129                           
 37130                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 37131  01A63E  A6CD               	btfss	205,3,c	;volatile
 37132  01A640  D003               	goto	u1059_20
 37133  01A642                     u1059_21:
 37134  01A642  6A0C               	clrf	(btemp+11)^0,c
 37135  01A644  2A0C               	incf	(btemp+11)^0,f,c
 37136  01A646  D7F3               	goto	u1057_28
 37137  01A648                     u1059_20:
 37138  01A648  6A0C               	clrf	(btemp+11)^0,c
 37139  01A64A  D7F1               	goto	u1057_28
 37140  01A64C                     l11690:
 37141                           
 37142                           ;dio.c: 91:    sw_value = 1;
 37143                           ;stkvar	_sw_value @ sp[(-2)+1]
 37144  01A64C  0EFF               	movlw	-1
 37145  01A64E  6AE3               	clrf	plusw1,c
 37146  01A650  2AE3               	incf	plusw1,f,c
 37147                           
 37148                           ;dio.c: 92:    break;
 37149  01A652  D019               	goto	l11700
 37150  01A654                     l11698:
 37151                           
 37152                           ;stkvar	_i @ sp[(-2)+0]
 37153  01A654  0EFE               	movlw	-2
 37154  01A656  50E3               	movf	plusw1,w,c
 37155  01A658  6E0B               	movwf	(btemp+10)^0,c
 37156  01A65A  6A0C               	clrf	(btemp+11)^0,c
 37157                           
 37158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37159                           ; Switch size 1, requested type "simple"
 37160                           ; Number of cases is 1, Range of values is 0 to 0
 37161                           ; switch strategies available:
 37162                           ; Name         Instructions Cycles
 37163                           ; simple_byte            4     3 (average)
 37164                           ;	Chosen strategy is simple_byte
 37165  01A65C  500C               	movf	(btemp+11)^0,w,c
 37166  01A65E  0A00               	xorlw	0	; case 0
 37167  01A660  A4D8               	btfss	status,2,c
 37168  01A662  D7F4               	goto	l11690
 37169                           
 37170                           ; Switch size 1, requested type "simple"
 37171                           ; Number of cases is 5, Range of values is 0 to 4
 37172                           ; switch strategies available:
 37173                           ; Name         Instructions Cycles
 37174                           ; simple_byte           16     9 (average)
 37175                           ;	Chosen strategy is simple_byte
 37176  01A664  500B               	movf	(btemp+10)^0,w,c
 37177  01A666  0A00               	xorlw	0	; case 0
 37178  01A668  B4D8               	btfsc	status,2,c
 37179  01A66A  D7F0               	goto	l11690
 37180  01A66C  0A01               	xorlw	1	; case 1
 37181  01A66E  B4D8               	btfsc	status,2,c
 37182  01A670  D7ED               	goto	l11690
 37183  01A672  0A03               	xorlw	3	; case 2
 37184  01A674  B4D8               	btfsc	status,2,c
 37185  01A676  D7E0               	goto	l11686
 37186  01A678  0A01               	xorlw	1	; case 3
 37187  01A67A  B4D8               	btfsc	status,2,c
 37188  01A67C  D7D5               	goto	l11684
 37189  01A67E  0A07               	xorlw	7	; case 4
 37190  01A680  B4D8               	btfsc	status,2,c
 37191  01A682  D7DD               	goto	l11688
 37192  01A684  D7E3               	goto	l11690
 37193  01A686                     l11700:
 37194                           
 37195                           ;dio.c: 102:   if (sw_value) {
 37196                           ;stkvar	_sw_value @ sp[(-2)+1]
 37197  01A686  0EFF               	movlw	-1
 37198  01A688  50E3               	movf	plusw1,w,c
 37199  01A68A  B4D8               	btfsc	status,2,c
 37200  01A68C  D018               	goto	l11706
 37201                           
 37202                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 37203                           ;stkvar	_i @ sp[(-2)+0]
 37204  01A68E  0EFE               	movlw	-2
 37205  01A690  50E3               	movf	plusw1,w,c
 37206  01A692  0D05               	mullw	5
 37207  01A694  0E00               	movlw	low _S
 37208  01A696  24F3               	addwf	243,w,c
 37209  01A698  6ED9               	movwf	fsr2l,c
 37210  01A69A  0E02               	movlw	high _S
 37211  01A69C  20F4               	addwfc	prodh,w,c
 37212  01A69E  6EDA               	movwf	fsr2h,c
 37213  01A6A0  04DE               	decf	postinc2,w,c
 37214  01A6A2  A4D8               	btfss	status,2,c
 37215  01A6A4  D049               	goto	l11714
 37216                           
 37217                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 37218                           ;stkvar	_i @ sp[(-2)+0]
 37219  01A6A6  0EFE               	movlw	-2
 37220  01A6A8  50E3               	movf	plusw1,w,c
 37221  01A6AA  0D05               	mullw	5
 37222  01A6AC  0E00               	movlw	low _S
 37223  01A6AE  24F3               	addwf	243,w,c
 37224  01A6B0  6ED9               	movwf	fsr2l,c
 37225  01A6B2  0E02               	movlw	high _S
 37226  01A6B4  20F4               	addwfc	prodh,w,c
 37227  01A6B6  6EDA               	movwf	fsr2h,c
 37228  01A6B8  0E00               	movlw	0
 37229  01A6BA  6EDF               	movwf	indf2,c
 37230  01A6BC  D03D               	goto	l11714
 37231  01A6BE                     l11706:
 37232                           
 37233                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 37234                           ;stkvar	_i @ sp[(-2)+0]
 37235  01A6BE  0EFE               	movlw	-2
 37236  01A6C0  50E3               	movf	plusw1,w,c
 37237  01A6C2  0D05               	mullw	5
 37238  01A6C4  0E00               	movlw	low _S
 37239  01A6C6  24F3               	addwf	243,w,c
 37240  01A6C8  6ED9               	movwf	fsr2l,c
 37241  01A6CA  0E02               	movlw	high _S
 37242  01A6CC  20F4               	addwfc	prodh,w,c
 37243  01A6CE  6EDA               	movwf	fsr2h,c
 37244  01A6D0  50DF               	movf	indf2,w,c
 37245  01A6D2  A4D8               	btfss	status,2,c
 37246  01A6D4  D031               	goto	l11714
 37247                           
 37248                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 37249                           ;stkvar	_i @ sp[(-2)+0]
 37250  01A6D6  0EFE               	movlw	-2
 37251  01A6D8  50E3               	movf	plusw1,w,c
 37252  01A6DA  0D05               	mullw	5
 37253  01A6DC  0E00               	movlw	low _S
 37254  01A6DE  24F3               	addwf	243,w,c
 37255  01A6E0  6ED9               	movwf	fsr2l,c
 37256  01A6E2  0E02               	movlw	high _S
 37257  01A6E4  20F4               	addwfc	prodh,w,c
 37258  01A6E6  6EDA               	movwf	fsr2h,c
 37259  01A6E8  0E01               	movlw	1
 37260  01A6EA  6EDF               	movwf	indf2,c
 37261                           
 37262                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 37263  01A6EC  EE20  F1C3         	lfsr	2,_V+188	;volatile
 37264                           
 37265                           ;stkvar	_i @ sp[(-2)+0]
 37266  01A6F0  0EFE               	movlw	-2
 37267  01A6F2  50E3               	movf	plusw1,w,c
 37268  01A6F4  0D05               	mullw	5
 37269  01A6F6  0E01               	movlw	low (_S+1)
 37270  01A6F8  24F3               	addwf	243,w,c
 37271  01A6FA  6EE9               	movwf	fsr0l,c
 37272  01A6FC  0E02               	movlw	high (_S+1)
 37273  01A6FE  20F4               	addwfc	prodh,w,c
 37274  01A700  6EEA               	movwf	fsr0h,c
 37275  01A702  006F FF7B FFEE     	movff	postinc2,postinc0
 37276  01A708  006F FF7B FFEE     	movff	postinc2,postinc0
 37277  01A70E  006F FF7B FFEE     	movff	postinc2,postinc0
 37278  01A714  006F FF7B FFEE     	movff	postinc2,postinc0
 37279                           
 37280                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 37281                           ;stkvar	_i @ sp[(-2)+0]
 37282  01A71A  0EFE               	movlw	-2
 37283  01A71C  006F FF8C  F00C    	movff	plusw1,btemp+11
 37284  01A722  0E01               	movlw	1
 37285  01A724  6E0B               	movwf	(btemp+10)^0,c
 37286  01A726  2A0C               	incf	(btemp+11)^0,f,c
 37287  01A728  D002               	goto	u1063_24
 37288  01A72A                     u1063_25:
 37289  01A72A  90D8               	bcf	status,0,c
 37290  01A72C  360B               	rlcf	(btemp+10)^0,f,c
 37291  01A72E                     u1063_24:
 37292  01A72E  2E0C               	decfsz	(btemp+11)^0,f,c
 37293  01A730  D7FC               	goto	u1063_25
 37294  01A732  500B               	movf	(btemp+10)^0,w,c
 37295  01A734  0102               	movlb	2	; () banked
 37296  01A736  1328               	iorwf	(_S+40)& (0+255),f,b	;volatile
 37297  01A738                     l11714:
 37298                           
 37299                           ;dio.c: 113:  } while (++i < 6);
 37300                           ;stkvar	_i @ sp[(-2)+0]
 37301  01A738  0EFE               	movlw	-2
 37302  01A73A  2AE3               	incf	plusw1,f,c
 37303  01A73C  0EFE               	movlw	-2
 37304  01A73E  006F FF8C  F001    	movff	plusw1,btemp
 37305  01A744  0E05               	movlw	5
 37306  01A746  6401               	cpfsgt	btemp^0,c
 37307  01A748  D785               	goto	l11698
 37308                           
 37309                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 37310  01A74A  8ABF               	bsf	191,5,c	;volatile
 37311                           
 37312                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 37313  01A74C  52E5               	movf	postdec1,f,c
 37314  01A74E  52E5               	movf	postdec1,f,c
 37315  01A750  0012               	return		;funcret
 37316  01A752                     __end_of_switch_handler:
 37317                           	opt callstack 0
 37318                           
 37319 ;; *************** function _TMR5_ISR *****************
 37320 ;; Defined at:
 37321 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 37322 ;; Parameters:    Size  Location     Type
 37323 ;;		None
 37324 ;; Auto vars:     Size  Location     Type
 37325 ;;		None
 37326 ;; Return value:  Size  Location     Type
 37327 ;;                  1    wreg      void 
 37328 ;; Registers used:
 37329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 37330 ;; Tracked objects:
 37331 ;;		On entry : 0/0
 37332 ;;		On exit  : 3F/0
 37333 ;;		Unchanged: 0/0
 37334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37337 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37338 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37339 ;;Total ram usage:       15 bytes
 37340 ;; Hardware stack levels used:    1
 37341 ;; Hardware stack levels required when called:    9
 37342 ;; This function calls:
 37343 ;;		_TMR5_CallBack
 37344 ;;		_TMR5_WriteTimer
 37345 ;; This function is called by:
 37346 ;;		Interrupt level 1
 37347 ;; This function uses a non-reentrant model
 37348 ;;
 37349                           
 37350                           	psect	text163
 37351  01B560                     __ptext163:
 37352                           	opt callstack 0
 37353  01B560                     _TMR5_ISR:
 37354                           	opt callstack 7
 37355                           
 37356                           ;incstack = 0
 37357  01B560  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 37358  01B566  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 37359  01B56C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 37360  01B572  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 37361  01B578  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 37362  01B57E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 37363  01B584  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 37364  01B58A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 37365  01B590  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 37366  01B596  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 37367  01B59C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 37368  01B5A2  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 37369  01B5A8  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 37370  01B5AE  EE16  F104         	lfsr	1,___intlo_sp
 37371                           
 37372                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 37373  01B5B2  0139               	movlb	57	; () banked
 37374  01B5B4  9DA8               	bcf	168,6,b	;volatile
 37375                           
 37376                           ; BSR set to: 57
 37377                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 37378  01B5B6  0060  F27B  FFE6   	movff	_timer5ReloadVal,postinc1
 37379  01B5BC  0060  F27F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 37380  01B5C2  EC77  F0E8         	call	_TMR5_WriteTimer	;wreg free
 37381                           
 37382                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 37383  01B5C6  0101               	movlb	1	; () banked
 37384  01B5C8  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 37385  01B5CA  6E2B               	movwf	??_TMR5_ISR^0,c
 37386  01B5CC  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 37387  01B5CE  0E05               	movlw	5
 37388  01B5D0  262B               	addwf	??_TMR5_ISR^0,f,c
 37389  01B5D2  0E00               	movlw	0
 37390  01B5D4  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 37391  01B5D6  0100               	movlb	0	; () banked
 37392  01B5D8  4B9C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 37393  01B5DA  2B9D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 37394  01B5DC  502B               	movf	??_TMR5_ISR^0,w,c
 37395  01B5DE  5D9C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 37396  01B5E0  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 37397  01B5E2  599D               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 37398  01B5E4  A0D8               	btfss	status,0,c
 37399  01B5E6  D005               	goto	i1l1021
 37400                           
 37401                           ; BSR set to: 0
 37402                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 37403  01B5E8  EC04  F0EC         	call	_TMR5_CallBack	;wreg free
 37404                           
 37405                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 37406  01B5EC  0100               	movlb	0	; () banked
 37407  01B5EE  6B9C               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 37408  01B5F0  6B9D               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 37409  01B5F2                     i1l1021:
 37410                           
 37411                           ; BSR set to: 0
 37412  01B5F2  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 37413  01B5F8  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 37414  01B5FE  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 37415  01B604  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 37416  01B60A  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 37417  01B610  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 37418  01B616  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 37419  01B61C  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 37420  01B622  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 37421  01B628  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 37422  01B62E  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 37423  01B634  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 37424  01B63A  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 37425  01B640  0011               	retfie		f
 37426  01B642                     __end_of_TMR5_ISR:
 37427                           	opt callstack 0
 37428                           
 37429 ;; *************** function _TMR5_WriteTimer *****************
 37430 ;; Defined at:
 37431 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 37432 ;; Parameters:    Size  Location     Type
 37433 ;;  timerVal        2  [STACK] unsigned short 
 37434 ;; Auto vars:     Size  Location     Type
 37435 ;;		None
 37436 ;; Return value:  Size  Location     Type
 37437 ;;                  1  [STACK] void 
 37438 ;; Registers used:
 37439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 37440 ;; Tracked objects:
 37441 ;;		On entry : 3F/39
 37442 ;;		On exit  : 0/0
 37443 ;;		Unchanged: 0/0
 37444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37449 ;;Total ram usage:        0 bytes
 37450 ;; Hardware stack levels used:    1
 37451 ;; Hardware stack levels required when called:    3
 37452 ;; This function calls:
 37453 ;;		Nothing
 37454 ;; This function is called by:
 37455 ;;		_TMR5_ISR
 37456 ;; This function uses a reentrant model
 37457 ;;
 37458                           
 37459                           	psect	text164
 37460  01D0EE                     __ptext164:
 37461                           	opt callstack 0
 37462  01D0EE                     _TMR5_WriteTimer:
 37463                           	opt callstack 12
 37464                           
 37465                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 37466                           
 37467                           ; BSR set to: 0
 37468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37469                           ;incstack = 0
 37470  01D0EE  A49A               	btfss	154,2,c	;volatile
 37471  01D0F0  D00F               	goto	l11926
 37472                           
 37473                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 37474  01D0F2  909A               	bcf	154,0,c	;volatile
 37475                           
 37476                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 37477                           ;stkvar	_timerVal @ sp[(0)+-2]
 37478  01D0F4  0EFF               	movlw	255
 37479  01D0F6  24E1               	addwf	fsr1l,w,c
 37480  01D0F8  6ED9               	movwf	fsr2l,c
 37481  01D0FA  0EFF               	movlw	255
 37482  01D0FC  20E2               	addwfc	fsr1h,w,c
 37483  01D0FE  6EDA               	movwf	fsr2h,c
 37484  01D100  50DF               	movf	indf2,w,c
 37485  01D102  6E99               	movwf	153,c	;volatile
 37486                           
 37487                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 37488                           ;stkvar	_timerVal @ sp[(0)+-2]
 37489  01D104  0EFE               	movlw	-2
 37490  01D106  006F FF8F FF98     	movff	plusw1,16280	;volatile
 37491                           
 37492                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 37493  01D10C  809A               	bsf	154,0,c	;volatile
 37494                           
 37495                           ;mcc_generated_files/tmr5.c: 144:  } else {
 37496  01D10E  D00C               	goto	l1004
 37497  01D110                     l11926:
 37498                           
 37499                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 37500                           ;stkvar	_timerVal @ sp[(0)+-2]
 37501  01D110  0EFF               	movlw	255
 37502  01D112  24E1               	addwf	fsr1l,w,c
 37503  01D114  6ED9               	movwf	fsr2l,c
 37504  01D116  0EFF               	movlw	255
 37505  01D118  20E2               	addwfc	fsr1h,w,c
 37506  01D11A  6EDA               	movwf	fsr2h,c
 37507  01D11C  50DF               	movf	indf2,w,c
 37508  01D11E  6E99               	movwf	153,c	;volatile
 37509                           
 37510                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 37511                           ;stkvar	_timerVal @ sp[(0)+-2]
 37512  01D120  0EFE               	movlw	-2
 37513  01D122  006F FF8F FF98     	movff	plusw1,16280	;volatile
 37514  01D128                     l1004:
 37515                           
 37516                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37517  01D128  52E5               	movf	postdec1,f,c
 37518  01D12A  52E5               	movf	postdec1,f,c
 37519  01D12C  0012               	return		;funcret
 37520  01D12E                     __end_of_TMR5_WriteTimer:
 37521                           	opt callstack 0
 37522                           
 37523 ;; *************** function _TMR5_CallBack *****************
 37524 ;; Defined at:
 37525 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 37526 ;; Parameters:    Size  Location     Type
 37527 ;;		None
 37528 ;; Auto vars:     Size  Location     Type
 37529 ;;		None
 37530 ;; Return value:  Size  Location     Type
 37531 ;;                  1  [STACK] void 
 37532 ;; Registers used:
 37533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 37534 ;; Tracked objects:
 37535 ;;		On entry : 3F/0
 37536 ;;		On exit  : 0/0
 37537 ;;		Unchanged: 0/0
 37538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37543 ;;Total ram usage:        0 bytes
 37544 ;; Hardware stack levels used:    1
 37545 ;; Hardware stack levels required when called:    8
 37546 ;; This function calls:
 37547 ;;		Absolute function
 37548 ;;		_TMR5_DefaultInterruptHandler
 37549 ;; This function is called by:
 37550 ;;		_TMR5_ISR
 37551 ;; This function uses a reentrant model
 37552 ;;
 37553                           
 37554                           	psect	text165
 37555  01D808                     __ptext165:
 37556                           	opt callstack 0
 37557  01D808                     _TMR5_CallBack:
 37558                           	opt callstack 7
 37559                           
 37560                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 37561                           
 37562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37563                           ;incstack = 0
 37564  01D808  0100               	movlb	0	; () banked
 37565  01D80A  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 37566  01D80C  117C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 37567  01D80E  117D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 37568  01D810  B4D8               	btfsc	status,2,c
 37569  01D812  0012               	return	
 37570                           
 37571                           ; BSR set to: 0
 37572                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 37573  01D814  D801               	call	u1102_28
 37574  01D816  0012               	return	
 37575  01D818                     u1102_28:
 37576  01D818  0005               	push	
 37577  01D81A  6EFA               	movwf	pclath,c
 37578  01D81C  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 37579  01D81E  6EFD               	movwf	tosl,c
 37580  01D820  517C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 37581  01D822  6EFE               	movwf	tosh,c
 37582  01D824  517D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 37583  01D826  6EFF               	movwf	tosu,c
 37584  01D828  50FA               	movf	pclath,w,c
 37585  01D82A  0012               	return		;indir
 37586  01D82C                     __end_of_TMR5_CallBack:
 37587                           	opt callstack 0
 37588                           
 37589 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 37590 ;; Defined at:
 37591 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 37592 ;; Parameters:    Size  Location     Type
 37593 ;;		None
 37594 ;; Auto vars:     Size  Location     Type
 37595 ;;		None
 37596 ;; Return value:  Size  Location     Type
 37597 ;;                  1  [STACK] void 
 37598 ;; Registers used:
 37599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37600 ;; Tracked objects:
 37601 ;;		On entry : 3F/0
 37602 ;;		On exit  : 0/0
 37603 ;;		Unchanged: 0/0
 37604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37609 ;;Total ram usage:        0 bytes
 37610 ;; Hardware stack levels used:    1
 37611 ;; Hardware stack levels required when called:    7
 37612 ;; This function calls:
 37613 ;;		_check_day_time
 37614 ;; This function is called by:
 37615 ;;		_TMR5_Initialize
 37616 ;;		_TMR5_CallBack
 37617 ;; This function uses a reentrant model
 37618 ;;
 37619                           
 37620                           	psect	text166
 37621  01D25A                     __ptext166:
 37622                           	opt callstack 0
 37623  01D25A                     _TMR5_DefaultInterruptHandler:
 37624                           	opt callstack 7
 37625                           
 37626                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 37627                           
 37628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37629                           ;incstack = 0
 37630  01D25A  A0BE               	btfss	190,0,c	;volatile
 37631  01D25C  D002               	goto	u1023_20
 37632  01D25E  0E01               	movlw	1
 37633  01D260  D001               	goto	u1023_26
 37634  01D262                     u1023_20:
 37635  01D262  0E00               	movlw	0
 37636  01D264                     u1023_26:
 37637  01D264  0AFF               	xorlw	255
 37638  01D266  6E0C               	movwf	(btemp+11)^0,c
 37639  01D268  50BE               	movf	190,w,c	;volatile
 37640  01D26A  180C               	xorwf	(btemp+11)^0,w,c
 37641  01D26C  0BFE               	andlw	-2
 37642  01D26E  180C               	xorwf	(btemp+11)^0,w,c
 37643  01D270  6EBE               	movwf	190,c	;volatile
 37644                           
 37645                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 37646  01D272  0E01               	movlw	1
 37647  01D274  0101               	movlb	1	; () banked
 37648  01D276  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 37649  01D278  0E00               	movlw	0
 37650  01D27A  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 37651  01D27C  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 37652  01D27E  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 37653                           
 37654                           ; BSR set to: 1
 37655                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 37656  01D280  0E01               	movlw	1
 37657  01D282  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 37658  01D284  0E00               	movlw	0
 37659  01D286  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 37660  01D288  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 37661  01D28A  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 37662                           
 37663                           ; BSR set to: 1
 37664                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 37665  01D28C  EC6F  F0CC         	call	_check_day_time	;wreg free
 37666                           
 37667                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37668  01D290  0012               	return		;funcret
 37669  01D292                     __end_of_TMR5_DefaultInterruptHandler:
 37670                           	opt callstack 0
 37671                           
 37672 ;; *************** function _check_day_time *****************
 37673 ;; Defined at:
 37674 ;;		line 165 in file "mbmc.c"
 37675 ;; Parameters:    Size  Location     Type
 37676 ;;		None
 37677 ;; Auto vars:     Size  Location     Type
 37678 ;;  light           4  [STACK] float 
 37679 ;; Return value:  Size  Location     Type
 37680 ;;                  1  [STACK] _Bool 
 37681 ;; Registers used:
 37682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37683 ;; Tracked objects:
 37684 ;;		On entry : 3F/1
 37685 ;;		On exit  : 0/0
 37686 ;;		Unchanged: 0/0
 37687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37692 ;;Total ram usage:        0 bytes
 37693 ;; Hardware stack levels used:    1
 37694 ;; Hardware stack levels required when called:    6
 37695 ;; This function calls:
 37696 ;;		___flge
 37697 ;;		_conv_raw_result
 37698 ;;		_get_ac_charger_relay
 37699 ;;		_set_ac_charger_relay
 37700 ;; This function is called by:
 37701 ;;		_TMR5_DefaultInterruptHandler
 37702 ;; This function uses a reentrant model
 37703 ;;
 37704                           
 37705                           	psect	text167
 37706  0198DE                     __ptext167:
 37707                           	opt callstack 0
 37708  0198DE                     _check_day_time:
 37709                           	opt callstack 0
 37710                           
 37711                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37712  0198DE  52E6               	movf	postinc1,f,c
 37713  0198E0  52E6               	movf	postinc1,f,c
 37714  0198E2  52E6               	movf	postinc1,f,c
 37715  0198E4  52E6               	movf	postinc1,f,c
 37716                           
 37717                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 37718                           
 37719                           ;incstack = 0
 37720  0198E6  0E00               	movlw	0
 37721  0198E8  6EE6               	movwf	postinc1,c
 37722  0198EA  0E0D               	movlw	13
 37723  0198EC  6EE6               	movwf	postinc1,c
 37724  0198EE  ECF8  F0AF         	call	_conv_raw_result	;wreg free
 37725                           
 37726                           ;stkvar	_light @ sp[(-4)+0]
 37727  0198F2  0EFC               	movlw	-4
 37728  0198F4  0060  F007  FFE3   	movff	btemp,plusw1
 37729  0198FA  0EFD               	movlw	-3
 37730  0198FC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 37731  019902  0EFE               	movlw	-2
 37732  019904  0060  F00F  FFE3   	movff	btemp+2,plusw1
 37733  01990A  0EFF               	movlw	-1
 37734  01990C  0060  F013  FFE3   	movff	btemp+3,plusw1
 37735                           
 37736                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 37737  019912  2A41               	incf	check_day_time@day_delay^0,f,c
 37738  019914  0441               	decf	check_day_time@day_delay^0,w,c
 37739  019916  A4D8               	btfss	status,2,c
 37740  019918  D0A9               	goto	l2166
 37741  01991A  0101               	movlb	1	; () banked
 37742  01991C  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 37743  01991E  B4D8               	btfsc	status,2,c
 37744  019920  D0A5               	goto	l2166
 37745                           
 37746                           ; BSR set to: 1
 37747                           ;mbmc.c: 173:   if (C.soc > 3) {
 37748  019922  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37749  019926  0E01               	movlw	1
 37750  019928  50DB               	movf	plusw2,w,c
 37751  01992A  E104               	bnz	u993_20
 37752  01992C  0E04               	movlw	4
 37753  01992E  5CDE               	subwf	postinc2,w,c
 37754  019930  A0D8               	btfss	status,0,c
 37755  019932  D073               	goto	l10782
 37756  019934                     u993_20:
 37757                           
 37758                           ; BSR set to: 1
 37759                           ;mbmc.c: 174:    if (!C.day) {
 37760  019934  EE22  F121         	lfsr	2,_C+290	;volatile
 37761  019938  50DF               	movf	indf2,w,c
 37762  01993A  A4D8               	btfss	status,2,c
 37763  01993C  D035               	goto	l10770
 37764                           
 37765                           ; BSR set to: 1
 37766                           ;mbmc.c: 175:     if (light > 22.0) {
 37767                           ;stkvar	_light @ sp[(-4)+0]
 37768  01993E  0EFC               	movlw	-4
 37769  019940  006F FF8F FFE6     	movff	plusw1,postinc1
 37770  019946  006F FF8F FFE6     	movff	plusw1,postinc1
 37771  01994C  006F FF8F FFE6     	movff	plusw1,postinc1
 37772  019952  006F FF8F FFE6     	movff	plusw1,postinc1
 37773  019958  0E00               	movlw	0
 37774  01995A  6EE6               	movwf	postinc1,c
 37775  01995C  0E00               	movlw	0
 37776  01995E  6EE6               	movwf	postinc1,c
 37777  019960  0EB0               	movlw	176
 37778  019962  6EE6               	movwf	postinc1,c
 37779  019964  0E41               	movlw	65
 37780  019966  6EE6               	movwf	postinc1,c
 37781  019968  ECFF  F0D0         	call	___flge	;wreg free
 37782  01996C  B001               	btfsc	btemp& (0+255),0,c
 37783  01996E  D07E               	goto	l2166
 37784                           
 37785                           ;mbmc.c: 176:      C.day = 1;
 37786  019970  0E01               	movlw	1
 37787  019972  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 37788                           
 37789                           ;mbmc.c: 177:      C.day_start = V.ticks;
 37790  019978  EE20  F188         	lfsr	2,_V+129	;volatile
 37791  01997C  006F FF78  F922    	movff	postinc2,_C+291	;volatile
 37792  019982  006F FF78  F923    	movff	postinc2,_C+292	;volatile
 37793  019988  006F FF78  F924    	movff	postinc2,_C+293	;volatile
 37794  01998E  006F FF74  F925    	movff	postdec2,_C+294	;volatile
 37795                           
 37796                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 37797  019994  EC9B  F0ED         	call	_get_ac_charger_relay	;wreg free
 37798  019998  5001               	movf	btemp^0,w,c
 37799  01999A  B4D8               	btfsc	status,2,c
 37800  01999C  D06B               	goto	l2162
 37801                           
 37802                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 37803  01999E  0E00               	movlw	0
 37804  0199A0  6EE6               	movwf	postinc1,c
 37805  0199A2  EC85  F0ED         	call	_set_ac_charger_relay	;wreg free
 37806  0199A6  D066               	goto	l2162
 37807  0199A8                     l10770:
 37808                           
 37809                           ; BSR set to: 1
 37810                           ;mbmc.c: 184:     if (light < 12.0) {
 37811  0199A8  0E00               	movlw	0
 37812  0199AA  6EE6               	movwf	postinc1,c
 37813  0199AC  0E00               	movlw	0
 37814  0199AE  6EE6               	movwf	postinc1,c
 37815  0199B0  0E40               	movlw	64
 37816  0199B2  6EE6               	movwf	postinc1,c
 37817  0199B4  0E41               	movlw	65
 37818  0199B6  6EE6               	movwf	postinc1,c
 37819                           
 37820                           ;stkvar	_light @ sp[(-8)+0]
 37821  0199B8  0EF8               	movlw	-8
 37822  0199BA  006F FF8F FFE6     	movff	plusw1,postinc1
 37823  0199C0  006F FF8F FFE6     	movff	plusw1,postinc1
 37824  0199C6  006F FF8F FFE6     	movff	plusw1,postinc1
 37825  0199CC  006F FF8F FFE6     	movff	plusw1,postinc1
 37826  0199D2  ECFF  F0D0         	call	___flge	;wreg free
 37827  0199D6  B001               	btfsc	btemp& (0+255),0,c
 37828  0199D8  D049               	goto	l2166
 37829                           
 37830                           ;mbmc.c: 185:      C.day = 0;
 37831  0199DA  0E00               	movlw	0
 37832  0199DC  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 37833                           
 37834                           ;mbmc.c: 186:      C.day_end = V.ticks;
 37835  0199E2  EE20  F188         	lfsr	2,_V+129	;volatile
 37836  0199E6  006F FF78  F926    	movff	postinc2,_C+295	;volatile
 37837  0199EC  006F FF78  F927    	movff	postinc2,_C+296	;volatile
 37838  0199F2  006F FF78  F928    	movff	postinc2,_C+297	;volatile
 37839  0199F8  006F FF74  F929    	movff	postdec2,_C+298	;volatile
 37840                           
 37841                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 37842  0199FE  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37843  019A02  0E01               	movlw	1
 37844  019A04  50DB               	movf	plusw2,w,c
 37845  019A06  E136               	bnz	l2162
 37846  019A08  0E14               	movlw	20
 37847  019A0A  5CDE               	subwf	postinc2,w,c
 37848  019A0C  B0D8               	btfsc	status,0,c
 37849  019A0E  D032               	goto	l2162
 37850                           
 37851                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 37852  019A10  0E01               	movlw	1
 37853  019A12  6EE6               	movwf	postinc1,c
 37854  019A14  EC85  F0ED         	call	_set_ac_charger_relay	;wreg free
 37855  019A18  D02D               	goto	l2162
 37856  019A1A                     l10782:
 37857                           
 37858                           ; BSR set to: 1
 37859                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 37860  019A1A  EE22  F077         	lfsr	2,_C+120	;volatile
 37861  019A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 37862  019A24  006F FF7B FFE6     	movff	postinc2,postinc1
 37863  019A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 37864  019A30  006F FF7B FFE6     	movff	postinc2,postinc1
 37865  019A36  EE22  F07B         	lfsr	2,_C+124	;volatile
 37866  019A3A  006F FF7B FFE6     	movff	postinc2,postinc1
 37867  019A40  006F FF7B FFE6     	movff	postinc2,postinc1
 37868  019A46  006F FF7B FFE6     	movff	postinc2,postinc1
 37869  019A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 37870  019A52  ECFF  F0D0         	call	___flge	;wreg free
 37871  019A56  B001               	btfsc	btemp& (0+255),0,c
 37872  019A58  D009               	goto	l2166
 37873                           
 37874                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 37875  019A5A  EC9B  F0ED         	call	_get_ac_charger_relay	;wreg free
 37876  019A5E  5001               	movf	btemp^0,w,c
 37877  019A60  A4D8               	btfss	status,2,c
 37878  019A62  D004               	goto	l2166
 37879                           
 37880                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 37881  019A64  0E01               	movlw	1
 37882  019A66  6EE6               	movwf	postinc1,c
 37883  019A68  EC85  F0ED         	call	_set_ac_charger_relay	;wreg free
 37884  019A6C                     l2166:
 37885                           
 37886                           ;mbmc.c: 204:  if (day_delay >= 240)
 37887  019A6C  0EEF               	movlw	239
 37888  019A6E  6441               	cpfsgt	check_day_time@day_delay^0,c
 37889  019A70  D001               	goto	l2162
 37890                           
 37891                           ;mbmc.c: 205:   day_delay = 0;
 37892  019A72  6A41               	clrf	check_day_time@day_delay^0,c
 37893  019A74                     l2162:
 37894                           
 37895                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 37896  019A74  52E5               	movf	postdec1,f,c
 37897  019A76  52E5               	movf	postdec1,f,c
 37898  019A78  52E5               	movf	postdec1,f,c
 37899  019A7A  52E5               	movf	postdec1,f,c
 37900  019A7C  0012               	return		;funcret
 37901  019A7E                     __end_of_check_day_time:
 37902                           	opt callstack 0
 37903                           
 37904 ;; *************** function _set_ac_charger_relay *****************
 37905 ;; Defined at:
 37906 ;;		line 135 in file "mbmc.c"
 37907 ;; Parameters:    Size  Location     Type
 37908 ;;  mode            1  [STACK] const _Bool 
 37909 ;; Auto vars:     Size  Location     Type
 37910 ;;		None
 37911 ;; Return value:  Size  Location     Type
 37912 ;;                  1  [STACK] void 
 37913 ;; Registers used:
 37914 ;;		wreg, fsr1l, fsr1h
 37915 ;; Tracked objects:
 37916 ;;		On entry : 0/1
 37917 ;;		On exit  : 0/0
 37918 ;;		Unchanged: 0/0
 37919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37924 ;;Total ram usage:        0 bytes
 37925 ;; Hardware stack levels used:    1
 37926 ;; Hardware stack levels required when called:    3
 37927 ;; This function calls:
 37928 ;;		Nothing
 37929 ;; This function is called by:
 37930 ;;		_check_day_time
 37931 ;; This function uses a reentrant model
 37932 ;;
 37933                           
 37934                           	psect	text168
 37935  01DB0A                     __ptext168:
 37936                           	opt callstack 0
 37937  01DB0A                     _set_ac_charger_relay:
 37938                           	opt callstack 9
 37939                           
 37940                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 37941                           ;stkvar	_mode @ sp[(0)+-1]
 37942                           
 37943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37944                           ;incstack = 0
 37945  01DB0A  0EFF               	movlw	-1
 37946  01DB0C  B0E3               	btfsc	plusw1,0,c
 37947  01DB0E  D002               	bra	u985_25
 37948  01DB10  9CBD               	bcf	189,6,c	;volatile
 37949  01DB12  D001               	bra	u985_26
 37950  01DB14                     u985_25:
 37951  01DB14  8CBD               	bsf	189,6,c	;volatile
 37952  01DB16                     u985_26:
 37953                           
 37954                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 37955  01DB16  52E5               	movf	postdec1,f,c
 37956  01DB18  0012               	return		;funcret
 37957  01DB1A                     __end_of_set_ac_charger_relay:
 37958                           	opt callstack 0
 37959                           
 37960 ;; *************** function _get_ac_charger_relay *****************
 37961 ;; Defined at:
 37962 ;;		line 140 in file "mbmc.c"
 37963 ;; Parameters:    Size  Location     Type
 37964 ;;		None
 37965 ;; Auto vars:     Size  Location     Type
 37966 ;;		None
 37967 ;; Return value:  Size  Location     Type
 37968 ;;                  1  [STACK] _Bool 
 37969 ;; Registers used:
 37970 ;;		btemp
 37971 ;; Tracked objects:
 37972 ;;		On entry : 0/1
 37973 ;;		On exit  : 0/0
 37974 ;;		Unchanged: 0/0
 37975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37980 ;;Total ram usage:        0 bytes
 37981 ;; Hardware stack levels used:    1
 37982 ;; Hardware stack levels required when called:    3
 37983 ;; This function calls:
 37984 ;;		Nothing
 37985 ;; This function is called by:
 37986 ;;		_check_day_time
 37987 ;;		_calc_bsoc
 37988 ;; This function uses a reentrant model
 37989 ;;
 37990                           
 37991                           	psect	text169
 37992  01DB36                     __ptext169:
 37993                           	opt callstack 0
 37994  01DB36                     _get_ac_charger_relay:
 37995                           	opt callstack 10
 37996                           
 37997                           ;mbmc.c: 142:  return LATDbits.LATD6;
 37998                           
 37999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38000                           ;incstack = 0
 38001  01DB36  ACBD               	btfss	189,6,c	;volatile
 38002  01DB38  D003               	goto	u1016_20
 38003  01DB3A  6A01               	clrf	btemp^0,c
 38004  01DB3C  2A01               	incf	btemp^0,f,c
 38005  01DB3E  0012               	return	
 38006  01DB40                     u1016_20:
 38007  01DB40  6A01               	clrf	btemp^0,c
 38008                           
 38009                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 38010  01DB42  0012               	return		;funcret
 38011  01DB44                     __end_of_get_ac_charger_relay:
 38012                           	opt callstack 0
 38013                           
 38014 ;; *************** function _TMR3_ISR *****************
 38015 ;; Defined at:
 38016 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 38017 ;; Parameters:    Size  Location     Type
 38018 ;;		None
 38019 ;; Auto vars:     Size  Location     Type
 38020 ;;		None
 38021 ;; Return value:  Size  Location     Type
 38022 ;;                  1    wreg      void 
 38023 ;; Registers used:
 38024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 38025 ;; Tracked objects:
 38026 ;;		On entry : 0/0
 38027 ;;		On exit  : 3F/0
 38028 ;;		Unchanged: 0/0
 38029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38032 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38033 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38034 ;;Total ram usage:       25 bytes
 38035 ;; Hardware stack levels used:    1
 38036 ;; Hardware stack levels required when called:   14
 38037 ;; This function calls:
 38038 ;;		_TMR3_CallBack
 38039 ;;		_TMR3_WriteTimer
 38040 ;; This function is called by:
 38041 ;;		Interrupt level 1
 38042 ;; This function uses a non-reentrant model
 38043 ;;
 38044                           
 38045                           	psect	text170
 38046  01A360                     __ptext170:
 38047                           	opt callstack 0
 38048  01A360                     _TMR3_ISR:
 38049                           	opt callstack 2
 38050                           
 38051                           ;incstack = 0
 38052  01A360  006F FF60  F0E7    	movff	status,??_TMR3_ISR
 38053  01A366  006F FFD8  F0E8    	movff	tblptrl,??_TMR3_ISR+1
 38054  01A36C  006F FFDC  F0E9    	movff	tblptrh,??_TMR3_ISR+2
 38055  01A372  006F FFE0  F0EA    	movff	tblptru,??_TMR3_ISR+3
 38056  01A378  006F FFD4  F0EB    	movff	tablat,??_TMR3_ISR+4
 38057  01A37E  0060  F004  F0EC   	movff	btemp,??_TMR3_ISR+5
 38058  01A384  0060  F008  F0ED   	movff	btemp+1,??_TMR3_ISR+6
 38059  01A38A  0060  F00C  F0EE   	movff	btemp+2,??_TMR3_ISR+7
 38060  01A390  0060  F010  F0EF   	movff	btemp+3,??_TMR3_ISR+8
 38061  01A396  0060  F014  F0F0   	movff	btemp+4,??_TMR3_ISR+9
 38062  01A39C  0060  F018  F0F1   	movff	btemp+5,??_TMR3_ISR+10
 38063  01A3A2  0060  F01C  F0F2   	movff	btemp+6,??_TMR3_ISR+11
 38064  01A3A8  0060  F020  F0F3   	movff	btemp+7,??_TMR3_ISR+12
 38065  01A3AE  0060  F024  F0F4   	movff	btemp+8,??_TMR3_ISR+13
 38066  01A3B4  0060  F028  F0F5   	movff	btemp+9,??_TMR3_ISR+14
 38067  01A3BA  0060  F02C  F0F6   	movff	btemp+10,??_TMR3_ISR+15
 38068  01A3C0  0060  F030  F0F7   	movff	btemp+11,??_TMR3_ISR+16
 38069  01A3C6  0060  F044  F0F8   	movff	btemp+16,??_TMR3_ISR+17
 38070  01A3CC  0060  F048  F0F9   	movff	btemp+17,??_TMR3_ISR+18
 38071  01A3D2  0060  F04C  F0FA   	movff	btemp+18,??_TMR3_ISR+19
 38072  01A3D8  0060  F050  F0FB   	movff	btemp+19,??_TMR3_ISR+20
 38073  01A3DE  0060  F054  F0FC   	movff	btemp+20,??_TMR3_ISR+21
 38074  01A3E4  0060  F058  F0FD   	movff	btemp+21,??_TMR3_ISR+22
 38075  01A3EA  0060  F05C  F0FE   	movff	btemp+22,??_TMR3_ISR+23
 38076  01A3F0  0060  F060  F0FF   	movff	btemp+23,??_TMR3_ISR+24
 38077  01A3F6  EE16  F104         	lfsr	1,___intlo_sp
 38078                           
 38079                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 38080  01A3FA  0139               	movlb	57	; () banked
 38081  01A3FC  9DA6               	bcf	166,6,b	;volatile
 38082                           
 38083                           ; BSR set to: 57
 38084                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 38085  01A3FE  0060  F26B  FFE6   	movff	_timer3ReloadVal,postinc1
 38086  01A404  0060  F26F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 38087  01A40A  EC97  F0E8         	call	_TMR3_WriteTimer	;wreg free
 38088                           
 38089                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 38090  01A40E  0100               	movlb	0	; () banked
 38091  01A410  4B98               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 38092  01A412  2B99               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 38093  01A414  5199               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 38094  01A416  E104               	bnz	i1u1397_20
 38095  01A418  0E28               	movlw	40
 38096  01A41A  5D98               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 38097  01A41C  A0D8               	btfss	status,0,c
 38098  01A41E  D005               	goto	i1l1209
 38099  01A420                     i1u1397_20:
 38100                           
 38101                           ; BSR set to: 0
 38102                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 38103  01A420  EC16  F0EC         	call	_TMR3_CallBack	;wreg free
 38104                           
 38105                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 38106  01A424  0100               	movlb	0	; () banked
 38107  01A426  6B98               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 38108  01A428  6B99               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 38109  01A42A                     i1l1209:
 38110                           
 38111                           ; BSR set to: 0
 38112  01A42A  0060  F3FC  F018   	movff	??_TMR3_ISR+24,btemp+23
 38113  01A430  0060  F3F8  F017   	movff	??_TMR3_ISR+23,btemp+22
 38114  01A436  0060  F3F4  F016   	movff	??_TMR3_ISR+22,btemp+21
 38115  01A43C  0060  F3F0  F015   	movff	??_TMR3_ISR+21,btemp+20
 38116  01A442  0060  F3EC  F014   	movff	??_TMR3_ISR+20,btemp+19
 38117  01A448  0060  F3E8  F013   	movff	??_TMR3_ISR+19,btemp+18
 38118  01A44E  0060  F3E4  F012   	movff	??_TMR3_ISR+18,btemp+17
 38119  01A454  0060  F3E0  F011   	movff	??_TMR3_ISR+17,btemp+16
 38120  01A45A  0060  F3DC  F00C   	movff	??_TMR3_ISR+16,btemp+11
 38121  01A460  0060  F3D8  F00B   	movff	??_TMR3_ISR+15,btemp+10
 38122  01A466  0060  F3D4  F00A   	movff	??_TMR3_ISR+14,btemp+9
 38123  01A46C  0060  F3D0  F009   	movff	??_TMR3_ISR+13,btemp+8
 38124  01A472  0060  F3CC  F008   	movff	??_TMR3_ISR+12,btemp+7
 38125  01A478  0060  F3C8  F007   	movff	??_TMR3_ISR+11,btemp+6
 38126  01A47E  0060  F3C4  F006   	movff	??_TMR3_ISR+10,btemp+5
 38127  01A484  0060  F3C0  F005   	movff	??_TMR3_ISR+9,btemp+4
 38128  01A48A  0060  F3BC  F004   	movff	??_TMR3_ISR+8,btemp+3
 38129  01A490  0060  F3B8  F003   	movff	??_TMR3_ISR+7,btemp+2
 38130  01A496  0060  F3B4  F002   	movff	??_TMR3_ISR+6,btemp+1
 38131  01A49C  0060  F3B0  F001   	movff	??_TMR3_ISR+5,btemp
 38132  01A4A2  0060  F3AF  FFF5   	movff	??_TMR3_ISR+4,tablat
 38133  01A4A8  0060  F3AB  FFF8   	movff	??_TMR3_ISR+3,tblptru
 38134  01A4AE  0060  F3A7  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 38135  01A4B4  0060  F3A3  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 38136  01A4BA  0060  F39F  FFD8   	movff	??_TMR3_ISR,status
 38137  01A4C0  0011               	retfie		f
 38138  01A4C2                     __end_of_TMR3_ISR:
 38139                           	opt callstack 0
 38140                           
 38141 ;; *************** function _TMR3_WriteTimer *****************
 38142 ;; Defined at:
 38143 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 38144 ;; Parameters:    Size  Location     Type
 38145 ;;  timerVal        2  [STACK] unsigned short 
 38146 ;; Auto vars:     Size  Location     Type
 38147 ;;		None
 38148 ;; Return value:  Size  Location     Type
 38149 ;;                  1  [STACK] void 
 38150 ;; Registers used:
 38151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 38152 ;; Tracked objects:
 38153 ;;		On entry : 3F/39
 38154 ;;		On exit  : 0/0
 38155 ;;		Unchanged: 0/0
 38156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38161 ;;Total ram usage:        0 bytes
 38162 ;; Hardware stack levels used:    1
 38163 ;; Hardware stack levels required when called:    3
 38164 ;; This function calls:
 38165 ;;		Nothing
 38166 ;; This function is called by:
 38167 ;;		_TMR3_ISR
 38168 ;; This function uses a reentrant model
 38169 ;;
 38170                           
 38171                           	psect	text171
 38172  01D12E                     __ptext171:
 38173                           	opt callstack 0
 38174  01D12E                     _TMR3_WriteTimer:
 38175                           	opt callstack 12
 38176                           
 38177                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 38178                           
 38179                           ; BSR set to: 0
 38180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38181                           ;incstack = 0
 38182  01D12E  A4A6               	btfss	166,2,c	;volatile
 38183  01D130  D00F               	goto	l11944
 38184                           
 38185                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 38186  01D132  90A6               	bcf	166,0,c	;volatile
 38187                           
 38188                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 38189                           ;stkvar	_timerVal @ sp[(0)+-2]
 38190  01D134  0EFF               	movlw	255
 38191  01D136  24E1               	addwf	fsr1l,w,c
 38192  01D138  6ED9               	movwf	fsr2l,c
 38193  01D13A  0EFF               	movlw	255
 38194  01D13C  20E2               	addwfc	fsr1h,w,c
 38195  01D13E  6EDA               	movwf	fsr2h,c
 38196  01D140  50DF               	movf	indf2,w,c
 38197  01D142  6EA5               	movwf	165,c	;volatile
 38198                           
 38199                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 38200                           ;stkvar	_timerVal @ sp[(0)+-2]
 38201  01D144  0EFE               	movlw	-2
 38202  01D146  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 38203                           
 38204                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 38205  01D14C  80A6               	bsf	166,0,c	;volatile
 38206                           
 38207                           ;mcc_generated_files/tmr3.c: 141:     }
 38208  01D14E  D00C               	goto	l1192
 38209  01D150                     l11944:
 38210                           
 38211                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 38212                           ;stkvar	_timerVal @ sp[(0)+-2]
 38213  01D150  0EFF               	movlw	255
 38214  01D152  24E1               	addwf	fsr1l,w,c
 38215  01D154  6ED9               	movwf	fsr2l,c
 38216  01D156  0EFF               	movlw	255
 38217  01D158  20E2               	addwfc	fsr1h,w,c
 38218  01D15A  6EDA               	movwf	fsr2h,c
 38219  01D15C  50DF               	movf	indf2,w,c
 38220  01D15E  6EA5               	movwf	165,c	;volatile
 38221                           
 38222                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 38223                           ;stkvar	_timerVal @ sp[(0)+-2]
 38224  01D160  0EFE               	movlw	-2
 38225  01D162  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 38226  01D168                     l1192:
 38227                           
 38228                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38229  01D168  52E5               	movf	postdec1,f,c
 38230  01D16A  52E5               	movf	postdec1,f,c
 38231  01D16C  0012               	return		;funcret
 38232  01D16E                     __end_of_TMR3_WriteTimer:
 38233                           	opt callstack 0
 38234                           
 38235 ;; *************** function _TMR3_CallBack *****************
 38236 ;; Defined at:
 38237 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 38238 ;; Parameters:    Size  Location     Type
 38239 ;;		None
 38240 ;; Auto vars:     Size  Location     Type
 38241 ;;		None
 38242 ;; Return value:  Size  Location     Type
 38243 ;;                  1  [STACK] void 
 38244 ;; Registers used:
 38245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 38246 ;; Tracked objects:
 38247 ;;		On entry : 3F/0
 38248 ;;		On exit  : 0/0
 38249 ;;		Unchanged: 0/0
 38250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38255 ;;Total ram usage:        0 bytes
 38256 ;; Hardware stack levels used:    1
 38257 ;; Hardware stack levels required when called:   13
 38258 ;; This function calls:
 38259 ;;		Absolute function
 38260 ;;		_TMR3_DefaultInterruptHandler
 38261 ;;		_calc_bsoc
 38262 ;; This function is called by:
 38263 ;;		_TMR3_ISR
 38264 ;; This function uses a reentrant model
 38265 ;;
 38266                           
 38267                           	psect	text172
 38268  01D82C                     __ptext172:
 38269                           	opt callstack 0
 38270  01D82C                     _TMR3_CallBack:
 38271                           	opt callstack 2
 38272                           
 38273                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 38274                           
 38275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38276                           ;incstack = 0
 38277  01D82C  0100               	movlb	0	; () banked
 38278  01D82E  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 38279  01D830  1179               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 38280  01D832  117A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 38281  01D834  B4D8               	btfsc	status,2,c
 38282  01D836  0012               	return	
 38283                           
 38284                           ; BSR set to: 0
 38285                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 38286  01D838  D801               	call	u1372_28
 38287  01D83A  0012               	return	
 38288  01D83C                     u1372_28:
 38289  01D83C  0005               	push	
 38290  01D83E  6EFA               	movwf	pclath,c
 38291  01D840  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 38292  01D842  6EFD               	movwf	tosl,c
 38293  01D844  5179               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 38294  01D846  6EFE               	movwf	tosh,c
 38295  01D848  517A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 38296  01D84A  6EFF               	movwf	tosu,c
 38297  01D84C  50FA               	movf	pclath,w,c
 38298  01D84E  0012               	return		;indir
 38299  01D850                     __end_of_TMR3_CallBack:
 38300                           	opt callstack 0
 38301                           
 38302 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 38303 ;; Defined at:
 38304 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 38305 ;; Parameters:    Size  Location     Type
 38306 ;;		None
 38307 ;; Auto vars:     Size  Location     Type
 38308 ;;		None
 38309 ;; Return value:  Size  Location     Type
 38310 ;;                  1  [STACK] void 
 38311 ;; Registers used:
 38312 ;;		None
 38313 ;; Tracked objects:
 38314 ;;		On entry : 3F/0
 38315 ;;		On exit  : 0/0
 38316 ;;		Unchanged: 0/0
 38317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38322 ;;Total ram usage:        0 bytes
 38323 ;; Hardware stack levels used:    1
 38324 ;; Hardware stack levels required when called:    3
 38325 ;; This function calls:
 38326 ;;		Nothing
 38327 ;; This function is called by:
 38328 ;;		_TMR3_Initialize
 38329 ;;		_TMR3_CallBack
 38330 ;; This function uses a reentrant model
 38331 ;;
 38332                           
 38333                           	psect	text173
 38334  01DBE8                     __ptext173:
 38335                           	opt callstack 0
 38336  01DBE8                     _TMR3_DefaultInterruptHandler:
 38337                           	opt callstack 11
 38338                           
 38339                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38340                           
 38341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38342                           ;incstack = 0
 38343  01DBE8  0012               	return		;funcret
 38344  01DBEA                     __end_of_TMR3_DefaultInterruptHandler:
 38345                           	opt callstack 0
 38346                           
 38347 ;; *************** function _calc_bsoc *****************
 38348 ;; Defined at:
 38349 ;;		line 39 in file "bsoc.c"
 38350 ;; Parameters:    Size  Location     Type
 38351 ;;		None
 38352 ;; Auto vars:     Size  Location     Type
 38353 ;;  adj             4  [STACK] float 
 38354 ;;  log_ptr         2  [STACK] PTR unsigned char 
 38355 ;;		 -> port_data(512), 
 38356 ;; Return value:  Size  Location     Type
 38357 ;;                  1  [STACK] void 
 38358 ;; Registers used:
 38359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 38360 ;; Tracked objects:
 38361 ;;		On entry : 3F/0
 38362 ;;		On exit  : 5/1
 38363 ;;		Unchanged: 0/0
 38364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38369 ;;Total ram usage:        0 bytes
 38370 ;; Hardware stack levels used:    1
 38371 ;; Hardware stack levels required when called:   12
 38372 ;; This function calls:
 38373 ;;		_StartTimer
 38374 ;;		___asfladd
 38375 ;;		___fldiv
 38376 ;;		___flge
 38377 ;;		___flmul
 38378 ;;		___flneg
 38379 ;;		___fltol
 38380 ;;		_fabsf
 38381 ;;		_get_ac_charger_relay
 38382 ;;		_port_data_dma_ptr
 38383 ;;		_send_port_data_dma
 38384 ;;		_sprintf
 38385 ;;		_strlen
 38386 ;; This function is called by:
 38387 ;;		_init_bsoc
 38388 ;;		_TMR3_CallBack
 38389 ;; This function uses a reentrant model
 38390 ;;
 38391                           
 38392                           	psect	text174
 38393  014022                     __ptext174:
 38394                           	opt callstack 0
 38395  014022                     _calc_bsoc:
 38396                           	opt callstack 0
 38397                           
 38398                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38399  014022  0E06               	movlw	6
 38400  014024  26E1               	addwf	fsr1l,f,c
 38401  014026  0E00               	movlw	0
 38402  014028  22E2               	addwfc	fsr1h,f,c
 38403                           
 38404                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 38405                           
 38406                           ;incstack = 0
 38407  01402A  0E00               	movlw	0
 38408  01402C  6E09               	movwf	(btemp+8)^0,c
 38409  01402E  0E00               	movlw	0
 38410  014030  6E0A               	movwf	(btemp+9)^0,c
 38411  014032  0E80               	movlw	128
 38412  014034  6E0B               	movwf	(btemp+10)^0,c
 38413  014036  0E3F               	movlw	63
 38414  014038  6E0C               	movwf	(btemp+11)^0,c
 38415                           
 38416                           ;stkvar	_adj @ sp[(-6)+0]
 38417  01403A  0EFA               	movlw	-6
 38418  01403C  0060  F027  FFE3   	movff	btemp+8,plusw1
 38419  014042  0EFB               	movlw	-5
 38420  014044  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38421  01404A  0EFC               	movlw	-4
 38422  01404C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38423  014052  0EFD               	movlw	-3
 38424  014054  0060  F033  FFE3   	movff	btemp+11,plusw1
 38425  01405A  82BE               	bsf	190,1,c	;volatile
 38426                           
 38427                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 38428  01405C  0E00               	movlw	0
 38429  01405E  6EE6               	movwf	postinc1,c
 38430  014060  0E00               	movlw	0
 38431  014062  6EE6               	movwf	postinc1,c
 38432  014064  0E61               	movlw	97
 38433  014066  6EE6               	movwf	postinc1,c
 38434  014068  0E45               	movlw	69
 38435  01406A  6EE6               	movwf	postinc1,c
 38436  01406C  EE22  F043         	lfsr	2,_C+68	;volatile
 38437  014070  006F FF7B FFE6     	movff	postinc2,postinc1
 38438  014076  006F FF7B FFE6     	movff	postinc2,postinc1
 38439  01407C  006F FF7B FFE6     	movff	postinc2,postinc1
 38440  014082  006F FF7B FFE6     	movff	postinc2,postinc1
 38441  014088  EC3B  F0AD         	call	___fldiv	;wreg free
 38442  01408C  0060  F007  FFE6   	movff	btemp,postinc1
 38443  014092  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38444  014098  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38445  01409E  0060  F013  FFE6   	movff	btemp+3,postinc1
 38446  0140A4  0E8F               	movlw	low (_C+144)
 38447  0140A6  6EE6               	movwf	postinc1,c
 38448  0140A8  0E08               	movlw	high (_C+144)
 38449  0140AA  6EE6               	movwf	postinc1,c
 38450  0140AC  EC19  F0E3         	call	___asfladd	;wreg free
 38451                           
 38452                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 38453  0140B0  EE22  F08F         	lfsr	2,_C+144	;volatile
 38454  0140B4  006F FF7B FFE6     	movff	postinc2,postinc1
 38455  0140BA  006F FF7B FFE6     	movff	postinc2,postinc1
 38456  0140C0  006F FF7B FFE6     	movff	postinc2,postinc1
 38457  0140C6  006F FF7B FFE6     	movff	postinc2,postinc1
 38458  0140CC  EE22  F08B         	lfsr	2,_C+140	;volatile
 38459  0140D0  006F FF7B FFE6     	movff	postinc2,postinc1
 38460  0140D6  006F FF7B FFE6     	movff	postinc2,postinc1
 38461  0140DC  006F FF7B FFE6     	movff	postinc2,postinc1
 38462  0140E2  006F FF7B FFE6     	movff	postinc2,postinc1
 38463  0140E8  ECFF  F0D0         	call	___flge	;wreg free
 38464  0140EC  B001               	btfsc	btemp& (0+255),0,c
 38465  0140EE  D00E               	goto	l14266
 38466                           
 38467                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 38468  0140F0  EE22  F08B         	lfsr	2,_C+140	;volatile
 38469  0140F4  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
 38470  0140FA  006F FF78  F890    	movff	postinc2,_C+145	;volatile
 38471  014100  006F FF78  F891    	movff	postinc2,_C+146	;volatile
 38472  014106  006F FF74  F892    	movff	postdec2,_C+147	;volatile
 38473  01410C                     l14266:
 38474                           
 38475                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 38476  01410C  0ECD               	movlw	205
 38477  01410E  6EE6               	movwf	postinc1,c
 38478  014110  0ECC               	movlw	204
 38479  014112  6EE6               	movwf	postinc1,c
 38480  014114  0ECC               	movlw	204
 38481  014116  6EE6               	movwf	postinc1,c
 38482  014118  0E3D               	movlw	61
 38483  01411A  6EE6               	movwf	postinc1,c
 38484  01411C  EE22  F08F         	lfsr	2,_C+144	;volatile
 38485  014120  006F FF7B FFE6     	movff	postinc2,postinc1
 38486  014126  006F FF7B FFE6     	movff	postinc2,postinc1
 38487  01412C  006F FF7B FFE6     	movff	postinc2,postinc1
 38488  014132  006F FF7B FFE6     	movff	postinc2,postinc1
 38489  014138  ECFF  F0D0         	call	___flge	;wreg free
 38490  01413C  B001               	btfsc	btemp& (0+255),0,c
 38491  01413E  D010               	goto	l14270
 38492                           
 38493                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 38494  014140  0ECD               	movlw	205
 38495  014142  006F FFA0  F88F    	movff	wreg,_C+144	;volatile
 38496  014148  0ECC               	movlw	204
 38497  01414A  006F FFA0  F890    	movff	wreg,_C+145	;volatile
 38498  014150  0ECC               	movlw	204
 38499  014152  006F FFA0  F891    	movff	wreg,_C+146	;volatile
 38500  014158  0E3D               	movlw	61
 38501  01415A  006F FFA0  F892    	movff	wreg,_C+147	;volatile
 38502  014160                     l14270:
 38503                           
 38504                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 38505  014160  EE22  F043         	lfsr	2,_C+68	;volatile
 38506  014164  006F FF7B FFE6     	movff	postinc2,postinc1
 38507  01416A  006F FF7B FFE6     	movff	postinc2,postinc1
 38508  014170  006F FF7B FFE6     	movff	postinc2,postinc1
 38509  014176  006F FF7B FFE6     	movff	postinc2,postinc1
 38510  01417C  0E0A               	movlw	10
 38511  01417E  6EE6               	movwf	postinc1,c
 38512  014180  0ED7               	movlw	215
 38513  014182  6EE6               	movwf	postinc1,c
 38514  014184  0E23               	movlw	35
 38515  014186  6EE6               	movwf	postinc1,c
 38516  014188  0E3C               	movlw	60
 38517  01418A  6EE6               	movwf	postinc1,c
 38518  01418C  ECFF  F0D0         	call	___flge	;wreg free
 38519  014190  B001               	btfsc	btemp& (0+255),0,c
 38520  014192  D01C               	goto	l14274
 38521                           
 38522                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 38523  014194  0062  F2F4  F009   	movff	_C+190,btemp+8	;volatile
 38524  01419A  0062  F2F8  F00A   	movff	_C+191,btemp+9	;volatile
 38525  0141A0  0062  F2FC  F00B   	movff	_C+192,btemp+10	;volatile
 38526  0141A6  0062  F300  F00C   	movff	_C+193,btemp+11	;volatile
 38527                           
 38528                           ;stkvar	_adj @ sp[(-6)+0]
 38529  0141AC  0EFA               	movlw	-6
 38530  0141AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 38531  0141B4  0EFB               	movlw	-5
 38532  0141B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38533  0141BC  0EFC               	movlw	-4
 38534  0141BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38535  0141C4  0EFD               	movlw	-3
 38536  0141C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 38537  0141CC                     l14274:
 38538                           
 38539                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 38540  0141CC  0E0A               	movlw	10
 38541  0141CE  6EE6               	movwf	postinc1,c
 38542  0141D0  0ED7               	movlw	215
 38543  0141D2  6EE6               	movwf	postinc1,c
 38544  0141D4  0E23               	movlw	35
 38545  0141D6  6EE6               	movwf	postinc1,c
 38546  0141D8  0E3C               	movlw	60
 38547  0141DA  6EE6               	movwf	postinc1,c
 38548  0141DC  EE22  F043         	lfsr	2,_C+68	;volatile
 38549  0141E0  006F FF7B FFE6     	movff	postinc2,postinc1
 38550  0141E6  006F FF7B FFE6     	movff	postinc2,postinc1
 38551  0141EC  006F FF7B FFE6     	movff	postinc2,postinc1
 38552  0141F2  006F FF7B FFE6     	movff	postinc2,postinc1
 38553  0141F8  ECFF  F0D0         	call	___flge	;wreg free
 38554  0141FC  B001               	btfsc	btemp& (0+255),0,c
 38555  0141FE  D01C               	goto	l14278
 38556                           
 38557                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 38558  014200  0062  F2E4  F009   	movff	_C+186,btemp+8	;volatile
 38559  014206  0062  F2E8  F00A   	movff	_C+187,btemp+9	;volatile
 38560  01420C  0062  F2EC  F00B   	movff	_C+188,btemp+10	;volatile
 38561  014212  0062  F2F0  F00C   	movff	_C+189,btemp+11	;volatile
 38562                           
 38563                           ;stkvar	_adj @ sp[(-6)+0]
 38564  014218  0EFA               	movlw	-6
 38565  01421A  0060  F027  FFE3   	movff	btemp+8,plusw1
 38566  014220  0EFB               	movlw	-5
 38567  014222  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38568  014228  0EFC               	movlw	-4
 38569  01422A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38570  014230  0EFD               	movlw	-3
 38571  014232  0060  F033  FFE3   	movff	btemp+11,plusw1
 38572  014238                     l14278:
 38573                           
 38574                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 38575  014238  0E00               	movlw	0
 38576  01423A  6EE6               	movwf	postinc1,c
 38577  01423C  0E00               	movlw	0
 38578  01423E  6EE6               	movwf	postinc1,c
 38579  014240  0E61               	movlw	97
 38580  014242  6EE6               	movwf	postinc1,c
 38581  014244  0E45               	movlw	69
 38582  014246  6EE6               	movwf	postinc1,c
 38583                           
 38584                           ;stkvar	_adj @ sp[(-10)+0]
 38585  014248  0EF6               	movlw	-10
 38586  01424A  006F FF8F FFE6     	movff	plusw1,postinc1
 38587  014250  006F FF8F FFE6     	movff	plusw1,postinc1
 38588  014256  006F FF8F FFE6     	movff	plusw1,postinc1
 38589  01425C  006F FF8F FFE6     	movff	plusw1,postinc1
 38590  014262  EE22  F043         	lfsr	2,_C+68	;volatile
 38591  014266  006F FF7B FFE6     	movff	postinc2,postinc1
 38592  01426C  006F FF7B FFE6     	movff	postinc2,postinc1
 38593  014272  006F FF7B FFE6     	movff	postinc2,postinc1
 38594  014278  006F FF7B FFE6     	movff	postinc2,postinc1
 38595  01427E  EC48  F0A5         	call	___flmul	;wreg free
 38596  014282  0060  F007  FFE6   	movff	btemp,postinc1
 38597  014288  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38598  01428E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38599  014294  0060  F013  FFE6   	movff	btemp+3,postinc1
 38600  01429A  EC3B  F0AD         	call	___fldiv	;wreg free
 38601  01429E  0060  F007  FFE6   	movff	btemp,postinc1
 38602  0142A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38603  0142AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38604  0142B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 38605  0142B6  0E8F               	movlw	low (_C+144)
 38606  0142B8  6EE6               	movwf	postinc1,c
 38607  0142BA  0E08               	movlw	high (_C+144)
 38608  0142BC  6EE6               	movwf	postinc1,c
 38609  0142BE  EC19  F0E3         	call	___asfladd	;wreg free
 38610                           
 38611                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 38612  0142C2  EE22  F08F         	lfsr	2,_C+144	;volatile
 38613  0142C6  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 38614  0142CC  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 38615  0142D2  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 38616  0142D8  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 38617                           
 38618                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 38619  0142DE  EE22  F09B         	lfsr	2,_C+156	;volatile
 38620  0142E2  006F FF7B FFE6     	movff	postinc2,postinc1
 38621  0142E8  006F FF7B FFE6     	movff	postinc2,postinc1
 38622  0142EE  006F FF7B FFE6     	movff	postinc2,postinc1
 38623  0142F4  006F FF7B FFE6     	movff	postinc2,postinc1
 38624  0142FA  EE22  F08B         	lfsr	2,_C+140	;volatile
 38625  0142FE  006F FF7B FFE6     	movff	postinc2,postinc1
 38626  014304  006F FF7B FFE6     	movff	postinc2,postinc1
 38627  01430A  006F FF7B FFE6     	movff	postinc2,postinc1
 38628  014310  006F FF7B FFE6     	movff	postinc2,postinc1
 38629  014316  ECFF  F0D0         	call	___flge	;wreg free
 38630  01431A  B001               	btfsc	btemp& (0+255),0,c
 38631  01431C  D00E               	goto	l14286
 38632                           
 38633                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 38634  01431E  EE22  F08B         	lfsr	2,_C+140	;volatile
 38635  014322  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 38636  014328  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 38637  01432E  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 38638  014334  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 38639  01433A                     l14286:
 38640                           
 38641                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 38642  01433A  0ECD               	movlw	205
 38643  01433C  6EE6               	movwf	postinc1,c
 38644  01433E  0ECC               	movlw	204
 38645  014340  6EE6               	movwf	postinc1,c
 38646  014342  0ECC               	movlw	204
 38647  014344  6EE6               	movwf	postinc1,c
 38648  014346  0E3D               	movlw	61
 38649  014348  6EE6               	movwf	postinc1,c
 38650  01434A  EE22  F09B         	lfsr	2,_C+156	;volatile
 38651  01434E  006F FF7B FFE6     	movff	postinc2,postinc1
 38652  014354  006F FF7B FFE6     	movff	postinc2,postinc1
 38653  01435A  006F FF7B FFE6     	movff	postinc2,postinc1
 38654  014360  006F FF7B FFE6     	movff	postinc2,postinc1
 38655  014366  ECFF  F0D0         	call	___flge	;wreg free
 38656  01436A  B001               	btfsc	btemp& (0+255),0,c
 38657  01436C  D010               	goto	l14290
 38658                           
 38659                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 38660  01436E  0ECD               	movlw	205
 38661  014370  006F FFA0  F89B    	movff	wreg,_C+156	;volatile
 38662  014376  0ECC               	movlw	204
 38663  014378  006F FFA0  F89C    	movff	wreg,_C+157	;volatile
 38664  01437E  0ECC               	movlw	204
 38665  014380  006F FFA0  F89D    	movff	wreg,_C+158	;volatile
 38666  014386  0E3D               	movlw	61
 38667  014388  006F FFA0  F89E    	movff	wreg,_C+159	;volatile
 38668  01438E                     l14290:
 38669                           
 38670                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 38671  01438E  0E00               	movlw	0
 38672  014390  6EE6               	movwf	postinc1,c
 38673  014392  0E00               	movlw	0
 38674  014394  6EE6               	movwf	postinc1,c
 38675  014396  0E61               	movlw	97
 38676  014398  6EE6               	movwf	postinc1,c
 38677  01439A  0E45               	movlw	69
 38678  01439C  6EE6               	movwf	postinc1,c
 38679  01439E  EE22  F047         	lfsr	2,_C+72	;volatile
 38680  0143A2  006F FF7B FFE6     	movff	postinc2,postinc1
 38681  0143A8  006F FF7B FFE6     	movff	postinc2,postinc1
 38682  0143AE  006F FF7B FFE6     	movff	postinc2,postinc1
 38683  0143B4  006F FF7B FFE6     	movff	postinc2,postinc1
 38684  0143BA  EC3B  F0AD         	call	___fldiv	;wreg free
 38685  0143BE  0060  F007  FFE6   	movff	btemp,postinc1
 38686  0143C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38687  0143CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38688  0143D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 38689  0143D6  0E93               	movlw	low (_C+148)
 38690  0143D8  6EE6               	movwf	postinc1,c
 38691  0143DA  0E08               	movlw	high (_C+148)
 38692  0143DC  6EE6               	movwf	postinc1,c
 38693  0143DE  EC19  F0E3         	call	___asfladd	;wreg free
 38694                           
 38695                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 38696  0143E2  0E00               	movlw	0
 38697  0143E4  6EE6               	movwf	postinc1,c
 38698  0143E6  0E00               	movlw	0
 38699  0143E8  6EE6               	movwf	postinc1,c
 38700  0143EA  0E61               	movlw	97
 38701  0143EC  6EE6               	movwf	postinc1,c
 38702  0143EE  0E45               	movlw	69
 38703  0143F0  6EE6               	movwf	postinc1,c
 38704  0143F2  EE22  F07B         	lfsr	2,_C+124	;volatile
 38705  0143F6  006F FF7B FFE6     	movff	postinc2,postinc1
 38706  0143FC  006F FF7B FFE6     	movff	postinc2,postinc1
 38707  014402  006F FF7B FFE6     	movff	postinc2,postinc1
 38708  014408  006F FF7B FFE6     	movff	postinc2,postinc1
 38709  01440E  EC3B  F0AD         	call	___fldiv	;wreg free
 38710  014412  0060  F007  FFE6   	movff	btemp,postinc1
 38711  014418  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38712  01441E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38713  014424  0060  F013  FFE6   	movff	btemp+3,postinc1
 38714  01442A  0EA7               	movlw	low (_C+168)
 38715  01442C  6EE6               	movwf	postinc1,c
 38716  01442E  0E08               	movlw	high (_C+168)
 38717  014430  6EE6               	movwf	postinc1,c
 38718  014432  EC19  F0E3         	call	___asfladd	;wreg free
 38719                           
 38720                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 38721  014436  0E00               	movlw	0
 38722  014438  6EE6               	movwf	postinc1,c
 38723  01443A  0E00               	movlw	0
 38724  01443C  6EE6               	movwf	postinc1,c
 38725  01443E  0E61               	movlw	97
 38726  014440  6EE6               	movwf	postinc1,c
 38727  014442  0E45               	movlw	69
 38728  014444  6EE6               	movwf	postinc1,c
 38729  014446  EE22  F077         	lfsr	2,_C+120	;volatile
 38730  01444A  006F FF7B FFE6     	movff	postinc2,postinc1
 38731  014450  006F FF7B FFE6     	movff	postinc2,postinc1
 38732  014456  006F FF7B FFE6     	movff	postinc2,postinc1
 38733  01445C  006F FF7B FFE6     	movff	postinc2,postinc1
 38734  014462  EC3B  F0AD         	call	___fldiv	;wreg free
 38735  014466  0060  F007  FFE6   	movff	btemp,postinc1
 38736  01446C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38737  014472  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38738  014478  0060  F013  FFE6   	movff	btemp+3,postinc1
 38739  01447E  0EAB               	movlw	low (_C+172)
 38740  014480  6EE6               	movwf	postinc1,c
 38741  014482  0E08               	movlw	high (_C+172)
 38742  014484  6EE6               	movwf	postinc1,c
 38743  014486  EC19  F0E3         	call	___asfladd	;wreg free
 38744                           
 38745                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 38746  01448A  0E00               	movlw	0
 38747  01448C  6EE6               	movwf	postinc1,c
 38748  01448E  0E00               	movlw	0
 38749  014490  6EE6               	movwf	postinc1,c
 38750  014492  0E61               	movlw	97
 38751  014494  6EE6               	movwf	postinc1,c
 38752  014496  0E45               	movlw	69
 38753  014498  6EE6               	movwf	postinc1,c
 38754  01449A  EE22  F073         	lfsr	2,_C+116	;volatile
 38755  01449E  006F FF7B FFE6     	movff	postinc2,postinc1
 38756  0144A4  006F FF7B FFE6     	movff	postinc2,postinc1
 38757  0144AA  006F FF7B FFE6     	movff	postinc2,postinc1
 38758  0144B0  006F FF7B FFE6     	movff	postinc2,postinc1
 38759  0144B6  EC3B  F0AD         	call	___fldiv	;wreg free
 38760  0144BA  0060  F007  FFE6   	movff	btemp,postinc1
 38761  0144C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38762  0144C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38763  0144CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 38764  0144D2  0EAF               	movlw	low (_C+176)
 38765  0144D4  6EE6               	movwf	postinc1,c
 38766  0144D6  0E08               	movlw	high (_C+176)
 38767  0144D8  6EE6               	movwf	postinc1,c
 38768  0144DA  EC19  F0E3         	call	___asfladd	;wreg free
 38769                           
 38770                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 38771  0144DE  EE22  F07F         	lfsr	2,_C+128	;volatile
 38772  0144E2  006F FF7B FFE6     	movff	postinc2,postinc1
 38773  0144E8  006F FF7B FFE6     	movff	postinc2,postinc1
 38774  0144EE  006F FF7B FFE6     	movff	postinc2,postinc1
 38775  0144F4  006F FF7B FFE6     	movff	postinc2,postinc1
 38776  0144FA  0E00               	movlw	0
 38777  0144FC  6EE6               	movwf	postinc1,c
 38778  0144FE  0E00               	movlw	0
 38779  014500  6EE6               	movwf	postinc1,c
 38780  014502  0E00               	movlw	0
 38781  014504  6EE6               	movwf	postinc1,c
 38782  014506  0E00               	movlw	0
 38783  014508  6EE6               	movwf	postinc1,c
 38784  01450A  ECFF  F0D0         	call	___flge	;wreg free
 38785  01450E  B001               	btfsc	btemp& (0+255),0,c
 38786  014510  D02A               	goto	l14296
 38787                           
 38788                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 38789  014512  0E00               	movlw	0
 38790  014514  6EE6               	movwf	postinc1,c
 38791  014516  0E00               	movlw	0
 38792  014518  6EE6               	movwf	postinc1,c
 38793  01451A  0E61               	movlw	97
 38794  01451C  6EE6               	movwf	postinc1,c
 38795  01451E  0E45               	movlw	69
 38796  014520  6EE6               	movwf	postinc1,c
 38797  014522  EE22  F07F         	lfsr	2,_C+128	;volatile
 38798  014526  006F FF7B FFE6     	movff	postinc2,postinc1
 38799  01452C  006F FF7B FFE6     	movff	postinc2,postinc1
 38800  014532  006F FF7B FFE6     	movff	postinc2,postinc1
 38801  014538  006F FF7B FFE6     	movff	postinc2,postinc1
 38802  01453E  EC3B  F0AD         	call	___fldiv	;wreg free
 38803  014542  0060  F007  FFE6   	movff	btemp,postinc1
 38804  014548  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38805  01454E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38806  014554  0060  F013  FFE6   	movff	btemp+3,postinc1
 38807  01455A  0E9F               	movlw	low (_C+160)
 38808  01455C  6EE6               	movwf	postinc1,c
 38809  01455E  0E08               	movlw	high (_C+160)
 38810  014560  6EE6               	movwf	postinc1,c
 38811  014562  EC19  F0E3         	call	___asfladd	;wreg free
 38812  014566                     l14296:
 38813                           
 38814                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 38815  014566  EE22  F07F         	lfsr	2,_C+128	;volatile
 38816  01456A  0E03               	movlw	3
 38817  01456C  AEDB               	btfss	plusw2,7,c
 38818  01456E  D038               	goto	l14300
 38819                           
 38820                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 38821  014570  0E00               	movlw	0
 38822  014572  6EE6               	movwf	postinc1,c
 38823  014574  0E00               	movlw	0
 38824  014576  6EE6               	movwf	postinc1,c
 38825  014578  0E61               	movlw	97
 38826  01457A  6EE6               	movwf	postinc1,c
 38827  01457C  0E45               	movlw	69
 38828  01457E  6EE6               	movwf	postinc1,c
 38829  014580  EE22  F07F         	lfsr	2,_C+128	;volatile
 38830  014584  006F FF7B FFE6     	movff	postinc2,postinc1
 38831  01458A  006F FF7B FFE6     	movff	postinc2,postinc1
 38832  014590  006F FF7B FFE6     	movff	postinc2,postinc1
 38833  014596  006F FF7B FFE6     	movff	postinc2,postinc1
 38834  01459C  EC3B  F0AD         	call	___fldiv	;wreg free
 38835  0145A0  0060  F007  FFE6   	movff	btemp,postinc1
 38836  0145A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38837  0145AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38838  0145B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 38839  0145B8  EC2D  F0DE         	call	_fabsf	;wreg free
 38840  0145BC  0060  F007  FFE6   	movff	btemp,postinc1
 38841  0145C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38842  0145C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38843  0145CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 38844  0145D4  0EA3               	movlw	low (_C+164)
 38845  0145D6  6EE6               	movwf	postinc1,c
 38846  0145D8  0E08               	movlw	high (_C+164)
 38847  0145DA  6EE6               	movwf	postinc1,c
 38848  0145DC  EC19  F0E3         	call	___asfladd	;wreg free
 38849  0145E0                     l14300:
 38850                           
 38851                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 38852  0145E0  0E00               	movlw	0
 38853  0145E2  6EE6               	movwf	postinc1,c
 38854  0145E4  0E00               	movlw	0
 38855  0145E6  6EE6               	movwf	postinc1,c
 38856  0145E8  0EC8               	movlw	200
 38857  0145EA  6EE6               	movwf	postinc1,c
 38858  0145EC  0E42               	movlw	66
 38859  0145EE  6EE6               	movwf	postinc1,c
 38860  0145F0  EE22  F08B         	lfsr	2,_C+140	;volatile
 38861  0145F4  006F FF7B FFE6     	movff	postinc2,postinc1
 38862  0145FA  006F FF7B FFE6     	movff	postinc2,postinc1
 38863  014600  006F FF7B FFE6     	movff	postinc2,postinc1
 38864  014606  006F FF7B FFE6     	movff	postinc2,postinc1
 38865  01460C  EE22  F09B         	lfsr	2,_C+156	;volatile
 38866  014610  006F FF7B FFE6     	movff	postinc2,postinc1
 38867  014616  006F FF7B FFE6     	movff	postinc2,postinc1
 38868  01461C  006F FF7B FFE6     	movff	postinc2,postinc1
 38869  014622  006F FF7B FFE6     	movff	postinc2,postinc1
 38870  014628  EC3B  F0AD         	call	___fldiv	;wreg free
 38871  01462C  0060  F007  FFE6   	movff	btemp,postinc1
 38872  014632  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38873  014638  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38874  01463E  0060  F013  FFE6   	movff	btemp+3,postinc1
 38875  014644  EC48  F0A5         	call	___flmul	;wreg free
 38876  014648  0060  F007  FFE6   	movff	btemp,postinc1
 38877  01464E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38878  014654  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38879  01465A  0060  F013  FFE6   	movff	btemp+3,postinc1
 38880  014660  EC46  F0D0         	call	___fltol	;wreg free
 38881  014664  0060  F004  F00B   	movff	btemp,btemp+10
 38882  01466A  0060  F008  F00C   	movff	btemp+1,btemp+11
 38883  014670  0E01               	movlw	1
 38884  014672  260B               	addwf	(btemp+10)^0,f,c
 38885  014674  0E00               	movlw	0
 38886  014676  220C               	addwfc	(btemp+11)^0,f,c
 38887  014678  0060  F02C  F8B5   	movff	btemp+10,_C+182	;volatile
 38888  01467E  0060  F030  F8B6   	movff	btemp+11,_C+183	;volatile
 38889                           
 38890                           ;bsoc.c: 76:  if (C.soc > 100)
 38891  014684  EE22  F0B5         	lfsr	2,_C+182	;volatile
 38892  014688  0E01               	movlw	1
 38893  01468A  50DB               	movf	plusw2,w,c
 38894  01468C  E104               	bnz	u1365_20
 38895  01468E  0E65               	movlw	101
 38896  014690  5CDE               	subwf	postinc2,w,c
 38897  014692  A0D8               	btfss	status,0,c
 38898  014694  D008               	goto	l14306
 38899  014696                     u1365_20:
 38900                           
 38901                           ;bsoc.c: 77:   C.soc = 100;
 38902  014696  0E64               	movlw	100
 38903  014698  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
 38904  01469E  0E00               	movlw	0
 38905  0146A0  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
 38906  0146A6                     l14306:
 38907                           
 38908                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 38909  0146A6  EE22  F043         	lfsr	2,_C+68	;volatile
 38910  0146AA  0E03               	movlw	3
 38911  0146AC  AEDB               	btfss	plusw2,7,c
 38912  0146AE  D047               	goto	l2311
 38913                           
 38914                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 38915  0146B0  EE22  F043         	lfsr	2,_C+68	;volatile
 38916  0146B4  006F FF7B FFE6     	movff	postinc2,postinc1
 38917  0146BA  006F FF7B FFE6     	movff	postinc2,postinc1
 38918  0146C0  006F FF7B FFE6     	movff	postinc2,postinc1
 38919  0146C6  006F FF7B FFE6     	movff	postinc2,postinc1
 38920  0146CC  EE22  F09B         	lfsr	2,_C+156	;volatile
 38921  0146D0  006F FF7B FFE6     	movff	postinc2,postinc1
 38922  0146D6  006F FF7B FFE6     	movff	postinc2,postinc1
 38923  0146DC  006F FF7B FFE6     	movff	postinc2,postinc1
 38924  0146E2  006F FF7B FFE6     	movff	postinc2,postinc1
 38925  0146E8  EC3B  F0AD         	call	___fldiv	;wreg free
 38926  0146EC  0060  F007  FFE6   	movff	btemp,postinc1
 38927  0146F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38928  0146F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38929  0146FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 38930  014704  ECFE  F0E6         	call	___flneg	;wreg free
 38931  014708  0060  F007  FFE6   	movff	btemp,postinc1
 38932  01470E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38933  014714  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38934  01471A  0060  F013  FFE6   	movff	btemp+3,postinc1
 38935  014720  EC46  F0D0         	call	___fltol	;wreg free
 38936  014724  0060  F004  F00B   	movff	btemp,btemp+10
 38937  01472A  0060  F008  F00C   	movff	btemp+1,btemp+11
 38938  014730  0060  F02C  F8B3   	movff	btemp+10,_C+180	;volatile
 38939  014736  0060  F030  F8B4   	movff	btemp+11,_C+181	;volatile
 38940                           
 38941                           ;bsoc.c: 81:  } else {
 38942  01473C  D008               	goto	l14310
 38943  01473E                     l2311:
 38944                           
 38945                           ;bsoc.c: 82:   C.runtime = 99;
 38946  01473E  0E63               	movlw	99
 38947  014740  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 38948  014746  0E00               	movlw	0
 38949  014748  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 38950  01474E                     l14310:
 38951                           
 38952                           ;bsoc.c: 84:  if (C.runtime > 99)
 38953  01474E  EE22  F0B3         	lfsr	2,_C+180	;volatile
 38954  014752  0E01               	movlw	1
 38955  014754  50DB               	movf	plusw2,w,c
 38956  014756  E104               	bnz	u1367_20
 38957  014758  0E64               	movlw	100
 38958  01475A  5CDE               	subwf	postinc2,w,c
 38959  01475C  A0D8               	btfss	status,0,c
 38960  01475E  D008               	goto	l14314
 38961  014760                     u1367_20:
 38962                           
 38963                           ;bsoc.c: 85:   C.runtime = 99;
 38964  014760  0E63               	movlw	99
 38965  014762  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 38966  014768  0E00               	movlw	0
 38967  01476A  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 38968  014770                     l14314:
 38969                           
 38970                           ;bsoc.c: 87:  V.lowint_count++;
 38971  014770  0E01               	movlw	1
 38972  014772  0101               	movlb	1	; () banked
 38973  014774  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 38974  014776  0E00               	movlw	0
 38975  014778  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 38976  01477A  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 38977  01477C  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 38978                           
 38979                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 38980  01477E  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 38981  014780  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 38982  014782  A4D8               	btfss	status,2,c
 38983  014784  D177               	goto	l14326
 38984                           
 38985                           ; BSR set to: 1
 38986  014786  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 38987  014788  B4D8               	btfsc	status,2,c
 38988  01478A  D174               	goto	l14326
 38989                           
 38990                           ; BSR set to: 1
 38991                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 38992  01478C  ECB6  F0ED         	call	_port_data_dma_ptr	;wreg free
 38993                           
 38994                           ;stkvar	_log_ptr @ sp[(-6)+4]
 38995  014790  0EFF               	movlw	-1
 38996  014792  0060  F00B  FFE3   	movff	btemp+1,plusw1
 38997  014798  0EFE               	movlw	-2
 38998  01479A  0060  F007  FFE3   	movff	btemp,plusw1
 38999                           
 39000                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 39001  0147A0  EE22  F0B9         	lfsr	2,_C+186	;volatile
 39002  0147A4  006F FF7B FFE6     	movff	postinc2,postinc1
 39003  0147AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39004  0147B0  006F FF7B FFE6     	movff	postinc2,postinc1
 39005  0147B6  006F FF7B FFE6     	movff	postinc2,postinc1
 39006  0147BC  EE22  F0BD         	lfsr	2,_C+190	;volatile
 39007  0147C0  006F FF7B FFE6     	movff	postinc2,postinc1
 39008  0147C6  006F FF7B FFE6     	movff	postinc2,postinc1
 39009  0147CC  006F FF7B FFE6     	movff	postinc2,postinc1
 39010  0147D2  006F FF7B FFE6     	movff	postinc2,postinc1
 39011  0147D8  EE22  F09B         	lfsr	2,_C+156	;volatile
 39012  0147DC  006F FF7B FFE6     	movff	postinc2,postinc1
 39013  0147E2  006F FF7B FFE6     	movff	postinc2,postinc1
 39014  0147E8  006F FF7B FFE6     	movff	postinc2,postinc1
 39015  0147EE  006F FF7B FFE6     	movff	postinc2,postinc1
 39016  0147F4  EE22  F126         	lfsr	2,_C+295	;volatile
 39017  0147F8  006F FF7B FFE6     	movff	postinc2,postinc1
 39018  0147FE  006F FF7B FFE6     	movff	postinc2,postinc1
 39019  014804  006F FF7B FFE6     	movff	postinc2,postinc1
 39020  01480A  006F FF7B FFE6     	movff	postinc2,postinc1
 39021  014810  EE22  F122         	lfsr	2,_C+291	;volatile
 39022  014814  006F FF7B FFE6     	movff	postinc2,postinc1
 39023  01481A  006F FF7B FFE6     	movff	postinc2,postinc1
 39024  014820  006F FF7B FFE6     	movff	postinc2,postinc1
 39025  014826  006F FF7B FFE6     	movff	postinc2,postinc1
 39026  01482C  EE22  F121         	lfsr	2,_C+290	;volatile
 39027  014830  50DF               	movf	indf2,w,c
 39028  014832  6EE6               	movwf	postinc1,c
 39029  014834  0E00               	movlw	0
 39030  014836  6EE6               	movwf	postinc1,c
 39031  014838  EC9B  F0ED         	call	_get_ac_charger_relay	;wreg free
 39032  01483C  5001               	movf	btemp^0,w,c
 39033  01483E  6EE6               	movwf	postinc1,c
 39034  014840  0E00               	movlw	0
 39035  014842  6EE6               	movwf	postinc1,c
 39036  014844  EE22  F067         	lfsr	2,_C+104	;volatile
 39037  014848  006F FF7B FFE6     	movff	postinc2,postinc1
 39038  01484E  006F FF7B FFE6     	movff	postinc2,postinc1
 39039  014854  006F FF7B FFE6     	movff	postinc2,postinc1
 39040  01485A  006F FF7B FFE6     	movff	postinc2,postinc1
 39041  014860  EE22  F087         	lfsr	2,_C+136	;volatile
 39042  014864  006F FF7B FFE6     	movff	postinc2,postinc1
 39043  01486A  006F FF7B FFE6     	movff	postinc2,postinc1
 39044  014870  006F FF7B FFE6     	movff	postinc2,postinc1
 39045  014876  006F FF7B FFE6     	movff	postinc2,postinc1
 39046  01487C  EE22  F0B3         	lfsr	2,_C+180	;volatile
 39047  014880  006F FF78  F00B    	movff	postinc2,btemp+10
 39048  014886  006F FF74  F00C    	movff	postdec2,btemp+11
 39049  01488C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 39050  014892  0060  F033  FFE6   	movff	btemp+11,postinc1
 39051  014898  EE22  F0B5         	lfsr	2,_C+182	;volatile
 39052  01489C  006F FF78  F00B    	movff	postinc2,btemp+10
 39053  0148A2  006F FF74  F00C    	movff	postdec2,btemp+11
 39054  0148A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 39055  0148AE  0060  F033  FFE6   	movff	btemp+11,postinc1
 39056  0148B4  EE22  F093         	lfsr	2,_C+148	;volatile
 39057  0148B8  006F FF7B FFE6     	movff	postinc2,postinc1
 39058  0148BE  006F FF7B FFE6     	movff	postinc2,postinc1
 39059  0148C4  006F FF7B FFE6     	movff	postinc2,postinc1
 39060  0148CA  006F FF7B FFE6     	movff	postinc2,postinc1
 39061  0148D0  EE22  F08F         	lfsr	2,_C+144	;volatile
 39062  0148D4  006F FF7B FFE6     	movff	postinc2,postinc1
 39063  0148DA  006F FF7B FFE6     	movff	postinc2,postinc1
 39064  0148E0  006F FF7B FFE6     	movff	postinc2,postinc1
 39065  0148E6  006F FF7B FFE6     	movff	postinc2,postinc1
 39066  0148EC  EE22  F077         	lfsr	2,_C+120	;volatile
 39067  0148F0  006F FF7B FFE6     	movff	postinc2,postinc1
 39068  0148F6  006F FF7B FFE6     	movff	postinc2,postinc1
 39069  0148FC  006F FF7B FFE6     	movff	postinc2,postinc1
 39070  014902  006F FF7B FFE6     	movff	postinc2,postinc1
 39071  014908  EE22  F073         	lfsr	2,_C+116	;volatile
 39072  01490C  006F FF7B FFE6     	movff	postinc2,postinc1
 39073  014912  006F FF7B FFE6     	movff	postinc2,postinc1
 39074  014918  006F FF7B FFE6     	movff	postinc2,postinc1
 39075  01491E  006F FF7B FFE6     	movff	postinc2,postinc1
 39076  014924  EE22  F07B         	lfsr	2,_C+124	;volatile
 39077  014928  006F FF7B FFE6     	movff	postinc2,postinc1
 39078  01492E  006F FF7B FFE6     	movff	postinc2,postinc1
 39079  014934  006F FF7B FFE6     	movff	postinc2,postinc1
 39080  01493A  006F FF7B FFE6     	movff	postinc2,postinc1
 39081  014940  EE22  F07F         	lfsr	2,_C+128	;volatile
 39082  014944  006F FF7B FFE6     	movff	postinc2,postinc1
 39083  01494A  006F FF7B FFE6     	movff	postinc2,postinc1
 39084  014950  006F FF7B FFE6     	movff	postinc2,postinc1
 39085  014956  006F FF7B FFE6     	movff	postinc2,postinc1
 39086  01495C  EE22  F047         	lfsr	2,_C+72	;volatile
 39087  014960  006F FF7B FFE6     	movff	postinc2,postinc1
 39088  014966  006F FF7B FFE6     	movff	postinc2,postinc1
 39089  01496C  006F FF7B FFE6     	movff	postinc2,postinc1
 39090  014972  006F FF7B FFE6     	movff	postinc2,postinc1
 39091  014978  EE22  F043         	lfsr	2,_C+68	;volatile
 39092  01497C  006F FF7B FFE6     	movff	postinc2,postinc1
 39093  014982  006F FF7B FFE6     	movff	postinc2,postinc1
 39094  014988  006F FF7B FFE6     	movff	postinc2,postinc1
 39095  01498E  006F FF7B FFE6     	movff	postinc2,postinc1
 39096  014994  EE22  F063         	lfsr	2,_C+100	;volatile
 39097  014998  006F FF7B FFE6     	movff	postinc2,postinc1
 39098  01499E  006F FF7B FFE6     	movff	postinc2,postinc1
 39099  0149A4  006F FF7B FFE6     	movff	postinc2,postinc1
 39100  0149AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39101  0149B0  EE22  F04B         	lfsr	2,_C+76	;volatile
 39102  0149B4  006F FF7B FFE6     	movff	postinc2,postinc1
 39103  0149BA  006F FF7B FFE6     	movff	postinc2,postinc1
 39104  0149C0  006F FF7B FFE6     	movff	postinc2,postinc1
 39105  0149C6  006F FF7B FFE6     	movff	postinc2,postinc1
 39106  0149CC  EE22  F04F         	lfsr	2,_C+80	;volatile
 39107  0149D0  006F FF7B FFE6     	movff	postinc2,postinc1
 39108  0149D6  006F FF7B FFE6     	movff	postinc2,postinc1
 39109  0149DC  006F FF7B FFE6     	movff	postinc2,postinc1
 39110  0149E2  006F FF7B FFE6     	movff	postinc2,postinc1
 39111  0149E8  EE22  F053         	lfsr	2,_C+84	;volatile
 39112  0149EC  006F FF7B FFE6     	movff	postinc2,postinc1
 39113  0149F2  006F FF7B FFE6     	movff	postinc2,postinc1
 39114  0149F8  006F FF7B FFE6     	movff	postinc2,postinc1
 39115  0149FE  006F FF7B FFE6     	movff	postinc2,postinc1
 39116  014A04  0060  F623  FFE6   	movff	_V+129,postinc1
 39117  014A0A  0060  F627  FFE6   	movff	_V+130,postinc1
 39118  014A10  0060  F62B  FFE6   	movff	_V+131,postinc1
 39119  014A16  0060  F62F  FFE6   	movff	_V+132,postinc1
 39120  014A1C  0E32               	movlw	50
 39121  014A1E  6EE6               	movwf	postinc1,c
 39122  014A20  0E00               	movlw	0
 39123  014A22  6EE6               	movwf	postinc1,c
 39124  014A24  0E69               	movlw	low STR_93
 39125  014A26  6EE6               	movwf	postinc1,c
 39126  014A28  0EFA               	movlw	high STR_93
 39127  014A2A  6EE6               	movwf	postinc1,c
 39128                           
 39129                           ;stkvar	_log_ptr @ sp[(-98)+4]
 39130  014A2C  0EA2               	movlw	-94
 39131  014A2E  006F FF8F FFE6     	movff	plusw1,postinc1
 39132  014A34  006F FF8F FFE6     	movff	plusw1,postinc1
 39133  014A3A  0E5E               	movlw	94
 39134  014A3C  6EE6               	movwf	postinc1,c
 39135  014A3E  ECC4  F0D8         	call	_sprintf	;wreg free
 39136                           
 39137                           ; BSR set to: 0
 39138                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 39139  014A42  0E7D               	movlw	125
 39140  014A44  6EE6               	movwf	postinc1,c
 39141  014A46  0E00               	movlw	0
 39142  014A48  6EE6               	movwf	postinc1,c
 39143  014A4A  0E0A               	movlw	10
 39144  014A4C  6EE6               	movwf	postinc1,c
 39145  014A4E  EC57  F0E8         	call	_StartTimer	;wreg free
 39146                           
 39147                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 39148                           ;stkvar	_log_ptr @ sp[(-6)+4]
 39149  014A52  0EFE               	movlw	-2
 39150  014A54  006F FF8F FFE6     	movff	plusw1,postinc1
 39151  014A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 39152  014A60  ECD6  F0DF         	call	_strlen	;wreg free
 39153  014A64  0060  F007  FFE6   	movff	btemp,postinc1
 39154  014A6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39155  014A70  EC3B  F0E6         	call	_send_port_data_dma	;wreg free
 39156  014A74                     l14326:
 39157                           
 39158                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 39159  014A74  0E09               	movlw	9
 39160  014A76  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 39161  014A78  D001               	goto	l2315
 39162                           
 39163                           ;bsoc.c: 102:   log_update_wait = 0;
 39164  014A7A  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 39165  014A7C                     l2315:
 39166                           
 39167                           ;bsoc.c: 104:  C.update = 0;
 39168  014A7C  0E00               	movlw	0
 39169  014A7E  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 39170                           
 39171                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 39172  014A84  92BE               	bcf	190,1,c	;volatile
 39173                           
 39174                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 39175  014A86  0EFA               	movlw	250
 39176  014A88  26E1               	addwf	fsr1l,f,c
 39177  014A8A  0EFF               	movlw	255
 39178  014A8C  22E2               	addwfc	fsr1h,f,c
 39179  014A8E  0012               	return		;funcret
 39180  014A90                     __end_of_calc_bsoc:
 39181                           	opt callstack 0
 39182                           
 39183 ;; *************** function _send_port_data_dma *****************
 39184 ;; Defined at:
 39185 ;;		line 398 in file "eadog.c"
 39186 ;; Parameters:    Size  Location     Type
 39187 ;;  dsize           2  [STACK] unsigned short 
 39188 ;; Auto vars:     Size  Location     Type
 39189 ;;		None
 39190 ;; Return value:  Size  Location     Type
 39191 ;;                  1  [STACK] void 
 39192 ;; Registers used:
 39193 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 39194 ;; Tracked objects:
 39195 ;;		On entry : 0/0
 39196 ;;		On exit  : 3F/3B
 39197 ;;		Unchanged: 0/0
 39198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39203 ;;Total ram usage:        0 bytes
 39204 ;; Hardware stack levels used:    1
 39205 ;; Hardware stack levels required when called:    3
 39206 ;; This function calls:
 39207 ;;		Nothing
 39208 ;; This function is called by:
 39209 ;;		_calc_bsoc
 39210 ;; This function uses a reentrant model
 39211 ;;
 39212                           
 39213                           	psect	text175
 39214  01CC76                     __ptext175:
 39215                           	opt callstack 0
 39216  01CC76                     _send_port_data_dma:
 39217                           	opt callstack 10
 39218                           
 39219                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 39220                           ;stkvar	_dsize @ sp[(0)+-2]
 39221                           
 39222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39223                           ;incstack = 0
 39224  01CC76  0EFE               	movlw	-2
 39225  01CC78  04E3               	decf	plusw1,w,c
 39226  01CC7A  0EFF               	movlw	-1
 39227  01CC7C  006F FF8C  F001    	movff	plusw1,btemp
 39228  01CC82  0E02               	movlw	2
 39229  01CC84  5A01               	subwfb	btemp^0,f,c
 39230  01CC86  A0D8               	btfss	status,0,c
 39231  01CC88  D00C               	goto	l10934
 39232                           
 39233                           ;eadog.c: 401:   dsize = 512;
 39234  01CC8A  0E00               	movlw	0
 39235  01CC8C  6E0B               	movwf	(btemp+10)^0,c
 39236  01CC8E  0E02               	movlw	2
 39237  01CC90  6E0C               	movwf	(btemp+11)^0,c
 39238                           
 39239                           ;stkvar	_dsize @ sp[(0)+-2]
 39240  01CC92  0EFE               	movlw	-2
 39241  01CC94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39242  01CC9A  0EFF               	movlw	-1
 39243  01CC9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 39244  01CCA2                     l10934:
 39245                           
 39246                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 39247  01CCA2  013B               	movlb	59	; () banked
 39248  01CCA4  9FDC               	bcf	220,7,b	;volatile
 39249                           
 39250                           ; BSR set to: 59
 39251                           ;eadog.c: 404:  DMA2SSZ = dsize;
 39252                           ;stkvar	_dsize @ sp[(0)+-2]
 39253  01CCA6  0EFE               	movlw	-2
 39254  01CCA8  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 39255  01CCAE  0EFF               	movlw	-1
 39256  01CCB0  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 39257                           
 39258                           ; BSR set to: 59
 39259                           ;eadog.c: 405:  DMA2DSZ = 1;
 39260  01CCB6  0E00               	movlw	0
 39261  01CCB8  6FCF               	movwf	207,b	;volatile
 39262  01CCBA  0E01               	movlw	1
 39263  01CCBC  6FCE               	movwf	206,b	;volatile
 39264                           
 39265                           ; BSR set to: 59
 39266                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 39267  01CCBE  8FDC               	bsf	220,7,b	;volatile
 39268                           
 39269                           ; BSR set to: 59
 39270                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 39271  01CCC0  8DDC               	bsf	220,6,b	;volatile
 39272                           
 39273                           ; BSR set to: 59
 39274                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 39275  01CCC2  52E5               	movf	postdec1,f,c
 39276  01CCC4  52E5               	movf	postdec1,f,c
 39277  01CCC6  0012               	return		;funcret
 39278  01CCC8                     __end_of_send_port_data_dma:
 39279                           	opt callstack 0
 39280                           
 39281 ;; *************** function _port_data_dma_ptr *****************
 39282 ;; Defined at:
 39283 ;;		line 413 in file "eadog.c"
 39284 ;; Parameters:    Size  Location     Type
 39285 ;;		None
 39286 ;; Auto vars:     Size  Location     Type
 39287 ;;		None
 39288 ;; Return value:  Size  Location     Type
 39289 ;;                  2  [STACK] PTR unsigned char 
 39290 ;; Registers used:
 39291 ;;		wreg, status,2, status,0, btemp, btemp+1
 39292 ;; Tracked objects:
 39293 ;;		On entry : 3F/1
 39294 ;;		On exit  : 0/0
 39295 ;;		Unchanged: 0/0
 39296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39301 ;;Total ram usage:        0 bytes
 39302 ;; Hardware stack levels used:    1
 39303 ;; Hardware stack levels required when called:    3
 39304 ;; This function calls:
 39305 ;;		Nothing
 39306 ;; This function is called by:
 39307 ;;		_calc_bsoc
 39308 ;; This function uses a reentrant model
 39309 ;;
 39310                           
 39311                           	psect	text176
 39312  01DB6C                     __ptext176:
 39313                           	opt callstack 0
 39314  01DB6C                     _port_data_dma_ptr:
 39315                           	opt callstack 10
 39316                           
 39317                           ;eadog.c: 415:  return port_data;
 39318                           
 39319                           ; BSR set to: 59
 39320                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39321                           ;incstack = 0
 39322  01DB6C  0EFF               	movlw	low _port_data
 39323  01DB6E  6E01               	movwf	btemp^0,c
 39324  01DB70  0E05               	movlw	high _port_data
 39325  01DB72  6E02               	movwf	(btemp+1)^0,c
 39326                           
 39327                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39328  01DB74  0012               	return		;funcret
 39329  01DB76                     __end_of_port_data_dma_ptr:
 39330                           	opt callstack 0
 39331                           
 39332 ;; *************** function ___asfladd *****************
 39333 ;; Defined at:
 39334 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 39335 ;; Parameters:    Size  Location     Type
 39336 ;;  f1p             2  [STACK] PTR 
 39337 ;;		 -> C(299), 
 39338 ;;  f2              4  [STACK] PTR 
 39339 ;; Auto vars:     Size  Location     Type
 39340 ;;		None
 39341 ;; Return value:  Size  Location     Type
 39342 ;;                  4  [STACK] PTR 
 39343 ;; Registers used:
 39344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39345 ;; Tracked objects:
 39346 ;;		On entry : 0/0
 39347 ;;		On exit  : 0/0
 39348 ;;		Unchanged: 0/0
 39349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39354 ;;Total ram usage:        0 bytes
 39355 ;; Hardware stack levels used:    1
 39356 ;; Hardware stack levels required when called:    4
 39357 ;; This function calls:
 39358 ;;		___fladd
 39359 ;; This function is called by:
 39360 ;;		_calc_bsoc
 39361 ;; This function uses a reentrant model
 39362 ;;
 39363                           
 39364                           	psect	text177
 39365  01C632                     __ptext177:
 39366                           	opt callstack 0
 39367  01C632                     ___asfladd:
 39368                           	opt callstack 9
 39369                           
 39370                           ;	Return value of ___asfladd is never used
 39371                           ;stkvar	_f2 @ sp[(0)+-6]
 39372                           
 39373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39374                           ;incstack = 0
 39375  01C632  0EFA               	movlw	-6
 39376  01C634  006F FF8F FFE6     	movff	plusw1,postinc1
 39377  01C63A  006F FF8F FFE6     	movff	plusw1,postinc1
 39378  01C640  006F FF8F FFE6     	movff	plusw1,postinc1
 39379  01C646  006F FF8F FFE6     	movff	plusw1,postinc1
 39380                           
 39381                           ;stkvar	_f1p @ sp[(-4)+-2]
 39382  01C64C  0EFA               	movlw	-6
 39383  01C64E  006F FF8F FFD9     	movff	plusw1,fsr2l
 39384  01C654  0EFB               	movlw	-5
 39385  01C656  006F FF8F FFDA     	movff	plusw1,fsr2h
 39386  01C65C  006F FF7B FFE6     	movff	postinc2,postinc1
 39387  01C662  006F FF7B FFE6     	movff	postinc2,postinc1
 39388  01C668  006F FF7B FFE6     	movff	postinc2,postinc1
 39389  01C66E  006F FF7B FFE6     	movff	postinc2,postinc1
 39390  01C674  EC5D  F0A9         	call	___fladd	;wreg free
 39391                           
 39392                           ;stkvar	_f1p @ sp[(0)+-2]
 39393  01C678  0EFE               	movlw	-2
 39394  01C67A  006F FF8F FFD9     	movff	plusw1,fsr2l
 39395  01C680  0EFF               	movlw	-1
 39396  01C682  006F FF8F FFDA     	movff	plusw1,fsr2h
 39397  01C688  0060  F007  FFDE   	movff	btemp,postinc2
 39398  01C68E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 39399  01C694  0060  F00F  FFDE   	movff	btemp+2,postinc2
 39400  01C69A  0060  F013  FFDE   	movff	btemp+3,postinc2
 39401                           
 39402                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 39403  01C6A0  0EFA               	movlw	250
 39404  01C6A2  26E1               	addwf	fsr1l,f,c
 39405  01C6A4  0EFF               	movlw	255
 39406  01C6A6  22E2               	addwfc	fsr1h,f,c
 39407  01C6A8  0012               	return		;funcret
 39408  01C6AA                     __end_of___asfladd:
 39409                           	opt callstack 0
 39410                           
 39411 ;; *************** function _INT0_ISR *****************
 39412 ;; Defined at:
 39413 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 39414 ;; Parameters:    Size  Location     Type
 39415 ;;		None
 39416 ;; Auto vars:     Size  Location     Type
 39417 ;;		None
 39418 ;; Return value:  Size  Location     Type
 39419 ;;                  1    wreg      void 
 39420 ;; Registers used:
 39421 ;;		wreg, status,2, status,0, pclath, tosl
 39422 ;; Tracked objects:
 39423 ;;		On entry : 0/0
 39424 ;;		On exit  : 0/0
 39425 ;;		Unchanged: 0/0
 39426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39431 ;;Total ram usage:        0 bytes
 39432 ;; Hardware stack levels used:    1
 39433 ;; Hardware stack levels required when called:    2
 39434 ;; This function calls:
 39435 ;;		_INT0_CallBack
 39436 ;; This function is called by:
 39437 ;;		Interrupt level 2
 39438 ;; This function uses a non-reentrant model
 39439 ;;
 39440                           
 39441                           	psect	text178
 39442  01DB44                     __ptext178:
 39443                           	opt callstack 0
 39444  01DB44                     _INT0_ISR:
 39445                           	opt callstack 2
 39446                           
 39447                           ;incstack = 0
 39448  01DB44  EE14  F208         	lfsr	1,___inthi_sp
 39449                           
 39450                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 39451  01DB48  0139               	movlb	57	; () banked
 39452  01DB4A  91A1               	bcf	161,0,b	;volatile
 39453                           
 39454                           ; BSR set to: 57
 39455                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 39456  01DB4C  EC28  F0EC         	call	_INT0_CallBack	;wreg free
 39457  01DB50  0011               	retfie		f
 39458  01DB52                     __end_of_INT0_ISR:
 39459                           	opt callstack 0
 39460                           
 39461 ;; *************** function _INT0_CallBack *****************
 39462 ;; Defined at:
 39463 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 39464 ;; Parameters:    Size  Location     Type
 39465 ;;		None
 39466 ;; Auto vars:     Size  Location     Type
 39467 ;;		None
 39468 ;; Return value:  Size  Location     Type
 39469 ;;                  1  [STACK] void 
 39470 ;; Registers used:
 39471 ;;		wreg, status,2, status,0, pclath, tosl
 39472 ;; Tracked objects:
 39473 ;;		On entry : 3F/39
 39474 ;;		On exit  : 0/0
 39475 ;;		Unchanged: 0/0
 39476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39481 ;;Total ram usage:        0 bytes
 39482 ;; Hardware stack levels used:    1
 39483 ;; Hardware stack levels required when called:    1
 39484 ;; This function calls:
 39485 ;;		Absolute function
 39486 ;;		_INT0_DefaultInterruptHandler
 39487 ;; This function is called by:
 39488 ;;		_INT0_ISR
 39489 ;; This function uses a reentrant model
 39490 ;;
 39491                           
 39492                           	psect	text179
 39493  01D850                     __ptext179:
 39494                           	opt callstack 0
 39495  01D850                     _INT0_CallBack:
 39496                           	opt callstack 2
 39497                           
 39498                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 39499                           
 39500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39501                           ;incstack = 0
 39502  01D850  0100               	movlb	0	; () banked
 39503  01D852  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 39504  01D854  1194               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39505  01D856  1195               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39506  01D858  B4D8               	btfsc	status,2,c
 39507  01D85A  0012               	return	
 39508                           
 39509                           ; BSR set to: 0
 39510                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 39511  01D85C  D801               	call	u1091_48
 39512  01D85E  0012               	return	
 39513  01D860                     u1091_48:
 39514  01D860  0005               	push	
 39515  01D862  6EFA               	movwf	pclath,c
 39516  01D864  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 39517  01D866  6EFD               	movwf	tosl,c
 39518  01D868  5194               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39519  01D86A  6EFE               	movwf	tosh,c
 39520  01D86C  5195               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39521  01D86E  6EFF               	movwf	tosu,c
 39522  01D870  50FA               	movf	pclath,w,c
 39523  01D872  0012               	return		;indir
 39524  01D874                     __end_of_INT0_CallBack:
 39525                           	opt callstack 0
 39526                           
 39527 ;; *************** function _INT0_DefaultInterruptHandler *****************
 39528 ;; Defined at:
 39529 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 39530 ;; Parameters:    Size  Location     Type
 39531 ;;		None
 39532 ;; Auto vars:     Size  Location     Type
 39533 ;;		None
 39534 ;; Return value:  Size  Location     Type
 39535 ;;                  1  [STACK] void 
 39536 ;; Registers used:
 39537 ;;		None
 39538 ;; Tracked objects:
 39539 ;;		On entry : 3F/0
 39540 ;;		On exit  : 0/0
 39541 ;;		Unchanged: 0/0
 39542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39547 ;;Total ram usage:        0 bytes
 39548 ;; Hardware stack levels used:    1
 39549 ;; This function calls:
 39550 ;;		Nothing
 39551 ;; This function is called by:
 39552 ;;		_EXT_INT_Initialize
 39553 ;;		_INT0_CallBack
 39554 ;; This function uses a reentrant model
 39555 ;;
 39556                           
 39557                           	psect	text180
 39558  01DBEA                     __ptext180:
 39559                           	opt callstack 0
 39560  01DBEA                     _INT0_DefaultInterruptHandler:
 39561                           	opt callstack 2
 39562                           
 39563                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39564                           
 39565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39566                           ;incstack = 0
 39567  01DBEA  0012               	return		;funcret
 39568  01DBEC                     __end_of_INT0_DefaultInterruptHandler:
 39569                           	opt callstack 0
 39570                           
 39571 ;; *************** function _Default_ISR *****************
 39572 ;; Defined at:
 39573 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 39574 ;; Parameters:    Size  Location     Type
 39575 ;;		None
 39576 ;; Auto vars:     Size  Location     Type
 39577 ;;		None
 39578 ;; Return value:  Size  Location     Type
 39579 ;;                  1    wreg      void 
 39580 ;; Registers used:
 39581 ;;		None
 39582 ;; Tracked objects:
 39583 ;;		On entry : 0/0
 39584 ;;		On exit  : 0/0
 39585 ;;		Unchanged: 0/0
 39586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39591 ;;Total ram usage:        0 bytes
 39592 ;; Hardware stack levels used:    1
 39593 ;; This function calls:
 39594 ;;		Nothing
 39595 ;; This function is called by:
 39596 ;;		Interrupt level 2
 39597 ;; This function uses a non-reentrant model
 39598 ;;
 39599                           
 39600                           	psect	text181
 39601  01DBE0                     __ptext181:
 39602                           	opt callstack 0
 39603  01DBE0                     _Default_ISR:
 39604                           	opt callstack 4
 39605                           
 39606                           ;incstack = 0
 39607  01DBE0  EE14  F208         	lfsr	1,___inthi_sp
 39608  01DBE4  0011               	retfie		f
 39609  01DBE6                     __end_of_Default_ISR:
 39610                           	opt callstack 0
 39611                           
 39612 ;; *************** function _ADCC_ISR *****************
 39613 ;; Defined at:
 39614 ;;		line 314 in file "mcc_generated_files/adcc.c"
 39615 ;; Parameters:    Size  Location     Type
 39616 ;;		None
 39617 ;; Auto vars:     Size  Location     Type
 39618 ;;		None
 39619 ;; Return value:  Size  Location     Type
 39620 ;;                  1    wreg      void 
 39621 ;; Registers used:
 39622 ;;		wreg, status,2, status,0, pclath, tosl
 39623 ;; Tracked objects:
 39624 ;;		On entry : 0/0
 39625 ;;		On exit  : 0/0
 39626 ;;		Unchanged: 0/0
 39627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39632 ;;Total ram usage:        0 bytes
 39633 ;; Hardware stack levels used:    1
 39634 ;; Hardware stack levels required when called:    1
 39635 ;; This function calls:
 39636 ;;		Absolute function
 39637 ;;		_ADCC_DefaultInterruptHandler
 39638 ;;		_adc_int_handler
 39639 ;; This function is called by:
 39640 ;;		Interrupt level 2
 39641 ;; This function uses a non-reentrant model
 39642 ;;
 39643                           
 39644                           	psect	text182
 39645  01D4E4                     __ptext182:
 39646                           	opt callstack 0
 39647  01D4E4                     _ADCC_ISR:
 39648                           	opt callstack 3
 39649                           
 39650                           ;incstack = 0
 39651  01D4E4  EE14  F208         	lfsr	1,___inthi_sp
 39652                           
 39653                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 39654  01D4E8  0139               	movlb	57	; () banked
 39655  01D4EA  95A1               	bcf	161,2,b	;volatile
 39656                           
 39657                           ; BSR set to: 57
 39658                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 39659  01D4EC  0100               	movlb	0	; () banked
 39660  01D4EE  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 39661  01D4F0  1185               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 39662  01D4F2  1186               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 39663  01D4F4  B4D8               	btfsc	status,2,c
 39664  01D4F6  0011               	retfie		f
 39665                           
 39666                           ; BSR set to: 0
 39667                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 39668  01D4F8  D801               	call	i2u1151_48
 39669  01D4FA  0011               	retfie		f
 39670  01D4FC                     i2u1151_48:
 39671  01D4FC  0005               	push	
 39672  01D4FE  6EFA               	movwf	pclath,c
 39673  01D500  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 39674  01D502  6EFD               	movwf	tosl,c
 39675  01D504  5185               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 39676  01D506  6EFE               	movwf	tosh,c
 39677  01D508  5186               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 39678  01D50A  6EFF               	movwf	tosu,c
 39679  01D50C  50FA               	movf	pclath,w,c
 39680  01D50E  0012               	return		;indir
 39681  01D510                     __end_of_ADCC_ISR:
 39682                           	opt callstack 0
 39683                           
 39684 ;; *************** function _adc_int_t_handler *****************
 39685 ;; Defined at:
 39686 ;;		line 176 in file "daq.c"
 39687 ;; Parameters:    Size  Location     Type
 39688 ;;		None
 39689 ;; Auto vars:     Size  Location     Type
 39690 ;;		None
 39691 ;; Return value:  Size  Location     Type
 39692 ;;                  1  [STACK] void 
 39693 ;; Registers used:
 39694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 39695 ;; Tracked objects:
 39696 ;;		On entry : 3F/0
 39697 ;;		On exit  : 1/0
 39698 ;;		Unchanged: 0/0
 39699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39704 ;;Total ram usage:        0 bytes
 39705 ;; Hardware stack levels used:    1
 39706 ;; Hardware stack levels required when called:    1
 39707 ;; This function calls:
 39708 ;;		_ADCC_DischargeSampleCapacitor
 39709 ;;		_ADCC_StartConversion
 39710 ;; This function is called by:
 39711 ;;		_start_adc_scan
 39712 ;;		_ADCC_ThresholdISR
 39713 ;; This function uses a reentrant model
 39714 ;;
 39715                           
 39716                           	psect	text183
 39717  01C53A                     __ptext183:
 39718                           	opt callstack 0
 39719  01C53A                     _adc_int_t_handler:
 39720                           	opt callstack 2
 39721                           
 39722                           ;daq.c: 181:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 39723                           
 39724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39725                           ;incstack = 0
 39726  01C53A  013E               	movlb	62	; () banked
 39727  01C53C  51E6               	movf	230,w,b	;volatile
 39728  01C53E  006F FB9C  F001    	movff	16103,btemp	;volatile
 39729  01C544  6A02               	clrf	(btemp+1)^0,c
 39730  01C546  0060  F004  F002   	movff	btemp,btemp+1
 39731  01C54C  6A01               	clrf	btemp^0,c
 39732  01C54E  2601               	addwf	btemp^0,f,c
 39733  01C550  0E00               	movlw	0
 39734  01C552  2202               	addwfc	(btemp+1)^0,f,c
 39735  01C554  0100               	movlb	0	; () banked
 39736  01C556  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 39737  01C558  0D02               	mullw	2
 39738  01C55A  50F3               	movf	243,w,c
 39739  01C55C  0FAE               	addlw	low _R
 39740  01C55E  6ED9               	movwf	fsr2l,c
 39741  01C560  6ADA               	clrf	fsr2h,c
 39742  01C562  0060  F007  FFDE   	movff	btemp,postinc2
 39743  01C568  0060  F00B  FFDD   	movff	btemp+1,postdec2
 39744  01C56E                     l12544:
 39745                           
 39746                           ;daq.c: 183:   if (++R.scan_index > 0XD) {
 39747  01C56E  0100               	movlb	0	; () banked
 39748  01C570  2BE0               	incf	(_R+50)& (0+255),f,b	;volatile
 39749  01C572  0E0D               	movlw	13
 39750  01C574  65E0               	cpfsgt	(_R+50)& (0+255),b	;volatile
 39751  01C576  D003               	goto	l12550
 39752                           
 39753                           ; BSR set to: 0
 39754                           ;daq.c: 184:    R.done = 1;
 39755  01C578  0E01               	movlw	1
 39756  01C57A  6FE3               	movwf	(_R+53)& (0+255),b	;volatile
 39757  01C57C  0012               	return	
 39758  01C57E                     l12550:
 39759                           
 39760                           ; BSR set to: 0
 39761                           ;daq.c: 190:  } while (!((R.scan_select >> R.scan_index) &0x1));
 39762  01C57E  0060  F380  F00C   	movff	_R+50,btemp+11	;volatile
 39763  01C584  EE20  F0E1         	lfsr	2,_R+51	;volatile
 39764  01C588  006F FF78  F009    	movff	postinc2,btemp+8
 39765  01C58E  006F FF74  F00A    	movff	postdec2,btemp+9
 39766  01C594  2A0C               	incf	(btemp+11)^0,f,c
 39767  01C596  D003               	goto	u1148_44
 39768  01C598                     u1148_45:
 39769  01C598  90D8               	bcf	status,0,c
 39770  01C59A  320A               	rrcf	(btemp+9)^0,f,c
 39771  01C59C  3209               	rrcf	(btemp+8)^0,f,c
 39772  01C59E                     u1148_44:
 39773  01C59E  2E0C               	decfsz	(btemp+11)^0,f,c
 39774  01C5A0  D7FB               	goto	u1148_45
 39775  01C5A2  A009               	btfss	(btemp+8)^0,0,c
 39776  01C5A4  D7E4               	goto	l12544
 39777                           
 39778                           ;daq.c: 191:  ADCC_DischargeSampleCapacitor();
 39779  01C5A6  ECD1  F0ED         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 39780                           
 39781                           ; BSR set to: 62
 39782                           ;daq.c: 192:  ADCC_StartConversion(R.scan_index & 0xf);
 39783  01C5AA  0100               	movlb	0	; () banked
 39784  01C5AC  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 39785  01C5AE  0B0F               	andlw	15
 39786  01C5B0  6EE6               	movwf	postinc1,c
 39787  01C5B2  EC5C  F0ED         	call	_ADCC_StartConversion	;wreg free
 39788                           
 39789                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39790  01C5B6  0012               	return		;funcret
 39791  01C5B8                     __end_of_adc_int_t_handler:
 39792                           	opt callstack 0
 39793                           
 39794 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 39795 ;; Defined at:
 39796 ;;		line 339 in file "mcc_generated_files/adcc.c"
 39797 ;; Parameters:    Size  Location     Type
 39798 ;;		None
 39799 ;; Auto vars:     Size  Location     Type
 39800 ;;		None
 39801 ;; Return value:  Size  Location     Type
 39802 ;;                  1  [STACK] void 
 39803 ;; Registers used:
 39804 ;;		None
 39805 ;; Tracked objects:
 39806 ;;		On entry : 3F/0
 39807 ;;		On exit  : 0/0
 39808 ;;		Unchanged: 0/0
 39809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39814 ;;Total ram usage:        0 bytes
 39815 ;; Hardware stack levels used:    1
 39816 ;; This function calls:
 39817 ;;		Nothing
 39818 ;; This function is called by:
 39819 ;;		_ADCC_Initialize
 39820 ;;		_ADCC_ISR
 39821 ;;		_ADCC_ThresholdISR
 39822 ;; This function uses a reentrant model
 39823 ;;
 39824                           
 39825                           	psect	text184
 39826  01DBEC                     __ptext184:
 39827                           	opt callstack 0
 39828  01DBEC                     _ADCC_DefaultInterruptHandler:
 39829                           	opt callstack 3
 39830                           
 39831                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39832                           
 39833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39834                           ;incstack = 0
 39835  01DBEC  0012               	return		;funcret
 39836  01DBEE                     __end_of_ADCC_DefaultInterruptHandler:
 39837                           	opt callstack 0
 39838                           
 39839 ;; *************** function _adc_int_handler *****************
 39840 ;; Defined at:
 39841 ;;		line 166 in file "daq.c"
 39842 ;; Parameters:    Size  Location     Type
 39843 ;;		None
 39844 ;; Auto vars:     Size  Location     Type
 39845 ;;		None
 39846 ;; Return value:  Size  Location     Type
 39847 ;;                  1  [STACK] void 
 39848 ;; Registers used:
 39849 ;;		None
 39850 ;; Tracked objects:
 39851 ;;		On entry : 3F/0
 39852 ;;		On exit  : 0/0
 39853 ;;		Unchanged: 0/0
 39854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39859 ;;Total ram usage:        0 bytes
 39860 ;; Hardware stack levels used:    1
 39861 ;; This function calls:
 39862 ;;		Nothing
 39863 ;; This function is called by:
 39864 ;;		_start_adc_scan
 39865 ;;		_ADCC_ISR
 39866 ;; This function uses a reentrant model
 39867 ;;
 39868                           
 39869                           	psect	text185
 39870  01DBEE                     __ptext185:
 39871                           	opt callstack 0
 39872  01DBEE                     _adc_int_handler:
 39873                           	opt callstack 3
 39874                           
 39875                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 39876                           
 39877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39878                           ;incstack = 0
 39879  01DBEE  0012               	return		;funcret
 39880  01DBF0                     __end_of_adc_int_handler:
 39881                           	opt callstack 0
 39882                           
 39883 ;; *************** function _ADCC_ThresholdISR *****************
 39884 ;; Defined at:
 39885 ;;		line 327 in file "mcc_generated_files/adcc.c"
 39886 ;; Parameters:    Size  Location     Type
 39887 ;;		None
 39888 ;; Auto vars:     Size  Location     Type
 39889 ;;		None
 39890 ;; Return value:  Size  Location     Type
 39891 ;;                  1    wreg      void 
 39892 ;; Registers used:
 39893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 39894 ;; Tracked objects:
 39895 ;;		On entry : 0/0
 39896 ;;		On exit  : 0/0
 39897 ;;		Unchanged: 0/0
 39898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39901 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39902 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39903 ;;Total ram usage:        5 bytes
 39904 ;; Hardware stack levels used:    1
 39905 ;; Hardware stack levels required when called:    2
 39906 ;; This function calls:
 39907 ;;		Absolute function
 39908 ;;		_ADCC_DefaultInterruptHandler
 39909 ;;		_adc_int_t_handler
 39910 ;; This function is called by:
 39911 ;;		Interrupt level 2
 39912 ;; This function uses a non-reentrant model
 39913 ;;
 39914                           
 39915                           	psect	text186
 39916  01C7F0                     __ptext186:
 39917                           	opt callstack 0
 39918  01C7F0                     _ADCC_ThresholdISR:
 39919                           	opt callstack 2
 39920                           
 39921                           ;incstack = 0
 39922  01C7F0  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 39923  01C7F6  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 39924  01C7FC  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 39925  01C802  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 39926  01C808  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 39927  01C80E  EE14  F208         	lfsr	1,___inthi_sp
 39928                           
 39929                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 39930  01C812  0139               	movlb	57	; () banked
 39931  01C814  97A1               	bcf	161,3,b	;volatile
 39932                           
 39933                           ; BSR set to: 57
 39934                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 39935  01C816  0100               	movlb	0	; () banked
 39936  01C818  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 39937  01C81A  1182               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 39938  01C81C  1183               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 39939  01C81E  B4D8               	btfsc	status,2,c
 39940  01C820  D00C               	goto	i2u1153_49
 39941                           
 39942                           ; BSR set to: 0
 39943                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 39944  01C822  D801               	call	i2u1153_48
 39945  01C824  D00A               	goto	i2u1153_49
 39946  01C826                     i2u1153_48:
 39947  01C826  0005               	push	
 39948  01C828  6EFA               	movwf	pclath,c
 39949  01C82A  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 39950  01C82C  6EFD               	movwf	tosl,c
 39951  01C82E  5182               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 39952  01C830  6EFE               	movwf	tosh,c
 39953  01C832  5183               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 39954  01C834  6EFF               	movwf	tosu,c
 39955  01C836  50FA               	movf	pclath,w,c
 39956  01C838  0012               	return		;indir
 39957  01C83A                     i2u1153_49:
 39958  01C83A  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 39959  01C840  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 39960  01C846  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 39961  01C84C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 39962  01C852  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 39963  01C858  0011               	retfie		f
 39964  01C85A                     __end_of_ADCC_ThresholdISR:
 39965                           	opt callstack 0
 39966                           
 39967 ;; *************** function _UART1_rx_vect_isr *****************
 39968 ;; Defined at:
 39969 ;;		line 181 in file "mcc_generated_files/uart1.c"
 39970 ;; Parameters:    Size  Location     Type
 39971 ;;		None
 39972 ;; Auto vars:     Size  Location     Type
 39973 ;;		None
 39974 ;; Return value:  Size  Location     Type
 39975 ;;                  1    wreg      void 
 39976 ;; Registers used:
 39977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39978 ;; Tracked objects:
 39979 ;;		On entry : 0/0
 39980 ;;		On exit  : 0/0
 39981 ;;		Unchanged: 0/0
 39982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39987 ;;Total ram usage:        0 bytes
 39988 ;; Hardware stack levels used:    1
 39989 ;; Hardware stack levels required when called:    1
 39990 ;; This function calls:
 39991 ;;		Absolute function
 39992 ;;		_UART1_Receive_ISR
 39993 ;; This function is called by:
 39994 ;;		Interrupt level 2
 39995 ;; This function uses a non-reentrant model
 39996 ;;
 39997                           
 39998                           	psect	text187
 39999  01D748                     __ptext187:
 40000                           	opt callstack 0
 40001  01D748                     _UART1_rx_vect_isr:
 40002                           	opt callstack 3
 40003                           
 40004                           ;incstack = 0
 40005  01D748  EE14  F208         	lfsr	1,___inthi_sp
 40006                           
 40007                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 40008  01D74C  0100               	movlb	0	; () banked
 40009  01D74E  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 40010  01D750  1188               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 40011  01D752  1189               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 40012  01D754  B4D8               	btfsc	status,2,c
 40013  01D756  0011               	retfie		f
 40014                           
 40015                           ; BSR set to: 0
 40016                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 40017  01D758  D801               	call	i2u1155_48
 40018  01D75A  0011               	retfie		f
 40019  01D75C                     i2u1155_48:
 40020  01D75C  0005               	push	
 40021  01D75E  6EFA               	movwf	pclath,c
 40022  01D760  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 40023  01D762  6EFD               	movwf	tosl,c
 40024  01D764  5188               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 40025  01D766  6EFE               	movwf	tosh,c
 40026  01D768  5189               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 40027  01D76A  6EFF               	movwf	tosu,c
 40028  01D76C  50FA               	movf	pclath,w,c
 40029  01D76E  0012               	return		;indir
 40030  01D770                     __end_of_UART1_rx_vect_isr:
 40031                           	opt callstack 0
 40032                           
 40033 ;; *************** function _UART1_Receive_ISR *****************
 40034 ;; Defined at:
 40035 ;;		line 192 in file "mcc_generated_files/uart1.c"
 40036 ;; Parameters:    Size  Location     Type
 40037 ;;		None
 40038 ;; Auto vars:     Size  Location     Type
 40039 ;;		None
 40040 ;; Return value:  Size  Location     Type
 40041 ;;                  1  [STACK] void 
 40042 ;; Registers used:
 40043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40044 ;; Tracked objects:
 40045 ;;		On entry : 3F/0
 40046 ;;		On exit  : 3F/0
 40047 ;;		Unchanged: 0/0
 40048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40053 ;;Total ram usage:        0 bytes
 40054 ;; Hardware stack levels used:    1
 40055 ;; This function calls:
 40056 ;;		Nothing
 40057 ;; This function is called by:
 40058 ;;		_UART1_Initialize
 40059 ;;		_UART1_rx_vect_isr
 40060 ;; This function uses a reentrant model
 40061 ;;
 40062                           
 40063                           	psect	text188
 40064  01D8DC                     __ptext188:
 40065                           	opt callstack 0
 40066  01D8DC                     _UART1_Receive_ISR:
 40067                           	opt callstack 3
 40068                           
 40069                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 40070                           
 40071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40072                           ;incstack = 0
 40073  01D8DC  0EDC               	movlw	low _uart1RxBuffer
 40074  01D8DE  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 40075  01D8E0  6ED9               	movwf	fsr2l,c
 40076  01D8E2  6ADA               	clrf	fsr2h,c
 40077  01D8E4  0E01               	movlw	high _uart1RxBuffer
 40078  01D8E6  22DA               	addwfc	fsr2h,f,c
 40079  01D8E8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 40080  01D8EE  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 40081                           
 40082                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 40083  01D8F0  0E07               	movlw	7
 40084  01D8F2  6447               	cpfsgt	_uart1RxHead^0,c
 40085  01D8F4  D001               	goto	l11888
 40086                           
 40087                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 40088  01D8F6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 40089  01D8F8                     l11888:
 40090                           
 40091                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 40092  01D8F8  0100               	movlb	0	; () banked
 40093  01D8FA  2BA9               	incf	_uart1RxCount& (0+255),f,b	;volatile
 40094                           
 40095                           ; BSR set to: 0
 40096                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 40097  01D8FC  0012               	return		;funcret
 40098  01D8FE                     __end_of_UART1_Receive_ISR:
 40099                           	opt callstack 0
 40100                           
 40101 ;; *************** function _UART2_tx_vect_isr *****************
 40102 ;; Defined at:
 40103 ;;		line 195 in file "mcc_generated_files/uart2.c"
 40104 ;; Parameters:    Size  Location     Type
 40105 ;;		None
 40106 ;; Auto vars:     Size  Location     Type
 40107 ;;		None
 40108 ;; Return value:  Size  Location     Type
 40109 ;;                  1    wreg      void 
 40110 ;; Registers used:
 40111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 40112 ;; Tracked objects:
 40113 ;;		On entry : 0/0
 40114 ;;		On exit  : 0/0
 40115 ;;		Unchanged: 0/0
 40116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40121 ;;Total ram usage:        0 bytes
 40122 ;; Hardware stack levels used:    1
 40123 ;; Hardware stack levels required when called:    1
 40124 ;; This function calls:
 40125 ;;		Absolute function
 40126 ;;		_UART2_Transmit_ISR
 40127 ;; This function is called by:
 40128 ;;		Interrupt level 2
 40129 ;; This function uses a non-reentrant model
 40130 ;;
 40131                           
 40132                           	psect	text189
 40133  01D770                     __ptext189:
 40134                           	opt callstack 0
 40135  01D770                     _UART2_tx_vect_isr:
 40136                           	opt callstack 3
 40137                           
 40138                           ; BSR set to: 0
 40139                           ;incstack = 0
 40140  01D770  EE14  F208         	lfsr	1,___inthi_sp
 40141                           
 40142                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 40143  01D774  0100               	movlb	0	; () banked
 40144  01D776  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 40145  01D778  118B               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 40146  01D77A  118C               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 40147  01D77C  B4D8               	btfsc	status,2,c
 40148  01D77E  0011               	retfie		f
 40149                           
 40150                           ; BSR set to: 0
 40151                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 40152  01D780  D801               	call	i2u1157_48
 40153  01D782  0011               	retfie		f
 40154  01D784                     i2u1157_48:
 40155  01D784  0005               	push	
 40156  01D786  6EFA               	movwf	pclath,c
 40157  01D788  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 40158  01D78A  6EFD               	movwf	tosl,c
 40159  01D78C  518B               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 40160  01D78E  6EFE               	movwf	tosh,c
 40161  01D790  518C               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 40162  01D792  6EFF               	movwf	tosu,c
 40163  01D794  50FA               	movf	pclath,w,c
 40164  01D796  0012               	return		;indir
 40165  01D798                     __end_of_UART2_tx_vect_isr:
 40166                           	opt callstack 0
 40167                           
 40168 ;; *************** function _UART2_Transmit_ISR *****************
 40169 ;; Defined at:
 40170 ;;		line 213 in file "mcc_generated_files/uart2.c"
 40171 ;; Parameters:    Size  Location     Type
 40172 ;;		None
 40173 ;; Auto vars:     Size  Location     Type
 40174 ;;		None
 40175 ;; Return value:  Size  Location     Type
 40176 ;;                  1  [STACK] void 
 40177 ;; Registers used:
 40178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40179 ;; Tracked objects:
 40180 ;;		On entry : 3F/0
 40181 ;;		On exit  : 3B/39
 40182 ;;		Unchanged: 0/0
 40183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40188 ;;Total ram usage:        0 bytes
 40189 ;; Hardware stack levels used:    1
 40190 ;; This function calls:
 40191 ;;		Nothing
 40192 ;; This function is called by:
 40193 ;;		_UART2_Initialize
 40194 ;;		_UART2_tx_vect_isr
 40195 ;; This function uses a reentrant model
 40196 ;;
 40197                           
 40198                           	psect	text190
 40199  01D510                     __ptext190:
 40200                           	opt callstack 0
 40201  01D510                     _UART2_Transmit_ISR:
 40202                           	opt callstack 3
 40203                           
 40204                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 40205                           
 40206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40207                           ;incstack = 0
 40208  01D510  0E40               	movlw	64
 40209  01D512  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 40210  01D514  D010               	goto	l675
 40211                           
 40212                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 40213  01D516  0E54               	movlw	low _uart2TxBuffer
 40214  01D518  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 40215  01D51A  6ED9               	movwf	fsr2l,c
 40216  01D51C  6ADA               	clrf	fsr2h,c
 40217  01D51E  0E03               	movlw	high _uart2TxBuffer
 40218  01D520  22DA               	addwfc	fsr2h,f,c
 40219  01D522  50DF               	movf	indf2,w,c
 40220  01D524  013D               	movlb	61	; () banked
 40221  01D526  6FD2               	movwf	210,b	;volatile
 40222                           
 40223                           ; BSR set to: 61
 40224  01D528  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 40225                           
 40226                           ; BSR set to: 61
 40227                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 40228  01D52A  0E3F               	movlw	63
 40229  01D52C  6446               	cpfsgt	_uart2TxTail^0,c
 40230  01D52E  D001               	goto	l11900
 40231                           
 40232                           ; BSR set to: 61
 40233                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 40234  01D530  6A46               	clrf	_uart2TxTail^0,c	;volatile
 40235  01D532                     l11900:
 40236                           
 40237                           ; BSR set to: 61
 40238                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 40239  01D532  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 40240                           
 40241                           ;mcc_generated_files/uart2.c: 224:     }
 40242  01D534  0012               	return	
 40243  01D536                     l675:
 40244                           
 40245                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 40246  01D536  0139               	movlb	57	; () banked
 40247  01D538  9796               	bcf	150,3,b	;volatile
 40248                           
 40249                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 40250  01D53A  0012               	return		;funcret
 40251  01D53C                     __end_of_UART2_Transmit_ISR:
 40252                           	opt callstack 0
 40253                           
 40254 ;; *************** function _UART2_rx_vect_isr *****************
 40255 ;; Defined at:
 40256 ;;		line 203 in file "mcc_generated_files/uart2.c"
 40257 ;; Parameters:    Size  Location     Type
 40258 ;;		None
 40259 ;; Auto vars:     Size  Location     Type
 40260 ;;		None
 40261 ;; Return value:  Size  Location     Type
 40262 ;;                  1    wreg      void 
 40263 ;; Registers used:
 40264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 40265 ;; Tracked objects:
 40266 ;;		On entry : 0/0
 40267 ;;		On exit  : 0/0
 40268 ;;		Unchanged: 0/0
 40269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40274 ;;Total ram usage:        0 bytes
 40275 ;; Hardware stack levels used:    1
 40276 ;; Hardware stack levels required when called:    1
 40277 ;; This function calls:
 40278 ;;		Absolute function
 40279 ;;		_UART2_Receive_ISR
 40280 ;; This function is called by:
 40281 ;;		Interrupt level 2
 40282 ;; This function uses a non-reentrant model
 40283 ;;
 40284                           
 40285                           	psect	text191
 40286  01D798                     __ptext191:
 40287                           	opt callstack 0
 40288  01D798                     _UART2_rx_vect_isr:
 40289                           	opt callstack 3
 40290                           
 40291                           ;incstack = 0
 40292  01D798  EE14  F208         	lfsr	1,___inthi_sp
 40293                           
 40294                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 40295  01D79C  0100               	movlb	0	; () banked
 40296  01D79E  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 40297  01D7A0  118E               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 40298  01D7A2  118F               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 40299  01D7A4  B4D8               	btfsc	status,2,c
 40300  01D7A6  0011               	retfie		f
 40301                           
 40302                           ; BSR set to: 0
 40303                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 40304  01D7A8  D801               	call	i2u1159_48
 40305  01D7AA  0011               	retfie		f
 40306  01D7AC                     i2u1159_48:
 40307  01D7AC  0005               	push	
 40308  01D7AE  6EFA               	movwf	pclath,c
 40309  01D7B0  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 40310  01D7B2  6EFD               	movwf	tosl,c
 40311  01D7B4  518E               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 40312  01D7B6  6EFE               	movwf	tosh,c
 40313  01D7B8  518F               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 40314  01D7BA  6EFF               	movwf	tosu,c
 40315  01D7BC  50FA               	movf	pclath,w,c
 40316  01D7BE  0012               	return		;indir
 40317  01D7C0                     __end_of_UART2_rx_vect_isr:
 40318                           	opt callstack 0
 40319                           
 40320 ;; *************** function _UART2_Receive_ISR *****************
 40321 ;; Defined at:
 40322 ;;		line 233 in file "mcc_generated_files/uart2.c"
 40323 ;; Parameters:    Size  Location     Type
 40324 ;;		None
 40325 ;; Auto vars:     Size  Location     Type
 40326 ;;		None
 40327 ;; Return value:  Size  Location     Type
 40328 ;;                  1  [STACK] void 
 40329 ;; Registers used:
 40330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40331 ;; Tracked objects:
 40332 ;;		On entry : 3F/0
 40333 ;;		On exit  : 3F/0
 40334 ;;		Unchanged: 0/0
 40335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40340 ;;Total ram usage:        0 bytes
 40341 ;; Hardware stack levels used:    1
 40342 ;; This function calls:
 40343 ;;		Nothing
 40344 ;; This function is called by:
 40345 ;;		_UART2_Initialize
 40346 ;;		_UART2_rx_vect_isr
 40347 ;; This function uses a reentrant model
 40348 ;;
 40349                           
 40350                           	psect	text192
 40351  01D91E                     __ptext192:
 40352                           	opt callstack 0
 40353  01D91E                     _UART2_Receive_ISR:
 40354                           	opt callstack 3
 40355                           
 40356                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 40357                           
 40358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40359                           ;incstack = 0
 40360  01D91E  0E00               	movlw	low _uart2RxBuffer
 40361  01D920  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 40362  01D922  6ED9               	movwf	fsr2l,c
 40363  01D924  6ADA               	clrf	fsr2h,c
 40364  01D926  0E05               	movlw	high _uart2RxBuffer
 40365  01D928  22DA               	addwfc	fsr2h,f,c
 40366  01D92A  006F F743 FFDF     	movff	15824,indf2	;volatile
 40367  01D930  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 40368                           
 40369                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 40370  01D932  2844               	incf	_uart2RxHead^0,w,c
 40371  01D934  B4D8               	btfsc	status,2,c
 40372                           
 40373                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 40374  01D936  6A44               	clrf	_uart2RxHead^0,c	;volatile
 40375                           
 40376                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 40377  01D938  0100               	movlb	0	; () banked
 40378  01D93A  2BA6               	incf	_uart2RxCount& (0+255),f,b	;volatile
 40379                           
 40380                           ; BSR set to: 0
 40381                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 40382  01D93C  0012               	return		;funcret
 40383  01D93E                     __end_of_UART2_Receive_ISR:
 40384                           	opt callstack 0
 40385                           
 40386 ;; *************** function _TMR6_ISR *****************
 40387 ;; Defined at:
 40388 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 40389 ;; Parameters:    Size  Location     Type
 40390 ;;		None
 40391 ;; Auto vars:     Size  Location     Type
 40392 ;;		None
 40393 ;; Return value:  Size  Location     Type
 40394 ;;                  1    wreg      void 
 40395 ;; Registers used:
 40396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 40397 ;; Tracked objects:
 40398 ;;		On entry : 0/0
 40399 ;;		On exit  : 0/0
 40400 ;;		Unchanged: 0/0
 40401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40405 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40406 ;;Total ram usage:        1 bytes
 40407 ;; Hardware stack levels used:    1
 40408 ;; Hardware stack levels required when called:    2
 40409 ;; This function calls:
 40410 ;;		_TMR6_CallBack
 40411 ;; This function is called by:
 40412 ;;		Interrupt level 2
 40413 ;; This function uses a non-reentrant model
 40414 ;;
 40415                           
 40416                           	psect	text193
 40417  01D9F0                     __ptext193:
 40418                           	opt callstack 0
 40419  01D9F0                     _TMR6_ISR:
 40420                           	opt callstack 2
 40421                           
 40422                           ; BSR set to: 0
 40423                           ;incstack = 0
 40424  01D9F0  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 40425  01D9F6  EE14  F208         	lfsr	1,___inthi_sp
 40426                           
 40427                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 40428  01D9FA  0139               	movlb	57	; () banked
 40429  01D9FC  91A9               	bcf	169,0,b	;volatile
 40430                           
 40431                           ; BSR set to: 57
 40432                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 40433  01D9FE  EC3A  F0EC         	call	_TMR6_CallBack	;wreg free
 40434  01DA02  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 40435  01DA08  0011               	retfie		f
 40436  01DA0A                     __end_of_TMR6_ISR:
 40437                           	opt callstack 0
 40438                           
 40439 ;; *************** function _TMR6_CallBack *****************
 40440 ;; Defined at:
 40441 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 40442 ;; Parameters:    Size  Location     Type
 40443 ;;		None
 40444 ;; Auto vars:     Size  Location     Type
 40445 ;;		None
 40446 ;; Return value:  Size  Location     Type
 40447 ;;                  1  [STACK] void 
 40448 ;; Registers used:
 40449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 40450 ;; Tracked objects:
 40451 ;;		On entry : 3F/39
 40452 ;;		On exit  : 0/0
 40453 ;;		Unchanged: 0/0
 40454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40459 ;;Total ram usage:        0 bytes
 40460 ;; Hardware stack levels used:    1
 40461 ;; Hardware stack levels required when called:    1
 40462 ;; This function calls:
 40463 ;;		Absolute function
 40464 ;;		_TMR6_DefaultInterruptHandler
 40465 ;; This function is called by:
 40466 ;;		_TMR6_ISR
 40467 ;; This function uses a reentrant model
 40468 ;;
 40469                           
 40470                           	psect	text194
 40471  01D874                     __ptext194:
 40472                           	opt callstack 0
 40473  01D874                     _TMR6_CallBack:
 40474                           	opt callstack 2
 40475                           
 40476                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 40477                           
 40478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40479                           ;incstack = 0
 40480  01D874  0100               	movlb	0	; () banked
 40481  01D876  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 40482  01D878  117F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 40483  01D87A  1180               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 40484  01D87C  B4D8               	btfsc	status,2,c
 40485  01D87E  0012               	return	
 40486                           
 40487                           ; BSR set to: 0
 40488                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 40489  01D880  D801               	call	u1099_48
 40490  01D882  0012               	return	
 40491  01D884                     u1099_48:
 40492  01D884  0005               	push	
 40493  01D886  6EFA               	movwf	pclath,c
 40494  01D888  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 40495  01D88A  6EFD               	movwf	tosl,c
 40496  01D88C  517F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 40497  01D88E  6EFE               	movwf	tosh,c
 40498  01D890  5180               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 40499  01D892  6EFF               	movwf	tosu,c
 40500  01D894  50FA               	movf	pclath,w,c
 40501  01D896  0012               	return		;indir
 40502  01D898                     __end_of_TMR6_CallBack:
 40503                           	opt callstack 0
 40504                           
 40505 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 40506 ;; Defined at:
 40507 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 40508 ;; Parameters:    Size  Location     Type
 40509 ;;		None
 40510 ;; Auto vars:     Size  Location     Type
 40511 ;;  i               1  [STACK] unsigned char 
 40512 ;; Return value:  Size  Location     Type
 40513 ;;                  1  [STACK] void 
 40514 ;; Registers used:
 40515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 40516 ;; Tracked objects:
 40517 ;;		On entry : 3F/0
 40518 ;;		On exit  : 0/0
 40519 ;;		Unchanged: 0/0
 40520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40525 ;;Total ram usage:        0 bytes
 40526 ;; Hardware stack levels used:    1
 40527 ;; This function calls:
 40528 ;;		Nothing
 40529 ;; This function is called by:
 40530 ;;		_TMR6_Initialize
 40531 ;;		_TMR6_CallBack
 40532 ;; This function uses a reentrant model
 40533 ;;
 40534                           
 40535                           	psect	text195
 40536  01CD64                     __ptext195:
 40537                           	opt callstack 0
 40538  01CD64                     _TMR6_DefaultInterruptHandler:
 40539                           	opt callstack 0
 40540                           
 40541                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40542  01CD64  52E6               	movf	postinc1,f,c
 40543                           
 40544                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 40545                           ;stkvar	_i @ sp[(-1)+0]
 40546                           
 40547                           ;incstack = 0
 40548  01CD66  0EFF               	movlw	-1
 40549  01CD68  6AE3               	clrf	plusw1,c
 40550  01CD6A                     l11340:
 40551                           
 40552                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 40553                           ;stkvar	_i @ sp[(-1)+0]
 40554  01CD6A  0EFF               	movlw	-1
 40555  01CD6C  50E3               	movf	plusw1,w,c
 40556  01CD6E  0D02               	mullw	2
 40557  01CD70  0E29               	movlw	low _tickCount
 40558  01CD72  24F3               	addwf	243,w,c
 40559  01CD74  6ED9               	movwf	fsr2l,c
 40560  01CD76  0E02               	movlw	high _tickCount
 40561  01CD78  20F4               	addwfc	prodh,w,c
 40562  01CD7A  6EDA               	movwf	fsr2h,c
 40563  01CD7C  50DE               	movf	postinc2,w,c
 40564  01CD7E  10DE               	iorwf	postinc2,w,c
 40565  01CD80  B4D8               	btfsc	status,2,c
 40566  01CD82  D00C               	goto	l11344
 40567                           
 40568                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 40569                           ;stkvar	_i @ sp[(-1)+0]
 40570  01CD84  0EFF               	movlw	-1
 40571  01CD86  50E3               	movf	plusw1,w,c
 40572  01CD88  0D02               	mullw	2
 40573  01CD8A  0E29               	movlw	low _tickCount
 40574  01CD8C  24F3               	addwf	243,w,c
 40575  01CD8E  6ED9               	movwf	fsr2l,c
 40576  01CD90  0E02               	movlw	high _tickCount
 40577  01CD92  20F4               	addwfc	prodh,w,c
 40578  01CD94  6EDA               	movwf	fsr2h,c
 40579  01CD96  06DE               	decf	postinc2,f,c
 40580  01CD98  0E00               	movlw	0
 40581  01CD9A  5ADD               	subwfb	postdec2,f,c
 40582  01CD9C                     l11344:
 40583                           
 40584                           ;mcc_generated_files/tmr6.c: 207:  }
 40585                           ;stkvar	_i @ sp[(-1)+0]
 40586  01CD9C  0EFF               	movlw	-1
 40587  01CD9E  2AE3               	incf	plusw1,f,c
 40588                           
 40589                           ;stkvar	_i @ sp[(-1)+0]
 40590  01CDA0  0EFF               	movlw	-1
 40591  01CDA2  006F FF8C  F001    	movff	plusw1,btemp
 40592  01CDA8  0E0C               	movlw	12
 40593  01CDAA  6401               	cpfsgt	btemp^0,c
 40594  01CDAC  D7DE               	goto	l11340
 40595                           
 40596                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 40597  01CDAE  52E5               	movf	postdec1,f,c
 40598  01CDB0  0012               	return		;funcret
 40599  01CDB2                     __end_of_TMR6_DefaultInterruptHandler:
 40600                           	opt callstack 0
 40601                           
 40602 ;; *************** function _DMA1_DMASCNT_ISR *****************
 40603 ;; Defined at:
 40604 ;;		line 126 in file "mcc_generated_files/dma1.c"
 40605 ;; Parameters:    Size  Location     Type
 40606 ;;		None
 40607 ;; Auto vars:     Size  Location     Type
 40608 ;;		None
 40609 ;; Return value:  Size  Location     Type
 40610 ;;                  1    wreg      void 
 40611 ;; Registers used:
 40612 ;;		None
 40613 ;; Tracked objects:
 40614 ;;		On entry : 0/0
 40615 ;;		On exit  : 3F/1
 40616 ;;		Unchanged: 0/0
 40617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40622 ;;Total ram usage:        0 bytes
 40623 ;; Hardware stack levels used:    1
 40624 ;; This function calls:
 40625 ;;		Nothing
 40626 ;; This function is called by:
 40627 ;;		Interrupt level 2
 40628 ;; This function uses a non-reentrant model
 40629 ;;
 40630                           
 40631                           	psect	text196
 40632  01DB54                     __ptext196:
 40633                           	opt callstack 0
 40634  01DB54                     _DMA1_DMASCNT_ISR:
 40635                           	opt callstack 4
 40636                           
 40637                           ;incstack = 0
 40638  01DB54  EE14  F208         	lfsr	1,___inthi_sp
 40639                           
 40640                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 40641  01DB58  0139               	movlb	57	; () banked
 40642  01DB5A  91A2               	bcf	162,0,b	;volatile
 40643                           
 40644                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 40645  01DB5C  0101               	movlb	1	; () banked
 40646  01DB5E  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 40647                           
 40648                           ; BSR set to: 1
 40649  01DB60  0011               	retfie		f
 40650  01DB62                     __end_of_DMA1_DMASCNT_ISR:
 40651                           	opt callstack 0
 40652                           
 40653 ;; *************** function _DMA1_DMADCNT_ISR *****************
 40654 ;; Defined at:
 40655 ;;		line 133 in file "mcc_generated_files/dma1.c"
 40656 ;; Parameters:    Size  Location     Type
 40657 ;;		None
 40658 ;; Auto vars:     Size  Location     Type
 40659 ;;		None
 40660 ;; Return value:  Size  Location     Type
 40661 ;;                  1    wreg      void 
 40662 ;; Registers used:
 40663 ;;		None
 40664 ;; Tracked objects:
 40665 ;;		On entry : 0/0
 40666 ;;		On exit  : 3F/39
 40667 ;;		Unchanged: 0/0
 40668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40673 ;;Total ram usage:        0 bytes
 40674 ;; Hardware stack levels used:    1
 40675 ;; This function calls:
 40676 ;;		Nothing
 40677 ;; This function is called by:
 40678 ;;		Interrupt level 2
 40679 ;; This function uses a non-reentrant model
 40680 ;;
 40681                           
 40682                           	psect	text197
 40683  01DB78                     __ptext197:
 40684                           	opt callstack 0
 40685  01DB78                     _DMA1_DMADCNT_ISR:
 40686                           	opt callstack 4
 40687                           
 40688                           ; BSR set to: 1
 40689                           ;incstack = 0
 40690  01DB78  EE14  F208         	lfsr	1,___inthi_sp
 40691                           
 40692                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 40693  01DB7C  0139               	movlb	57	; () banked
 40694  01DB7E  93A2               	bcf	162,1,b	;volatile
 40695                           
 40696                           ; BSR set to: 57
 40697  01DB80  0011               	retfie		f
 40698  01DB82                     __end_of_DMA1_DMADCNT_ISR:
 40699                           	opt callstack 0
 40700                           
 40701 ;; *************** function _DMA1_DMAA_ISR *****************
 40702 ;; Defined at:
 40703 ;;		line 143 in file "mcc_generated_files/dma1.c"
 40704 ;; Parameters:    Size  Location     Type
 40705 ;;		None
 40706 ;; Auto vars:     Size  Location     Type
 40707 ;;		None
 40708 ;; Return value:  Size  Location     Type
 40709 ;;                  1    wreg      void 
 40710 ;; Registers used:
 40711 ;;		None
 40712 ;; Tracked objects:
 40713 ;;		On entry : 0/0
 40714 ;;		On exit  : 3F/39
 40715 ;;		Unchanged: 0/0
 40716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40721 ;;Total ram usage:        0 bytes
 40722 ;; Hardware stack levels used:    1
 40723 ;; This function calls:
 40724 ;;		Nothing
 40725 ;; This function is called by:
 40726 ;;		Interrupt level 2
 40727 ;; This function uses a non-reentrant model
 40728 ;;
 40729                           
 40730                           	psect	text198
 40731  01DB84                     __ptext198:
 40732                           	opt callstack 0
 40733  01DB84                     _DMA1_DMAA_ISR:
 40734                           	opt callstack 4
 40735                           
 40736                           ; BSR set to: 57
 40737                           ;incstack = 0
 40738  01DB84  EE14  F208         	lfsr	1,___inthi_sp
 40739                           
 40740                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 40741  01DB88  0139               	movlb	57	; () banked
 40742  01DB8A  97A2               	bcf	162,3,b	;volatile
 40743                           
 40744                           ; BSR set to: 57
 40745  01DB8C  0011               	retfie		f
 40746  01DB8E                     __end_of_DMA1_DMAA_ISR:
 40747                           	opt callstack 0
 40748                           
 40749 ;; *************** function _DMA1_DMAOR_ISR *****************
 40750 ;; Defined at:
 40751 ;;		line 154 in file "mcc_generated_files/dma1.c"
 40752 ;; Parameters:    Size  Location     Type
 40753 ;;		None
 40754 ;; Auto vars:     Size  Location     Type
 40755 ;;		None
 40756 ;; Return value:  Size  Location     Type
 40757 ;;                  1    wreg      void 
 40758 ;; Registers used:
 40759 ;;		None
 40760 ;; Tracked objects:
 40761 ;;		On entry : 0/0
 40762 ;;		On exit  : 3F/39
 40763 ;;		Unchanged: 0/0
 40764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40769 ;;Total ram usage:        0 bytes
 40770 ;; Hardware stack levels used:    1
 40771 ;; This function calls:
 40772 ;;		Nothing
 40773 ;; This function is called by:
 40774 ;;		Interrupt level 2
 40775 ;; This function uses a non-reentrant model
 40776 ;;
 40777                           
 40778                           	psect	text199
 40779  01DB90                     __ptext199:
 40780                           	opt callstack 0
 40781  01DB90                     _DMA1_DMAOR_ISR:
 40782                           	opt callstack 4
 40783                           
 40784                           ; BSR set to: 57
 40785                           ;incstack = 0
 40786  01DB90  EE14  F208         	lfsr	1,___inthi_sp
 40787                           
 40788                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 40789  01DB94  0139               	movlb	57	; () banked
 40790  01DB96  95A2               	bcf	162,2,b	;volatile
 40791                           
 40792                           ; BSR set to: 57
 40793  01DB98  0011               	retfie		f
 40794  01DB9A                     __end_of_DMA1_DMAOR_ISR:
 40795                           	opt callstack 0
 40796                           
 40797                           ;
 40798                           ; Interrupt Vector Table @ 0x8
 40799                           ;
 40800                           
 40801                           	psect	ivt0x8
 40802  000008                     __pivt0x8:
 40803                           	opt callstack 0
 40804  000008                     ivt0x8_base:
 40805                           	opt callstack 0
 40806                           
 40807                           ; Vector 0 : SWINT
 40808  000008  76F8               	dw	_Default_ISR shr (0+2)
 40809                           
 40810                           ; Vector 1 : HLVD
 40811  00000A  76F8               	dw	_Default_ISR shr (0+2)
 40812                           
 40813                           ; Vector 2 : OSF
 40814  00000C  76F8               	dw	_Default_ISR shr (0+2)
 40815                           
 40816                           ; Vector 3 : CSW
 40817  00000E  76F8               	dw	_Default_ISR shr (0+2)
 40818                           
 40819                           ; Vector 4 : NVM
 40820  000010  76F8               	dw	_Default_ISR shr (0+2)
 40821                           
 40822                           ; Vector 5 : SCAN
 40823  000012  76F8               	dw	_Default_ISR shr (0+2)
 40824                           
 40825                           ; Vector 6 : CRC
 40826  000014  76F8               	dw	_Default_ISR shr (0+2)
 40827                           
 40828                           ; Vector 7 : IOC
 40829  000016  76F8               	dw	_Default_ISR shr (0+2)
 40830                           
 40831                           ; Vector 8 : INT0
 40832  000018  76D1               	dw	_INT0_ISR shr (0+2)
 40833                           
 40834                           ; Vector 9 : ZCD
 40835  00001A  76F8               	dw	_Default_ISR shr (0+2)
 40836                           
 40837                           ; Vector 10 : AD
 40838  00001C  7539               	dw	_ADCC_ISR shr (0+2)
 40839                           
 40840                           ; Vector 11 : ADT
 40841  00001E  71FC               	dw	_ADCC_ThresholdISR shr (0+2)
 40842                           
 40843                           ; Vector 12 : CMP1
 40844  000020  76F8               	dw	_Default_ISR shr (0+2)
 40845                           
 40846                           ; Vector 13 : SMT1
 40847  000022  76F8               	dw	_Default_ISR shr (0+2)
 40848                           
 40849                           ; Vector 14 : SMT1PRA
 40850  000024  76F8               	dw	_Default_ISR shr (0+2)
 40851                           
 40852                           ; Vector 15 : SMT1PRW
 40853  000026  76F8               	dw	_Default_ISR shr (0+2)
 40854                           
 40855                           ; Vector 16 : DMA1SCNT
 40856  000028  76D5               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 40857                           
 40858                           ; Vector 17 : DMA1DCNT
 40859  00002A  76DE               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 40860                           
 40861                           ; Vector 18 : DMA1OR
 40862  00002C  76E4               	dw	_DMA1_DMAOR_ISR shr (0+2)
 40863                           
 40864                           ; Vector 19 : DMA1A
 40865  00002E  76E1               	dw	_DMA1_DMAA_ISR shr (0+2)
 40866                           
 40867                           ; Vector 20 : SPI1RX
 40868  000030  76F8               	dw	_Default_ISR shr (0+2)
 40869                           
 40870                           ; Vector 21 : SPI1TX
 40871  000032  76F8               	dw	_Default_ISR shr (0+2)
 40872                           
 40873                           ; Vector 22 : SPI1
 40874  000034  76F8               	dw	_Default_ISR shr (0+2)
 40875                           
 40876                           ; Vector 23 : I2C1RX
 40877  000036  76F8               	dw	_Default_ISR shr (0+2)
 40878                           
 40879                           ; Vector 24 : I2C1TX
 40880  000038  76F8               	dw	_Default_ISR shr (0+2)
 40881                           
 40882                           ; Vector 25 : I2C1
 40883  00003A  76F8               	dw	_Default_ISR shr (0+2)
 40884                           
 40885                           ; Vector 26 : I2C1E
 40886  00003C  76F8               	dw	_Default_ISR shr (0+2)
 40887                           
 40888                           ; Vector 27 : U1RX
 40889  00003E  75D2               	dw	_UART1_rx_vect_isr shr (0+2)
 40890                           
 40891                           ; Vector 28 : U1TX
 40892  000040  76F8               	dw	_Default_ISR shr (0+2)
 40893                           
 40894                           ; Vector 29 : U1E
 40895  000042  76F8               	dw	_Default_ISR shr (0+2)
 40896                           
 40897                           ; Vector 30 : U1
 40898  000044  76F8               	dw	_Default_ISR shr (0+2)
 40899                           
 40900                           ; Vector 31 : TMR0
 40901  000046  76F8               	dw	_Default_ISR shr (0+2)
 40902                           
 40903                           ; Vector 32 : TMR1
 40904  000048  76F8               	dw	_Default_ISR shr (0+2)
 40905                           
 40906                           ; Vector 33 : TMR1G
 40907  00004A  76F8               	dw	_Default_ISR shr (0+2)
 40908                           
 40909                           ; Vector 34 : TMR2
 40910  00004C  76F8               	dw	_Default_ISR shr (0+2)
 40911                           
 40912                           ; Vector 35 : CCP1
 40913  00004E  76F8               	dw	_Default_ISR shr (0+2)
 40914                           
 40915                           ; Vector 36 : Undefined
 40916  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 40917                           
 40918                           ; Vector 37 : NCO1
 40919  000052  76F8               	dw	_Default_ISR shr (0+2)
 40920                           
 40921                           ; Vector 38 : CWG1
 40922  000054  76F8               	dw	_Default_ISR shr (0+2)
 40923                           
 40924                           ; Vector 39 : CLC1
 40925  000056  76F8               	dw	_Default_ISR shr (0+2)
 40926                           
 40927                           ; Vector 40 : INT1
 40928  000058  745C               	dw	_INT1_ISR shr (0+2)
 40929                           
 40930                           ; Vector 41 : CMP2
 40931  00005A  76F8               	dw	_Default_ISR shr (0+2)
 40932                           
 40933                           ; Vector 42 : DMA2SCNT
 40934  00005C  76F8               	dw	_Default_ISR shr (0+2)
 40935                           
 40936                           ; Vector 43 : DMA2DCNT
 40937  00005E  76F8               	dw	_Default_ISR shr (0+2)
 40938                           
 40939                           ; Vector 44 : DMA2OR
 40940  000060  76F8               	dw	_Default_ISR shr (0+2)
 40941                           
 40942                           ; Vector 45 : DMA2A
 40943  000062  76F8               	dw	_Default_ISR shr (0+2)
 40944                           
 40945                           ; Vector 46 : I2C2RX
 40946  000064  76F8               	dw	_Default_ISR shr (0+2)
 40947                           
 40948                           ; Vector 47 : I2C2TX
 40949  000066  76F8               	dw	_Default_ISR shr (0+2)
 40950                           
 40951                           ; Vector 48 : I2C2
 40952  000068  76F8               	dw	_Default_ISR shr (0+2)
 40953                           
 40954                           ; Vector 49 : I2C2E
 40955  00006A  76F8               	dw	_Default_ISR shr (0+2)
 40956                           
 40957                           ; Vector 50 : U2RX
 40958  00006C  75E6               	dw	_UART2_rx_vect_isr shr (0+2)
 40959                           
 40960                           ; Vector 51 : U2TX
 40961  00006E  75DC               	dw	_UART2_tx_vect_isr shr (0+2)
 40962                           
 40963                           ; Vector 52 : U2E
 40964  000070  76F8               	dw	_Default_ISR shr (0+2)
 40965                           
 40966                           ; Vector 53 : U2
 40967  000072  76F8               	dw	_Default_ISR shr (0+2)
 40968                           
 40969                           ; Vector 54 : TMR3
 40970  000074  68D8               	dw	_TMR3_ISR shr (0+2)
 40971                           
 40972                           ; Vector 55 : TMR3G
 40973  000076  76F8               	dw	_Default_ISR shr (0+2)
 40974                           
 40975                           ; Vector 56 : TMR4
 40976  000078  76F8               	dw	_Default_ISR shr (0+2)
 40977                           
 40978                           ; Vector 57 : CCP2
 40979  00007A  76F8               	dw	_Default_ISR shr (0+2)
 40980                           
 40981                           ; Vector 58 : Undefined
 40982  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 40983                           
 40984                           ; Vector 59 : CWG2
 40985  00007E  76F8               	dw	_Default_ISR shr (0+2)
 40986                           
 40987                           ; Vector 60 : CLC2
 40988  000080  76F8               	dw	_Default_ISR shr (0+2)
 40989                           
 40990                           ; Vector 61 : INT2
 40991  000082  76F8               	dw	_Default_ISR shr (0+2)
 40992                           
 40993                           ; Vector 62 : Undefined
 40994  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 40995                           
 40996                           ; Vector 63 : Undefined
 40997  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 40998                           
 40999                           ; Vector 64 : Undefined
 41000  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 41001                           
 41002                           ; Vector 65 : Undefined
 41003  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 41004                           
 41005                           ; Vector 66 : Undefined
 41006  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 41007                           
 41008                           ; Vector 67 : Undefined
 41009  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 41010                           
 41011                           ; Vector 68 : Undefined
 41012  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 41013                           
 41014                           ; Vector 69 : Undefined
 41015  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 41016                           
 41017                           ; Vector 70 : TMR5
 41018  000094  6D58               	dw	_TMR5_ISR shr (0+2)
 41019                           
 41020                           ; Vector 71 : TMR5G
 41021  000096  76F8               	dw	_Default_ISR shr (0+2)
 41022                           
 41023                           ; Vector 72 : TMR6
 41024  000098  767C               	dw	_TMR6_ISR shr (0+2)
 41025                           
 41026                           ; Vector 73 : CCP3
 41027  00009A  76F8               	dw	_Default_ISR shr (0+2)
 41028                           
 41029                           ; Vector 74 : CWG3
 41030  00009C  76F8               	dw	_Default_ISR shr (0+2)
 41031                           
 41032                           ; Vector 75 : CLC3
 41033  00009E  76F8               	dw	_Default_ISR shr (0+2)
 41034                           
 41035                           ; Vector 76 : Undefined
 41036  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 41037                           
 41038                           ; Vector 77 : Undefined
 41039  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 41040                           
 41041                           ; Vector 78 : Undefined
 41042  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 41043                           
 41044                           ; Vector 79 : Undefined
 41045  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 41046                           
 41047                           ; Vector 80 : CCP4
 41048  0000A8  76F8               	dw	_Default_ISR shr (0+2)
 41049                           
 41050                           ; Vector 81 : CLC4
 41051  0000AA  76F8               	dw	_Default_ISR shr (0+2)
 41052  0000AC                     ivt0x8_undefint:
 41053                           	opt callstack 0
 41054  0000AC  00FF               	reset	
 41055                           
 41056                           	psect	text200
 41057  000000                     __ptext200:
 41058                           	opt callstack 0
 41059                           
 41060                           	psect	rparam
 41061  0000                     
 41062                           	psect	temp
 41063  000001                     btemp:
 41064                           	opt callstack 0
 41065  000001                     	ds	32
 41066  0000                     wtemp0	set	btemp
 41067  0000                     wtemp1	set	btemp+2
 41068  0000                     wtemp2	set	btemp+4
 41069  0000                     wtemp3	set	btemp+6
 41070  0000                     wtemp4	set	btemp+8
 41071  0000                     wtemp5	set	btemp+10
 41072  0000                     wtemp8	set	btemp+1
 41073  0000                     ttemp0	set	btemp
 41074  0000                     ttemp1	set	btemp+3
 41075  0000                     ttemp2	set	btemp+6
 41076  0000                     ttemp3	set	btemp+9
 41077  0000                     ttemp5	set	btemp+1
 41078  0000                     ttemp6	set	btemp+4
 41079  0000                     ttemp7	set	btemp+8
 41080  0000                     ltemp0	set	btemp
 41081  0000                     ltemp1	set	btemp+4
 41082  0000                     ltemp2	set	btemp+8
 41083  0000                     lltemp0	set	btemp
 41084  0000                     lltemp1	set	btemp+8
 41085  0000                     lltemp2	set	btemp+16
 41086  0000                     lltemp3	set	btemp+24
 41087                           tosu	equ	0x3FFF
 41088                           tosh	equ	0x3FFE
 41089                           tosl	equ	0x3FFD
 41090                           stkptr	equ	0x3FFC
 41091                           pclatu	equ	0x3FFB
 41092                           pclath	equ	0x3FFA
 41093                           pcl	equ	0x3FF9
 41094                           tblptru	equ	0x3FF8
 41095                           tblptrh	equ	0x3FF7
 41096                           tblptrl	equ	0x3FF6
 41097                           tablat	equ	0x3FF5
 41098                           prodh	equ	0x3FF4
 41099                           prodl	equ	0x3FF3
 41100                           indf0	equ	0x3FEF
 41101                           postinc0	equ	0x3FEE
 41102                           postdec0	equ	0x3FED
 41103                           preinc0	equ	0x3FEC
 41104                           plusw0	equ	0x3FEB
 41105                           fsr0h	equ	0x3FEA
 41106                           fsr0l	equ	0x3FE9
 41107                           wreg	equ	0x3FE8
 41108                           indf1	equ	0x3FE7
 41109                           postinc1	equ	0x3FE6
 41110                           postdec1	equ	0x3FE5
 41111                           preinc1	equ	0x3FE4
 41112                           plusw1	equ	0x3FE3
 41113                           fsr1h	equ	0x3FE2
 41114                           fsr1l	equ	0x3FE1
 41115                           bsr	equ	0x3FE0
 41116                           indf2	equ	0x3FDF
 41117                           postinc2	equ	0x3FDE
 41118                           postdec2	equ	0x3FDD
 41119                           preinc2	equ	0x3FDC
 41120                           plusw2	equ	0x3FDB
 41121                           fsr2h	equ	0x3FDA
 41122                           fsr2l	equ	0x3FD9
 41123                           status	equ	0x3FD8


Data Sizes:
    Strings     1430
    Constant    492
    Data        1076
    BSS         1365
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     160
    BANK1           256      0     250
    BANK2           256      0     212
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_130(CODE[1]), STR_92(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[3]), STR_113(CODE[3]), 
		 -> STR_108(CODE[3]), STR_104(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[3]), STR_113(CODE[3]), 
		 -> STR_108(CODE[3]), STR_104(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), 
		 -> STR_89(CODE[19]), STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), 
		 -> STR_89(CODE[19]), STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), 
		 -> STR_81(CODE[15]), STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_75(CODE[9]), STR_74(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_75(CODE[9]), STR_74(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_99(CODE[4]), STR_98(CODE[4]), STR_95(CODE[4]), STR_94(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_99(CODE[4]), STR_98(CODE[4]), STR_95(CODE[4]), STR_94(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_73(CODE[3]), STR_72(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_71(CODE[21]), STR_70(CODE[21]), STR_69(CODE[21]), 
		 -> STR_68(CODE[21]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[18]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[20]), 
		 -> STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), 
		 -> STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6825_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_93(CODE[127]), STR_91(CODE[3]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[19]), STR_87(CODE[19]), STR_86(CODE[19]), STR_85(CODE[19]), 
		 -> STR_84(CODE[19]), STR_83(CODE[24]), STR_82(CODE[15]), STR_81(CODE[15]), 
		 -> STR_80(CODE[15]), STR_79(CODE[10]), STR_78(CODE[10]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[21]), 
		 -> STR_70(CODE[21]), STR_69(CODE[21]), STR_68(CODE[21]), STR_67(CODE[21]), 
		 -> STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[18]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_75(CODE[9]), STR_74(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_75(CODE[9]), STR_74(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), cp(STACK[4]), 
		 -> cb(STACK[4]), STR_3(CODE[5]), V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_75(CODE[9]), 
		 -> STR_74(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S5229tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    r_cal_ptr	PTR unsigned char  size(1) Largest target is 57
		 -> R(BANK0[57]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 57
		 -> r_cal(BANK2[57]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_75(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_74(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  600661
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                  17    17      0  128221
                             _WaitMs
                            ___fldiv
                           ___xxtofl
                    _cal_current_10A
                   _cal_current_zero
                     _clear_adc_scan
                       _clear_switch
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       6     6      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _clear_switch                                         1     0      1      66
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (2) _cal_current_10A                                     13     0     13     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___xxtofl
     _cal_current_10A
       _check_range
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _clear_switch
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4AE      58        0.0%
DATA                 0      0     9BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 01:58:53 2020

                     _SPI1_Exchange8bit D93E                __end_of_set_display_info D9B6  
                                     _C 07FF                                       _D 092A  
                                     _H 01C7                                       _P 01F6  
                                     _R 00AE                                       _S 0200  
                                     _T F94D                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler D67E            __end_of_start_switch_handler D91E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data DA3A                                      _bp FA55  
                __end_of_FVR_Initialize DBC2                          _check_day_time 98DE  
                           __CFG_LVP$ON 000000                                     l171 DA8C  
                                   l809 D94C                                     l675 D536  
                                   l942 C8A6                                     _GIE 01FE97  
                                   _abs CF1C                                     _pad AF64  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize DA22  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack D850  
                     _update_adc_result D1AE                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack D7E4  
                          __CFG_ZCD$OFF 000000                                    l1004 D128  
                                  l2102 98D4                                    l2015 BC48  
                                  l2040 C320                                    l2200 CD12  
                                  l2046 BAE2                                    l2311 473E  
                                  l1271 DAB4                                    l1503 4018  
                                  l1192 D168                                    l2232 A9C4  
                                  l2241 913C                                    l2162 9A74  
                                  l3210 5A6C                                    l1282 9F48  
                                  l2315 4A7C                         _timer3ReloadVal 009A  
                                  l1284 9F4E                                    l1460 07AA  
                                  l2501 18E8                                    l2149 B2A6  
                                  l1445 0288                                    l2166 9A6C  
                                  l3222 58FC                                    l1439 005E  
                                  l2416 AFC0                                    l1802 D23E  
                                  l1458 07A6                                    l3331 954E  
                                  l1811 91F4                                    l1724 BE56  
                                  l2436 658A                                    l2516 1D98  
                                  l1812 9350                                    l1484 123E  
                                  l1468 084A                                    l2357 80CA  
                                  l1478 0A4E                                    l3255 5FE6  
                                  l1743 D2AA                                    l1479 0C76  
                                  l2472 24B8                                    l2640 3464  
                                  l1728 C170                                    l3362 CF5C  
                                  l3354 9C0A                                    l2554 81B8  
                                  l3291 52B0                                    l1819 B184  
                                  l1596 CB7A                                    l3462 AC12  
                                  l2590 6DBC                    _ADCC_StartConversion DAB8  
                                  l2575 74E2                                    l3393 8876  
                                  l1859 D9B2                                    l2932 B96E  
                                  l2943 A356                                    l1959 64A6  
                                  l2936 A282                                    l3744 C4B0  
                                  l3729 8F1C                                    l2970 A1F4  
                                  l3757 C42C                                    l1999 C62E  
                                  l9104 5CC2                                    l9032 8C58  
                                  l9024 8BAC                                    l9016 8B24  
                                  l9130 5DEE                                    l9122 5D88  
                                  l9114 5D52                                    l9124 5D9A  
                                  l9132 5DF2                                    l9052 5ACC  
                                  l9302 50C0                                    l9214 4B26  
                                  l9062 5B22                                    l9320 5136  
                                  l9232 4BF4                                    l9216 4B2C  
                                  l9208 4AE6                                    l9144 5E3C  
                                  l9072 5BAA                                    l9064 5B52  
                                  l9330 51AA                                    l9306 50E6  
                                  l9234 4BFA                                    l9226 4BB4  
                                  l9218 4B5C                                    l8610 5486  
                                  l9162 5EB2                                    l9138 5E20  
                                  l9090 5C6E                                    l9082 5C00  
                                  l9058 5B0C                                    l9340 521A  
                                  l9316 5130                                    l9244 4C4C  
                                  l9236 4C2A                                    l8604 5440  
                                  l9172 5F26                                    l9148 5E62  
                                  l9084 5C30                                    l9404 A5F6  
                                  l9420 AE7E                                    l9350 5278  
                                  l9334 51F0                                    l8710 5886  
                                  l9190 5FBA                                    l9158 5EAC  
                                  l9078 5BEA                                    l9502 A0DE  
                                  l8720 58E0                                    l8712 58AC  
                                  l8616 54A8                                    l8608 5456  
                                  l9192 5FCA                                    l9184 5F92  
                                  l9096 5CA8                                    l9424 AE96  
                                  l9416 AE6C                                    l9520 A17C  
                                  l8730 5930                                    l9178 5F62  
                                  l8546 BFD2                                    l9370 A4E6  
                                  l9442 AF4A                                    l9434 AF16  
                                  l9450 B8F6                                    l9348 525E  
                                  l8660 5678                                    l8580 5350  
                                  l8548 BFF4                                    l8900 C4A0  
                                  l8734 593C                                    l8662 568A  
                                  l8670 56C4                                    l8646 55E6  
                                  l8574 5310                                    l9382 A51C  
                                  l9454 B938                                    l9526 A18C  
                                  l9518 A160                                    l9542 9DE8  
                                  l9296 50A4                                    l8760 59C8  
                                  l8744 5964                                    l8728 591E  
                                  l8656 5658                                    l8592 53CE  
                                  l8584 5366                                    l9472 A2D0  
                                  l9376 A4FC                                    l9528 A1A2  
                                  l8770 59F4                                    l8690 5772  
                                  l8666 5694                                    l8586 5396  
                                  l9466 A240                                    l9458 B96C  
                                  l8930 73BE                                    l8914 7250  
                                  l9554 9EBA                                    l8748 596A  
                                  l9484 A354                                    l9476 A31E  
                                  l9396 A5C2                                    l9492 CE1A  
                                  l8782 5A4C                                    l8774 5A0C  
                                  l8694 577C                                    l8598 5400  
                                  l9590 CC66                                    l8934 7406  
                                  l9574 A838                                    l9566 A78C  
                                  l8776 5A1C                                    l8688 5760  
                                  l8872 9BA8                                    l8928 736E  
                                  l8698 57AE                                    l8858 CF4C  
                                  l8882 9C02                                    l8938 7474  
                                  l8972 83EE                                    l8876 9BAC  
                                  l8956 C41C                                    STR_1 FE65  
                                  l8984 8488                                    STR_2 FE11  
                                  STR_3 FFD2                                    l8978 8442  
                                  STR_4 FDA8                                    STR_5 FBDF  
                                  l8996 855A                                    STR_6 FBDF  
                                  STR_7 FBDF                                    STR_8 FEB9  
                                  STR_9 FF22                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 C022                                    u6030 D44E  
                                  u6007 C014                                    u6200 56DC  
                                  u6040 D450                                    u7010 8B1E  
                                  _T6PR 003F93                                    u6300 58CE  
                                  u6140 560C                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u6150 562C  
                                  u7030 8B74                                    _PMD2 0039C2  
                                  u6151 5626                                    _PMD3 0039C3  
                                  u6400 59B8                                    u7040 8BA6  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u8010 CC42                                    u7050 8BD8  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u6340 5942                                    u6260 57A4  
                                  u8020 CC62                                    u6405 59A8  
                                  u6430 59D8                                    u6190 56BC  
                                  u7310 5F00                                    u7230 5E1A  
                                  u7070 8C90                                    u6360 595C  
                                  u6168 562E                                    u7320 5F3A  
                                  u6265 5794                                    u7330 5F76  
                                  u7090 8CE2                                    u6195 56AC  
                                  u7315 5EF0                                    u7420 4C3A  
                                  u7270 5EA4                                    u6710 71E8  
                                  u6470 D41E                                    u9120 86B8  
                                  u7600 A548                                    u6640 9BFA  
                                  u6720 7234                                    u6480 D420  
                                  u7530 5184                                    u6650 9BFC  
                                  u6810 CFE0                                    u7435 4DCE  
                                  u6635 9BDC                                    u6715 71DE  
                                  u7540 51BE                                    u9140 8810  
                                  u6580 CF30                                    u7620 A5E2  
                                  u6820 CFE2                                    u7445 4E96  
                                  u7550 5204                                    u9150 8812  
                                  u6910 843E                                    u6590 9B2C  
                                  u9230 8EC2                                    u6830 C3DA  
                                  u7535 5174                                    u7455 505E  
                                  u7800 A0BE                                    u6760 7314  
                                  u6680 C45E                                    u9240 8EF0  
                                  u6840 C3DC                                    u6921 8448  
                                  u6745 726E                                    u7490 5128  
                                  u6930 8482                                    u7730 B968  
                                  u7810 A0D2                                    u6746 7274  
                                  u6690 C460                                    u9250 D89E  
                                  u6595 9B22                                    u6747 7282  
                                  u9235 8EBC                                    u6860 D47E  
                                  u6940 84B4                                    u7820 A10C  
                                  u6780 73EC                                    u7805 A0B4  
                                  u6765 730A                                    u9237 8EAE  
                                  u7901 9DA8                                    u6870 D480  
                                  u7670 AEC2                                    u9190 8E28  
                                  u7910 9DE2                                    u9247 8EE2  
                                  u6960 8592                                    u7920 9E14  
                                  u7825 A102                                    u6785 73E2  
                                  u6890 83E8                                    u7690 AF36  
                                  u6980 85E4                                    u7940 9EF2  
                                  u9197 8E1A                                    u7790 CE16  
                                  u7870 A1AA                                    u9640 94C2  
                                  u7960 A786                                    u9714 600C  
                                  u7890 A1D4                                    u7970 A7B8  
                                  _PLLR 01CEE0                                    u9715 6006  
                                  u9820 633C                                    u9814 6334  
                                  u9734 603C                                    u7990 A870  
                                  u9815 632E                                    u9735 6036  
                                  u9680 B828                                    u9905 C8B6  
                                  u9754 605E                                    u9906 C8B8  
                                  u9755 6058                                    u9685 B822  
                                  u9774 6244                                    u9775 623E  
                                  u9880 C866                                    u9794 6312  
                                  u9795 630C                                    u9888 C868  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR D510                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0243                      __size_of_CRC_Start 0006  
                                  _cp_h FA65                                    _cp_l FA61  
                                  _atoi 860C                                    _ctoa C32A  
                                  _main 0000                                    _dtoa 64AC  
                                  _nanf CA54                                    _seed 02CC  
                                  _prec 003C                                    _nout 0096  
                                  _spin F9DD                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 80CE                                    btemp 0001  
                                  _utoa 749E                                    _xtoa 6D78  
                __end_of_check_adc_scan DBA2                           ___fpclassifyf 9A7E  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 009E  
             __end_of_SPI1_Exchange8bit D95C               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize CED4             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr D748  
                          ___param_bank 000000                  __end_of_check_day_time 9A7E  
                    ?_UART1_rx_vect_isr 0021               __size_of_DATAEE_WriteByte 0068  
                      __end_of_INT0_ISR DB52                        __end_of_INT1_ISR D1AE  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma BE5E  
         __end_of_OSCILLATOR_Initialize DA92                                   l10206 8866  
                                 l10222 8D8E                                   l10224 8DFA  
                                 l10170 8626                                   l10500 947A  
                                 l10180 86BC                                   l10172 8648  
                                 l12100 9708                                   l10502 9498  
                                 l10190 8724                                   l10512 94CC  
                                 l10504 94AE                                   l10192 8762  
                                 l10522 952E                                   l12122 9D74  
                                 l10186 86E8                                   l12210 8090  
                                 l11340 CD6A                                   l10196 87CA  
                                 l10188 8700                                   l11412 B2C6  
                                 l10540 B874                                   l12212 80BA  
                                 l12108 970C                                   l10606 6486  
                                 l12142 7E12                                   l11344 CD9C  
                                 l10480 939E                                   l10552 5FF2  
                                 l10624 D5AE                                   l10536 B836  
                                 l10544 B888                                   l12152 7E58  
                                 l12144 7E22                                   l12080 95A0  
                                 l10490 9418                                   l14010 2CF8  
                                 l11530 BA94                                   l11418 B378  
                                 l11610 D1CE                                   l12162 7E8E  
                                 l12146 7E28                                   l11700 A686  
                                 l11444 9786                                   l11436 975A  
                                 l10492 942E                                   l10580 625C  
                                 l10572 622A                                   l11460 C2C8  
                                 l11508 CCD8                                   l12180 7F10  
                                 l12172 7EC2                                   l12156 7E64  
                                 l12092 9656                                   l12422 6D6A  
                                 l10494 944C                                   l10558 6022  
                                 l13310 AFB8                                   l14030 2E58  
                                 l14006 2CC4                                   l11518 BA5E  
                                 l10830 A03A                                   l12094 968A  
                                 l11448 979A                                   l10488 940A  
                                 l10592 63D8                                   l10584 62F8  
                                 l10568 6148                                   l13320 B050  
                                 l13312 AFCA                                   l14040 2F06  
                                 l14104 3410                                   l11472 C2FE  
                                 l12168 7EB6                                   l10770 99A8  
                                 l11714 A738                                   l11706 A6BE  
                                 l13242 AB28                                   l13306 AF90  
                                 l14050 3028                                   l14122 BF5E  
                                 l14202 B09C                                   l10842 D2B4  
                                 l10826 A010                                   l11634 C5EC  
                                 l11900 D532                                   l14300 45E0  
                                 l13316 B006                                   l13412 68A6  
                                 l13500 16EE                                   l14060 30DE  
                                 l11492 AD7E                                   l12188 7F36  
                                 PRLOCK 0039EF                                   l12550 C57E  
                                 l10934 CCA2                                   l14310 474E  
                                 l10782 9A1A                                   l10598 6474  
                                 l13254 C05E                                   l13326 B68A  
                                 l13430 132A                                   l14142 BD34  
                                 l12374 BAF2                                   l11822 B98A  
                                 l11646 C604                                   l11654 AC7E  
                                 l12544 C56E                                   l11568 D254  
                                 l13344 C348                                   l13416 68E2  
                                 l13520 17FA                                   l13504 1750  
                                 l14144 BD76                                   l13280 7C60  
                                 l11496 ADC0                                   l14314 4770  
                                 l14306 46A6                                   l11690 A64C  
                                 l13258 C09C                                   l13346 C374  
                                 l13370 657A                                   l13522 180C  
                                 l13442 136E                                   l13450 13C4  
                                 l14074 325A                                   l13274 7BA2  
                                 l14170 BE74                                   l12378 BB30  
                                 l10954 C4F2                                   l14242 A8F8  
                                 l11826 BA06                                   l11658 ACE0  
                                 l11684 A628                                   l13612 1EB0  
                                 l13516 17D2                                   l13460 1468  
                                 l14172 BE82                                   l14180 BEB6  
                                 l14326 4A74                                   l14270 4160  
                                 l11926 D110                                   l11686 A638  
                                 l13382 65E2                                   l13462 1494  
                                 l14094 33EC                                   l13294 7D78  
                                 l13286 7CCA                                   l14166 BE62  
                                 l11944 D150                                   l11688 A63E  
                                 l13392 67F4                                   l13712 2418  
                                 l13624 1F38                                   l13632 1FA2  
                                 l13640 200E                                   l13536 1874  
                                 l13528 1812                                   l13464 14AA  
                                 l14088 3392                                   l14168 BE6A  
                                 l10896 D4CA                                   l14424 3526  
                                 l14248 A95E                                   l14290 438E  
                                 l14274 41CC                                   l14266 410C  
                                 l11698 A654                                   l13378 65C4  
                                 l13554 1936                                   l13538 1880  
                                 l13802 7724                                   l14098 33F0  
                                 l14178 BE8A                                   l14514 3A8A  
                                 l14604 C712                                   l13660 21B8  
                                 l13564 19F8                                   l13468 14D6  
                                 l13732 813A                                   l14436 359E  
                                 l14428 353C                                   l14700 0078  
                                 l14286 433A                                   l14278 4238  
                                 l13574 1BA4                                   l13558 196E  
                                 l13494 1614                                   l13478 157A  
                                 l13486 15A8                                   l13830 6DE6  
                                 l14630 91C4                                   l11888 D8F8  
                                 l14296 4566                                   l13648 2120  
                                 l13752 822A                                   l13824 6DAC  
                                 l14552 3F6E                                   l14480 38DC  
                                 l14560 8F3A                                   l13674 2254  
                                 l13498 1684                                   l13770 834C  
                                 l13762 82E4                                   l13922 25A4  
                                 l14474 3826                                   l14810 0532  
                                 l13676 226E                                   l13596 1D90  
                                 l13588 1CC6                                   l13756 825A  
                                 l13748 81EE                                   l13860 6F78  
                                 l13844 6E82                                   l13836 6E22  
                                 l13924 25DE                                   l14644 92EC  
                                 l14476 38CE                                   l13686 2310  
                                 l13598 1DB2                                   l13766 8310  
                                 l13926 25F4                                   l14494 3974  
                                 l14902 0EB2                                   l14822 060C  
                                 l13696 2360                                   l13792 752E  
                                 l13784 74D2                                   l13944 2726  
                                 l14576 902E                                   l14840 079C  
                                 l13946 2760                                   l14498 3988  
                                 l14586 9106                                   l14906 0F12  
                                 l14762 02A2                                   l13884 70E8  
                                 l13868 6FFE                                   l13964 28DA  
                                 l13948 2776                                   l14932 1116  
                                 l14916 1094                                   l14860 0810  
                                 l14756 0260                                   l14692 0040  
                                 l13982 2A5E                                   l13974 2972  
                                 l14918 10C0                                   l14846 07AE  
                                 l14694 0048                                   l14960 11B8  
                                 l14944 1168                                   l14848 07DC  
                                 l13986 2AB2                                   l14962 11D0  
                                 l14954 11A6                                   l14890 095A  
                                 l14698 0066                                   l14972 1214  
                                 l14868 0836                                   l13998 2C0C  
                                 l14982 126A                                   l14878 085A  
                                 l14968 11EE                         __end_of___aodiv 860C  
                          _Volts_to_SOC B978                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 5A76  
                                 _ADCLK 003EFF                         __end_of___aomod 8D06  
                                 _ADPCH 003EF1                         __end_of___fldiv 5FF0  
                                 _ADREF 003EFD                         __end_of___awdiv A610  
                       __end_of___flneg CE44                                   STR_10 FD93  
                                 STR_11 FB39                                   STR_12 FC0A  
                                 STR_20 FB05                                   STR_13 FCE6  
                                 STR_21 FB1F                                   STR_22 FF94  
                                 STR_30 FC62                                   STR_14 FBDE  
                                 STR_15 FDBD                                   STR_31 FD28  
                                 STR_24 FF83                                   STR_16 FDD2  
                                 STR_32 FCFC                                   STR_40 FB6B  
                                 STR_17 FEE3                                   STR_33 FD12  
                                 STR_25 FCD0                                   STR_41 FB99  
                         __CFG_WDTE$OFF 000000                                   STR_50 FEA4  
                                 STR_18 FE8F                                   STR_26 FCBA  
                                 STR_34 FC20                                   STR_42 FBB0  
                                 STR_51 FD54                                   STR_43 FD3E  
                                 STR_27 FCA4                                   STR_35 FC36  
                                 STR_19 FBF4                                   STR_44 FD3E  
                                 STR_52 FF0D                                   STR_60 FE50  
                                 STR_28 FC8E                                   STR_36 FC4C  
                       __end_of___awmod AF64                                   STR_61 FDE7  
                                 STR_53 FE7A                                   STR_45 FD3E  
                                 STR_29 FC78                                   STR_37 FB82  
                                 STR_70 FD7E                                   STR_62 FF71  
                                 STR_46 FE7A                                   STR_54 FD7E  
                                 STR_38 FBC7                                   STR_63 FEA4  
                                 STR_71 FECE                                   STR_55 FE3B  
                                 STR_47 FDFC                                   STR_39 FAE8  
                                 STR_64 FD54                                   STR_56 FE7A  
                                 STR_72 FFFC                                   STR_80 FFA4  
                                 STR_48 FDE7                                   _ADRPT 003EEC  
                                 STR_57 FD7E                                   STR_81 FFA4  
                                 STR_65 FF0D                                   STR_73 FFF9  
                                 STR_49 FF37                                   STR_66 FE7A  
                                 STR_82 FFA4                                   STR_74 FFB3  
                                 STR_58 FEF8                                   STR_59 FE7A  
                                 STR_75 FFC9                                   STR_67 FD69  
                                 STR_83 FB53                                   STR_92 FAE7  
                                 STR_76 FF4B                                   STR_68 FE26  
                                 STR_77 FF4B                                   STR_69 FE7A  
                                 STR_85 FF5E                                   STR_93 FA69  
                                 STR_94 FFD7                                   STR_78 FFBF  
                                 STR_79 FFBF                                   STR_95 FFDF  
                       __end_of___flmul 52BA                                   STR_98 FFDB  
                                 STR_99 FFE3                         __end_of___flsub CFA8  
                       __end_of___fltol A1FE                                   u10025 D01C  
                                 u10140 C4EE                                   u10320 9738  
                                 u11120 9708                                   u10170 C936  
                                 u10074 9FBC                                   u10090 DAF6  
                                 u10075 9FB6                                   u11131 DA44  
                                 u12100 64DE                                   u10420 BA5A  
                                 u10245 DAE4                                   u10350 C2C4  
                                 u10414 CD06                                   u10246 DAE6  
                                 u10415 CD02                                   u10255 DAD4  
                                 u12200 6862                                   u12120 654E  
                                 u12040 B704                                   u13000 6ECE  
                                 u10440 BA8E                                   u10256 DAD6  
                                 u12210 6866                                   u13010 6ED0  
                                 u10370 C2F8                                   u10195 C96A  
                       __end_of___lodiv 9F1A                                   u10196 C96C  
                                 u10188 C938                                   u12140 6560  
                                 u12300 1412                                   u13100 7074  
                                 u12230 687C                                   u12310 1414  
                                 u13110 7078                                   u13030 6F2E  
                                 u12047 B6F6                                   u10560 D8C6  
                                 u12160 65B0                                   u13040 6F30  
                                 u12170 6808                                   u12090 64DC  
                                 u13210 27BE                                   _U1P1H 003DED  
                                 u12420 17E0                                   u12340 1524  
                                 u13060 6FFA                                   u13300 2B3A  
                                 u13220 27C0                                   u14020 03BC  
                                 _U1P2H 003DEF                                   u12181 6838  
                                 u10566 D8C8                                   u12190 684E  
                                 u12350 1526                                   u12270 1358  
                                 u13070 701A                                   u13230 27E6  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u12191 684C                                   _T3CLK 003FA9  
                                 u13400 3132                                   u13160 263C  
                                 u14200 1130                                   u14040 063A  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u13081 704A                                   u13065 6FDC  
                                 u12450 1844                                   u13090 7060  
                                 u13330 2DB2                                   u13170 263E  
                                 u14050 0764                                   _U1P3L 003DF0  
                                 u13091 705E                                   u13420 32E2  
                                 u13340 2DB4                                   u13180 2664  
                                 u14060 0766                                   u11910 AB1C  
                                 u12390 178C                                   u14206 1132  
                                 _U2P1L 003DD4                                   u12720 2336  
                                 u12560 1C96                                   u13280 29C6  
                                 u13440 BF3E                                   u13520 A93A  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11930 AB98                                   u12490 18C6  
                                 _U2P3L 003DD8                                   u12740 23EC  
                                 u12660 2162                                   u12820 8250  
                                 u13508 A8D6                                   u14180 1106  
                                 u12750 23EE                                   u12830 8296  
                                 u13550 A9A0                                   u14190 111E  
                                 u12911 7766                                   _T5CLK 003F9D  
                                 u12920 777C                         __end_of___lomod A892  
                                 u12921 777A                                   u12930 7790  
                                 u13538 A93C                                   u13490 A8D4  
                                 u14186 1108                                   u12860 8372  
                                 u12940 7794                                   u13820 3BD0  
                                 u14196 1120                                   _T2HLT 003FAD  
                                 u12837 8288                                   u11990 7DEC  
                                 u13830 3BFA                                   u12880 74B8  
                                 u12960 6D92                                   u13760 36E4  
                                 u13568 A9A2                                   _T5CON 003F9A  
                                 u13825 3BC2                                   u13770 370E  
                                 u13835 3BEC                                   u13765 36D6  
                                 u12990 6E7A                                   u13950 933C  
                                 u13775 3700                                   u13960 933E  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0081  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result D1E8                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR DBE0  
                   __size_of_CRC_IsBusy 0010                 __size_of_clear_adc_scan 0006  
                    _current_sensor_cal 346E       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR A4C2                           __CFG_WRTC$OFF 000000  
                      _cal_current_zero C29C                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR B642                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR DA0A                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                         _DATAEE_ReadByte D398  
                                 _fabsf BC5A                    __end_of_clear_switch CD16  
                                 _flags 003E                    __size_of_check_range 0080  
             __size_of_CRC_ReverseValue 00CE                                   _r_cal 0293  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay DB44  
                                 _fputc AAF8              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha CFEC                                   _fputs C04E  
                       __end_of_isdigit D48A                         __end_of_ivln2_h FA61  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand D2C8  
                                 _width 003A                                   _putch D9D4  
          __end_of_set_ac_charger_relay DB1A                         __end_of_islower D42A  
                       __end_of_isspace CC76                _INT1_SetInterruptHandler D6A6  
                       __end_of_set_dac BC5A                         __end_of_isupper D45A  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw0 003FEB                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler D62E  
           _UART1_SetRxInterruptHandler D606                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf B292                         __end_of_tolower C4BA  
                       __end_of_strncmp 8F26                         __end_of_toupper C436  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr D770  
              __size_of_SPI1_Initialize 0016                 __end_of_update_cal_data DA50  
                       _TMR5_Initialize CE8C                   __end_of_ringBufS_init D58E  
                       __initialization B388                       _UART2_rx_vect_isr D798  
                          __end_of_cp_h FA69                            __end_of_cp_l FA65  
                          __end_of_atoi 8880                            __end_of_ctoa C3B2  
                          __end_of_main 127E                            __end_of_dtoa 692C  
                          __end_of_nanf CAB6                            __end_of_spin FA55  
                          __end_of_stoa 838C                            __end_of_utoa 77DE  
                          __end_of_xtoa 7132                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize DA3A  
              __size_of_cal_current_10A 00BA                   __end_of_send_lcd_data D7E4  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button C71C  
                     __end_of_CRC_Start DBC8                _TMR5_SetInterruptHandler D656  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 0078                       _port_data_dma_ptr DB6C  
                    esr_check@esr_state 00A0                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize D53C  
                       _PWM8_Initialize DA66                        _UART1_Initialize CE44  
                     _UART2_tx_vect_isr D770                      _UART2_Transmit_ISR D510  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan C98E  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                STR_102 FFEA                                  STR_111 FFED  
                                STR_104 FFEA                                  STR_113 FFED  
                                STR_121 FFF6                                  STR_106 FFF0  
                                STR_123 FFF6                                  STR_108 FFF0  
                                STR_116 FFF3                                  STR_125 FFE7  
                                STR_118 FFF3                                  STR_127 FFE7  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue CFEC  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1021 B5F2                                  _RB6PPS 003A0E  
                                i1l1209 A42A                    _start_switch_handler D8FE  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize CF1C                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright DB28  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                _NVMDAT 0039E3                    __size_of_hid_display 021C  
                                u993_20 9934                                  u985_25 DB14  
                                u985_26 DB16                        __end_of___xxtofl 9558  
 __end_of_ADCC_DischargeSampleCapacitor DBAA  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor DBA2                __end_of_send_lcd_cmd_dma D97A  
                       _TMR3_WriteTimer D12E                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr D7C0              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize DB62                        _UART2_Initialize CAB6  
                                _WaitMs D292                         _conv_raw_result 5FF0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge A1FE                                  ___fleq B8B4  
                     _ADCC_ThresholdISR C7F0                          __CFG_STVREN$ON 000000  
                                _crcObj 00AB                          _ringBufS_flush C0E6  
                                _efgtoa 127E                                  _floorf 7132  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A4  
                     dac_spi_control@S2 00A3                       dac_spi_control@SB 00A1  
                     dac_spi_control@SC 00A2                      ?_ADCC_ThresholdISR 0021  
                                _memset 7B0A                    __size_of_help_button 0038  
                                clear_0 B3FA                                  clear_1 B40E  
                                clear_2 B420                                  clear_3 B42C  
                                clear_4 B438                                  clear_5 B444  
                                clear_6 B450                                  clear_7 B45C  
             __end_of_port_data_dma_ptr DB76                  __size_of_read_cal_data 01CA  
                                _printf C9F2                      _eaDogM_WriteString BF06  
               __end_of_DATAEE_ReadByte D3CA                                  _strcpy B642  
                             ?_ADCC_ISR 0021                                  _strlen BFAC  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize C786                          _PMD_Initialize DA92  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr D798  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan C9F2  
                          __mediumconst F87C                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay CBCA                        __end_of_spinners B388  
                      __end_of_vfprintf BDB4                              _StartTimer D0AE  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize CED4                       _SYSTEM_Initialize CD16  
                            __accesstop 0060                 __end_of__initialization B46E  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help DBBA                    __end_of_display_info DBB2  
             __end_of_CLKREF_Initialize DB6C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer D0EE  
                 _set_temp_display_help DAFA                        _clear_hid_pflags C8C2  
                 __end_of_TMR3_CallBack D850               __end_of_ADCC_ThresholdISR C85A  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush C178  
                        __pcstackCOMRAM 0021                              ___inthi_sp 1208  
                            ___intlo_sp 1904                            __pidataBANK0 D1E8  
                          __pidataBANK1 B716             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf BD08                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                      _DATAEE_WriteByte C85A                          ivt0x8_undefint 00AC  
                         __end_of_fputc AC1C                           __end_of_fputs C0E6  
                  _get_ac_charger_relay DB36                           __end_of_srand D2FC  
                 __end_of_TMR5_CallBack D82C                           __end_of_putch D9EE  
                  _set_ac_charger_relay DB0A                 __end_of_PWM8_Initialize DA7C  
               __end_of_TMR6_Initialize D566                       _adc_int_t_handler C53A  
                __end_of_PMD_Initialize DAA6                              __end_of_bp FA5D  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack D898  
                 __size_of_clear_switch 004E             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR DB84                   TMR3_ISR@CountCallBack 0098  
                        _clear_adc_scan DBC8                      __size_of_hid_input 0138  
                    __end_of_CRC_IsBusy DAFA                  __size_of_mode_lamp_dim 0018  
                      _CRC_ReverseValue B7E6                _UART2_RxInterruptHandler 008D  
             __end_of_SYSTEM_Initialize CD64                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer D16E  
                            __pbssBANK0 0060                              __pbssBANK1 01D0  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 9142                           _read_cal_data 9558  
               __end_of_conv_raw_result 64AC                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0093                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone D5B6  
                      _DMA1_DMADCNT_ISR DB78                         _convert_dac_raw AC1C  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma D3CA                   __end_of_wait_lcd_done D8BA  
              __end_of_cal_current_zero C32A        __end_of_TMR3_SetInterruptHandler D6A6  
                          _clear_switch CCC8                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler D656                              ??_TMR3_ISR 00E7  
               __end_of_ADCC_Initialize C7F0                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler C5B8                              ??_TMR6_ISR 0026  
                     __end_of___asfladd C6AA                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9                      __size_of_set_dac_a 0034  
                    __size_of_set_dac_b 0034    __end_of_ADCC_SetADTIInterruptHandler D71E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler D6F6  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                                 _CRCACCH 003963  
                               _CRCACCL 003962                                 _CRCDATH 003961  
                               _CRCDATL 003960                       _UART1_Receive_ISR D8DC  
                               _CRCCON0 003968                                 _CRCCON1 003969  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan DBCE                                 u1023_20 D262  
                               u1102_28 D818                                 u1023_26 D264  
                               u1016_20 DB40                                 _CRCXORH 003967  
                               _CRCXORL 003966                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR DB54                                 u1063_24 A72E  
                               u1063_25 A72A                                 _U1ERRIE 003DFA  
                               u1057_28 A62E                      __size_of_set_vterm 001E  
                               u1059_20 A648                                 u1059_21 A642  
                               _U1ERRIR 003DF9                                 u1091_48 D860  
                               u1148_44 C59E                                 u1148_45 C598  
                               _U2ERRIE 003DE2                                 u1093_28 D7F4  
                               _U2ERRIR 003DE1                                 u1099_48 D884  
                               u1365_20 4696                                 u1372_28 D83C  
                               u1367_20 4760                       _CRC_8BitDataWrite DAA6  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control C5B8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _NVMADRH 0039E1                                 _NVMADRL 0039E0  
                     __end_of_calc_bsoc 4A90                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _NVMCON2 0039E6  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch D4B8  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer D12E  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one DAEA              __end_of_set_load_relay_two DADA  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 9C14                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim DA0A                                 __Lparam 0000  
              __end_of_UART1_Initialize CE8C                       __end_of_hid_input A9CA  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 838C  
                               ___fladd 52BA                                 ___aomod 8AC6  
                               ___fldiv 5A76                                 ___awdiv A4C2  
                               ___flneg CDFC                                 ___awmod AE4C  
                               ___flmul 4A90                                 ___flsub CF62  
                               ___fltol A08C                                 ___lodiv 9D9A  
                               ___lomod A752               __end_of_UART1_Receive_ISR D8FE  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display B55E                                 __pcinit B388  
              __end_of_mode_lamp_bright DB36                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand DB1A  
                               __ramtop 2000               __end_of_CRC_8BitDataWrite DAB8  
                               __ptext0 0000                                 __ptext1 DA3A  
                               __ptext2 CB16                                 __ptext3 D8FE  
                               __ptext4 D2C8                                 __ptext5 D2FC  
                               __ptext6 D330                                 __ptext7 AC1C  
                               __ptext8 BBA4                                 __ptext9 C5B8  
                     __end_of_esr_check 80CE                       _UART2_Receive_ISR D91E  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize DA7C                                 us710999 8CF4  
                          __size_of_abs 0046                                 us800999 A882  
                          __size_of_pad 0114                       __end_of_init_bsoc 8AC6  
                               _isalpha CFA8                                 _isdigit D45A  
                               _ivln2_h FA5D                               _T3CONbits 003FA6  
                               _mode_sw 00A5                                 us699999 85F6  
                               us795999 9F04                       __end_of_lp_filter 98DE  
                               _islower D3FA                                 _isspace CC24  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac BBA4                __end_of_UART2_Initialize CB16  
                               _isupper D42A                               _CRC_Start DBC2  
            __size_of_SYSTEM_Initialize 004E                                 _sprintf B188  
                               _tolower C436                   __size_of_display_help 0008  
                               _utctime 01F2                 __end_of_convert_dac_raw AD34  
                 __size_of_display_info 0008                                 _strncmp 8D06  
                               _toupper C3B2                    end_of_initialization B46E  
             __size_of_convert_adc_data 00B8                               _SCANHADRH 00397A  
                             _SCANHADRL 003979                               _SCANHADRU 00397B  
                             _SCANLADRH 003977                               _SCANLADRL 003976  
                    _check_enter_button C6AA                               _SCANLADRU 003978  
                     __end_of_set_dac_a D364                       __end_of_set_dac_b D330  
   __end_of_UART2_SetRxInterruptHandler D606             _UART2_SetRxInterruptHandler D5DE  
                             i1u1397_20 A420                               i2u1151_48 D4FC  
                             i2u1153_48 C826                               i2u1153_49 C83A  
                             i2u1155_48 D75C                               i2u1157_48 D784  
               check_day_time@day_delay 0041                               i2u1159_48 D7AC  
                     __end_of_set_vterm D998                       __end_of_vfpfcnvrt 346E  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd DBDA  
             __end_of_UART2_Receive_ISR D93E                          wdtdelay@dcount 0074  
               __end_of_dac_spi_control C632             __size_of_current_sensor_cal 0BB4  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0090                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc DBE0                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler D67E                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler D62E                            _display_help DBB2  
                 _TMR5_InterruptHandler 007B                            _display_info DBAA  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags C928  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler D746  
           _ADCC_SetADIInterruptHandler D71E                              _update_lcd B078  
                       _calc_model_data 692C                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc CB16  
              __end_of_DATAEE_WriteByte C8C2                         _DMA1_Initialize C71C  
                   __end_of_check_range C53A                              _start_bsoc D8BA  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize DA50  
                 __end_of_get_vterm_ptr D4B8                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                __end_of_CRC_ReverseValue B8B4  
                        __end_of_WaitMs D2C8            __end_of_INTERRUPT_Initialize C98E  
                            _vterm_dump A9CA                          __end_of___flge A360  
                        __end_of___fleq B978                         _cal_current_10A BA32  
  __end_of_INT0_DefaultInterruptHandler DBEC   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler DBEA              __size_of_UART1_Receive_ISR 0022  
                       _DMA2_Initialize CBCA                           __pidataBIGRAM 77DE  
                        __end_of_efgtoa 24C2              __size_of_CRC_8BitDataWrite 0012  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 749E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 7DF6  
                        __end_of_printf CA54                __end_of_DMA1_DMADCNT_ISR DB82  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack D874  
                        __end_of_strcpy B716                          __end_of_strlen C04E  
                   start_initialization B388                 __size_of_write_cal_data 0118  
  __end_of_TMR5_DefaultInterruptHandler D292   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler D25A         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs CF62                   __end_of_INT1_CallBack D808  
             __size_of_set_display_info 001E                             __end_of_pad B078  
                  __size_of_Default_ISR 0006                 __size_of_CRC_Initialize 0092  
                  __end_of_send_lcd_cmd D0AE                          _switch_handler A610  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 9C14  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR DB62  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR DB90  
                   __end_of_hid_display 9142              __end_of_send_port_data_dma CCC8  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6         __end_of_CRC_CalculatedResultGet A08C  
                             _TimerDone D58E                           _ringBufS_init D566  
                           __pdataBANK0 00AE                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 0020                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize D398                __size_of_update_cal_data 0016  
               __end_of_calc_model_data 6D78                           _send_lcd_data D7C0  
                   __end_of_help_button D25A         __end_of_eaDogM_WriteStringAtPos BF06  
                   __end_of_BVSOC_TABLE F94D                               ___asfladd C632  
                  calc_model_data@bcror 006C                             __pbssBIGRAM 092A  
               __end_of_DMA1_Initialize C786                    calc_model_data@bvror 0070  
                           __pbssCOMRAM 003A                             _check_range C4BA  
      __end_of_INT0_SetInterruptHandler D6F6                           __pcstackBANK0 00E7  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler A752                             _CRCCON0bits 003968  
                           _CRCCON1bits 003969                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize DA66                _UART1_RxInterruptHandler 0087  
              _UART2_TxInterruptHandler 008A                               __end_of_T F9DD  
                      _convert_adc_data BAEC                               _calc_bsoc 4022  
             __size_of_ringBufS_put_dma 00AA                            _init_display B474  
                __end_of_DMA1_DMAOR_ISR DB9A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 007E                      calc_ror_data@bcror 0064  
                __size_of_TMR6_CallBack 0024                 __end_of_cal_current_10A BAEC  
               __end_of_DMA2_Initialize CC24                      calc_ror_data@bvror 0068  
                _PIN_MANAGER_Initialize C178                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set DBD4                           __pmediumconst F87C  
                             __ptext100 CC24                               __ptext101 D45A  
                             __ptext110 D0AE                               __ptext102 D97A  
                             __ptext111 DBAA                               __ptext103 DAFA  
                             __ptext200 0000                               __ptext120 5A76  
                             __ptext112 DBB2                               __ptext104 D998  
                             __ptext121 A1FE                               __ptext113 C6AA  
                             __ptext105 DA0A                               __ptext130 CAB6  
                             __ptext122 692C                               __ptext114 9C14  
                             __ptext106 DB28                               __ptext131 D5B6  
                             __ptext123 DBDA                               __ptext115 BC5A  
                             __ptext107 CFEC                               __ptext140 D67E  
                             __ptext132 D5DE                               __ptext124 D8BA  
                             __ptext116 5FF0                               __ptext108 D222  
                             __ptext141 DA22                               __ptext133 CE44  
                             __ptext125 9722                               __ptext117 CA54  
                             __ptext109 D58E                               __ptext150 D6A6  
                             __ptext142 DA50                               __ptext134 D606  
                             __ptext126 CF62                               __ptext118 D9B6  
                             __ptext151 D6CE                               __ptext143 DA66  
                             __ptext135 D53C                               __ptext127 52BA  
                             __ptext119 9354                               __ptext160 D7E4  
                             __ptext152 CBCA                               __ptext144 DA92  
                             __ptext136 D62E                               __ptext128 4A90  
                             __ptext161 DBE6                               __ptext153 C71C  
                             __ptext145 C178                               __ptext137 CE8C  
                             __ptext129 CD16                               __ptext170 A360  
                             __ptext162 A610                               __ptext154 C20A  
                             __ptext146 DA7C                               __ptext138 D656  
                             __ptext171 D12E                               __ptext163 B560  
                             __ptext155 DB62                               __ptext147 C928  
                             __ptext139 CED4                               __ptext180 DBEA  
                             __ptext172 D82C                               __ptext164 D0EE  
                             __ptext156 C786                               __ptext148 DBBA  
                             __ptext181 DBE0                               __ptext173 DBE8  
                             __ptext165 D808                               __ptext157 D6F6  
                             __ptext149 D364                               __ptext190 D510  
                             __ptext182 D4E4                               __ptext174 4022  
                             __ptext166 D25A                               __ptext158 D71E  
                             __ptext191 D798                               __ptext183 C53A  
                             __ptext175 CC76                               __ptext167 98DE  
                             __ptext159 D170                               __ptext192 D91E  
                             __ptext184 DBEC                               __ptext176 DB6C  
                             __ptext168 DB0A                               __ptext193 D9F0  
                             __ptext185 DBEE                               __ptext177 C632  
                             __ptext169 DB36                               __ptext194 D874  
                             __ptext186 C7F0                               __ptext178 DB44  
                             __ptext195 CD64                               __ptext187 D748  
                             __ptext179 D850                               __ptext196 DB54  
                             __ptext188 D8DC                               __ptext197 DB78  
                             __ptext189 D770                               __ptext198 DB84  
                             __ptext199 DB90                               _hid_input A892  
                    __end_of_StartTimer D0EE                      _set_load_relay_one DADA  
                    _set_load_relay_two DACA                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR D4E4                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 01EE                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 7DF6  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 8880                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                __size_of_DATAEE_ReadByte 0032  
                             _lp_filter 9722                             _hid_display 8F26  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize C928                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR DB44                                _INT1_ISR D170  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _SCANCON0 00397C  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _SCANTRIG 00397D                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0229                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a D330  
                             _set_dac_b D2FC                               _ring_buf1 0394  
                             _ring_buf2 0400                                _PIR0bits 0039A0  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack D82C  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm D97A  
                   __size_of_update_lcd 0110                             _help_button D222  
                              _TMR3_ISR A360                             _BVSOC_TABLE F87D  
                              _TMR5_ISR B560                                _TMR6_ISR D9F0  
                             _port_data 05FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 24C2                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack D808  
                            _ADCON0bits 003EF8                      __end_of_check_help 9354  
                             _start_lcd DBD4                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack D874  
                        _write_cal_data AD34                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc DBDA  
                      _set_display_info D998                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                          _CRC_Initialize C20A  
                           _INTCON0bits 003FD2                               copy_data0 B39C  
                             copy_data1 B3C2                               copy_data2 B3E4  
      __size_of_CRC_CalculatedResultGet 0172                _INT0_SetInterruptHandler D6CE  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler D5DE  
           _UART2_SetTxInterruptHandler D5B6                            _uart1RxCount 00A9  
                          _uart2RxCount 00A6                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
            __end_of_current_sensor_cal 4022                __size_of_conv_raw_result 04BC  
                         _wait_lcd_done D898                            _send_lcd_cmd D06E  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler DBEE                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch D4E4  
               __size_of_check_day_time 01A0                  __end_of_write_cal_data AE4C  
                 __end_of_DMA1_DMAA_ISR DB8E                      ___fpclassifyf@F463 0060  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 9354                  __end_of_CRC_Initialize C29C  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0072  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand DB28  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                      __size_of_set_dac 00B6                                __ptext10 9558  
                              __ptext11 D398                                __ptext20 B978  
                              __ptext12 D3CA                                __ptext21 8F26  
                              __ptext13 B474                                __ptext30 AD34  
                              __ptext22 A892                                __ptext14 D7C0  
                              __ptext31 C85A                                __ptext23 7DF6  
                              __ptext15 D02E                                __ptext40 B292  
                              __ptext32 DBC2                                __ptext24 D1AE  
                              __ptext16 D06E                                __ptext41 D4B8  
                              __ptext33 DAEA                                __ptext25 DB9A  
                              __ptext17 D93E                                __ptext50 A9CA  
                              __ptext42 CCC8                                __ptext34 9F1A  
                              __ptext26 DACA                                __ptext18 D566  
                              __ptext51 B188                                __ptext43 DBC8  
                              __ptext35 B7E6                                __ptext27 DADA  
                              __ptext19 8880                                __ptext60 BF06  
                              __ptext52 D48A                                __ptext44 C29C  
                              __ptext36 DAA6                                __ptext28 DB1A  
                              __ptext61 DBCE                                __ptext53 D292  
                              __ptext45 BA32                                __ptext37 C98E  
                              __ptext29 346E                                __ptext70 D3FA  
                              __ptext62 DBD4                                __ptext54 B078  
                              __ptext46 C4BA                                __ptext38 DAB8  
                              __ptext71 CFA8                                __ptext63 C0E6  
                              __ptext55 BE5E                                __ptext47 BAEC  
                              __ptext39 DBA2                                __ptext80 B642  
                              __ptext72 749E                                __ptext64 7B0A  
                              __ptext56 D95C                                __ptext48 C8C2  
                              __ptext81 7132                                __ptext73 A752  
                              __ptext65 C9F2                                __ptext57 D898  
                              __ptext49 9142                                __ptext90 8AC6  
                              __ptext82 9A7E                                __ptext74 9D9A  
                              __ptext66 BD08                                __ptext58 CB70  
                              __ptext91 838C                                __ptext83 A08C  
                              __ptext75 8D06                                __ptext67 24C2  
                              __ptext59 CDB2                                __ptext92 C32A  
                              __ptext84 CDFC                                __ptext76 80CE  
                              __ptext68 6D78                                __ptext93 AF64  
                              __ptext85 B8B4                                __ptext77 127E  
                              __ptext69 C3B2                                __ptext94 BFAC  
                              __ptext86 AE4C                                __ptext78 C436  
                              __ptext95 C04E                                __ptext87 A4C2  
                              __ptext79 D42A                                __ptext96 AAF8  
                              __ptext88 64AC                                __ptext97 D9D4  
                              __ptext89 CF1C                                __ptext98 BDB4  
                              __ptext99 860C                        __size_of_isupper 0030  
                 __end_of_read_cal_data 9722                                us1208999 64C6  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1277999 80E0                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                                us1289999 7504  
                              us1298999 6DF8                        _ringBufS_put_dma BDB4  
                  __end_of_Volts_to_SOC BA32                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 127E  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                              _CRC_IsBusy DAEA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma D3FA                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0084  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion DACA                                _spi_link 01D0  
                              _wdtdelay CB70              __end_of_UART2_Transmit_ISR D53C  
                              _spinners B292                                _vfprintf BD08  
              __end_of_convert_adc_data BBA4              __end_of_PWM8_LoadDutyValue D02E  
  __end_of_TMR3_DefaultInterruptHandler DBEA   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler DBE8    __end_of_INT1_DefaultInterruptHandler DBE8  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler DBE6  
                    _send_port_data_dma CC76                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00AA  
                        _get_raw_result D9B6                             _NVMCON1bits 0039E5  
                           _uart2TxHead 00A8                             _uart2RxTail 00A7  
                             spinners@s 01E4                             _uart2TxTail 0046  
             __size_of_cal_current_zero 008E                            _wait_lcd_set DBCE  
                    _EXT_INT_Initialize D364    __end_of_TMR6_DefaultInterruptHandler CDB2  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler CD64  
                     _send_lcd_data_dma CDB2    __end_of_ADCC_DefaultInterruptHandler DBEE  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler DBEC  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long D02E          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help DB0A                   __end_of_calc_ror_data 9D9A  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString BFAC  
                 __end_of_mode_lamp_dim DA22                 __end_of_adc_int_handler DBF0  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd B188  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc CB70  
                    __end_of_start_bsoc D8DC                          _FVR_Initialize DBBA  
                __end_of_get_raw_result D9D4                        _send_lcd_cmd_dma D95C  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 009C  
      __end_of_INT1_SetInterruptHandler D6CE               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma CDFC  
                      ??_DMA1_DMAOR_ISR 0027                 _CRC_CalculatedResultGet 9F1A  
             __end_of_send_lcd_cmd_long D06E                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR DBE6          __end_of_PIN_MANAGER_Initialize C20A  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump AAF8  
               _eaDogM_WriteStringAtPos BE5E                           _get_vterm_ptr D48A  
                        _check_adc_scan DB9A               __size_of_UART2_Initialize 0060  
